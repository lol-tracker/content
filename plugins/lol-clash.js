(() => {
    var e = [, e => {
            "use strict";
            let t;

            function n() {
                return t || (console.error("The `provider` object has not been set, please do so by calling the `init` method."), null)
            }
            const a = {
                init: function(e, n) {
                    return t = e, this.add(n)
                },
                _getValue: function(e, n) {
                    let a;
                    return "function" == typeof n ? (a = n(t), a || console.warn("The function for key " + e + " returned a falsy value: ", a)) : "string" == typeof n ? (a = t.get(n), a || console.warn("The provider `get` invocation for the key " + e + " returned a falsy value: ", a)) : "object" == typeof n && (a = n), a
                },
                add: function(e) {
                    e = e || {};
                    const t = [],
                        n = this;
                    return Object.keys(e).forEach((function(a) {
                        const s = e[a],
                            i = n._getValue(a, s);
                        i && i.then ? (i.then((function(e) {
                            e || console.warn("The promise for the key " + a + " resolved with a falsy value: ", e), n._addValue(a, e)
                        })), t.push(i)) : n._addValue(a, i)
                    })), Promise.all(t)
                },
                _addValue: function(e, t) {
                    this[e] = t
                },
                provider: function() {
                    return console.error("The function `provider` has been deprecated, please use `getProvider`", (new Error).stack), n()
                },
                getProvider: function() {
                    return n()
                }
            };
            e.exports = a
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(3)) && a.__esModule ? a : {
                    default: a
                };
            class o {
                static getLocIfExists(e, t, n = null) {
                    return e.exists(t) ? e.get(t) : null !== n ? e.get(n) : t
                }
                static padZeros(e) {
                    return e < 10 ? "0" + e : e.toString()
                }
                static getCurrentTime() {
                    return Date.now()
                }
                static clamp(e, t, n) {
                    return Math.max(Math.min(e, n), t)
                }
                static clamp01(e) {
                    return Math.max(Math.min(e, 1), 0)
                }
                static lerp(e, t, n) {
                    return e + (t - e) * n
                }
                static isNumberOk(e) {
                    return null != e && !Number.isNaN(e)
                }
                static waitForElement(e, t, n) {
                    return new Promise((function(a, i) {
                        if (!e || !e.querySelector) return void i();
                        const o = e.querySelector(t);
                        if (o) return void a(o);
                        const r = new MutationObserver((e => {
                            e.forEach((function(e) {
                                const n = Array.from(e.addedNodes);
                                for (const e of n)
                                    if (e.matches && e.matches(t)) return r.disconnect(), void a(e)
                            }))
                        }));
                        r.observe(e, s._.assign({
                            childList: !0
                        }, n))
                    }))
                }
                static waitForEmber(e, t, n = (() => !s._.isNil(s.Ember.get(e, t)))) {
                    let a, i, o = !1;
                    const r = new Promise((function(r, l) {
                        i = l, !s._.isNil(e) && s.Ember.Observable.detect(e) && s._.isString(t) && s._.isFunction(n) ? n() ? r() : (a = function() {
                            n() && (s.Ember.removeObserver(e, t, a), o = !1, r())
                        }, s.Ember.addObserver(e, t, a), o = !0) : l(new Error("Invalid argument"))
                    }));
                    return r.cancel = function(n = !1, r) {
                        o && (o = !1, s.Ember.removeObserver(e, t, a)), n && i(r)
                    }, r
                }
                static waitForEvent(e, t) {
                    return new Promise((n => {
                        if (!e || !e.addEventListener) return s.logger.error("common-utils::waitForEvent -- invalid target"), Promise.resolve();
                        const a = () => {
                            e.removeEventListener(t, a), n()
                        };
                        e.addEventListener(t, a)
                    }))
                }
                static resolveAfter(e, t) {
                    return o._resolveOrRejectAfter(!0, e, t)
                }
                static rejectAfter(e, t) {
                    return s._.isString(t) && (t = new Error(t)), o._resolveOrRejectAfter(!1, e, t)
                }
                static _resolveOrRejectAfter(e, t, n) {
                    if (!s._.isFinite(t) || t < 0) throw new Error("Invalid milliseconds");
                    const a = new Promise((function(s, i) {
                        setTimeout((function() {
                            a.settled = !0, e ? s(n) : i(n)
                        }), t)
                    }));
                    return a.settled = !1, a
                }
                static createDomNode(e, t = null) {
                    const n = s.Ember.$(document.createElement("div"));
                    if (n.append(e), t) {
                        const e = s.Ember.$(document.createElement("style"));
                        e.append(t), n.children().append(e)
                    }
                    return n.children().get(0)
                }
                static destroyEmberApp(e) {
                    e && e.componentPromise && e.componentPromise.then((e => s.Ember.run((() => {
                        e.app.destroy()
                    }))))
                }
                static setBoolDuringPromise(e, t, n) {
                    t.set(n, !0);
                    const a = () => s.Ember.run((() => t.set(n, !1)));
                    e.then(a).catch(a)
                }
                static isGameflowInGame(e) {
                    if (e) switch (e) {
                        case "ChampSelect":
                        case "GameStart":
                        case "FailedToLaunch":
                        case "InProgress":
                        case "Reconnect":
                        case "WaitingForStats":
                        case "PreEndOfGame":
                        case "EndOfGame":
                            return !0
                    }
                    return !1
                }
                static isInGameflowLobby(e) {
                    if (e) switch (e) {
                        case "Lobby":
                        case "Matchmaking":
                        case "ReadyCheck":
                            return !0
                    }
                    return !1
                }
                static denormalizeSvgPath(e, t, n) {
                    if (!e || !t || !n) return e;
                    t = Math.round(t) - 2, n = Math.round(n) - 2;
                    const a = Math.round(.5 * t),
                        s = Math.round(.5 * n);
                    return e = (e = (e = (e = (e = (e = e.replace(/50,/g, `${a},`)).replace(/100,/g, `${t},`)).replace(/,50/g, `,${s}`)).replace(/,100/g, `,${n}`)).replace(/0,/g, "1,")).replace(/,0/g, ",1")
                }
                static delayedPromise(e) {
                    return new Promise((t => s.Ember.run.later(t, e)))
                }
                static emberDeepCopyArray(e, t = s.Ember.Object) {
                    if (!s.Ember.isArray(e)) return;
                    const n = [];
                    for (const a of e) n.push(t.create(s.Ember.copy(a)));
                    return n
                }
                static compareRosterIds(e, t) {
                    return String(e) === String(t)
                }
                static cubicBezier() {
                    return new s.gsap.Ease((0, i.default)(...arguments))
                }
                static frac(e) {
                    return e - Math.trunc(e)
                }
                static getSortedPhases(e) {
                    let t = s._.cloneDeep(e);
                    return t = s._.orderBy(t, ["period", "cancelled", "lockinStartTime"], ["asc"]), t = s._.filter(t, ((e, t, n) => !e.cancelled || 0 === t || e.period !== n[t - 1].period)), t
                }
            }
            t.default = o
        }, e => {
            var t = .1,
                n = "function" == typeof Float32Array;

            function a(e, t) {
                return 1 - 3 * t + 3 * e
            }

            function s(e, t) {
                return 3 * t - 6 * e
            }

            function i(e) {
                return 3 * e
            }

            function o(e, t, n) {
                return ((a(t, n) * e + s(t, n)) * e + i(t)) * e
            }

            function r(e, t, n) {
                return 3 * a(t, n) * e * e + 2 * s(t, n) * e + i(t)
            }

            function l(e) {
                return e
            }
            e.exports = function(e, a, s, i) {
                if (!(0 <= e && e <= 1 && 0 <= s && s <= 1)) throw new Error("bezier x values must be in [0, 1] range");
                if (e === a && s === i) return l;
                for (var c = n ? new Float32Array(11) : new Array(11), d = 0; d < 11; ++d) c[d] = o(d * t, e, s);

                function m(n) {
                    for (var a = 0, i = 1; 10 !== i && c[i] <= n; ++i) a += t;
                    --i;
                    var l = a + (n - c[i]) / (c[i + 1] - c[i]) * t,
                        d = r(l, e, s);
                    return d >= .001 ? function(e, t, n, a) {
                        for (var s = 0; s < 4; ++s) {
                            var i = r(t, n, a);
                            if (0 === i) return t;
                            t -= (o(t, n, a) - e) / i
                        }
                        return t
                    }(n, l, e, s) : 0 === d ? l : function(e, t, n, a, s) {
                        var i, r, l = 0;
                        do {
                            (i = o(r = t + (n - t) / 2, a, s) - e) > 0 ? n = r : t = r
                        } while (Math.abs(i) > 1e-7 && ++l < 10);
                        return r
                    }(n, a, a + t, e, s)
                }
                return function(e) {
                    return 0 === e ? 0 : 1 === e ? 1 : o(m(e), a, i)
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            t.default = class {
                static getInstance() {
                    return this.instance || (this.instance = {
                        uiChannel: a.Audio.getChannel("sfx-ui"),
                        soundMap: {},
                        dataBinding: (0, a.dataBinding)("/fe")
                    }), this.instance
                }
                static playAudio(e, t = !1) {
                    const n = "/lol-clash/assets/audio/sfx-clash-" + e + ".ogg",
                        s = this;
                    return this.getInstance().dataBinding.get(`${n}`).then((function() {
                        let a = null;
                        s.getInstance().soundMap[e] ? a = s.getInstance().soundMap[e] : (a = s.getInstance().uiChannel.createSound("/fe" + n, {
                            isLoop: t
                        }), s.getInstance().soundMap[e] = a), a && a.play()
                    })).catch((function(t) {
                        a.logger.warning(`AudioManager -- Error playing audio ${e}`, t)
                    }))
                }
                static stopAudio(e, t = !1, n = 1e3) {
                    if (e && this.getInstance().soundMap && this.getInstance().soundMap[e]) {
                        const a = this.getInstance().soundMap[e];
                        a.isPlaying() && (t ? a.fadeOut(n) : a.stop()), delete this.getInstance().soundMap[e]
                    }
                }
                static stopAllAudio() {
                    const {
                        soundMap: e
                    } = this.getInstance();
                    if (e && e instanceof Object)
                        for (const t in e) e.hasOwnProperty(t) && e[t] && e[t].isPlaying() && e[t].stop()
                }
                static destroyInstance() {
                    this.instance = null
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = (e, t, n) => {
                if (!e || !a.Util.isNumberOk(t) || !a.Util.isNumberOk(n)) return "";
                const s = e["clash-logos"];
                return s ? s[`logo_${t}_${n}`] : ""
            };
            t.default = class {
                constructor() {
                    this._gameDataBinding = (0, a.dataBinding)("/lol-game-data", (0, a.getProvider)().getSocket()), this._gameDataPromise = this._gameDataBinding.get("assets/v1/generic-assets.json"), this.genericAssetsComputed = a.Ember.Object.create({
                        ready: !1
                    }), this._gameDataPromise.then((e => {
                        this._genericAssets = e, this.genericAssetsComputed.set("ready", !0)
                    })), this.getLogoPath = (e, t) => s(this._genericAssets, e, t), this.getLogoPathPromise = (e, t) => a.Util.isNumberOk(e) && a.Util.isNumberOk(t) ? this._gameDataPromise.then((n => s(n, e, t))) : ""
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = Object.freeze(["t", "d", "k", 0, "s", "t"]);
            class i {
                static createLottieAnim(e, t, n, s, o = {}, r = {}) {
                    if (!t || !t.length) return a.logger.warning("LottieAnim -- invalid jsonPath"), Promise.reject();
                    if (!e || !e.length) return a.logger.warning("LottieAnim -- cannot play anim on a null target"), Promise.reject();
                    const l = e && e.length ? e.get(0) : null,
                        c = t.split("/"),
                        d = c.length > 0 ? c[c.length - 1] : t;
                    a.logger.trace(`LottieAnim -- playing '${d}' (path: ${t}) on {target} with {variables} and {values}`, l, n, s);
                    const m = i.createAnimElement(e);
                    m.attr({
                        "anim-name": d
                    }), m.addClass("clash-lottie-animation");
                    return i.loadLottieAnim(t, a._.assign({
                        container: m.get(0),
                        renderer: "svg",
                        loop: !1,
                        autoplay: !1
                    }, o), (t => {
                        t && n && s && i.setLottieVariables(t, n, s);
                        const a = t.w + (r.fudgeSizeX || 0),
                            o = t.h + (r.fudgeSizeY || 0);
                        m.css({
                            width: `${a}px`,
                            height: `${o}px`
                        }), r.insertAfter ? m.insertAfter(r.insertAfter) : r.prepend ? m.prependTo(e) : m.appendTo(e)
                    })).then((e => (r.playImmediately && e && e.play(), {
                        name: d,
                        lottie: e,
                        container: m,
                        cleanup: () => {
                            e && e.destroy(), m.remove()
                        }
                    }))).catch((e => {
                        a.logger.error("LottieAnim -- *** ERROR *** in promise:", e)
                    }))
                }
                static loadLottieAnim(e, t, n) {
                    return new Promise((s => {
                        a.Ember.$.getJSON(e, (e => {
                            n && n(e), t = a._.assign(t, {
                                animationData: e
                            });
                            const i = a.lottie.loadAnimation(t);
                            s(i)
                        }))
                    }))
                }
                static createAnimElement(e) {
                    const t = document.createElement("div"),
                        n = a.Ember.$(t);
                    return n.appendTo(e), n
                }
                static setLottieVariables(e, t, n) {
                    if (t && n)
                        for (const a of Object.keys(n)) i.setLottieVariable(e, t, a, n[a])
                }
                static setLottieVariable(e, t, n, i) {
                    if (!e) return void a.logger.error("LottieAnim.setLottieVariable -- no animationData");
                    const o = t[n];
                    if (!o) return;
                    let r = e;
                    for (let e = 0; e < o.length - 1; ++e) {
                        const t = o[e];
                        r = r[t], r || a.logger.error(`LottieAnim.setLottieVariable -- no step ${t} at ${e+1} levels deep in anim data for ${n}, fullpath = `, o.join("."))
                    }
                    r[o[o.length - 1]] = i, a._.isEqual(s, o.slice(-s.length)) && (r.finalText = i.split(""))
                }
            }
            t.default = i
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            let n = null;
            t.default = class {
                constructor(e) {
                    n = e
                }
                scoutTeam(e) {
                    n._scoutTeam(e)
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = n(9),
                i = x(n(10)),
                o = x(n(11)),
                r = x(n(12)),
                l = x(n(13)),
                c = x(n(14)),
                d = x(n(40)),
                m = x(n(42)),
                u = x(n(43)),
                p = x(n(44)),
                h = x(n(45)),
                g = x(n(46)),
                f = x(n(47)),
                _ = x(n(50)),
                b = x(n(51));

            function x(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const y = "rcp-fe-lol-clash",
                k = "/namespaces/ClashConfig/FindTeamViewEnabled",
                v = ["ReadyCheck", "ChampSelect", "GameStart", "FailedToLaunch", "InProgress", "Reconnect", "WaitingForStats", "PreEndOfGame", "EndOfGame", "TerminatedInError"];
            t.default = class {
                constructor(e) {
                    a.logger.trace("constructing PrivateAPI"), this._navigationApi = e, this._tra = this._createTraService(), this._createStartupEmberApplicationDefinitions(), this._clashBinding = (0, a.dataBinding)("/lol-clash", (0, a.getProvider)().getSocket()), this._gameflowBinding = (0, a.dataBinding)("/lol-gameflow", (0, a.getProvider)().getSocket()), this._configBinding = (0, a.dataBinding)("/lol-platform-config/v1", (0, a.getProvider)().getSocket()), this._gameflowPhase = "None", this._simpleStateFlags = [], this._clashTelemetry = new h.default;
                    const t = () => this._isNavigatingToClash = !1;
                    a.Viewport.main().on("push", t), a.Viewport.fullScreen().on("push", t), this._appData = a.Ember.Object.create({
                        currentTabId: s.ClashTab.INVALID,
                        tournamentId: s.INVALID_TOURNAMENT_ID,
                        isLoading: !0,
                        currentTournamentSummary: null
                    }), this._appData.navTabs = {}, this._appData.hasNewTab = !1, this._targetTab = null, this._appData.selectTournament = this._selectTournamentId.bind(this), this._loginModalObserver = new d.default(this._tra, this), this._rewardsModalObserver = new m.default(this._tra, this), this._clashStartModalObserver = new u.default(this._tra), this._antiCheatConfirmationModal = new _.default(this._tra), this._eosCelebration = new b.default, (0, f.default)(), this._clashPersistentApp = new r.default(this), this._clashStateObserver = new l.default({
                        onVisible: e => {
                            e && (this._navigationApi.initialize(this._clashStateObserver.isEnabled), this._initSubnavigation())
                        },
                        onReady: () => {
                            this._updatePersistentPanel(), this._updateGameInfoPanel()
                        },
                        onEnabled: e => {
                            this._navigationApi.setEnabled(e), this._updatePersistentPanel(), this._updateGameInfoPanel(), e ? (this._isGlobalEmberAppsDefined || (this._createGlobalEmberApplicationDefinitions(), this._clashPersistentApp.createEmberApplication(), this._isGlobalEmberAppsDefined = !0), this._inventoryUpdateObserver = new g.default(this._appData), this._clashBinding.addObserver("/v1/tournament-summary", this, (e => {
                                this._navigationApi.isActive() && (this._isNavigatingToClash = !0), this._updateTournamentSummary(e)
                            })), this._clashBinding.addObserver("/v1/simple-state-flags", this, (e => {
                                this._simpleStateFlags = [];
                                for (const t of e) t.id.startsWith("updatedbracket") && t.status !== s.SimpleStateStatus.ACKNOWLEDGED && this._simpleStateFlags.push(t);
                                this._updateBracketTabAlert()
                            })), this._gameflowBinding.addObserver("/v1/session", this, (e => {
                                e = e || {}, this._gameflowPhase = e.phase || "None", this._updatePersistentPanel()
                            })), this.addConfigListeners()) : (this._clashBinding.removeObserver(this), this._gameflowBinding.removeObserver(this), this.removeConfigListeners())
                        },
                        onDisabledConfig: e => {
                            let t = "";
                            if (e.disabledReason) {
                                const n = new Date(e.estimatedEnableTimeMillis).toLocaleDateString();
                                t = this._tra.formatString(e.disabledReason, {
                                    clashEnabledDate: n
                                })
                            }
                            this._navigationApi.setDisabledTooltip(t)
                        },
                        onClashAvailable: e => {
                            this._loginModalObserver.setClashAvailable(e)
                        },
                        onPlaymodeRestricted: () => {
                            this._updateGameInfoPanel()
                        }
                    }), this.clashInviteDialogComponents = {
                        InviteDialogComponent: n(53),
                        InviteDialogGroupComponent: n(57),
                        InviteDialogThirdPartyGroupComponent: n(60),
                        InviteDialogLftGroupComponent: n(63),
                        InviteDialogSuggestedGroupComponent: n(66),
                        InviteDialogPendingGroupComponent: n(69),
                        InviteDialogSummonerDisplayComponent: n(72)
                    }
                }
                addConfigListeners() {
                    this._configBinding.addObserver(k, this, (e => {
                        this._isFindTeamViewEnabled = !!e
                    }))
                }
                removeConfigListeners() {
                    this._configBinding.removeObserver(k, this)
                }
                open(e) {
                    a.logger.trace("external api called - open"), this._selectTournamentId(s.INVALID_TOURNAMENT_ID), this._targetTab = e || null, this._openInternal()
                }
                openWithTournament(e, t) {
                    a.logger.trace("external api called - openWithTournament", e), this._selectTournamentId(e), this._targetTab = t || null, this._openInternal()
                }
                openViewRoster(e, t) {
                    a.logger.trace("external api called - openViewRoster", {
                        tournamentId: e,
                        rosterId: t
                    }), this._selectTournamentId(e);
                    this._viewRosterModal = new c.default(this, this._tra, e, t, (() => {
                        this._viewRosterModal = null, this._clashPersistentApp.setViewRosterId(null)
                    }).bind()), this._clashPersistentApp.setViewRosterId(t), o.default.stopAutoShowTooltip()
                }
                getCurrentRosterId() {
                    return this._appData && this._appData.currentTournamentSummary && this._appData.currentTournamentSummary.rosterId
                }
                getCurrentTournamentId() {
                    return this._appData && this._appData.currentTournamentSummary && this._appData.currentTournamentSummary.tournamentId
                }
                sendTelemetryEvent(e, t = {}) {
                    const n = Object.assign({}, t);
                    n.tournamentId = this.getCurrentTournamentId(), n.rosterId = this.getCurrentRosterId(), this._clashTelemetry.sendEvent(e, n)
                }
                sendClientState(e = {}) {
                    const t = Object.assign({}, e);
                    try {
                        t.viewports = a.Viewport.getAllRenderStackNames(), Object.assign(t, a.Viewport.getTopRenderStackNames())
                    } catch (e) {
                        t.error = e.toString()
                    }
                    this.sendTelemetryEvent("ClientState", t)
                }
                showAlert(e) {
                    this._navigationApi.showAlert(e)
                }
                forceAllowNav() {
                    this._forceAllowNav = !0
                }
                getTra() {
                    return this._tra
                }
                getTournamentSummary(e) {
                    return this._tournamentSummary ? this._tournamentSummary.find((t => t.tournamentId === e)) : null
                }
                getClashAvailable() {
                    return this._clashStateObserver.isClashAvailable
                }
                _openInternal() {
                    !this._forceAllowNav && v.indexOf(this._gameflowPhase) > -1 || (this._navigationApi.isActive() ? (a.logger.trace("already on Clash tab, calling _onClashShown manually to force update"), this._onClashShown(!0)) : this._navigationApi.setActive(!0), this._forceAllowNav = !1)
                }
                _initSubnavigation() {
                    if (a.logger.trace("initializing subnavigation..."), this._isSubnavInitialized) return;
                    this._isSubnavInitialized = !0;
                    const e = this._navigationApi.getNavigation().subnavigationApi;
                    return e.addEventListener("screenShown", this._onClashShown.bind(this)), e.addEventListener("screenHidden", this._onClashHidden.bind(this)), this._tra.ready().then((() => {
                        this._createNavTab(s.ClashTab.HUB, {
                            id: "competitive_subsection_clash",
                            title: this._tra.get("clash_nav_tab_hub"),
                            priority: 10,
                            enabled: !0
                        }, !0), this._createNavTab(s.ClashTab.TEAM, {
                            id: "competitive_subsection_clash_team",
                            title: this._tra.get("clash_nav_tab_team"),
                            priority: 20,
                            enabled: !1
                        }, !1), this._createNavTab(s.ClashTab.BRACKET, {
                            id: "competitive_subsection_clash_bracket",
                            title: this._tra.get("clash_nav_tab_bracket"),
                            priority: 30,
                            enabled: !1
                        }, !1), this._createNavTab(s.ClashTab.WINNERS, {
                            id: "competitive_subsection_clash_winners",
                            title: this._tra.get("clash_nav_tab_winners"),
                            priority: 40,
                            enabled: !0
                        }, !1), this._createNavTab(s.ClashTab.AWARDS, {
                            id: "competitive_subsection_clash_awards",
                            title: this._tra.get("clash_nav_tab_awards"),
                            priority: 50,
                            enabled: !0
                        }, !1), a.Navigation.tournamentsButtonSubscribe(this.open.bind(this));
                        const e = this._appData;
                        this._configBinding.addObserver("/namespaces/ClashConfig/WinnersTabEnabled", (t => {
                            const n = null === t || "" === t || void 0 === t || t;
                            e.navTabs[s.ClashTab.WINNERS].setEnabled(n)
                        })), this._configBinding.addObserver("/namespaces/ClashConfig/AwardsTabEnabled", (t => {
                            const n = null === t || "" === t || void 0 === t || t;
                            e.navTabs[s.ClashTab.AWARDS].setEnabled(n)
                        })), a.logger.trace("subnavigation initialized!")
                    }))
                }
                _createEmberAppIfNeeded() {
                    this._application || (a.logger.trace("creating clash ember application"), this._createMainEmberApplicationDefinitions(), this._application = a.componentFactory.create(y, {
                        appData: this._appData
                    }), this._rootElement = this._application.domNode)
                }
                _createNavTab(e, t, n) {
                    const i = a.Ember.$(document.createElement("div"));
                    i.addClass("clash-nav-tab-" + e), t.render = () => i.get(0);
                    const o = this._navigationApi.getNavigation().subnavigationApi.registerSection(t),
                        r = () => {
                            a.logger.trace(`nav tab [${e}] selected`), this._onShowClash(), this._appData.hasNewTab = !0, this._clashTelemetry.sendEvent("ClashTab", {
                                tab: e
                            }), o.setShowAlert(!1)
                        };
                    o.addEventListener("selected", r.bind(this));
                    const l = () => {
                        a.logger.trace(`tab willShow, setting currentTabId to [${e}]`), this._createEmberAppIfNeeded(), i.append(this._rootElement), this._setCurrentTabId(e), this._appData.hasNewTab = !1
                    };
                    o.addEventListener("willShow", l.bind(this)), o.addEventListener("hide", (() => {
                        a.logger.trace(`old tab hide [${e}]`), this._targetTab && this._setCurrentTabId(this._targetTab), this._appData.hasNewTab || this._onHideClash()
                    }));
                    const c = t.enabled;
                    this._appData.navTabs[e] = {
                        show: () => {
                            const {
                                isEnabled: n
                            } = this._appData.navTabs[e];
                            if (!n) return void a.logger.trace(`not showing [${e}] because it is not enabled`);
                            this._navigationApi.setDefaultSubsectionId(t.id), a.logger.trace(`calling tab [${e}].show()`), r(), o.show();
                            this._appData.get("currentTabId") === s.ClashTab.INVALID && l()
                        },
                        setEnabled: (t, n = !0) => {
                            const {
                                isEnabled: s
                            } = this._appData.navTabs[e];
                            s !== t && (a.logger.trace(`nav tab [${e}] is now ${t?"enabled":"disabled"}`), o.setEnabled(t), this._appData.navTabs[e].isEnabled = t, this._appData.navTabs[e].allowDefaultNavigation = n, t || this._appData.navTabs[e].setAlert(!1))
                        },
                        setTooltip: e => {
                            o.setTooltip(e)
                        },
                        setAlert: e => {
                            o.setShowAlert(e)
                        },
                        setName: e => {
                            o.setTitle(e)
                        },
                        isEnabled: c,
                        allowDefaultNavigation: n
                    }
                }
                _setCurrentTabId(e) {
                    const t = this._appData.get("currentTabId");
                    e !== t && (this._appData.set("previousTabId", t), this._appData.set("currentTabId", e), a.logger.trace(`setCurrentTabId [${t}] -> [${e}]`))
                }
                _onClashShown(e) {
                    !e && v.indexOf(this._gameflowPhase) > -1 || (a.logger.trace("refresh -- Clash tab selected. refreshing clash..."), this._isNavigatingToClash = !0, this.showAlert(!1), this._antiCheatConfirmationModal.tryShowModal(), this._rewardsModalObserver.tryShowModal(), this._startLoading(), this._clashBinding.post("/v1/refresh").then((() => {
                        a.logger.trace("refresh -- tournament info refreshed, updating tournament summary...");
                        let e = this._appData.get("tournamentId");
                        this._clashBinding.get("/v1/tournament-summary", {
                            skipCache: !0
                        }).then((t => {
                            a.logger.trace("refresh -- tournament summary updated"), this._endLoading(), this._updateTournamentSummary(t, e), e = this._appData.get("tournamentId"), this._selectTournamentId(e), this._openToTab()
                        }))
                    }), (() => {
                        a.logger.error("refresh -- tournament info refresh failed")
                    })))
                }
                _onClashHidden() {
                    a.logger.trace("Clash tab deselected. cleaning clash..."), this._onHideClash()
                }
                _onShowClash() {
                    a.logger.trace("clash is now visible"), a.Navigation.setIsShowingTournaments(!0), this._clashPersistentApp.setIsViewingClash(!0)
                }
                _onHideClash() {
                    a.logger.trace("clash is no longer visible, setting currentTabId to", s.ClashTab.INVALID), this._setCurrentTabId(s.ClashTab.INVALID), a.Navigation.setIsShowingTournaments(!1), this._clashPersistentApp.setIsViewingClash(!1)
                }
                _startLoading() {
                    a.logger.trace("--- loading start ---"), this._appData.set("isLoading", !0);
                    const e = Object.keys(this._appData.navTabs);
                    for (const t of e) this._appData.navTabs[t].setEnabled(!1)
                }
                _endLoading() {
                    a.logger.trace("--- loading end ---");
                    const e = this._appData;
                    e.navTabs[s.ClashTab.HUB].setEnabled(!0), this._configBinding.get("/namespaces/ClashConfig/WinnersTabEnabled").then((t => {
                        const n = null === t || "" === t || void 0 === t || t;
                        e.navTabs[s.ClashTab.WINNERS].setEnabled(n)
                    })), this._configBinding.get("/namespaces/ClashConfig/AwardsTabEnabled").then((t => {
                        const n = null === t || "" === t || void 0 === t || t;
                        e.navTabs[s.ClashTab.AWARDS].setEnabled(n)
                    })), this._appData.set("isLoading", !1)
                }
                _openToTab() {
                    if (!this._isNavigatingToClash) return void a.logger.trace("_openToTab ignored -- no longer expecting to nav to clash");
                    this._isNavigatingToClash = !1;
                    const e = this._targetTab ? this._appData.navTabs[this._targetTab] : null;
                    if (e && e.isEnabled) return a.logger.trace(`opening to [${this._targetTab}] tab by request`), this._targetTab = null, void e.show();
                    const t = [s.ClashTab.TEAM, s.ClashTab.HUB];
                    for (const e of t) {
                        const t = this._appData.navTabs[e];
                        if (t.isEnabled && t.allowDefaultNavigation) {
                            a.logger.trace(`opening to [${e}] tab based on selected summary info`), t.show();
                            break
                        }
                    }
                }
                _selectTournamentId(e) {
                    const t = this._appData.get("tournamentId");
                    if (e !== s.INVALID_TOURNAMENT_ID && t === e) return a.logger.trace(`_selectTournamentId(${e}) but it's already selected, updating selected tournament summary`), void this._selectTournamentSummary(e);
                    a.logger.trace(`setting tournamentId to [${e}]`), this._tournamentSummary && this._tournamentSummary.length ? (e === s.INVALID_TOURNAMENT_ID && (e = this._tournamentSummary[0].tournamentId, a.logger.trace(`tournamentId was invalid, setting tournamentId to highest priority: [${e}]`)), this._selectTournamentSummary(e)) : (a.logger.trace("no tournament summary info -- resetting"), this._selectTournamentSummary(s.INVALID_TOURNAMENT_ID)), this._appData.set("tournamentId", e), this._clashPersistentApp.setSelectedTournamentId(e)
                }
                _updateTournamentSummary(e, t) {
                    this._tournamentSummary = e || [], this._selectTournamentSummary(t || this._appData.get("tournamentId"))
                }
                _selectTournamentSummary(e) {
                    if (!this._tournamentSummary) return void a.logger.trace(`attempting to update selected tournament summary [${e}] but we have no summary data`);
                    let t = null;
                    if (e !== s.INVALID_TOURNAMENT_ID && (t = this._tournamentSummary.find((t => t.tournamentId === e)), !t)) return a.logger.trace(`cannot find tournament ${e} in tournament summary, setting id to INVALID`), void this._selectTournamentId(s.INVALID_TOURNAMENT_ID);
                    this._setCurrentTournamentSummary(t);
                    const n = t,
                        o = this._appData.navTabs[s.ClashTab.HUB],
                        r = this._appData.navTabs[s.ClashTab.TEAM],
                        l = this._appData.navTabs[s.ClashTab.BRACKET],
                        c = this._appData.get("currentTabId");
                    if (!o || !r || !l) return;
                    let d;
                    d = this._isFindTeamViewEnabled ? n && n.state !== i.default.Tournament.RESULTS : n && n.state !== i.default.Tournament.RESULTS && n.rosterId && n.rosterId !== s.INVALID_ROSTER_ID;
                    const m = this._isFindTeamViewEnabled && (!n || !n.rosterId || n.rosterId === s.INVALID_ROSTER_ID);
                    a.logger.trace("setting team tab enabled to ", d), r.setEnabled(d, !m);
                    const u = m ? this._tra.get("clash_nav_tab_find_team") : this._tra.get("clash_nav_tab_team");
                    if (a.logger.trace("setting team tab title to ", u), r.setName(u), !r.isEnabled && c === s.ClashTab.TEAM) return a.logger.trace("team tab is no longer enabled but still selected, switching off"), void this._openToTab();
                    const p = n && n.bracketId && n.bracketId !== s.INVALID_BRACKET_ID;
                    l.setEnabled(p), a.logger.trace("setting bracket tab enabled to ", p), this._updateBracketTabAlert(e), p || c !== s.ClashTab.BRACKET || (a.logger.trace("bracket tab is no longer enabled but still selected, switching off"), this._openToTab())
                }
                _setCurrentTournamentSummary(e) {
                    const t = this._appData.get("currentTournamentSummary");
                    a._.isEqual(t, e) || this._appData.set("currentTournamentSummary", e)
                }
                _updatePersistentPanel() {
                    const {
                        isEnabled: e
                    } = this._clashStateObserver, {
                        isReady: t
                    } = this._clashStateObserver, n = !a.Util.isGameflowInGame(this._gameflowPhase);
                    e && t && n ? (a.logger.trace(`enabling persistent panel: isEnabled [${e}], isReady [${t}], isGameflowOk [${n}(${this._gameflowPhase})]`), this._clashPersistentApp.enableSocialPersistentPanel()) : (a.logger.trace(`disabling persistent panel: isEnabled [${e}], isReady [${t}], isGameflowOk [${n}(${this._gameflowPhase})]`), this._clashPersistentApp.disableSocialPersistentPanel())
                }
                _updateGameInfoPanel() {
                    this._clashStateObserver.isEnabled && this._clashStateObserver.isReady && this._clashStateObserver.isPlaymodeRestricted ? this._clashPersistentApp.lockGameInfo() : this._clashPersistentApp.unlockGameInfo()
                }
                _updateBracketTabAlert(e = s.INVALID_TOURNAMENT_ID) {
                    e === s.INVALID_TOURNAMENT_ID && (e = this._appData.get("tournamentId"));
                    const t = this._appData.navTabs[s.ClashTab.BRACKET];
                    if (t) {
                        const n = this._simpleStateFlags.find((t => String(t.id) === `updatedbracket_${e}`));
                        t.setAlert(!!n), a.logger.trace("Bracket tab alert set to ", !!n)
                    }
                }
                _createTraService() {
                    const e = a.l10n.tra().overlay("/fe/lol-l10n/trans.json").overlay("/fe/lol-social/trans.json").overlay("/fe/lol-clash/trans.json").overlay("/fe/lol-shared-components/trans-challenges.json");
                    return (0, a.emberl10n)(a.Ember, e)
                }
                _createStartupEmberApplicationDefinitions() {
                    const e = n(76);
                    a.emberApplicationFactory.setFactoryDefinition({
                        name: "LoginModalComponent",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        LoginModalComponent: n(80),
                        GenericButtonComponent: e
                    }), a.emberApplicationFactory.setFactoryDefinition({
                        name: "RewardsModalComponent",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        RewardsModalComponent: n(83),
                        ClashService: n(86),
                        GenericButtonComponent: e
                    }), a.emberApplicationFactory.setFactoryDefinition({
                        name: "ClashStartModalComponent",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        ClashStartModalComponent: n(99),
                        GenericButtonComponent: e
                    })
                }
                _createGlobalEmberApplicationDefinitions() {
                    const {
                        ArrowFooterComponent: e,
                        PlayerNameComponent: t
                    } = a.SharedComponents.getSharedEmberComponents(), s = n(102), i = n(103), o = n(76), r = n(104), l = n(105), c = n(108), d = n(111), m = {
                        GenericButtonComponent: o,
                        TicketDisplayComponent: n(114),
                        TicketOfferComponent: n(118),
                        PendingIndicatorComponent: l
                    }, u = {
                        RosterDetailsVisualComponent: n(122),
                        RosterDetailsVisualTeamComponent: n(125),
                        OpenTeamToggleComponent: n(128),
                        PipCounterComponent: d
                    }, p = {
                        StateCountdownComponent: n(131),
                        ClashTimerManagementService: i
                    }, h = {
                        BracketLayoutComponent: n(134),
                        BracketLayout16Component: n(183),
                        BracketMatchComponent: n(193),
                        BracketMatchRosterComponent: n(196),
                        DashCircleSpinnerComponent: n(199),
                        SpectateButtonComponent: n(202)
                    };
                    a.emberApplicationFactory.setFactoryDefinition(a._.assign({
                        name: "ClashPersistent",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        AppRootComponent: n(207),
                        ClashService: n(86),
                        TelemetryService: s,
                        GdsService: n(209),
                        SummonerService: n(210),
                        TutorialService: n(211),
                        ClashEventObserverComponent: n(215),
                        SocialPersistentComponent: n(222),
                        SectionHeaderComponent: n(225),
                        TournamentScheduleComponent: n(228),
                        TournamentInvitePanelComponent: n(233),
                        TournamentInviteComponent: n(236),
                        WithdrawStatusPanelComponent: n(239),
                        ArrowToggleComponent: n(243),
                        GenericButtonComponent: n(76),
                        PipCounterComponent: d,
                        PendingIndicatorComponent: l
                    }, p)), a.emberApplicationFactory.setFactoryDefinition({
                        name: "ClashScoutingIntroFlow",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        ScoutingIntroFlowComponent: n(246),
                        ClashService: n(86),
                        TelemetryService: s,
                        GdsService: n(209),
                        GenericButtonComponent: o,
                        ArrowFooterComponent: e
                    }), a.emberApplicationFactory.setFactoryDefinition({
                        name: "TournamentEndOfGameFlow",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        TournamentEndOfGameFlowComponent: n(249),
                        ClashService: n(86),
                        TelemetryService: s,
                        GdsService: n(209),
                        GenericButtonComponent: o
                    }), a.emberApplicationFactory.setFactoryDefinition(a._.assign({
                        name: "BracketCelebration",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        BracketCelebrationComponent: n(253),
                        BracketCelebrationViewComponent: n(256),
                        GdsService: n(209),
                        TelemetryService: s
                    }, h)), a.emberApplicationFactory.setFactoryDefinition({
                        name: "CapsuleGrantCelebration",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        CapsuleGrantCelebrationComponent: n(259)
                    }), a.emberApplicationFactory.setFactoryDefinition({
                        name: "CapsuleUpgradeCelebration",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        CapsuleUpgradeCelebrationComponent: n(262)
                    }), a.emberApplicationFactory.setFactoryDefinition({
                        name: "VpGrantCelebration",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        VpGrantCelebrationComponent: n(265),
                        RewardGrantCelebrationComponent: n(270),
                        GdsService: n(209)
                    }), a.emberApplicationFactory.setFactoryDefinition({
                        name: "RewardGrantCelebration",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        RewardGrantCelebrationComponent: n(270)
                    }), a.emberApplicationFactory.setFactoryDefinition({
                        name: "ClashEosCelebration",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        EosCelebrationComponent: n(273),
                        ClashService: n(86),
                        GdsService: n(209),
                        GenericButtonComponent: o
                    }), a.emberApplicationFactory.setFactoryDefinition({
                        name: "TicketOfferNotification",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        TicketOfferNotificationComponent: n(276),
                        GenericButtonComponent: o,
                        PlayerNameComponent: t
                    }), a.emberApplicationFactory.setFactoryDefinition(a._.assign({
                        name: "ViewRosterModal",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        ViewRosterModalComponent: n(279),
                        RosterLayoutComponent: n(282),
                        ChatService: n(285),
                        ClashService: n(86),
                        TelemetryService: s,
                        GdsService: n(209),
                        ClashNavService: n(286),
                        SummonerService: n(210),
                        TutorialService: n(211),
                        ClientSettingsService: r,
                        GenericButtonComponent: o,
                        TierPlacementComponent: n(287),
                        TierPlacementVisualComponent: c,
                        RosterDetailsComponent: n(290),
                        RosterMemberListComponent: n(295),
                        RosterMemberComponent: n(298),
                        PositionSelectorComponent: n(303),
                        PositionSelectorModalComponent: n(306),
                        PlayerNameComponent: t
                    }, m, u, p, this.clashInviteDialogComponents))
                }
                _createMainEmberApplicationDefinitions() {
                    const {
                        ArrowFooterComponent: e,
                        PlayerNameComponent: t
                    } = a.SharedComponents.getSharedEmberComponents(), s = n(102), i = n(103), o = n(76), r = n(104), l = n(105), c = n(108), d = n(111), m = {
                        BracketLayoutComponent: n(134),
                        BracketLayout16Component: n(183),
                        BracketMatchComponent: n(193),
                        BracketMatchRosterComponent: n(196),
                        DashCircleSpinnerComponent: n(199),
                        SpectateButtonComponent: n(202)
                    }, u = {
                        GenericButtonComponent: o,
                        TicketDisplayComponent: n(114),
                        TicketOfferComponent: n(118),
                        PendingIndicatorComponent: l
                    }, p = {
                        RosterDetailsVisualComponent: n(122),
                        RosterDetailsVisualTeamComponent: n(125),
                        OpenTeamToggleComponent: n(128),
                        PipCounterComponent: d
                    }, h = {
                        StateCountdownComponent: n(131),
                        ClashTimerManagementService: i
                    };
                    a.emberApplicationFactory.setFactoryDefinition(a._.assign({
                        name: y,
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        AppRootComponent: n(309),
                        ClashService: n(86),
                        TelemetryService: s,
                        GdsService: n(209),
                        ClashNavService: n(286),
                        ClashTimerManagementService: i,
                        SummonerService: n(210),
                        ChatService: n(285),
                        TutorialService: n(211),
                        ClientSettingsService: r,
                        ClashTabHubComponent: n(313),
                        ClashTabTeamComponent: n(316),
                        ClashTabBracketComponent: n(323),
                        ClashTabWinnersComponent: n(326),
                        ClashTabAwardsComponent: n(329),
                        GenericButtonComponent: o,
                        IsLastHelper: n(332).helper,
                        ClashLandingComponent: n(333),
                        TournamentInfoComponent: n(336),
                        LftToggleComponent: n(339),
                        OpenTeamToggleComponent: n(128),
                        TierPlacementComponent: n(287),
                        ClashTrophyComponent: n(342),
                        TierPlacementVisualComponent: c,
                        RosterDetailsComponent: n(290),
                        RosterMemberListComponent: n(295),
                        RosterMemberComponent: n(298),
                        RosterLobbyViewComponent: n(345),
                        RosterLobbyMemberComponent: n(348),
                        MatchInfoComponent: n(351),
                        ClashFaqComponent: n(354),
                        PositionSelectorComponent: n(303),
                        PositionSelectorModalComponent: n(306),
                        ClashHubComponent: n(357),
                        ParallaxBackgroundComponent: n(360),
                        BracketHeaderComponent: n(363),
                        BracketNavComponent: n(366),
                        BracketNav16Component: n(369),
                        ActionTimelineComponent: n(372),
                        ArrowFooterComponent: e,
                        TournamentSelectorComponent: n(403),
                        WinnersRosterComponent: n(406),
                        CapsuleProgressComponent: n(409),
                        PendingIndicatorComponent: l,
                        RosterLayoutComponent: n(282),
                        UnderlinedSelectorComponent: n(412),
                        VpProgressComponent: n(415),
                        ClashCarouselComponent: n(418),
                        ClashCarouselButtonComponent: n(422),
                        HubRosterComponent: n(425),
                        HubRosterDetailsComponent: n(428),
                        HubRosterRecordDayComponent: n(431),
                        DayPlannerComponent: n(434),
                        DayPlannerNodeComponent: n(437),
                        HubRosterCurrentComponent: n(441),
                        SeasonVpDisplayComponent: n(444),
                        MyTicketsContainerComponent: n(447),
                        CapacityIndicatorComponent: n(450),
                        ShuffleTextComponent: n(453),
                        HubContentComponent: n(456),
                        ScheduleViewComponent: n(459),
                        HistoryViewComponent: n(462),
                        UpcomingTournamentEntryComponent: n(465),
                        ScheduleGraphComponent: n(468),
                        ClashAwardsRootComponent: n(471),
                        ClashAwardsGridComponent: n(515),
                        ClashAwardsControlPanelComponent: n(519),
                        FindTeamViewComponent: n(525),
                        FindTeamEntryComponent: n(528),
                        AramIntroModalComponent: n(531),
                        MemberSummonerComponent: n(534),
                        ...a.Social.getHovercardComponent(),
                        ViewRosterModalComponent: n(279),
                        PlayerNameComponent: t,
                        TEMPLATES: {
                            ...a.Social.getHovercardTemplates()
                        }
                    }, m, u, p, h, this.clashInviteDialogComponents)), a.emberApplicationFactory.setFactoryDefinition({
                        name: "RosterDetailsSelectorComponent",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        RosterDetailsSelectorComponent: n(537),
                        SanitizerService: n(540),
                        TutorialService: n(211),
                        GdsService: n(209),
                        GenericButtonComponent: o,
                        PipCounterComponent: d,
                        AsyncTextFieldComponent: n(541)
                    }), a.emberApplicationFactory.setFactoryDefinition(a._.assign({
                        name: "TicketSelectComponent",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        TicketSelectModalComponent: n(545),
                        TicketSelectModalElementComponent: n(548),
                        ClashService: n(86),
                        ClientSettingsService: r,
                        GenericButtonComponent: o
                    }, u)), a.emberApplicationFactory.setFactoryDefinition({
                        name: "PositionSelectorModal",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        PositionSelectorComponent: n(306)
                    }), a.emberApplicationFactory.setFactoryDefinition({
                        name: "SelectorPaletteComponent",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        SelectorPaletteComponent: n(551)
                    }), a.emberApplicationFactory.setFactoryDefinition(a._.assign({
                        name: "TournamentScouting",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        ScoutingComponent: n(554),
                        GenericButtonComponent: o,
                        ScoutingNavComponent: n(559),
                        ScoutingFillerRowComponent: n(562),
                        ScoutingMemberRankedComponent: n(565),
                        TopChampionComponent: n(568),
                        ScoutingMemberMasteryComponent: n(571),
                        TopMasteryComponent: n(574),
                        ScoutingMemberHistoryComponent: n(577),
                        LastMatchesComponent: n(580),
                        PendingIndicatorComponent: l,
                        TierPlacementComponent: n(287),
                        TierPlacementVisualComponent: c,
                        IsLastHelper: n(332).helper,
                        ClashService: n(86),
                        TelemetryService: s,
                        GdsService: n(209),
                        SummonerService: n(210),
                        ScoutingService: n(583),
                        PlayerNameComponent: t
                    }, p)), a.emberApplicationFactory.setFactoryDefinition(a._.assign({
                        name: "TournamentOverview",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        OverviewComponent: n(585),
                        ClashCarouselComponent: n(418),
                        ClashCarouselButtonComponent: n(422),
                        TierPlacementComponent: n(287),
                        ClashTrophyComponent: n(342),
                        TierPlacementVisualComponent: c,
                        OverviewPeriodComponent: n(588),
                        OverviewMatchComponent: n(591),
                        OverviewGameComponent: n(594),
                        OverviewStatsCarouselComponent: n(597),
                        OverviewStatComponent: n(601),
                        MemberSummonerComponent: n(534),
                        ...a.Social.getHovercardComponent(),
                        GenericButtonComponent: o,
                        ChatService: n(285),
                        ClashService: n(86),
                        TelemetryService: s,
                        GdsService: n(209),
                        TEMPLATES: {
                            ...a.Social.getHovercardTemplates()
                        }
                    }, p)), a.emberApplicationFactory.setFactoryDefinition({
                        name: "MissedLockinModal",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        MissedLockinModalComponent: n(604),
                        DayPlannerComponent: n(434),
                        DayPlannerNodeComponent: n(437)
                    }), a.emberApplicationFactory.setFactoryDefinition(a._.assign({
                        name: "TicketSelector",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        TicketSelectorComponent: n(607),
                        TicketSelectorElementComponent: n(610),
                        ClientSettingsService: r,
                        ClashService: n(86),
                        GenericButtonComponent: o
                    })), a.emberApplicationFactory.setFactoryDefinition({
                        name: "ClashAwardsTooltip",
                        ComponentFactory: a.componentFactory,
                        tra: this._tra,
                        ClashAwardsTooltipComponent: n(613),
                        TierPlacementVisualComponent: c
                    }), a.emberApplicationFactory.setFactoryDefinition({
                        name: "PendingLftRequestsModal",
                        tra: this._tra,
                        ComponentFactory: a.componentFactory,
                        PendingLftRequestsModalComponent: n(616),
                        PendingLftRequestsEntryComponent: n(619),
                        TierPlacementComponent: n(287),
                        TierPlacementVisualComponent: c,
                        GenericButtonComponent: o,
                        ClashService: n(86),
                        GdsService: n(209)
                    })
                }
                _showBrackets() {
                    const e = a.Viewport.fullScreen().getScreenRoot(a.Viewport.getApiKey("rcp-fe-lol-clash_apikey"), "rcp-fe-lol-clash"),
                        t = () => {
                            e.release()
                        };
                    if (this._bracketModal && (e.release(), this._bracketModal = null), this._bracketModal) {
                        const e = this._bracketModal.domNode.querySelector(".clash-tournament-end-of-game-modal");
                        e && e.dispatchEvent(new Event("initModal"))
                    } else this._bracketModal = a.componentFactory.create("TournamentEndOfGameModal", {
                        nextButtonCallback: t,
                        callbackSequenceName: "clash"
                    });
                    this._bracketModal.domNode || t(), e.getElement().appendChild(this._bracketModal.domNode), e.bump()
                }
                _scoutTeam(e) {
                    e ? this._configBinding.get("/namespaces/ClashConfig").then((t => {
                        e.scoutingEnabled = Boolean(t && t[s.SCOUTING_ENABLED]);
                        const n = Boolean(t && t[s.SCOUTING_DISABLE_RANKED]),
                            a = Boolean(t && t[s.SCOUTING_DISABLE_MASTERY]),
                            i = Boolean(t && t[s.SCOUTING_DISABLE_HISTORY]);
                        e.rankedEnabled = !n, e.masteryEnabled = !a, e.historyEnabled = !i, this._scoutTeamInternal(e)
                    })) : a.logger.warning("scouting: invalid parameters")
                }
                _scoutTeamInternal(e) {
                    e.scoutingEnabled ? e.rankedEnabled || e.masteryEnabled || e.historyEnabled ? (this._scoutingModal && (a.fullPageModalManager.close(), this._destroyScoutingModal()), a.logger.trace("scouting: launching scouting panel"), this._scoutingApp = a.componentFactory.create("TournamentScouting", {
                        scoutingParams: e
                    }), this._scoutingModal = a.fullPageModalManager.open({
                        data: {
                            contents: this._scoutingApp.domNode
                        }
                    }), this._scoutingModal.domNode.addEventListener("close", (() => {
                        this._destroyScoutingModal()
                    }))) : a.logger.warning("scouting: all tabs disabled!") : a.logger.warning("scouting: not enabled!")
                }
                _destroyScoutingModal() {
                    a.Util.destroyEmberApp(this._scoutingApp), this._scoutingModal = null, this._scoutingApp = null
                }
                _tournamentOverview(e) {
                    e ? this._configBinding.get("/namespaces/ClashConfig").then((t => {
                        const n = t[s.OVERVIEW_ENABLED],
                            a = Boolean(t && null != n && !n);
                        e.overviewEnabled = !a, this._tournamentOverviewInternal(e)
                    })) : a.logger.warning("overview: invalid parameters")
                }
                _tournamentOverviewInternal(e) {
                    if (!e.overviewEnabled) return void a.logger.warning("overview: not enabled");
                    if (this._overviewModal) return void a.logger.warning("overview: already showing");
                    a.logger.trace("overview: launching full page modal"), p.default.setShowOverviewPageOnce(!1);
                    const t = a.componentFactory.create("TournamentOverview", {
                        overviewParams: e
                    });
                    this._overviewModal = a.fullPageModalManager.open({
                        data: {
                            contents: t.domNode
                        }
                    }), o.default.disablePopups(), this._overviewModal.domNode.addEventListener("close", (() => {
                        a.Util.destroyEmberApp(t), this._overviewModal = null, o.default.enablePopups()
                    })), this._clashTelemetry.sendEvent("TeamOverview", {
                        source: e.source,
                        rosterId: e.rosterStats.rosterId
                    })
                }
                _forceShowClashLoginModal() {
                    this._loginModalObserver && this._loginModalObserver.showLoginModal()
                }
                _forceShowClashRewardsModal() {
                    this._rewardsModalObserver && this._rewardsModalObserver.showRewardsModal()
                }
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.VALID_MSG_COUNT = t.TournamentStatus = t.TicketType = t.THEMES_EOS = t.SimpleStateStatus = t.SCOUTING_ENABLED = t.SCOUTING_DISABLE_RANKED = t.SCOUTING_DISABLE_MASTERY = t.SCOUTING_DISABLE_HISTORY = t.RosterMemberState = t.RewardType = t.ROSTER_TAG_CHAR_SIZE = t.ROSTER_NAME_MIN_SIZE = t.ROSTER_NAME_MAX_SIZE = t.ROSTER_LOGO_REWARD_TYPES = t.ROMAN_NUMERALS = t.QUEUE_IDS_ARAM_CLASH = t.OVERVIEW_ENABLED = t.NUM_OVERVIEW_ENTRIES_TO_SHOW = t.NORMAL_GOLD_SHARE_LIMIT = t.MatchStatus = t.MIN_TIER = t.MAX_TIER = t.MATCH_ROSTER_BYE_ID = t.InviteType = t.INVALID_TOURNAMENT_ID = t.INVALID_TIER = t.INVALID_SUMMONER_ID = t.INVALID_ROSTER_ID = t.INVALID_LOGO_ID = t.INVALID_LOGO_COLOR_ID = t.INVALID_BRACKET_ID = t.DEFAULT_LOGO_COLOR_ID = t.ClashTab = t.CapacityStatus = void 0;
            const n = Object.freeze({
                INVALID: "invalid",
                HUB: "hub",
                TEAM: "team",
                BRACKET: "bracket",
                WINNERS: "winners",
                AWARDS: "awards"
            });
            t.ClashTab = n;
            t.INVALID_TOURNAMENT_ID = -1;
            t.INVALID_ROSTER_ID = -1;
            t.INVALID_BRACKET_ID = -1;
            t.INVALID_SUMMONER_ID = -1;
            t.MATCH_ROSTER_BYE_ID = 0;
            t.INVALID_LOGO_ID = 0;
            t.INVALID_LOGO_COLOR_ID = 0;
            t.DEFAULT_LOGO_COLOR_ID = 1;
            t.ROSTER_TAG_CHAR_SIZE = 3;
            t.ROSTER_NAME_MIN_SIZE = 3;
            t.ROSTER_NAME_MAX_SIZE = 25;
            t.INVALID_TIER = 0;
            t.MIN_TIER = 1;
            t.MAX_TIER = 4;
            t.NUM_OVERVIEW_ENTRIES_TO_SHOW = 3;
            const a = Object.freeze({
                DEFAULT: "DEFAULT",
                CANCELLED: "CANCELLED",
                PAUSED: "PAUSED",
                PRERESUME: "PRERESUME"
            });
            t.TournamentStatus = a;
            const s = Object.freeze({
                PENDING: "PENDING",
                NOT_READY: "NOT_READY",
                FORCED_NOT_READY: "FORCED_NOT_READY",
                READY: "READY",
                DECLINED: "DECLINED"
            });
            t.RosterMemberState = s;
            const i = Object.freeze({
                FREE_AGENT: "FREEAGENT",
                FRIEND: "FRIEND",
                SUGGEST: "SUGGEST",
                NONE: "NONE"
            });
            t.InviteType = i;
            const o = Object.freeze({
                UPCOMING: "UPCOMING",
                STARTED: "STARTED",
                COMPLETED: "COMPLETED"
            });
            t.MatchStatus = o;
            const r = Object.freeze({
                FRAME: "FRAME",
                BANNER_FLAG: "BANNER_FLAG",
                CHAMPION_TEAM_LOGO: "CHAMPION_TEAM_LOGO",
                THEME_TEAM_LOGO: "THEME_TEAM_LOGO",
                LOOT: "LOOT",
                FLAG: "FLAG",
                LOGO: "LOGO"
            });
            t.RewardType = r;
            const l = [r.CHAMPION_TEAM_LOGO, r.THEME_TEAM_LOGO];
            t.ROSTER_LOGO_REWARD_TYPES = l;
            t.ROMAN_NUMERALS = ["", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IV", "X"];
            t.SCOUTING_ENABLED = "ScoutingEnabled";
            t.SCOUTING_DISABLE_RANKED = "ScoutingDisableRanked";
            t.SCOUTING_DISABLE_MASTERY = "ScoutingDisableMastery";
            t.SCOUTING_DISABLE_HISTORY = "ScoutingDisableHistory";
            t.OVERVIEW_ENABLED = "OverviewEnabled";
            t.VALID_MSG_COUNT = 11;
            const c = Object.freeze({
                UNACKNOWLEDGED: "UNACKNOWLEDGED",
                ACKNOWLEDGED: "ACKNOWLEDGED"
            });
            t.SimpleStateStatus = c;
            t.NORMAL_GOLD_SHARE_LIMIT = 30;
            const d = Object.freeze({
                LOW: "low",
                MEDIUM: "medium",
                HIGH: "high",
                FULL: "full"
            });
            t.CapacityStatus = d;
            const m = Object.freeze({
                BASIC: "BASIC",
                PREMIUM: "PREMIUM"
            });
            t.TicketType = m;
            t.THEMES_EOS = ["EOS2020", "EOS2021", "EOS2022"];
            t.QUEUE_IDS_ARAM_CLASH = [720, 721]
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            const n = Object.freeze({
                    UPCOMING: "UPCOMING",
                    IDLE: "IDLE",
                    LOCK_IN: "LOCK_IN",
                    SCOUTING: "SCOUTING",
                    IN_GAME: "IN_GAME",
                    RESULTS: "RESULTS"
                }),
                a = Object.freeze({
                    NO_ROSTER: "NO_ROSTER",
                    PENDING_ROSTER: "PENDING_ROSTER",
                    REGISTERED_ROSTER: "REGISTERED_ROSTER",
                    BRACKET_ROSTER: "BRACKET_ROSTER",
                    ELIMINATED: "ELIMINATED"
                }),
                s = {};
            for (const e of Object.keys(n)) {
                const t = n[e];
                s[t] = {}
            }
            const i = [],
                o = ["isRoster"],
                r = ["isLobby"];
            s[n.UPCOMING][a.NO_ROSTER] = i, s[n.UPCOMING][a.PENDING_ROSTER] = o, s[n.UPCOMING][a.REGISTERED_ROSTER] = o, s[n.UPCOMING][a.BRACKET_ROSTER] = o, s[n.UPCOMING][a.ELIMINATED] = i, s[n.IDLE][a.NO_ROSTER] = i, s[n.IDLE][a.PENDING_ROSTER] = o, s[n.IDLE][a.REGISTERED_ROSTER] = o, s[n.IDLE][a.BRACKET_ROSTER] = o, s[n.IDLE][a.ELIMINATED] = o, s[n.LOCK_IN][a.NO_ROSTER] = i, s[n.LOCK_IN][a.PENDING_ROSTER] = o, s[n.LOCK_IN][a.REGISTERED_ROSTER] = r, s[n.LOCK_IN][a.BRACKET_ROSTER] = r, s[n.LOCK_IN][a.ELIMINATED] = o, s[n.SCOUTING][a.NO_ROSTER] = i, s[n.SCOUTING][a.PENDING_ROSTER] = r, s[n.SCOUTING][a.REGISTERED_ROSTER] = r, s[n.SCOUTING][a.BRACKET_ROSTER] = r, s[n.SCOUTING][a.ELIMINATED] = o, s[n.IN_GAME][a.NO_ROSTER] = i, s[n.IN_GAME][a.PENDING_ROSTER] = r, s[n.IN_GAME][a.REGISTERED_ROSTER] = r, s[n.IN_GAME][a.BRACKET_ROSTER] = r, s[n.IN_GAME][a.ELIMINATED] = o, s[n.RESULTS][a.NO_ROSTER] = i, s[n.RESULTS][a.PENDING_ROSTER] = i, s[n.RESULTS][a.REGISTERED_ROSTER] = i, s[n.RESULTS][a.BRACKET_ROSTER] = i, s[n.RESULTS][a.ELIMINATED] = i;
            class l {
                constructor() {}
                static getData(e, t) {
                    const n = s[e];
                    return n ? n[t] : void 0
                }
            }
            l.Tournament = n, l.Player = a;
            var c = l;
            t.default = c
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(10)) && a.__esModule ? a : {
                    default: a
                };
            const o = Object.freeze({
                    Left: "Left",
                    Center: "Center",
                    Right: "Right"
                }),
                r = Object.freeze({
                    Past: "PAST",
                    Present: "PRESENT",
                    Future: "FUTURE",
                    Cancelled: "CANCELLED"
                }),
                l = Object.freeze({
                    Left: {
                        targetAnchor: {
                            x: "right",
                            y: "bottom"
                        },
                        tooltipAnchor: {
                            x: "center",
                            y: "top"
                        },
                        showDelay: 200
                    },
                    Center: {
                        targetAnchor: {
                            x: "center",
                            y: "bottom"
                        },
                        tooltipAnchor: {
                            x: "center",
                            y: "top"
                        },
                        showDelay: 200
                    },
                    Right: {
                        targetAnchor: {
                            x: "center",
                            y: "bottom"
                        },
                        tooltipAnchor: {
                            x: "center",
                            y: "top"
                        },
                        offset: {
                            x: -75,
                            y: 0
                        },
                        showDelay: 200
                    }
                }),
                c = Object.freeze({
                    PAST_day_1: "PAST_EOD",
                    PAST_day_2: "PAST_EOD",
                    IDLE_FUTURE_day_1: "IDLE_FUTURE_day_1",
                    IDLE_FUTURE_day_1_multiple_flights: "IDLE_FUTURE_day_1_multiple_flights",
                    IDLE_FUTURE_day_2: "IDLE_FUTURE_day_2",
                    IDLE_FUTURE_day_3: "IDLE_FUTURE_day_3",
                    IDLE_FUTURE_day_2_next: "IDLE_FUTURE_next_day",
                    IDLE_FUTURE_day_3_next: "IDLE_FUTURE_next_day",
                    LOCK_IN_PRESENT_day_1: "LOCK_IN_PRESENT",
                    LOCK_IN_PRESENT_day_2: "LOCK_IN_PRESENT",
                    LOCK_IN_PRESENT_day_3: "LOCK_IN_PRESENT",
                    LOCK_IN_FUTURE_day_2: "IDLE_FUTURE_day_2",
                    LOCK_IN_FUTURE_day_3: "IDLE_FUTURE_day_3",
                    SCOUTING_FUTURE_day_2: "IDLE_FUTURE_day_2",
                    SCOUTING_FUTURE_day_3: "IDLE_FUTURE_day_3",
                    SCOUTING_PRESENT_day_1: "SCOUTING_PRESENT",
                    SCOUTING_PRESENT_day_2: "SCOUTING_PRESENT",
                    SCOUTING_PRESENT_day_3: "SCOUTING_PRESENT",
                    IDLE_PRESENT_day_1: "IDLE_PRESENT",
                    IDLE_PRESENT_day_2: "IDLE_PRESENT",
                    IDLE_PRESENT_day_1_no_history: "IDLE_PRESENT_NO_HISTORY",
                    IDLE_PRESENT_day_2_no_history: "IDLE_PRESENT_NO_HISTORY",
                    IDLE_PRESENT_day_1_eliminated: "IDLE_PRESENT_ELIMINATED",
                    IDLE_PRESENT_day_2_eliminated: "IDLE_PRESENT_ELIMINATED",
                    CANCELLED: "CANCELLED"
                }),
                d = {};
            let m = [],
                u = 0,
                p = null,
                h = null;
            class g {
                constructor() {}
                static addTournament(e) {
                    d[e] || (d[e] = {})
                }
                static hasAutoShown(e, t) {
                    const n = d[e];
                    return !!n && n[t]
                }
                static setAutoShown(e, t) {
                    let n = d[e];
                    n || (g.addTournament(e), n = d[e]), n[t] = !0
                }
                static enablePopups() {
                    if (u = Math.max(u - 1, 0), s.logger.trace(`DayPlanner -- enablePopups: popupsEnabled is now ${u}`), g.isPopupEnabled()) {
                        s.logger.trace("DayPlanner -- isPopupEnabled() === true! calling callbacks.");
                        for (const e of m) e();
                        m = []
                    }
                }
                static disablePopups() {
                    ++u, g.stopAutoShowTooltip(), s.logger.trace(`DayPlanner -- disablePopups: popupsEnabled is now ${u}`)
                }
                static isPopupEnabled() {
                    return 0 === u
                }
                static addOneTimeEnabledCallback(e) {
                    g.isPopupEnabled() || (s.logger.trace("DayPlanner -- disablePopups: adding one time enabled callback", e), m.push(e))
                }
                static startAutoShowTooltip(e, t) {
                    p = e, h = t, p && p.show(t)
                }
                static stopAutoShowTooltip() {
                    p && h && (p.hide(h), p = null, h = null)
                }
                static organizePhasesByDay(e) {
                    if (!e) return [];
                    const t = [],
                        n = s.Util.getSortedPhases(e);
                    for (let e = 0; e < n.length; e++) {
                        const {
                            period: a
                        } = n[e];
                        t.includes(a) || t.push(a)
                    }
                    return {
                        sortedPeriods: t,
                        sortedPhases: n
                    }
                }
                static getLocKey(e, t, n, a, s, o, l, d) {
                    if (t === r.Cancelled) return c.CANCELLED;
                    const m = e + 1,
                        u = a[e],
                        p = `${n}_${t}_day_${m}`;
                    if (n === i.default.Tournament.IDLE && t === g.DAY_STATUS.Future && 1 === m) {
                        const e = [];
                        for (let t = 0; t < s.length; t++) s[t].period === u && e.push(s[t]);
                        if (e.length > 1) return p + "_multiple_flights"
                    }
                    let h = "";
                    if (t === g.DAY_STATUS.Past) m < a.length && (h = `PAST_day_${m}`);
                    else if (t === g.DAY_STATUS.Present && n === i.default.Tournament.IDLE) h = l ? p + "_eliminated" : d && d.length ? p : p + "_no_history";
                    else if (t === g.DAY_STATUS.Future && n === i.default.Tournament.IDLE && 1 !== m) {
                        const t = s.find((e => e.id === o));
                        h = t && t.period === a[e] ? p + "_next" : p
                    } else h = p;
                    return h
                }
                static getLocParams(e, t, n, a, s, i, o, r) {
                    const l = {},
                        c = t[e],
                        d = n.find((e => e.id === a)),
                        m = [];
                    for (let e = 0; e < n.length; e++) n[e].period === c && m.push(n[e]);
                    const u = n.find((e => e.id === s));
                    l.nextPhaseLockinStartTimeText = "-", u && u.lockinStartTime && (l.nextPhaseLockinStartTimeText = o.getTimeString(r, u.lockinStartTime, {
                        hour: "numeric",
                        minute: "numeric"
                    }), l.nextPhaseScoutingStartTimeText = o.getTimeString(r, u.scoutingStartTime, {
                        hour: "numeric",
                        minute: "numeric"
                    }), l.nextPhaseLockinStartTimeWeekday = o.getDateString(r, u.lockinStartTime, {
                        weekday: "long"
                    })), l.currentPhaseScoutingStartTimeText = "-", d && d.scoutingStartTime && (l.currentPhaseLockinStartTimeText = o.getTimeString(r, d.lockinStartTime, {
                        hour: "numeric",
                        minute: "numeric"
                    }), l.currentPhaseScoutingStartTimeText = o.getTimeString(r, d.scoutingStartTime, {
                        hour: "numeric",
                        minute: "numeric"
                    }));
                    for (let e = 0; e < m.length; e++) l[`dayPhaseScoutingStartTimeText${e}`] = "-", m[e] && m[e].lockinStartTime && (l[`dayText${e}`] = o.getDateString(r, m[e].lockinStartTime, {
                        weekday: "long"
                    }), l[`dayPhaseLockinStartTimeText${e}`] = o.getTimeString(r, m[e].lockinStartTime, {
                        hour: "numeric",
                        minute: "numeric"
                    }), l[`dayPhaseLockinTimeDate${e}`] = o.getDateString(r, m[e].lockinStartTime, {
                        month: "long",
                        day: "numeric"
                    }), l[`dayPhaseScoutingStartTimeText${e}`] = o.getTimeString(r, m[e].scoutingStartTime, {
                        hour: "numeric",
                        minute: "numeric"
                    }));
                    return l.day = e + 1, l.scoutingTimeDuration = Math.floor(i / 6e4), l
                }
            }
            g.NODE_POSITIONS = o, g.DAY_STATUS = r, g.TOOLTIP_POSITION = l, g.DAY_PLANNER_LOC_KEY_MAPPING = c;
            var f = g;
            t.default = f
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            t.default = class {
                constructor(e) {
                    a.logger.trace("initializing clash persistent components"), this._clashApi = e, this._isPersistentEnabled = !1, this._isGameInfoLocked = !1, this._clashPersistentComponent = null, this._onSocialPanelComponentInit = null, this._sharedState = a.Ember.Object.create({
                        isViewingClash: !1,
                        clashSelectedTournamentId: null,
                        viewRosterId: null
                    })
                }
                createEmberApplication() {
                    this._clashPersistentComponent || (this._clashPersistentComponent = a.componentFactory.create("ClashPersistent", {
                        clashApi: this._clashApi,
                        shared: {
                            state: this._sharedState
                        },
                        setSocialPanelComponent: this.setSocialPanelComponent.bind(this)
                    }))
                }
                setSocialPanelComponent(e) {
                    e && (this._invitesComponentElement = e, this._onSocialPanelComponentInit && (this._onSocialPanelComponentInit(e), this._onSocialPanelComponentInit = null))
                }
                setIsViewingClash(e) {
                    a.logger.trace(`social-panel-integration: isViewingClash? ${e}`), this._sharedState.set("isViewingClash", e)
                }
                setSelectedTournamentId(e) {
                    this._sharedState.set("clashSelectedTournamentId", e)
                }
                setViewRosterId(e) {
                    e ? a.logger.trace(`social-panel-integration: viewing roster viewRosterId [${e}]`) : a.logger.trace("social-panel-integration: no longer viewing roster"), this._sharedState.set("viewRosterId", e)
                }
                lockGameInfo() {
                    if (this._isGameInfoLocked) return;
                    a.logger.trace("locking GAME INFO in social panel for tournaments. Game invites are now hidden.");
                    const e = document.createElement("div");
                    a.Social.setTournamentsGameInfoPanel(e), this._isGameInfoLocked = !0
                }
                unlockGameInfo() {
                    this._isGameInfoLocked && (a.logger.trace("unlocking GAME INFO in social panel. Game invites are now visible."), a.Social.setTournamentsGameInfoPanel(null), this._isGameInfoLocked = !1)
                }
                enableSocialPersistentPanel() {
                    this._isPersistentEnabled || (this._invitesComponentElement ? (a.logger.trace("enabling tournaments PERSISTENT component in social panel"), a.Social.setTournamentsPersistentPanel(this._invitesComponentElement), this._isPersistentEnabled = !0) : this._onSocialPanelComponentInit = e => {
                        a.logger.trace("enabling tournaments PERSISTENT component in social panel"), a.Social.setTournamentsPersistentPanel(e), this._isPersistentEnabled = !0
                    })
                }
                disableSocialPersistentPanel() {
                    this._isPersistentEnabled && (a.logger.trace("disabling tournaments PERSISTENT component in social panel"), a.Social.setTournamentsPersistentPanel(null), this._isPersistentEnabled = !1, this._onSocialPanelComponentInit && (this._onSocialPanelComponentInit = null))
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            t.default = class {
                constructor(e) {
                    this._callbacks = e || {}, this.isVisible = !1, this.isEnabled = !1, this.isReady = !1, this.isClashAvailable = !1, this.isPlaymodeRestricted = !1, setTimeout((() => {
                        this._binding = (0, a.dataBinding)("/lol-clash", (0, a.getProvider)().getSocket()), this._binding.addObserver("/v1/visible", this, this._onVisibleChanged), this._binding.addObserver("/v1/enabled", this, this._onEnabledChanged), this._binding.addObserver("/v1/disabled-config", this, this._onDisabledConfigChanged), this._binding.addObserver("/v1/ready", this, this._onReadyChanged), this._binding.addObserver("/v1/playmode-restricted", this, this._onPlaymodeRestrictedChanged)
                    }), 1)
                }
                _onVisibleChanged(e) {
                    this.isVisible !== e && (a.logger.trace("isVisible changed to:", e), this.isVisible = e, this._callbacks.onVisible && this._callbacks.onVisible(e), this._updateClashAvailable())
                }
                _onEnabledChanged(e) {
                    this.isEnabled !== e && (a.logger.trace("isEnabled changed to:", e), this.isEnabled = e, this._callbacks.onEnabled && this._callbacks.onEnabled(e), this._updateClashAvailable())
                }
                _onDisabledConfigChanged(e) {
                    this.disabledConfig !== e && e && (a.logger.trace("disabledConfig changed to: ", e), this.disabledConfig = e, this._callbacks.onDisabledConfig && this._callbacks.onDisabledConfig(e))
                }
                _onReadyChanged(e) {
                    this.isReady !== e && (a.logger.trace("isReady changed to:", e), this.isReady = e, this._callbacks.onReady && this._callbacks.onReady(e), this._updateClashAvailable())
                }
                _onPlaymodeRestrictedChanged(e) {
                    this.isPlaymodeRestricted !== e && (a.logger.trace("isPlaymodeRestricted changed to:", e), this.isPlaymodeRestricted = e, this._callbacks.onPlaymodeRestricted && this._callbacks.onPlaymodeRestricted(e))
                }
                _updateClashAvailable() {
                    const e = this.isVisible && this.isReady && this.isEnabled;
                    this.isClashAvailable !== e && (this.isClashAvailable = e, this._callbacks.onClashAvailable(e))
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = n(9),
                o = (a = n(15)) && a.__esModule ? a : {
                    default: a
                };
            t.default = class {
                constructor(e, t, n, a, i) {
                    s.logger.trace(`creating view roster modal tournament [${n}] roster [${a}]`), this._clashApi = e, this._tra = t, this._onCloseCallback = i, this._tournamentId = n, this._viewRosterId = a, this._create(n, a)
                }
                _create() {
                    this._app = s.componentFactory.create("ViewRosterModal", {
                        tournamentId: this._tournamentId,
                        viewRosterId: this._viewRosterId,
                        onTeamJoined: () => {
                            s.fullPageModalManager.close(), this._clashApi.openWithTournament(this._tournamentId, i.ClashTab.TEAM)
                        },
                        onInviteRevoked: () => {
                            s.fullPageModalManager.close(), (0, o.default)(this._tra, "clash_view_roster_invite_revoked_title", ["clash_view_roster_invite_revoked_description"])
                        }
                    }), this._modal = s.fullPageModalManager.open({
                        data: {
                            contents: this._app.domNode
                        }
                    }), this._modal.domNode.addEventListener("close", this._handleCloseEvent.bind(this))
                }
                _handleCloseEvent() {
                    s.logger.trace(`closing view roster modal for tournament [${this._tournamentId}] roster [${this._viewRosterId}]`), this._modal = null, this._app.componentPromise.then((e => s.Ember.run((() => {
                        e.app.destroy(), this._app = null
                    })))), this._onCloseCallback && this._onCloseCallback()
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.failedInvitesErrorDialog = function(e, t, n) {
                a.dataBinding.bindTo((0, a.getProvider)().getSocket()).get("/lol-game-data/assets/v1/profile-icons.json").then((s => {
                    if (!n) return r(e, "clash_invites_failed_title", "clash_invites_failed_desc_unknown");
                    for (const i of n) {
                        const n = t.find((e => e.playerId === i.summonerId));
                        if (n) {
                            n.displayName = i.displayName, n.puuid = i.puuid, n.gameName = i.gameName, n.tagLine = i.tagLine;
                            const t = s.find((e => e.id === i.profileIconId));
                            n.summonerIconPath = t ? t.iconPath : null, n.exception = a.Util.getLocIfExists(e, `clash_failed_invite_reason_${n.exception}`, "clash_failed_invite_reason_UNKNOWN")
                        }
                    }! function(e, t, n = "") {
                        const s = a.Util.getLocIfExists(e, `clash_invites_failed_title${n}`, "clash_invites_failed_title"),
                            r = i({
                                title: s,
                                description: "",
                                failedInvites: t
                            }),
                            l = a.Util.createDomNode(r, o),
                            c = a.ModalManager.add({
                                type: "DialogAlert",
                                data: {
                                    contents: l,
                                    okText: e.get("lib_ui_dialog_alert_ok")
                                },
                                show: !0
                            });
                        c.okPromise.catch((() => {}))
                    }(e, t)
                }))
            }, t.genericErrorDialog = r;
            var a = n(1);
            n(9);
            const s = n(16),
                i = n(36),
                o = n(37);

            function r(e, t, n) {
                t = e.exists(t) ? e.get(t) : t, n = e.exists(n) ? e.get(n) : n;
                const i = a.Util.createDomNode(s({
                    title: t,
                    description: n
                }));
                return a.ModalManager.add({
                    type: "DialogAlert",
                    data: {
                        contents: i,
                        okText: e.get("lib_ui_dialog_alert_ok")
                    },
                    show: !0
                }).okPromise.catch((() => {}))
            }
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                1: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '    <a href="' + c(typeof(i = null != (i = n.serviceStatusUrl || (null != t ? t.serviceStatusUrl : t)) ? i : r) === l ? i.call(o, {
                        name: "serviceStatusUrl",
                        hash: {},
                        data: s
                    }) : i) + '" target="_blank">' + c(typeof(i = null != (i = n.serviceStatusText || (null != t ? t.serviceStatusText : t)) ? i : r) === l ? i.call(o, {
                        name: "serviceStatusText",
                        hash: {},
                        data: s
                    }) : i) + "</a>\r\n"
                },
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o, r = null != t ? t : e.nullContext || {},
                        l = n.helperMissing,
                        c = "function",
                        d = e.escapeExpression;
                    return '<lol-uikit-content-block type="dialog-small">\r\n  <h4>' + d(typeof(o = null != (o = n.title || (null != t ? t.title : t)) ? o : l) === c ? o.call(r, {
                        name: "title",
                        hash: {},
                        data: s
                    }) : o) + '</h4>\r\n  <hr class="heading-spacer" />\r\n  <p>' + d(typeof(o = null != (o = n.description || (null != t ? t.description : t)) ? o : l) === c ? o.call(r, {
                        name: "description",
                        hash: {},
                        data: s
                    }) : o) + "</p>\r\n" + (null != (i = n.if.call(r, null != t ? t.serviceStatusUrl : t, {
                        name: "if",
                        hash: {},
                        fn: e.program(1, s, 0),
                        inverse: e.noop,
                        data: s
                    })) ? i : "") + "</lol-uikit-content-block>\r\n"
                },
                useData: !0
            })
        }, (e, t, n) => {
            e.exports = n(18).default
        }, (e, t, n) => {
            "use strict";

            function a(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }

            function s(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t.default = e, t
            }
            t.__esModule = !0;
            var i = s(n(19)),
                o = a(n(33)),
                r = a(n(21)),
                l = s(n(20)),
                c = s(n(34)),
                d = a(n(35));

            function m() {
                var e = new i.HandlebarsEnvironment;
                return l.extend(e, i), e.SafeString = o.default, e.Exception = r.default, e.Utils = l, e.escapeExpression = l.escapeExpression, e.VM = c, e.template = function(t) {
                    return c.template(t, e)
                }, e
            }
            var u = m();
            u.create = m, d.default(u), u.default = u, t.default = u, e.exports = t.default
        }, (e, t, n) => {
            "use strict";

            function a(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            t.__esModule = !0, t.HandlebarsEnvironment = d;
            var s = n(20),
                i = a(n(21)),
                o = n(22),
                r = n(30),
                l = a(n(32));
            t.VERSION = "4.1.2";
            t.COMPILER_REVISION = 7;
            t.REVISION_CHANGES = {
                1: "<= 1.0.rc.2",
                2: "== 1.0.0-rc.3",
                3: "== 1.0.0-rc.4",
                4: "== 1.x.x",
                5: "== 2.0.0-alpha.x",
                6: ">= 2.0.0-beta.1",
                7: ">= 4.0.0"
            };
            var c = "[object Object]";

            function d(e, t, n) {
                this.helpers = e || {}, this.partials = t || {}, this.decorators = n || {}, o.registerDefaultHelpers(this), r.registerDefaultDecorators(this)
            }
            d.prototype = {
                constructor: d,
                logger: l.default,
                log: l.default.log,
                registerHelper: function(e, t) {
                    if (s.toString.call(e) === c) {
                        if (t) throw new i.default("Arg not supported with multiple helpers");
                        s.extend(this.helpers, e)
                    } else this.helpers[e] = t
                },
                unregisterHelper: function(e) {
                    delete this.helpers[e]
                },
                registerPartial: function(e, t) {
                    if (s.toString.call(e) === c) s.extend(this.partials, e);
                    else {
                        if (void 0 === t) throw new i.default('Attempting to register a partial called "' + e + '" as undefined');
                        this.partials[e] = t
                    }
                },
                unregisterPartial: function(e) {
                    delete this.partials[e]
                },
                registerDecorator: function(e, t) {
                    if (s.toString.call(e) === c) {
                        if (t) throw new i.default("Arg not supported with multiple decorators");
                        s.extend(this.decorators, e)
                    } else this.decorators[e] = t
                },
                unregisterDecorator: function(e) {
                    delete this.decorators[e]
                }
            };
            var m = l.default.log;
            t.log = m, t.createFrame = s.createFrame, t.logger = l.default
        }, (e, t) => {
            "use strict";
            t.__esModule = !0, t.extend = o, t.indexOf = function(e, t) {
                for (var n = 0, a = e.length; n < a; n++)
                    if (e[n] === t) return n;
                return -1
            }, t.escapeExpression = function(e) {
                if ("string" != typeof e) {
                    if (e && e.toHTML) return e.toHTML();
                    if (null == e) return "";
                    if (!e) return e + "";
                    e = "" + e
                }
                if (!s.test(e)) return e;
                return e.replace(a, i)
            }, t.isEmpty = function(e) {
                return !e && 0 !== e || !(!c(e) || 0 !== e.length)
            }, t.createFrame = function(e) {
                var t = o({}, e);
                return t._parent = e, t
            }, t.blockParams = function(e, t) {
                return e.path = t, e
            }, t.appendContextPath = function(e, t) {
                return (e ? e + "." : "") + t
            };
            var n = {
                    "&": "&amp;",
                    "<": "&lt;",
                    ">": "&gt;",
                    '"': "&quot;",
                    "'": "&#x27;",
                    "`": "&#x60;",
                    "=": "&#x3D;"
                },
                a = /[&<>"'`=]/g,
                s = /[&<>"'`=]/;

            function i(e) {
                return n[e]
            }

            function o(e) {
                for (var t = 1; t < arguments.length; t++)
                    for (var n in arguments[t]) Object.prototype.hasOwnProperty.call(arguments[t], n) && (e[n] = arguments[t][n]);
                return e
            }
            var r = Object.prototype.toString;
            t.toString = r;
            var l = function(e) {
                return "function" == typeof e
            };
            l(/x/) && (t.isFunction = l = function(e) {
                return "function" == typeof e && "[object Function]" === r.call(e)
            }), t.isFunction = l;
            var c = Array.isArray || function(e) {
                return !(!e || "object" != typeof e) && "[object Array]" === r.call(e)
            };
            t.isArray = c
        }, (e, t) => {
            "use strict";
            t.__esModule = !0;
            var n = ["description", "fileName", "lineNumber", "message", "name", "number", "stack"];

            function a(e, t) {
                var s = t && t.loc,
                    i = void 0,
                    o = void 0;
                s && (e += " - " + (i = s.start.line) + ":" + (o = s.start.column));
                for (var r = Error.prototype.constructor.call(this, e), l = 0; l < n.length; l++) this[n[l]] = r[n[l]];
                Error.captureStackTrace && Error.captureStackTrace(this, a);
                try {
                    s && (this.lineNumber = i, Object.defineProperty ? Object.defineProperty(this, "column", {
                        value: o,
                        enumerable: !0
                    }) : this.column = o)
                } catch (e) {}
            }
            a.prototype = new Error, t.default = a, e.exports = t.default
        }, (e, t, n) => {
            "use strict";

            function a(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            t.__esModule = !0, t.registerDefaultHelpers = function(e) {
                s.default(e), i.default(e), o.default(e), r.default(e), l.default(e), c.default(e), d.default(e)
            };
            var s = a(n(23)),
                i = a(n(24)),
                o = a(n(25)),
                r = a(n(26)),
                l = a(n(27)),
                c = a(n(28)),
                d = a(n(29))
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0;
            var a = n(20);
            t.default = function(e) {
                e.registerHelper("blockHelperMissing", (function(t, n) {
                    var s = n.inverse,
                        i = n.fn;
                    if (!0 === t) return i(this);
                    if (!1 === t || null == t) return s(this);
                    if (a.isArray(t)) return t.length > 0 ? (n.ids && (n.ids = [n.name]), e.helpers.each(t, n)) : s(this);
                    if (n.data && n.ids) {
                        var o = a.createFrame(n.data);
                        o.contextPath = a.appendContextPath(n.data.contextPath, n.name), n = {
                            data: o
                        }
                    }
                    return i(t, n)
                }))
            }, e.exports = t.default
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0;
            var a, s = n(20),
                i = n(21),
                o = (a = i) && a.__esModule ? a : {
                    default: a
                };
            t.default = function(e) {
                e.registerHelper("each", (function(e, t) {
                    if (!t) throw new o.default("Must pass iterator to #each");
                    var n = t.fn,
                        a = t.inverse,
                        i = 0,
                        r = "",
                        l = void 0,
                        c = void 0;

                    function d(t, a, i) {
                        l && (l.key = t, l.index = a, l.first = 0 === a, l.last = !!i, c && (l.contextPath = c + t)), r += n(e[t], {
                            data: l,
                            blockParams: s.blockParams([e[t], t], [c + t, null])
                        })
                    }
                    if (t.data && t.ids && (c = s.appendContextPath(t.data.contextPath, t.ids[0]) + "."), s.isFunction(e) && (e = e.call(this)), t.data && (l = s.createFrame(t.data)), e && "object" == typeof e)
                        if (s.isArray(e))
                            for (var m = e.length; i < m; i++) i in e && d(i, i, i === e.length - 1);
                        else {
                            var u = void 0;
                            for (var p in e) e.hasOwnProperty(p) && (void 0 !== u && d(u, i - 1), u = p, i++);
                            void 0 !== u && d(u, i - 1, !0)
                        } return 0 === i && (r = a(this)), r
                }))
            }, e.exports = t.default
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0;
            var a, s = n(21),
                i = (a = s) && a.__esModule ? a : {
                    default: a
                };
            t.default = function(e) {
                e.registerHelper("helperMissing", (function() {
                    if (1 !== arguments.length) throw new i.default('Missing helper: "' + arguments[arguments.length - 1].name + '"')
                }))
            }, e.exports = t.default
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0;
            var a = n(20);
            t.default = function(e) {
                e.registerHelper("if", (function(e, t) {
                    return a.isFunction(e) && (e = e.call(this)), !t.hash.includeZero && !e || a.isEmpty(e) ? t.inverse(this) : t.fn(this)
                })), e.registerHelper("unless", (function(t, n) {
                    return e.helpers.if.call(this, t, {
                        fn: n.inverse,
                        inverse: n.fn,
                        hash: n.hash
                    })
                }))
            }, e.exports = t.default
        }, (e, t) => {
            "use strict";
            t.__esModule = !0, t.default = function(e) {
                e.registerHelper("log", (function() {
                    for (var t = [void 0], n = arguments[arguments.length - 1], a = 0; a < arguments.length - 1; a++) t.push(arguments[a]);
                    var s = 1;
                    null != n.hash.level ? s = n.hash.level : n.data && null != n.data.level && (s = n.data.level), t[0] = s, e.log.apply(e, t)
                }))
            }, e.exports = t.default
        }, (e, t) => {
            "use strict";
            t.__esModule = !0, t.default = function(e) {
                e.registerHelper("lookup", (function(e, t) {
                    return e ? "constructor" !== t || e.propertyIsEnumerable(t) ? e[t] : void 0 : e
                }))
            }, e.exports = t.default
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0;
            var a = n(20);
            t.default = function(e) {
                e.registerHelper("with", (function(e, t) {
                    a.isFunction(e) && (e = e.call(this));
                    var n = t.fn;
                    if (a.isEmpty(e)) return t.inverse(this);
                    var s = t.data;
                    return t.data && t.ids && ((s = a.createFrame(t.data)).contextPath = a.appendContextPath(t.data.contextPath, t.ids[0])), n(e, {
                        data: s,
                        blockParams: a.blockParams([e], [s && s.contextPath])
                    })
                }))
            }, e.exports = t.default
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0, t.registerDefaultDecorators = function(e) {
                i.default(e)
            };
            var a, s = n(31),
                i = (a = s) && a.__esModule ? a : {
                    default: a
                }
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0;
            var a = n(20);
            t.default = function(e) {
                e.registerDecorator("inline", (function(e, t, n, s) {
                    var i = e;
                    return t.partials || (t.partials = {}, i = function(s, i) {
                        var o = n.partials;
                        n.partials = a.extend({}, o, t.partials);
                        var r = e(s, i);
                        return n.partials = o, r
                    }), t.partials[s.args[0]] = s.fn, i
                }))
            }, e.exports = t.default
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0;
            var a = n(20),
                s = {
                    methodMap: ["debug", "info", "warn", "error"],
                    level: "info",
                    lookupLevel: function(e) {
                        if ("string" == typeof e) {
                            var t = a.indexOf(s.methodMap, e.toLowerCase());
                            e = t >= 0 ? t : parseInt(e, 10)
                        }
                        return e
                    },
                    log: function(e) {
                        if (e = s.lookupLevel(e), "undefined" != typeof console && s.lookupLevel(s.level) <= e) {
                            var t = s.methodMap[e];
                            console[t] || (t = "log");
                            for (var n = arguments.length, a = Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) a[i - 1] = arguments[i];
                            console[t].apply(console, a)
                        }
                    }
                };
            t.default = s, e.exports = t.default
        }, (e, t) => {
            "use strict";

            function n(e) {
                this.string = e
            }
            t.__esModule = !0, n.prototype.toString = n.prototype.toHTML = function() {
                return "" + this.string
            }, t.default = n, e.exports = t.default
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0, t.checkRevision = function(e) {
                var t = e && e[0] || 1,
                    n = r.COMPILER_REVISION;
                if (t !== n) {
                    if (t < n) {
                        var a = r.REVISION_CHANGES[n],
                            s = r.REVISION_CHANGES[t];
                        throw new o.default("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (" + a + ") or downgrade your runtime to an older version (" + s + ").")
                    }
                    throw new o.default("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version (" + e[1] + ").")
                }
            }, t.template = function(e, t) {
                if (!t) throw new o.default("No environment passed to template");
                if (!e || !e.main) throw new o.default("Unknown template object: " + typeof e);
                e.main.decorator = e.main_d, t.VM.checkRevision(e.compiler);
                var n = {
                    strict: function(e, t) {
                        if (!(t in e)) throw new o.default('"' + t + '" not defined in ' + e);
                        return e[t]
                    },
                    lookup: function(e, t) {
                        for (var n = e.length, a = 0; a < n; a++)
                            if (e[a] && null != e[a][t]) return e[a][t]
                    },
                    lambda: function(e, t) {
                        return "function" == typeof e ? e.call(t) : e
                    },
                    escapeExpression: s.escapeExpression,
                    invokePartial: function(n, a, i) {
                        i.hash && (a = s.extend({}, a, i.hash), i.ids && (i.ids[0] = !0)), n = t.VM.resolvePartial.call(this, n, a, i);
                        var r = t.VM.invokePartial.call(this, n, a, i);
                        if (null == r && t.compile && (i.partials[i.name] = t.compile(n, e.compilerOptions, t), r = i.partials[i.name](a, i)), null != r) {
                            if (i.indent) {
                                for (var l = r.split("\n"), c = 0, d = l.length; c < d && (l[c] || c + 1 !== d); c++) l[c] = i.indent + l[c];
                                r = l.join("\n")
                            }
                            return r
                        }
                        throw new o.default("The partial " + i.name + " could not be compiled when running in runtime-only mode")
                    },
                    fn: function(t) {
                        var n = e[t];
                        return n.decorator = e[t + "_d"], n
                    },
                    programs: [],
                    program: function(e, t, n, a, s) {
                        var i = this.programs[e],
                            o = this.fn(e);
                        return t || s || a || n ? i = l(this, e, o, t, n, a, s) : i || (i = this.programs[e] = l(this, e, o)), i
                    },
                    data: function(e, t) {
                        for (; e && t--;) e = e._parent;
                        return e
                    },
                    merge: function(e, t) {
                        var n = e || t;
                        return e && t && e !== t && (n = s.extend({}, t, e)), n
                    },
                    nullContext: Object.seal({}),
                    noop: t.VM.noop,
                    compilerInfo: e.compiler
                };

                function a(t) {
                    var s = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1],
                        i = s.data;
                    a._setup(s), !s.partial && e.useData && (i = function(e, t) {
                        t && "root" in t || ((t = t ? r.createFrame(t) : {}).root = e);
                        return t
                    }(t, i));
                    var o = void 0,
                        l = e.useBlockParams ? [] : void 0;

                    function c(t) {
                        return "" + e.main(n, t, n.helpers, n.partials, i, l, o)
                    }
                    return e.useDepths && (o = s.depths ? t != s.depths[0] ? [t].concat(s.depths) : s.depths : [t]), (c = d(e.main, c, n, s.depths || [], i, l))(t, s)
                }
                return a.isTop = !0, a._setup = function(a) {
                    a.partial ? (n.helpers = a.helpers, n.partials = a.partials, n.decorators = a.decorators) : (n.helpers = n.merge(a.helpers, t.helpers), e.usePartial && (n.partials = n.merge(a.partials, t.partials)), (e.usePartial || e.useDecorators) && (n.decorators = n.merge(a.decorators, t.decorators)))
                }, a._child = function(t, a, s, i) {
                    if (e.useBlockParams && !s) throw new o.default("must pass block params");
                    if (e.useDepths && !i) throw new o.default("must pass parent depths");
                    return l(n, t, e[t], a, 0, s, i)
                }, a
            }, t.wrapProgram = l, t.resolvePartial = function(e, t, n) {
                e ? e.call || n.name || (n.name = e, e = n.partials[e]) : e = "@partial-block" === n.name ? n.data["partial-block"] : n.partials[n.name];
                return e
            }, t.invokePartial = function(e, t, n) {
                var a = n.data && n.data["partial-block"];
                n.partial = !0, n.ids && (n.data.contextPath = n.ids[0] || n.data.contextPath);
                var i = void 0;
                n.fn && n.fn !== c && function() {
                    n.data = r.createFrame(n.data);
                    var e = n.fn;
                    i = n.data["partial-block"] = function(t) {
                        var n = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];
                        return n.data = r.createFrame(n.data), n.data["partial-block"] = a, e(t, n)
                    }, e.partials && (n.partials = s.extend({}, n.partials, e.partials))
                }();
                void 0 === e && i && (e = i);
                if (void 0 === e) throw new o.default("The partial " + n.name + " could not be found");
                if (e instanceof Function) return e(t, n)
            }, t.noop = c;
            var a, s = function(e) {
                    if (e && e.__esModule) return e;
                    var t = {};
                    if (null != e)
                        for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                    return t.default = e, t
                }(n(20)),
                i = n(21),
                o = (a = i) && a.__esModule ? a : {
                    default: a
                },
                r = n(19);

            function l(e, t, n, a, s, i, o) {
                function r(t) {
                    var s = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1],
                        r = o;
                    return !o || t == o[0] || t === e.nullContext && null === o[0] || (r = [t].concat(o)), n(e, t, e.helpers, e.partials, s.data || a, i && [s.blockParams].concat(i), r)
                }
                return (r = d(n, r, e, o, a, i)).program = t, r.depth = o ? o.length : 0, r.blockParams = s || 0, r
            }

            function c() {
                return ""
            }

            function d(e, t, n, a, i, o) {
                if (e.decorator) {
                    var r = {};
                    t = e.decorator(t, r, n, a && a[0], i, o, a), s.extend(t, r)
                }
                return t
            }
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0, t.default = function(e) {
                var t = void 0 !== n.g ? n.g : window,
                    a = t.Handlebars;
                e.noConflict = function() {
                    return t.Handlebars === e && (t.Handlebars = a), e
                }
            }, e.exports = t.default
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                1: function(e, t, n, a, s, i) {
                    var o, r = e.lambda,
                        l = e.escapeExpression,
                        c = null != t ? t : e.nullContext || {};
                    return '    <div class="clash-failed-invite-row">\r\n      <div class="clash-failed-invite-summoner-icon-container">\r\n        <div class="clash-roster-member-summoner-icon" debug-id="' + l(r(null != (o = null != t ? t.rosterMember : t) ? o.summonerId : o, t)) + '">\r\n' + (null != (o = n.if.call(c, null != (o = i[0][0]) ? o.summonerIconPath : o, {
                        name: "if",
                        hash: {},
                        fn: e.program(2, s, 0, i),
                        inverse: e.program(5, s, 0, i),
                        data: s,
                        blockParams: i
                    })) ? o : "") + '        </div>\r\n      </div>\r\n      <div class="clash-failed-invite-summoner-name-container">\r\n        ' + l((n["player-name"] || t && t["player-name"] || n.helperMissing).call(c, {
                        name: "player-name",
                        hash: {
                            tagLine: null != (o = i[0][0]) ? o.tagLine : o,
                            gameName: null != (o = i[0][0]) ? o.gameName : o,
                            summonerName: null != (o = i[0][0]) ? o.displayName : o,
                            puuid: null != (o = i[0][0]) ? o.summonerId : o,
                            format: "short"
                        },
                        data: s,
                        blockParams: i
                    })) + '\r\n      </div>\r\n      <div class="clash-failed-invite-reason-container">\r\n        ' + l(r(null != (o = i[0][0]) ? o.exception : o, t)) + "\r\n      </div>\r\n    </div>\r\n"
                },
                2: function(e, t, n, a, s, i) {
                    var o;
                    return "            " + (null != (o = (n["uikit-framed-icon"] || t && t["uikit-framed-icon"] || n.helperMissing).call(null != t ? t : e.nullContext || {}, {
                        name: "uikit-framed-icon",
                        hash: {
                            borderwidth: 2
                        },
                        fn: e.program(3, s, 0, i),
                        inverse: e.noop,
                        data: s,
                        blockParams: i
                    })) ? o : "") + "\r\n"
                },
                3: function(e, t, n, a, s, i) {
                    var o;
                    return '<img src="' + e.escapeExpression(e.lambda(null != (o = i[2][0]) ? o.summonerIconPath : o, t)) + '">'
                },
                5: function(e, t, n, a, s) {
                    return '            <img class="clash-roster-member-empty-summoner-icon" src="/fe/lol-clash/assets/images/roster/player-empty-icon.png">\r\n'
                },
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s, i) {
                    var o, r, l = null != t ? t : e.nullContext || {},
                        c = n.helperMissing,
                        d = "function",
                        m = e.escapeExpression;
                    return '<lol-uikit-content-block type="dialog-large" id="clash-failed-invites-error-dialog-content">\r\n  <h4 style="margin-top:25px">' + m(typeof(r = null != (r = n.title || (null != t ? t.title : t)) ? r : c) === d ? r.call(l, {
                        name: "title",
                        hash: {},
                        data: s,
                        blockParams: i
                    }) : r) + '</h4>\r\n  <hr class="heading-spacer" />\r\n  <p>' + m(typeof(r = null != (r = n.description || (null != t ? t.description : t)) ? r : c) === d ? r.call(l, {
                        name: "description",
                        hash: {},
                        data: s,
                        blockParams: i
                    }) : r) + '</p>\r\n  <hr class="heading-spacer" /><hr class="heading-spacer" />\r\n' + (null != (o = n.each.call(l, null != t ? t.failedInvites : t, {
                        name: "each",
                        hash: {},
                        fn: e.program(1, s, 1, i),
                        inverse: e.noop,
                        data: s,
                        blockParams: i
                    })) ? o : "") + '  <hr class="heading-spacer" />\r\n</lol-uikit-content-block>\r\n'
                },
                useData: !0,
                useBlockParams: !0
            })
        }, (e, t, n) => {
            var a = n(38),
                s = n(39)(a);
            s.push([e.id, '.clash-failed-invite-row .clash-failed-invite-summoner-name-container,\n.clash-failed-invite-row .clash-failed-invite-reason-container {\n  font-family: var(--font-body);\n}\n.clash-failed-invite-row .clash-failed-invite-summoner-name-container,\n.clash-failed-invite-row .clash-failed-invite-reason-container {\n  -webkit-user-select: none;\n}\n.clash-failed-invite-row .clash-failed-invite-summoner-name-container,\n.clash-failed-invite-row .clash-failed-invite-reason-container {\n  font-kerning: normal;\n  -webkit-font-feature-settings: "kern" 1;\n  -webkit-font-smoothing: antialiased;\n}\n.clash-failed-invite-row .clash-failed-invite-summoner-name-container,\n.clash-failed-invite-row .clash-failed-invite-reason-container {\n  color: #a09b8c;\n  font-size: 14px;\n  font-weight: normal;\n  line-height: 20px;\n  letter-spacing: 0.025em;\n  -webkit-font-smoothing: subpixel-antialiased;\n}\n.clash-failed-invite-row .clash-failed-invite-summoner-name-container:lang(ar-ae),\n.clash-failed-invite-row .clash-failed-invite-reason-container:lang(ar-ae) {\n  letter-spacing: 0;\n}\n.clash-failed-invite-row {\n  display: flex;\n  flex-direction: row;\n  margin: 0 20px;\n  align-items: center;\n  border-bottom: 2px solid #131a20;\n}\n.clash-failed-invite-row .clash-failed-invite-summoner-icon-container {\n  margin: 14px 0 14px 20px;\n}\n.clash-failed-invite-row .clash-failed-invite-summoner-icon-container .clash-roster-member-summoner-icon {\n  width: 47px;\n  height: 47px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.clash-failed-invite-row .clash-failed-invite-summoner-icon-container .clash-roster-member-empty-summoner-icon {\n  height: 100%;\n}\n.clash-failed-invite-row .clash-failed-invite-summoner-name-container {\n  margin-left: 30px;\n  width: 250px;\n  text-align: left;\n}\n.clash-failed-invite-row .clash-failed-invite-reason-container {\n  color: #c89b3c;\n}\n#clash-failed-invites-error-dialog-content {\n  width: 700px;\n}\n', ""]), e.exports = s
        }, e => {
            "use strict";
            e.exports = function(e) {
                return e[1]
            }
        }, e => {
            "use strict";
            e.exports = function(e) {
                var t = [];
                return t.toString = function() {
                    return this.map((function(t) {
                        var n = "",
                            a = void 0 !== t[5];
                        return t[4] && (n += "@supports (".concat(t[4], ") {")), t[2] && (n += "@media ".concat(t[2], " {")), a && (n += "@layer".concat(t[5].length > 0 ? " ".concat(t[5]) : "", " {")), n += e(t), a && (n += "}"), t[2] && (n += "}"), t[4] && (n += "}"), n
                    })).join("")
                }, t.i = function(e, n, a, s, i) {
                    "string" == typeof e && (e = [
                        [null, e, void 0]
                    ]);
                    var o = {};
                    if (a)
                        for (var r = 0; r < this.length; r++) {
                            var l = this[r][0];
                            null != l && (o[l] = !0)
                        }
                    for (var c = 0; c < e.length; c++) {
                        var d = [].concat(e[c]);
                        a && o[d[0]] || (void 0 !== i && (void 0 === d[5] || (d[1] = "@layer".concat(d[5].length > 0 ? " ".concat(d[5]) : "", " {").concat(d[1], "}")), d[5] = i), n && (d[2] ? (d[1] = "@media ".concat(d[2], " {").concat(d[1], "}"), d[2] = n) : d[2] = n), s && (d[4] ? (d[1] = "@supports (".concat(d[4], ") {").concat(d[1], "}"), d[4] = s) : d[4] = "".concat(s)), t.push(d))
                    }
                }, t
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            n(41);
            const s = "/lol-login/v1/session",
                i = "/lol-summoner/v1/current-summoner",
                o = "/lol-platform-config/v1/namespaces/ClashConfig/LoginModalEnabled",
                r = "/lol-platform-config/v1/namespaces/ClashConfig/LoginModalLevelRequirement",
                l = "/lol-settings/v1/account/lol-clash",
                c = "clash-login-modal-seen";
            t.default = class {
                constructor(e, t) {
                    this._tra = e, this._clashApi = t, this._requirements = {
                        clashAvailable: !1,
                        login: !1,
                        enabled: !1,
                        settingsReady: !1,
                        settingsExist: !1,
                        seen: !0,
                        levelRequirementConfig: null,
                        summonerLevel: null,
                        isNamedSummoner: null
                    }, this._binding = a.dataBinding.bindTo((0, a.getProvider)().getSocket()), this._binding.addObserver(s, this, this._updateLogin), this._binding.addObserver(o, this, this._updateEnabledConfig), this._binding.addObserver("/lol-settings/v2/ready", this, this._updateSettingsReady), this._binding.addObserver(r, this, this._updateLevelRequirementConfig), this._binding.addObserver(i, this, this._updateSummoner)
                }
                setClashAvailable(e) {
                    this._allowAvailabilityUpdate && this._updateRequirements({
                        clashAvailable: e
                    })
                }
                _updateLogin(e) {
                    const t = e && "SUCCEEDED" === e.state;
                    this._updateRequirements({
                        login: t
                    }), t && (this._allowAvailabilityUpdate = !0, setTimeout((() => {
                        this._allowAvailabilityUpdate = !1, this._requirements.clashAvailable || (a.logger.trace("clash-login-modal -- clash still not available, no longer allowing modal popup for this session"), this._clearBindings())
                    }), 1e4))
                }
                _updateEnabledConfig(e) {
                    e = Boolean(e), this._updateRequirements({
                        enabled: e
                    })
                }
                _updateSettingsReady(e) {
                    e = Boolean(e), this._updateRequirements({
                        settingsReady: e
                    }), e && this._binding.addObserver(l, this, this._updateSettings)
                }
                _updateLevelRequirementConfig(e) {
                    const t = Math.max(e || 29, 1);
                    this._updateRequirements({
                        levelRequirementConfig: t
                    })
                }
                _updateSummoner(e) {
                    if (e && e.summonerLevel) {
                        const {
                            summonerLevel: t
                        } = e;
                        this._updateRequirements({
                            summonerLevel: t
                        })
                    }
                    const t = e && !e.unnamed && !e.nameChangeFlag;
                    this._updateRequirements({
                        isNamedSummoner: t
                    })
                }
                _updateSettings(e) {
                    a.logger.trace("clash-login-modal -- update settings:", e);
                    const t = void 0 !== e,
                        {
                            settingsReady: n
                        } = this._requirements,
                        s = {
                            settingsExist: t
                        };
                    if (t && n) {
                        const t = e && e.data;
                        s.seen = !!t && Boolean(e.data[c])
                    }
                    this._updateRequirements(s)
                }
                _updateRequirements(e) {
                    for (const t of Object.keys(e)) a.logger.trace(`clash-login-modal -- requirement [${t}] is now`, e[t]);
                    this._requirements = a._.assign(this._requirements, e), a.logger.trace("clash-login-modal -- requirements:", this._requirements), this._requirements.login && this._requirements.clashAvailable && this._requirements.enabled && this._requirements.settingsExist && this._requirements.isNamedSummoner && this._requirements.summonerLevel && this._requirements.levelRequirementConfig && (this._clearBindings(), !this._requirements.seen && this._requirements.summonerLevel >= this._requirements.levelRequirementConfig ? this._showLoginModal() : a.logger.trace("clash-login-modal -- all requirements met, but login modal has already been seen."))
                }
                _clearBindings() {
                    this._binding.removeObserver(s, this), this._binding.removeObserver(i, this), this._binding.removeObserver(o, this), this._binding.removeObserver(r, this), this._binding.removeObserver(l, this)
                }
                _markSettingsSeen() {
                    const e = {};
                    return e[c] = !0, this._binding.patch(l, {
                        data: e,
                        schemaVersion: 1
                    }).then((() => a.logger.trace("clash-login-modal -- updated settings successfully")), (() => a.logger.error("clash-login-modal -- failed to update settings")))
                }
                _closeModal() {
                    a.logger.trace("clash-login-modal -- closed"), this._markSettingsSeen(), a.ModalManager.remove(this._modal), a.Util.destroyEmberApp(this._app), this._modal = null, this._app = null
                }
                _showLoginModal() {
                    this._shownThisSession ? a.logger.trace("clash-login-modal -- _showLoginModal has already ran once this session, ignoring.") : (this._shownThisSession = !0, a.logger.trace("clash-login-modal -- all requirements met, showing login modal..."), this.showLoginModal())
                }
                showLoginModal() {
                    this._app = a.componentFactory.create("LoginModalComponent", {
                        closeCallback: () => this._closeModal()
                    }), this._modal = a.ModalManager.add({
                        type: "DialogAlert",
                        data: {
                            contents: this._app.domNode,
                            okText: this._tra.get("clash_login_modal_ok_text"),
                            dismissible: !1
                        }
                    }), this._modal.domNode.classList.add("rcp-fe-lol-clash-login-modal-dialog"), this._modal.okPromise.then((() => {
                        this._closeModal(), a.logger.trace("clash-login-modal -- ok button clicked, navigating to Clash"), this._clashApi.open()
                    }), (() => {}))
                }
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = "/lol-platform-config/v1/namespaces/ClashConfig/IsRewardsModalEnabled",
                i = "/lol-settings/v1/account/lol-clash",
                o = "clash-rewards-modal-seen";
            t.default = class {
                constructor(e, t) {
                    this._tra = e, this._clashApi = t, this._requirements = {
                        clashAvailable: !1,
                        enabled: !0,
                        settingsReady: !1,
                        settingsExist: !1,
                        seen: !0
                    }, this._binding = a.dataBinding.bindTo((0, a.getProvider)().getSocket()), this._binding.addObserver(s, this, this._updateEnabledConfig), this._binding.addObserver("/lol-settings/v2/ready", this, this._updateSettingsReady)
                }
                setClashAvailable(e) {
                    this._allowAvailabilityUpdate && this._updateRequirements({
                        clashAvailable: e
                    })
                }
                tryShowModal() {
                    this._requirements.enabled && this._requirements.settingsExist && (this._clearBindings(), this._requirements.seen || this._showRewardsModal())
                }
                _updateEnabledConfig(e) {
                    e = Boolean(e), this._updateRequirements({
                        enabled: e
                    })
                }
                _updateSettingsReady(e) {
                    e = Boolean(e), this._updateRequirements({
                        settingsReady: e
                    }), e && this._binding.addObserver(i, this, this._updateSettings)
                }
                _updateSettings(e) {
                    a.logger.trace("clash-rewards-modal -- update settings:", e);
                    const t = void 0 !== e,
                        {
                            settingsReady: n
                        } = this._requirements,
                        s = {
                            settingsExist: t
                        };
                    if (t && n) {
                        const t = e && e.data;
                        s.seen = !!t && Boolean(e.data[o])
                    }
                    this._updateRequirements(s)
                }
                _updateRequirements(e) {
                    for (const t of Object.keys(e)) a.logger.trace(`clash-rewards-modal -- requirement [${t}] is now`, e[t]);
                    this._requirements = a._.assign(this._requirements, e), a.logger.trace("clash-rewards-modal -- requirements:", this._requirements), this._requirements.clashAvailable && this._requirements.enabled && this._requirements.settingsExist && (this._clearBindings(), this._requirements.seen ? a.logger.trace("clash-rewards-modal -- all requirements met, but rewards modal has already been seen.") : this._showRewardsModal())
                }
                _clearBindings() {
                    this._binding.removeObserver(s, this)
                }
                _markSettingsSeen() {
                    const e = {};
                    return e[o] = !0, this._binding.patch(i, {
                        data: e,
                        schemaVersion: 1
                    }).then((() => a.logger.warning("clash-rewards-modal -- updated settings successfully")), (() => a.logger.error("clash-rewards-modal -- failed to update settings")))
                }
                _closeModal() {
                    a.logger.warning("clash-rewards-modal -- closed"), this._markSettingsSeen(), a.ModalManager.remove(this._modal), a.Util.destroyEmberApp(this._app), this._modal = null, this._app = null
                }
                _showRewardsModal() {
                    this._shownThisSession ? a.logger.trace("clash-rewards-modal -- _showRewardsModal has already ran once this session, ignoring.") : (this._shownThisSession = !0, a.logger.trace("clash-rewards-modal -- all requirements met, showing rewards modal..."), this.showRewardsModal())
                }
                showRewardsModal() {
                    this._app = a.componentFactory.create("RewardsModalComponent", {
                        closeCallback: () => this._closeModal()
                    }), this._modal = a.ModalManager.add({
                        type: "DialogAlert",
                        data: {
                            contents: this._app.domNode,
                            okText: this._tra.get("clash_rewards_ok_button_text"),
                            dismissible: !1
                        }
                    }), this._modal.domNode.classList.add("rcp-fe-lol-clash-rewards-modal-dialog"), this._modal.okPromise.then((() => {
                        this._closeModal(), a.logger.trace("clash-rewards-modal -- ok button clicked, navigating to Clash"), this._clashApi.open()
                    }), (() => {}))
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            n(41);
            const s = "/lol-login/v1/session",
                i = "/lol-summoner/v1/current-summoner",
                o = "/lol-platform-config/v1/namespaces/ClashConfig/ClashStartModalEnabled",
                r = "/lol-settings/v1/account/lol-clash",
                l = "clash-start-modal-2022-seen";
            t.default = class {
                constructor(e) {
                    this._tra = e, this._requirements = {
                        login: !1,
                        summonerLevel: null,
                        isNamedSummoner: !1,
                        enabled: !1,
                        settingsReady: !1,
                        settingsExist: !1,
                        seen: !0,
                        levelRequirementConfig: null
                    }, this._binding = a.dataBinding.bindTo((0, a.getProvider)().getSocket()), this._binding.addObserver(s, this, this._updateLogin), this._binding.addObserver(i, this, this._updateSummoner), this._binding.addObserver(o, this, this._updateEnabledConfig), this._binding.addObserver("/lol-platform-config/v1/namespaces/ClashConfig/ClashStartModalLevelRequirement", this, this._updateLevelRequirementConfig), this._binding.addObserver("/lol-settings/v2/ready", this, this._updateSettingsReady)
                }
                _updateLogin(e) {
                    const t = e && "SUCCEEDED" === e.state;
                    this._updateRequirements({
                        login: t
                    })
                }
                _updateLevelRequirementConfig(e) {
                    const t = Math.max(e || 5, 1);
                    this._updateRequirements({
                        levelRequirementConfig: t
                    })
                }
                _updateSummoner(e) {
                    if (e && e.summonerLevel) {
                        const {
                            summonerLevel: t
                        } = e;
                        this._updateRequirements({
                            summonerLevel: t
                        })
                    }
                    const t = e && !e.unnamed && !e.nameChangeFlag;
                    this._updateRequirements({
                        isNamedSummoner: t
                    })
                }
                _updateEnabledConfig(e) {
                    e = Boolean(e), this._updateRequirements({
                        enabled: e
                    })
                }
                _updateSettingsReady(e) {
                    e = Boolean(e), this._updateRequirements({
                        settingsReady: e
                    }), e && this._binding.addObserver(r, this, this._updateSettings)
                }
                _updateSettings(e) {
                    a.logger.trace("clash-start-modal -- update settings:", e);
                    const t = void 0 !== e,
                        {
                            settingsReady: n
                        } = this._requirements,
                        s = {
                            settingsExist: t
                        };
                    if (t && n) {
                        const t = e && e.data;
                        s.seen = !!t && Boolean(e.data[l])
                    }
                    this._updateRequirements(s)
                }
                _updateRequirements(e) {
                    for (const t of Object.keys(e)) a.logger.trace(`clash-start-modal -- requirement [${t}] is now`, e[t]);
                    this._requirements = a._.assign(this._requirements, e), a.logger.trace("clash-start-modal -- requirements:", this._requirements), this._requirements.login && this._requirements.enabled && this._requirements.settingsExist && this._requirements.isNamedSummoner && this._requirements.summonerLevel && this._requirements.levelRequirementConfig && this._requirements.summonerLevel >= this._requirements.levelRequirementConfig && (this._clearBindings(), this._requirements.seen ? a.logger.trace("clash-start-modal -- all requirements met, but Clash Start modal has already been seen.") : this._showClashStartModal())
                }
                _clearBindings() {
                    this._binding.removeObserver(s, this), this._binding.removeObserver(i, this), this._binding.removeObserver(o, this), this._binding.removeObserver(r, this)
                }
                _markSettingsSeen() {
                    const e = {};
                    return e[l] = !0, this._binding.patch(r, {
                        data: e,
                        schemaVersion: 1
                    }).then((() => a.logger.trace("clash-start-modal -- updated settings successfully")), (() => a.logger.error("clash-start-modal -- failed to update settings")))
                }
                _closeModal() {
                    a.logger.trace("clash-start-modal -- closed"), this._markSettingsSeen(), a.ModalManager.remove(this._modal), a.Util.destroyEmberApp(this._app), this._modal = null, this._app = null
                }
                _showClashStartModal() {
                    if (this._shownThisSession) return void a.logger.trace("clash-start-modal -- _showClashStartModal has already ran once this session, ignoring.");
                    this._shownThisSession = !0, a.logger.trace("clash-start-modal -- all requirements met, showing Clash Start modal...");
                    this._app = a.componentFactory.create("ClashStartModalComponent", {
                        closeCallback: () => this._closeModal()
                    }), this._modal = a.ModalManager.add({
                        type: "DialogAlert",
                        data: {
                            contents: this._app.domNode,
                            okText: this._tra.get("clash_start_modal_ok_text"),
                            dismissible: !1
                        }
                    }), this._modal.okPromise.then((() => {
                        this._closeModal(), a.logger.trace("clash-start-modal -- ok button clicked, navigating to Clash")
                    }), (() => {}))
                }
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            const n = Object.freeze({
                    POPUP_TEAM_SCOUTING_STARTED: "POPUP_TEAM_SCOUTING_STARTED",
                    POPUP_TEAM_DROPPED_TO_CONSOLATION: "POPUP_TEAM_DROPPED_TO_CONSOLATION",
                    POPUP_TEAM_BYE: "POPUP_TEAM_BYE"
                }),
                a = {};
            let s = !1,
                i = [];
            class o {
                constructor() {}
                static wasReminded(e, t) {
                    const n = a[e];
                    return !!n && n.includes(t)
                }
                static setReminded(e, t) {
                    let n = a[e];
                    n || (n = [], a[e] = n), n.push(t)
                }
                static setShowOverviewPageOnce(e) {
                    s = e;
                    for (const e of i) e();
                    i = []
                }
                static willShowOverviewPageOnce() {
                    return s
                }
                static addOneTimeShowOverviewCallback(e) {
                    i.push(e)
                }
                static clearShowOverviewCallback() {
                    i = []
                }
            }
            o.Type = n;
            var r = o;
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            t.default = class {
                constructor() {
                    a.logger.trace("Clash Telemetry initializing"), this._eventQueue = [], this._configBinding = (0, a.dataBinding)("/lol-platform-config/v1", (0, a.getProvider)().getSocket()), this._configBinding.addObserver("/namespaces/ClashConfig/DisabledEvents", this, (e => {
                        this._disabledEvents = null === e || "" === e || void 0 === e ? [] : e, this._processQueue()
                    })), this._configBinding.addObserver("/namespaces/ClashConfig/EventSendingEnabled", this, (e => {
                        this._isEventSendingEnabled = null === e || "" === e || void 0 === e || e, this._processQueue()
                    })), this._configBinding.addObserver("/namespaces/ClashConfig/EventSendingRoute", this, (e => {
                        this._isEventSendingRoute = null === e || "" === e || void 0 === e ? "BE" : e, this._processQueue()
                    })), this._summoner = (0, a.dataBinding)("/lol-summoner", (0, a.getProvider)().getSocket()), this._summoner.addObserver("/v1/current-summoner", this, (e => {
                        this._localPlayerSummonerId = e && e.summonerId, this._processQueue()
                    })), this._telemetry = (0, a.dataBinding)("/telemetry", (0, a.getProvider)().getSocket())
                }
                sendEvent(e, t = {}) {
                    const n = Object.assign({}, t);
                    n.type = e, this._isReady() ? this._sendTelemetryEvent(n, this._localPlayerSummonerId) : (a.logger.trace("Clash Telemetry queuing event", n), this._eventQueue.push(n))
                }
                _isReady() {
                    return Boolean(this._localPlayerSummonerId) && void 0 !== this._isEventSendingRoute && void 0 !== this._disabledEvents && void 0 !== this._isEventSendingEnabled
                }
                _processQueue() {
                    this._isReady() && (a.logger.trace(`Clash Telemetry initialized for summonerId = ${this._localPlayerSummonerId}`), 0 !== this._eventQueue.length && (a.logger.trace(`Clash Telemetry sending ${this._eventQueue.length} queued events`), this._eventQueue.forEach((e => this._sendTelemetryEvent(e, this._localPlayerSummonerId))), this._eventQueue = []))
                }
                _sendTelemetryEvent(e, t) {
                    this._isEventSendingEnabled && !this._disabledEvents.includes(e.type) ? (e.summonerId = t, a.logger.trace(`Clash Telemetry sending event (${this._isEventSendingRoute})`, e), "BE" === this._isEventSendingRoute ? this._telemetry.post("/v1/events/lcu_clash__event", e).then((() => a.logger.trace("Clash Telemetry sent event (BE)", e)), (t => a.logger.warning(`Clash Telemetry failed to send event ${e.type}`, t))) : "FE" === this._isEventSendingRoute ? (a.Telemetry.sendCustomData("lcu_clash__event", e), a.logger.trace("Clash Telemetry sent event (FE)", e)) : a.logger.warning(`Clash Telemetry unknown event sending route ${this._isEventSendingRoute}`)) : a.logger.trace(`Clash Telemetry event logging disabled for ${e.type}`)
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = n(9);
            t.default = class {
                constructor(e) {
                    this._appData = e, this._lastUpdatedMap = {}, this._binding = a.dataBinding.bindTo((0, a.getProvider)().getSocket()), this._binding.addObserver("/lol-inventory/v2/inventory/TOURNAMENT_TROPHY", this, this._updateInventory.bind(this, "TROPHY")), this._binding.addObserver("/lol-inventory/v2/inventory/TOURNAMENT_FLAG", this, this._updateInventory.bind(this, "FLAG")), this._binding.addObserver("/lol-inventory/v2/inventory/TOURNAMENT_LOGO", this, this._updateInventory.bind(this, "LOGO"))
                }
                _updateInventory(e, t) {
                    if (null == t) return;
                    if (0 === t.length) return void(this._lastUpdatedMap[e] = 0);
                    const n = this._getLastPurchaseDate(t);
                    n < 0 || (!this._lastUpdatedMap[e] || this._lastUpdatedMap[e] < n) && (this._lastUpdatedMap[e] = n, this._appData.navTabs[s.ClashTab.AWARDS].setAlert(!0))
                }
                _getLastPurchaseDate(e) {
                    if (!e || !e.length) return 0;
                    const t = e.map((e => new Date(this._convertDateStringToISOString(e.purchaseDate)).getTime()));
                    return t.length > 0 ? Math.max(...t) : 0
                }
                _convertDateStringToISOString(e) {
                    if (!/^[0-9]{8}T[0-9]{6}.[0-9]{3}Z$/.test(e)) return e;
                    return `${e.substr(0,4)}-${e.substr(4,2)}-${e.substr(6,2)}T${e.substr(9,2)}:${e.substr(11,2)}:${e.substr(13,2)}Z`
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            var s = function() {
                (0, a.webComponents.registerCustomElementV1)(n(48).default)
            };
            t.default = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            class s extends a.webComponents.ShadowElement {
                templateMarkup() {
                    return n(49)
                }
                static createSpacer(e) {
                    const t = document.createElement("div");
                    return t.style.height = `${e}px`, t
                }
                static mergeElementsByType(e, t) {
                    e.forEach(((n, a) => {
                        const s = e.get(a),
                            i = t.get(a);
                        s.size > 0 && t.set(a, new Map([...s, ...i]))
                    }))
                }
                static isValidData(e) {
                    if (!Array.isArray(e)) return !1;
                    return e.every((function(e) {
                        return Object.prototype.hasOwnProperty.call(e, "height") && Object.prototype.hasOwnProperty.call(e, "type")
                    }))
                }
                constructor() {
                    super(), this._resetDefaultValues(), this._cacheSize = 1, this._containerHeightPx = 0, this._createListElement = () => {}, this._updateListElement = () => {}, this._resetListElement = () => {}, this._deleteListElement = () => {};
                    const e = this._handleScroll.bind(this);
                    this._registerScrollEventListener = () => {
                        this._pendingScrollEventListenerRaf = void 0, this._container.addEventListener("scroll", e)
                    }, this._clearScrollEventListener = () => {
                        this._container.removeEventListener("scroll", e)
                    }, this._destroy = () => {
                        if (!this.isDestroyed) try {
                            this._pendingScrollEventListenerRaf && cancelAnimationFrame(this._pendingScrollEventListenerRaf), this._invisibleElementsByType.forEach(((e, t) => {
                                e.forEach((e => {
                                    this._deleteListElement(e, t)
                                }))
                            })), this._deleteVisibleElements(), this._resetDefaultValues()
                        } finally {
                            this.isDestroyed = !0, this._container = null, this._containerHeightPx = 0, this._createListElement = null, this._updateListElement = null, this._resetListElement = null, this._deleteListElement = null
                        }
                    }
                }
                connectedCallback() {
                    super.connectedCallback(), this.isDestroyed || (this._registerScrollEventListener(), this._updateElementsAtPosition(this._currentPosition()))
                }
                disconnectedCallback() {
                    super.disconnectedCallback(), this.isDestroyed || this._clearScrollEventListener()
                }
                destroy() {
                    this.isDestroyed || this._destroy()
                }
                refresh() {
                    if (this.isDestroyed) return;
                    const e = this._currentPosition(),
                        t = this._firstVisibleElementIndex(e),
                        n = this._visibleItemCount(e);
                    for (let e = t; e < t + n; e += 1) {
                        const t = this._data[e],
                            n = this._elementsByType.get(t.type).get(e);
                        this._updateListElement(n, t)
                    }
                }
                set container(e) {
                    if (!(e instanceof HTMLElement)) throw new TypeError("expected container to be a HTMLElement");
                    this.isDestroyed || (this._container = e)
                }
                set data(e) {
                    if (!s.isValidData(e)) throw new TypeError("provided data are invalid");
                    if (this.isDestroyed) return;
                    const t = this._totalItemCount();
                    this._resetDefaultValues(), this._data = e;
                    let n = 0;
                    e.forEach((e => {
                        n += e.height - 1, this._elementBottomPositions.push(n), n += 1, this._totalItemHeightPx += e.height
                    })), t > 0 ? (this._deleteVisibleElements(), this._createVisibleElements()) : this._createVisibleElements(), this._container && (this._container.scrollTop = 0)
                }
                set createElement(e) {
                    if ("function" != typeof e) throw new TypeError("expected createElement to be a function");
                    this.isDestroyed || (this._createListElement = e)
                }
                set updateElement(e) {
                    if ("function" != typeof e) throw new TypeError("expected updateElement to be a function");
                    this.isDestroyed || (this._updateListElement = e)
                }
                set resetElement(e) {
                    if ("function" != typeof e) throw new TypeError("expected resetElement to be a function");
                    this.isDestroyed || (this._resetListElement = e)
                }
                set deleteElement(e) {
                    if ("function" != typeof e) throw new TypeError("expected deleteElement to be a function");
                    this.isDestroyed || (this._deleteListElement = e)
                }
                set containerHeightPx(e) {
                    if (!Number.isInteger(e) || e < 0) throw new TypeError("expected containerHeightPx to be a positive number");
                    this.isDestroyed || (this._containerHeightPx = e)
                }
                set cacheSize(e) {
                    if (!Number.isInteger(e) || e < 0) throw new TypeError("expected cacheSize to be a positive number");
                    this.isDestroyed || (this._cacheSize = e)
                }
                _resetDefaultValues() {
                    this.isDestroyed = !1, this._data = [], this._elementBottomPositions = [], this._elementsByType = new Map, this._invisibleElementsByType = new Map, this._idxFirstVisible = 0, this._idxLastVisible = 0, this._totalItemHeightPx = 0
                }
                _firstVisibleElementIndex(e) {
                    let t = this._elementBottomPositions.findIndex((t => t >= e));
                    if (-1 === t) {
                        const n = this._elementBottomPositions.length - 1,
                            a = this._elementBottomPositions[n] - this._containerHeightPx;
                        t = e > a ? this._firstVisibleElementIndex(a) : 0
                    }
                    return t
                }
                _lastVisibleElementIndex(e) {
                    let t = this._elementBottomPositions.findIndex((t => e + this._containerHeightPx - 1 <= t));
                    return -1 === t && (t = this._elementBottomPositions.length - 1), t
                }
                _visibleItemCount(e) {
                    const t = this._firstVisibleElementIndex(e);
                    return this._lastVisibleElementIndex(e) - t + 1
                }
                _totalItemCount() {
                    return this._data.length
                }
                _updatePosition(e, t, n) {
                    e.dataset.rowId = t, e.dataset.type = n;
                    const a = t > 0 ? this._elementBottomPositions[t - 1] + 1 : 0;
                    e.style.transform = `translate3d(0, ${a}px, 0)`
                }
                _recycleFromCachedElements(e, t, n, a, s) {
                    const i = Array.from(n.keys()).sort(((e, t) => e - t));
                    if (i.length > 0) {
                        let o;
                        e < t ? o = i.shift() : e > t && (o = i.pop());
                        const r = n.get(o);
                        if (this._stillInViewport(this._elementBottomPositions[o], a, s)) return;
                        return n.delete(o), r
                    }
                }
                _stillInViewport(e, t, n) {
                    return e >= t && e - n <= t + this._containerHeightPx
                }
                _updateElementsAtPosition(e) {
                    let t = this._firstVisibleElementIndex(e);
                    const n = this._lastVisibleElementIndex(e);
                    if (this._idxFirstVisible === t && this._idxLastVisible === n) return;
                    this._reclaimInvisibleElements(e);
                    const a = Array.from(this._elementsByType.values()).reduce(((e, t) => e + Array.from(t.keys()).length), 0);
                    t > this._data.length - a && (t = this._data.length - a);
                    const i = this._visibleItemCount(e),
                        o = Math.max(i, a),
                        r = new Map;
                    for (let n = t; n < t + o; n += 1) {
                        const a = this._data[n];
                        let s = r.get(a.type);
                        s || (s = new Map, r.set(a.type, s));
                        let i = this._elementsByType.get(a.type);
                        i || (i = new Map, this._elementsByType.set(a.type, i));
                        let o = i.get(n);
                        if (!o) {
                            let s = this._recycleFromCachedElements(this._idxFirstVisible, t, i, e, a.height);
                            s || (s = this._popInvisibleElement(a.type, n)), s || (s = this._createListElement(a), s.style.position = "absolute", this._cacheElement(s, a.type, n), this.insertBefore(s, this.firstChild)), o = s, this._updateListElement(o, a), this._updatePosition(o, n, a.type)
                        }
                        s.set(n, o)
                    }
                    s.mergeElementsByType(this._elementsByType, r), this._elementsByType = r, this._idxFirstVisible = t, this._idxLastVisible = n
                }
                _reclaimInvisibleElements(e) {
                    this._elementsByType.forEach(((t, n) => {
                        t.forEach(((t, a) => {
                            const s = this._data[a].height;
                            if (!this._stillInViewport(this._elementBottomPositions[a], e, s)) {
                                const e = this._elementsByType.get(n),
                                    t = e.get(a);
                                this._resetListElement(t, this._data[a]), this._pushInvisibleElement(n, a, t), e.delete(a)
                            }
                        }))
                    }))
                }
                _pushInvisibleElement(e, t, n) {
                    if (!e || !n) return;
                    let a = this._invisibleElementsByType.get(e);
                    a || (a = new Map, this._invisibleElementsByType.set(e, a)), a.set(t, n)
                }
                _popInvisibleElement(e, t) {
                    if (!e) return;
                    const n = this._invisibleElementsByType.get(e);
                    if (!n) return;
                    const a = n.get(t);
                    if (a) return n.delete(t), a;
                    if (n.size) {
                        const [e, t] = n.entries().next().value;
                        return n.delete(e), t
                    }
                }
                _currentPosition() {
                    return this._container.scrollTop
                }
                _handleScroll() {
                    this._updateElementsAtPosition(this._currentPosition()), this._clearScrollEventListener(), this._pendingScrollEventListenerRaf || (this._pendingScrollEventListenerRaf = requestAnimationFrame(this._registerScrollEventListener))
                }
                _createVisibleElements() {
                    if (this._totalItemCount() > 0) {
                        const e = s.createSpacer(0);
                        e.style.height = `${this._totalItemHeightPx}px`;
                        const t = this._visibleItemCount(0) + this._cacheSize;
                        for (let e = 0; e < t && e < this._data.length; e += 1) {
                            const t = this._data[e],
                                n = this._createListElement(t);
                            n.style.position = "absolute", this._updateListElement(n, t), this._updatePosition(n, e, t.type), this._cacheElement(n, t.type, e), this.appendChild(n)
                        }
                        this.appendChild(e)
                    }
                }
                _deleteVisibleElements() {
                    for (; this.firstChild;) {
                        if (void 0 !== this.firstChild.dataset.rowId) {
                            const {
                                type: e
                            } = this.firstChild.dataset;
                            this._deleteListElement(this.firstChild, e)
                        }
                        this.removeChild(this.firstChild)
                    }
                }
                _cacheElement(e, t, n) {
                    let a = this._elementsByType.get(t);
                    a || (a = new Map, this._elementsByType.set(t, a)), a.set(n, e)
                }
            }
            s.tagName = "lol-collectibles-libs-virtual-list";
            var i = s;
            t.default = i
        }, e => {
            "use strict";
            e.exports = "<template>\r\n  <slot></slot>\r\n</template>"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = "/lol-platform-config/v1/namespaces/ClashConfig/AntiCheatModalEnabled",
                i = "/lol-settings/v1/account/lol-clash",
                o = "/lol-settings/v2/ready",
                r = "clash-anticheat-modal-seen",
                l = n(16);
            t.default = class {
                constructor(e) {
                    this._tra = e, this._requirements = {
                        enabled: !1,
                        settingsReady: !1,
                        settingsExist: !1,
                        seen: !0
                    }, this._binding = a.dataBinding.bindTo((0, a.getProvider)().getSocket()), this._binding.addObserver(s, this, this._updateEnabledConfig), this._binding.addObserver(o, this, this._updateSettingsReady)
                }
                tryShowModal() {
                    this._requirements.enabled && this._requirements.settingsExist && (this._clearBindings(), this._requirements.seen || this._showAnticheatModal())
                }
                _updateEnabledConfig(e) {
                    e = Boolean(e), this._updateRequirements({
                        enabled: e
                    })
                }
                _updateSettingsReady(e) {
                    e = Boolean(e), this._updateRequirements({
                        settingsReady: e
                    }), e && this._binding.addObserver(i, this, this._updateSettings)
                }
                _updateSettings(e) {
                    a.logger.trace("clash-anticheat-modal -- update settings:", e);
                    const t = void 0 !== e,
                        {
                            settingsReady: n
                        } = this._requirements,
                        s = {
                            settingsExist: t
                        };
                    if (t && n) {
                        const t = e && e.data;
                        s.seen = !!t && Boolean(e.data[r])
                    }
                    this._updateRequirements(s)
                }
                _updateRequirements(e) {
                    for (const t of Object.keys(e)) a.logger.trace(`clash-anticheat-modal -- requirement [${t}] is now`, e[t]);
                    this._requirements = a._.assign(this._requirements, e), a.logger.trace("clash-anticheat-modal -- requirements:", this._requirements)
                }
                _clearBindings() {
                    this._binding.removeObserver(s, this), this._binding.removeObserver(i, this), this._binding.removeObserver(o, this)
                }
                _markSettingsSeen() {
                    const e = {};
                    return e[r] = !0, this._binding.patch(i, {
                        data: e,
                        schemaVersion: 1
                    }).then((() => a.logger.trace("clash-anticheat-modal -- updated settings successfully")), (() => a.logger.error("clash-anticheat-modal -- failed to update settings")))
                }
                _closeModal() {
                    a.logger.trace("clash-anticheat-modal -- closed"), this._markSettingsSeen(), a.ModalManager.remove(this._modal), this._modal = null
                }
                _showAnticheatModal() {
                    this._shownThisSession || (this._shownThisSession = !0, this.showAnticheatModal())
                }
                showAnticheatModal() {
                    const e = l({
                            title: this._tra.get("clash_anticheat_modal_title"),
                            description: this._tra.get("clash_anticheat_modal_description")
                        }),
                        t = a.Util.createDomNode(e);
                    this._modal = a.ModalManager.add({
                        type: "DialogAlert",
                        data: {
                            contents: t,
                            okText: this._tra.get("clash_anticheat_button_accept"),
                            dismissible: !1
                        }
                    }), this._modal.okPromise.then((() => {
                        this._closeModal()
                    }), (() => {}))
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = n(52);
            const i = "/lol-login/v1/session",
                o = "/lol-summoner/v1/current-summoner",
                r = "/lol-settings/v1/account/lol-clash",
                l = "/lol-client-config/v3/client-config/lol.client_settings.clash.eosCelebrationEnabled";
            t.default = class {
                constructor() {
                    this._requirements = {
                        login: !1,
                        enabledByClientConfigs: !1,
                        settingsReady: !1,
                        settingsExist: !1,
                        seen: !0,
                        isNamedSummoner: null,
                        withinValidTimeFrame: !1
                    }, this._currentSeasonData = {
                        seasonId: null,
                        year: null
                    }, this._eosSeenPropName = null, this._binding = a.dataBinding.bindTo((0, a.getProvider)().getSocket()), this._binding.addObserver(i, this, this._updateLogin), this._binding.addObserver(o, this, this._updateSummoner), this._binding.get("/lol-seasons/v1/season/recent-final-split").then((e => {
                        e && (this._setSeasonData(e), this._addSeasonDataDependentObservers())
                    }))
                }
                _addSeasonDataDependentObservers() {
                    this._binding.addObserver(l, this, this._updateEnabledConfig), this._binding.addObserver("/lol-settings/v2/ready", this, this._updateSettingsReady)
                }
                _updateLogin(e) {
                    const t = e && "SUCCEEDED" === e.state;
                    this._updateRequirements({
                        login: t
                    })
                }
                _updateEnabledConfig(e) {
                    e = Boolean(e), this._updateRequirements({
                        enabledByClientConfigs: e
                    })
                }
                _updateSettingsReady(e) {
                    e = Boolean(e), this._updateRequirements({
                        settingsReady: e
                    }), e && this._binding.addObserver(r, this, this._updateSettings)
                }
                _updateSummoner(e) {
                    const t = e && !e.unnamed && !e.nameChangeFlag;
                    this._updateRequirements({
                        isNamedSummoner: t
                    })
                }
                _updateSettings(e) {
                    a.logger.trace("clash-eos-celebration -- update settings:", e);
                    const t = void 0 !== e,
                        {
                            settingsReady: n
                        } = this._requirements,
                        s = {
                            settingsExist: t
                        };
                    if (t && n) {
                        const t = e && e.data;
                        s.seen = !!t && Boolean(e.data[this._eosSeenPropName])
                    }
                    this._updateRequirements(s)
                }
                _updateRequirements(e) {
                    for (const t of Object.keys(e)) a.logger.trace(`clash-eos-celebration -- requirement [${t}] is now`, e[t]);
                    this._requirements = a._.assign(this._requirements, e), a.logger.trace("clash-eos-celebration -- requirements:", this._requirements), this._requirements.login && this._requirements.enabledByClientConfigs && this._requirements.settingsExist && this._requirements.isNamedSummoner && this._requirements.withinValidTimeFrame && (this._clearBindings(), this._requirements.seen ? a.logger.trace("clash-eos-celebration -- all requirements met, but eos celebration has already been seen.") : this._showEosCelebration())
                }
                _updateIsWithinValidTimeFrame(e) {
                    const t = this._isWithinValidTimeFrame(e);
                    this._updateRequirements({
                        withinValidTimeFrame: t
                    })
                }
                _setSeasonData(e) {
                    if (e && -1 !== e.seasonId && 0 !== e.seasonId) {
                        const t = e.seasonId,
                            n = this._getCurrentYear(e.seasonStart);
                        this._eosSeenPropName = `clash-eos-celebration-${n}-seen`, this._updateIsWithinValidTimeFrame(e.seasonEnd), this._currentSeasonData = a._.assign(this._currentSeasonData, {
                            seasonId: t,
                            year: n
                        })
                    } else a.logger.trace("failed to retrieve and set current season data, eos celebration will not be seen")
                }
                _isLastSeason(e) {
                    return !(!e.currentSplit || !e.totalSplit) && e.currentSplit === e.totalSplit
                }
                _getCurrentYear(e) {
                    return new Date(e).getFullYear()
                }
                _isWithinValidTimeFrame(e) {
                    const t = Date.now(),
                        n = e + s.TIME_CONVERSIONS.MILLISECONDS_IN_A_DAY,
                        a = e + 30 * s.TIME_CONVERSIONS.MILLISECONDS_IN_A_DAY;
                    return t >= n && t <= a
                }
                _clearBindings() {
                    this._binding.removeObserver(i, this), this._binding.removeObserver(o, this), this._binding.removeObserver(l, this), this._binding.removeObserver(r, this)
                }
                _markSettingsSeen() {
                    const e = {};
                    return e[this._eosSeenPropName] = !0, this._binding.patch(r, {
                        data: e,
                        schemaVersion: 1
                    }).then((() => a.logger.trace("clash-eos-celebration -- updated settings successfully")), (() => a.logger.error("clash-eos-celebration -- failed to update settings")))
                }
                _closeModal() {
                    a.logger.trace("clash-eos-celebration -- closed"), this._markSettingsSeen(), a.ModalManager.remove(this._modal), a.Util.destroyEmberApp(this._app), this._modal = null, this._app = null
                }
                _showEosCelebration() {
                    if (this._shownThisSession) return void a.logger.warning("clash-eos-celebration -- _showEosCelebration has already ran once this session, ignoring.");
                    this._shownThisSession = !0, a.logger.trace("clash-eos-celebration -- all requirements met, showing eos celebration...");
                    const e = () => this._closeModal();
                    this._binding.get(`/lol-clash/v1/season-rewards/${this._currentSeasonData.year}`).then((t => {
                        !t || !t.eligible || t.banned || t.seasonVp <= 0 || this.showEosCelebration(t, e)
                    }))
                }
                showEosCelebration(e, t) {
                    this._modal = a.ModalManager.add({
                        type: "ClashEosCelebration",
                        data: {
                            data: e,
                            closeModalCallback: t
                        },
                        show: !0,
                        ComponentFactory: a.componentFactory
                    })
                }
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = t.TIME_UNITS = t.TIME_CONVERSIONS = void 0;
            const n = {
                MILLISECONDS: "milliseconds",
                SECONDS: "seconds",
                MINUTES: "minutes",
                HOURS: "hours",
                DAYS: "days",
                WEEKS: "weeks",
                MONTHS: "months",
                YEARS: "years"
            };
            t.TIME_UNITS = n;
            const a = 36e5,
                s = 864e5,
                i = 6048e5,
                o = {
                    MILLISECONDS_IN_A_SECOND: 1e3,
                    MILLISECONDS_IN_A_MINUTE: 6e4,
                    MILLISECONDS_IN_A_HOUR: a,
                    MILLISECONDS_IN_A_DAY: s,
                    MILLISECONDS_IN_A_WEEK: i,
                    MILLISECONDS_IN_A_YEAR: 314496e5
                };
            t.TIME_CONVERSIONS = o;
            var r = {
                TIME_UNITS: n,
                TIME_CONVERSIONS: o
            };
            t.default = r
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9),
                i = n(54);
            n(55);
            const {
                RunMixin: o
            } = a.EmberAddons.EmberLifeline, r = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                basePaths: {
                    clash: "/lol-clash",
                    platform: "/lol-platform-config"
                },
                boundProperties: {
                    inviteModalTiersEnabled: {
                        api: "platform",
                        path: "/v1/namespaces/ClashConfig/InviteModalTiersEnabled",
                        default: !1
                    },
                    clashThirdPartyInvitesEnabled: {
                        api: "platform",
                        path: "/v1/namespaces/ClashConfig/ThirdPartyInvitesEnabled",
                        default: !1
                    },
                    clashThirdPartyGroupName: {
                        api: "platform",
                        path: "/v1/namespaces/ClashConfig/ThirdPartyGroupName",
                        default: ""
                    },
                    clashTierFetchLimit: {
                        api: "platform",
                        path: "/v1/namespaces/ClashConfig/TierFetchLimit",
                        default: 10
                    }
                }
            }), l = "/v2/local/lol-clash";
            e.exports = a.Ember.Component.extend(r, o, {
                layout: n(56),
                classNames: ["clash-invite-dialog"],
                summonerService: a.Ember.inject.service("summoner"),
                chatService: a.Ember.inject.service("chat"),
                telemetryService: a.Ember.inject.service("telemetry"),
                clashService: a.Ember.inject.service("clash"),
                friends: a.Ember.computed.alias("chatService.friends"),
                me: a.Ember.computed.alias("chatService.me"),
                locOverride: "",
                closeCallback: null,
                inviteCallback: null,
                maxTier: null,
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                roster: a.Ember.computed.alias("clashService.localPlayer.roster"),
                rosterMembers: a.Ember.computed.alias("roster.members"),
                tournamentId: a.Ember.computed.alias("roster.tournamentId"),
                localPlayerSummonerId: a.Ember.computed.alias("localPlayer.summonerId"),
                suggestedInvites: a.Ember.computed.alias("roster.suggestedInvites"),
                tournamentLftEnabled: a.Ember.computed.alias("tournament.lft"),
                maxInvites: a.Ember.computed.alias("tournament.maxInvites"),
                maxSuggestionsPerPlayer: a.Ember.computed.alias("tournament.maxSuggestionsPerPlayer"),
                isLftEnabled: !1,
                isLftListInitialized: !1,
                summonerIconsMap: a.Ember.Object.create(),
                summonerClashData: {},
                lftPage: 0,
                isCaptain: a.Ember.computed("roster", "roster.captainId", "localPlayerSummonerId", (function() {
                    return this.get("roster.captainId") === this.get("localPlayerSummonerId")
                })),
                numCurrentInvites: a.Ember.computed("rosterMembers.@each.isPending", (function() {
                    return (this.get("rosterMembers") || []).filter((e => e.get("isPending"))).length
                })),
                numCurrentTeamMembers: a.Ember.computed("rosterMembers.@each.isPending", "rosterMembers.@each.isDeclined", (function() {
                    return (this.get("rosterMembers") || []).filter((e => !e.get("isPending") && !e.get("isDeclined"))).length
                })),
                currentInvitedSummonerIds: a.Ember.computed("roster.members.[]", "localPlayerSummonerId", (function() {
                    const e = this.get("localPlayerSummonerId");
                    return a._.filter(this.get("roster.members"), (t => t.summonerId !== e)).map((e => e.summonerId))
                })),
                currentSuggestedSummonerIds: a.Ember.computed("suggestedInvites.[]", "localPlayerSummonerId", (function() {
                    const e = this.get("localPlayerSummonerId");
                    return a._.filter(this.get("suggestedInvites"), (t => t.summonerId !== e)).map((e => e.summonerId))
                })),
                localPlayerSuggestedSummonerIds: a.Ember.computed("suggestedInvites.[]", "localPlayerSummonerId", (function() {
                    const e = this.get("localPlayerSummonerId");
                    return a._.filter(this.get("suggestedInvites"), (t => t.summonerId !== e && t.suggesterSummonerId === e)).map((e => e.summonerId))
                })),
                isAtMaxInvites: a.Ember.computed("numCurrentInvites", "numCurrentTeamMembers", "maxInvites", (function() {
                    return this.get("numCurrentInvites") + this.get("numCurrentTeamMembers") >= this.get("maxInvites")
                })),
                isLocalPlayerAtMaxSuggestions: a.Ember.computed("localPlayerSuggestedSummonerIds", "maxSuggestionsPerPlayer", (function() {
                    const e = this.get("maxSuggestionsPerPlayer");
                    return e > 0 && this.get("localPlayerSuggestedSummonerIds").length >= e
                })),
                updateFlag: 0,
                fetchTierSummoners: a.Ember.A(),
                init() {
                    this._super(...arguments), (0, a.dataBinding)("/lol-game-data").get("/assets/v1/profile-icons.json").then((e => {
                        this.set("profileIconData", e), this._updateSuggestedInvites(), this._tryUpdatePendingInvites()
                    })), this._binding = (0, a.dataBinding)("/lol-platform-config", (0, a.getProvider)().getSocket()), this._binding.addObserver("/v1/namespaces/ClashConfig/LftEnabled", this, (e => {
                        const t = !1 !== e;
                        this.set("isLftEnabled", t)
                    }))
                },
                onDidInsertElement: a.Ember.on("didInsertElement", (function() {
                    this.element.addEventListener("sendInvitesClicked", (() => {
                        this.send("sendInvites")
                    })), a.Ember.run.next((() => {
                        const e = this;
                        this.$(".clash-invite-dialog-container").on("scroll", (() => {
                            null !== this._timer && (clearTimeout(this._timer), this._timer = null), this._timer = setTimeout((function() {
                                e._incrementUpdateFlag()
                            }), 250)
                        }))
                    }))
                })),
                willDestroyElement() {
                    this._super(...arguments), this._binding.removeObserver("/v1/namespaces/ClashConfig/LftEnabled", this), this.closeInviteDialog()
                },
                suggestedInvitesObserver: a.Ember.observer("suggestedInvites", "suggestedInvites.[]", (function() {
                    this._updateSuggestedInvites()
                })),
                pendingInvitesObserver: a.Ember.observer("rosterMembers.[]", "rosterMembers.@each.state", "roster.isRosterFull", (function() {
                    this._tryUpdatePendingInvites()
                })),
                lftListInitializer: a.Ember.on("init", a.Ember.observer("isLftEnabled", "tournamentLftEnabled", (function() {
                    !this.get("isLftListInitialized") && this.get("isLftEnabled") && this.get("tournamentLftEnabled") && (this.send("fetchFindPlayers"), this.set("isLftListInitialized", !0))
                }))),
                _populateSummonerNameAndIconArguments(e, t) {
                    const n = t.find((t => t.summonerId === e.summonerId || t.summonerId === e.playerId));
                    n && (e.puuid = n.puuid, e.displayName = n.displayName, e.gameName = n.gameName, e.tagLine = n.tagLine, e.summonerIconPath = this._getSummonerIconPath(e.summonerId, n.profileIconId))
                },
                _populateSuggestedInviteSubtitleArguments(e, t) {
                    const n = t.find((t => t.summonerId === e.suggesterSummonerId || t.summonerId === e.inviterId));
                    n && (e.suggesterSummonerId = n.summonerId, e.suggesterPuuid = n.puuid, e.suggesterDisplayName = n.displayName, e.suggesterGameName = n.gameName, e.suggesterTagLine = n.tagLine)
                },
                _populateFreeAgentInviteSubtitleArguments(e) {
                    e.isFreeAgent = !0
                },
                _populateFriendSubtitleArguments(e) {
                    const t = this.get("friends").find((t => t.summonerId === e.summonerId || t.summonerId === e.playerId));
                    t && (e.gameName = t.gameName, e.tagLine = t.gameTag)
                },
                _updateSuggestedInvites() {
                    this.set("suggestedSummoners", a.Ember.A());
                    const e = a._.cloneDeep(this.get("suggestedInvites"));
                    if (!e) return;
                    const t = a._.map(e, (e => e.summonerId)).concat(a._.map(e, (e => e.suggesterSummonerId)));
                    this.get("summonerService").getSummonersByIds(t).then((t => {
                        e.forEach((e => {
                            this._populateSummonerNameAndIconArguments(e, t), this._populateSuggestedInviteSubtitleArguments(e, t), this._populateFriendSubtitleArguments(e)
                        }));
                        for (let t = 0; t < e.length; t++) this._addToSuggestedInviteList(e[t])
                    })), this.send("addFetchTierSummoners", t)
                },
                _tryUpdatePendingInvites() {
                    if (this.get("roster.isRosterFull")) return void this.set("pendingSummoners", a.Ember.A());
                    const e = a._.cloneDeep(this.get("rosterMembers"));
                    if (!e) return;
                    const t = e.filter((e => e.get("isDeclined"))),
                        n = e.filter((e => e.get("isPending"))),
                        s = this.get("pendingSummoners"),
                        o = n.filter((e => !s.find((t => t.summonerId === e.summonerId))));
                    if (!(t && t.length || n && n.length)) return void this.set("pendingSummoners", a.Ember.A());
                    const r = this.get("tournamentId"),
                        c = this.get("roster.id");
                    if (!r || !c) return;
                    const d = this.get("seenDeclinedSummonerIdsFromClientSession"),
                        m = d || [];
                    (0, i.getAccountSetting)(l, this._getSeenDeclinedSummonerIdsKey(r, c), !0).then((a => {
                        const i = a && a.value ? a.value : [];
                        this._updatePendingInvites(s, n, o, t, m, i, e)
                    }))
                },
                _updatePendingInvites(e, t, n, s, i, o, r) {
                    const l = o.filter((e => i.indexOf(e) < 0)),
                        c = i.concat(l),
                        d = s.filter((e => !c.find((t => t === e.summonerId)))),
                        m = d.map((e => e.summonerId));
                    if (m.length > 0) {
                        const e = c.concat(m);
                        this.set("newSeenDeclinedSummonerIds", e)
                    }
                    const u = n.concat(d),
                        p = a._.map(r, (e => e.summonerId));
                    p.length && this.get("summonerService").getSummonersByIds(p).then((e => {
                        u.forEach((t => {
                            e.find((e => e.summonerId === t.summonerId)) && (this._populateSummonerNameAndIconArguments(t, e), t.get("isFreeAgentInviteType") ? this._populateFreeAgentInviteSubtitleArguments(t) : t.get("isSuggestInviteType") && this._populateSuggestedInviteSubtitleArguments(t, e), this._populateFriendSubtitleArguments(t), this._addToPendingInviteList(t))
                        }))
                    }));
                    for (let n = e.length - 1; n >= 0; n--) {
                        const a = e[n].summonerId,
                            i = t.find((e => e.summonerId === a)),
                            o = s.find((e => e.summonerId === a));
                        i || o || e.removeAt(n)
                    }
                    this.send("addFetchTierSummoners", p)
                },
                inviteModalTiersEnabledObserver: a.Ember.computed("inviteModalTiersEnabled", "inviteModalTiersInitialized", (function() {
                    !this.get("inviteModalTiersInitialized") && this.get("inviteModalTiersEnabled") && this._fetchInitialTiers()
                })),
                isFreeAgentsGroupVisible: a.Ember.computed("isLftEnabled", "tournamentLftEnabled", (function() {
                    return this.get("isLftEnabled") && this.get("tournamentLftEnabled")
                })),
                onTournamentIdChanged: a.Ember.computed("tournamentId", (function() {
                    this.resetDialogState()
                })),
                maxTierSubtitle: a.Ember.computed("maxTier", (function() {
                    let e = this.get("maxTier");
                    return e ? (e = s.ROMAN_NUMERALS[e], this.get("tra").formatString("clash_invite_dialog_max_tier", {
                        tier: e
                    })) : ""
                })),
                inviteableFriends: a.Ember.computed("friends.@each.canBeInvited", "currentInvitedSummonerIds.[]", "me", "thirdPartySummoners.[]", "lftSummoners.[]", "profileIconData", (function() {
                    const e = this.get("friends"),
                        t = this.get("currentInvitedSummonerIds"),
                        n = this.get("thirdPartySummoners"),
                        s = this.get("lftSummoners"),
                        i = this.get("suggestedSummoners"),
                        o = this.get("me");
                    if (!e || !t || !o) return a.Ember.A();
                    const r = a.Ember.A(e).reject((function(e) {
                        const a = t => t.findIndex((t => t.summonerId === e.summonerId)),
                            r = a(n),
                            l = a(s),
                            c = a(i),
                            d = e.product && e.product !== o.product || e.platformId && e.platformId !== o.platformId;
                        return -1 !== t.indexOf(e.summonerId) || r >= 0 || l >= 0 || c >= 0 || d
                    }));
                    return r.forEach((e => {
                        !e.summonerIconPath && e.icon && (e.summonerIconPath = this._getSummonerIconPath(e.summonerId, e.icon), e.notifyPropertyChange("summonerIconPath"), e.isFriend = !0, e.notifyPropertyChange("isFriend"))
                    })), a.Ember.A(r)
                })),
                inviteableSummoners: a.Ember.A(),
                thirdPartySummoners: a.Ember.A(),
                lftSummoners: a.Ember.A(),
                suggestedSummoners: a.Ember.A(),
                pendingSummoners: a.Ember.A(),
                inviteableIds: a.Ember.computed("inviteableFriends.@each.summonerId", "inviteableSummoners.@each.summonerId", "thirdPartySummoners.@each.summonerId", "lftSummoners.@each.summonerId", "suggestedSummoners.@each.summonerId", (function() {
                    const e = this.get("inviteableFriends").mapBy("summonerId"),
                        t = this.get("inviteableSummoners").mapBy("summonerId"),
                        n = this.get("thirdPartySummoners").mapBy("summonerId"),
                        s = this.get("lftSummoners").mapBy("summonerId");
                    return a.Ember.A(e.concat(t).concat(n).concat(s))
                })),
                friendGroups: a.Ember.computed("inviteableFriends.[]", "inviteableFriends.@each.groupId", (function() {
                    return a._.groupBy(this.get("inviteableFriends"), "displayGroupId")
                })),
                searchStringArray: a.Ember.computed("searchString", (function() {
                    return (this.get("searchString") || "").split(" ")
                })),
                hasSearchFilterMatches: function(e, t) {
                    return e.length > 0 && "" !== t[0]
                },
                inviteByNameGroup: a.Ember.computed("inviteableSummoners.[]", "searchStringArray", (function() {
                    return a.Ember.Object.create({
                        friends: this.get("inviteableSummoners")
                    })
                })),
                thirdPartyGroup: a.Ember.computed("thirdPartySummoners.[]", "searchStringArray", (function() {
                    const e = this._filterFriendListBySearchString(this.get("thirdPartySummoners"));
                    return a.Ember.Object.create({
                        friends: e,
                        hasSearchFilterMatches: this.hasSearchFilterMatches(e, this.get("searchStringArray"))
                    })
                })),
                lftGroup: a.Ember.computed("lftSummoners.[]", "searchStringArray", (function() {
                    const e = this._filterFriendListBySearchString(this.get("lftSummoners"));
                    return a.Ember.Object.create({
                        friends: e,
                        hasSearchFilterMatches: this.hasSearchFilterMatches(e, this.get("searchStringArray"))
                    })
                })),
                suggestedGroup: a.Ember.computed("suggestedSummoners.[]", "searchStringArray", (function() {
                    const e = this._filterFriendListBySearchString(this.get("suggestedSummoners"));
                    return a.Ember.Object.create({
                        friends: e,
                        hasSearchFilterMatches: this.hasSearchFilterMatches(e, this.get("searchStringArray"))
                    })
                })),
                pendingGroup: a.Ember.computed("pendingSummoners.[]", (function() {
                    return a.Ember.Object.create({
                        friends: this.get("pendingSummoners")
                    })
                })),
                thirdPartyGroupName: a.Ember.computed("clashThirdPartyGroupName", (function() {
                    const e = this.get("clashThirdPartyGroupName");
                    return e || this.get("tra.clash_invite_dialog_group_name_third_party_opgg")
                })),
                pendingGroupName: a.Ember.computed("pendingSummoners.[]", (function() {
                    const e = this.get("pendingSummoners.length") || 0;
                    return this.get("tra.clash_roster_member_state_inviting") + ` (${e})`
                })),
                groups: a.Ember.computed("friendGroups", "chatService.groups.@each.id", "searchStringArray", (function() {
                    const e = a._.map(this.get("chatService.groups"), (e => {
                        const t = this._filterFriendListBySearchString(this.get("friendGroups")[e.get("id")]);
                        return t.length > 0 && t.forEach((e => {
                            this._populateFriendSubtitleArguments(e)
                        })), e.set("friends", t), e.set("hasSearchFilterMatches", this.hasSearchFilterMatches(t, this.get("searchStringArray"))), e
                    }));
                    return a.Ember.A(e)
                })),
                remainingInviteIcons: a.Ember.computed("clashService.tournament.rosterSize", "localPlayerSummonerId", "rosterMembers.@each.isPending", "rosterMembers.@each.isDeclined", (function() {
                    const e = (this.get("rosterMembers") || []).filter((e => !e.get("isPending") && !e.get("isDeclined") && e.summonerId !== this.get("localPlayerSummonerId"))).length,
                        t = (this.get("clashService.tournament.rosterSize") || 5) - 1,
                        n = Array(e).fill("/fe/lol-clash/assets/images/social/Player_Joined.png"),
                        a = Array(t - e).fill("/fe/lol-clash/assets/images/social/Player_Empty.png");
                    return n.concat(a)
                })),
                _lookupSummonerByName: function(e, t = !0) {
                    e && this.get("summonerService").getSummonerByName(e).then((e => {
                        if (!e || !e.summonerId) return void this.set("searchError", this.get("tra.clash_invite_dialog_search_error_not_found"));
                        const n = this.get("rosterMembers").find((t => t.summonerId === e.summonerId));
                        if (n) {
                            const e = n.get("isDeclined") ? this.get("tra.clash_failed_invite_reason_ALREADY_DECLINED") : this.get("tra.clash_invite_dialog_already_on_roster");
                            this.set("searchError", e)
                        } else this._addToInviteList(e, t)
                    }), (() => {}))
                },
                _addToInviteList: function(e, t) {
                    const n = e ? e.summonerId : void 0,
                        s = this.get("inviteableFriends"),
                        i = this.get("inviteableSummoners"),
                        o = e => e.summonerId === n;
                    i.find(o) || s.find(o) || i.insertAt(0, a.Ember.Object.create({
                        summonerId: n,
                        puuid: e.puuid,
                        name: e.displayName || "",
                        gameName: e.gameName,
                        tagLine: e.tagLine,
                        isFriend: e?.isFriend ?? this.get("chatService").isFriend(n)
                    })), t && this.set("searchString", ""), a.Ember.run.next((() => {
                        this._incrementUpdateFlag()
                    }))
                },
                _addToThirdPartyInviteList: function(e) {
                    const t = e ? e.summonerId : void 0,
                        n = this.get("thirdPartySummoners");
                    if (!t || n.findIndex((e => e.summonerId === t)) >= 0) return;
                    const s = this.get("chatService").isFriend(t);
                    n.insertAt(0, a.Ember.Object.create({
                        summonerId: t,
                        name: e.displayName || "",
                        checked: !1,
                        isFriend: s
                    }))
                },
                _addToLftInviteList: function(e) {
                    const t = e ? e.playerId : void 0,
                        n = this.get("lftSummoners");
                    if (!t || n.findIndex((e => e.summonerId === t)) >= 0) return;
                    const s = this.get("chatService").isFriend(t);
                    n.insertAt(0, a.Ember.Object.create({
                        summonerId: t,
                        puuid: e.puuid,
                        name: e.displayName || "",
                        gameName: e.gameName,
                        tagLine: e.tagLine,
                        tier: e.tier,
                        primaryPosition: e.primaryPos,
                        secondaryPosition: e.secondaryPos,
                        summonerIconPath: e.summonerIconPath,
                        isFreeAgent: e.isFreeAgent,
                        isFriend: s
                    }))
                },
                _addToSuggestedInviteList: function(e) {
                    const t = e ? e.summonerId : void 0,
                        n = e ? e.suggesterSummonerId : void 0,
                        s = this.get("suggestedSummoners");
                    if (!t || s.findIndex((e => e.summonerId === t)) >= 0) return;
                    const i = this.get("chatService").isFriend(t);
                    s.insertAt(0, a.Ember.Object.create({
                        summonerId: t,
                        puuid: e.puuid,
                        suggesterSummonerId: n,
                        suggesterPuuid: e.suggesterPuuid,
                        name: e.displayName || "",
                        gameName: e.gameName,
                        tagLine: e.tagLine,
                        suggesterName: e.suggesterDisplayName || "",
                        suggesterGameName: e.suggesterGameName,
                        suggesterTagLine: e.suggesterTagLine,
                        summonerIconPath: e.summonerIconPath,
                        isFriend: i
                    }))
                },
                _addToPendingInviteList: function(e) {
                    const t = e ? e.summonerId : void 0,
                        n = e ? e.get("isDeclined") : void 0,
                        s = this.get("pendingSummoners"),
                        i = s.findIndex((e => e.summonerId === t)),
                        o = i >= 0;
                    if (!t || !n && o) return;
                    n && o && s.removeAt(i);
                    const r = o ? i : 0,
                        l = this.get("chatService").isFriend(t);
                    s.insertAt(r, a.Ember.Object.create({
                        summonerId: t,
                        puuid: e.puuid,
                        name: e.displayName || "",
                        summonerIconPath: e.summonerIconPath,
                        suggesterSummonerId: e.suggesterSummonerId || "",
                        suggesterPuuid: e.suggesterPuuid,
                        suggesterName: e.suggesterDisplayName || "",
                        suggesterGameName: e.suggesterGameName,
                        suggesterTagLine: e.suggesterTagLine,
                        isFreeAgent: e.isFreeAgent,
                        isPending: !n,
                        gameName: e.gameName,
                        tagLine: e.tagLine,
                        isFriend: l
                    }))
                },
                _filterFriendListBySearchString: function(e) {
                    return e ? a.Ember.A(a._.filter(e, (e => a._.every(this.get("searchStringArray"), (t => a._.includes(e.get("name").toLowerCase().replace(/\s/g, ""), t.toLowerCase())))), this)) : []
                },
                _eligiblePlayers: function(e) {
                    const t = [],
                        n = this.get("currentInvitedSummonerIds");
                    return e.forEach((e => {
                        if (!(n.indexOf(e.summonerId) > -1)) {
                            const n = new Promise((t => {
                                t(e)
                            }));
                            t.push(n)
                        }
                    })), t.length > 0 ? Promise.all(t) : Promise.reject()
                },
                _incrementUpdateFlag() {
                    this.set("updateFlag", this.get("updateFlag") + 1), this._clearFetchTiersTimer(), this._processFetchTierSummoners()
                },
                _processFetchTierSummoners() {
                    let e = this.get("fetchTierSummoners");
                    if (!this.get("inviteModalTiersEnabled") || !e) return;
                    const t = this.get("tournamentId"),
                        n = this.get("clashTierFetchLimit");
                    e.length > n && (e = e.slice(0, n - 1));
                    const a = JSON.stringify(e);
                    this.get("api.clash").get(`/v1/tournament/${t}/get-player-tiers?summonerIds=${a}`).then((e => {
                        if (e && e.length) {
                            const t = this.get("summonerClashData") || {};
                            for (let n = 0; n < e.length; n++) {
                                const a = e[n];
                                t[String(a.playerId)] = {
                                    ...a
                                }
                            }
                            this.set("summonerClashDataVersion", (this.get("summonerClashDataVersion") || 0) + 1), this.set("summonerClashData", t)
                        }
                    })), this._resetFetchTierSummoners()
                },
                _fetchInitialTiers() {
                    this.get("inviteModalTiersEnabled") && this.get("api.clash").get("/v1/tournament/get-all-player-tiers").then((e => {
                        if (e && e.length) {
                            const t = this.get("summonerClashData") || {};
                            for (let n = 0; n < e.length; n++) {
                                const a = e[n];
                                t[String(a.playerId)] = a.tier
                            }
                            this.set("summonerClashDataVersion", (this.get("summonerClashDataVersion") || 0) + 1), this.set("summonerClashData", t)
                        }
                    }))
                },
                _clearFetchTiersTimer() {
                    clearTimeout(this._fetchTierTimer), this._fetchTierTimer = null
                },
                _resetFetchTierSummoners() {
                    this.set("fetchTierSummoners", a.Ember.A())
                },
                _getSummonerIconPath(e, t) {
                    const n = this.get("profileIconData");
                    if (!n) return "";
                    return (n.find((e => e.id === t)) || {}).iconPath
                },
                _getSeenDeclinedSummonerIdsKey: (e, t) => "seenDeclinedSummonerIdsForTournament" + e + "AndRoster" + t,
                _saveNewSeenDeclinedSummonerIdsToAccountSettings() {
                    const e = this.get("tournamentId"),
                        t = this.get("roster.id"),
                        n = this.get("newSeenDeclinedSummonerIds");
                    if (!(e && t && n && n.length)) return;
                    (0, i.getAccountSetting)(l, this._getSeenDeclinedSummonerIdsKey(e, t), !0).then((a => (0, i.saveAccountSetting)(l, this._getSeenDeclinedSummonerIdsKey(e, t), n, a.schemaVersion)))
                },
                _removeNewSeenDeclinedSummonerIdsFromClientSessionFromPendingSummoners() {
                    const e = this.get("newSeenDeclinedSummonerIds"),
                        t = this.get("pendingSummoners");
                    if (e && t) {
                        for (let n = t.length - 1; n >= 0; n--) {
                            const a = t[n].summonerId;
                            e.indexOf(a) >= 0 && t.removeAt(n)
                        }
                        this.set("seenDeclinedSummonerIdsFromClientSession", e), this.set("newSeenDeclinedSummonerIds", a.Ember.A())
                    }
                },
                isFilteredToZeroResults: a.Ember.computed("thirdPartyGroup.friends.[]", "lftGroup.friends.[]", "suggestedGroup.friends.[]", "groups.@each.friends", (function() {
                    return (this.get("thirdPartyGroup.friends.length") || 0) + (this.get("lftGroup.friends.length") || 0) + (this.get("suggestedGroup.friends.length") || 0) + this.get("groups").reduce(((e, t) => e.concat(t.friends)), []).length === 0
                })),
                addSearchedSummonerToInviteList() {
                    this.get("isFilteredToZeroResults") && this._lookupSummonerByName(this.get("searchString"), !1)
                },
                resetDialogState: function() {
                    this.set("searchError", ""), this.set("inviteableSummoners", a.Ember.A())
                },
                closeInviteDialog: function() {
                    this._saveNewSeenDeclinedSummonerIdsToAccountSettings(), this._removeNewSeenDeclinedSummonerIdsFromClientSessionFromPendingSummoners()
                },
                actions: {
                    inputChanged: function(e) {
                        const t = e.keyCode || !1;
                        if (this.cancelTask(this._searchForSummonerTimeout), 13 === t) {
                            const t = this.get("searchString");
                            t && e.stopPropagation(), this._lookupSummonerByName(t)
                        } else this.set("searchString", e.target.value), this.get("isFilteredToZeroResults") && (this._searchForSummonerTimeout = this.runTask((() => this.addSearchedSummonerToInviteList()), 1e3)), this.set("searchError", !1)
                    },
                    suggest: function(e) {
                        const t = this.get("roster.id");
                        this.get("clashService").suggestPlayers(t, [e])
                    },
                    invite: function(e) {
                        const t = this.get("roster.id");
                        this.get("clashService").invitePlayers(t, [e])
                    },
                    acceptSuggestion: function(e) {
                        const t = this.get("roster.id");
                        this.get("clashService").acceptSuggestion(t, e)
                    },
                    declineSuggestion: function(e) {
                        const t = this.get("roster.id");
                        this.get("clashService").declineSuggestion(t, e)
                    },
                    removeInvite: function(e) {
                        const t = this.get("roster.id");
                        this.get("clashService").kickPlayer(t, e)
                    },
                    fetchFindPlayers: function() {
                        const e = this.get("lftPage");
                        this.get("clashService").findPlayers(this.get("roster.id"), this.get("localPlayerSummonerId"), e, 4).then((t => {
                            if (!t) return;
                            this.set("lftSummoners", a.Ember.A());
                            const n = t.filter((e => "FREEAGENT" === e.type));
                            if (!n.length) return void(0 !== e && (this.set("lftPage", 0), this.send("fetchFindPlayers")));
                            const s = a._.map(n, (e => e.playerId)).concat(a._.map(n.filter((e => e.friendId)), (e => e.friendId)));
                            this.get("summonerService").getSummonersByIds(s).then((t => {
                                n.forEach((e => {
                                    t.find((t => t.summonerId === e.playerId)) && this._populateSummonerNameAndIconArguments(e, t), this._populateFriendSubtitleArguments(e), this._populateFreeAgentInviteSubtitleArguments(e)
                                }));
                                for (let e = 0; e < n.length; e++) this._addToLftInviteList(n[e]);
                                this.set("lftPage", e + 1)
                            }))
                        })).catch((() => {
                            this.set("lftPage", 0)
                        }))
                    },
                    fetchThirdPartyTeamData: function() {
                        this.get("api.clash").get("/v1/thirdparty/team-data").then((e => {
                            if (!e) return;
                            const t = a.Util.emberDeepCopyArray(e.members),
                                n = a._.map(t, (e => e.summonerId));
                            this.get("summonerService").getSummonerNames(n).then((e => {
                                for (let n = 0; n < t.length; n++)
                                    for (let a = 0; a < e.length; a++) {
                                        const s = t[n],
                                            i = e[a];
                                        if (s.summonerId === i.summonerId) {
                                            s.displayName = i.displayName;
                                            break
                                        }
                                    }
                                for (let e = 0; e < t.length; e++) this._addToThirdPartyInviteList(t[e])
                            })), this.get("telemetryService").sendEvent("ThirdParty", {
                                action: "team-data-received",
                                memberCount: t.length
                            })
                        }))
                    },
                    addFetchTierSummoners: function(e) {
                        this.set("fetchTierSummoners", this.get("fetchTierSummoners").concat(e));
                        const t = this;
                        null !== this._fetchTierTimer && this._clearFetchTiersTimer(), this._fetchTierTimer = setTimeout((() => {
                            t._processFetchTierSummoners(), t._clearFetchTiersTimer()
                        }), 250)
                    },
                    checkboxToggled: function() {
                        this.toggleProperty("selectedUpdated"), this._incrementUpdateFlag()
                    },
                    sendInvites: function() {
                        this.get("telemetryService").sendEvent("Inviting", {
                            inviteableFriends: this.get("selectedInviteableFriends").length,
                            summonersCount: this.get("selectedSummoners").length,
                            thirdPartySummonersCount: this.get("selectedThirdPartySummoners").length
                        });
                        const e = this.aggregateSelectedPlayers();
                        this._eligiblePlayers(e).then((e => {
                            if (!e || !e.length) return;
                            const t = [];
                            if (e.forEach((e => {
                                    e && e.summonerId && t.push(e.summonerId)
                                })), !t.length) return;
                            const n = this.get("inviteCallback");
                            n && n(t)
                        })).catch((() => {}))
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.saveAccountSetting = t.getAccountSetting = void 0;
            var a = n(1);
            t.getAccountSetting = function(e, t, n = !1) {
                return (0, a.dataBinding)("/lol-settings").get(e, {
                    skipCache: n
                }).then((e => ({
                    value: e && e.data && e.data[t],
                    schemaVersion: e && e.schemaVersion
                })))
            };
            t.saveAccountSetting = function(e, t, n, s) {
                if (void 0 === s || s < 0) return;
                const i = {
                    [t]: n
                };
                return (0, a.dataBinding)("/lol-settings").patch(e, {
                    data: i,
                    schemaVersion: s
                })
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "l6GjoYgc",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\index.js\\" "],["text","\\n"],["open-element","lol-uikit-content-block",[]],["static-attr","class","clash-invite-dialog-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-invite-dialog-header"],["flush-element"],["text","\\n    "],["open-element","h3",[]],["static-attr","class","clash-invite-dialog-header-text"],["flush-element"],["append",["unknown",["tra","clash_invite_dialog_header"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["maxTier"]]],null,6],["text","  "],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","search-box-container"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-input",[]],["static-attr","class","search-box"],["flush-element"],["text","\\n      "],["open-element","input",[]],["static-attr","type","search"],["static-attr","class","search-box-input"],["static-attr","maxlength","20"],["dynamic-attr","value",["unknown",["searchString"]],null],["dynamic-attr","placeholder",["unknown",["tra","clash_invite_dialog_search_placeholder"]],null],["dynamic-attr","onkeyup",["helper",["action"],[["get",[null]],"inputChanged"],null],null],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","search-error"],["flush-element"],["block",["if"],[["get",["searchError"]]],null,5],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","remaining-invite-icons-container"],["flush-element"],["text","\\n    "],["open-element","hr",[]],["static-attr","class","remaining-invite-hr"],["flush-element"],["close-element"],["text","\\n"],["block",["each"],[["get",["remainingInviteIcons"]]],null,4],["text","    "],["open-element","hr",[]],["static-attr","class","remaining-invite-hr"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","lol-uikit-scrollable",[]],["static-attr","overflow-masks","enabled"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","groups"],["flush-element"],["text","\\n      "],["append",["helper",["invite-dialog-group"],null,[["group","summonerClashData","summonerClashDataVersion","summonerIconsMap","inviteByName","currentInvitedSummonerIds","currentSuggestedSummonerIds","isCaptain","updateFlag","isRosterFull","isAtMaxInvites","isLocalPlayerAtMaxSuggestions","addFetchTierSummoners","checkboxToggled","invite","suggest"],[["get",["inviteByNameGroup"]],["get",["summonerClashData"]],["get",["summonerClashDataVersion"]],["get",["summonerIconsMap"]],true,["get",["currentInvitedSummonerIds"]],["get",["currentSuggestedSummonerIds"]],["get",["isCaptain"]],["get",["updateFlag"]],["get",["roster","isRosterFull"]],["get",["isAtMaxInvites"]],["get",["isLocalPlayerAtMaxSuggestions"]],["helper",["action"],[["get",[null]],"addFetchTierSummoners"],null],["helper",["action"],[["get",[null]],"checkboxToggled"],null],["helper",["action"],[["get",[null]],"invite"],null],["helper",["action"],[["get",[null]],"suggest"],null]]]],false],["text","\\n"],["block",["if"],[["get",["isCaptain"]]],null,3],["block",["if"],[["get",["isFreeAgentsGroupVisible"]]],null,2],["block",["if"],[["get",["clashThirdPartyInvitesEnabled"]]],null,1],["block",["each"],[["get",["groups"]]],null,0],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["append",["unknown",["onTournamentIdChanged"]],false],["text","\\n"],["append",["unknown",["inviteModalTiersEnabledObserver"]],false],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["append",["helper",["invite-dialog-group"],null,[["group","summonerClashData","summonerClashDataVersion","summonerIconsMap","currentInvitedSummonerIds","currentSuggestedSummonerIds","isCaptain","updateFlag","isRosterFull","isAtMaxInvites","isLocalPlayerAtMaxSuggestions","addFetchTierSummoners","checkboxToggled","invite","suggest"],[["get",["group"]],["get",["summonerClashData"]],["get",["summonerClashDataVersion"]],["get",["summonerIconsMap"]],["get",["currentInvitedSummonerIds"]],["get",["currentSuggestedSummonerIds"]],["get",["isCaptain"]],["get",["updateFlag"]],["get",["roster","isRosterFull"]],["get",["isAtMaxInvites"]],["get",["isLocalPlayerAtMaxSuggestions"]],["helper",["action"],[["get",[null]],"addFetchTierSummoners"],null],["helper",["action"],[["get",[null]],"checkboxToggled"],null],["helper",["action"],[["get",[null]],"invite"],null],["helper",["action"],[["get",[null]],"suggest"],null]]]],false],["text","\\n"]],"locals":["group"]},{"statements":[["text","        "],["append",["helper",["invite-dialog-third-party-group"],null,[["group","groupName","selectedPlayers","hasRemainingInvites","fetchThirdPartyTeamData"],[["get",["thirdPartyGroup"]],["get",["thirdPartyGroupName"]],["get",["selectedPlayers"]],["get",["hasRemainingInvites"]],["helper",["action"],[["get",[null]],"fetchThirdPartyTeamData"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["append",["helper",["invite-dialog-lft-group"],null,[["group","groupName","summonerClashData","summonerClashDataVersion","summonerIconsMap","selectedPlayers","currentInvitedSummonerIds","currentSuggestedSummonerIds","isCaptain","isRosterFull","isAtMaxInvites","isLocalPlayerAtMaxSuggestions","fetchFindPlayers","invite","suggest"],[["get",["lftGroup"]],["get",["tra","clash_invite_dialog_group_name_free_agents"]],["get",["summonerClashData"]],["get",["summonerClashDataVersion"]],["get",["summonerIconsMap"]],["get",["selectedPlayers"]],["get",["currentInvitedSummonerIds"]],["get",["currentSuggestedSummonerIds"]],["get",["isCaptain"]],["get",["roster","isRosterFull"]],["get",["isAtMaxInvites"]],["get",["isLocalPlayerAtMaxSuggestions"]],["helper",["action"],[["get",[null]],"fetchFindPlayers"],null],["helper",["action"],[["get",[null]],"invite"],null],["helper",["action"],[["get",[null]],"suggest"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["append",["helper",["invite-dialog-pending-group"],null,[["group","groupName","summonerClashData","summonerClashDataVersion","summonerIconsMap","updateFlag","addFetchTierSummoners","removeInvite"],[["get",["pendingGroup"]],["get",["pendingGroupName"]],["get",["summonerClashData"]],["get",["summonerClashDataVersion"]],["get",["summonerIconsMap"]],["get",["updateFlag"]],["helper",["action"],[["get",[null]],"addFetchTierSummoners"],null],["helper",["action"],[["get",[null]],"removeInvite"],null]]]],false],["text","\\n        "],["append",["helper",["invite-dialog-suggested-group"],null,[["group","groupName","summonerClashData","summonerClashDataVersion","summonerIconsMap","updateFlag","isRosterFull","isAtMaxInvites","addFetchTierSummoners","acceptSuggestion","declineSuggestion"],[["get",["suggestedGroup"]],["get",["tra","clash_invite_dialog_group_name_requested"]],["get",["summonerClashData"]],["get",["summonerClashDataVersion"]],["get",["summonerIconsMap"]],["get",["updateFlag"]],["get",["roster","isRosterFull"]],["get",["isAtMaxInvites"]],["helper",["action"],[["get",[null]],"addFetchTierSummoners"],null],["helper",["action"],[["get",[null]],"acceptSuggestion"],null],["helper",["action"],[["get",[null]],"declineSuggestion"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","img",[]],["static-attr","class","remaining-invite-icon"],["dynamic-attr","src",["get",["iconPath"]],null],["flush-element"],["close-element"],["text","\\n"]],"locals":["iconPath"]},{"statements":[["text"," "],["append",["unknown",["searchError"]],false],["text"," "]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-invite-dialog-max-tier-subtitle"],["flush-element"],["append",["unknown",["maxTierSubtitle"]],false],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9);
            n(58);
            e.exports = a.Ember.Component.extend({
                layout: n(59),
                classNames: ["clash-invite-dialog-group"],
                classNameBindings: ["showExpanded:expanded"],
                isExpanded: !0,
                inviteByName: !1,
                group: {},
                summonerClashData: {},
                updateFlag: 0,
                isRosterFull: !1,
                isAtMaxInvites: !1,
                isLocalPlayerAtMaxSuggestions: !1,
                onDidInsertElement: a.Ember.on("didInsertElement", (function() {
                    a.Util.waitForElement(this.element, ".invite-dialog-friend").then((() => {
                        this._calculateTierFetching()
                    }))
                })),
                updateObserver: a.Ember.computed("updateFlag", (function() {
                    this._calculateTierFetching()
                })),
                groupName: a.Ember.computed("group.name", "tra.ready", (function() {
                    const e = this.get("group.name");
                    return this.get("inviteByName") ? this.get("tra.clash_awards_search_placeholder") : "**Default" === e ? this.get("tra.clash_invite_group_name_default") : e
                })),
                acceptText: a.Ember.computed("isCaptain", (function() {
                    return this.get("isCaptain") ? this.get("tra.clash_invite_dialog_button") : this.get("tra.clash_invite_dialog_suggest")
                })),
                acceptDisabledText: a.Ember.computed("isCaptain", (function() {
                    return this.get("isCaptain") ? this.get("tra.clash_invite_dialog_button") : this.get("tra.clash_invite_dialog_suggested")
                })),
                showExpanded: a.Ember.computed.or("isExpanded", "group.hasSearchFilterMatches"),
                actions: {
                    toggleExpanded: function() {
                        this.toggleProperty("isExpanded")
                    },
                    checkboxToggled: function() {
                        const e = this.get("friends"),
                            t = this.get("group.friends");
                        if (e && t) {
                            for (let n = 0; n < e.length; n++) t[n].checked = e[n].checked;
                            this.sendAction("checkboxToggled")
                        }
                    },
                    add: function(e) {
                        this.get("isCaptain") ? this.sendAction("invite", e) : this.sendAction("suggest", e)
                    }
                },
                _calculateTierFetching() {
                    const e = this.$(".invite-dialog-friend");
                    if (!e || !e.length) return;
                    const t = [];
                    for (let n = 0; n < e.length; n++) {
                        const a = this.$(e.get(n)),
                            s = a.attr("tier");
                        (!s || s < 0) && this._isElementInView(a) && t.push(a.attr("id"))
                    }
                    t.length && this.sendAction("addFetchTierSummoners", t)
                },
                _isElementInView(e) {
                    const t = e.offset().top || 0,
                        n = t + e.height() || 0;
                    return t <= 600 && n >= 0
                },
                _getTier(e) {
                    if (!a.Util.isNumberOk(e) || e < s.MIN_TIER || e >= s.ROMAN_NUMERALS.length) return "";
                    const t = s.ROMAN_NUMERALS[e];
                    return this.get("tra").formatString("clash_roster_tier_display", {
                        tier: t
                    })
                },
                _emberDeepCopyEmberArray(e, t = a.Ember.Object) {
                    if (!a.Ember.isArray(e)) return;
                    const n = a.Ember.A();
                    for (const s of e) n.pushObject(t.create(a.Ember.copy(s)));
                    return n
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "247qo35b",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\group\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\group\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\group\\\\index.js\\" "],["text","\\n"],["append",["unknown",["updateObserver"]],false],["text","\\n"],["append",["unknown",["checkedObserver"]],false],["text","\\n"],["append",["unknown",["friendsObserver"]],false],["text","\\n"],["open-element","div",[]],["static-attr","class","header"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggleExpanded"],null],null],["flush-element"],["append",["unknown",["groupName"]],false],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","list-wrapper"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","list"],["flush-element"],["text","\\n"],["block",["each"],[["get",["group","friends"]]],null,0],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","invite-dialog-friend"],["dynamic-attr","id",["concat",[["unknown",["friend","summonerId"]]]]],["dynamic-attr","tier",["concat",[["unknown",["friend","tier"]]]]],["flush-element"],["text","\\n\\n        "],["append",["helper",["invite-dialog-summoner-display"],null,[["friend","summonerIconsMap","summonerClashData","summonerClashDataVersion","currentInvitedSummonerIds","currentSuggestedSummonerIds","isCaptain","isRosterFull","isAtMaxInvites","isLocalPlayerAtMaxSuggestions","accept","acceptText","acceptDisabledText"],[["get",["friend"]],["get",["summonerIconsMap"]],["get",["summonerClashData"]],["get",["summonerClashDataVersion"]],["get",["currentInvitedSummonerIds"]],["get",["currentSuggestedSummonerIds"]],["get",["isCaptain"]],["get",["isRosterFull"]],["get",["isAtMaxInvites"]],["get",["isLocalPlayerAtMaxSuggestions"]],["helper",["action"],[["get",[null]],"add"],null],["get",["acceptText"]],["get",["acceptDisabledText"]]]]],false],["text","\\n\\n      "],["close-element"],["text","\\n"]],"locals":["friend"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(61), e.exports = a.Ember.Component.extend({
                layout: n(62),
                classNames: ["clash-thirdparty-group"],
                classNameBindings: ["showExpanded:expanded"],
                isExpanded: !1,
                showExpanded: a.Ember.computed.or("isExpanded", "group.hasSearchFilterMatches"),
                actions: {
                    toggleExpanded: function() {
                        this.toggleProperty("isExpanded"), this.get("isExpanded") && this.sendAction("fetchThirdPartyTeamData")
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "Sq/PoJDP",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\thirdparty-group\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\thirdparty-group\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\thirdparty-group\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","header"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggleExpanded"],null],null],["flush-element"],["append",["unknown",["groupName"]],false],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","list-wrapper"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","list"],["flush-element"],["text","\\n"],["block",["each"],[["get",["group","friends"]]],null,4],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","            "],["open-element","lol-uikit-flat-checkbox",[]],["static-attr","class","invite-dialog-friend-checkbox"],["flush-element"],["text","\\n              "],["open-element","input",[]],["static-attr","slot","input"],["static-attr","id","friend.checkboxId"],["static-attr","name","friend.checkboxId"],["static-attr","type","checkbox"],["static-attr","disabled",""],["flush-element"],["close-element"],["text","\\n              "],["open-element","label",[]],["static-attr","slot","label"],["dynamic-attr","for",["unknown",["friend","checkboxId"]],null],["flush-element"],["open-element","span",[]],["static-attr","class","flat-checkbox-span"],["flush-element"],["close-element"],["append",["unknown",["friend","name"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-flat-checkbox",[]],["static-attr","class","invite-dialog-friend-checkbox"],["flush-element"],["text","\\n              "],["append",["helper",["input"],null,[["slot","type","id","checked","name"],["input","checkbox",["get",["friend","checkboxId"]],["get",["friend","checked"]],["get",["friend","checkboxId"]]]]],false],["text","\\n              "],["open-element","label",[]],["static-attr","slot","label"],["dynamic-attr","for",["unknown",["friend","checkboxId"]],null],["flush-element"],["open-element","span",[]],["static-attr","class","flat-checkbox-span"],["flush-element"],["close-element"],["append",["unknown",["friend","name"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["friend","checked"]]],null,1,0]],"locals":[]},{"statements":[["text","          "],["open-element","lol-uikit-flat-checkbox",[]],["static-attr","class","invite-dialog-friend-checkbox"],["flush-element"],["text","\\n            "],["append",["helper",["input"],null,[["slot","type","id","checked","name"],["input","checkbox",["get",["friend","checkboxId"]],["get",["friend","checked"]],["get",["friend","checkboxId"]]]]],false],["text","\\n            "],["open-element","label",[]],["static-attr","slot","label"],["dynamic-attr","for",["unknown",["friend","checkboxId"]],null],["flush-element"],["open-element","span",[]],["static-attr","class","flat-checkbox-span"],["flush-element"],["close-element"],["append",["unknown",["friend","name"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","invite-dialog-friend"],["flush-element"],["text","\\n\\n"],["block",["if"],[["get",["hasRemainingInvites"]]],null,3,2],["text","\\n      "],["close-element"],["text","\\n"]],"locals":["friend"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(64);
            e.exports = a.Ember.Component.extend({
                layout: n(65),
                classNames: ["clash-lft-group"],
                classNameBindings: ["showExpanded:expanded"],
                isExpanded: !0,
                isRefreshButtonEnabled: !0,
                isRosterFull: !1,
                isAtMaxInvites: !1,
                isLocalPlayerAtMaxSuggestions: !1,
                isCaptain: !0,
                acceptText: a.Ember.computed("isCaptain", (function() {
                    return this.get("isCaptain") ? this.get("tra.clash_invite_dialog_button") : this.get("tra.clash_invite_dialog_suggest")
                })),
                acceptDisabledText: a.Ember.computed("isCaptain", (function() {
                    return this.get("isCaptain") ? null : this.get("tra.clash_invite_dialog_suggested")
                })),
                showExpanded: a.Ember.computed.or("isExpanded", "group.hasSearchFilterMatches"),
                actions: {
                    toggleExpanded: function() {
                        this.toggleProperty("isExpanded")
                    },
                    fetchFindPlayers: function() {
                        this.sendAction("fetchFindPlayers"), this.set("isRefreshButtonEnabled", !1), a.Ember.run.later((() => {
                            this.set("isRefreshButtonEnabled", !0)
                        }), 1e3)
                    },
                    add: function(e) {
                        this.get("isCaptain") ? this.sendAction("invite", e) : this.sendAction("suggest", e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "YUEnIeVs",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\lft-group\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\lft-group\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\lft-group\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","header"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","expand-button-hitbox"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggleExpanded"],null],null],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","header-title"],["flush-element"],["append",["unknown",["groupName"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","refresh-button"],["flush-element"],["text","\\n    "],["append",["helper",["generic-button"],null,[["onClick","onClickSound","baseImgPath","overImgPath","downImgPath","disabledImgPath","isEnabled"],[["helper",["action"],[["get",[null]],"fetchFindPlayers"],null],"generic-click-small","/fe/lol-clash/assets/images/buttons/icon-refresh.png","/fe/lol-clash/assets/images/buttons/icon-refresh-over.png","/fe/lol-clash/assets/images/buttons/icon-refresh-down.png","/fe/lol-clash/assets/images/buttons/icon-refresh-down.png",["get",["isRefreshButtonEnabled"]]]]],false],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","list-wrapper"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","list"],["flush-element"],["text","\\n"],["block",["each"],[["get",["group","friends"]]],null,0],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","invite-dialog-friend"],["flush-element"],["text","\\n        "],["append",["helper",["invite-dialog-summoner-display"],null,[["friend","summonerIconsMap","summonerClashData","summonerClashDataVersion","currentInvitedSummonerIds","currentSuggestedSummonerIds","isCaptain","isRosterFull","isAtMaxInvites","isLocalPlayerAtMaxSuggestions","accept","acceptText","acceptDisabledText","isFreeAgent"],[["get",["friend"]],["get",["summonerIconsMap"]],["get",["summonerClashData"]],["get",["summonerClashDataVersion"]],["get",["currentInvitedSummonerIds"]],["get",["currentSuggestedSummonerIds"]],["get",["isCaptain"]],["get",["isRosterFull"]],["get",["isAtMaxInvites"]],["get",["isLocalPlayerAtMaxSuggestions"]],["helper",["action"],[["get",[null]],"add"],null],["get",["acceptText"]],["get",["acceptDisabledText"]],true]]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":["friend"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(67), e.exports = a.Ember.Component.extend({
                layout: n(68),
                classNames: ["clash-suggested-group"],
                classNameBindings: ["showExpanded:expanded"],
                updateFlag: 0,
                isExpanded: !0,
                isRosterFull: !1,
                isAtMaxInvites: !1,
                updateObserver: a.Ember.computed("updateFlag", (function() {
                    this._calculateTierFetching()
                })),
                showExpanded: a.Ember.computed.or("isExpanded", "group.hasSearchFilterMatches"),
                actions: {
                    toggleExpanded: function() {
                        this.toggleProperty("isExpanded")
                    },
                    acceptSuggestion: function(e) {
                        this.sendAction("acceptSuggestion", e)
                    },
                    declineSuggestion: function(e) {
                        this.sendAction("declineSuggestion", e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "tDi6UsNW",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\suggested-group\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\suggested-group\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\suggested-group\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","header"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggleExpanded"],null],null],["flush-element"],["append",["unknown",["groupName"]],false],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","list-wrapper"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","list"],["flush-element"],["text","\\n"],["block",["each"],[["get",["group","friends"]]],null,0],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","invite-dialog-friend"],["flush-element"],["text","\\n        "],["append",["helper",["invite-dialog-summoner-display"],null,[["friend","summonerIconsMap","summonerClashData","summonerClashDataVersion","isCaptain","isRosterFull","isAtMaxInvites","accept","acceptText","hasDeclineButton","declineButtonTooltipText","decline"],[["get",["friend"]],["get",["summonerIconsMap"]],["get",["summonerClashData"]],["get",["summonerClashDataVersion"]],true,["get",["isRosterFull"]],["get",["isAtMaxInvites"]],["helper",["action"],[["get",[null]],"acceptSuggestion"],null],["get",["tra","clash_button_invite_accept"]],true,["get",["tra","clash_invite_decline_button_tooltip_decline_request"]],["helper",["action"],[["get",[null]],"declineSuggestion"],null]]]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":["friend"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(70), e.exports = a.Ember.Component.extend({
                layout: n(71),
                classNames: ["clash-pending-group"],
                classNameBindings: ["isExpanded:expanded"],
                updateFlag: 0,
                isExpanded: !0,
                updateObserver: a.Ember.computed("updateFlag", (function() {
                    this._calculateTierFetching()
                })),
                actions: {
                    toggleExpanded: function() {
                        this.toggleProperty("isExpanded")
                    },
                    removeInvite: function(e) {
                        this.sendAction("removeInvite", e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "5AClvnCI",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\pending-group\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\pending-group\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\pending-group\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","header"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggleExpanded"],null],null],["flush-element"],["append",["unknown",["groupName"]],false],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","list-wrapper"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","list"],["flush-element"],["text","\\n"],["block",["each"],[["get",["group","friends"]]],null,0],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","invite-dialog-friend"],["flush-element"],["text","\\n        "],["append",["helper",["invite-dialog-summoner-display"],null,[["friend","summonerIconsMap","summonerClashData","summonerClashDataVersion","isRosterFull","shouldDisplayStatusInsteadOfAcceptButton","hasDeclineButton","declineButtonTooltipText","decline"],[["get",["friend"]],["get",["summonerIconsMap"]],["get",["summonerClashData"]],["get",["summonerClashDataVersion"]],["get",["isRosterFull"]],true,["get",["friend","isPending"]],["get",["tra","clash_invite_decline_button_tooltip_cancel_invite"]],["helper",["action"],[["get",[null]],"removeInvite"],null]]]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":["friend"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(73);
            var s = n(74),
                i = n(9);
            e.exports = a.Ember.Component.extend({
                layout: n(75),
                classNames: ["clash-summoner-display"],
                hasAcceptButton: !0,
                hasDeclineButton: !1,
                shouldDisplayStatusInsteadOfAcceptButton: !1,
                summonerIconsMap: {},
                summonerClashData: {},
                currentInvitedSummonerIds: [],
                currentSuggestedSummonerIds: [],
                isRosterFull: !1,
                isAtMaxInvites: !1,
                isLocalPlayerAtMaxSuggestions: !1,
                acceptText: null,
                acceptDisabledText: null,
                isFreeAgent: !1,
                friend: null,
                summonerId: a.Ember.computed.alias("friend.summonerId"),
                puuid: a.Ember.computed.alias("friend.puuid"),
                gameName: a.Ember.computed("friend.gameName", (function() {
                    return this.get("friend.gameName") || null
                })),
                tagLine: a.Ember.computed("friend.tagLine", (function() {
                    return this.get("friend.tagLine") || null
                })),
                summonerName: a.Ember.computed("friend.name", (function() {
                    return this.get("friend.name") || null
                })),
                hoverCardOptions: {
                    targetAnchor: {
                        x: "center",
                        y: "top"
                    },
                    tooltipAnchor: {
                        x: "center",
                        y: "bottom"
                    },
                    offset: {
                        x: 0,
                        y: -3
                    }
                },
                didInsertElement() {
                    this._super(...arguments)
                },
                isAlreadyInvited: a.Ember.computed("currentInvitedSummonerIds.[]", "summonerId", (function() {
                    return this.get("currentInvitedSummonerIds").includes(this.get("summonerId"))
                })),
                isAlreadySuggested: a.Ember.computed("currentSuggestedSummonerIds.[]", "summonerId", (function() {
                    return this.get("currentSuggestedSummonerIds").includes(this.get("summonerId"))
                })),
                isRosterFullOrMaxInvites: a.Ember.computed.or("isRosterFull", "isAtMaxInvites"),
                isAcceptButtonDisabled: a.Ember.computed("isAlreadyInvited", "isAlreadySuggested", "isCaptain", "isRosterFullOrMaxInvites", "isLocalPlayerAtMaxSuggestions", (function() {
                    return !!this.get("isAlreadyInvited") || (this.get("isCaptain") ? this.get("isRosterFullOrMaxInvites") : this.get("isAlreadySuggested") || this.get("isLocalPlayerAtMaxSuggestions"))
                })),
                acceptButtonText: a.Ember.computed("acceptText", "acceptDisabledText", "isAcceptButtonDisabled", "isAlreadyInvited", "isAlreadySuggested", "isCaptain", "isRosterFullOrMaxInvites", "isLocalPlayerAtMaxSuggestions", (function() {
                    if (this.get("isAcceptButtonDisabled")) {
                        if (this.get("isAlreadyInvited")) return null;
                        if (this.get("isCaptain") && this.get("isRosterFullOrMaxInvites")) return this.get("acceptText");
                        if (this.get("isAlreadySuggested")) return this.get("acceptDisabledText");
                        if (this.get("isLocalPlayerAtMaxSuggestions")) return this.get("acceptText")
                    }
                    return this.get("acceptText")
                })),
                acceptButtonTooltipText: a.Ember.computed("isAcceptButtonDisabled", "isAlreadyInvited", "isAlreadySuggested", "isCaptain", "isRosterFullOrMaxInvites", "isLocalPlayerAtMaxSuggestions", (function() {
                    return this.get("isAcceptButtonDisabled") ? this.get("isAlreadyInvited") ? this.get("tra.clash_invite_accept_button_tooltip_already_invited") : this.get("isCaptain") && this.get("isRosterFullOrMaxInvites") ? this.get("tra.clash_invite_accept_button_tooltip_max_invites") : this.get("isAlreadySuggested") ? this.get("tra.clash_invite_accept_button_tooltip_already_suggested") : this.get("isLocalPlayerAtMaxSuggestions") ? this.get("tra.clash_invite_accept_button_tooltip_max_suggestions") : null : this.get("acceptText")
                })),
                summonerIconPath: a.Ember.computed("friend.summonerIconPath", "summonerId", (function() {
                    return this.get("friend.summonerIconPath") || "/lol-game-data/assets/v1/profile-icons/29.jpg"
                })),
                summonerClashDataEntry: a.Ember.computed("summonerClashData", "summonerClashData.version", "summonerClashDataVersion", "summonerId", (function() {
                    const e = this.get("summonerId");
                    return (this.get("summonerClashData") || {})[e]
                })),
                primaryPosition: a.Ember.computed("summonerClashDataEntry.primaryPos", "friend.primaryPosition", (function() {
                    if (this.get("friend.primaryPosition")) return this.get("friend.primaryPosition");
                    const e = this.get("summonerClashDataEntry") || {};
                    return e ? e.primaryPos : void 0
                })),
                isPrimaryPositionVisible: a.Ember.computed("primaryPosition", (function() {
                    const e = this.get("primaryPosition");
                    return e && e !== s.POSITIONS.UNSELECTED
                })),
                secondaryPosition: a.Ember.computed("summonerClashDataEntry.secondPos", "friend.secondaryPosition", (function() {
                    if (this.get("friend.secondaryPosition")) return this.get("friend.secondaryPosition");
                    const e = this.get("summonerClashDataEntry") || {};
                    return e ? e.secondPos : void 0
                })),
                isSecondaryPositionVisible: a.Ember.computed("secondaryPosition", (function() {
                    const e = this.get("secondaryPosition");
                    return e && e !== s.POSITIONS.UNSELECTED
                })),
                tierString: a.Ember.computed("summonerClashDataEntry.tier", "friend.tier", (function() {
                    if (this.get("friend.tier")) return this._getTier(this.get("friend.tier"));
                    const e = this.get("summonerClashDataEntry") || {};
                    return e && e.tier ? this._getTier(e.tier) : null
                })),
                subtitleText: a.Ember.computed("friend.isFreeAgent", "friend.suggesterName", "gameName", "tagLine", "name", (function() {
                    const e = this.get("gameName"),
                        t = this.get("tagLine"),
                        n = this.get("friend.isFriend");
                    if (this.get("friend.suggesterName")) {
                        return this.get("summonerName") === this.get("friend.suggesterName") ? n ? this._formatTagLineSubtitle(e, t) : this.get("tra.clash_lft_free_agent_title") : this.get("tra.clash_invite_dialog_suggested_by")
                    }
                    return this.get("friend.isFreeAgent") ? n ? this.get("tra.clash_invite_dialog_your_friend") : this.get("tra.clash_lft_free_agent_title") : n ? this._formatTagLineSubtitle(e, t) : ""
                })),
                shouldDisplaySubtitleHighlightText: a.Ember.computed("friend.name", "friend.suggesterName", (function() {
                    const e = this.get("friend.name"),
                        t = this.get("friend.suggesterName"),
                        n = this.get("friend.suggesterSummonerId");
                    return Boolean(t && t !== e && n)
                })),
                _getTier(e) {
                    if (!a.Util.isNumberOk(e) || e < i.MIN_TIER || e >= i.ROMAN_NUMERALS.length) return "";
                    const t = i.ROMAN_NUMERALS[e];
                    return this.get("tra").formatString("clash_roster_tier_display", {
                        tier: t
                    })
                },
                _formatTagLineSubtitle: (e, t) => e + " #" + t,
                actions: {
                    accept(e) {
                        this.get("isAcceptButtonDisabled") || this.attrs.accept(e)
                    },
                    decline(e) {
                        this.attrs.decline(e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, e => {
            "use strict";
            e.exports = {
                POSITIONS: {
                    MIDDLE: "MIDDLE",
                    BOTTOM: "BOTTOM",
                    JUNGLE: "JUNGLE",
                    TOP: "TOP",
                    UTILITY: "UTILITY",
                    FILL: "FILL",
                    NONE: "NONE",
                    UNSELECTED: "UNSELECTED"
                }
            }
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "QULkGXF5",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\summoner-display\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\summoner-display\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\invite-dialog\\\\summoner-display\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","summoner-position-and-icon-container"],["flush-element"],["text","\\n  "],["append",["helper",["hovercard-component"],null,[["options","summonerId"],[["get",["hoverCardOptions"]],["get",["summonerId"]]]]],false],["text","\\n  "],["open-element","div",[]],["static-attr","class","position-roles-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isPrimaryPositionVisible"]]],null,20],["block",["if"],[["get",["isSecondaryPositionVisible"]]],null,19],["text","  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","summoner-icon-container"],["flush-element"],["text","\\n    "],["block",["uikit-framed-icon"],null,[["borderwidth"],[2]],18],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","summoner-details-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","summoner-name-and-tier-wrapper"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","summoner-name"],["flush-element"],["text","\\n      "],["append",["helper",["player-name"],null,[["format","puuid","summonerId","summonerName","gameName","tagLine"],["short",["get",["puuid"]],["get",["summonerId"]],["get",["summonerName"]],["get",["gameName"]],["get",["tagLine"]]]]],false],["text","\\n    "],["close-element"],["text","\\n"],["block",["if"],[["get",["tierString"]]],null,17],["text","  "],["close-element"],["text","\\n"],["block",["if"],[["get",["subtitleText"]]],null,16],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","buttons-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["shouldDisplayStatusInsteadOfAcceptButton"]]],null,14,10],["block",["if"],[["get",["hasDeclineButton"]]],null,2],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n            "],["open-element","p",[]],["flush-element"],["append",["unknown",["declineButtonTooltipText"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["class","tooltipPosition","type"],["clash-invite-decline-tooltip","top","system"]],0]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-invite-decline-button"],["flush-element"],["text","\\n      "],["append",["helper",["generic-button"],null,[["onClick","onClickSound","baseImgPath","overImgPath","downImgPath"],[["helper",["action"],[["get",[null]],"decline",["get",["friend","summonerId"]]],null],"generic-click-small","/fe/lol-clash/assets/images/buttons/icon-x.png","/fe/lol-clash/assets/images/buttons/icon-x-over.png","/fe/lol-clash/assets/images/buttons/icon-x-down.png"]]],false],["text","\\n"],["block",["if"],[["get",["declineButtonTooltipText"]]],null,1],["text","    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n            "],["open-element","p",[]],["flush-element"],["append",["unknown",["acceptButtonTooltipText"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],3]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","clash-invite-accept-text"],["flush-element"],["append",["unknown",["acceptButtonText"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","img",[]],["static-attr","width","20px"],["static-attr","height","20px"],["static-attr","src","/fe/lol-clash/assets/images/buttons/icon-check-over.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","clash-invite-accept-text gray"],["flush-element"],["append",["unknown",["acceptButtonText"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["acceptButtonText"]]],null,7,6]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-invite-accept-button"],["flush-element"],["text","\\n      "],["open-element","lol-uikit-flat-button-secondary",[]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"accept",["get",["friend","summonerId"]]],null],null],["dynamic-attr","disabled",["unknown",["isAcceptButtonDisabled"]],null],["flush-element"],["text","\\n"],["block",["if"],[["get",["isAcceptButtonDisabled"]]],null,8,5],["text","      "],["close-element"],["text","\\n"],["block",["if"],[["get",["acceptButtonTooltipText"]]],null,4],["text","    "],["close-element"],["text","\\n  "]],"locals":[]},{"statements":[["block",["if"],[["get",["hasAcceptButton"]]],null,9]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-vertical-separator"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-status-icon red"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-status-text declined"],["flush-element"],["append",["unknown",["tra","clash_invite_dialog_status_declined"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-status-icon yellow"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-status-text"],["flush-element"],["append",["unknown",["tra","clash_invite_dialog_status_pending"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["friend","isPending"]]],null,13,12],["block",["if"],[["get",["hasDeclineButton"]]],null,11]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","summoner-subtitle highlight"],["flush-element"],["text","\\n          "],["append",["helper",["player-name"],null,[["format","puuid","summonerId","summonerName","gameName","tagLine"],["tooltip",["get",["friend","suggesterPuuid"]],["get",["friend","suggesterSummonerId"]],["get",["friend","suggesterName"]],["get",["friend","suggesterGameName"]],["get",["friend","suggesterTagLine"]]]]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","summoner-subtitle-wrapper"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","summoner-subtitle"],["flush-element"],["append",["unknown",["subtitleText"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["shouldDisplaySubtitleHighlightText"]]],null,15],["text","    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","clash-tier"],["flush-element"],["append",["unknown",["tierString"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["summonerIconPath"]]]]],["flush-element"],["close-element"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","position-icon"],["dynamic-attr","data-position",["concat",[["unknown",["secondaryPosition"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","position-icon"],["dynamic-attr","data-position",["concat",[["unknown",["primaryPosition"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(77);
            n(78);
            const i = a.Ember.Component.extend({
                classNames: ["clash-generic-button"],
                classNameBindings: ["matchHeight:match-h", "matchWidth:match-w", "isImgFlippedX:flip-x", "isImgFlippedY:flip-y"],
                layout: n(79),
                canBeSelected: !1,
                triggerSelected: !1,
                selectionGroup: null,
                isEnabled: !0,
                text: null,
                baseBgPath: null,
                upBgPath: null,
                overBgPath: null,
                downBgPath: null,
                disabledBgPath: null,
                baseImgPath: null,
                upImgPath: null,
                overImgPath: null,
                downImgPath: null,
                disabledImgPath: null,
                noDisabledBg: !1,
                isImgFlippedX: !1,
                isImgFlippedY: !1,
                useCustomContent: !1,
                iconSizeModifier: 1,
                matchHeight: !0,
                matchWidth: !0,
                tooltipText: null,
                tooltipPosition: "bottom",
                tooltipType: "system",
                disabledTooltipText: null,
                disabledTooltipPosition: "bottom",
                disabledTooltipType: "system",
                onHoverSound: null,
                onClickSound: null,
                onClickReleaseSound: null,
                currentState: null,
                isClickTarget: !1,
                isSelected: !1,
                onInit: a.Ember.on("init", (function() {
                    this._changeState(s.ButtonState.UP)
                })),
                upBgPathInternal: a.Ember.computed.or("upBgPath", "baseBgPath"),
                overBgPathInternal: a.Ember.computed.or("overBgPath", "baseBgPath"),
                downBgPathInternal: a.Ember.computed.or("downBgPath", "baseBgPath"),
                disabledBgPathInternal: a.Ember.computed("disabledBgPath", "baseBgPath", "noDisabledBg", (function() {
                    return this.get("noDisabledBg") ? "" : this.get("disabledBgPath") || this.get("baseBgPath")
                })),
                upImgPathInternal: a.Ember.computed.or("upImgPath", "baseImgPath"),
                overImgPathInternal: a.Ember.computed.or("overImgPath", "baseImgPath"),
                downImgPathInternal: a.Ember.computed.or("downImgPath", "baseImgPath"),
                disabledImgPathInternal: a.Ember.computed.or("disabledImgPath", "baseImgPath"),
                customContentUp: {
                    isUp: !0,
                    isAny: !0
                },
                customContentOver: {
                    isOver: !0,
                    isAny: !0
                },
                customContentDown: {
                    isDown: !0,
                    isAny: !0
                },
                customContentDisabled: {
                    isDisabled: !0,
                    isAny: !0
                },
                iconSizeModifierStyle: a.Ember.computed("iconSizeModifier", (function() {
                    const e = this.get("iconSizeModifier");
                    if (1 === e) return null;
                    const t = 100 * Math.max(e, 0),
                        n = this.get("matchHeight");
                    let a = "";
                    return this.get("matchWidth") && (a += `width: ${t}%;`), n && (a += `height: ${t}%`), a
                })),
                triggerSelectedObserver: a.Ember.computed("triggerSelected", (function() {
                    this.get("triggerSelected") && (this._setSelected(!0), a.Ember.run.next((() => {
                        this.set("triggerSelected", !1)
                    })))
                })),
                isEnabledObserver: a.Ember.computed("isEnabled", (function() {
                    const e = this.get("currentState") !== s.ButtonState.DISABLED,
                        t = this.get("isEnabled");
                    e && !t ? this._changeState(s.ButtonState.DISABLED) : !e && t && this._changeState(s.ButtonState.UP)
                })),
                _changeState(e) {
                    const t = this.get("currentState"),
                        n = this.get("isClickTarget");
                    e === s.ButtonState.OVER && (this.get("onHoverSound") && a.AudioManager.playAudio(this.get("onHoverSound")), n && (e = s.ButtonState.DOWN)), this.set("isState_" + t, !1), this.set("isState_" + e, !0), this.set("currentState", e)
                },
                _processClick() {
                    this.attrs.onClick && this.attrs.onClick();
                    const e = this.get("selectionGroup"),
                        t = this.get("isSelected");
                    e && t || this._setSelected(!t)
                },
                _setSelected(e) {
                    if (!this.get("canBeSelected")) return;
                    const t = this.get("isSelected");
                    if (t !== e) {
                        if (e) {
                            const e = this.get("selectionGroup");
                            i.setSelection(e, this)
                        }
                        t && this.attrs.onDeselected ? this.attrs.onDeselected() : e && this.attrs.onSelected && this.attrs.onSelected(), this.set("isSelected", e)
                    }
                },
                actions: {
                    changeState(e) {
                        this.get("currentState") !== s.ButtonState.DISABLED && this._changeState(e)
                    },
                    beginClick() {
                        if (this.get("currentState") === s.ButtonState.DISABLED) return;
                        this.get("onClickSound") && a.AudioManager.playAudio(this.get("onClickSound")), this._changeState(s.ButtonState.DOWN), this.set("isClickTarget", !0);
                        const e = () => {
                            this.set("isClickTarget", !1), document.removeEventListener("mouseup", e)
                        };
                        document.addEventListener("mouseup", e)
                    },
                    endClick() {
                        if (this.get("currentState") === s.ButtonState.DISABLED) return;
                        this.get("isClickTarget") && (this.get("onClickReleaseSound") && a.AudioManager.playAudio(this.get("onClickReleaseSound")), this._processClick(), this.set("isClickTarget", !1), this._changeState(s.ButtonState.OVER))
                    },
                    onHover() {
                        this.get("currentState") !== s.ButtonState.DISABLED && (this._changeState(s.ButtonState.OVER), this.attrs.onHover && this.attrs.onHover())
                    },
                    onHoverLeave() {
                        this.get("currentState") !== s.ButtonState.DISABLED && (this._changeState(s.ButtonState.UP), this.attrs.onHoverLeave && this.attrs.onHoverLeave())
                    }
                }
            });
            i.reopenClass({
                currentSelectionMap: {},
                setSelection(e, t) {
                    if (!e || !t || !t.get("canBeSelected")) return;
                    const n = i.currentSelectionMap[e];
                    n && n._setSelected(!1), i.currentSelectionMap[e] = t
                }
            }), e.exports = i
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ButtonState = void 0;
            const n = Object.freeze({
                UP: "up",
                OVER: "over",
                DOWN: "down",
                DISABLED: "disabled"
            });
            t.ButtonState = n
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "+D9+CCat",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\generic-button\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\generic-button\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\generic-button\\\\index.js\\" "],["text","\\n"],["append",["unknown",["isEnabledObserver"]],false],["text","\\n"],["append",["unknown",["triggerSelectedObserver"]],false],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-generic-button-root"],["dynamic-attr","onmouseleave",["helper",["action"],[["get",[null]],"onHoverLeave"],null],null],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"onHover"],null],null],["dynamic-attr","onmousedown",["helper",["action"],[["get",[null]],"beginClick"],null],null],["dynamic-attr","onmouseup",["helper",["action"],[["get",[null]],"endClick"],null],null],["flush-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-generic-button-state up ",["helper",["if"],[["get",["isSelected"]],"selected"],null]," ",["helper",["if"],[["get",["isState_up"]],"active"],null]]]],["dynamic-attr","style",["unknown",["upStyle"]],null],["flush-element"],["text","\\n    "],["block",["if"],[["get",["upBgPathInternal"]]],null,27],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-generic-button-primary-img-container ",["helper",["if"],[["get",["upBgPathInternal"]],"has-bg"],null]]]],["flush-element"],["text","\\n      "],["block",["if"],[["get",["upImgPathInternal"]]],null,26],["text","\\n    "],["close-element"],["text","\\n"],["block",["if"],[["get",["text"]]],null,25,24],["text","    "],["block",["if"],[["get",["useCustomContent"]]],null,22],["text","\\n  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-generic-button-state over ",["helper",["if"],[["get",["isSelected"]],"selected"],null]," ",["helper",["if"],[["get",["isState_over"]],"active"],null]]]],["dynamic-attr","style",["unknown",["overStyle"]],null],["flush-element"],["text","\\n    "],["block",["if"],[["get",["overBgPathInternal"]]],null,21],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-generic-button-primary-img-container ",["helper",["if"],[["get",["overBgPathInternal"]],"has-bg"],null]]]],["flush-element"],["text","\\n      "],["block",["if"],[["get",["overImgPathInternal"]]],null,20],["text","\\n    "],["close-element"],["text","\\n"],["block",["if"],[["get",["text"]]],null,19,18],["text","    "],["block",["if"],[["get",["useCustomContent"]]],null,16],["text","\\n"],["block",["if"],[["get",["tooltipText"]]],null,15],["text","  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-generic-button-state down ",["helper",["if"],[["get",["isSelected"]],"selected"],null]," ",["helper",["if"],[["get",["isState_down"]],"active"],null]]]],["dynamic-attr","style",["unknown",["downStyle"]],null],["flush-element"],["text","\\n    "],["block",["if"],[["get",["downBgPathInternal"]]],null,13],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-generic-button-primary-img-container ",["helper",["if"],[["get",["downBgPathInternal"]],"has-bg"],null]]]],["flush-element"],["text","\\n      "],["block",["if"],[["get",["downImgPathInternal"]]],null,12],["text","\\n    "],["close-element"],["text","\\n"],["block",["if"],[["get",["text"]]],null,11,10],["text","    "],["block",["if"],[["get",["useCustomContent"]]],null,8],["text","\\n  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-generic-button-state disabled ",["helper",["if"],[["get",["isSelected"]],"selected"],null]," ",["helper",["if"],[["get",["isState_disabled"]],"active"],null]]]],["dynamic-attr","style",["unknown",["disabledStyle"]],null],["flush-element"],["text","\\n    "],["block",["if"],[["get",["disabledBgPathInternal"]]],null,7],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-generic-button-primary-img-container ",["helper",["if"],[["get",["disabledBgPathInternal"]],"has-bg"],null]]]],["flush-element"],["text","\\n      "],["block",["if"],[["get",["disabledImgPathInternal"]]],null,6],["text","\\n    "],["close-element"],["text","\\n"],["block",["if"],[["get",["text"]]],null,5,4],["text","    "],["block",["if"],[["get",["useCustomContent"]]],null,2],["text","\\n"],["block",["if"],[["get",["disabledTooltipText"]]],null,1],["text","  "],["close-element"],["text","\\n\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":["default"],"blocks":[{"statements":[["text","        "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n          "],["open-element","p",[]],["flush-element"],["append",["unknown",["disabledTooltipText"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],[["get",["disabledTooltipPosition"]],["get",["disabledTooltipType"]]]],0]],"locals":[]},{"statements":[["open-element","div",[]],["static-attr","class","clash-generic-button-custom-content"],["flush-element"],["yield","default",[["get",["customContentDisabled"]]]],["close-element"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-generic-button-text"],["flush-element"],["append",["unknown",["disabledText"]],false],["close-element"],["text","\\n    "]],"locals":[]},{"statements":[["block",["if"],[["get",["disabledText"]]],null,3]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-generic-button-text"],["flush-element"],["append",["unknown",["text"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["disabledImgPathInternal"]]]]],["dynamic-attr","style",["unknown",["iconSizeModifierStyle"]],null],["flush-element"],["close-element"]],"locals":[]},{"statements":[["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["disabledBgPathInternal"]]]]],["flush-element"],["close-element"]],"locals":[]},{"statements":[["open-element","div",[]],["static-attr","class","clash-generic-button-custom-content"],["flush-element"],["yield","default",[["get",["customContentDown"]]]],["close-element"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-generic-button-text"],["flush-element"],["append",["unknown",["downText"]],false],["close-element"],["text","\\n    "]],"locals":[]},{"statements":[["block",["if"],[["get",["downText"]]],null,9]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-generic-button-text"],["flush-element"],["append",["unknown",["text"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["downImgPathInternal"]]]]],["dynamic-attr","style",["unknown",["iconSizeModifierStyle"]],null],["flush-element"],["close-element"]],"locals":[]},{"statements":[["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["downBgPathInternal"]]]]],["flush-element"],["close-element"]],"locals":[]},{"statements":[["text","        "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n          "],["open-element","p",[]],["flush-element"],["append",["unknown",["tooltipText"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],[["get",["tooltipPosition"]],["get",["tooltipType"]]]],14]],"locals":[]},{"statements":[["open-element","div",[]],["static-attr","class","clash-generic-button-custom-content"],["flush-element"],["yield","default",[["get",["customContentOver"]]]],["close-element"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-generic-button-text"],["flush-element"],["append",["unknown",["overText"]],false],["close-element"],["text","\\n    "]],"locals":[]},{"statements":[["block",["if"],[["get",["overText"]]],null,17]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-generic-button-text"],["flush-element"],["append",["unknown",["text"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["overImgPathInternal"]]]]],["dynamic-attr","style",["unknown",["iconSizeModifierStyle"]],null],["flush-element"],["close-element"]],"locals":[]},{"statements":[["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["overBgPathInternal"]]]]],["flush-element"],["close-element"]],"locals":[]},{"statements":[["open-element","div",[]],["static-attr","class","clash-generic-button-custom-content"],["flush-element"],["yield","default",[["get",["customContentUp"]]]],["close-element"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-generic-button-text"],["flush-element"],["append",["unknown",["upText"]],false],["close-element"],["text","\\n    "]],"locals":[]},{"statements":[["block",["if"],[["get",["upText"]]],null,23]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-generic-button-text"],["flush-element"],["append",["unknown",["text"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["upImgPathInternal"]]]]],["dynamic-attr","style",["unknown",["iconSizeModifierStyle"]],null],["flush-element"],["close-element"]],"locals":[]},{"statements":[["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["upBgPathInternal"]]]]],["flush-element"],["close-element"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(81), e.exports = a.Ember.Component.extend({
                layout: n(82),
                closeCallback: null,
                actions: {
                    close() {
                        const e = this.get("closeCallback");
                        e && e()
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "2muObaSp",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\login-modal\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\login-modal\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\login-modal\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-login-modal"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-login-modal-close-button"],["flush-element"],["text","\\n    "],["append",["helper",["generic-button"],null,[["baseImgPath","overImgPath","downImgPath","onClickSound","onClick"],["/fe/lol-clash/assets/images/buttons/icon-x.png","/fe/lol-clash/assets/images/buttons/icon-x-over.png","/fe/lol-clash/assets/images/buttons/icon-x-down.png","generic-click-small",["helper",["action"],[["get",[null]],"close"],null]]]],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","img",[]],["static-attr","class","clash-login-modal-button-glow"],["static-attr","src","/fe/lol-clash/assets/images/login-modal/glow-01.png"],["flush-element"],["close-element"],["text","\\n  "],["open-element","img",[]],["static-attr","class","clash-login-modal-button-glow delayed"],["static-attr","src","/fe/lol-clash/assets/images/login-modal/glow-02.png"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-login-modal-header"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-login-modal-header-decoration flipped"],["static-attr","src","/fe/lol-clash/assets/images/login-modal/wing-01.svg"],["flush-element"],["close-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-login-modal-header-logo"],["static-attr","src","/fe/lol-clash/assets/images/login-modal/wordmark-01.svg"],["flush-element"],["close-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-login-modal-header-decoration"],["static-attr","src","/fe/lol-clash/assets/images/login-modal/wing-01.svg"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-login-modal-header-text"],["flush-element"],["append",["unknown",["tra","clash_login_modal_header_text"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-login-modal-main-content"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-login-modal-section"],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","clash-login-modal-section-image"],["static-attr","src","/fe/lol-clash/assets/images/login-modal/Teamup.png"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-login-modal-section-text"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-login-modal-section-title"],["flush-element"],["append",["unknown",["tra","clash_login_modal_col0_title"]],false],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-login-modal-section-description"],["flush-element"],["append",["unknown",["tra","clash_login_modal_col0_description"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-login-modal-section"],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","clash-login-modal-section-image"],["static-attr","src","/fe/lol-clash/assets/images/login-modal/Compete.png"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-login-modal-section-text"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-login-modal-section-title"],["flush-element"],["append",["unknown",["tra","clash_login_modal_col1_title"]],false],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-login-modal-section-description"],["flush-element"],["append",["unknown",["tra","clash_login_modal_col1_description"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-login-modal-section"],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","clash-login-modal-section-image"],["static-attr","src","/fe/lol-clash/assets/images/login-modal/Prizes.png"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-login-modal-section-text"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-login-modal-section-title"],["flush-element"],["append",["unknown",["tra","clash_login_modal_col2_title"]],false],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-login-modal-section-description"],["flush-element"],["append",["unknown",["tra","clash_login_modal_col2_description"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(84);
            const s = {
                    0: 0,
                    1: 100,
                    2: 400,
                    3: 1e3,
                    4: 2e3,
                    5: 3e3,
                    6: 4e3,
                    7: 5e3,
                    8: 6e3,
                    9: 7e3
                },
                i = (0, a.emberDataBinding)({
                    Ember: a.Ember,
                    websocket: (0, a.getProvider)().getSocket(),
                    boundProperties: {
                        playerRewards: {
                            path: "/lol-clash/v1/rewards",
                            default: {
                                earnedRewards: [],
                                seasonRewards: [],
                                seasonVp: 0,
                                themeVp: {}
                            }
                        },
                        history: {
                            path: "/lol-clash/v1/player/history",
                            default: []
                        }
                    },
                    basePaths: {
                        gameData: "/lol-game-data"
                    }
                });
            e.exports = a.Ember.Component.extend(i, {
                classNames: ["clash-rewards-modal-display"],
                layout: n(85),
                clashNav: a.Ember.inject.service("clash-nav"),
                clashService: a.Ember.inject.service("clash"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                playerHistory: a.Ember.computed.alias("history"),
                closeCallback: null,
                rosterStats: null,
                roster: null,
                periodStats: null,
                seasonVp: a.Ember.computed.alias("playerRewards.seasonVp"),
                currentIndex: -1,
                getCurrentTier(e) {
                    if (0 === e) return 0;
                    for (let t = 0; t <= 9; t++)
                        if (e < s[t]) {
                            return t - 1
                        } return 9
                },
                renderedCards: a.Ember.computed("seasonVp", (function() {
                    const e = [],
                        t = this.get("seasonVp"),
                        n = this.getCurrentTier(t);
                    return e.push({
                        tier: "contender",
                        description: this.get("tra.clash_eos_tier_0_0"),
                        iconDescription: this.get("tra.clash_rewards_contender_icon"),
                        logoDescription: this.get("tra.clash_rewards_contender_logo"),
                        bannerDescription: this.get("tra.clash_rewards_contender_banner"),
                        iconSrc: "/fe/lol-clash/assets/images/rewards-modal/person-in-circle.png",
                        logoSrc: "/fe/lol-clash/assets/images/rewards-modal/lock.png",
                        bannerSrc: "/fe/lol-clash/assets/images/rewards-modal/lock.png",
                        bottomLineStyle: n > 1 ? "clash-rewards-modal-bottom-line" : "clash-rewards-modal-bottom-line-grey",
                        vpBoxStyle: "clash-rewards-modal-vp",
                        currentTier: 1 === n,
                        previousTier: n > 1,
                        tierNotAchieved: n <= 1,
                        vpText: this.get("tra.clash_vp_tier_1")
                    }), e.push({
                        tier: "contender",
                        description: this.get("tra.clash_eos_tier_0_1"),
                        iconDescription: this.get("tra.clash_rewards_contender_icon"),
                        logoDescription: this.get("tra.clash_rewards_contender_logo"),
                        bannerDescription: this.get("tra.clash_rewards_contender_banner"),
                        iconSrc: "/fe/lol-clash/assets/images/rewards-modal/person-in-circle.png",
                        logoSrc: "/fe/lol-clash/assets/images/rewards-modal/clash-logo.png",
                        bannerSrc: "/fe/lol-clash/assets/images/rewards-modal/lock.png",
                        bottomLineStyle: n > 2 ? "clash-rewards-modal-bottom-line" : "clash-rewards-modal-bottom-line-grey",
                        vpBoxStyle: "clash-rewards-modal-vp",
                        currentTier: 2 === n,
                        previousTier: n > 2,
                        tierNotAchieved: n <= 2,
                        vpText: this.get("tra.clash_vp_tier_2")
                    }), e.push({
                        tier: "contender",
                        description: this.get("tra.clash_eos_tier_0_2"),
                        iconDescription: this.get("tra.clash_rewards_contender_icon"),
                        logoDescription: this.get("tra.clash_rewards_contender_logo"),
                        bannerDescription: this.get("tra.clash_rewards_contender_banner"),
                        iconSrc: "/fe/lol-clash/assets/images/rewards-modal/person-in-circle.png",
                        logoSrc: "/fe/lol-clash/assets/images/rewards-modal/clash-logo.png",
                        bannerSrc: "/fe/lol-clash/assets/images/rewards-modal/clash-banner.png",
                        bottomLineStyle: n > 3 ? "clash-rewards-modal-bottom-line" : "clash-rewards-modal-bottom-line-grey",
                        vpBoxStyle: "clash-rewards-modal-vp",
                        currentTier: 3 === n,
                        previousTier: n > 3,
                        tierNotAchieved: n <= 3,
                        vpText: this.get("tra.clash_vp_tier_3")
                    }), e.push({
                        tier: "conquerer",
                        description: this.get("tra.clash_eos_tier_1_0"),
                        iconDescription: this.get("tra.clash_rewards_conqueror_icon"),
                        logoDescription: this.get("tra.clash_rewards_conqueror_logo"),
                        bannerDescription: this.get("tra.clash_rewards_conqueror_banner"),
                        iconSrc: "/fe/lol-clash/assets/images/rewards-modal/person-in-circle.png",
                        logoSrc: "/fe/lol-clash/assets/images/rewards-modal/lock.png",
                        bannerSrc: "/fe/lol-clash/assets/images/rewards-modal/lock.png",
                        bottomLineStyle: n > 4 ? "clash-rewards-modal-bottom-line" : "clash-rewards-modal-bottom-line-grey",
                        vpBoxStyle: "clash-rewards-modal-vp",
                        currentTier: 4 === n,
                        previousTier: n > 4,
                        tierNotAchieved: n <= 4,
                        vpText: this.get("tra.clash_vp_tier_4")
                    }), e.push({
                        tier: "conquerer",
                        description: this.get("tra.clash_eos_tier_1_1"),
                        iconDescription: this.get("tra.clash_rewards_conqueror_icon"),
                        logoDescription: this.get("tra.clash_rewards_conqueror_logo"),
                        bannerDescription: this.get("tra.clash_rewards_conqueror_banner"),
                        iconSrc: "/fe/lol-clash/assets/images/rewards-modal/person-in-circle.png",
                        logoSrc: "/fe/lol-clash/assets/images/rewards-modal/clash-logo.png",
                        bannerSrc: "/fe/lol-clash/assets/images/rewards-modal/lock.png",
                        bottomLineStyle: n > 5 ? "clash-rewards-modal-bottom-line" : "clash-rewards-modal-bottom-line-grey",
                        vpBoxStyle: "clash-rewards-modal-vp",
                        currentTier: 5 === n,
                        previousTier: n > 5,
                        tierNotAchieved: n <= 5,
                        vpText: this.get("tra.clash_vp_tier_5")
                    }), e.push({
                        tier: "conquerer",
                        description: this.get("tra.clash_eos_tier_1_2"),
                        iconDescription: this.get("tra.clash_rewards_conqueror_icon"),
                        logoDescription: this.get("tra.clash_rewards_conqueror_logo"),
                        bannerDescription: this.get("tra.clash_rewards_conqueror_banner"),
                        iconSrc: "/fe/lol-clash/assets/images/rewards-modal/person-in-circle.png",
                        logoSrc: "/fe/lol-clash/assets/images/rewards-modal/clash-logo.png",
                        bannerSrc: "/fe/lol-clash/assets/images/rewards-modal/clash-banner.png",
                        bottomLineStyle: n > 6 ? "clash-rewards-modal-bottom-line" : "clash-rewards-modal-bottom-line-grey",
                        vpBoxStyle: "clash-rewards-modal-vp",
                        currentTier: 6 === n,
                        previousTier: n > 6,
                        tierNotAchieved: n <= 6,
                        vpText: this.get("tra.clash_vp_tier_6")
                    }), e.push({
                        tier: "champion",
                        description: this.get("tra.clash_eos_tier_2_0"),
                        iconDescription: this.get("tra.clash_rewards_champion_icon"),
                        logoDescription: this.get("tra.clash_rewards_champion_logo"),
                        bannerDescription: this.get("tra.clash_rewards_champion_banner"),
                        iconSrc: "/fe/lol-clash/assets/images/rewards-modal/person-in-circle.png",
                        logoSrc: "/fe/lol-clash/assets/images/rewards-modal/lock.png",
                        bannerSrc: "/fe/lol-clash/assets/images/rewards-modal/lock.png",
                        bottomLineStyle: n > 7 ? "clash-rewards-modal-bottom-line" : "clash-rewards-modal-bottom-line-grey",
                        vpBoxStyle: "clash-rewards-modal-vp",
                        currentTier: 7 === n,
                        previousTier: n > 7,
                        tierNotAchieved: n <= 7,
                        vpText: this.get("tra.clash_vp_tier_7")
                    }), e.push({
                        tier: "champion",
                        description: this.get("tra.clash_eos_tier_2_1"),
                        iconDescription: this.get("tra.clash_rewards_champion_icon"),
                        logoDescription: this.get("tra.clash_rewards_champion_logo"),
                        bannerDescription: this.get("tra.clash_rewards_champion_banner"),
                        iconSrc: "/fe/lol-clash/assets/images/rewards-modal/person-in-circle.png",
                        logoSrc: "/fe/lol-clash/assets/images/rewards-modal/clash-logo.png",
                        bannerSrc: "/fe/lol-clash/assets/images/rewards-modal/lock.png",
                        bottomLineStyle: n > 8 ? "clash-rewards-modal-bottom-line" : "clash-rewards-modal-bottom-line-grey",
                        vpBoxStyle: "clash-rewards-modal-vp",
                        currentTier: 8 === n,
                        previousTier: n > 8,
                        tierNotAchieved: n <= 8,
                        vpText: this.get("tra.clash_vp_tier_8")
                    }), e.push({
                        tier: "champion",
                        description: this.get("tra.clash_eos_tier_2_2"),
                        iconDescription: this.get("tra.clash_rewards_champion_icon"),
                        logoDescription: this.get("tra.clash_rewards_champion_logo"),
                        bannerDescription: this.get("tra.clash_rewards_champion_banner"),
                        iconSrc: "/fe/lol-clash/assets/images/rewards-modal/person-in-circle.png",
                        logoSrc: "/fe/lol-clash/assets/images/rewards-modal/clash-logo.png",
                        bannerSrc: "/fe/lol-clash/assets/images/rewards-modal/clash-banner.png",
                        bottomLineStyle: "clash-rewards-modal-bottom-line hidden",
                        vpBoxStyle: "clash-rewards-modal-vp",
                        currentTier: 9 === n,
                        previousTier: n > 9,
                        tierNotAchieved: n <= 9,
                        vpText: this.get("tra.clash_vp_tier_9")
                    }), e
                })),
                currentVp: a.Ember.computed("seasonVp", (function() {
                    const e = this.get("seasonVp"),
                        t = this.getCurrentTier(e),
                        n = Math.max(t - 2, 0);
                    return this.set("currentIndex", n), e
                })),
                numWinsTxt: a.Ember.computed("history.[]", (function() {
                    const e = this.get("playerHistory");
                    if (!e) return 0;
                    let t = 0;
                    for (const n of e)
                        for (const e of n.periodStats)
                            for (const n of e.matchStats) t += n.win ? 1 : 0;
                    return t
                })),
                isLeftArrowDisabled: a.Ember.computed("currentIndex", (function() {
                    return this.get("currentIndex") <= 0
                })),
                isRightArrowDisabled: a.Ember.computed("currentIndex", (function() {
                    return this.get("currentIndex") >= 7
                })),
                updateCardPosition: a.Ember.computed("currentIndex", (function() {
                    const e = this.get("currentIndex");
                    return String(-270 * e)
                })),
                actions: {
                    close() {
                        const e = this.get("closeCallback");
                        e && e()
                    },
                    slide_left() {
                        let e = this.get("currentIndex");
                        e++, e < 8 && this.set("currentIndex", e)
                    },
                    slide_right() {
                        let e = this.get("currentIndex");
                        e--, e >= 0 && this.set("currentIndex", e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "VdIMRRpT",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-rewards-modal\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-rewards-modal\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-rewards-modal\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-rewards-modal"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-close-button"],["flush-element"],["text","\\n    "],["append",["helper",["generic-button"],null,[["baseImgPath","overImgPath","downImgPath","onClickSound","isEnabled","onClick"],["/fe/lol-clash/assets/images/buttons/icon-x.png","/fe/lol-clash/assets/images/buttons/icon-x-over.png","/fe/lol-clash/assets/images/buttons/icon-x-down.png","generic-click-small",true,["helper",["action"],[["get",[null]],"close"],null]]]],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-title"],["flush-element"],["append",["unknown",["tra","clash_rewards_modal_header"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-header-wing"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-rewards-modal-wing-left"],["static-attr","src","/fe/lol-clash/assets/images/rewards-modal/wing.svg"],["flush-element"],["close-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-rewards-trophy-image"],["static-attr","src","/fe/lol-clash/assets/images/trophy-small.png"],["flush-element"],["close-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-rewards-modal-wing-right"],["static-attr","src","/fe/lol-clash/assets/images/rewards-modal/wing.svg"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-description"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-description-text"],["flush-element"],["text","\\n      "],["append",["unknown",["tra","clash_rewards_description"]],false],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-status"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-status-holder"],["flush-element"],["text","\\n        "],["open-element","div",[]],["flush-element"],["append",["unknown",["tra","clash_rewards_wins"]],false],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-status-value"],["flush-element"],["append",["unknown",["numWinsTxt"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-status-holder"],["flush-element"],["text","\\n        "],["open-element","div",[]],["flush-element"],["append",["unknown",["tra","clash_rewards_current_vp"]],false],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-status-value"],["flush-element"],["append",["unknown",["currentVp"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","id","cards"],["static-attr","class","clash-rewards-modal-cards"],["dynamic-attr","style",["concat",["transform: translate(",["unknown",["updateCardPosition"]],"px);"]]],["flush-element"],["text","\\n"],["block",["each"],[["get",["renderedCards"]]],null,0],["text","  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","side-shadow-left"],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["arrow-button-left",["helper",["if"],[["get",["isLeftArrowDisabled"]],"-hidden"],null]]]],["flush-element"],["text","\\n      "],["append",["helper",["generic-button"],null,[["baseImgPath","overImgPath","downImgPath","onClickSound","isEnabled","onClick"],["/fe/lol-clash/assets/images/rewards-modal/arrow-left-default.png","/fe/lol-clash/assets/images/rewards-modal/arrow-left-hover.png","/fe/lol-clash/assets/images/rewards-modal/arrow-left-pressed.png","generic-click-small",true,["helper",["action"],[["get",[null]],"slide_right"],null]]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","side-shadow-right"],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["arrow-button-right",["helper",["if"],[["get",["isRightArrowDisabled"]],"-hidden"],null]]]],["flush-element"],["text","\\n      "],["append",["helper",["generic-button"],null,[["baseImgPath","overImgPath","downImgPath","onClickSound","isEnabled","onClick"],["/fe/lol-clash/assets/images/rewards-modal/arrow-left-default.png","/fe/lol-clash/assets/images/rewards-modal/arrow-left-hover.png","/fe/lol-clash/assets/images/rewards-modal/arrow-left-pressed.png","generic-click-small",true,["helper",["action"],[["get",[null]],"slide_left"],null]]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-card-holder"],["flush-element"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-rewards-modal-single-card-",["unknown",["card","tier"]]]]],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-card-title"],["flush-element"],["text","\\n          "],["append",["unknown",["card","description"]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-card-rewards"],["flush-element"],["text","\\n          "],["append",["unknown",["tra","clash_rewards_rewards"]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-card-text"],["flush-element"],["text","\\n          "],["open-element","img",[]],["static-attr","class","clash-rewards-modal-card-icon"],["dynamic-attr","src",["concat",[["unknown",["card","iconSrc"]]]]],["flush-element"],["close-element"],["text","\\n          "],["append",["unknown",["card","iconDescription"]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-card-text"],["flush-element"],["text","\\n          "],["open-element","img",[]],["static-attr","class","clash-rewards-modal-card-icon"],["dynamic-attr","src",["concat",[["unknown",["card","logoSrc"]]]]],["flush-element"],["close-element"],["text","\\n          "],["append",["unknown",["card","logoDescription"]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-card-text"],["flush-element"],["text","\\n          "],["open-element","img",[]],["static-attr","class","clash-rewards-modal-card-icon"],["dynamic-attr","src",["concat",[["unknown",["card","bannerSrc"]]]]],["flush-element"],["close-element"],["text","\\n          "],["append",["unknown",["card","bannerDescription"]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-card-bottom-text"],["flush-element"],["text","\\n          "],["append",["unknown",["tra","clash_rewards_include_description"]],false],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","id","vp_bar_1"],["dynamic-attr","class",["concat",[["unknown",["card","bottomLineStyle"]]]]],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","id","vp_count_1"],["dynamic-attr","class",["concat",["clash-rewards-modal-vp",["helper",["if"],[["get",["card","currentTier"]],"-current"],null],["helper",["if"],[["get",["card","previousTier"]],"-previous"],null]]]],["flush-element"],["text","\\n        "],["append",["unknown",["card","vpText"]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","id","current_tier_1"],["dynamic-attr","class",["concat",["clash-rewards-modal-current-tier-div",["helper",["if"],[["get",["card","currentTier"]],"-visible"],null]]]],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-rewards-modal-current-tier"],["flush-element"],["text","\\n          "],["append",["unknown",["tra","clash_rewards_current_tier"]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","img",[]],["static-attr","class","clash-rewards-modal-current-tier-wing-1"],["static-attr","src","/fe/lol-clash/assets/images/rewards-modal/current-tier-wing-1.svg"],["flush-element"],["close-element"],["text","\\n        "],["open-element","img",[]],["static-attr","class","clash-rewards-modal-current-tier-wing-2"],["static-attr","src","/fe/lol-clash/assets/images/rewards-modal/current-tier-wing-2.svg"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":["card"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(15),
                i = n(9),
                o = d(n(87)),
                r = d(n(88)),
                l = d(n(91)),
                c = d(n(98));

            function d(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const m = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                basePaths: {
                    clash: "/lol-clash"
                },
                boundProperties: {
                    isReady: {
                        path: "/lol-clash/v1/ready",
                        default: !1
                    },
                    currentTournamentIds: {
                        path: "/lol-clash/v1/currentTournamentIds",
                        default: null
                    },
                    allTournaments: {
                        path: "/lol-clash/v1/all-tournaments",
                        default: null
                    },
                    logoConfigRaw: {
                        path: "/lol-clash/v1/iconconfig",
                        default: {
                            logos: []
                        }
                    },
                    invitedRosterIds: {
                        path: "/lol-clash/v1/invited-roster-ids",
                        default: null
                    },
                    isWithdrawEnabled: {
                        path: "/lol-platform-config/v1/namespaces/ClashConfig/WithdrawEnabled",
                        default: !0
                    },
                    isWithdrawMatchmakingEnabled: {
                        path: "/lol-platform-config/v1/namespaces/ClashConfig/WithdrawMatchmakingEnabled",
                        default: !1
                    },
                    withdrawGameStartBufferMs: {
                        path: "/lol-platform-config/v1/namespaces/ClashConfig/WithdrawGameStartBufferMs",
                        default: 35e3
                    },
                    premiumTicketsEnabled: {
                        path: "/lol-platform-config/v1/namespaces/ClashConfig/PremiumTicketsEnabled",
                        default: !1
                    },
                    findTeamViewEnabled: {
                        path: "/lol-platform-config/v1/namespaces/ClashConfig/FindTeamViewEnabled",
                        default: !1
                    },
                    isClashRewardsModalEnabled: {
                        path: "/lol-platform-config/v1/namespaces/ClashConfig/IsRewardsModalEnabled",
                        default: !1
                    }
                }
            });
            e.exports = a.Ember.Service.extend(o.default, m, {
                telemetryService: a.Ember.inject.service("telemetry"),
                summonerService: a.Ember.inject.service("summoner"),
                tutorialService: a.Ember.inject.service("tutorial"),
                tournamentId: null,
                tournament: null,
                localPlayer: null,
                isInitialized: a.Ember.computed("tournamentId", "isReady", "currentTournamentIds", "currentTournamentIds.[]", (function() {
                    if (!this.get("isReady")) return a.logger.trace("clash-service -- NOT INITIALIZED: isReady == false"), !1;
                    if (null === this.get("tournamentId")) return a.logger.trace("clash-service -- NOT INITIALIZED: tournamentId == null"), !1;
                    return null === this.get("currentTournamentIds") ? (a.logger.trace("clash-service -- NOT INITIALIZED: currentTournamentIds == null"), !1) : (a.logger.trace("clash-service -- INITIALIZED"), !0)
                })),
                logoConfig: a.Ember.computed("logoConfigRaw", "logoConfigRaw.icons.[]", "logoConfigRaw.logos.[]", (function() {
                    const e = this.get("logoConfigRaw");
                    let t = {
                        icons: []
                    };
                    return e && (e.icons || e.logos) ? t = e : a.logger.error("bad icon config json"), !t.icons || t.logos && t.logos.length ? !t.logos || t.icons && t.icons.length || (t.icons = t.logos) : t.logos = t.icons, t.byId = a._.keyBy(t.logos, "id"), a.logger.trace("logoConfig updated to", t), t
                })),
                setSelectedTournamentId(e) {
                    if (a.logger.trace("clashService -- attempting to setSelectedTournamentId to " + e), e && "string" == typeof e) e = parseInt(e);
                    else if ("number" != typeof e) return void a.logger.warning(`tournamentId [${e}] is not valid`);
                    if (e === this.get("tournamentId")) return;
                    if (this.set("tournamentId", e), e === i.INVALID_TOURNAMENT_ID) return a.logger.trace("no tournament selected, postponing initialization"), this.set("tournament", null), void(this.get("localPlayer") && this.set("localPlayer.tournament", null));
                    let t = this.get("tournament");
                    t ? (t.set("id", e), a.logger.trace("setting existing tournament's tournamentId", t)) : (t = r.default.create({
                        id: e
                    }), this.set("tournament", t), a.logger.trace("creating new tournament", t));
                    let n = this.get("localPlayer");
                    n ? (n.setTournament(t), a.logger.trace("setting existing localPlayer's tournament", n)) : (n = l.default.create({
                        tournament: t
                    }), this.set("localPlayer", n), a.logger.trace("creating new localPlayer with tournament", n)), a.logger.trace("clashService initialized with tournamentId", e)
                },
                resetTournamentId() {
                    this.set("tournamentId", null), this.set("tournament", null), this.set("localPlayer", null)
                },
                getRewardConfig(e, t) {
                    const n = this.get("localPlayer.playerRewards.seasonRewards") || [],
                        a = this.get("tournament.rewardConfig") || [],
                        s = t.toString(),
                        i = t => t.find((t => e.indexOf(t.rewardType) > -1 && t.rewardId === s));
                    return i(n) || i(a)
                },
                refresh() {
                    return a.logger.trace("refreshing tournament info"), this.post("/v1/refresh", null, "refresh")
                },
                getTournament(e) {
                    return a.logger.trace(`getting tournament data for tournament id ${e}`), this.getCall(`/v1/tournament/${e}`, null, "refresh")
                },
                getRoster(e) {
                    return a.logger.trace(`getting roster data for roster id ${e}`), this.getCall(`/v1/roster/${e}`, null, "getroster")
                },
                createRoster(e) {
                    return this.set("justCreatedRoster", !0), a.logger.trace(`requesting create-roster for tournamentId ${e}`), this.post(`/v1/tournament/${e}/create-roster`, {
                        name: "",
                        shortName: "",
                        iconId: i.INVALID_LOGO_ID
                    }, "createroster")
                },
                setRosterName(e, t) {
                    return a.logger.trace(`requesting set rosterName to ${t}`), this.post(`/v1/roster/${e}/change-name`, {
                        name: t
                    }, "setrostername")
                },
                setRosterShortName(e, t) {
                    return a.logger.trace(`requesting set rosterShortName to ${t}`), this.post(`/v1/roster/${e}/change-short-name`, {
                        name: t.toUpperCase()
                    }, "setrostertag")
                },
                setRosterIcon(e, t, n) {
                    return a.logger.trace(`requesting set rosterIconId to ${t}`), this.post(`/v1/roster/${e}/change-icon`, {
                        iconId: t,
                        iconColorId: n
                    }, "setrostericon")
                },
                setRosterDetails(e, t, n, s, i) {
                    return a.logger.trace("requesting setRosterDetails", {
                        newRosterIconId: t,
                        newRosterChromaId: n,
                        newRosterName: s,
                        newRosterShortName: i
                    }), this.post(`/v1/roster/${e}/change-all-details`, {
                        iconId: t,
                        iconColorId: n,
                        name: s,
                        shortName: i
                    }, "setrosterdetails")
                },
                transferRosterCaptain(e, t) {
                    return a.logger.trace(`transfering roster captain to summoner id ${t}`), this.post(`/v1/roster/${e}/transfer-captain`, t, "transfercaptain")
                },
                invitePlayers(e, t) {
                    return a.logger.trace(`inviting players ${t}`), this.post(`/v1/roster/${e}/invite`, t, "invite").then((e => (this._processFailedInvitesError(e), Promise.resolve())))
                },
                suggestPlayers(e, t) {
                    return a.logger.trace(`inviting players ${t}`), this.post(`/v1/roster/${e}/suggest`, t, "invite")
                },
                acceptSuggestion(e, t) {
                    return a.logger.trace(`accepting suggestion for player [${t}]`), this.post(`/v1/roster/${e}/suggest/${t}/accept`, null, "generic")
                },
                declineSuggestion(e, t) {
                    return a.logger.trace(`declining suggestion for player [${t}]`), this.post(`/v1/roster/${e}/suggest/${t}/decline`, null, "generic")
                },
                revokeSuggestion(e, t) {
                    return a.logger.trace(`revoking suggestion for player [${t}]`), this.post(`/v1/roster/${e}/suggest/${t}/revoke`, null, "generic")
                },
                requestInvite(e) {
                    return a.logger.trace(`requesting invite for roster ${e}`), this.post(`/v1/lft/team/${e}/request`, "invite")
                },
                kickPlayer(e, t) {
                    return a.logger.trace(`kicking player ${t}`), this.post(`/v1/roster/${e}/kick`, {
                        summonerId: t
                    }, "kick")
                },
                acceptInvite(e) {
                    return a.logger.trace(`accepting roster invite for invite id ${e}`), this.post(`/v1/roster/${e}/accept`, null, "acceptinvite")
                },
                declineInvite(e) {
                    return a.logger.trace(`declining roster invite for invite id ${e}`), this.post(`/v1/roster/${e}/decline`, null, "declineinvite")
                },
                setTicket(e, t, n = i.TicketType.BASIC) {
                    return a.logger.trace(`setting ticket to ${t}`), this.post(`/v1/roster/${e}/set-ticket`, {
                        ticketAmount: t,
                        ticketType: n
                    }, "setticket")
                },
                setPositionRole(e, t) {
                    return a.logger.trace(`setting position role to ${t}`), this.post(`/v1/roster/${e}/set-position`, {
                        position: t
                    }, "setposition")
                },
                offerTicket(e, t, n, s = i.TicketType.BASIC) {
                    return a.logger.trace(`offering ticket to ${t}`), this.post(`/v1/roster/${e}/ticket-offer/${t}/offer`, {
                        ticketType: s,
                        ticketAmount: n
                    }, "offerticket")
                },
                revokeTicketOffer(e, t) {
                    return a.logger.trace(`revoking ticket to ${t}`), this.post(`/v1/roster/${e}/ticket-offer/${t}/revoke`, null, "revoketicketoffer")
                },
                acceptTicketOffer(e, t) {
                    return a.logger.trace(`accepting ticket to ${t}`), this.post(`/v1/roster/${e}/ticket-offer/${t}/accept`, null, "acceptticketoffer")
                },
                declineTicketOffer(e, t) {
                    return a.logger.trace(`declining ticket to ${t}`), this.post(`/v1/roster/${e}/ticket-offer/${t}/decline`, null, "declineticketoffer")
                },
                lockin(e) {
                    return a.logger.trace("locking in"), this.get("tutorialService").completeAllClashTutorialFlows(), this.post(`/v1/roster/${e}/lockin`, null, "lockin")
                },
                unlockin(e) {
                    return a.logger.trace("unlocking in"), this.post(`/v1/roster/${e}/unlockin`, null, "unlockin")
                },
                leave(e) {
                    return a.logger.trace("leaving current roster"), this.post(`/v1/roster/${e}/leave`, null, "leave")
                },
                voteWithdraw(e) {
                    return a.logger.trace("voting to withdraw"), this.post(`/v1/roster/${e}/withdraw`, null, "withdraw")
                },
                declineWithdraw(e) {
                    return a.logger.trace("voting to unwithdraw"), this.post(`/v1/roster/${e}/unwithdraw`, null, "unwithdraw")
                },
                cancelWithdraw(e) {
                    return a.logger.trace("cancelling withdraw"), this.post(`/v1/roster/${e}/cancel-withdraw`, null, "cancelwithdraw")
                },
                getTournamentHistoryAndWinners() {
                    return a.logger.trace("getting tournament history + winner history"), this.getCall("/v1/historyandwinners", {
                        skipCache: !0
                    }, "refresh")
                },
                getTournamentWinnerHistory(e) {
                    return a.logger.trace(`getting tournament winner history for tournament ${e}`), this.getCall(`/v1/tournament/${e}/winners`, {
                        skipCache: !0
                    }, "refresh")
                },
                getRosterStats(e) {
                    return a.logger.trace(`getting roster stats for roster ${e}`), this.getCall(`/v1/roster/${e}/stats`, {
                        skipCache: !0
                    }, "getroster")
                },
                getEventDataBatch(e) {
                    if (a.logger.trace("getting event data"), !e || !e.length) return Promise.resolve({});
                    const t = [];
                    let n = 0;
                    for (; n < e.length;) {
                        const a = e.slice(n, n + Math.min(100, e.length - n));
                        t.push(this.post("/v1/events", a, "generic")), n += 100
                    }
                    return Promise.all(t)
                },
                updatePlayerLft(e, t, n) {
                    return a.logger.trace(`updating player lft to ${e}, ${t}, ${n}`), this.post("/v1/lft/player", {
                        lft: e,
                        primaryPos: t,
                        secondaryPos: n
                    }, "updateplayerlft")
                },
                changeTeamOpen(e, t, n) {
                    return a.logger.trace(`changing team open to ${n}, roster ${e}, captain ${t}`), this.post("/v1/lft/team", {
                        invitationId: e,
                        captainId: t,
                        openTeam: n
                    }, "changeteamopen")
                },
                findPlayers(e, t, n, s) {
                    return a.logger.trace(`finding lft players, roster ${e}, member ${t}, page ${n}, count ${s}`), this.post("/v1/lft/player/find", {
                        invitationId: e,
                        memberId: t,
                        page: n,
                        count: s
                    }, "findplayers")
                },
                findTeams(e, t, n) {
                    return a.logger.trace(`finding lft teams, tournament ${e}, page ${t}, count ${n}`), this.post("/v1/lft/team/find", {
                        tournamentId: e,
                        page: t,
                        count: n
                    }, "findteams")
                },
                fetchPendingLftRequests(e) {
                    return a.logger.trace("getting pending lft request list"), this.post("/v1/lft/team/fetch-requests", e, "findteams")
                },
                getCall(e, t, n, a) {
                    const s = this.get("api.clash").get(e, t || {});
                    return this._errorWrap(s, n, a, "GET " + e)
                },
                post(e, t, n, a) {
                    const s = this.get("api.clash").post(e, t || {});
                    return this._errorWrap(s, n, a, "POST " + e)
                },
                put(e, t, n, a) {
                    const s = this.get("api.clash").put(e, t || {});
                    return this._errorWrap(s, n, a, "PUT " + e)
                },
                delete(e, t, n, a) {
                    const s = this.get("api.clash").delete(e, t || {});
                    return this._errorWrap(s, n, a, "DELETE " + e)
                },
                _errorWrap(e, t, n, a) {
                    const s = n && n > 0 ? n : 1e4,
                        i = this.get("telemetryService");
                    return (0, c.default)(e, this.get("tra"), i, t || "generic", s, a)
                },
                _processFailedInvitesError(e) {
                    if (e && e.length) {
                        const t = a._.map(e, (e => e.playerId)),
                            n = this.get("tra");
                        this.get("summonerService").getSummonersByIds(t).then((t => {
                            (0, s.failedInvitesErrorDialog)(n, e, t)
                        }), (() => {
                            (0, s.genericErrorDialog)(n, "clash_invites_failed_title", ["clash_invites_failed_desc_unknown"])
                        }))
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            const s = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                basePaths: {
                    clash: "/lol-clash"
                },
                boundProperties: {
                    serverTime: "/lol-clash/v1/time",
                    regionLocale: "/riotclient/region-locale"
                }
            });
            e.exports = a.Ember.Mixin.create(s, {
                timeLastRetrievedServerTime: 0,
                serverTimeObserver: a.Ember.observer("serverTime", (function() {
                    this.set("timeLastRetrievedServerTime", a.Util.getCurrentTime())
                })),
                locale: a.Ember.computed("regionLocale.locale", (function() {
                    const e = this.get("regionLocale.locale");
                    return e ? e.replace("_", "-") : null
                })),
                getDateString(e, t, n) {
                    return Number.isNaN(t) ? (a.logger.error("time-locale -- getDateString called with invalid time:", t), "") : this._getDateTimeString(e, t, n, "date")
                },
                getTimeString(e, t, n) {
                    return a.Util.isNumberOk(t) ? this._getDateTimeString(e, t, n, "time") : (a.logger.error("time-locale -- getTimeString called with invalid time:", t), "")
                },
                _getDateTimeString(e, t, n, s) {
                    const i = this.serverToLocalTime(e, t);
                    if (!e) return "";
                    e = "ar-AE" === e ? "ar-TN" : e, n = a._.assign({
                        timeZone: "UTC"
                    }, n);
                    const o = new Date(i);
                    return "date" === s ? o.toLocaleDateString(e, n) : o.toLocaleTimeString(e, n)
                },
                getCurrentClashServerTime() {
                    const e = this.get("timeLastRetrievedServerTime");
                    if (!e) return a.Util.getCurrentTime();
                    return this.get("serverTime") + (a.Util.getCurrentTime() - e)
                },
                serverToLocalTime(e, t) {
                    const n = new Date;
                    let a = -n.getTimezoneOffset();
                    const s = (n.toLocaleTimeString(e || void 0, {
                        timeZoneName: "short"
                    }) || "").split(" ");
                    "BRST" === (s[s.length - 1] || "") && (a = -180);
                    const i = 60 * a * 1e3;
                    return Math.max(t + i, 0)
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9),
                i = l(n(87)),
                o = l(n(10)),
                r = l(n(89));

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const c = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                basePaths: {
                    clash: "/lol-clash"
                },
                boundProperties: {
                    tournament: {
                        api: "clash",
                        path: "/v1/tournament/{{id}}",
                        default: {
                            rosterSize: 5,
                            phases: [],
                            startTimeMs: -1,
                            endTimeMs: -1,
                            scoutingDurationMs: 0
                        },
                        objectTypes: {
                            "phases[]": n(90)
                        }
                    },
                    tournamentStateInfo: {
                        api: "clash",
                        path: "/v1/tournament/{{id}}/stateInfo",
                        default: {
                            currentPhaseId: -1,
                            nextPhaseId: -1
                        }
                    }
                }
            });
            e.exports = a.Ember.Object.extend(i.default, c, {
                themeId: a.Ember.computed.alias("tournament.themeId"),
                nameLocKey: a.Ember.computed.alias("tournament.nameLocKey"),
                nameLocKeySecondary: a.Ember.computed.alias("tournament.nameLocKeySecondary"),
                buyInOptions: a.Ember.computed.alias("tournament.buyInOptions"),
                buyInOptionsPremium: a.Ember.computed.alias("tournament.buyInOptionsPremium"),
                entryFee: a.Ember.computed.alias("tournament.entryFee"),
                rosterSize: a.Ember.computed.alias("tournament.rosterSize"),
                allowRosterCreation: a.Ember.computed.alias("tournament.allowRosterCreation"),
                rosterCreateDeadline: a.Ember.computed.alias("tournament.rosterCreateDeadline"),
                scoutingDurationMs: a.Ember.computed.alias("tournament.scoutingDurationMs"),
                startTimeMs: a.Ember.computed.alias("tournament.startTimeMs"),
                endTimeMs: a.Ember.computed.alias("tournament.endTimeMs"),
                lastThemeOfSeason: a.Ember.computed.alias("tournament.lastThemeOfSeason"),
                isSmsRestrictionEnabled: a.Ember.computed.alias("tournament.isSmsRestrictionEnabled"),
                isHonorRestrictionEnabled: a.Ember.computed.alias("tournament.isHonorRestrictionEnabled"),
                isRankedRestrictionEnabled: a.Ember.computed.alias("tournament.isRankedRestrictionEnabled"),
                isVoiceEnabled: a.Ember.computed.alias("tournament.isVoiceEnabled"),
                phases: a.Ember.computed.alias("tournament.phases"),
                rewardConfig: a.Ember.computed.alias("tournament.rewardConfig"),
                tierConfigs: a.Ember.computed.alias("tournament.tierConfigs"),
                status: a.Ember.computed.alias("tournament.status"),
                resumeTime: a.Ember.computed.alias("tournament.resumeTime"),
                lft: a.Ember.computed.alias("tournament.lft"),
                maxInvites: a.Ember.computed.alias("tournament.maxInvites"),
                maxSuggestionsPerPlayer: a.Ember.computed.alias("tournament.maxSuggestionsPerPlayer"),
                queueId: a.Ember.computed.alias("tournament.queueId"),
                isAramQueue: a.Ember.computed("queueId", (function() {
                    return s.QUEUE_IDS_ARAM_CLASH.includes(this.get("queueId"))
                })),
                state: a.Ember.computed.alias("tournamentStateInfo.state"),
                currentPhaseId: a.Ember.computed.alias("tournamentStateInfo.currentPhaseId"),
                nextPhaseId: a.Ember.computed.alias("tournamentStateInfo.nextPhaseId"),
                numRemainingPeriods: a.Ember.computed.alias("tournamentStateInfo.numRemainingPeriods"),
                isIdle: a.Ember.computed.equal("state", o.default.Tournament.IDLE),
                isLockinAvailable: a.Ember.computed.equal("state", o.default.Tournament.LOCK_IN),
                isCurrentPhaseFull: a.Ember.computed("currentPhaseId", "currentPhase.capacityStatus", (function() {
                    const e = this.get("currentPhase.capacityStatus") || "";
                    return String(e).toLowerCase() === s.CapacityStatus.FULL
                })),
                bracketSizeProgression: a.Ember.computed("tournament.bracketSize", (function() {
                    const e = this.get("tournament.bracketSize") || "";
                    return a._.map(e.split(","), (e => parseInt(e)))
                })),
                currentPhase: a.Ember.computed("phases", "phases.[]", "phases.@each.id", "currentPhaseId", (function() {
                    const e = this.get("currentPhaseId");
                    return this._getPhaseByPhaseId(e)
                })),
                nextPhase: a.Ember.computed("phases", "phases.[]", "phases.@each.id", "nextPhaseId", (function() {
                    const e = this.get("nextPhaseId");
                    return this._getPhaseByPhaseId(e)
                })),
                timerPhase: a.Ember.computed("currentPhase", "nextPhase", "isIdle", (function() {
                    const e = this.get("isIdle"),
                        t = this.get("nextPhase");
                    return e ? t : this.get("currentPhase") || t
                })),
                hasPhaseTierLimits: a.Ember.computed("phases", "phases.[]", (function() {
                    const e = this.get("phases");
                    for (let t = 0; t < e.length; t++) {
                        const n = e[t];
                        if (n.limitTiers && n.limitTiers.length > 0) return !0
                    }
                    return !1
                })),
                lockinStartTime: a.Ember.computed.alias("timerPhase.lockinStartTime"),
                scoutingStartTimeMs: a.Ember.computed.alias("timerPhase.scoutingStartTime"),
                lockinStartTimeLocal: a.Ember.computed("lockinStartTimeMs", "locale", (function() {
                    const e = this.get("locale"),
                        t = this.get("lockinStartTimeMs");
                    return this.convertTimestampToLocalTime(e, t)
                })),
                startDate: a.Ember.computed("locale", "tournament.startTimeMs", (function() {
                    const e = this.get("locale"),
                        t = this.get("tournament.startTimeMs");
                    return this.getMonthDayDate(e, t)
                })),
                endDate: a.Ember.computed("locale", "tournament.endTimeMs", (function() {
                    const e = this.get("locale"),
                        t = this.get("tournament.endTimeMs");
                    return this.getMonthDayDate(e, t)
                })),
                startMonth: a.Ember.computed("locale", "tournament.startTimeMs", (function() {
                    const e = this.get("tournament.startTimeMs");
                    if (!e) return "";
                    const t = this.get("locale");
                    return this.getDateString(t, e, {
                        month: "long"
                    })
                })),
                endMonth: a.Ember.computed("locale", "tournament.endTimeMs", (function() {
                    const e = this.get("tournament.endTimeMs");
                    if (!e) return "";
                    const t = this.get("locale");
                    return this.getDateString(t, e, {
                        month: "long"
                    })
                })),
                startDay: a.Ember.computed("locale", "tournament.startTimeMs", (function() {
                    const e = this.get("tournament.startTimeMs");
                    if (!e) return "";
                    const t = this.get("locale");
                    return this.getDateString(t, e, {
                        day: "numeric"
                    })
                })),
                endDay: a.Ember.computed("locale", "tournament.endTimeMs", (function() {
                    const e = this.get("tournament.endTimeMs");
                    if (!e) return "";
                    const t = this.get("locale");
                    return this.getDateString(t, e, {
                        day: "numeric"
                    })
                })),
                rosterCreateDeadlineDate: a.Ember.computed("locale", "tournament.rosterCreateDeadline", (function() {
                    const e = this.get("locale"),
                        t = this.get("tournament.rosterCreateDeadline");
                    return this.getMonthDayDate(e, t)
                })),
                rosterCreateDeadlineMonth: a.Ember.computed("locale", "tournament.rosterCreateDeadline", (function() {
                    const e = this.get("tournament.rosterCreateDeadline");
                    if (!e) return "";
                    const t = this.get("locale");
                    return this.getDateString(t, e, {
                        month: "long"
                    })
                })),
                rosterCreateDeadlineDay: a.Ember.computed("locale", "tournament.rosterCreateDeadline", (function() {
                    const e = this.get("tournament.rosterCreateDeadline");
                    if (!e) return "";
                    const t = this.get("locale");
                    return this.getDateString(t, e, {
                        day: "numeric"
                    })
                })),
                getLocalizedName(e) {
                    const t = this.get("nameLocKey");
                    return r.default.getTournamentLocalizedName(e, t)
                },
                getLocalizedSecondaryName(e) {
                    const t = this.get("nameLocKeySecondary");
                    return r.default.getTournamentLocalizedSecondary(e, t)
                },
                convertTimestampToLocalTime(e, t) {
                    return t <= 0 ? "" : this.getTimeString(e, t, {
                        hour: "numeric",
                        minute: "numeric"
                    })
                },
                getMonthDayDate(e, t) {
                    return this.getDateString(e, t, {
                        month: "numeric",
                        day: "numeric"
                    })
                },
                _getPhaseByPhaseId(e) {
                    const t = this.get("phases");
                    return t && t.length ? t.find((t => t.id === e)) : null
                }
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = "week_",
                i = "day_";
            t.default = class {
                static getTournamentLocalizedName(e, t) {
                    e || a.logger.error("tournament.getLocalizedName passed invalid tra");
                    const n = `clash_tournament_name_${t}`;
                    return t && e && e.exists(n) ? e.get(n) : e.get("clash_tournament_name_default")
                }
                static getTournamentLocalizedSecondary(e, t) {
                    if (e && t || a.logger.error("tournament.getTournamentLocalizedSecondary passed invalid tra"), t && t.includes(s)) {
                        const n = t.split(s)[1] || 1;
                        return e.formatString("clash_tournament_week_default", {
                            weekNumber: n
                        })
                    }
                    if (t && t.includes(i)) {
                        const n = t.split(i)[1] || 1;
                        return e.formatString("clash_tournament_day", {
                            day: n
                        })
                    }
                    const n = `clash_tournament_week_${t}`;
                    return t && e && e.exists(n) ? e.get(n) : e.formatString("clash_tournament_day", {
                        day: 1
                    })
                }
            }
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            e.exports = a.Ember.Object.extend({
                getLowestLimitTier() {
                    const e = this.get("limitTiers");
                    return e && e.length ? Math.max(...e) : 0
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9),
                i = r(n(92)),
                o = r(n(95));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const l = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                basePaths: {
                    clash: "/lol-clash",
                    summoner: "/lol-summoner"
                },
                boundProperties: {
                    summoner: "/lol-summoner/v1/current-summoner",
                    playerData: "/lol-clash/v1/player",
                    currentTournamentData: "/lol-clash/v1/tournament/{{tournament.id}}/player",
                    isVerifiedData: "/lol-account-verification/v1/is-verified",
                    playerRewards: {
                        path: "/lol-clash/v1/rewards",
                        default: {
                            earnedRewards: [],
                            seasonRewards: [],
                            seasonVp: 0,
                            themeVp: {}
                        }
                    },
                    roster: {
                        path: "/lol-clash/v1/roster/{{currentTournamentData.rosterId}}",
                        default: null,
                        objectTypes: i.default.getObjectBindingTypes()
                    },
                    bracket: {
                        path: "/lol-clash/v1/bracket/{{currentTournamentData.bracketId}}",
                        default: null,
                        objectTypes: o.default.getObjectBindingTypes()
                    },
                    history: {
                        path: "/lol-clash/v1/player/history",
                        default: []
                    },
                    chatParticipants: {
                        path: "/lol-chat/v1/conversations/{{conversationId}}/participants",
                        default: []
                    }
                }
            });
            e.exports = a.Ember.Object.extend(l, {
                summonerId: a.Ember.computed.alias("summoner.summonerId"),
                availableTickets: a.Ember.computed.alias("playerData.tickets"),
                isClashBanned: a.Ember.computed.alias("playerData.isClashBanned"),
                tier: a.Ember.computed.alias("playerData.tier"),
                state: a.Ember.computed.alias("currentTournamentData.state"),
                seasonVp: a.Ember.computed.alias("playerRewards.seasonVp"),
                earnedRewards: a.Ember.computed.alias("playerRewards.earnedRewards"),
                themeVp: a.Ember.computed.alias("playerRewards.themeVp"),
                lft: a.Ember.computed.alias("playerData.lft"),
                primaryPosition: a.Ember.computed.alias("playerData.primaryPos"),
                secondaryPosition: a.Ember.computed.alias("playerData.secondaryPos"),
                isSmsClashDisabled: a.Ember.computed.not("tournament.isSmsRestrictionEnabled"),
                isSmsVerified: a.Ember.computed.or("isSmsClashDisabled", "isVerifiedData.success"),
                bidPreview: null,
                bidPreviewTicketType: null,
                freePassSelected: !1,
                localPlayer: a.Ember.computed((function() {
                    return this
                })),
                currentBuyin: a.Ember.computed("roster.localPlayerMember.currentBuyin", (function() {
                    return this.get("roster.localPlayerMember.currentBuyin") || 0
                })),
                buyinType: a.Ember.computed("roster.localPlayerMember.buyinType", (function() {
                    return this.get("roster.localPlayerMember.buyinType") || s.TicketType.BASIC
                })),
                hasEnoughTicketsForOffer: a.Ember.computed("availableTickets", "tournament.entryFee", "currentBuyin", "availableTickets.BASIC", "availableTickets.PREMIUM", (function() {
                    const e = this.get("tournament.entryFee"),
                        t = this.get("currentBuyin"),
                        n = this.get("availableTickets");
                    return !!n && (t >= e ? n[s.TicketType.BASIC] >= e || n[s.TicketType.PREMIUM] >= e : n[s.TicketType.BASIC] + n[s.TicketType.PREMIUM] >= 2 * e)
                })),
                hasMetTicketRequirement: a.Ember.computed.bool("roster.localPlayerMember.hasMetTicketRequirement"),
                conversationIdObserver: a.Ember.observer("tournament.id", "roster.isRegistered", "roster.id", "roster.invitationId", (function() {
                    const e = this.get("roster.isRegistered") ? this.get("roster.invitationId") : this.get("roster.id");
                    if (e) {
                        const t = this;
                        this.get("api.clash").get("/v1/player/chat-rosters").then((n => {
                            let a = null;
                            if (n) {
                                const t = n.find((t => String(e) === String(t.invitationId)));
                                a = t ? t.multiUserChatId : null
                            }
                            t.set("conversationId", a)
                        }))
                    }
                })),
                nextMatch: a.Ember.computed("bracket.id", "bracket.matches.[]", "bracket.losersMatches.[]", "bracket.matches.@each.status", "bracket.losersMatches.@each.status", "roster.id", "bracket.matches.@each.rosterId1", "bracket.matches.@each.rosterId2", "bracket.losersMatches.@each.rosterId1", "bracket.losersMatches.@each.rosterId2", (function() {
                    if (!this.get("bracket") || !this.get("bracket.matches") && !this.get("bracket.losersMatches")) return null;
                    const e = parseInt(this.get("roster.id"));
                    return isNaN(e) || e === s.INVALID_ROSTER_ID ? null : this._getNextMatchForRosterId(e)
                })),
                getSummoner() {
                    return this.get("api.summoner").get("/v1/current-summoner")
                },
                setTournament(e) {
                    this.set("tournament", e)
                },
                _getNextMatchForRosterId(e) {
                    const t = this.get("bracket.matches"),
                        n = this._findNextMatch(t, e);
                    if (n) return n;
                    const a = this.get("bracket.losersMatches"),
                        s = this._findNextMatch(a, e);
                    return s || null
                },
                _findNextMatch(e, t) {
                    if (!e) return null;
                    for (let n = 0; n < e.length; n++)
                        if ((e[n].rosterId1 === t || e[n].rosterId2 === t) && e[n].status !== s.MatchStatus.COMPLETED) return e[n];
                    return null
                },
                getCurrentTournamentRosterStats() {
                    const e = this.get("roster.id");
                    if (!e) return null;
                    const t = this.get("history");
                    for (let n = 0; n < t.length; ++n)
                        if (t[n].rosterId === Number(e)) return t[n];
                    return null
                },
                setBidPreview(e, t = null) {
                    this.set("bidPreview", e), this.set("bidPreviewTicketType", t)
                },
                setFreePassSelected(e) {
                    this.set("freePassSelected", e)
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(93)) && a.__esModule ? a : {
                    default: a
                },
                o = n(9);
            const r = s.Ember.Object.extend({
                chromaId: s.Ember.computed.alias("iconColorId"),
                logoId: s.Ember.computed.alias("iconId"),
                logoColorId: s.Ember.computed.alias("iconColorId"),
                rosterOwnedLogos: s.Ember.computed.alias("availableLogos"),
                captainId: s.Ember.computed.alias("captainSummonerId"),
                isNotRegistered: s.Ember.computed.not("isRegistered"),
                requiresBuyin: s.Ember.computed.or("isNotRegistered", "isEliminated"),
                captain: s.Ember.computed("members", "members.@each.summonerId", "captainId", (function() {
                    return this.getMemberById(this.get("captainId"))
                })),
                localPlayerMember: s.Ember.computed("members", "members.@each.summonerId", "root.localPlayer.summonerId", (function() {
                    return this.getMemberById(this.get("root.localPlayer.summonerId"))
                })),
                isRosterFull: s.Ember.computed("members.[]", "members.@each.state", "root.tournament.rosterSize", (function() {
                    const e = this.get("root.tournament.rosterSize"),
                        t = this.get("members") || [];
                    let n = 0;
                    return t.forEach((e => {
                        e.state !== o.RosterMemberState.PENDING && e.state !== o.RosterMemberState.DECLINED && n++
                    })), n >= e
                })),
                aggregatedWithdrawVotes: s.Ember.computed("withdraw.voteWithdrawMembers", "withdraw.declineWithdrawMembers", "withdraw.voteWithdrawMembers.[]", "withdraw.declineWithdrawMembers.[]", "members.length", (function() {
                    const e = this.get("withdraw.voteWithdrawMembers") || [],
                        t = this.get("withdraw.declineWithdrawMembers") || [],
                        n = this.get("members.length") || 0,
                        a = [];
                    if (e.length > 0)
                        for (let t = 0; t < e.length; t++) a.push("yes");
                    if (t.length > 0)
                        for (let e = 0; e < t.length; e++) a.push("no");
                    if (a.length < n) {
                        const e = n - a.length;
                        for (let t = 0; t < e; t++) a.push("wait")
                    }
                    return a
                })),
                hasVoted(e) {
                    const t = this.get("withdraw.voteWithdrawMembers") || [],
                        n = this.get("withdraw.declineWithdrawMembers") || [];
                    return !!t.includes(e) || !!n.includes(e)
                },
                getMemberById(e) {
                    return this.get("members").find((t => t.get("summonerId") === e))
                },
                isWithdrawVoteInProgress() {
                    const e = this.get("withdraw.voteWithdrawMembers") || [],
                        t = this.get("withdraw.declineWithdrawMembers") || [];
                    return e && e.length > 0 || t && t.length > 0
                },
                isWithdrawVoteInitiator(e) {
                    const t = this.get("withdraw.initVoteMember") || -1;
                    return String(t) === String(e)
                }
            });
            r.getObjectBindingTypes = () => ({
                "": r,
                "members[]": i.default
            }), e.exports = r
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = n(9),
                o = (a = n(94)) && a.__esModule ? a : {
                    default: a
                };
            e.exports = o.default.extend({
                isEliminated: s.Ember.computed.alias("root.localPlayer.roster.isEliminated"),
                isLocalPlayer: s.Ember.computed("root.localPlayer.summonerId", "summonerId", (function() {
                    return this.get("root.localPlayer.summonerId") === this.get("summonerId")
                })),
                isRosterCaptain: s.Ember.computed("root.roster.captainId", "summonerId", (function() {
                    return this.get("root.roster.captainId") === this.get("summonerId")
                })),
                hasMetTicketRequirement: s.Ember.computed("currentBuyin", "root.tournament.entryFee", (function() {
                    return this.get("currentBuyin") >= this.get("root.tournament.entryFee")
                })),
                isReady: s.Ember.computed.equal("state", i.RosterMemberState.READY),
                isPending: s.Ember.computed.equal("state", i.RosterMemberState.PENDING),
                isDeclined: s.Ember.computed.equal("state", i.RosterMemberState.DECLINED),
                isFreeAgentInviteType: s.Ember.computed.equal("inviteType", i.InviteType.FREE_AGENT),
                isFriendInviteType: s.Ember.computed.equal("inviteType", i.InviteType.FRIEND),
                isSuggestInviteType: s.Ember.computed.equal("inviteType", i.InviteType.SUGGEST),
                isNoneInviteType: s.Ember.computed.equal("inviteType", i.InviteType.NONE)
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            const s = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                boundProperties: {
                    summonerData: {
                        path: "/lol-summoner/v1/summoners/{{summonerId}}",
                        default: {
                            displayName: "",
                            puuid: ""
                        }
                    },
                    profileIconData: {
                        path: "/lol-game-data/assets/v1/profile-icons.json",
                        default: []
                    },
                    friendData: {
                        path: "/lol-chat/v1/friends/{{summonerId}}"
                    }
                }
            });
            e.exports = a.Ember.Object.extend(s, {
                chatParticipants: a.Ember.computed.alias("root.localPlayer.chatParticipants"),
                displayName: a.Ember.computed.alias("summonerData.displayName"),
                puuid: a.Ember.computed.alias("summonerData.puuid"),
                gameName: a.Ember.computed.alias("summonerData.gameName"),
                tagLine: a.Ember.computed.alias("summonerData.tagLine"),
                summonerIcon: a.Ember.computed.alias("summonerData.profileIconId"),
                friendIcon: a.Ember.computed.alias("friendData.icon"),
                chatRosterIconId: a.Ember.computed("summonerId", "chatParticipants", "chatParticipants.[]", "chatParticipants.@each.{id,icon}", (function() {
                    const e = this.get("summonerId"),
                        t = this.get("chatParticipants");
                    if (t && t.length) {
                        const n = t.find((t => t.summonerId === e));
                        if (n) return n.icon
                    }
                    return null
                })),
                summonerIconPath: a.Ember.computed("summonerIcon", "friendIcon", "chatRosterIconId", (function() {
                    let e = this._getProfileIconPath(this.get("chatRosterIconId"));
                    return e || (e = this._getProfileIconPath(this.get("friendIcon"))), e || (e = this._getProfileIconPath(this.get("summonerIcon"))), e
                })),
                _getProfileIconPath(e) {
                    if (!Number.isInteger(e) || -1 === e) return "";
                    const t = this.get("profileIconData");
                    if (!t) return "";
                    const n = e => t.find((t => t.id === e)),
                        a = n(e) || n(0);
                    return a ? a.iconPath : ""
                },
                isFriend: a.Ember.computed.bool("friendData"),
                availability: a.Ember.computed.alias("friendData.availability")
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = r(n(96)),
                i = r(n(97)),
                o = n(9);

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const l = a.Ember.Object.extend({
                losersBracketSize: a.Ember.computed("size", (function() {
                    return .5 * this.get("size")
                })),
                totalRounds: a.Ember.computed("size", (function() {
                    const e = Math.max(this.get("size"), 0),
                        t = Math.log2(e);
                    return t - Math.trunc(t) != 0 && a.logger.warning("invalid bracket size, expected power of 2", e), Math.floor(t)
                })),
                currentRound: a.Ember.computed("matches", "matches.@each.status", "totalRounds", (function() {
                    const e = this.get("matches") || [];
                    let t = this.get("totalRounds");
                    return e.forEach((e => {
                        1 === e.get("highestPossiblePosition") && e.get("status") !== o.MatchStatus.COMPLETED && e.get("round") < t && (t = e.get("round"))
                    })), t
                })),
                currentLoserRound: a.Ember.computed("matches", "matches.@each.status", "totalRounds", "size", (function() {
                    const e = this.get("matches") || [];
                    let t = this.get("totalRounds");
                    return e.forEach((e => {
                        1 !== e.get("highestPossiblePosition") && e.get("status") !== o.MatchStatus.COMPLETED && e.get("round") < t && (t = e.get("round"))
                    })), t
                })),
                isRosterInWinners(e) {
                    const t = this.get("matches") || [];
                    for (let n = 0; n < t.length; n++) {
                        const a = t[n];
                        if (this._matchContainsRoster(a, e) && 1 !== a.highestPossiblePosition) return !1
                    }
                    return !0
                },
                isRosterInLosers(e) {
                    const t = this.get("matches") || [];
                    for (let n = 0; n < t.length; n++) {
                        const a = t[n];
                        if (this._matchContainsRoster(a, e) && 1 !== a.highestPossiblePosition) return !0
                    }
                    return !1
                },
                isRosterInLosersBracketContainer(e) {
                    const t = this.get("matches") || [],
                        n = this.get("size");
                    for (let a = 0; a < t.length; a++) {
                        const s = t[a];
                        if (this._matchContainsRoster(s, e) && 3 === s.highestPossiblePosition && 4 === s.lowestPossiblePosition && n > 4) return !1
                    }
                    return this.isRosterInLosers(e)
                },
                _matchContainsRoster: (e, t) => !!(e && e.rosterId1 && e.rosterId2 && t) && (e.rosterId1 === parseInt(t) || e.rosterId2 === parseInt(t)),
                calculateBracketProgressForRoster(e) {
                    const t = this.get("matches");
                    return {
                        latestCompletedMatch: this._findLatestMatchWithStatusForRoster(t, e, o.MatchStatus.COMPLETED),
                        latestUpcomingMatch: this._findLatestMatchWithStatusForRoster(t, e, o.MatchStatus.UPCOMING)
                    }
                },
                _findLatestMatchWithStatusForRoster(e, t, n) {
                    let a, s = 0;
                    for (let i = 0; i < e.length; i++)(String(e[i].rosterId1) === String(t) || String(e[i].rosterId2) === String(t)) && e[i].round >= s && e[i].status === n && (a = e[i], s = e[i].round);
                    return a
                },
                cloneBracketData() {
                    const e = a.Ember.copy(this);
                    return e.matches = a.Util.emberDeepCopyArray(this.get("matches"), s.default), e.rosters = a.Util.emberDeepCopyArray(this.get("rosters"), i.default), l.create(e)
                },
                findCurrentMatch(e) {
                    const t = this.get("matches") || [];
                    for (let n = 0; n < t.length; n++) {
                        const s = t[n],
                            i = a.Util.compareRosterIds(s.get("rosterId1"), e) || a.Util.compareRosterIds(s.get("rosterId2"), e),
                            r = s.get("status") === o.MatchStatus.COMPLETED;
                        if (i && !r) return s
                    }
                    return null
                },
                findLastCompletedMatch(e) {
                    const t = this.get("matches") || [];
                    let n = null;
                    for (let s = 0; s < t.length; s++) {
                        const i = t[s],
                            r = a.Util.compareRosterIds(i.get("rosterId1"), e) || a.Util.compareRosterIds(i.get("rosterId2"), e),
                            l = i.get("status") === o.MatchStatus.COMPLETED;
                        r && l && (!n || n.get("round") < i.get("round")) && (n = i)
                    }
                    return n
                }
            });
            l.getObjectBindingTypes = e => {
                if (e) {
                    const t = {};
                    return t[`${e}`] = l, t[`${e}.matches[]`] = s.default, t[`${e}.rosters[]`] = i.default, t
                }
                return {
                    "": l,
                    "matches[]": s.default,
                    "rosters[]": i.default
                }
            }, e.exports = l
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9);
            const i = a.Ember.Object.extend({
                hasError: a.Ember.computed("failRosterStatus", (function() {
                    return this.get("failRosterStatus") > 0
                })),
                isLosersBracket: a.Ember.computed("highestPossiblePosition", (function() {
                    return 1 !== this.get("highestPossiblePosition")
                })),
                roster1: a.Ember.computed("root.bracket.rosters.[]", "rosterId1", (function() {
                    const e = this.get("rosterId1");
                    return this._getRoster(e)
                })),
                roster2: a.Ember.computed("root.bracket.rosters.[]", "rosterId2", (function() {
                    const e = this.get("rosterId2");
                    return this._getRoster(e)
                })),
                hasWinner: a.Ember.computed("winnerId", "status", (function() {
                    const e = this.get("status"),
                        t = this.get("winnerId");
                    return e === s.MatchStatus.COMPLETED && t !== s.INVALID_ROSTER_ID && t !== s.MATCH_ROSTER_BYE_ID
                })),
                isFinals: a.Ember.computed("root.bracket.totalRounds", "round", (function() {
                    return this.get("round") === this.get("root.bracket.totalRounds")
                })),
                isBye: a.Ember.computed("root.bracket.rosters.[]", "rosterId1", "rosterId2", "hasError", (function() {
                    return !(this.get("rosterId1") && this.get("rosterId2") || this.get("hasError"))
                })),
                hasRosterId(e) {
                    const t = this.get("rosterId1"),
                        n = this.get("rosterId2");
                    return a.Util.compareRosterIds(e, t) || a.Util.compareRosterIds(e, n)
                },
                hasValidRoster() {
                    return this.get("rosterId1") > s.MATCH_ROSTER_BYE_ID || this.get("rosterId2") > s.MATCH_ROSTER_BYE_ID
                },
                _getRoster(e) {
                    const t = this.get("root.bracket.rosters");
                    if (!t) return null;
                    const n = t.find((t => t.rosterId === e));
                    return n || null
                }
            });
            i.reopenClass({
                isFirstRoundLoss: (e, t) => e && !e.get("isLosersBracket") && 1 === e.get("round") && t && t.get("isLosersBracket"),
                isSecondRoundDoubleLoss: (e, t) => e && e.get("isLosersBracket") && 2 === e.get("round") && t && t.get("highestPossiblePosition") >= 13
            }), e.exports = i
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            e.exports = a.Ember.Object.extend({
                id: a.Ember.computed.alias("rosterId"),
                iconId: a.Ember.computed.alias("logo"),
                chromaId: a.Ember.computed.alias("logoColor"),
                logoId: a.Ember.computed.alias("logo"),
                logoColorId: a.Ember.computed.alias("logoColor")
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function(e, t, n, a, s, o) {
                ! function(e, t, n) {
                    if (!e || !t || !n) throw new Error("calling errorWrapServiceCall with invalid or missing arguments")
                }(...arguments);
                let d = e;
                if (s && s > 0) {
                    const t = r(s);
                    d = Promise.race([e, t])
                }
                return d.then((e => e)).catch((e => {
                    if (e === i) return n.sendEvent("ClashError", {
                        errorMsg: i,
                        url: o
                    }), c(a, t, "front end timed out waiting for service response", !0, !0);
                    {
                        let s = e.text || e.message;
                        if (e.text) {
                            s = JSON.parse(e.text).message;
                            try {
                                const e = JSON.parse(s);
                                e.message && (s = JSON.parse(e.message))
                            } catch (e) {}
                        }
                        n.sendEvent("ClashError", {
                            errorMsg: s,
                            url: o
                        });
                        const i = t.exists(l(s, !1));
                        return c(i ? s : a, t, `error returned from service: ${s}`, !1, !i)
                    }
                }))
            };
            var a = n(1);
            const s = n(16),
                i = "timeout-promise-reached",
                o = 2e3;

            function r(e) {
                return new Promise(((t, n) => {
                    a.Ember.run.later((() => {
                        n(i)
                    }), e)
                }))
            }

            function l(e, t) {
                return `clash_error_${e}${t?"_timeout":""}_description`
            }

            function c(e, t, n, i, c) {
                return a.logger.warning(`Clash service error, type=${e}: ${n}`),
                    function(e, t, n, i) {
                        const c = i ? (0, a.dataBinding)("/lol-service-status/v1/lcu-status").get() : Promise.resolve(),
                            d = r(o),
                            m = n ? t.get("clash_error_timeout_title_prefix") : t.get("clash_error_error_title_prefix");
                        return Promise.race([c, d]).then((o => {
                            const r = o ? t.get("clash_error_service_status_link") : "",
                                c = o ? o.humanReadableUrl : "",
                                d = s({
                                    title: m,
                                    description: t.get(l(e, n)) + (i ? " " + t.get("clash_error_tail_message") : ""),
                                    serviceStatusText: r,
                                    serviceStatusUrl: c
                                }),
                                u = a.Util.createDomNode(d);
                            a.ModalManager.add({
                                type: "DialogAlert",
                                data: {
                                    contents: u,
                                    okText: t.get("lib_ui_dialog_alert_ok")
                                }
                            }).okPromise.then((() => {}))
                        }))
                    }(e, t, i, c).then((() => Promise.reject()))
            }
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(100), e.exports = a.Ember.Component.extend({
                layout: n(101),
                closeCallback: null,
                actions: {
                    close() {
                        const e = this.get("closeCallback");
                        e && e()
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "PTe5CiSH",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-start-modal\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-start-modal\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-start-modal\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-start-modal"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-start-modal-close-button"],["flush-element"],["text","\\n    "],["append",["helper",["generic-button"],null,[["baseImgPath","overImgPath","downImgPath","onClickSound","onClick"],["/fe/lol-clash/assets/images/buttons/icon-x.png","/fe/lol-clash/assets/images/buttons/icon-x-over.png","/fe/lol-clash/assets/images/buttons/icon-x-down.png","generic-click-small",["helper",["action"],[["get",[null]],"close"],null]]]],false],["text","\\n  "],["close-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-start-modal-header-logo"],["static-attr","src","/fe/lol-clash/assets/images/clash-start-modal/logo.png"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-start-modal-header"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-start-modal-header-decoration flipped"],["static-attr","src","/fe/lol-clash/assets/images/clash-start-modal/flair.svg"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-start-modal-header-text"],["flush-element"],["append",["unknown",["tra","clash_start_modal_header_text"]],false],["close-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-start-modal-header-decoration"],["static-attr","src","/fe/lol-clash/assets/images/clash-start-modal/flair.svg"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-start-modal-subheader-text"],["flush-element"],["append",["unknown",["tra","clash_start_modal_subheader_text"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-start-modal-main-content"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-start-modal-section"],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","clash-start-modal-section-frame"],["static-attr","style","background-image:url(/fe/lol-clash/assets/images/clash-start-modal/img0.png)"],["static-attr","src","/fe/lol-clash/assets/images/clash-start-modal/frame.png"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-start-modal-section-text"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-start-modal-section-title"],["flush-element"],["append",["unknown",["tra","clash_start_modal_col0_title"]],false],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-start-modal-section-description"],["flush-element"],["append",["unknown",["tra","clash_start_modal_col0_description"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-start-modal-section"],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","clash-start-modal-section-frame"],["static-attr","style","background-image:url(/fe/lol-clash/assets/images/clash-start-modal/img1.png)"],["static-attr","src","/fe/lol-clash/assets/images/clash-start-modal/frame.png"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-start-modal-section-text"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-start-modal-section-title"],["flush-element"],["append",["unknown",["tra","clash_start_modal_col1_title"]],false],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-start-modal-section-description"],["flush-element"],["append",["unknown",["tra","clash_start_modal_col1_description"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-start-modal-section"],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","clash-start-modal-section-frame"],["static-attr","style","background-image:url(/fe/lol-clash/assets/images/clash-start-modal/img2.png)"],["static-attr","src","/fe/lol-clash/assets/images/clash-start-modal/frame.png"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-start-modal-section-text"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-start-modal-section-title"],["flush-element"],["append",["unknown",["tra","clash_start_modal_col2_title"]],false],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-start-modal-section-description"],["flush-element"],["append",["unknown",["tra","clash_start_modal_col2_description"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(45)) && a.__esModule ? a : {
                    default: a
                };
            e.exports = s.Ember.Service.extend({
                onInit: s.Ember.on("init", (function() {
                    s.logger.trace("Initializing clash telemetry service"), this.set("clashTelemetry", new i.default)
                })),
                sendEvent(e, t = {}) {
                    this.get("clashTelemetry").sendEvent(e, t)
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            let s = 1;

            function i(e, t, n) {
                return e && "function" == typeof e ? !t || t < 0 ? (a.logger.error("clash-timer-management-service -- invalid duration", t), !1) : !(!n || !n.tournamentId) || (a.logger.error("clash-timer-management-service -- conditions must have at least tournamentId", n), !1) : (a.logger.error("clash-timer-management-service -- invalid callback", e), !1)
            }

            function o(e, t, n) {
                if (!e || !n) return !1;
                const a = n.phases.find((t => t.id === e.phaseId));
                if (e.phaseId && !a) return !1;
                let s = t,
                    i = n;
                if (e.phaseId && (s = t.find((t => t.id === e.phaseId)), i = a), e.properties && e.properties.length)
                    for (const t of e.properties)
                        if (s[t] !== i[t]) return !1;
                return !0
            }
            e.exports = a.Ember.Service.extend({
                init() {
                    this._super(...arguments), this._binding = a.dataBinding.bindTo((0, a.getProvider)().getSocket()), this._timers = [], this._onTournamentChanged = this._onTournamentChanged.bind(this)
                },
                setTimeout(e, t, n) {
                    if (i(e, t, n)) {
                        var a = this._addTimer(o, n),
                            s = setTimeout(this._clearWithCallback(e, a), t),
                            o = () => clearTimeout(s);
                        return a
                    }
                },
                setInterval(e, t, n) {
                    if (!i(e, t, n)) return;
                    const a = setInterval(e, t);
                    return this._addTimer((() => clearInterval(a)), n)
                },
                emberRunLater(e, t, n) {
                    if (i(e, t, n)) {
                        var s = this._addTimer(r, n),
                            o = a.Ember.run.later(this._clearWithCallback(e, s), t),
                            r = () => a.Ember.run.cancel(o);
                        return s
                    }
                },
                emberRunAtInterval(e, t, n) {
                    if (!i(e, t, n)) return;
                    let s = null;
                    const o = () => {
                        e(), s = a.Ember.run.later(o, t)
                    };
                    return a.Ember.run.later(o, t), this._addTimer((() => a.Ember.run.cancel(s)), n)
                },
                cancelTimer(e) {
                    a.logger.trace("clash-timer-management-service -- cancelTimer, id", e);
                    const t = this._timers.find((t => t.timerId === e));
                    this._cancelTimerInternal(t)
                },
                _addTimer(e, t) {
                    const n = s++;
                    return this._timers.push({
                        clearTimer: e,
                        conditions: t,
                        timerId: n,
                        tournamentRecevied: !1
                    }), this._binding.addObserver(`/lol-clash/v1/tournament/${t.tournamentId}`, this._onTournamentChanged), a.logger.trace("clash-timer-management-service -- addTimer, id", n), n
                },
                _cancelTimerInternal(e) {
                    e.clearTimer(), this._binding.removeObserver(`/lol-clash/v1/tournament/${e.conditions.tournamentId}`, this._onTournamentChanged)
                },
                _clearWithCallback(e, t) {
                    return () => {
                        e(), this.cancelTimer(t)
                    }
                },
                _onTournamentChanged(e) {
                    for (const t of this._timers) {
                        if (!e || t.conditions.tournamentId !== e.id) return;
                        t.tournamentRecevied || (t.tournamentRecevied = !0, t.tournament = e), o(t.conditions, t.tournament, e) || (a.logger.trace("clash-timer-management-service -- conditions no longer met for timer:", {
                            timerId: t.timerId,
                            timer: t
                        }), this.cancelTimer(t.timerId))
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            e.exports = a.Ember.Service.extend({
                onInit: a.Ember.on("init", (function() {
                    this._uxSettingsListener = this._uxSettingsObserver.bind(this), a.UXSettings.addObserver(this._uxSettingsListener)
                })),
                onWillDestroy: a.Ember.on("willDestroy", (function() {
                    a.UXSettings.removeObserver(this._uxSettingsListener), this._uxSettingsListener = null
                })),
                _uxSettingsObserver: function(e) {
                    this.set("ux", e)
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(106), e.exports = a.Ember.Component.extend({
                classNames: ["clash-lol-pending-indicator"],
                layout: n(107),
                width: 16,
                dotHeight: 4,
                dotWidth: 4
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "r1q5B8Tv",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\pending-indicator\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\pending-indicator\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\pending-indicator\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-lol-pending-loader"],["dynamic-attr","style",["concat",["width:",["unknown",["width"]],"px"]]],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-lol-pending-loader-segment"],["dynamic-attr","style",["concat",["height:",["unknown",["dotHeight"]],"px;width:",["unknown",["dotWidth"]],"px"]]],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-lol-pending-loader-segment"],["dynamic-attr","style",["concat",["height:",["unknown",["dotHeight"]],"px;width:",["unknown",["dotWidth"]],"px"]]],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-lol-pending-loader-segment"],["dynamic-attr","style",["concat",["height:",["unknown",["dotHeight"]],"px;width:",["unknown",["dotWidth"]],"px"]]],["flush-element"],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9);
            n(109), e.exports = a.Ember.Component.extend({
                classNames: ["clash-tier-placement-visual"],
                layout: n(110),
                tier: s.INVALID_TIER,
                tierDisplay: a.Ember.computed("tier", (function() {
                    const e = this.get("tier");
                    if (!a.Util.isNumberOk(e) || e < s.MIN_TIER || e >= s.ROMAN_NUMERALS.length) return "";
                    const t = s.ROMAN_NUMERALS[e];
                    return this.get("tra").formatString("clash_roster_tier_display", {
                        tier: t
                    })
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "7ckhET9l",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tier-placement\\\\tier-placement-visual\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tier-placement\\\\tier-placement-visual\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tier-placement\\\\tier-placement-visual\\\\index.js\\" "],["text","\\n"],["append",["unknown",["tierDisplay"]],false],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(112), e.exports = a.Ember.Component.extend({
                classNames: ["clash-pip-counter"],
                classNameBindings: ["hasPips:has-pips"],
                layout: n(113),
                pipCount: 0,
                hasPips: a.Ember.computed.gt("pipCount", 0)
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "2769yetr",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\pip-counter\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\pip-counter\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\pip-counter\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-pip-counter-number"],["flush-element"],["append",["unknown",["pipCount"]],false],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = r(n(115)),
                i = r(n(10));
            n(116);
            var o = n(9);

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-ticket-display"],
                classNameBindings: ["isLocalPlayer:ticket-display-local:ticket-display-remote"],
                layout: n(117),
                clientSettings: a.Ember.inject.service("client-settings"),
                clashService: a.Ember.inject.service("clash"),
                premiumTicketsEnabled: a.Ember.computed.alias("clashService.premiumTicketsEnabled"),
                tournament: null,
                selectorTarget: null,
                roster: null,
                rosterMember: null,
                notificationTargetElement: null,
                isBuyinRequired: !1,
                isBuyinEnabled: !1,
                showTicketOffers: !1,
                availableTickets: 0,
                forceGold: !1,
                isInModal: !1,
                isTicketSelectorOpen: !1,
                displayedBuyin: 0,
                displayedTicketType: null,
                isLocalPlayer: a.Ember.computed.alias("rosterMember.isLocalPlayer"),
                isLockedIn: a.Ember.computed.alias("rosterMember.isReady"),
                buyInOptions: a.Ember.computed.alias("tournament.buyInOptions"),
                entryFee: a.Ember.computed.alias("tournament.entryFee"),
                isNotLockedIn: a.Ember.computed.not("isLockedIn"),
                canSelectTicket: a.Ember.computed.and("isBuyinEnabled", "isNotLockedIn"),
                onDidInsertElement: a.Ember.on("didInsertElement", (function() {
                    a.Util.waitForElement(this.element, ".clash-ticket-display-ticket-selector").then((e => {
                        this.set("notificationTargetElement", e)
                    }))
                })),
                hasMetTicketRequirement: a.Ember.computed("displayedBuyin", "tournament.entryFee", (function() {
                    return this.get("displayedBuyin") >= this.get("tournament.entryFee")
                })),
                isTicketCountDisplayVisible: a.Ember.computed("hasMetTicketRequirement", "displayedBuyin", (function() {
                    return this.get("hasMetTicketRequirement") && this.get("displayedBuyin") > 1
                })),
                hasNoAcceptedOffer: a.Ember.computed("rosterMember.incomingOffers.[]", "rosterMember.incomingOffers.@each.isAccepted", (function() {
                    return !(this.get("rosterMember.incomingOffers") || []).find((e => e.isAccepted))
                })),
                localBtnBaseImgPath: a.Ember.computed("hasMetTicketRequirement", "displayedBuyin", "displayedTicketType", "entryFee", "canSelectTicket", "premiumTicketsEnabled", (function() {
                    const e = this.get("hasMetTicketRequirement"),
                        t = this.get("displayedBuyin"),
                        n = this.get("displayedTicketType") || o.TicketType.BASIC,
                        a = this.get("entryFee"),
                        s = this.get("canSelectTicket"),
                        i = this.get("premiumTicketsEnabled");
                    if (e && t > 0 || 0 === Number(a)) {
                        let e = i ? n.toLowerCase() : t;
                        return 0 === t && n === o.TicketType.BASIC && (e = t), `/fe/lol-clash/assets/images/tickets/ticket-local-${e}.png`
                    }
                    return s ? "/fe/lol-clash/assets/images/tickets/ticket-local-unselected.png" : "/fe/lol-clash/assets/images/tickets/ticket-local-unselected-disabled.png"
                })),
                overBtnBaseImgPath: a.Ember.computed("displayedBuyin", "entryFee", (function() {
                    const e = this.get("displayedBuyin"),
                        t = this.get("entryFee");
                    return 0 === Number(e) && 0 === Number(t) ? "/fe/lol-clash/assets/images/tickets/ticket-local-0-over.png" : "/fe/lol-clash/assets/images/tickets/ticket-local-over.png"
                })),
                downBtnBaseImgPath: a.Ember.computed("displayedBuyin", "entryFee", (function() {
                    const e = this.get("displayedBuyin"),
                        t = this.get("entryFee");
                    return 0 === Number(e) && 0 === Number(t) ? "/fe/lol-clash/assets/images/tickets/ticket-local-0-down.png" : "/fe/lol-clash/assets/images/tickets/ticket-local-down.png"
                })),
                localBtnDisabledStyle: a.Ember.computed("forceGold", (function() {
                    return this.get("forceGold") ? "" : "-webkit-filter:grayscale(100%)"
                })),
                localBtnText: a.Ember.computed("displayedBuyin", "hasMetTicketRequirement", "premiumTicketsEnabled", "tournament.entryFee", (function() {
                    const e = this.get("displayedBuyin"),
                        t = this.get("hasMetTicketRequirement"),
                        n = this.get("premiumTicketsEnabled"),
                        a = this.get("tournament.entryFee");
                    return t ? n ? a > 0 ? "+" : "" : e : "+"
                })),
                localBtnUpText: a.Ember.computed("displayedBuyin", "hasMetTicketRequirement", (function() {
                    return this.get("hasMetTicketRequirement") ? "" : "+"
                })),
                ticketState: a.Ember.computed("hasMetTicketRequirement", "isLockedIn", "forceGold", (function() {
                    if (this.get("forceGold")) return "selected";
                    if (this.get("isLockedIn")) return "lockedin";
                    return this.get("hasMetTicketRequirement") ? "selected" : "unselected"
                })),
                availableTicketsChanged: a.Ember.computed("availableTickets", "availableTickets.BASIC", "availableTickets.PREMIUM", (function() {
                    const e = this.$(".clash-ticket-display-ticket-selector");
                    if (!e.length) return void a.logger.error("unable to find ticket-selector container element");
                    const t = e.get(0);
                    s.default.isTarget(t) && this._createTicketSelector(t)
                })),
                tooltipTitle: a.Ember.computed("rosterMember.isReady", "roster.isRegistered", "isBuyinRequired", "roster.isActiveInCurrentPhase", (function() {
                    const e = this.get("rosterMember.isReady"),
                        t = this.get("roster.isActiveInCurrentPhase"),
                        n = this.get("tournament.state");
                    if (e && !t && n === i.default.Tournament.LOCK_IN) return this.set("tooltipDescription", this.get("tra.clash_ticket_display_member_lockedin_description")), this.get("tra.clash_ticket_display_member_lockedin_title");
                    const a = this.get("isBuyinRequired");
                    if (!t && !a) return this.set("tooltipDescription", this.get("tra.clash_ticket_display_winner_description")), this.get("tra.clash_ticket_display_winner_title");
                    return this.get("roster.isRegistered") && !t && a ? (this.set("tooltipDescription", this.get("tra.clash_ticket_display_buyback_description")), this.get("tra.clash_ticket_display_buyback_title")) : (this.set("tooltipDescription", ""), "")
                })),
                tooltipDescription: "",
                _setTicket(e) {
                    this.attrs.onTicketSelected && this.attrs.onTicketSelected(e)
                },
                actions: {
                    openTicketSelector() {
                        this.sendAction("openTicketSelector")
                    }
                },
                initTicketAnims: a.Ember.on("init", (function() {
                    this._ticketAnims = []
                })),
                forceInitStroke: a.Ember.on("didInsertElement", (function() {
                    const e = this.get("isLocalPlayer"),
                        t = this.get("isBuyinEnabled");
                    e && t && a.Ember.run.later((() => this.set("forceInitAnims", !0)), 100)
                })),
                onTicketChanged: a.Ember.on("didInsertElement", a.Ember.computed("displayedBuyin", "displayedTicketType", "hasMetTicketRequirement", "isLocalPlayer", "forceInitAnims", "isTicketSelectorOpen", "roster.isEliminated", (function() {
                    if (this.get("isTicketSelectorOpen")) return;
                    const e = this.get("displayedBuyin"),
                        t = this.get("displayedTicketType"),
                        n = this.get("lastDisplayedBuyin"),
                        s = this.get("lastDisplayedTicketType");
                    if (e === n && t === s && n > 0) return;
                    this._destroyTicketAnims(), this._clearAnimTimer();
                    const i = this.get("isLocalPlayer"),
                        o = this.get("hasMetTicketRequirement");
                    if (i && a.logger.trace("onTicketChanged -- hasMetTicketRequirement", o), o && void 0 !== n && e > 0) {
                        if (i) {
                            const t = 1 === e || 5 === e ? 400 : 0;
                            a.Ember.run.later((() => a.AudioManager.playAudio("minimum-tickets-bid")), t)
                        }
                        if (!this.get("clientSettings.ux.parallelVideoStreamingEnabled")) return;
                        const t = this.$(".clash-ticket-display-video");
                        if (!t || !t.length) return;
                        const n = t.get(0);
                        n && n.play()
                    } else if (i && this.get("canSelectTicket") && this.get("entryFee")) {
                        const e = this.$(".clash-ticket-display-ticket-selector"),
                            t = "/fe/lol-clash/assets/animations/lottie/roster/animatedStroke/data.json",
                            n = {
                                imagesPath: ["assets", 0, "u"]
                            },
                            s = {
                                imagesPath: "/fe/lol-clash/assets/animations/lottie/roster/animatedStroke/images/"
                            },
                            i = {
                                playImmediately: !0,
                                fudgeSizeX: -2,
                                fudgeSizeY: -2
                            };
                        a.LottieAnim.createLottieAnim(e, t, n, s, {
                            loop: !0
                        }, i).then((e => this._ticketAnims.push(e))).catch((() => {}))
                    }
                    this.set("lastDisplayedBuyin", e), this.set("lastDisplayedTicketType", t)
                }))),
                onLockedIn: a.Ember.computed("isLockedIn", (function() {
                    this.get("isLockedIn") && (this._destroyTicketAnims(), this._clearAnimTimer())
                })),
                destroyAnims: a.Ember.on("willDestroyElement", (function() {
                    this._destroyTicketAnims(), this._clearAnimTimer()
                })),
                _destroyTicketAnims() {
                    for (const e of this._ticketAnims) a.logger.trace("ticket-display -- cleaning up anim:", e.name), e.cleanup();
                    this._ticketAnims = []
                },
                _clearAnimTimer() {
                    this.get("isAnimatingTimer") && (this.set("isAnimatingTimer", null), this.set("isAnimating", !1), a.Ember.run.cancel("isAnimatingTimer"))
                }
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            let s = null,
                i = null,
                o = null;
            class r {
                static create(e, t = {
                    items: []
                }) {
                    s && r.destroy(), t.target = e, i = e;
                    for (const e of t.items) e._internalCallback = () => {
                        e.callback && e.callback(...arguments), r.destroy()
                    };
                    o = () => {
                        a.Ember.run.next(r.destroy)
                    };
                    const n = () => {
                        document.removeEventListener("mouseup", n), document.addEventListener("mouseup", o)
                    };
                    document.addEventListener("mouseup", n), s = a.componentFactory.create("SelectorPaletteComponent", t);
                    const l = a.componentFactory.getDOMNode(s);
                    a.LayerManager.addLayer(l)
                }
                static isTarget(e) {
                    return null !== s && i === e
                }
                static destroy() {
                    s && (a.LayerManager.removeLayer(a.componentFactory.getDOMNode(s)), document.removeEventListener("mouseup", o), a.Util.destroyEmberApp(s), s = null, o = null)
                }
            }
            t.default = r
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "cmnEbiV+",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-display\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-display\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-display\\\\index.js\\" "],["text","\\n"],["append",["unknown",["tutorialObserver"]],false],["text","\\n"],["append",["unknown",["availableTicketsChanged"]],false],["text","\\n"],["append",["unknown",["onTicketChanged"]],false],["text","\\n"],["append",["unknown",["onLockedIn"]],false],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","clash-ticket-display-ticket-selector"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isLocalPlayer"]]],null,5,2],["text","\\n  "],["open-element","user-experience-perf-switch",[]],["flush-element"],["text","\\n    "],["open-element","lol-uikit-video",[]],["static-attr","class","clash-ticket-display-video uikit-video-center-in-parent"],["static-attr","type","intro"],["static-attr","fade-in","0"],["static-attr","fade-out","0"],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/animations/videos/roster/",["helper",["if"],[["get",["isLocalPlayer"]],"anteMagic_large","anteMagic_small"],null],".webm"]]],["static-attr","perf-flags","parallelVideoStreamingEnabled"],["static-attr","preload",""],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["append",["unknown",["displayedBuyin"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["append",["helper",["ticket-offer"],null,[["rosterId","rosterMember","tournament","showTicketOffers","forceGold","isBuyinEnabled","isRosterBeingViewed","notificationTargetElement"],[["get",["rosterId"]],["get",["rosterMember"]],["get",["tournament"]],["get",["showTicketOffers"]],["get",["forceGold"]],["get",["isBuyinEnabled"]],["get",["isRosterBeingViewed"]],["get",["notificationTargetElement"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","\\n"],["block",["unless"],[["get",["rosterMember","isPending"]]],null,1],["text","    \\n"],["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-ticket-display-ticket-count ctd-",["unknown",["ticketState"]]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["isTicketCountDisplayVisible"]]],null,0],["text","    "],["close-element"],["text","\\n\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n            "],["open-element","h6",[]],["flush-element"],["append",["unknown",["tooltipTitle"]],false],["close-element"],["text","\\n            "],["open-element","p",[]],["flush-element"],["append",["unknown",["tooltipDescription"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["bottom","system"]],3]],"locals":[]},{"statements":[["text","    \\n"],["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-ticket-display-ticket-count ctd-",["unknown",["ticketState"]]," ",["helper",["if"],[["get",["displayedBuyin"]],"","ctd-buyin-0"],null],["helper",["if"],[["get",["canSelectTicket"]],"","-disabled"],null]," ",["helper",["if"],[["get",["isAnimating"]],"is-animating"],null]]]],["flush-element"],["text","\\n      "],["append",["helper",["generic-button"],null,[["onClick","baseImgPath","overImgPath","downImgPath","disabledImgPath","disabledStyle","isEnabled","matchWidth","upText","overText","downText"],[["helper",["action"],[["get",[null]],"openTicketSelector"],null],["get",["localBtnBaseImgPath"]],["get",["overBtnBaseImgPath"]],["get",["downBtnBaseImgPath"]],["get",["localBtnBaseImgPath"]],["get",["localBtnDisabledStyle"]],["get",["canSelectTicket"]],false,["get",["localBtnUpText"]],["get",["localBtnText"]],["get",["localBtnText"]]]]],false],["text","\\n"],["block",["if"],[["get",["tooltipTitle"]]],null,4],["text","    "],["close-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","clash-ticket-offer-container-local"],["flush-element"],["text","\\n    "],["append",["helper",["ticket-offer"],null,[["rosterId","rosterMember","tournament","showTicketOffers","isBuyinEnabled","notificationTargetElement"],[["get",["rosterId"]],["get",["rosterMember"]],["get",["tournament"]],["get",["showTicketOffers"]],["get",["isBuyinEnabled"]],["get",["notificationTargetElement"]]]]],false],["text","\\n    "],["close-element"],["text","\\n\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(119)) && a.__esModule ? a : {
                    default: a
                };
            n(120);
            var o = n(9);
            let r = null;
            e.exports = s.Ember.Component.extend({
                layout: n(121),
                classNames: ["clash-ticket-offer"],
                rosterId: "",
                rosterMember: null,
                showTicketOffers: !1,
                notificationTargetElement: null,
                isRosterBeingViewed: !1,
                forceGold: !1,
                currentOffer: null,
                isCallInProgress: !1,
                clashService: s.Ember.inject.service("clash"),
                summonerService: s.Ember.inject.service("summoner"),
                tournament: s.Ember.computed.alias("clashService.tournament"),
                localPlayer: s.Ember.computed.alias("clashService.localPlayer"),
                localPlayerSummonerId: s.Ember.computed.alias("localPlayer.summonerId"),
                incomingOffers: s.Ember.computed.alias("rosterMember.incomingOffers"),
                isLocalPlayer: s.Ember.computed.alias("rosterMember.isLocalPlayer"),
                hasNoAcceptedOffer: s.Ember.computed.not("currentOffer.isAccepted"),
                isLockedIn: s.Ember.computed.alias("rosterMember.isReady"),
                entryFee: s.Ember.computed.alias("tournament.entryFee"),
                isNotCallInProgress: s.Ember.computed.not("isCallInProgress"),
                isRevokeButtonEnabled: s.Ember.computed.and("isNotCallInProgress", "hasNoAcceptedOffer"),
                setupFullpageModalListener: s.Ember.on("init", (function() {
                    this._onModalOpen = () => this._clearCurrentOffer(), this._onModalFullClose = () => this._selectNewCurrentOffer(), s.FullpageModalTracker.instance().addEventListener(s.FullpageModalTracker.Event.OPEN, this._onModalOpen), s.FullpageModalTracker.instance().addEventListener(s.FullpageModalTracker.Event.FULL_CLOSE, this._onModalFullClose)
                })),
                destroyFullpageModalListener: s.Ember.on("willDestroyElement", (function() {
                    s.FullpageModalTracker.instance().removeEventListener(s.FullpageModalTracker.Event.OPEN, this._onModalOpen), s.FullpageModalTracker.instance().removeEventListener(s.FullpageModalTracker.Event.FULL_CLOSE, this._onModalFullClose)
                })),
                clearOfferOnDestroy: s.Ember.on("willDestroyElement", (function() {
                    this._clearCurrentOffer()
                })),
                incomingOffersObserver: s.Ember.on("didInsertElement", s.Ember.computed("incomingOffers.[]", "incomingOffers.@each.isAccepted", "incomingOffers.@each.summonerId", "isCallInProgress", "isLocalPlayer", "localPlayerSummonerId", "tournament.state", (function() {
                    this._selectNewCurrentOffer()
                }))),
                showTicketOffersObserver: s.Ember.on("didInsertElement", s.Ember.computed("showTicketOffers", (function() {
                    this.get("showTicketOffers") && this._updateTooltip()
                }))),
                tooltipObserver: s.Ember.on("didInsertElement", s.Ember.computed("isLocalPlayer", "currentOffer", "tournament.entryFee", "localPlayerSummonerId", "localPlayer.hasEnoughTicketsForOffer", "localPlayer.hasMetTicketRequirement", "isOfferButtonEnabled", (function() {
                    this._updateTooltip()
                }))),
                isOfferButtonEnabled: s.Ember.computed("isNotCallInProgress", "hasNoAcceptedOffer", "localPlayer.hasEnoughTicketsForOffer", "rosterMember.currentBuyin", "currentOffer", "isBuyinEnabled", "entryFee", "isRosterBeingViewed", (function() {
                    return this.get("isNotCallInProgress") && this.get("hasNoAcceptedOffer") && this.get("localPlayer.hasEnoughTicketsForOffer") && !this.get("rosterMember.currentBuyin") && !this.get("currentOffer") && this.get("isBuyinEnabled") && this.get("entryFee") && !this.get("isRosterBeingViewed")
                })),
                isPendingOfferFromLocalPlayer: s.Ember.computed("isLocalPlayer", "currentOffer", (function() {
                    return !this.get("isLocalPlayer") && this.get("currentOffer") && !this.get("currentOffer.isAccepted")
                })),
                ticketBtnBaseImgPath: s.Ember.computed("isOfferButtonEnabled", "entryFee", "rosterMember.currentBuyin", "rosterMember.buyinType", (function() {
                    const e = this.get("isOfferButtonEnabled"),
                        t = this.get("entryFee"),
                        n = this.get("rosterMember.currentBuyin"),
                        a = this.get("rosterMember.buyinType");
                    return e || t || n ? n > 0 ? a === o.TicketType.PREMIUM ? "/fe/lol-clash/assets/images/tickets/ticket-remote-selected-premium.png" : "/fe/lol-clash/assets/images/tickets/ticket-remote-selected-basic.png" : "/fe/lol-clash/assets/images/tickets/ticket-remote-unselected.png" : "/fe/lol-clash/assets/images/tickets/ticket-remote-selected-0.png"
                })),
                ticketBtnOverImgPath: s.Ember.computed("isOfferButtonEnabled", (function() {
                    return "/fe/lol-clash/assets/images/tickets/ticket-remote-unselected-over.png"
                })),
                ticketBtnDisabledStyle: s.Ember.computed("isPendingOfferFromLocalPlayer", "isLockedIn", "forceGold", "isBuyinEnabled", (function() {
                    const e = this.get("isPendingOfferFromLocalPlayer"),
                        t = this.get("isLockedIn"),
                        n = this.get("isBuyinEnabled");
                    return e ? "opacity:0.5" : !t && n || this.get("forceGold") ? "" : "-webkit-filter:grayscale(100%)"
                })),
                _updateTooltip() {
                    const e = e => {
                            this.get("summonerService").getSummoner(e.summonerId).then((e => {
                                const t = s.playerNames.isUsingAlias ? e?.gameName : e?.displayName,
                                    n = this.get("tra").formatString("clash_ticket_offer_tooltip_local_player_gifted_ticket", {
                                        summonerName: t
                                    });
                                this._setTooltip([n], ".clash-ticket-offer-prize-img")
                            }))
                        },
                        t = this.get("localPlayer.hasEnoughTicketsForOffer"),
                        n = this.get("localPlayer.hasMetTicketRequirement");
                    if (this._setTooltip(), this._setTooltip([], ".clash-ticket-offer-button"), this.get("isRosterBeingViewed")) return;
                    const a = this.get("currentOffer");
                    if (this.get("isLocalPlayer")) a && a.isAccepted ? e(a) : this._setTooltip();
                    else if (a) {
                        if (a.summonerId !== this.get("localPlayerSummonerId") && a.isAccepted) {
                            const e = this.get("tra.clash_ticket_offer_tooltip_remote_player_gifted_ticket");
                            this._setTooltip([e])
                        } else {
                            const e = a.isAccepted ? this.get("tra.clash_ticket_offer_tooltip_accepted") : this.get("tra.clash_ticket_offer_tooltip_revoke");
                            this._setTooltip([e], ".clash-ticket-offer-button")
                        }
                    } else if (t || this.get("rosterMember.currentBuyin")) {
                        if (this.get("isOfferButtonEnabled")) {
                            const e = this.get("tournament.entryFee"),
                                t = this.get("tra").formatString("clash_tooltip_offer_ticket", {
                                    entryFee: e
                                }),
                                n = s.Ember.$(document.createElement("img"));
                            n.attr("src", "/fe/lol-clash/assets/images/tickets/ticket-mini-hr-icon.png"), this._setTooltip([t, n])
                        }
                    } else n ? this._setTooltip([this.get("tra.clash_ticket_offer_tooltip_not_enough_tickets")]) : this._setTooltip([this.get("tra.clash_ticket_offer_tooltip_not_enough_tickets_for_self")])
                },
                _selectNewCurrentOffer() {
                    if (this.get("isCallInProgress")) return;
                    const e = this.get("incomingOffers");
                    if (!e || !e.length) return void this._clearCurrentOffer();
                    const t = this.get("currentOffer"),
                        n = this.get("localPlayerSummonerId");
                    let a = !1,
                        s = null;
                    for (const i of e) {
                        if (i.isAccepted) return void this._setCurrentOffer(i);
                        t && i.summonerId === t.summonerId && (a = !0), i.summonerId === n && (s = i)
                    }
                    if (t) {
                        if (a) return;
                        this._clearCurrentOffer()
                    }
                    this.get("isLocalPlayer") ? this._setCurrentOffer(e[0]) : s && this._setCurrentOffer(s)
                },
                _setCurrentOffer(e) {
                    const t = this.get("rosterMember"),
                        n = s._.cloneDeep(e);
                    let a = this.get("currentOffer");
                    if (a && a.summonerId === e.summonerId) return void this.set("currentOffer", n);
                    this._clearCurrentOffer(), this.set("currentOffer", n), a = n;
                    if (this.get("isLocalPlayer") && !e.isAccepted) {
                        const e = this.get("summonerService").getSummoner(a.summonerId),
                            n = s.FullpageModalTracker.instance().getNoModalPromise();
                        r = Promise.all([e, n]).then((e => {
                            const [n] = e;
                            return this._createTicketOfferContextualNotification(a, t, n)
                        }))
                    }
                },
                _clearCurrentOffer() {
                    this.set("currentOffer", null);
                    const e = this.get("isLocalPlayer");
                    r && e && (r.then((e => {
                        e && e.destroy()
                    })).catch((() => {})), r = null)
                },
                _createTicketOfferContextualNotification(e, t, n) {
                    let a;
                    const i = s.componentFactory.create("TicketOfferNotification", {
                        rosterMember: t,
                        summoner: n,
                        offer: e,
                        onRevoke: () => {
                            s.ModalManager.remove(a)
                        }
                    });
                    return i.renderPromise.then((() => {
                        if (!this._getTicketSelectorElement()) return s.logger.error("no target found for ticket offer notifications"), void s.Ember.run((() => this._clearCurrentOffer()));
                        a = s.ModalManager.add({
                            type: "DialogConfirm",
                            data: {
                                contents: i.domNode,
                                acceptText: this.get("tra.lib_ui_dialog_confirm_accept"),
                                declineText: this.get("tra.lib_ui_dialog_confirm_decline"),
                                closeButton: !1
                            }
                        });
                        const t = () => s.Util.destroyEmberApp(a);
                        return a.acceptPromise.then((() => {
                            t(), s.Ember.run((() => this._acceptTicketOffer(e.summonerId)))
                        }), (() => {
                            t(), s.Ember.run((() => this._declineTicketOffer(e.summonerId)))
                        })), a.destroy = () => {
                            s.ModalManager.remove(a), t()
                        }, a
                    })).catch((e => s.logger.error("ticket-offer -- *** ERROR ***", e)))
                },
                _setTooltip(e, t = ".clash-ticket-offer-button-container") {
                    const n = this.$(t),
                        a = n && n.length;
                    if (a && s.TooltipManager.unassign(n.get(0)), !e || 0 === e.length) return;
                    if (!a) return void s.Ember.run.later((() => this._setTooltip(e, t)), 100);
                    const i = s.Ember.$(document.createElement("lol-uikit-tooltip")),
                        o = s.Ember.$(document.createElement("lol-uikit-content-block"));
                    i.attr({
                        type: "system",
                        "tooltip-position": "top"
                    }), o.attr({
                        type: "tooltip-system"
                    }), o.addClass("clash-ticket-offer-tooltip-offer");
                    for (const t of e) o.append(t);
                    i.append(o), s.TooltipManager.assign(n.get(0), i.get(0), null, {
                        targetAnchor: {
                            x: "center",
                            y: "top"
                        },
                        tooltipAnchor: {
                            x: "center",
                            y: "bottom"
                        }
                    })
                },
                _getTicketSelectorElement() {
                    return this.get("notificationTargetElement")
                },
                _acceptTicketOffer(e) {
                    const t = this.get("clashService"),
                        n = this.get("rosterId"),
                        a = t.acceptTicketOffer(n, e);
                    s.Util.setBoolDuringPromise(a, this, "isCallInProgress")
                },
                _declineTicketOffer(e) {
                    const t = this.get("clashService"),
                        n = this.get("rosterId"),
                        a = t.declineTicketOffer(n, e);
                    s.Util.setBoolDuringPromise(a, this, "isCallInProgress")
                },
                actions: {
                    offerTicket() {
                        const e = this.get("clashService"),
                            t = this.get("tra"),
                            n = this.get("rosterId"),
                            a = this.get("rosterMember.summonerId"),
                            s = (0, i.default)(e, t, n, a, {
                                buyInOptions: this.get("tournament.buyInOptions"),
                                buyInOptionsPremium: this.get("tournament.buyInOptionsPremium"),
                                entryFee: this.get("tournament.entryFee"),
                                currentBuyin: 0,
                                availableTickets: this.get("localPlayer.availableTickets"),
                                isLockedIn: !1,
                                isBuyback: !0
                            });
                        this.set("_ticketOfferModal", s)
                    },
                    revokeTicketOffer() {
                        const e = this.get("clashService"),
                            t = this.get("rosterId"),
                            n = this.get("rosterMember.summonerId"),
                            a = e.revokeTicketOffer(t, n);
                        s.Util.setBoolDuringPromise(a, this, "isCallInProgress")
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function(e, t, n, i, o = {}) {
                a.logger.trace("creating TicketOfferModal");
                let r = 0,
                    l = s.TicketType.BASIC;
                o.onTicketSelected = (e, t) => {
                    r = e, l = t
                }, o.callbacks = {}, o.rosterId = n, o.isTicketOffer = !0, o.titleText = t.get("clash_ticket_offer_modal_title"), o.descriptionText = t.get("clash_ticket_offer_modal_description");
                const c = a.componentFactory.create("TicketSelectComponent", o),
                    d = a.ModalManager.add({
                        type: "DialogConfirm",
                        data: {
                            contents: c.domNode,
                            acceptText: t.get("clash_ticket_offer_modal_accept"),
                            declineText: t.get("clash_ticket_offer_modal_cancel"),
                            closeButton: !1
                        }
                    });
                o.callbacks.enableAcceptButton = d.enableAcceptButton, o.callbacks.disableAcceptButton = d.disableAcceptButton, d.disableAcceptButton();
                const m = () => {
                        a.Util.destroyEmberApp(c)
                    },
                    u = d.acceptPromise.then((() => (m(), e.offerTicket(n, i, r, l))), m);
                return {
                    app: c,
                    modal: d,
                    promise: u
                }
            };
            var a = n(1),
                s = n(9)
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "/fiS+7k8",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-offer\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-offer\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-offer\\\\index.js\\" "],["text","\\n"],["append",["unknown",["incomingOffersObserver"]],false],["text","\\n"],["append",["unknown",["tooltipObserver"]],false],["text","\\n"],["append",["unknown",["showTicketOffersObserver"]],false],["text","\\n\\n"],["block",["unless"],[["get",["rosterMember","isLocalPlayer"]]],null,6],["text","\\n"],["block",["if"],[["get",["showTicketOffers"]]],null,4],["text"," "],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["append",["helper",["generic-button"],null,[["onClick","baseImgPath","overImgPath","downImgPath","disabledImgPath","iconSizeModifier","onClickSound","onHoverSound","isEnabled"],[["helper",["action"],[["get",[null]],"revokeTicketOffer"],null],"/fe/lol-clash/assets/images/buttons/icon-prize.png","/fe/lol-clash/assets/images/buttons/icon-prize-over.png","/fe/lol-clash/assets/images/buttons/icon-prize-down.png","/fe/lol-clash/assets/images/buttons/icon-prize-disabled.png",0.6,"button-circlegold-click","button-circlegold-hover",["get",["isRevokeButtonEnabled"]]]]],false],["text","\\n      "]],"locals":[]},{"statements":[["text"," "],["text","\\n"],["block",["if"],[["get",["currentOffer"]]],null,0],["text"," "],["text","\\n    "]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","clash-ticket-offer-prize-img"],["static-attr","src","/fe/lol-clash/assets/images/buttons/icon-prize-disabled.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["currentOffer","isAccepted"]]],null,2],["text","    "]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-ticket-offer-button"],["flush-element"],["text","\\n"],["block",["if"],[["get",["rosterMember","isLocalPlayer"]]],null,3,1],["text"," "],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","pending-indicator"],["flush-element"],["append",["unknown",["pending-indicator"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-ticket-offer-button-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isPendingOfferFromLocalPlayer"]]],null,5],["text","    "],["append",["helper",["generic-button"],null,[["onClick","baseImgPath","overImgPath","downImgPath","disabledStyle","isEnabled","matchWidth"],[["helper",["action"],[["get",[null]],"offerTicket"],null],["get",["ticketBtnBaseImgPath"]],["get",["ticketBtnOverImgPath"]],["get",["ticketBtnOverImgPath"]],["get",["ticketBtnDisabledStyle"]],["get",["isOfferButtonEnabled"]],false]]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9);
            n(123), e.exports = a.Ember.Component.extend({
                classNames: ["clash-roster-details-visual"],
                layout: n(124),
                name: null,
                shortName: null,
                logoId: s.INVALID_LOGO_ID,
                logoColorId: s.INVALID_LOGO_COLOR_ID,
                tier: null,
                pickOrder: 0,
                isDetailsEditable: !1,
                displayLogoPendingIndicator: !1,
                rosterMemberTiers: [],
                isLogoAvailable: !0,
                isLogoColorAvailable: !0,
                isLogoUnavailable: a.Ember.computed.not("isLogoAvailable"),
                isLogoColorUnavailable: a.Ember.computed.not("isLogoColorAvailable"),
                isLogoOrColorUnavailable: a.Ember.computed.or("isLogoUnavailable", "isLogoColorUnavailable"),
                isSelectedLogoOrColorUnavailable: a.Ember.computed.and("hasLogo", "isLogoOrColorUnavailable"),
                logoPipCount: 0,
                hasPips: a.Ember.computed.gt("logoPipCount", 0),
                hasLogo: a.Ember.computed.gt("logoId", s.INVALID_LOGO_ID),
                hasValidLogo: a.Ember.computed.and("hasLogo", "isLogoAvailable"),
                clashService: a.Ember.inject.service("clash"),
                gdsService: a.Ember.inject.service("gds"),
                roster: a.Ember.computed.alias("clashService.localPlayer.roster"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                suggestedInvites: a.Ember.computed.alias("roster.suggestedInvites"),
                localPlayerSummonerId: a.Ember.computed.alias("localPlayer.summonerId"),
                isCaptain: a.Ember.computed("roster.captainId", "localPlayerSummonerId", (function() {
                    return this.get("roster.captainId") === this.get("localPlayerSummonerId")
                })),
                isRosterFull: a.Ember.computed.alias("roster.isRosterFull"),
                suggestedInvitesCount: a.Ember.computed("suggestedInvites.[]", (function() {
                    return this.get("suggestedInvites.length")
                })),
                hasSuggestedInvites: a.Ember.computed.gt("suggestedInvitesCount", 0),
                requestsPendingText: a.Ember.computed("suggestedInvitesCount", (function() {
                    const e = this.get("suggestedInvitesCount"),
                        t = e > 1 ? "clash_lft_team_requests_pending" : "clash_lft_team_requests_pending_1";
                    return this.get("tra").formatString(t, {
                        num: e
                    })
                })),
                isRequestsPendingVisible: a.Ember.computed("hasSuggestedInvites", "roster.lft", "isRosterFull", "showPickOrder", (function() {
                    return this.get("roster.lft") && this.get("hasSuggestedInvites") && !this.get("isRosterFull") && !this.get("showPickOrder")
                })),
                rosterLogoPath: a.Ember.computed("logoId", "logoColorId", "gdsService.ready", (function() {
                    if (!this.get("gdsService.ready")) return "";
                    const e = this.get("logoId"),
                        t = this.get("logoColorId");
                    return this.get("gdsService").getLogoPath(e, t)
                })),
                showPickOrder: a.Ember.computed("pickOrder", (function() {
                    return this.get("pickOrder") > 0
                })),
                isFirstPickOrder: a.Ember.computed("pickOrder", (function() {
                    return 1 === this.get("pickOrder")
                })),
                actions: {
                    openDetailsSelector() {
                        this.sendAction("openDetailsSelector")
                    },
                    openInviteModal() {
                        this.get("isCaptain") && this.sendAction("openInviteModal")
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "47C9wMi6",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-details\\\\roster-details-visual\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-details\\\\roster-details-visual\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-details\\\\roster-details-visual\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-roster-details-team-logo ",["helper",["if"],[["get",["hasValidLogo"]],"","roster-no-team-logo"],null]," ",["helper",["if"],[["get",["isDetailsEditable"]],"editable"],null]]]],["modifier",["action"],[["get",[null]],"openDetailsSelector"]],["flush-element"],["text","\\n  "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["rosterLogoPath"]]]]],["static-attr","class","clash-roster-details-team-logo-img"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-roster-details-logo-pending-indicator"],["flush-element"],["text","\\n"],["block",["if"],[["get",["displayLogoPendingIndicator"]]],null,14],["text","  "],["close-element"],["text","\\n"],["block",["if"],[["get",["isSelectedLogoOrColorUnavailable"]]],null,13,8],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-roster-details-center-row"],["flush-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-roster-details-team-tag ",["helper",["if"],[["get",["shortName"]],"","is-roster-detail-placeholder"],null]," ",["helper",["if"],[["get",["isDetailsEditable"]],"editable"],null]]]],["modifier",["action"],[["get",[null]],"openDetailsSelector"]],["flush-element"],["text","\\n    "],["append",["helper",["if"],[["get",["shortName"]],["get",["shortName"]],["get",["tra","clash_roster_details_placeholder_team_tag"]]],null],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-roster-details-vertical-separator"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-roster-details-name-column"],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-roster-details-team-name ",["helper",["if"],[["get",["name"]],"","is-roster-detail-placeholder"],null]," ",["helper",["if"],[["get",["isDetailsEditable"]],"editable"],null]]]],["modifier",["action"],[["get",[null]],"openDetailsSelector"]],["flush-element"],["text","\\n      "],["append",["helper",["if"],[["get",["name"]],["get",["name"]],["get",["tra","clash_roster_details_placeholder_team_name"]]],null],false],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-roster-details-tier-row"],["flush-element"],["text","\\n"],["block",["if"],[["get",["tier"]]],null,6],["block",["if"],[["get",["isRequestsPendingVisible"]]],null,5],["block",["if"],[["get",["showPickOrder"]]],null,4],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","              "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n                "],["open-element","h5",[]],["flush-element"],["append",["unknown",["tra","clash_roster_details_pick_order_second_tooltip_title"]],false],["close-element"],["text","\\n                "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_roster_details_pick_order_second_tooltip"]],false],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","img",[]],["static-attr","class","clash-roster-details-pick-side-image"],["static-attr","src","/fe/lol-clash/assets/images/brackets/pick-second.svg"],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["bottom","system"]],0]],"locals":[]},{"statements":[["text","              "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n                "],["open-element","h5",[]],["flush-element"],["append",["unknown",["tra","clash_roster_details_pick_order_first_tooltip_title"]],false],["close-element"],["text","\\n                "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_roster_details_pick_order_first_tooltip"]],false],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","img",[]],["static-attr","class","clash-roster-details-pick-side-image"],["static-attr","src","/fe/lol-clash/assets/images/brackets/pick-first.svg"],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["bottom","system"]],2]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","clash-roster-details-pick-side-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isFirstPickOrder"]]],null,3,1],["text","        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-roster-details-requests-pending-visual ",["helper",["if"],[["get",["isCaptain"]],"clickable"],null]]]],["modifier",["action"],[["get",[null]],"openInviteModal"]],["flush-element"],["text","\\n          "],["append",["unknown",["requestsPendingText"]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","clash-roster-details-team-tier"],["flush-element"],["append",["helper",["tier-placement"],null,[["rosterTier","rosterMemberTiers"],[["get",["tier"]],["get",["rosterMemberTiers"]]]]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-roster-details-pip-indicator"],["flush-element"],["append",["helper",["pip-counter"],null,[["pipCount"],[["get",["logoPipCount"]]]]],false],["close-element"],["text","\\n  "]],"locals":[]},{"statements":[["block",["if"],[["get",["hasPips"]]],null,7]],"locals":[]},{"statements":[["text","              "],["append",["unknown",["tra","clash_roster_details_must_pick_new_chroma"]],false],["text","\\n            "]],"locals":[]},{"statements":[["block",["if"],[["get",["isLogoColorUnavailable"]]],null,9]],"locals":[]},{"statements":[["text","              "],["append",["unknown",["tra","clash_roster_details_must_pick_new_logo"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n          "],["open-element","p",[]],["flush-element"],["text","\\n"],["block",["if"],[["get",["isLogoUnavailable"]]],null,11,10],["text","          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-roster-details-invalid-logo"],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","clash-roster-details-invalid-logo-icon"],["static-attr","src","/fe/lol-clash/assets/images/AlertIcon.png"],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],12],["text","    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["append",["unknown",["pending-indicator"]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9);
            n(126), e.exports = a.Ember.Component.extend({
                classNames: ["clash-roster-details-visual-team"],
                layout: n(127),
                pickOrder: 0,
                isDetailsEditable: !1,
                hasClosedRosterDetailsDialog: !1,
                roster: null,
                rosterLogoPath: "",
                displayLogoPendingIndicator: !1,
                rosterMemberTiers: [],
                isLogoAvailable: !0,
                isLogoColorAvailable: !0,
                isLogoUnavailable: a.Ember.computed.not("isLogoAvailable"),
                isLogoColorUnavailable: a.Ember.computed.not("isLogoColorAvailable"),
                isLogoOrColorUnavailable: a.Ember.computed.or("isLogoUnavailable", "isLogoColorUnavailable"),
                isSelectedLogoOrColorUnavailable: a.Ember.computed.and("hasLogo", "isLogoOrColorUnavailable"),
                logoPipCount: 0,
                hasPips: a.Ember.computed.gt("logoPipCount", 0),
                hasLogo: a.Ember.computed.gt("logoId", s.INVALID_LOGO_ID),
                hasValidLogo: a.Ember.computed.and("hasLogo", "isLogoAvailable"),
                clashService: a.Ember.inject.service("clash"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                name: a.Ember.computed.alias("roster.name"),
                shortName: a.Ember.computed.alias("roster.shortName"),
                logoId: a.Ember.computed.alias("roster.iconId"),
                logoColorId: a.Ember.computed.alias("roster.chromaId"),
                tier: a.Ember.computed.alias("roster.tier"),
                actions: {
                    openDetailsSelector() {
                        this.attrs.openDetailsSelector()
                    },
                    openInviteModal() {
                        this.sendAction("openInviteModal")
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "KXq6bTsV",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-details\\\\roster-details-visual-team\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-details\\\\roster-details-visual-team\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-details\\\\roster-details-visual-team\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-roster-details-team-logo ",["helper",["if"],[["get",["hasValidLogo"]],"","roster-no-team-logo"],null]," ",["helper",["if"],[["get",["isDetailsEditable"]],"editable"],null]]]],["modifier",["action"],[["get",[null]],"openDetailsSelector"]],["flush-element"],["text","\\n  "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["rosterLogoPath"]]]]],["static-attr","class","clash-roster-details-team-logo-img"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-roster-details-logo-pending-indicator"],["flush-element"],["text","\\n"],["block",["if"],[["get",["displayLogoPendingIndicator"]]],null,8],["text","  "],["close-element"],["text","\\n"],["block",["if"],[["get",["isSelectedLogoOrColorUnavailable"]]],null,7,2],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-roster-details-team-tag-and-tier-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-roster-details-team-tag ",["helper",["if"],[["get",["shortName"]],"","is-roster-detail-placeholder"],null],"  ",["helper",["if"],[["get",["isDetailsEditable"]],"editable"],null]]]],["modifier",["action"],[["get",[null]],"openDetailsSelector"]],["flush-element"],["text","\\n    "],["append",["helper",["if"],[["get",["shortName"]],["get",["shortName"]],["get",["tra","clash_roster_details_placeholder_team_tag"]]],null],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-roster-details-tier-row"],["flush-element"],["text","\\n"],["block",["if"],[["get",["tier"]]],null,0],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-roster-details-vertical-separator"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-roster-details-team-name-and-open-team-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-roster-details-team-name ",["helper",["if"],[["get",["name"]],"","is-roster-detail-placeholder"],null]," ",["helper",["if"],[["get",["isDetailsEditable"]],"editable"],null]]]],["modifier",["action"],[["get",[null]],"openDetailsSelector"]],["flush-element"],["text","\\n    "],["append",["helper",["if"],[["get",["name"]],["get",["name"]],["get",["tra","clash_roster_details_placeholder_team_name"]]],null],false],["text","\\n  "],["close-element"],["text","\\n    "],["open-element","div",[]],["flush-element"],["text","\\n      "],["append",["helper",["open-team-toggle"],null,[["roster","openInviteModal","hasClosedRosterDetailsDialog"],[["get",["roster"]],["helper",["action"],[["get",[null]],"openInviteModal"],null],["get",["hasClosedRosterDetailsDialog"]]]]],false],["text","\\n    "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-roster-details-team-tier"],["flush-element"],["append",["helper",["tier-placement"],null,[["rosterTier","rosterMemberTiers"],[["get",["tier"]],["get",["rosterMemberTiers"]]]]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-roster-details-pip-indicator"],["flush-element"],["append",["helper",["pip-counter"],null,[["pipCount"],[["get",["logoPipCount"]]]]],false],["close-element"],["text","\\n  "]],"locals":[]},{"statements":[["block",["if"],[["get",["hasPips"]]],null,1]],"locals":[]},{"statements":[["text","              "],["append",["unknown",["tra","clash_roster_details_must_pick_new_chroma"]],false],["text","\\n            "]],"locals":[]},{"statements":[["block",["if"],[["get",["isLogoColorUnavailable"]]],null,3]],"locals":[]},{"statements":[["text","              "],["append",["unknown",["tra","clash_roster_details_must_pick_new_logo"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n          "],["open-element","p",[]],["flush-element"],["text","\\n"],["block",["if"],[["get",["isLogoUnavailable"]]],null,5,4],["text","          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-roster-details-invalid-logo"],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","clash-roster-details-invalid-logo-icon"],["static-attr","src","/fe/lol-clash/assets/images/AlertIcon.png"],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],6],["text","    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["append",["unknown",["pending-indicator"]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(129);
            var s = n(54);
            const {
                RunMixin: i
            } = a.EmberAddons.EmberLifeline, o = "/v2/account/LCUPreferences/lol-clash", r = "openTeamToggleTooltipSeen", l = "clash-open-team-tooltip-icon";
            e.exports = a.Ember.Component.extend(i, {
                classNames: ["clash-open-team-toggle"],
                layout: n(130),
                hasClosedRosterDetailsDialog: !1,
                roster: null,
                clashService: a.Ember.inject.service("clash"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                isRosterFull: a.Ember.computed.alias("roster.isRosterFull"),
                localPlayerSummonerId: a.Ember.computed.alias("localPlayer.summonerId"),
                isCaptain: a.Ember.computed("roster.captainId", "localPlayerSummonerId", (function() {
                    return this.get("roster.captainId") === this.get("localPlayerSummonerId")
                })),
                isOpenTeamToggleDisabled: a.Ember.computed.not("isCaptain"),
                suggestedInvites: a.Ember.computed.alias("roster.suggestedInvites"),
                suggestedInvitesCount: a.Ember.computed("suggestedInvites.[]", (function() {
                    return this.get("suggestedInvites.length")
                })),
                hasSuggestedInvites: a.Ember.computed.gt("suggestedInvitesCount", 0),
                requestsPendingText: a.Ember.computed("suggestedInvitesCount", (function() {
                    const e = this.get("suggestedInvitesCount"),
                        t = e > 1 ? "clash_lft_team_requests_pending" : "clash_lft_team_requests_pending_1";
                    return this.get("tra").formatString(t, {
                        num: e
                    })
                })),
                isRequestsPendingVisible: a.Ember.computed("hasSuggestedInvites", "roster.lft", "isRosterFull", (function() {
                    return this.get("roster.lft") && this.get("hasSuggestedInvites") && !this.get("isRosterFull")
                })),
                didUpdateAttrs() {
                    this._super(...arguments), this.tryShowTooltip()
                },
                didInsertElement() {
                    this._super(...arguments), this.initTooltip()
                },
                willDestroyElement() {
                    this._super(...arguments), this.unassignTooltip()
                },
                _formatToClassName: e => "." + e,
                initTooltip: function() {
                    return (0, s.getAccountSetting)(o, r, !0).then((e => {
                        const t = Boolean(e && e.value);
                        this.set("openTeamToggleTooltipSeen", t), this.set("settingsDataSchemaVersion", e.schemaVersion), this.assignTooltip(t), this.tryShowTooltip()
                    }))
                },
                assignTooltip: function(e) {
                    const t = this.element.querySelector(this._formatToClassName(l));
                    if (!t) return;
                    this.set("tooltipContainerElement", t);
                    const n = document.createElement("lol-uikit-tooltip"),
                        s = a.TemplateHelper.contentBlockTooltipAttention(this.get("tra.clash_lft_tooltip_open_team"));
                    if (!e) {
                        const e = document.createElement("div");
                        e.innerHTML = this.get("tra.clash_lft_tooltip_new_title"), e.className = "clash-open-team-tooltip-title", this.set("tooltipTitleElement", e), s.prepend(e)
                    }
                    n.appendChild(s), a.TooltipManager.assign(t, n, null, {
                        type: "attention",
                        targetAnchor: {
                            x: "right",
                            y: "center"
                        },
                        tooltipAnchor: {
                            x: "left",
                            y: "center"
                        },
                        offset: {
                            x: 14,
                            y: 0
                        }
                    }), a.TooltipManager.hide(t)
                },
                unassignTooltip: function() {
                    const e = this.get("tooltipContainerElement");
                    e && a.TooltipManager.unassign(e)
                },
                tryShowTooltip: function() {
                    const e = this.get("isCaptain"),
                        t = this.get("hasClosedRosterDetailsDialog");
                    !this.get("openTeamToggleTooltipSeen") && (e && t || !e) && (this.autoShowTooltip(), this.saveOpenTeamToggleTooltipSeen())
                },
                autoShowTooltip: function() {
                    const e = this.element.querySelector(this._formatToClassName(l));
                    e && (a.TooltipManager.show(e), this.runTask((() => {
                        a.TooltipManager.hide(e), this.runTask((() => {
                            const e = this.get("tooltipTitleElement");
                            e && e.classList.add("hidden")
                        }), 500)
                    }), 5e3))
                },
                saveOpenTeamToggleTooltipSeen: function() {
                    const e = this.get("settingsDataSchemaVersion");
                    null != e && (0, s.saveAccountSetting)(o, r, !0, e).then((() => {
                        this.set("openTeamToggleTooltipSeen", !0)
                    }))
                },
                _updateOpenTeam(e) {
                    this.get("clashService").changeTeamOpen(this.get("roster.id"), this.get("roster.captainSummonerId"), e)
                },
                actions: {
                    toggle() {
                        this.get("isOpenTeamToggleDisabled") || this._updateOpenTeam(!this.get("roster.lft"))
                    },
                    onTooltipHover() {
                        const e = this.get("tooltipContainerElement");
                        e && a.TooltipManager.show(e)
                    },
                    onTooltipHoverLeave() {
                        const e = this.get("tooltipContainerElement");
                        e && a.TooltipManager.hide(e)
                    },
                    openInviteModal() {
                        this.get("isCaptain") && this.sendAction("openInviteModal")
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "k1upd17J",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\open-team-toggle\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\open-team-toggle\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\open-team-toggle\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-open-team-toggle-wrapper ",["helper",["if"],[["get",["roster","lft"]],"open",""],null]," ",["helper",["if"],[["get",["roster","lft"]],"right","left"],null]," ",["helper",["if"],[["get",["isOpenTeamToggleDisabled"]],"disabled"],null]]]],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","toggle-container animated"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggle"],null],null],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","open"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","toggle-button animated"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","lol-uikit-info-icon",[]],["static-attr","class","clash-open-team-tooltip-icon"],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"onTooltipHover"],null],null],["dynamic-attr","onmouseleave",["helper",["action"],[["get",[null]],"onTooltipHoverLeave"],null],null],["flush-element"],["text","\\n"],["close-element"],["text","\\n"],["block",["if"],[["get",["isRequestsPendingVisible"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-requests-pending-visual ",["helper",["if"],[["get",["isCaptain"]],"clickable"],null]]]],["modifier",["action"],[["get",[null]],"openInviteModal"]],["flush-element"],["text","\\n    "],["append",["unknown",["requestsPendingText"]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(10)) && a.__esModule ? a : {
                    default: a
                };
            n(132);
            var o = n(9);
            const r = 1e3,
                l = 6e4,
                c = 36e5,
                d = (0, s.emberDataBinding)({
                    Ember: s.Ember,
                    websocket: (0, s.getProvider)().getSocket(),
                    basePaths: {
                        gameData: "/lol-game-data"
                    }
                });
            e.exports = s.Ember.Component.extend(d, {
                classNames: ["clash-state-countdown"],
                layout: n(133),
                clashService: s.Ember.inject.service("clash"),
                clashTimerManagementService: s.Ember.inject.service("clash-timer-management"),
                localPlayerState: s.Ember.computed.alias("clashService.localPlayer.state"),
                roster: s.Ember.computed.alias("clashService.localPlayer.roster"),
                tournament: null,
                tournamentStateInfo: s.Ember.computed.alias("tournament.tournamentStateInfo"),
                nextMatch: s.Ember.computed.alias("clashService.localPlayer.nextMatch"),
                usePaddedZeros: !0,
                displayTimerDescriptionTxt: !0,
                showMinutesBelow60s: !0,
                showTimeUpTxt: !1,
                customTag: "default",
                isAudioEnabled: !1,
                showSpinnerOnTimeup: !1,
                nextAudioNotificationIndex: 0,
                audioNotifications: [{
                    time: 601e3,
                    state: i.default.Tournament.LOCK_IN,
                    type: "vo",
                    name: "fem1-lockin-10min"
                }, {
                    time: 301e3,
                    state: i.default.Tournament.LOCK_IN,
                    type: "vo",
                    name: "fem1-lockin-5min"
                }, {
                    time: 181e3,
                    state: i.default.Tournament.LOCK_IN,
                    type: "vo",
                    name: "fem1-lockin-3min"
                }, {
                    time: 6e4,
                    state: i.default.Tournament.SCOUTING,
                    type: "sfx",
                    name: "bell-warning"
                }, {
                    time: 1e4,
                    state: i.default.Tournament.SCOUTING,
                    type: "sfx",
                    name: "timer-tick-big"
                }, {
                    time: 9e3,
                    state: i.default.Tournament.SCOUTING,
                    type: "sfx",
                    name: "timer-tick-big"
                }, {
                    time: 8e3,
                    state: i.default.Tournament.SCOUTING,
                    type: "sfx",
                    name: "timer-tick-big"
                }, {
                    time: 7e3,
                    state: i.default.Tournament.SCOUTING,
                    type: "sfx",
                    name: "timer-tick-big"
                }, {
                    time: 6e3,
                    state: i.default.Tournament.SCOUTING,
                    type: "sfx",
                    name: "timer-tick-big"
                }, {
                    time: 5e3,
                    state: i.default.Tournament.SCOUTING,
                    sounds: [{
                        type: "sfx",
                        name: "timer-tick-big"
                    }, {
                        type: "vo",
                        name: "fem1-round-start"
                    }]
                }, {
                    time: 4e3,
                    state: i.default.Tournament.SCOUTING,
                    type: "sfx",
                    name: "timer-tick-big"
                }, {
                    time: 3e3,
                    state: i.default.Tournament.SCOUTING,
                    type: "sfx",
                    name: "timer-tick-big"
                }, {
                    time: 2e3,
                    state: i.default.Tournament.SCOUTING,
                    type: "sfx",
                    name: "timer-tick-big"
                }, {
                    time: 1e3,
                    state: i.default.Tournament.SCOUTING,
                    type: "sfx",
                    name: "timer-tick-big"
                }],
                timer: null,
                msUntilNextState: -1,
                onWillDestroyElement: s.Ember.on("willDestroyElement", (function() {
                    const e = this.get("timer");
                    e && this.get("clashTimerManagementService").cancelTimer(e)
                })),
                isMatchStarting: s.Ember.computed("tournament.state", "nextMatch", (function() {
                    const e = this.get("tournament.state"),
                        t = this.get("nextMatch");
                    return e === i.default.Tournament.IN_GAME && t
                })),
                isMatchmaking: s.Ember.computed("tournament.state", "localPlayerState", (function() {
                    return this.get("tournament.state") === i.default.Tournament.LOCK_IN && this.get("localPlayerState") === i.default.Player.REGISTERED_ROSTER
                })),
                timerManager: s.Ember.computed("tournamentStateInfo.nextStateChangeTime", "tournament.state", "tournament.status", "tournament.resumeTime", "nextMatch.roundStartTime", "isMatchStarting", (function() {
                    let e = this.get("isMatchStarting") ? this.get("nextMatch.roundStartTime") : this.get("tournamentStateInfo.nextStateChangeTime");
                    if (this.get("tournament.status") === o.TournamentStatus.PRERESUME && this.get("tournament.resumeTime") && (e = this.get("tournament.resumeTime")), !e) return;
                    this.set("nextStateChangeTime", e);
                    const t = this.get("timer");
                    t && this.get("clashTimerManagementService").cancelTimer(t);
                    const n = e - this.get("clashService").getCurrentClashServerTime();
                    this.set("msUntilNextState", n), this.get("isAudioEnabled") && this._initializeNextAudioNotification();
                    const a = this.get("tournament.id"),
                        s = this._timerTick.bind(this, a),
                        i = this.get("clashTimerManagementService").emberRunAtInterval(s, 1e3, {
                            tournamentId: a
                        });
                    this.set("timer", i)
                })),
                formattedCountdown: s.Ember.computed("msUntilNextState", "isMatchStarting", "isMatchmaking", (function() {
                    let e = this.get("msUntilNextState");
                    if (this.get("isMatchStarting") || this.get("isMatchmaking")) {
                        if (e = Math.abs(e), e = e <= 5e3 ? 0 : e - 5e3, e < r) return ""
                    } else e = Math.max(this.get("msUntilNextState"), 0);
                    if (e >= 864e5) {
                        const t = this._convertMsToDisplayValue(e, 864e5),
                            n = this._convertMsToDisplayValue(e, c, 24);
                        return this.get("tra").formatString("clash_countdown_timer_format_ddhh", {
                            days: t,
                            hours: n
                        })
                    }
                    if (e >= 36e5) {
                        const t = this._convertMsToDisplayValue(e, c),
                            n = this._convertMsToDisplayValue(e, l, 60);
                        return this.get("tra").formatString("clash_countdown_timer_format_hhmm", {
                            hours: t,
                            minutes: n
                        })
                    }
                    if (e > 6e4 || this.get("showMinutesBelow60s")) {
                        const t = this._convertMsToDisplayValue(e, l),
                            n = this._convertMsToDisplayValue(e, r, 60);
                        return this.get("tra").formatString("clash_countdown_timer_format_mmss", {
                            minutes: t,
                            seconds: n
                        })
                    } {
                        const t = this._convertMsToDisplayValue(e, r, 60);
                        return this.get("tra").formatString("clash_countdown_timer_format_ss", {
                            seconds: t
                        })
                    }
                })),
                showSpinner: s.Ember.computed("showSpinnerOnTimeup", "isMatchmaking", "isMatchStarting", (function() {
                    return this.get("showSpinnerOnTimeup") && (this.get("isMatchmaking") || this.get("isMatchStarting"))
                })),
                timerDescriptionTxt: s.Ember.computed("tournament.state", "localPlayerState", "roster.isCurrentBracketComplete", (function() {
                    const e = this.get("tournament.state"),
                        t = this.get("localPlayerState"),
                        n = this.get("roster.isCurrentBracketComplete");
                    return t !== i.default.Player.BRACKET_ROSTER || e !== i.default.Tournament.RESULTS || n ? this.get(`tra.clash_state_countdown_${e}`) : this.get("tra.clash_state_countdown_CONCLUDING")
                })),
                timeUpTxt: s.Ember.computed("msUntilNextState", "isMatchStarting", (function() {
                    const e = Math.max(this.get("msUntilNextState"), 0),
                        t = this.get("tournament.state");
                    return e || !this.get("showTimeUpTxt") || this.get("isMatchStarting") ? (this.set("timeUpSubTxt", null), null) : (this.set("timeUpSubTxt", this.get(`tra.clash_state_countdown_timeup_subtxt_${t}`)), this.get(`tra.clash_state_countdown_timeup_${t}`))
                })),
                _timerTick(e) {
                    const t = s.PrivateAPI.getClashAvailable();
                    s.PrivateAPI.getTournamentSummary(e) && t && (this.set("msUntilNextState", this.get("nextStateChangeTime") - this.get("clashService").getCurrentClashServerTime()), this.get("isAudioEnabled") && this._playAudioNotificationIfApplicable())
                },
                _convertMsToDisplayValue(e, t, n) {
                    let a = Math.floor(e / t);
                    n && (a %= n);
                    this.get("usePaddedZeros") && (a = s.Util.padZeros(a));
                    return this.get("injectNumberStyling") ? `<span class="number">${a}</span>` : a
                },
                _initializeNextAudioNotification() {
                    const e = this.get("audioNotifications"),
                        t = Math.max(this.get("msUntilNextState"), 0);
                    for (let n = 0; n < e.length; ++n)
                        if (t >= e[n].time) {
                            this.set("nextAudioNotificationIndex", n);
                            break
                        }
                },
                _playAudioNotificationIfApplicable() {
                    const e = this.get("audioNotifications"),
                        t = this.get("nextAudioNotificationIndex");
                    if (t < e.length) {
                        const n = e[t];
                        this.get("msUntilNextState") <= n.time && (this.set("nextAudioNotificationIndex", t + 1), this._playNotificationSound(n))
                    }
                },
                _playNotificationSound(e) {
                    if (this.get("tournament.state") !== e.state) return;
                    const t = this.get("roster.isRegistered");
                    if (e.state !== i.default.Tournament.LOCK_IN || !t)
                        if (e.sounds)
                            for (const t of e.sounds) this._playSound(t);
                        else this._playSound(e)
                },
                _playSound(e) {
                    "sfx" === e.type ? s.AudioManager.playAudio(e.name) : "vo" === e.type && s.Ember.run.later(this, (function() {
                        s.clashVO && s.clashVO.play(e.name)
                    }), 100)
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "TxP4pvjj",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\state-countdown\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\state-countdown\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\state-countdown\\\\index.js\\" "],["text","\\n"],["append",["unknown",["timerManager"]],false],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["state-countdown-content ",["unknown",["customTag"]]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["showSpinner"]]],null,4,3],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","countdown-text"],["flush-element"],["append",["unknown",["timerDescriptionTxt"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","countdown-timer"],["flush-element"],["append",["helper",["sanitize"],[["get",["formattedCountdown"]]],null],false],["close-element"],["text","\\n"],["block",["if"],[["get",["displayTimerDescriptionTxt"]]],null,0],["text","  "]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","countdown-timer"],["flush-element"],["append",["unknown",["timeUpTxt"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","countdown-text"],["flush-element"],["append",["unknown",["timeUpSubTxt"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["timeUpTxt"]]],null,2,1]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-spinner-container"],["flush-element"],["text","\\n      "],["append",["helper",["uikit-spinner"],null,[["class"],["clash-loading-spinner"]]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = d(n(135)),
                i = d(n(152)),
                o = d(n(3)),
                r = d(n(96)),
                l = d(n(153));
            n(175), n(176);
            var c = n(9);

            function d(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const m = n(177),
                u = n(178),
                p = n(179),
                h = n(180),
                g = n(181),
                f = {
                    x: 1055,
                    y: 522
                },
                _ = {
                    x: 1280,
                    y: 600
                },
                b = 278,
                x = 62,
                y = 278,
                k = 140,
                v = ".bracket-content",
                E = v + ".winners",
                S = v + ".losers",
                T = ".timers-wrapper.winners",
                w = Object.freeze({
                    losers: {},
                    winners: {}
                }),
                I = 220;
            let C = 0;

            function R(e) {
                const t = Math.round(e);
                return t % 2 == 1 ? t + 1 : t
            }

            function P(e) {
                return e && e.length
            }
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-bracket-layout"],
                classNameBindings: ["isScrollAnimating:force-visible", "isEog::is-bracket-tab"],
                layout: n(182),
                oldBracket: null,
                bracket: null,
                targetRound: -1,
                tournamentNameLocKey: "",
                localPlayerRosterId: null,
                isLosersBracket: !1,
                triggerAnimIsLosers: !1,
                isInteractive: !0,
                useAnimations: !1,
                isEog: !1,
                isEogAndInThirdPlaceMatch: !1,
                totalAnimDuration: 18,
                currentBracket: null,
                roundScrollPositions: null,
                displayFlipped: !1,
                currentScrollAnimationFrame: 0,
                isAnimationPaused: !1,
                playAnimsOnInsertElement: !1,
                gameTimers: {},
                gameTimersTickerInstance: null,
                winnersContainerMatches: a.Ember.computed("currentBracket", "currentBracket.size", "currentBracket.matches.[]", (function() {
                    const e = this.get("currentBracket.size"),
                        t = [];
                    return (this.get("currentBracket.matches") || []).forEach((n => {
                        (1 === n.get("highestPossiblePosition") || 3 === n.get("highestPossiblePosition") && e > 4) && t.push(n)
                    })), t
                })),
                losersContainerMatches: a.Ember.computed("currentBracket", "currentBracket.size", "currentBracket.matches.[]", (function() {
                    const e = [],
                        t = this.get("currentBracket.matches") || [],
                        n = this.get("currentBracket.size");
                    return t.forEach((t => {
                        t.get("highestPossiblePosition") !== n / 2 + 1 && t.get("highestPossiblePosition") !== n - 1 || e.push(t)
                    })), e
                })),
                init() {
                    this._super(...arguments), this.set("roundScrollPositions", a._.cloneDeep(w))
                },
                didInsertElement() {
                    this._super(...arguments), (0, l.default)(a.Ember.$), this._initScrollbar(!0), this._initScrollbar(!1), this._domUpdate(!0), this.get("playAnimsOnInsertElement") && this._tryPlayAnimation()
                },
                _initScrollbar(e) {
                    const t = this._getVisibleArea(e);
                    P(t) && (t.perfectScrollbar({
                        suppressScrollY: !0,
                        useBothWheelAxes: !0,
                        maxScrollbarLength: 230,
                        handlers: ["click-rail", "drag-scrollbar", "wheel"]
                    }), t.on("ps-scroll-x", this._onScroll.bind(this, e)), this.$(".ps__scrollbar-x").attr("tabindex", -1), this.$(".ps__scrollbar-y").attr("tabindex", -1))
                },
                _updateTimers(e, t) {
                    if (!e || !e.length) return;
                    const n = this.get("gameTimers");
                    e.forEach((e => {
                        const a = e.get("id");
                        e.get("status") === c.MatchStatus.STARTED && e.get("gameStartTime") > 0 ? this._addTimer(n, e, t) : this._stopTimer(n, a)
                    })), this._updateGameTimerTicker(n)
                },
                _addTimer(e, t, n) {
                    if (!t || !t.get("id")) return;
                    const s = t.get("id");
                    if (e[s]) return;
                    a.logger.trace("bracket-match-timers: adding timer for match " + s);
                    const i = t.get("highestPossiblePosition") > n / 2,
                        o = this._getTimersWrapper(i).find(`#match-timer-gameid-${s}`);
                    if (!o) return void a.logger.error("bracket-match-timers: could not find dom element for timer " + s);
                    const r = Math.floor((Date.now() - Number(t.get("gameStartTime") || 0)) / 1e3);
                    e[s] = {
                        domNode: o,
                        time: r
                    }, o.show()
                },
                _stopTimer(e, t) {
                    e[t] && (a.logger.trace("bracket-match-timers: stopping timer for " + t), e[t].domNode.hide(), delete e[t])
                },
                _startGameTimerTicker(e) {
                    a.logger.trace("bracket-match-timers: starting match timers");
                    const t = e => {
                        Object.keys(e).forEach((t => {
                            const n = e[t];
                            n.time++, n.domNode.text((e => {
                                if (e > 7200) return "";
                                const t = Math.floor(e / 3600);
                                e %= 3600;
                                const n = String(Math.floor(e / 60)).padStart(2, "0"),
                                    a = String(e % 60).padStart(2, "0");
                                return t > 0 ? `${t}:${n}:${a}` : `${n}:${a}`
                            })(n.time))
                        }))
                    };
                    this.set("gameTimersTickerInstance", setInterval((() => t(e)), 1e3))
                },
                _stopGameTimerTicker() {
                    a.logger.trace("bracket-match-timers: stopping match timers");
                    const e = this.get("gameTimersTickerInstance");
                    clearInterval(e), this.set("gameTimersTickerInstance", null);
                    const t = this.get("gameTimers");
                    Object.keys(t).forEach((e => {
                        delete t[e]
                    })), this.set("gameTimers", {})
                },
                _updateGameTimerTicker(e) {
                    const t = this.get("gameTimersTickerInstance");
                    Object.keys(e).length > 0 && !t ? this._startGameTimerTicker(e) : !Object.keys(e).length && t && this._stopGameTimerTicker()
                },
                onWillDestroyElement: a.Ember.on("willDestroyElement", (function() {
                    const e = this._getVisibleArea(!0);
                    P(e) && e.scrollLeft(500), this._bracketAnimation && (a.logger.trace("bracket-layout destroyed, calling bracket anim cleanup..."), this._bracketAnimation.cleanup(), this._bracketAnimation = null), this._stopGameTimerTicker()
                })),
                isLosersBracketObserver: a.Ember.on("didInsertElement", a.Ember.computed("isLosersBracket", (function() {
                    if (this.get("isEog")) return;
                    const e = this.get("isLosersBracket");
                    this._showBracket(e, {
                        useAnimation: !0,
                        useHorizontalScroll: !0
                    });
                    const t = e ? "up" : "down";
                    this.set("bracketSwitchButtonImgUp", `/fe/lol-clash/assets/images/buttons/button-${t}arrow.png`), this.set("bracketSwitchButtonImgOver", `/fe/lol-clash/assets/images/buttons/button-${t}arrow-over.png`), this.set("bracketSwitchButtonImgDown", `/fe/lol-clash/assets/images/buttons/button-${t}arrow-down.png`), this.set("bracketSwitchButtonImgDisabled", `/fe/lol-clash/assets/images/buttons/button-${t}arrow-disabled.png`)
                }))),
                targetRoundObserver: a.Ember.computed("targetRound", (function() {
                    if (this.get("isEog")) return;
                    const e = this.get("targetRound");
                    this._centerOnRound(e)
                })),
                isNotEog: a.Ember.computed.not("isEog"),
                isScrollAnimating: a.Ember.computed.and("currentScrollAnimationFrame", "isNotEog"),
                hasLosersMatches: a.Ember.computed("bracket.version", (function() {
                    return (this.get("bracket.matches") || []).find((e => e.hasValidRoster() && 1 !== e.highestPossiblePosition))
                })),
                bracketObserver: a.Ember.computed("bracket.version", "localPlayerRosterId", "bracket.matches.@each.forfeitRosterId", (function() {
                    const e = this.get("bracket"),
                        t = this.get("localPlayerRosterId");
                    if (e && t) {
                        if (!this.get("currentBracket")) {
                            const t = this.get("oldBracket");
                            if (t) {
                                a.logger.trace("bracket-layout -- initialized with oldBracket, will play any anims from oldBracket->bracket immediately");
                                const e = this.get("localPlayerRosterId"),
                                    n = this.get("bracket"),
                                    s = t.findCurrentMatch(e),
                                    i = n.findCurrentMatch(e),
                                    o = this.get("isEog");
                                return this.set("isFirstRoundLoss", o && r.default.isFirstRoundLoss(s, i)), this._updateBracketData(t), this.set("oldBracket", null), void this._tryPlayAnimation()
                            }
                            return a.logger.trace("bracket-layout -- updating currentBracket with initial data"), void this._updateBracketData(e)
                        }
                        this._tryPlayAnimation()
                    }
                })),
                _domUpdate(e) {
                    if (!this.get("currentBracket")) return void a.logger.trace("bracket-layout -- _domUpdate -- no currentBracket");
                    a.logger.trace("bracket-layout -- _domUpdate -- ok -- initial ", e);
                    const t = this.get("isLosersBracket"),
                        n = this.get("currentBracket.matches"),
                        s = this.get("currentBracket.size"),
                        i = this.get("isEog");
                    i || this._showBracket(t, {
                        useAnimation: !1,
                        useHorizontalScroll: !e
                    }), this._updateScrollbars(), this._getLinesWrapper(!1).empty(), this._getLinesWrapper(!0).empty(), this._updateBracketLines(n, 1), this._updateBracketLines(n, s / 2 + 1), e && (this._updateTimerElements(n, s), this.set("timerElementsInitialized", !0)), !i && this.get("timerElementsInitialized") && this._updateTimers(n, s), this._toggleTimersWrapperDisplay(!i), i || this._updateBracketButton(), this._updateBracketConnectorLines(n, s, 1), this._updateBracketConnectorLines(n, s, s / 2 + 1), s > 4 && (this._updateMatchThirdPlaceLines(n, 1), this._updateMatchThirdPlaceLines(n, s / 2 + 1)), this._centerOnRound(this.get("targetRound"), !1, e)
                },
                _updateBracketData(e, t = !1) {
                    if (a.logger.trace("bracket-layout -- _updateBracketData"), !e) return;
                    const n = e.cloneBracketData();
                    let s = n.get("matches");
                    if (!s) return;
                    const i = n.get("size") || 0;
                    if (this.get("isEog") && !t && s.length > 0) {
                        const e = this.get("localPlayerRosterId"),
                            t = s.find((e => 1 === e.highestPossiblePosition && 2 === e.lowestPossiblePosition));
                        t && t.hasRosterId(e) && (a.logger.trace("bracket-layout -- isEog and local roster is in finals, deleting other matches..."), s = [t], n.set("matches", s), this.set("isEogFinals", !0));
                        const o = s.find((e => 3 === e.highestPossiblePosition && 4 === e.lowestPossiblePosition && i > 4));
                        o && o.hasRosterId(e) && this.set("isEogAndInThirdPlaceMatch", !0)
                    }
                    this.set("currentBracket", n);
                    for (let e = 1; e < i; e += 2) this._calculateLayout(s, i, e);
                    this._domUpdate()
                },
                _calculateLayout(e, t, n) {
                    const s = [];
                    if (e.forEach((e => {
                            e.highestPossiblePosition === n && s.push(e)
                        })), !s) return;
                    const o = s.length + 1;
                    let r = !1;
                    for (let e = 0; e < s.length; ++e) {
                        const t = s[e],
                            n = this.get("localPlayerRosterId"),
                            a = t.hasRosterId(n);
                        if (t.hasLocalRoster = a, t.lowestPossiblePosition - t.highestPossiblePosition == 1) continue;
                        const i = t.order + 1 >= (t.lowestPossiblePosition - t.highestPossiblePosition + 1) / 2;
                        !r && i && a && (r = !0)
                    }
                    r ? a.logger.trace("player is on right, bracket display will be flipped") : a.logger.trace("player is already on left side of bracket, will not flip");
                    const l = i.default.get(o, r);
                    if (!l) return void a.logger.error("error updating bracket layout: unknown match layout type: ", o);
                    const c = this.get("isEog"),
                        d = this.get("isEogAndInThirdPlaceMatch"),
                        m = n > t / 2,
                        u = {
                            x: Number.MAX_SAFE_INTEGER,
                            y: Number.MAX_SAFE_INTEGER
                        },
                        p = {
                            x: -Number.MAX_SAFE_INTEGER,
                            y: -Number.MAX_SAFE_INTEGER
                        };
                    if (s.forEach((e => {
                            const n = e.lowestPossiblePosition - e.highestPossiblePosition == 1 && 1 === e.highestPossiblePosition;
                            e.lowestPossiblePosition - e.highestPossiblePosition != 1 && (e.nextMatch = s.find((t => t.round === e.round + 1 && t.highestPossiblePosition === e.highestPossiblePosition && t.order === Math.floor(e.order / 2))), e.nextLosersMatch = s.find((t => t.round === e.round + 1 && Math.floor(e.lowestPossiblePosition - e.highestPossiblePosition) + e.highestPossiblePosition === t.highestPossiblePosition && t.order === Math.floor(e.order / 2)))), e.set("isFinals", n), e.set("isEog", c);
                            const a = Math.min(Math.pow(2, Math.log2(t) - e.round) + e.order - 1, l.length - 1),
                                i = l[a];
                            if (e.css = {
                                    position: "absolute",
                                    left: 0,
                                    top: 0,
                                    width: !n || c && !d ? b : y,
                                    height: !n || c && !d ? x : k
                                }, e.nextMatch) {
                                const t = {
                                        x: e.nextMatch.css.left + .5 * e.nextMatch.css.width,
                                        y: e.nextMatch.css.top + .5 * e.nextMatch.css.height
                                    },
                                    n = {
                                        x: i.usePixelOffsetX ? i.x : i.x * e.nextMatch.css.width,
                                        y: i.usePixelOffsetY ? i.y : i.y * e.nextMatch.css.height
                                    };
                                e.css.left = t.x + n.x - .5 * e.css.width, e.css.top = t.y + n.y - .5 * e.css.height
                            } else e.css.left = i.x, e.css.top = i.y;
                            u.x = Math.min(u.x, e.css.left), u.y = Math.min(u.y, e.css.top), p.x = Math.max(p.x, e.css.left + e.css.width), p.y = Math.max(p.y, e.css.top + e.css.height)
                        })), a.logger.trace("bracket-layout -- size after matches - x/y", {
                            x: p.x - u.x,
                            y: p.y - u.y
                        }), 1 === n || n === t / 2 + 1) {
                        {
                            const e = p.y - u.y,
                                t = this.get("isEog") ? 0 : 74,
                                n = .5 * (this._getVisibleSize().y - t - e);
                            let a = .5 * this._getVisibleSize().x - .5 * b;
                            this.get("isFirstRoundLoss") && (m ? a += I : a -= I), u.x -= a, u.y -= n, p.x += a, this._bracketContentPadding = {
                                left: a,
                                top: n
                            }
                        }
                        a.logger.trace("bracket-layout -- size after padding - x/y", {
                            x: p.x - u.x,
                            y: p.y - u.y
                        });
                        for (let e = 0; e < s.length; ++e) {
                            const t = s[e];
                            t.css.left -= u.x, t.css.top -= u.y;
                            if (this.get("isEogFinals")) {
                                const e = 45;
                                t.css.top += .5 * t.css.height - e
                            }
                            const n = t.get("round"),
                                a = t.css.left - this._bracketContentPadding.left;
                            this._setRoundScrollPosition(n, m, a), 0 === e && this._setRoundScrollPosition("finals", m, a), t.set("calculatedCss", t.css)
                        } {
                            const e = this.get("roundScrollPositions");
                            a.logger.trace("roundScrollPositions set to ", e), p.x -= u.x, p.y = this._getVisibleSize().y;
                            const t = `width: ${p.x}px; height: ${p.y}px;`,
                                n = (m ? "losers" : "winners") + "BracketContentStyle";
                            this.set(n, t), a.logger.trace("bracket-layout -- key bracketContentStyle", {
                                key: n,
                                bracketContentStyle: t
                            })
                        }
                    } else {
                        const a = n - 2,
                            i = e.filter((e => e.highestPossiblePosition === a)),
                            o = Math.log2(t - a + 1),
                            r = .5 * this._getVisibleSize().x - .5 * b + 1.6 * b * (o - 1),
                            l = this.get("isEog") ? 2 * x - 10 : x + (1 === a ? 10 : 50);
                        s.forEach((e => {
                            const t = i.find((t => t.round === e.round));
                            e.css.left = t && t.css ? t.css.left : r, e.css.top = t && t.css ? t.css.top + t.css.height + l : 360, e.set("calculatedCss", e.css)
                        }))
                    }
                },
                _tryPlayAnimation() {
                    this.element ? (this.set("playAnimsOnInsertElement", !1), Promise.all([a.Util.waitForElement(this.element, E, {
                        subtree: !0
                    }), a.Util.waitForElement(this.element, S, {
                        subtree: !0
                    })]).then((e => {
                        a.logger.trace("bracket-layout -- attempting to play anims after rendered required content elements", e), this._internalPlayAnimation()
                    }))) : this.set("playAnimsOnInsertElement", !0)
                },
                _internalPlayAnimation() {
                    const e = this.get("bracket");
                    if (!this.get("useAnimations")) return a.logger.trace("bracket layout updating immediately as it does not use animations"), void this._updateBracketData(e);
                    if (!this._bracketAnimation) {
                        const e = e => {
                                e && (this._scrollOptions = {
                                    durationMs: .001
                                });
                                const t = this._getVisibleArea();
                                if (P(t)) {
                                    const e = t.scrollLeft();
                                    this._animateScroll(e, I)
                                }
                                a.logger.trace("bracket-layout -- clearRound1Offset")
                            },
                            t = (e, t) => {
                                this._scrollOptions = t || {}, t.isInstant && (this._scrollOptions.durationMs = .001);
                                const n = this.get("isLosersBracket");
                                void 0 !== t.isLosers && t.isLosers !== n && this.set("isLosersBracket", t.isLosers), a.logger.trace("bracket-layout -- setTargetRound from anim -- ", {
                                    round: e,
                                    isLosersBracket: this.get("isLosersBracket"),
                                    scrollOptions: t
                                }), this.set("targetRound", e);
                                this._centerOnRound(e, !0)
                            },
                            n = (e, t) => {
                                if (this.get("isLosersBracket") === e) return;
                                this.set("isLosersBracket", e);
                                const n = !(t = t || {}).isInstant,
                                    s = t.isInstant ? .001 : t.verticalDuration,
                                    {
                                        easing: i
                                    } = t,
                                    o = {
                                        useAnimation: n,
                                        useHorizontalScroll: !1,
                                        verticalDuration: s,
                                        easing: i
                                    };
                                a.logger.trace("bracket-layout -- setIsLosersBracket from anim --", {
                                    isLosersBracket: e,
                                    options: t,
                                    showBracketOptions: o
                                }), this._showBracket(e, o)
                            },
                            i = this._createPlayerBracketConnectorLine.bind(this),
                            o = e => this.get("isEogFinals") ? 0 : this._getRoundScrollPosition(e),
                            r = () => this._getLosersAnchor(),
                            l = {
                                layout: this.$(),
                                winners: this._getBracketContent(!1),
                                losers: this._getBracketContent(!0)
                            },
                            c = this.get("tra"),
                            d = this.get("localPlayerRosterId"),
                            m = this.get("tournamentNameLocKey");
                        this._bracketAnimation = new s.default(l, c, m, d, {
                            setTargetRound: t,
                            setIsLosersBracket: n,
                            clearRound1Offset: e,
                            createPlayerBracketConnectorLine: i,
                            getRoundScroll: o,
                            getLosersBracketAdjustment: r
                        })
                    }
                    if (this.get("isAnimationInProgress")) a.logger.trace("bracket-layout -- received bracket update but animation is in progress, queueing update");
                    else {
                        a.logger.trace("bracket-layout -- received bracket update, triggering animation...");
                        const e = this.get("currentBracket"),
                            t = this.get("bracket"),
                            n = this.get("totalAnimDuration"),
                            s = this._bracketAnimation.playAnimation(e, t, this._getVideos(), n).then((e => {
                                if (!this._bracketAnimation) return;
                                e ? a.logger.trace("bracket-layout -- bracket anim finished, updating bracket data...") : a.logger.trace("bracket-layout -- no anim was necessary, updating bracket data...");
                                const t = this.get("bracket");
                                this._updateBracketData(t, !e)
                            }));
                        a.Util.setBoolDuringPromise(s, this, "isAnimationInProgress")
                    }
                },
                _getVideos() {
                    const e = e => {
                        const t = this.$(e);
                        return P(t) ? t.get(0) : null
                    };
                    return this._updateScrollbars(), {
                        checkmark: {
                            visibleSize: this._getVisibleSize(),
                            video: e(".clash-bracket-win-mark-video.win")
                        },
                        xmark: {
                            visibleSize: this._getVisibleSize(),
                            video: e(".clash-bracket-win-mark-video.loss")
                        }
                    }
                },
                _getVisibleSize() {
                    return this.get("isEog") ? _ : f
                },
                _updateScrollbars() {
                    const e = this._getVisibleArea(!1),
                        t = this._getVisibleArea(!0);
                    P(e) && P(t) && (e.perfectScrollbar("update"), t.perfectScrollbar("update"))
                },
                _showBracket(e, t) {
                    void 0 === (t = t || {}).useHorizontalScroll && (t.useHorizontalScroll = !0), a.logger.trace("bracket-layout -- showBracket", {
                        isLosersBracket: e,
                        options: t
                    });
                    const n = this.$(".visible-area"),
                        s = this._getVisibleArea(!1),
                        i = this._getVisibleArea(!0);
                    if (P(n) && P(s) && P(i)) {
                        const o = this.get("showBracketAnimTimer");
                        a.Ember.run.cancel(o), this.set("showBracketAnimTimer", null), this._cancelAnimation();
                        const r = this._getRoundScrollPositions(!1).finals,
                            l = this._getLosersAnchor();
                        let c = Promise.resolve();
                        if (t.useHorizontalScroll)
                            if (e) {
                                const e = s.scrollLeft(),
                                    n = e - l;
                                i.scrollLeft(n), i.perfectScrollbar("update"), t.useAnimation && (e < l ? c = this._animateScroll(e, l, !1) : e > r && (c = this._animateScroll(e, r, !1)))
                            } else {
                                const e = i.scrollLeft() + l;
                                s.scrollLeft(e), s.perfectScrollbar("update")
                            } this.set("isAnimationPaused", !0), this._updateBracketButton(), t.useAnimation ? c.then((() => {
                            this.set("triggerAnimIsLosers", e);
                            const s = t.verticalDuration || 300,
                                i = t.easing || "ease-in-out",
                                o = `transform ${s}ms ${i}`;
                            a.logger.trace("BracketAnimation -- transition", o);
                            const r = [];
                            e ? r.push({
                                transition: o,
                                transform: "translate(0%, -100%)"
                            }) : r.push({
                                transition: o,
                                transform: ""
                            });
                            const l = t => {
                                if (r[t]) {
                                    n.css(r[t]);
                                    const e = a.Ember.run.later(l.bind(null, t + 1), s + 50);
                                    this.set("showBracketAnimTimer", e)
                                } else {
                                    this.set("isAnimationPaused", !1), this.set("showBracketAnimTimer", null);
                                    const t = this.get("targetRound");
                                    e && this.attrs.selectRound && 1 === t ? this.attrs.selectRound(2) : this._isRoundTargeted(t) || this._centerOnRound(t)
                                }
                            };
                            l(0)
                        })) : (this.set("triggerAnimIsLosers", e), e ? n.css("transform", "translateY(-100%)") : n.css("transform", ""), this.set("isAnimationPaused", !1))
                    }
                },
                _getVisibleArea(e) {
                    return e = void 0 === e ? this.get("isLosersBracket") : e, this.$(e ? ".visible-area.losers" : ".visible-area.winners")
                },
                _getBracketContent(e) {
                    return e = void 0 === e ? this.get("isLosersBracket") : e, this.$(e ? S : E)
                },
                _getBracketContentPadding(e, t) {
                    return this._bracketContentPadding[t] || 0
                },
                _getMatchesWrapper(e) {
                    return this.$(e ? ".matches-wrapper.losers" : ".matches-wrapper.winners")
                },
                _getLinesWrapper(e) {
                    return this.$(e ? ".lines-wrapper.losers" : ".lines-wrapper.winners")
                },
                _getTimersWrapper(e) {
                    return this.$(e ? ".timers-wrapper.losers" : T)
                },
                _toggleTimersWrapperDisplay(e) {
                    e ? this.$(T).show() : this.$(T).hide()
                },
                _getRoundScrollPositions(e) {
                    return this.get("roundScrollPositions")[(void 0 === e ? this.get("isLosersBracket") : e) ? "losers" : "winners"]
                },
                _getRoundScrollPosition(e) {
                    return this._getRoundScrollPositions()[e] || 0
                },
                _getLosersAnchor() {
                    return this._getRoundScrollPositions(!1)[2] || 0
                },
                _isRoundTargeted(e) {
                    const t = this._getRoundScrollPosition(e);
                    if (!a.Util.isNumberOk(t)) return !1;
                    const n = this._getVisibleArea(),
                        s = P(n) ? n.scrollLeft() : 0;
                    return s > t - 200 && s < t + 200
                },
                _onScroll(e, t) {
                    this._updateBracketButton();
                    const n = this.get("isLosersBracket");
                    if (n !== e) return;
                    if (this.attrs.onScrollChanged) {
                        const e = this._getBracketContent(!1),
                            s = this._getVisibleArea(!1);
                        if (e && s) {
                            const i = e.outerWidth() - s.innerWidth();
                            let o = t.currentTarget.scrollLeft;
                            n && (o += this._getLosersAnchor()), this.attrs.onScrollChanged(a.Util.clamp01(o / i))
                        }
                    }
                    if (!this.get("isScrollAnimating") && this.attrs.selectRound) {
                        const e = this._getRoundScrollPositions();
                        for (const t of Object.keys(e))
                            if (this._isRoundTargeted(t)) {
                                this.attrs.selectRound(parseInt(t));
                                break
                            }
                    }
                },
                _getBracketConnectorX() {
                    const e = this._getRoundScrollPositions(!1)[2] || 0;
                    return this._bracketContentPadding.left + .5 * (b + e)
                },
                _updateBracketButton() {
                    const e = this.$(".bracket-button-horizontal"),
                        t = this.get("triggerAnimIsLosers"),
                        n = this._getVisibleArea(t);
                    if (!P(e) || !P(n)) return;
                    const a = this._getBracketConnectorX(),
                        s = n.scrollLeft();
                    let i = Math.max(a - s - 15 + 1, 15);
                    t && (i = Math.max(i - this._getLosersAnchor() + 1, 15)), e.css("transform", `translateX(${i}px)`)
                },
                _centerOnRound(e, t = !1, n = !1) {
                    if (this.get("isEog") && !t) return;
                    if (!this.element || !a.Util.isNumberOk(e) || e < 1) return;
                    if (!this.get("isScrollAnimating") && this._isRoundTargeted(e)) return;
                    const s = this._getRoundScrollPosition(e);
                    if (a.Util.isNumberOk(s)) {
                        a.logger.trace(`centering on round ${e} with scrollPosition ${s}, isInstant:`, n);
                        const t = this._getVisibleArea(),
                            i = P(t);
                        if (n && i) t.scrollLeft(s), t.perfectScrollbar("update");
                        else if (i) {
                            const e = t.scrollLeft();
                            this._animateScroll(e, s)
                        }
                    } else a.logger.error(`cannot center on round with no scroll position: ${e}`)
                },
                _animateScroll(e, t, n) {
                    if (this.get("isAnimationPaused")) return Promise.resolve();
                    if (!a.Util.isNumberOk(e) || !a.Util.isNumberOk(t)) return Promise.resolve();
                    n = void 0 === n ? this.get("isLosersBracket") : n, a.logger.trace(`bracket-layout -- _animateScroll from ${e} to ${t}, isLosers? [${n}], scrollOptions:`, this._scrollOptions), this._cancelAnimation();
                    return new Promise(((s, i) => {
                        let r;
                        const l = () => {
                                const e = requestAnimationFrame(r);
                                this.set("currentScrollAnimationFrame", e)
                            },
                            c = () => {
                                this.set("currentScrollAnimationFrame", 0), s()
                            },
                            d = C++;
                        this.set("currentAnimationId", d);
                        let m = {};
                        this._scrollOptions && (m = this._scrollOptions, this._scrollOptions = null);
                        const u = m.durationMs || .5 * Math.abs(e - t),
                            p = this._getVisibleArea(n);
                        let h = null;
                        r = n => {
                            if (this.get("currentAnimationId") !== d || 0 === this.get("currentScrollAnimationFrame")) return void i();
                            null === h && (h = n);
                            const s = m.easing || (0, o.default)(0, 0, .57, 1),
                                r = (n - h) / u,
                                g = a.Util.lerp(e, t, s(a.Util.clamp01(r)));
                            P(p) && (p.scrollLeft(g), p.perfectScrollbar("update")), r < 1 ? l() : c()
                        }, l()
                    })).catch((e => {
                        a.logger.error("bracket-layout -- _animateScroll error inside promise:", e)
                    }))
                },
                _cancelAnimation() {
                    const e = this.get("currentScrollAnimationFrame");
                    0 !== e && (cancelAnimationFrame(e), this.set("currentAnimationId", -1))
                },
                _updateTimerElements(e, t) {
                    if (e && e.length)
                        for (const n of e) this._updateTimerElement(n, t)
                },
                _updateTimerElement(e, t) {
                    if (!e || !e.nextMatch) return;
                    const n = e.get("highestPossiblePosition") > t / 2,
                        s = this._getTimersWrapper(n);
                    if (P(s) && !e.timer) {
                        const t = a.Util.createDomNode(g({
                            gameId: e.get("id")
                        }));
                        e.timer = this.$(t).appendTo(s), e.timer.css({
                            left: e.css.left + 280,
                            top: e.css.top + 15
                        }), e.timer.hide()
                    }
                },
                _updateBracketLines(e, t) {
                    const n = [];
                    if (e.forEach((e => {
                            e.highestPossiblePosition === t && n.push(e)
                        })), n && n.length)
                        for (const e of n) this._updateBracketLine(e, t)
                },
                _updateBracketLine(e, t) {
                    const n = 1 !== t,
                        s = this._getLinesWrapper(n);
                    if (!e || !e.nextMatch || !P(s)) return;
                    const i = e.css.left < e.nextMatch.css.left,
                        o = {
                            left: e.css.left + (i ? e.css.width : 0),
                            top: e.css.top + .5 * e.css.height
                        },
                        r = {
                            left: e.nextMatch.css.left + (i ? 0 : e.nextMatch.css.width),
                            top: e.nextMatch.css.top + .5 * e.nextMatch.css.height
                        };
                    let l = r.top - o.top < 0;
                    r.left - o.left < 0 && (l = !l);
                    const c = R(Math.max(Math.abs(r.left - o.left), 1)) + 2,
                        d = R(Math.max(Math.abs(r.top - o.top), 1)) + 2,
                        u = `0 0 ${c} ${d}`;
                    let p = l ? "M0,100 L50,100 L50,0 L100,0" : "M0,0 L50,0 L50,100 L100,100";
                    if (o.top === r.top && (p = "M0,0 L100,0"), p = a.Util.denormalizeSvgPath(p, c, d), e.bracketLine) e.bracketLine.attr("viewbox", u), e.bracketLine.find("path").attr("d", p);
                    else {
                        const t = a.Util.createDomNode(m({
                            viewbox: u,
                            d: p
                        }));
                        e.bracketLine = this.$(t).appendTo(s)
                    }
                    e.bracketLine.width(c), e.bracketLine.height(d), e.bracketLine.css({
                        left: Math.round(Math.min(o.left, r.left)) - 1,
                        top: Math.round(Math.min(o.top, r.top)) - 1
                    });
                    const h = e.hasLocalRoster && e.nextMatch && e.nextMatch.hasLocalRoster;
                    this._toggleLineLocalStyle(e.bracketLine, h)
                },
                _toggleLineLocalStyle(e, t) {
                    e.length && (t ? e.get(0).classList.add("local") : e.get(0).classList.remove("local"))
                },
                _updateBracketConnectorLines(e, t, n) {
                    const s = [];
                    if (e.forEach((e => {
                            e.highestPossiblePosition === n && s.push(e)
                        })), !s.length) return;
                    const i = s.length + 1,
                        o = 1 !== n,
                        r = this._getLinesWrapper(o),
                        l = {
                            losersLines: []
                        },
                        c = {
                            viewbox: "0 0 2 100",
                            d: "M0,0 L0,100"
                        },
                        d = {
                            viewbox: "0 0 100 2",
                            d: "M0,0 L100,0"
                        },
                        m = a._.filter(e, (e => 2 === e.get("round") && e.get("highestPossiblePosition") === t / 2 + 1)),
                        u = !!a._.find(m, (e => e.hasLocalRoster)),
                        p = this.get("isEog"),
                        g = this.get("isFirstRoundLoss");
                    if (o) {
                        const e = R(this._getBracketConnectorX() - this._getLosersAnchor());
                        let t = -1,
                            n = null,
                            a = null;
                        {
                            let s = 0;
                            for (; s < m.length; ++s) {
                                let i = null;
                                if (l.losersLines.length > s) i = l.losersLines[s];
                                else {
                                    const e = this._createBracketConnectorLine(d);
                                    i = this.$(e).appendTo(r), l.losersLines.push(i)
                                }
                                const o = m[s],
                                    c = R(o.css.top + .5 * x),
                                    u = Math.max(R(o.css.left - e) - 1, 1),
                                    p = 0 === s || o.hasLocalRoster,
                                    h = p ? e : e + 1,
                                    g = p ? u + 1 : u;
                                i.css({
                                    left: h,
                                    top: c,
                                    width: g,
                                    height: 1
                                }), o.hasLocalRoster && (t = c, a = o), (!n || o.css.top > n.css.top) && (n = o)
                            }
                            for (; s < l.losersLines.length;) l.losersLines[s].remove(), l.losersLines.splice(s, 1)
                        }
                        let s = 0;
                        if (t > 0) {
                            if (!l.losersConnectorTop) {
                                const e = this._createBracketConnectorLine(c);
                                l.losersConnectorTop = this.$(e).appendTo(r)
                            }
                            s = t, l.losersConnectorTop.css({
                                left: e,
                                top: 0,
                                height: s,
                                width: 1
                            })
                        } else l.losersConnectorTop && (l.losersConnectorTop.remove(), l.losersConnectorTop = null);
                        {
                            let a = 0,
                                s = 0;
                            if (t > 0 ? (a = t, s = n.css.top + .5 * x - t) : (a = 0, s = n.css.top + .5 * x), !l.losersConnectorBot) {
                                const e = this._createBracketConnectorLine(c);
                                l.losersConnectorBot = this.$(e).appendTo(r)
                            }
                            l.losersConnectorBot.css({
                                left: e,
                                top: a,
                                height: s,
                                width: 1
                            })
                        }
                        u && this._createPlayerBracketConnectorLine(a, !0)
                    } else if (!p || g) {
                        if (4 === i && l.winnersMidline) l.winnersMidline.remove(), l.winnersMidline = null;
                        else if (4 !== i && !l.winnersMidline) {
                            const e = a.Util.createDomNode(h(c));
                            l.winnersMidline = this.$(e).appendTo(r)
                        }
                        if (!l.winnersConnectorTop) {
                            const e = a.Util.createDomNode(h(c));
                            l.winnersConnectorTop = this.$(e).appendTo(r)
                        }
                        if (!l.winnersConnectorBot) {
                            const e = this._createBracketConnectorLine(c);
                            l.winnersConnectorBot = this.$(e).appendTo(r)
                        }
                        let e = R(this._getBracketConnectorX());
                        g && (e -= 440);
                        const t = a._.filter(s, (e => 1 === e.get("round")));
                        let n = a._.reduce(t, ((e, t) => e + t.css.top), 0);
                        n = n / t.length + .5 * x;
                        let d = null,
                            m = null;
                        {
                            let t = null,
                                a = null;
                            for (const i of s) !i.css || i.css.left > e || (i.hasLocalRoster && (m = i), i.css.top < n ? (!t || i.css.top > t.css.top) && (t = i) : ((!a || i.css.top < a.css.top) && (a = i), (!d || i.css.top > d.css.top) && (d = i)));
                            if (l.winnersMidline && t && t.css && a && a.css) {
                                const n = t.css.top + .5 * x,
                                    s = a.css.top - t.css.top;
                                l.winnersMidline.css({
                                    left: e,
                                    top: n,
                                    height: s,
                                    width: 1
                                })
                            }
                        }
                        if (d && d.css) {
                            const t = this._getBracketContent(o),
                                n = R(d.css.top + .5 * x),
                                a = 110,
                                s = R(t.outerHeight() - n - a),
                                i = n + s;
                            l.winnersConnectorTop.css({
                                left: e,
                                top: n,
                                height: s,
                                width: 1
                            }), l.winnersConnectorBot.css({
                                left: e,
                                top: i,
                                height: a,
                                width: 1
                            })
                        }
                        u && this._createPlayerBracketConnectorLine(m, !1)
                    }
                },
                _updateMatchThirdPlaceLines(e, t) {
                    const n = e.find((e => e.highestPossiblePosition === t + 2 && e.lowestPossiblePosition - e.highestPossiblePosition == 1));
                    if (!n) return;
                    const s = 1 !== t,
                        i = this._getLinesWrapper(s),
                        o = n.hasLocalRoster;
                    if (o) {
                        const s = e.find((e => e.highestPossiblePosition === t && e.lowestPossiblePosition === n.lowestPossiblePosition && e.round === n.round - 1 && e.hasLocalRoster));
                        if (!s) return;
                        const r = s.css.top + .5 * s.css.height,
                            l = s.css.left + s.css.width,
                            c = R(Math.max(Math.abs(n.css.left - l), 1)) + 2,
                            d = R(Math.max(Math.abs(n.css.top + .5 * s.css.height - r), 1)),
                            u = `0 0 ${c} ${d}`;
                        let p = "M0,0 L50,0 L50,100 L100,100";
                        p = a.Util.denormalizeSvgPath(p, c, d);
                        const h = a.Util.createDomNode(m({
                                viewbox: u,
                                d: p
                            })),
                            g = this.$(h);
                        g.appendTo(i), g.css({
                            left: l - 1,
                            top: r - 1,
                            width: c,
                            height: d
                        }), this._toggleLineLocalStyle(g, o)
                    } else {
                        const s = e.find((e => e.highestPossiblePosition === t && e.lowestPossiblePosition === n.lowestPossiblePosition && e.round === n.round - 1 && 1 === e.order));
                        if (!s) return;
                        const o = s.css.top + .5 * s.css.height,
                            r = s.css.left + s.css.width,
                            l = R(Math.max(Math.abs(n.css.left - r), 1)) + 2,
                            c = R(Math.max(Math.abs(n.css.top + .5 * s.css.height - o), 1)) + 2,
                            d = `0 0 ${l} ${c}`;
                        let m = "M50,0 L50,100 L100,100";
                        m = a.Util.denormalizeSvgPath(m, l, c);
                        const p = a.Util.createDomNode(u({
                                viewbox: d,
                                d: m
                            })),
                            h = this.$(p);
                        h.appendTo(i), h.css({
                            left: r,
                            top: o,
                            width: l - 2,
                            height: c - 1
                        })
                    }
                },
                _createBracketConnectorLine: e => a.Util.createDomNode(p(e)),
                _createPlayerBracketConnectorLine(e, t, n = {}) {
                    const s = (e, n, s) => {
                            a.logger.trace("applying fudge", {
                                isLosers: t,
                                css: e,
                                width: n,
                                height: s
                            }), n && (e.left -= n, e.width += 2 * n), s && (e.top -= s, e.height += 2 * s)
                        },
                        i = {
                            position: "absolute"
                        },
                        o = this._getLinesWrapper(t),
                        r = R(this._getBracketConnectorX() - this._getLosersAnchor());
                    if (t) {
                        i.top = 0, i.left = r, i.width = Math.max(R(e.css.left - r) - 1, 1), i.height = R(e.css.top + .5 * x), a.logger.trace("_createPlayerBracketConnectorLine", {
                            isLosers: t,
                            x: r,
                            css: i
                        }), s(i, n.fudgeWidth || 2, n.fudgeHeight || 2);
                        const l = {
                                viewbox: `0 0 ${i.width} ${i.height}`,
                                d: a.Util.denormalizeSvgPath("M0,0 L0,100 L100,100", i.width, i.height)
                            },
                            c = this._createBracketConnectorLine(l),
                            d = this.$(c);
                        return d.appendTo(o), d.css(i), this._toggleLineLocalStyle(d, !0), d
                    } {
                        i.top = R(e.css.top + .5 * e.css.height), i.left = R(e.css.left + e.css.width), i.width = n.isEog ? R(r - i.left) : R(this._getBracketConnectorX() - i.left), i.height = R(_.y - i.top), a.logger.trace("_createPlayerBracketConnectorLine", {
                            isLosers: t,
                            x: r,
                            css: i
                        }), s(i, n.fudgeWidth || 2, n.fudgeHeight || 1);
                        const l = {
                                viewbox: `0 0 ${i.width} ${i.height}`,
                                d: a.Util.denormalizeSvgPath("M0,0 L100,0 L100,100", i.width, i.height)
                            },
                            c = this._createBracketConnectorLine(l),
                            d = this.$(c);
                        return d.appendTo(o), d.css(i), this._toggleLineLocalStyle(d, !0), d
                    }
                },
                _setRoundScrollPosition(e, t, n) {
                    const a = this._getRoundScrollPositions(t),
                        s = a[e];
                    (void 0 === s || s > n) && (a[e] = n)
                },
                actions: {
                    toggleBracket() {
                        const e = this.get("isLosersBracket");
                        this.attrs.selectBracket(e ? "winners" : "losers")
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = n(9),
                i = r(n(96)),
                o = r(n(3));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const l = {
                    currentConsolation: n(136),
                    currentLose: n(137),
                    currentWin: n(138),
                    currentWinFinals: n(139),
                    extraEmpty: n(140),
                    extraOtherTeams: n(141),
                    extraPastRound: n(142),
                    finalsLoss: n(143),
                    finalsOppKnown: n(144),
                    finalsOppUnknown: n(145),
                    nextOppKnown: n(146),
                    nextOppUnknown: n(147),
                    matchupIntroWin: n(148),
                    matchupIntroLoss: n(149),
                    dashes: n(150),
                    trophyAppear: n(151)
                },
                c = "brackets-checkmark",
                d = "brackets-xmark",
                m = "brackets-consolation",
                u = "brackets-finals-lose",
                p = "brackets-finals-win",
                h = "brackets-nextcell-known",
                g = "brackets-finals-nextunknown",
                f = "brackets-match-lose",
                _ = "brackets-match-win",
                b = "brackets-matchup-intro",
                x = "brackets-trophy-celebration",
                y = Object.freeze({
                    leftLogoRootPath: ["assets", 0, "u"],
                    leftLogoPath: ["assets", 0, "p"],
                    rightLogoRootPath: ["assets", 1, "u"],
                    rightLogoPath: ["assets", 1, "p"],
                    leftShortName: ["layers", 1, "t", "d", "k", 0, "s", "t"],
                    rightShortName: ["layers", 3, "t", "d", "k", 0, "s", "t"]
                }),
                k = Object.freeze({
                    leftLogoRootPath: ["assets", 0, "u"],
                    leftLogoPath: ["assets", 0, "p"],
                    leftShortName: ["layers", 0, "t", "d", "k", 0, "s", "t"]
                }),
                v = Object.freeze(a._.assign({
                    waitingText: ["layers", 2, "t", "d", "k", 0, "s", "t"]
                }, k)),
                E = a._.assign({}, y, {
                    leftShortName: ["layers", 0, "t", "d", "k", 0, "s", "t"],
                    rightShortName: ["layers", 2, "t", "d", "k", 0, "s", "t"]
                }),
                S = Object.freeze({
                    imagesPath: ["assets", 2, "u"],
                    localLogoRootPath: ["assets", 1, "u"],
                    localLogoPath: ["assets", 1, "p"],
                    opponentLogoRootPath: ["assets", 0, "u"],
                    opponentLogoPath: ["assets", 0, "p"],
                    localName: ["layers", 6, "t", "d", "k", 0, "s", "t"],
                    localShortName: ["layers", 7, "t", "d", "k", 0, "s", "t"],
                    opponentName: ["layers", 4, "t", "d", "k", 0, "s", "t"],
                    opponentShortName: ["layers", 5, "t", "d", "k", 0, "s", "t"]
                }),
                T = Object.freeze({
                    gradientRootPath: ["assets", 0, "u"],
                    sheenRootPath: ["assets", 2, "u"],
                    trophyRootPath: ["assets", 1, "u"],
                    trophyPath: ["assets", 1, "p"],
                    tournamentChampionLoc: ["layers", 4, "t", "d", "k", 0, "s", "t"],
                    bracketNameLoc: ["layers", 5, "t", "d", "k", 0, "s", "t"]
                }),
                w = Object.freeze({
                    currentConsolation: y,
                    currentLose: y,
                    currentWin: y,
                    currentWinFinals: y,
                    extraEmpty: y,
                    extraOtherTeams: y,
                    extraPastRound: y,
                    finalsLoss: y,
                    finalsOppKnown: E,
                    finalsOppUnknown: v,
                    nextOppKnown: E,
                    nextOppUnknown: k,
                    matchupIntroWin: S,
                    matchupIntroLoss: S,
                    dashes: {
                        imagesPath: ["assets", 0, "u"]
                    },
                    trophyAppear: T
                }),
                I = "#f4b71a";

            function C(e) {
                const t = a.Ember.$(document.createElement("div"));
                return t.css({
                    position: "absolute",
                    left: 0,
                    top: -60,
                    right: 0,
                    bottom: -60,
                    overflow: "hidden"
                }), t.appendTo(e), t
            }

            function R(e, t, n, s = {}) {
                a.logger.trace("playing video on match at position", {
                    videoName: n,
                    matchCss: t
                });
                const i = s.type || "intro",
                    o = s.signal || 0,
                    r = s.fadeIn || 0,
                    l = s.fadeOut || 0;
                void 0 === s.playImmediately && (s.playImmediately = !0);
                const c = `<lol-uikit-video class="clash-bracket-video" type="${i}"\n    signal-before-end="${o}" fade-in="${r}" fade-out="${l}"\n    src="/fe/lol-clash/assets/animations/videos/brackets/${n}.webm" preload></lol-uikit-video>`;
                let d = null;
                d = null === t ? C(e) : A(t, e), d.append(c);
                const m = d.find(".clash-bracket-video").get(0),
                    u = () => d.remove();
                return m.addEventListener("done", u), s.playImmediately && m && m.play(), {
                    cleanup: u,
                    video: m
                }
            }

            function P(e, t, n, s) {
                a.logger.trace("BracketAnimation -- playing animation at matchCss with variables", {
                    animName: n,
                    matchCss: t,
                    lottieVariables: s
                });
                let i = null;
                if (null === t) {
                    const t = C(e);
                    t.attr({
                        "anim-name": n
                    }), i = t.get(0)
                } else i = A(t, e).get(0);
                const o = a._.cloneDeep(l[n]);
                if (!o) return void a.logger.error(`no animation by the name ${n}`);
                ! function(e, t, n) {
                    const s = w[t];
                    if (!s) return void a.logger.error("BracketAnimation.setLottieVariable -- no variables specified for animation", t);
                    a.logger.trace("BracketAnimation.setLottieVariable -- setting lottie variables for animation name", t), a.LottieAnim.setLottieVariables(e, s, n)
                }(o, n, s);
                const r = a.Ember.$(document.createElement("div"));
                r.addClass("clash-bracket-animation"), r.css({
                    width: `${o.w}px`,
                    height: `${o.h}px`
                }), r.appendTo(i);
                const c = a.lottie.loadAnimation({
                    container: r.get(0),
                    renderer: "svg",
                    loop: !1,
                    autoplay: !1,
                    animationData: o
                });
                return c && c.play(), {
                    targetElement: i,
                    lottie: c,
                    cleanup: () => {
                        c.destroy(), a.Ember.$(i).remove()
                    }
                }
            }

            function L(e, t, n = !0) {
                const s = a.Ember.$(e);
                let i = s;
                n && (i = s.clone(!0));
                const o = i.find("path");
                if (o && o.length) {
                    const e = o.get(0).getTotalLength();
                    return o.attr({
                        "stroke-dasharray": e,
                        "stroke-dashoffset": e
                    }), o.css(t), i.css({
                        opacity: 1
                    }), i.appendTo(s.parent()), o.get(0)
                }
                return null
            }

            function A(e, t) {
                const n = document.createElement("div"),
                    s = a.Ember.$(n);
                return s.css(e), s.appendTo(t), s
            }

            function B(e, t) {
                return t.find((t => t.get("id") === e))
            }

            function D(e) {
                return a.logger.trace("BracketAnimation -- playAudio sfx, id", e), a.AudioManager.playAudio(e), {
                    cleanup: () => a.AudioManager.stopAudio(e)
                }
            }
            t.default = class {
                constructor(e, t, n, a, s) {
                    this._$elements = e, this._tra = t, this._localPlayerRosterId = a, this._tournamentLocKey = n, this._bracketLayoutCommands = s, this._isAnimating = !1, this._initializeAssets(), this._initializeConfigs()
                }
                _initializeAssets() {
                    this._assetsPromise = Promise.all([(0, a.dataBinding)("/lol-game-data").get("/assets/v1/summoner-trophies.json"), (0, a.dataBinding)("/lol-game-data").get("assets/v1/generic-assets.json")]), this._assetsPromise.then((e => {
                        const [t, n] = e;
                        this._trophiesGameData = t, this._logosGameData = n ? n["clash-logos"] : {}
                    }))
                }
                _initializeConfigs() {
                    this._isBracketFinalsAnimEnabled = !0, this._configsPromise = (0, a.dataBinding)("/lol-platform-config").get("/v1/namespaces/ClashConfig/BracketFinalsAnimEnabled"), this._configsPromise.then((e => {
                        this._isBracketFinalsAnimEnabled = !1 !== e
                    }))
                }
                cleanup() {
                    if (this._isAnimating = !1, this._timeline && (a.logger.trace("BracketAnimation -- cleanup: kill _timeline"), this._timeline.kill(), this._timeline = null), this._anims) {
                        a.logger.trace("BracketAnimation -- cleanup: cleanup _anims");
                        for (const e of this._anims) e && e.cleanup && e.cleanup();
                        this._anims = null
                    }
                    this._animResolve && (a.logger.trace("BracketAnimation -- cleanup: resolve anim promise"), this._animResolve(), this._animResolve = null)
                }
                playAnimation(e, t, n, r) {
                    if (!e) return a.logger.error("BracketAnimation -- ***ERROR*** NO oldBracket DATA"), Promise.resolve();
                    if (!t) return a.logger.error("BracketAnimation -- ***ERROR*** NO newBracket DATA"), Promise.resolve();
                    const l = () => {
                        const e = a.gsap.TweenLite.to(this._$elements.winners.get(0), .5, {
                                opacity: 1
                            }),
                            t = a.gsap.TweenLite.to(this._$elements.losers.get(0), .5, {
                                opacity: 1
                            });
                        e && e.play(), t && t.play()
                    };
                    return a.logger.trace("BracketAnimation -- playAnimation, videos:", n), a.logger.trace("BracketAnimation -- playAnimation, elements:", {
                        layout: this._$elements.layout,
                        winners: this._$elements.winners,
                        losers: this._$elements.losers
                    }), Promise.all([this._configsPromise, this._assetsPromise]).then((() => new Promise(((y, k) => {
                        const v = this._isBracketFinalsAnimEnabled,
                            E = e.get("matches"),
                            S = t.get("matches"),
                            T = e.findCurrentMatch(this._localPlayerRosterId),
                            w = t.findCurrentMatch(this._localPlayerRosterId);
                        if (!T || w && T.get("id") === w.get("id") && T.get("status") === w.get("status")) return a.logger.trace("BracketAnimation -- determined no anim necessary", {
                            prevMatch: T,
                            newMatch: w
                        }), l(), void y(!1);
                        const C = e => a.Util.compareRosterIds(e, s.MATCH_ROSTER_BYE_ID) ? a.Ember.Object.create({
                                id: s.MATCH_ROSTER_BYE_ID,
                                logoId: 0,
                                logoColorId: 0,
                                name: this._tra.get("clash_bracket_match_bye"),
                                shortName: this._tra.get("clash_bracket_match_bye_short_name")
                            }) : null,
                            A = e => {
                                if (!e || e.get("id") === s.MATCH_ROSTER_BYE_ID) return "/fe/lol-clash/assets/images/bye.png";
                                const t = e.get("logoId"),
                                    n = e.get("logoColorId");
                                return this._logosGameData && a.Util.isNumberOk(t) && a.Util.isNumberOk(n) ? this._logosGameData[`logo_${t}_${n}`] : ""
                            },
                            O = T.get("rosterId1"),
                            N = T.get("rosterId2"),
                            M = w ? w.get("rosterId1") : s.INVALID_ROSTER_ID,
                            G = w ? w.get("rosterId2") : s.INVALID_ROSTER_ID;
                        let F = null,
                            U = null,
                            V = null;
                        if (a.Util.compareRosterIds(this._localPlayerRosterId, O) ? (F = T.get("roster1"), U = T.get("roster2") || C(N)) : (F = T.get("roster2"), U = T.get("roster1") || C(O)), !F) return void k("no local roster on prevMatch");
                        w && (V = a.Util.compareRosterIds(this._localPlayerRosterId, M) ? w.get("roster2") || C(G) : w.get("roster1") || C(M));
                        const j = B(T.get("id"), S),
                            H = w ? B(w.get("id"), E) : null,
                            W = j.get("winnerId"),
                            $ = T && T.get("isFinals") && !T.get("isLosersBracket"),
                            q = T && T.get("isFinals"),
                            Y = w && w.get("isFinals") && !w.get("isLosersBracket"),
                            z = a.Util.compareRosterIds(W, this._localPlayerRosterId),
                            K = !!U && a.Util.compareRosterIds(W, U.get("id"));
                        a.logger.trace("BracketAnimation -- isWin, isLoss", {
                            isWin: z,
                            isLoss: K
                        }), a.logger.trace("BracketAnimation -- anim data prevMatch / newMatch", {
                            prevMatch: T,
                            newMatch: w
                        }), a.logger.trace("BracketAnimation -- anim data localRoster / prevOppRoster / newOppRoster", {
                            localRoster: F,
                            prevOppRoster: U,
                            newOppRoster: V
                        }), a.logger.trace("BracketAnimation -- anim data localRosterId / winnerId / prevMatchIsFinals / newMatchIsFinals", {
                            _localPlayerRosterId: this._localPlayerRosterId,
                            winnerId: W,
                            prevMatchIsFinals: $,
                            newMatchIsFinals: Y
                        });
                        const X = {
                                rightLogoRootPath: "",
                                leftLogoRootPath: "",
                                leftLogoPath: A(F),
                                rightLogoPath: A(U),
                                leftShortName: F.get("shortName").toUpperCase(),
                                rightShortName: U ? U.get("shortName").toUpperCase() : "",
                                waitingText: this._tra.get("clash_bracket_animation_text_waiting")
                            },
                            Q = {
                                rightLogoRootPath: "",
                                leftLogoRootPath: "",
                                leftLogoPath: A(F),
                                rightLogoPath: A(V),
                                leftShortName: F.get("shortName").toUpperCase(),
                                rightShortName: V ? V.get("shortName").toUpperCase() : "",
                                waitingText: this._tra.get("clash_bracket_animation_text_waiting")
                            },
                            Z = {
                                imagesPath: "/fe/lol-clash/assets/animations/lottie/brackets/matchup_intro/images/",
                                localLogoRootPath: "",
                                opponentLogoRootPath: "",
                                localLogoPath: A(F),
                                opponentLogoPath: A(U),
                                localName: F.get("name").toUpperCase(),
                                localShortName: F.get("shortName").toUpperCase(),
                                opponentName: U ? U.get("name").toUpperCase() : "",
                                opponentShortName: U ? U.get("shortName").toUpperCase() : ""
                            },
                            J = e.get("size"),
                            ee = T.get("round"),
                            te = 3 === T.get("highestPossiblePosition") && 4 !== J,
                            ne = T.get("isLosersBracket") && !te,
                            ae = ne ? this._bracketLayoutCommands.getLosersBracketAdjustment() : 0,
                            se = this._bracketLayoutCommands.getRoundScroll(ee),
                            ie = i.default.isFirstRoundLoss(T, w);
                        a.logger.trace("BracketAnimation -- prevMatchIsLosersContainer adjustment scroll", {
                            prevMatchIsInLosersBracketContainer: ne,
                            adjustment: ae,
                            scroll: se
                        });
                        const oe = {
                                x: T.css.left + .5 * T.css.width + ae - (ie ? 0 : se),
                                y: T.css.top + .5 * T.css.height
                            },
                            re = new a.gsap.TimelineLite,
                            le = new a.gsap.TimelineLite,
                            ce = new a.gsap.TimelineLite;
                        re.add(le, 0), re.add(ce, 3.3), this._animResolve = () => y(!0), this._anims = [], this._isAnimating = !0;
                        const de = e => {
                                const t = {
                                        position: "absolute",
                                        left: e ? 700 : 180,
                                        top: 80,
                                        width: 400,
                                        height: 400
                                    },
                                    n = R(this._$elements.layout, t, "slash_FX");
                                this._anims.push(n)
                            },
                            me = (e, t, n) => {
                                const s = e.video;
                                if (!s) return void a.logger.error("BracketAnimation -- missing mark video");
                                const i = {
                                        x: .5 * e.visibleSize.x,
                                        y: .5 * e.visibleSize.y
                                    },
                                    o = n ? .07 : .12;
                                a.logger.trace("BracketAnimation -- *mark startPoint", i), ce.set(s, a._.assign({
                                    scale: .85
                                }, i), 0).add((() => {
                                    const e = a.Ember.$(s).parent();
                                    e.parent().append(e), s && s.play(), this._anims.push(D(t))
                                }), 0).to(s, .43, {
                                    scale: 1,
                                    ease: a.Util.cubicBezier(.36, 0, 0, 0)
                                }, 1.13).to(s, .47, a._.assign({
                                    scale: o,
                                    ease: a.Util.cubicBezier(1, 0, .67, 0)
                                }, oe), 1.57).to(s, .15, {
                                    opacity: 0
                                }, 2.45)
                            },
                            ue = (e, t = 0) => {
                                t += .05, ce.add((() => {
                                    if (a.logger.trace("BracketAnimation -- addNewMatchToTimeline", {
                                            newMatch: w,
                                            preupdateNewMatch: H,
                                            newMatchIsFinals: Y,
                                            newOppRoster: V
                                        }), w && H) {
                                        const t = Y ? V ? "finalsOppKnown" : "finalsOppUnknown" : V ? "nextOppKnown" : "nextOppUnknown",
                                            n = P(e, H.css, t, Q);
                                        H.set("hasBracketAnim", !0), this._anims.push(n);
                                        const a = Y ? g : h;
                                        this._anims.push(D(a))
                                    }
                                }), t).add((() => {
                                    if (H) {
                                        const t = Y ? "cell_finals_magicBurst" : "cell_nextMatch_magicHit",
                                            n = R(e, H.css, t);
                                        this._anims.push(n)
                                    }
                                }), t + (Y ? 2.4 : .8))
                            },
                            pe = () => {
                                if (w) {
                                    const e = {
                                        durationMs: 1270,
                                        easing: (0, o.default)(1, 0, 0, 1),
                                        isLosers: ne
                                    };
                                    ce.add((() => this._bracketLayoutCommands.setTargetRound(w.get("round"), e)), 2.6)
                                }
                            };
                        this._bracketLayoutCommands.setIsLosersBracket(ne, {
                            isInstant: !0
                        }), this._bracketLayoutCommands.setTargetRound(ee, {
                            isInstant: !0
                        }), (z || K) && ce.to(this._$elements.winners.get(0), .73, {
                            opacity: 1
                        }, .27).to(this._$elements.losers.get(0), .73, {
                            opacity: 1
                        }, .27);
                        const he = ne ? this._$elements.losers : this._$elements.winners;
                        if (z) {
                            if (le.add((() => {
                                    const e = P(this._$elements.layout, null, "matchupIntroWin", Z);
                                    this._anims.push(e), this._anims.push(D(b))
                                }), 0).add((() => de(!0)), 1.95), n.checkmark.video ? me(n.checkmark, c, !0) : a.logger.error("BracketAnimation -- no checkmark video!"), ce.add((() => {
                                    const e = $ ? "currentWinFinals" : "currentWin",
                                        t = P(he, T.css, e, X);
                                    T.set("hasBracketAnim", !0), this._anims.push(t), this._anims.push(D($ ? p : _)), $ && (v ? a.Ember.run.later((() => {
                                        if (this._isAnimating && this._anims) {
                                            t.cleanup();
                                            const e = this._anims.findIndex((e => e === t));
                                            this._anims.splice(e, 1)
                                        }
                                    }), 4170) : a.Ember.run.later((() => {
                                        t && t.lottie && t.lottie.pause()
                                    }), 3500))
                                }), 0).add((() => {
                                    const e = R(he, T.css, "cell_win_magicHit");
                                    this._anims.push(e)
                                }), 1.99), q) {
                                v && ce.add((() => {
                                    const t = e.get("size");
                                    let n = "";
                                    switch (t) {
                                        case 4:
                                            n = "trophyCelebration_blue";
                                            break;
                                        case 8:
                                            n = "trophyCelebration_purple";
                                            break;
                                        case 16:
                                            n = "trophyCelebration_orange";
                                            break;
                                        default:
                                            return void k(`BracketAnimation -- unknown bracket size ${t}, no trophy anim!`)
                                    }
                                    const a = R(this._$elements.layout, null, n, {
                                        signal: .5
                                    });
                                    this._anims.push(a), this._anims.push(D(x)), a.video.addEventListener("signal", (() => {
                                        if (this._isAnimating) {
                                            const e = R(this._$elements.layout, null, "trophyCelebration_loop", {
                                                type: "loop",
                                                playImmediately: !1
                                            });
                                            this._anims.push(e), setTimeout((() => {
                                                if (this._isAnimating) {
                                                    e.video && e.video.play();
                                                    const t = this._$elements.layout.find(".bracket-animation-trophy-appear");
                                                    t.parent().append(t)
                                                }
                                            }), .5)
                                        }
                                    }))
                                }), 3);
                                const t = e.get("size"),
                                    n = "loc_key" === this._tournamentLocKey ? "pilot" : this._tournamentLocKey;
                                ce.add((() => {
                                    let e = null;
                                    if (v) {
                                        if (this._trophiesGameData && this._trophiesGameData.Trophies) {
                                            const s = a._.find(this._trophiesGameData.Trophies, (function(e) {
                                                return e.theme.toLowerCase() === n.toLowerCase() && String(e.bracket) === String(t)
                                            }));
                                            e = a._.get(s, "profileIcon", "") || null
                                        }
                                        e || (e = `fe/lol-clash/assets/placeholder/trophies/${t}.png`), a.logger.trace("BracketAnimation -- trophyPath", e)
                                    } else e = "/fe/lol-clash/assets/images/1x1_transparent.png";
                                    const s = {
                                            gradientRootPath: "/fe/lol-clash/assets/animations/lottie/brackets/trophy/images/",
                                            sheenRootPath: "/fe/lol-clash/assets/animations/lottie/brackets/trophy/images/",
                                            trophyRootPath: "",
                                            trophyPath: e,
                                            tournamentChampionLoc: this._tra.get(16 === t ? "clash_eog_celebration_tournament_champion" : "clash_eog_celebration_bracket_champion"),
                                            bracketNameLoc: this._tra.formatString("clash_eog_celebration_team_bracket", {
                                                size: t
                                            })
                                        },
                                        i = P(this._$elements.layout, null, "trophyAppear", s);
                                    this._anims.push(i), a.Ember.$(i.targetElement).addClass("bracket-animation-trophy-appear")
                                }), v ? 5.57 : 3).add((() => {
                                    let e = null;
                                    switch (t) {
                                        case 4:
                                            e = `fem1-win-open-bracket-${n}`;
                                            break;
                                        case 8:
                                            e = `fem1-win-winners-bracket-${n}`;
                                            break;
                                        case 16:
                                            e = `fem1-win-champ-bracket-${n}`
                                    }
                                    a.clashVO && a.clashVO.play(e, "fem1-win-bracket-generic")
                                }), v ? 6.5 : 3.5)
                            } else if (Y ? (ce.add((() => {
                                    const e = P(he, H.css, "dashes", {
                                        imagesPath: "/fe/lol-clash/assets/animations/lottie/brackets/dashes/images/"
                                    });
                                    this._anims.push(e)
                                }), 3.4), ue(he)) : ue(he, 3), pe(), T.bracketLine) {
                                let e = L(T.bracketLine, {
                                    stroke: I,
                                    "stroke-width": 4
                                });
                                if (e) {
                                    const t = a.Util.cubicBezier(0, 0, .67, 1);
                                    ce.to(e, .97, {
                                        "stroke-dashoffset": 0,
                                        ease: t
                                    }, 2.8), ce.to(e, .63, {
                                        "stroke-dashoffset": -e.getTotalLength()
                                    }, 3.5)
                                }
                                if (e = L(T.bracketLine, {
                                        stroke: "#16cae5",
                                        "stroke-width": 2
                                    }), e) {
                                    const t = a.Util.cubicBezier(0, 0, 0, 1);
                                    ce.to(e, .63, {
                                        "stroke-dashoffset": 0,
                                        ease: t
                                    }, 3.5)
                                }
                            }
                            a.logger.trace("BracketAnimation -- finished setting up WIN timelines")
                        } else if (K) {
                            if (le.add((() => {
                                    const e = P(this._$elements.layout, null, "matchupIntroLoss", Z);
                                    this._anims.push(e), this._anims.push(D(b))
                                }), 0).add((() => de(!1)), 1.95), n.xmark.video ? me(n.xmark, d, !1) : a.logger.error("BracketAnimation -- no xmark video!"), ce.add((() => {
                                    const e = $ ? "finalsLoss" : "currentLose",
                                        t = P(he, T.css, e, X);
                                    T.set("hasBracketAnim", !0), this._anims.push(t);
                                    const n = ie ? m : $ ? u : f;
                                    this._anims.push(D(n))
                                }), 0), a.logger.trace("BracketAnimation -- loss prevMatch newMatch", {
                                    isFirstRoundLoss: ie,
                                    prevMatch: T,
                                    newMatch: w
                                }), ie) {
                                ce.add((() => {
                                    const e = {
                                        durationMs: 1270,
                                        easing: (0, o.default)(1, 0, 0, 1)
                                    };
                                    this._bracketLayoutCommands.setIsLosersBracket(!0, {
                                        isInstant: !1,
                                        verticalDuration: 1530,
                                        easing: "cubic-bezier(0.66, 0, 0, 1)"
                                    }), this._bracketLayoutCommands.setTargetRound(w.get("round"), e)
                                }), 4.47), ce.add((() => this._bracketLayoutCommands.clearRound1Offset()), 6.4), ue(this._$elements.losers, 6.2);
                                const e = {
                                    fudgeWidth: 6,
                                    isEog: !0
                                };
                                {
                                    let t = this._bracketLayoutCommands.createPlayerBracketConnectorLine(T, !1, e);
                                    t.get(0).classList.add("debug-anim-winners-dashed");
                                    let n = L(t, {
                                        stroke: "#fff",
                                        "stroke-width": 1
                                    }, !1);
                                    if (n) {
                                        const e = a.Util.cubicBezier(.1, 0, .71, 1);
                                        ce.to(n, 1.03, {
                                            "stroke-dashoffset": 0,
                                            ease: e
                                        }, 3.07)
                                    }
                                    if (t = this._bracketLayoutCommands.createPlayerBracketConnectorLine(T, !1, e), t.get(0).classList.add("debug-anim-winners-yellow"), n = L(t, {
                                            stroke: I,
                                            "stroke-width": 4
                                        }, !1), n) {
                                        const e = a.Util.cubicBezier(.01, 0, .41, 1);
                                        ce.to(n, .9, {
                                            "stroke-dashoffset": 0,
                                            ease: e
                                        }, 4.47)
                                    }
                                    const s = this._bracketLayoutCommands.createPlayerBracketConnectorLine(H, !0, {
                                        isEog: !0
                                    });
                                    if (s.get(0).classList.add("debug-anim-losers"), n = L(s, {
                                            stroke: I,
                                            "stroke-width": 4
                                        }, !1), n) {
                                        let e = a.Util.cubicBezier(.77, -.02, .99, 1);
                                        ce.to(n, .73, {
                                            "stroke-dashoffset": 0,
                                            ease: e
                                        }, 5.37), e = a.Util.cubicBezier(.7, 0, .99, 1), ce.to(n, 1.03, {
                                            "stroke-dashoffset": -n.getTotalLength(),
                                            ease: e
                                        }, 5.43)
                                    }
                                }
                            } else w && (ue(he, 3), pe());
                            a.logger.trace("BracketAnimation -- finished setting up LOSS timelines")
                        } else a.logger.warning("BracketAnimation -- trying to play animation with no win or loss...?"), l();
                        re.add((() => {
                            a.logger.trace("BracketAnimation -- complete!"), this.cleanup()
                        }), r), re.getChildren().length > 0 ? (re.play(), this._timeline = re) : (k("unable to find an animation to play"), a.logger.error("unable to find an animation to play"))
                    })))).catch((e => (a.logger.error("BracketAnimation -- ***ERROR*** ", e), l(), !1)))
                }
            }
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.6","fr":30,"ip":600,"op":900,"w":500,"h":400,"nm":"CurrentCell","ddd":0,"assets":[{"id":"image_0","w":200,"h":187,"u":"images/","p":"img_0.png"},{"id":"image_1","w":182,"h":200,"u":"images/","p":"img_1.png"},{"id":"comp_36","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"player_logo.png","cl":"png","refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[100,93.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":900,"st":0,"bm":0}]},{"id":"comp_37","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"opponent_logo.png","cl":"png","refId":"image_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[91,100,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":600,"st":0,"bm":0}]}],"fonts":{"list":[{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold","fName":"BeaufortforLOL-Bold","ascent":71.6988770291209}]},"layers":[{"ddd":0,"ind":8,"ty":4,"nm":"red_X 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[213.5,171,0],"ix":2},"a":{"a":0,"k":[-36.844,-27.421,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-91.953,-82.356],[-101.125,-73.03],[-83.167,-54.918],[-100.894,-36.652],[-91.645,-27.404],[-73.688,-45.593],[-55.73,-27.327],[-46.25,-36.729],[-64.208,-54.687],[-46.558,-72.799],[-55.73,-81.893],[-73.688,-64.013]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[-74.344,-54.421],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p667_1_0p167_0p167","0p667_1_0p167_0p167"],"t":661,"s":[35,35],"e":[25,25]},{"t":677}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":661,"s":[1,1,1,1],"e":[0.717647075653,0.156862750649,0.156862750649,1]},{"t":677}],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":661,"op":900,"st":600,"bm":0},{"ddd":0,"ind":9,"ty":5,"nm":"ABC 3","parent":10,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":733,"s":[100],"e":[0]},{"t":751}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":659,"s":[336,124,0],"e":[316,124,0],"to":[0,0,0],"ti":[0,0,0]},{"t":668}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"ABC","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.98,0.75,0.04]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":600,"op":900,"st":600,"bm":0},{"ddd":0,"ind":10,"ty":0,"nm":"player_logo","refId":"comp_36","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":661,"s":[100],"e":[100]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.167],"y":[0]},"n":["0p667_1_0p167_0"],"t":673,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":733,"s":[100],"e":[0]},{"t":751}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":659,"s":[132.5,197.5,0],"e":[145.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.167,"y":0.167},"n":"0p667_0p667_0p167_0p167","t":668,"s":[145.5,197.5,0],"e":[145.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":733,"s":[145.5,197.5,0],"e":[152.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":751}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[0,0,0,0],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":661,"s":[0],"e":[50]},{"t":673}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":600,"op":900,"st":600,"bm":0},{"ddd":0,"ind":11,"ty":5,"nm":"XYZ 3","parent":12,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":659,"s":[100],"e":[0]},{"t":668}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":659,"s":[-129,124,0],"e":[-113,124,0],"to":[0,0,0],"ti":[0,0,0]},{"t":668}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"XYZ","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":600,"op":900,"st":600,"bm":0},{"ddd":0,"ind":12,"ty":0,"nm":"opponent_logo","refId":"comp_37","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":659,"s":[100],"e":[0]},{"t":668}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":659,"s":[368.5,197.5,0],"e":[356.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":668}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"w":200,"h":200,"ip":600,"op":900,"st":600,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"currentCell 3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,199,0],"ix":2},"a":{"a":0,"k":[-465.5,-46,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-138.417,31.083],[138.875,31.083]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[1],"y":[0]},"n":["0p833_1_1_0"],"t":642,"s":[0],"e":[0]},{"t":661,"s":[0],"h":1},{"i":{"x":[0.999],"y":[1.001]},"o":{"x":[1],"y":[0]},"n":["0p999_1p001_1_0"],"t":716,"s":[0],"e":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":733,"s":[0],"e":[100]},{"t":751}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":642,"s":[50],"e":[0]},{"t":661,"s":[0],"h":1},{"i":{"x":[0.999],"y":[0.999]},"o":{"x":[1],"y":[0]},"n":["0p999_0p999_1_0"],"t":716,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[1]},"o":{"x":[1],"y":[0]},"n":["0p833_1_1_0"],"t":733,"s":[100],"e":[100]},{"t":751}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.956862747669,0.717647075653,0.101960785687,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,2.5],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"baseLine","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-138.417,31.083],[138.875,31.083]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":642,"s":[50],"e":[0]},{"t":661,"s":[0],"h":1},{"t":716,"s":[0],"h":1}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[1],"y":[0]},"n":["0p833_1_1_0"],"t":642,"s":[50],"e":[50]},{"t":661,"s":[50],"h":1},{"t":716,"s":[50],"h":1},{"t":733,"s":[0],"h":1}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.717647075653,0.156862750649,0.156862750649,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,2.5],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"baseLine_red","np":3,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[276,62],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[30,30],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_03","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":45,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"diamond","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,114.25],[-464.563,124.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,166],[-464.563,176.25]],"c":false},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"vertLines","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[465.5,-146],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"interior","np":2,"cix":2,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[-465.5,-46],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0_1_0p167_0p167","0_1_0p167_0p167"],"t":659,"s":[120,120],"e":[100,100]},{"t":668}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"cell_01","np":5,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gf","o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":660,"s":[0],"e":[80]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":661,"s":[80],"e":[0]},{"t":675}],"ix":10},"r":1,"g":{"p":3,"k":{"a":0,"k":[0,0.549,0.071,0.071,0.5,0.333,0.104,0.114,1,0.118,0.137,0.157],"ix":9}},"s":{"a":0,"k":[-468,-58],"ix":5},"e":{"a":0,"k":[-613,5],"ix":6},"t":2,"h":{"a":0,"k":0,"ix":7},"a":{"a":0,"k":0,"ix":8},"nm":"Gradient Fill 1","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"fl","c":{"a":0,"k":[0.117647059262,0.137254908681,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":600,"op":900,"st":600,"bm":0}],"markers":[{"tm":0,"cm":"win","dr":299},{"tm":300,"cm":"lose","dr":299},{"tm":600,"cm":"consolation","dr":299},{"tm":900,"cm":"winFinals","dr":299}]}')
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.6","fr":30,"ip":300,"op":600,"w":500,"h":400,"nm":"CurrentCell","ddd":0,"assets":[{"id":"image_0","w":200,"h":187,"u":"images/","p":"img_0.png"},{"id":"image_1","w":182,"h":200,"u":"images/","p":"img_1.png"},{"id":"comp_34","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"player_logo.png","cl":"png","refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[100,93.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":900,"st":0,"bm":0}]},{"id":"comp_35","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"opponent_logo.png","cl":"png","refId":"image_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[91,100,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":600,"st":0,"bm":0}]}],"fonts":{"list":[{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold","fName":"BeaufortforLOL-Bold","ascent":71.6988770291209}]},"layers":[{"ddd":0,"ind":14,"ty":4,"nm":"red_X","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[213.5,171,0],"ix":2},"a":{"a":0,"k":[-36.844,-27.421,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-91.953,-82.356],[-101.125,-73.03],[-83.167,-54.918],[-100.894,-36.652],[-91.645,-27.404],[-73.688,-45.593],[-55.73,-27.327],[-46.25,-36.729],[-64.208,-54.687],[-46.558,-72.799],[-55.73,-81.893],[-73.688,-64.013]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[-74.344,-54.421],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p667_1_0p167_0p167","0p667_1_0p167_0p167"],"t":361,"s":[35,35],"e":[25,25]},{"t":377}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":361,"s":[1,1,1,1],"e":[0.717647075653,0.156862750649,0.156862750649,1]},{"t":377}],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":361,"op":600,"st":300,"bm":0},{"ddd":0,"ind":15,"ty":5,"nm":"ABC 2","parent":16,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":359,"s":[336,124,0],"e":[316,124,0],"to":[0,0,0],"ti":[0,0,0]},{"t":368}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"ABC","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.98,0.75,0.04]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":300,"op":600,"st":300,"bm":0},{"ddd":0,"ind":16,"ty":0,"nm":"player_logo","refId":"comp_34","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":361,"s":[100],"e":[100]},{"t":373}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":359,"s":[132.5,197.5,0],"e":[145.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":368}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[0,0,0,0],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":361,"s":[0],"e":[50]},{"t":373}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":300,"op":600,"st":300,"bm":0},{"ddd":0,"ind":17,"ty":5,"nm":"XYZ 2","parent":18,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":359,"s":[100],"e":[0]},{"t":368}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":359,"s":[-129,124,0],"e":[-113,124,0],"to":[0,0,0],"ti":[0,0,0]},{"t":368}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"XYZ","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":300,"op":600,"st":300,"bm":0},{"ddd":0,"ind":18,"ty":0,"nm":"opponent_logo","refId":"comp_35","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":359,"s":[100],"e":[0]},{"t":368}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":359,"s":[368.5,197.5,0],"e":[356.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":368}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"w":200,"h":200,"ip":300,"op":600,"st":300,"bm":0},{"ddd":0,"ind":19,"ty":4,"nm":"currentCell 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,199,0],"ix":2},"a":{"a":0,"k":[-465.5,-46,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-138.417,31.083],[138.875,31.083]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":342,"s":[50],"e":[0]},{"t":361,"s":[0],"h":1}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[1],"y":[0]},"n":["0p833_1_1_0"],"t":342,"s":[50],"e":[50]},{"t":361,"s":[50],"h":1}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.717647075653,0.156862750649,0.156862750649,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,2.5],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"baseLine_red","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-138.417,31.083],[138.875,31.083]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[1],"y":[0]},"n":["0p833_1_1_0"],"t":342,"s":[0],"e":[0]},{"t":361,"s":[0],"h":1}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":342,"s":[50],"e":[0]},{"t":361,"s":[0],"h":1}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.956862747669,0.717647075653,0.101960785687,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,2.5],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"baseLine","np":3,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[276,62],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[30,30],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_03","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":45,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"diamond","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,114.25],[-464.563,124.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,166],[-464.563,176.25]],"c":false},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"vertLines","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[465.5,-146],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"interior","np":2,"cix":2,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[-465.5,-46],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0_1_0p167_0p167","0_1_0p167_0p167"],"t":359,"s":[120,120],"e":[100,100]},{"t":368}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"cell_01","np":5,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gf","o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":360,"s":[0],"e":[80]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":361,"s":[80],"e":[0]},{"t":375}],"ix":10},"r":1,"g":{"p":3,"k":{"a":0,"k":[0,0.549,0.071,0.071,0.5,0.333,0.104,0.114,1,0.118,0.137,0.157],"ix":9}},"s":{"a":0,"k":[-468,-58],"ix":5},"e":{"a":0,"k":[-613,5],"ix":6},"t":2,"h":{"a":0,"k":0,"ix":7},"a":{"a":0,"k":0,"ix":8},"nm":"Gradient Fill 1","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"fl","c":{"a":0,"k":[0.117647059262,0.137254908681,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":300,"op":600,"st":300,"bm":0}],"markers":[{"tm":0,"cm":"win","dr":299},{"tm":300,"cm":"lose","dr":299},{"tm":600,"cm":"consolation","dr":299},{"tm":900,"cm":"winFinals","dr":299}]}')
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.6","fr":30,"ip":0,"op":300,"w":500,"h":400,"nm":"CurrentCell","ddd":0,"assets":[{"id":"image_0","w":200,"h":187,"u":"images/","p":"img_0.png"},{"id":"image_1","w":182,"h":200,"u":"images/","p":"img_1.png"},{"id":"comp_32","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"player_logo.png","cl":"png","refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[100,93.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":900,"st":0,"bm":0}]},{"id":"comp_33","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"opponent_logo.png","cl":"png","refId":"image_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[91,100,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":600,"st":0,"bm":0}]}],"fonts":{"list":[{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold","fName":"BeaufortforLOL-Bold","ascent":71.6988770291209}]},"layers":[{"ddd":0,"ind":21,"ty":4,"nm":"checkMark_cell","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[342.5,201.5,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-72.256,-22.547],[-100.178,6.229],[-109.903,-3.325],[-116.5,3.158],[-101.202,18.797],[-66,-16.746]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[-91.25,-1.875],"ix":2},"a":{"a":0,"k":[-91.25,-1.875],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0,0]},"n":["0p667_1_0p167_0","0p667_1_0p167_0"],"t":61,"s":[40,40],"e":[40,40]},{"t":77}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":61,"s":[1,1,1,1],"e":[0.039215687662,0.796078443527,0.901960790157,1]},{"t":77}],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":61,"op":300,"st":0,"bm":0},{"ddd":0,"ind":22,"ty":5,"nm":"ABC","parent":23,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":59,"s":[336,124,0],"e":[316,124,0],"to":[0,0,0],"ti":[0,0,0]},{"t":68}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"ABC","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.98,0.75,0.04]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":23,"ty":0,"nm":"player_logo","refId":"comp_32","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":59,"s":[132.5,197.5,0],"e":[145.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":68}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"w":200,"h":200,"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":24,"ty":5,"nm":"XYZ","parent":25,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":61,"s":[100],"e":[50]},{"t":73}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":59,"s":[-129,124,0],"e":[-113,124,0],"to":[0,0,0],"ti":[0,0,0]},{"t":68}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"XYZ","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":25,"ty":0,"nm":"opponent_logo","refId":"comp_33","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":61,"s":[100],"e":[50]},{"t":73}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":59,"s":[368.5,197.5,0],"e":[356.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":68}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[0,0,0,0],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":61,"s":[0],"e":[80]},{"t":73}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":26,"ty":4,"nm":"currentCell","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,199,0],"ix":2},"a":{"a":0,"k":[-465.5,-46,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-138.417,31.083],[138.875,31.083]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":83,"s":[0],"e":[100]},{"t":98}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0_1_0p333_0"],"t":41,"s":[50],"e":[35]},{"i":{"x":[0.967],"y":[0.822]},"o":{"x":[1],"y":[0]},"n":["0p967_0p822_1_0"],"t":49,"s":[35],"e":[100]},{"t":60}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.956862747669,0.717647075653,0.101960785687,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,2.5],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"baseLine","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[276,62],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[30,30],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_03","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":45,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"diamond","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,114.25],[-464.563,124.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,166],[-464.563,176.25]],"c":false},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"vertLines","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[465.5,-146],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"interior","np":2,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0.115709342062,0.465220421553,0.517647087574,1],"ix":4},"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":60,"s":[0],"e":[30]},{"t":61}],"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-465.5,-46],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0_1_0p167_0p167","0_1_0p167_0p167"],"t":59,"s":[120,120],"e":[100,100]},{"t":68}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"cell_01","np":5,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.117647059262,0.137254908681,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":0,"op":300,"st":0,"bm":0}],"markers":[{"tm":0,"cm":"win","dr":299},{"tm":300,"cm":"lose","dr":299},{"tm":600,"cm":"consolation","dr":299},{"tm":900,"cm":"winFinals","dr":299}]}')
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.6","fr":30,"ip":900,"op":1200,"w":500,"h":400,"nm":"CurrentCell","ddd":0,"assets":[{"id":"image_0","w":200,"h":187,"u":"images/","p":"img_0.png"},{"id":"image_1","w":182,"h":200,"u":"images/","p":"img_1.png"},{"id":"comp_12","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"player_logo.png","cl":"png","refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[100,93.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":900,"st":0,"bm":0}]},{"id":"comp_13","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"opponent_logo.png","cl":"png","refId":"image_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[91,100,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":600,"st":0,"bm":0}]},{"id":"comp_14","layers":[{"ddd":0,"ind":1,"ty":1,"nm":"whiteFlash","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":27,"s":[25],"e":[0]},{"t":31}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[225,105,0],"ix":2},"a":{"a":0,"k":[643,240,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"a","pt":{"a":0,"k":{"i":[[94.441,0],[0,-36.937],[-94.441,0],[0,36.937]],"o":[[-94.441,0],[0,36.937],[94.441,0],[0,-36.937]],"v":[[643,173.12],[472,240],[643,306.88],[814,240]],"c":true},"ix":1},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"sw":1280,"sh":720,"sc":"#ffffff","ip":27,"op":32,"st":-33,"bm":0},{"ddd":0,"ind":2,"ty":0,"nm":"boa_highlight","refId":"comp_15","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[225,100,0],"ix":2},"a":{"a":0,"k":[175,75,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":350,"h":150,"ip":27,"op":93,"st":27,"bm":0},{"ddd":0,"ind":4,"ty":9,"nm":"particular_magic_A_5sec.mov","cl":"mov","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":32,"s":[100],"e":[0]},{"t":68}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[239.5,71,0],"ix":2},"a":{"a":0,"k":[640,360,0],"ix":1},"s":{"a":0,"k":[86.91,86.91,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"a","pt":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[782.102,355.398],[466.832,355.398],[466.832,429.037],[782.102,429.037]],"c":true},"ix":1},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"},{"inv":false,"mode":"s","pt":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[782.677,371.506],[466.256,371.506],[466.256,415.805],[782.677,415.805]],"c":true},"ix":1},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 2"}],"ef":[{"ty":5,"nm":"Curves","np":4,"mn":"ADBE CurvesCustom","ix":1,"en":1,"ef":[{"ty":7,"nm":"Channel:","mn":"ADBE CurvesCustom-0002","ix":1,"v":{"a":0,"k":1,"ix":1}},{}]}],"tm":{"a":1,"k":[{"i":{"x":[0.533],"y":[0.846]},"o":{"x":[0.207],"y":[0.532]},"n":["0p533_0p846_0p207_0p532"],"t":27,"s":[0],"e":[2.7]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.169],"y":[0.18]},"n":["0p833_0p833_0p169_0p18"],"t":52,"s":[2.7],"e":[5]},{"t":121}],"ix":2},"ip":27,"op":177,"st":27,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"rectangle","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":27,"s":[100],"e":[0]},{"t":46}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[225.5,99.5,0],"ix":2},"a":{"a":0,"k":[-465.5,-46,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[276,62],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"Rectangle Path 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0.5,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[-465.5,-46],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Rectangle 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":27,"op":899,"st":-1,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"rectangle 2","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":27,"s":[80],"e":[0]},{"t":42}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[225.5,99.5,0],"ix":2},"a":{"a":0,"k":[-465.5,-46,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[276,62],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"Rectangle Path 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"fl","c":{"a":0,"k":[0.097162626684,0.239583104849,0.305882364511,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-465.5,-46],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Rectangle 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":27,"op":43,"st":-37,"bm":0}]},{"id":"comp_15","layers":[{"ddd":0,"ind":3,"ty":1,"nm":"boa_mask","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[175,75,0],"ix":2},"a":{"a":0,"k":[155.5,51.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"a","pt":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[294,20],[17,20],[17,83],[294,83]],"c":true},"ix":1},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"ef":[{"ty":5,"nm":"Boa","np":262,"mn":"BAO_Boa","ix":1,"en":1,"ef":[{"ty":6,"nm":"Source parameters","mn":"BAO_Boa-0018","ix":1,"v":0},{"ty":10,"nm":"Source","mn":"BAO_Boa-0003","ix":2,"v":{"a":0,"k":2,"ix":2}},{"ty":6,"nm":"Source geometry","mn":"BAO_Boa-0043","ix":3,"v":0},{"ty":7,"nm":"Rotation","mn":"BAO_Boa-0022","ix":4,"v":{"a":0,"k":1,"ix":4}},{"ty":0,"nm":"Source X scale","mn":"BAO_Boa-0025","ix":5,"v":{"a":0,"k":100,"ix":5}},{"ty":0,"nm":"Source Y scale","mn":"BAO_Boa-0026","ix":6,"v":{"a":0,"k":25,"ix":6}},{"ty":0,"nm":"Source crop left","mn":"BAO_Boa-0045","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":0,"nm":"Source crop right","mn":"BAO_Boa-0046","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":0,"nm":"Source crop top","mn":"BAO_Boa-0047","ix":9,"v":{"a":0,"k":0,"ix":9}},{"ty":0,"nm":"Source crop bottom","mn":"BAO_Boa-0048","ix":10,"v":{"a":0,"k":0,"ix":10}},{"ty":6,"nm":"","mn":"BAO_Boa-0044","ix":11,"v":0},{"ty":10,"nm":"Back face source","mn":"BAO_Boa-0042","ix":12,"v":{"a":0,"k":0,"ix":12}},{"ty":0,"nm":"Mesh definition","mn":"BAO_Boa-0001","ix":13,"v":{"a":0,"k":100,"ix":13}},{"ty":0,"nm":"Mesh sub-sampling","mn":"BAO_Boa-0015","ix":14,"v":{"a":0,"k":2,"ix":14}},{"ty":0,"nm":"Twist at start","mn":"BAO_Boa-0011","ix":15,"v":{"a":0,"k":0,"ix":15}},{"ty":0,"nm":"Twist at end","mn":"BAO_Boa-0012","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":0,"nm":"Scale at start","mn":"BAO_Boa-0156","ix":17,"v":{"a":0,"k":100,"ix":17}},{"ty":0,"nm":"Scale at end","mn":"BAO_Boa-0157","ix":18,"v":{"a":0,"k":100,"ix":18}},{"ty":0,"nm":"Reveal start","mn":"BAO_Boa-0023","ix":19,"v":{"a":0,"k":0,"ix":19}},{"ty":0,"nm":"Reveal end","mn":"BAO_Boa-0024","ix":20,"v":{"a":0,"k":100,"ix":20}},{"ty":0,"nm":"Undistorted start","mn":"BAO_Boa-0262","ix":21,"v":{"a":0,"k":0,"ix":21}},{"ty":0,"nm":"Undistorted end","mn":"BAO_Boa-0263","ix":22,"v":{"a":0,"k":100,"ix":22}},{"ty":6,"nm":"","mn":"BAO_Boa-0019","ix":23,"v":0},{"ty":6,"nm":"Mask parameters","mn":"BAO_Boa-0020","ix":24,"v":0},{"ty":10,"nm":"Mask","mn":"BAO_Boa-0004","ix":25,"v":{"a":0,"k":1,"ix":25}},{"ty":0,"nm":"Start point","mn":"BAO_Boa-0005","ix":26,"v":{"a":0,"k":0,"ix":26}},{"ty":7,"nm":"Relative to source width","mn":"BAO_Boa-0049","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":0,"nm":"End point","mn":"BAO_Boa-0006","ix":28,"v":{"a":0,"k":100,"ix":28}},{"ty":7,"nm":"Stretch along path","mn":"BAO_Boa-0008","ix":29,"v":{"a":0,"k":0,"ix":29}},{"ty":0,"nm":"Twist at mask start","mn":"BAO_Boa-0013","ix":30,"v":{"a":0,"k":0,"ix":30}},{"ty":0,"nm":"Twist at mask end","mn":"BAO_Boa-0014","ix":31,"v":{"a":0,"k":0,"ix":31}},{"ty":0,"nm":"Scale at mask start","mn":"BAO_Boa-0158","ix":32,"v":{"a":0,"k":100,"ix":32}},{"ty":0,"nm":"Scale at mask end","mn":"BAO_Boa-0159","ix":33,"v":{"a":0,"k":100,"ix":33}},{"ty":0,"nm":"Reveal at mask start","mn":"BAO_Boa-0027","ix":34,"v":{"a":0,"k":0,"ix":34}},{"ty":0,"nm":"Reveal at mask end","mn":"BAO_Boa-0028","ix":35,"v":{"a":0,"k":100,"ix":35}},{"ty":6,"nm":"Mask Z parameters","mn":"BAO_Boa-0050","ix":36,"v":0},{"ty":0,"nm":"Z at vertex 1","mn":"BAO_Boa-0051","ix":37,"v":{"a":0,"k":0,"ix":37}},{"ty":0,"nm":"Z at vertex 2","mn":"BAO_Boa-0052","ix":38,"v":{"a":0,"k":0,"ix":38}},{"ty":0,"nm":"Z at vertex 3","mn":"BAO_Boa-0053","ix":39,"v":{"a":0,"k":0,"ix":39}},{"ty":0,"nm":"Z at vertex 4","mn":"BAO_Boa-0054","ix":40,"v":{"a":0,"k":0,"ix":40}},{"ty":0,"nm":"Z at vertex 5","mn":"BAO_Boa-0055","ix":41,"v":{"a":0,"k":0,"ix":41}},{"ty":0,"nm":"Z at vertex 6","mn":"BAO_Boa-0056","ix":42,"v":{"a":0,"k":0,"ix":42}},{"ty":0,"nm":"Z at vertex 7","mn":"BAO_Boa-0057","ix":43,"v":{"a":0,"k":0,"ix":43}},{"ty":0,"nm":"Z at vertex 8","mn":"BAO_Boa-0058","ix":44,"v":{"a":0,"k":0,"ix":44}},{"ty":0,"nm":"Z at vertex 9","mn":"BAO_Boa-0059","ix":45,"v":{"a":0,"k":0,"ix":45}},{"ty":0,"nm":"Z at vertex 10","mn":"BAO_Boa-0060","ix":46,"v":{"a":0,"k":0,"ix":46}},{"ty":0,"nm":"Z at vertex 11","mn":"BAO_Boa-0061","ix":47,"v":{"a":0,"k":0,"ix":47}},{"ty":0,"nm":"Z at vertex 12","mn":"BAO_Boa-0062","ix":48,"v":{"a":0,"k":0,"ix":48}},{"ty":0,"nm":"Z at vertex 13","mn":"BAO_Boa-0063","ix":49,"v":{"a":0,"k":0,"ix":49}},{"ty":0,"nm":"Z at vertex 14","mn":"BAO_Boa-0064","ix":50,"v":{"a":0,"k":0,"ix":50}},{"ty":0,"nm":"Z at vertex 15","mn":"BAO_Boa-0065","ix":51,"v":{"a":0,"k":0,"ix":51}},{"ty":0,"nm":"Z at vertex 16","mn":"BAO_Boa-0066","ix":52,"v":{"a":0,"k":0,"ix":52}},{"ty":0,"nm":"Z at vertex 17","mn":"BAO_Boa-0067","ix":53,"v":{"a":0,"k":0,"ix":53}},{"ty":0,"nm":"Z at vertex 18","mn":"BAO_Boa-0068","ix":54,"v":{"a":0,"k":0,"ix":54}},{"ty":0,"nm":"Z at vertex 19","mn":"BAO_Boa-0069","ix":55,"v":{"a":0,"k":0,"ix":55}},{"ty":0,"nm":"Z at vertex 20","mn":"BAO_Boa-0070","ix":56,"v":{"a":0,"k":0,"ix":56}},{"ty":0,"nm":"Z at vertex 21","mn":"BAO_Boa-0071","ix":57,"v":{"a":0,"k":0,"ix":57}},{"ty":0,"nm":"Z at vertex 22","mn":"BAO_Boa-0072","ix":58,"v":{"a":0,"k":0,"ix":58}},{"ty":0,"nm":"Z at vertex 23","mn":"BAO_Boa-0073","ix":59,"v":{"a":0,"k":0,"ix":59}},{"ty":0,"nm":"Z at vertex 24","mn":"BAO_Boa-0074","ix":60,"v":{"a":0,"k":0,"ix":60}},{"ty":0,"nm":"Z at vertex 25","mn":"BAO_Boa-0075","ix":61,"v":{"a":0,"k":0,"ix":61}},{"ty":0,"nm":"Z at vertex 26","mn":"BAO_Boa-0076","ix":62,"v":{"a":0,"k":0,"ix":62}},{"ty":0,"nm":"Z at vertex 27","mn":"BAO_Boa-0077","ix":63,"v":{"a":0,"k":0,"ix":63}},{"ty":0,"nm":"Z at vertex 28","mn":"BAO_Boa-0078","ix":64,"v":{"a":0,"k":0,"ix":64}},{"ty":0,"nm":"Z at vertex 29","mn":"BAO_Boa-0079","ix":65,"v":{"a":0,"k":0,"ix":65}},{"ty":0,"nm":"Z at vertex 30","mn":"BAO_Boa-0080","ix":66,"v":{"a":0,"k":0,"ix":66}},{"ty":0,"nm":"Z at vertex 31","mn":"BAO_Boa-0081","ix":67,"v":{"a":0,"k":0,"ix":67}},{"ty":0,"nm":"Z at vertex 32","mn":"BAO_Boa-0082","ix":68,"v":{"a":0,"k":0,"ix":68}},{"ty":0,"nm":"Z at vertex 33","mn":"BAO_Boa-0083","ix":69,"v":{"a":0,"k":0,"ix":69}},{"ty":0,"nm":"Z at vertex 34","mn":"BAO_Boa-0084","ix":70,"v":{"a":0,"k":0,"ix":70}},{"ty":0,"nm":"Z at vertex 35","mn":"BAO_Boa-0085","ix":71,"v":{"a":0,"k":0,"ix":71}},{"ty":0,"nm":"Z at vertex 36","mn":"BAO_Boa-0086","ix":72,"v":{"a":0,"k":0,"ix":72}},{"ty":0,"nm":"Z at vertex 37","mn":"BAO_Boa-0087","ix":73,"v":{"a":0,"k":0,"ix":73}},{"ty":0,"nm":"Z at vertex 38","mn":"BAO_Boa-0088","ix":74,"v":{"a":0,"k":0,"ix":74}},{"ty":0,"nm":"Z at vertex 39","mn":"BAO_Boa-0089","ix":75,"v":{"a":0,"k":0,"ix":75}},{"ty":0,"nm":"Z at vertex 40","mn":"BAO_Boa-0090","ix":76,"v":{"a":0,"k":0,"ix":76}},{"ty":0,"nm":"Z at vertex 41","mn":"BAO_Boa-0091","ix":77,"v":{"a":0,"k":0,"ix":77}},{"ty":0,"nm":"Z at vertex 42","mn":"BAO_Boa-0092","ix":78,"v":{"a":0,"k":0,"ix":78}},{"ty":0,"nm":"Z at vertex 43","mn":"BAO_Boa-0093","ix":79,"v":{"a":0,"k":0,"ix":79}},{"ty":0,"nm":"Z at vertex 44","mn":"BAO_Boa-0094","ix":80,"v":{"a":0,"k":0,"ix":80}},{"ty":0,"nm":"Z at vertex 45","mn":"BAO_Boa-0095","ix":81,"v":{"a":0,"k":0,"ix":81}},{"ty":0,"nm":"Z at vertex 46","mn":"BAO_Boa-0096","ix":82,"v":{"a":0,"k":0,"ix":82}},{"ty":0,"nm":"Z at vertex 47","mn":"BAO_Boa-0097","ix":83,"v":{"a":0,"k":0,"ix":83}},{"ty":0,"nm":"Z at vertex 48","mn":"BAO_Boa-0098","ix":84,"v":{"a":0,"k":0,"ix":84}},{"ty":0,"nm":"Z at vertex 49","mn":"BAO_Boa-0099","ix":85,"v":{"a":0,"k":0,"ix":85}},{"ty":0,"nm":"Z at vertex 50","mn":"BAO_Boa-0100","ix":86,"v":{"a":0,"k":0,"ix":86}},{"ty":0,"nm":"Z at vertex 51","mn":"BAO_Boa-0101","ix":87,"v":{"a":0,"k":0,"ix":87}},{"ty":0,"nm":"Z at vertex 52","mn":"BAO_Boa-0102","ix":88,"v":{"a":0,"k":0,"ix":88}},{"ty":0,"nm":"Z at vertex 53","mn":"BAO_Boa-0103","ix":89,"v":{"a":0,"k":0,"ix":89}},{"ty":0,"nm":"Z at vertex 54","mn":"BAO_Boa-0104","ix":90,"v":{"a":0,"k":0,"ix":90}},{"ty":0,"nm":"Z at vertex 55","mn":"BAO_Boa-0105","ix":91,"v":{"a":0,"k":0,"ix":91}},{"ty":0,"nm":"Z at vertex 56","mn":"BAO_Boa-0106","ix":92,"v":{"a":0,"k":0,"ix":92}},{"ty":0,"nm":"Z at vertex 57","mn":"BAO_Boa-0107","ix":93,"v":{"a":0,"k":0,"ix":93}},{"ty":0,"nm":"Z at vertex 58","mn":"BAO_Boa-0108","ix":94,"v":{"a":0,"k":0,"ix":94}},{"ty":0,"nm":"Z at vertex 59","mn":"BAO_Boa-0109","ix":95,"v":{"a":0,"k":0,"ix":95}},{"ty":0,"nm":"Z at vertex 60","mn":"BAO_Boa-0110","ix":96,"v":{"a":0,"k":0,"ix":96}},{"ty":0,"nm":"Z at vertex 61","mn":"BAO_Boa-0111","ix":97,"v":{"a":0,"k":0,"ix":97}},{"ty":0,"nm":"Z at vertex 62","mn":"BAO_Boa-0112","ix":98,"v":{"a":0,"k":0,"ix":98}},{"ty":0,"nm":"Z at vertex 63","mn":"BAO_Boa-0113","ix":99,"v":{"a":0,"k":0,"ix":99}},{"ty":0,"nm":"Z at vertex 64","mn":"BAO_Boa-0114","ix":100,"v":{"a":0,"k":0,"ix":100}},{"ty":0,"nm":"Z at vertex 65","mn":"BAO_Boa-0115","ix":101,"v":{"a":0,"k":0,"ix":101}},{"ty":0,"nm":"Z at vertex 66","mn":"BAO_Boa-0116","ix":102,"v":{"a":0,"k":0,"ix":102}},{"ty":0,"nm":"Z at vertex 67","mn":"BAO_Boa-0117","ix":103,"v":{"a":0,"k":0,"ix":103}},{"ty":0,"nm":"Z at vertex 68","mn":"BAO_Boa-0118","ix":104,"v":{"a":0,"k":0,"ix":104}},{"ty":0,"nm":"Z at vertex 69","mn":"BAO_Boa-0119","ix":105,"v":{"a":0,"k":0,"ix":105}},{"ty":0,"nm":"Z at vertex 70","mn":"BAO_Boa-0120","ix":106,"v":{"a":0,"k":0,"ix":106}},{"ty":0,"nm":"Z at vertex 71","mn":"BAO_Boa-0121","ix":107,"v":{"a":0,"k":0,"ix":107}},{"ty":0,"nm":"Z at vertex 72","mn":"BAO_Boa-0122","ix":108,"v":{"a":0,"k":0,"ix":108}},{"ty":0,"nm":"Z at vertex 73","mn":"BAO_Boa-0123","ix":109,"v":{"a":0,"k":0,"ix":109}},{"ty":0,"nm":"Z at vertex 74","mn":"BAO_Boa-0124","ix":110,"v":{"a":0,"k":0,"ix":110}},{"ty":0,"nm":"Z at vertex 75","mn":"BAO_Boa-0125","ix":111,"v":{"a":0,"k":0,"ix":111}},{"ty":0,"nm":"Z at vertex 76","mn":"BAO_Boa-0126","ix":112,"v":{"a":0,"k":0,"ix":112}},{"ty":0,"nm":"Z at vertex 77","mn":"BAO_Boa-0127","ix":113,"v":{"a":0,"k":0,"ix":113}},{"ty":0,"nm":"Z at vertex 78","mn":"BAO_Boa-0128","ix":114,"v":{"a":0,"k":0,"ix":114}},{"ty":0,"nm":"Z at vertex 79","mn":"BAO_Boa-0129","ix":115,"v":{"a":0,"k":0,"ix":115}},{"ty":0,"nm":"Z at vertex 80","mn":"BAO_Boa-0130","ix":116,"v":{"a":0,"k":0,"ix":116}},{"ty":0,"nm":"Z at vertex 81","mn":"BAO_Boa-0131","ix":117,"v":{"a":0,"k":0,"ix":117}},{"ty":0,"nm":"Z at vertex 82","mn":"BAO_Boa-0132","ix":118,"v":{"a":0,"k":0,"ix":118}},{"ty":0,"nm":"Z at vertex 83","mn":"BAO_Boa-0133","ix":119,"v":{"a":0,"k":0,"ix":119}},{"ty":0,"nm":"Z at vertex 84","mn":"BAO_Boa-0134","ix":120,"v":{"a":0,"k":0,"ix":120}},{"ty":0,"nm":"Z at vertex 85","mn":"BAO_Boa-0135","ix":121,"v":{"a":0,"k":0,"ix":121}},{"ty":0,"nm":"Z at vertex 86","mn":"BAO_Boa-0136","ix":122,"v":{"a":0,"k":0,"ix":122}},{"ty":0,"nm":"Z at vertex 87","mn":"BAO_Boa-0137","ix":123,"v":{"a":0,"k":0,"ix":123}},{"ty":0,"nm":"Z at vertex 88","mn":"BAO_Boa-0138","ix":124,"v":{"a":0,"k":0,"ix":124}},{"ty":0,"nm":"Z at vertex 89","mn":"BAO_Boa-0139","ix":125,"v":{"a":0,"k":0,"ix":125}},{"ty":0,"nm":"Z at vertex 90","mn":"BAO_Boa-0140","ix":126,"v":{"a":0,"k":0,"ix":126}},{"ty":0,"nm":"Z at vertex 91","mn":"BAO_Boa-0141","ix":127,"v":{"a":0,"k":0,"ix":127}},{"ty":0,"nm":"Z at vertex 92","mn":"BAO_Boa-0142","ix":128,"v":{"a":0,"k":0,"ix":128}},{"ty":0,"nm":"Z at vertex 93","mn":"BAO_Boa-0143","ix":129,"v":{"a":0,"k":0,"ix":129}},{"ty":0,"nm":"Z at vertex 94","mn":"BAO_Boa-0144","ix":130,"v":{"a":0,"k":0,"ix":130}},{"ty":0,"nm":"Z at vertex 95","mn":"BAO_Boa-0145","ix":131,"v":{"a":0,"k":0,"ix":131}},{"ty":0,"nm":"Z at vertex 96","mn":"BAO_Boa-0146","ix":132,"v":{"a":0,"k":0,"ix":132}},{"ty":0,"nm":"Z at vertex 97","mn":"BAO_Boa-0147","ix":133,"v":{"a":0,"k":0,"ix":133}},{"ty":0,"nm":"Z at vertex 98","mn":"BAO_Boa-0148","ix":134,"v":{"a":0,"k":0,"ix":134}},{"ty":0,"nm":"Z at vertex 99","mn":"BAO_Boa-0149","ix":135,"v":{"a":0,"k":0,"ix":135}},{"ty":0,"nm":"Z at vertex 100","mn":"BAO_Boa-0150","ix":136,"v":{"a":0,"k":0,"ix":136}},{"ty":6,"nm":"","mn":"BAO_Boa-0151","ix":137,"v":0},{"ty":6,"nm":"Per vertex scale","mn":"BAO_Boa-0160","ix":138,"v":0},{"ty":0,"nm":"Scale at vertex 1","mn":"BAO_Boa-0161","ix":139,"v":{"a":0,"k":100,"ix":139}},{"ty":0,"nm":"Scale at vertex 2","mn":"BAO_Boa-0162","ix":140,"v":{"a":0,"k":100,"ix":140}},{"ty":0,"nm":"Scale at vertex 3","mn":"BAO_Boa-0163","ix":141,"v":{"a":0,"k":100,"ix":141}},{"ty":0,"nm":"Scale at vertex 4","mn":"BAO_Boa-0164","ix":142,"v":{"a":0,"k":100,"ix":142}},{"ty":0,"nm":"Scale at vertex 5","mn":"BAO_Boa-0165","ix":143,"v":{"a":0,"k":100,"ix":143}},{"ty":0,"nm":"Scale at vertex 6","mn":"BAO_Boa-0166","ix":144,"v":{"a":0,"k":100,"ix":144}},{"ty":0,"nm":"Scale at vertex 7","mn":"BAO_Boa-0167","ix":145,"v":{"a":0,"k":100,"ix":145}},{"ty":0,"nm":"Scale at vertex 8","mn":"BAO_Boa-0168","ix":146,"v":{"a":0,"k":100,"ix":146}},{"ty":0,"nm":"Scale at vertex 9","mn":"BAO_Boa-0169","ix":147,"v":{"a":0,"k":100,"ix":147}},{"ty":0,"nm":"Scale at vertex 10","mn":"BAO_Boa-0170","ix":148,"v":{"a":0,"k":100,"ix":148}},{"ty":0,"nm":"Scale at vertex 11","mn":"BAO_Boa-0171","ix":149,"v":{"a":0,"k":100,"ix":149}},{"ty":0,"nm":"Scale at vertex 12","mn":"BAO_Boa-0172","ix":150,"v":{"a":0,"k":100,"ix":150}},{"ty":0,"nm":"Scale at vertex 13","mn":"BAO_Boa-0173","ix":151,"v":{"a":0,"k":100,"ix":151}},{"ty":0,"nm":"Scale at vertex 14","mn":"BAO_Boa-0174","ix":152,"v":{"a":0,"k":100,"ix":152}},{"ty":0,"nm":"Scale at vertex 15","mn":"BAO_Boa-0175","ix":153,"v":{"a":0,"k":100,"ix":153}},{"ty":0,"nm":"Scale at vertex 16","mn":"BAO_Boa-0176","ix":154,"v":{"a":0,"k":100,"ix":154}},{"ty":0,"nm":"Scale at vertex 17","mn":"BAO_Boa-0177","ix":155,"v":{"a":0,"k":100,"ix":155}},{"ty":0,"nm":"Scale at vertex 18","mn":"BAO_Boa-0178","ix":156,"v":{"a":0,"k":100,"ix":156}},{"ty":0,"nm":"Scale at vertex 19","mn":"BAO_Boa-0179","ix":157,"v":{"a":0,"k":100,"ix":157}},{"ty":0,"nm":"Scale at vertex 20","mn":"BAO_Boa-0180","ix":158,"v":{"a":0,"k":100,"ix":158}},{"ty":0,"nm":"Scale at vertex 21","mn":"BAO_Boa-0181","ix":159,"v":{"a":0,"k":100,"ix":159}},{"ty":0,"nm":"Scale at vertex 22","mn":"BAO_Boa-0182","ix":160,"v":{"a":0,"k":100,"ix":160}},{"ty":0,"nm":"Scale at vertex 23","mn":"BAO_Boa-0183","ix":161,"v":{"a":0,"k":100,"ix":161}},{"ty":0,"nm":"Scale at vertex 24","mn":"BAO_Boa-0184","ix":162,"v":{"a":0,"k":100,"ix":162}},{"ty":0,"nm":"Scale at vertex 25","mn":"BAO_Boa-0185","ix":163,"v":{"a":0,"k":100,"ix":163}},{"ty":0,"nm":"Scale at vertex 26","mn":"BAO_Boa-0186","ix":164,"v":{"a":0,"k":100,"ix":164}},{"ty":0,"nm":"Scale at vertex 27","mn":"BAO_Boa-0187","ix":165,"v":{"a":0,"k":100,"ix":165}},{"ty":0,"nm":"Scale at vertex 28","mn":"BAO_Boa-0188","ix":166,"v":{"a":0,"k":100,"ix":166}},{"ty":0,"nm":"Scale at vertex 29","mn":"BAO_Boa-0189","ix":167,"v":{"a":0,"k":100,"ix":167}},{"ty":0,"nm":"Scale at vertex 30","mn":"BAO_Boa-0190","ix":168,"v":{"a":0,"k":100,"ix":168}},{"ty":0,"nm":"Scale at vertex 31","mn":"BAO_Boa-0191","ix":169,"v":{"a":0,"k":100,"ix":169}},{"ty":0,"nm":"Scale at vertex 32","mn":"BAO_Boa-0192","ix":170,"v":{"a":0,"k":100,"ix":170}},{"ty":0,"nm":"Scale at vertex 33","mn":"BAO_Boa-0193","ix":171,"v":{"a":0,"k":100,"ix":171}},{"ty":0,"nm":"Scale at vertex 34","mn":"BAO_Boa-0194","ix":172,"v":{"a":0,"k":100,"ix":172}},{"ty":0,"nm":"Scale at vertex 35","mn":"BAO_Boa-0195","ix":173,"v":{"a":0,"k":100,"ix":173}},{"ty":0,"nm":"Scale at vertex 36","mn":"BAO_Boa-0196","ix":174,"v":{"a":0,"k":100,"ix":174}},{"ty":0,"nm":"Scale at vertex 37","mn":"BAO_Boa-0197","ix":175,"v":{"a":0,"k":100,"ix":175}},{"ty":0,"nm":"Scale at vertex 38","mn":"BAO_Boa-0198","ix":176,"v":{"a":0,"k":100,"ix":176}},{"ty":0,"nm":"Scale at vertex 39","mn":"BAO_Boa-0199","ix":177,"v":{"a":0,"k":100,"ix":177}},{"ty":0,"nm":"Scale at vertex 40","mn":"BAO_Boa-0200","ix":178,"v":{"a":0,"k":100,"ix":178}},{"ty":0,"nm":"Scale at vertex 41","mn":"BAO_Boa-0201","ix":179,"v":{"a":0,"k":100,"ix":179}},{"ty":0,"nm":"Scale at vertex 42","mn":"BAO_Boa-0202","ix":180,"v":{"a":0,"k":100,"ix":180}},{"ty":0,"nm":"Scale at vertex 43","mn":"BAO_Boa-0203","ix":181,"v":{"a":0,"k":100,"ix":181}},{"ty":0,"nm":"Scale at vertex 44","mn":"BAO_Boa-0204","ix":182,"v":{"a":0,"k":100,"ix":182}},{"ty":0,"nm":"Scale at vertex 45","mn":"BAO_Boa-0205","ix":183,"v":{"a":0,"k":100,"ix":183}},{"ty":0,"nm":"Scale at vertex 46","mn":"BAO_Boa-0206","ix":184,"v":{"a":0,"k":100,"ix":184}},{"ty":0,"nm":"Scale at vertex 47","mn":"BAO_Boa-0207","ix":185,"v":{"a":0,"k":100,"ix":185}},{"ty":0,"nm":"Scale at vertex 48","mn":"BAO_Boa-0208","ix":186,"v":{"a":0,"k":100,"ix":186}},{"ty":0,"nm":"Scale at vertex 49","mn":"BAO_Boa-0209","ix":187,"v":{"a":0,"k":100,"ix":187}},{"ty":0,"nm":"Scale at vertex 50","mn":"BAO_Boa-0210","ix":188,"v":{"a":0,"k":100,"ix":188}},{"ty":0,"nm":"Scale at vertex 51","mn":"BAO_Boa-0211","ix":189,"v":{"a":0,"k":100,"ix":189}},{"ty":0,"nm":"Scale at vertex 52","mn":"BAO_Boa-0212","ix":190,"v":{"a":0,"k":100,"ix":190}},{"ty":0,"nm":"Scale at vertex 53","mn":"BAO_Boa-0213","ix":191,"v":{"a":0,"k":100,"ix":191}},{"ty":0,"nm":"Scale at vertex 54","mn":"BAO_Boa-0214","ix":192,"v":{"a":0,"k":100,"ix":192}},{"ty":0,"nm":"Scale at vertex 55","mn":"BAO_Boa-0215","ix":193,"v":{"a":0,"k":100,"ix":193}},{"ty":0,"nm":"Scale at vertex 56","mn":"BAO_Boa-0216","ix":194,"v":{"a":0,"k":100,"ix":194}},{"ty":0,"nm":"Scale at vertex 57","mn":"BAO_Boa-0217","ix":195,"v":{"a":0,"k":100,"ix":195}},{"ty":0,"nm":"Scale at vertex 58","mn":"BAO_Boa-0218","ix":196,"v":{"a":0,"k":100,"ix":196}},{"ty":0,"nm":"Scale at vertex 59","mn":"BAO_Boa-0219","ix":197,"v":{"a":0,"k":100,"ix":197}},{"ty":0,"nm":"Scale at vertex 60","mn":"BAO_Boa-0220","ix":198,"v":{"a":0,"k":100,"ix":198}},{"ty":0,"nm":"Scale at vertex 61","mn":"BAO_Boa-0221","ix":199,"v":{"a":0,"k":100,"ix":199}},{"ty":0,"nm":"Scale at vertex 62","mn":"BAO_Boa-0222","ix":200,"v":{"a":0,"k":100,"ix":200}},{"ty":0,"nm":"Scale at vertex 63","mn":"BAO_Boa-0223","ix":201,"v":{"a":0,"k":100,"ix":201}},{"ty":0,"nm":"Scale at vertex 64","mn":"BAO_Boa-0224","ix":202,"v":{"a":0,"k":100,"ix":202}},{"ty":0,"nm":"Scale at vertex 65","mn":"BAO_Boa-0225","ix":203,"v":{"a":0,"k":100,"ix":203}},{"ty":0,"nm":"Scale at vertex 66","mn":"BAO_Boa-0226","ix":204,"v":{"a":0,"k":100,"ix":204}},{"ty":0,"nm":"Scale at vertex 67","mn":"BAO_Boa-0227","ix":205,"v":{"a":0,"k":100,"ix":205}},{"ty":0,"nm":"Scale at vertex 68","mn":"BAO_Boa-0228","ix":206,"v":{"a":0,"k":100,"ix":206}},{"ty":0,"nm":"Scale at vertex 69","mn":"BAO_Boa-0229","ix":207,"v":{"a":0,"k":100,"ix":207}},{"ty":0,"nm":"Scale at vertex 70","mn":"BAO_Boa-0230","ix":208,"v":{"a":0,"k":100,"ix":208}},{"ty":0,"nm":"Scale at vertex 71","mn":"BAO_Boa-0231","ix":209,"v":{"a":0,"k":100,"ix":209}},{"ty":0,"nm":"Scale at vertex 72","mn":"BAO_Boa-0232","ix":210,"v":{"a":0,"k":100,"ix":210}},{"ty":0,"nm":"Scale at vertex 73","mn":"BAO_Boa-0233","ix":211,"v":{"a":0,"k":100,"ix":211}},{"ty":0,"nm":"Scale at vertex 74","mn":"BAO_Boa-0234","ix":212,"v":{"a":0,"k":100,"ix":212}},{"ty":0,"nm":"Scale at vertex 75","mn":"BAO_Boa-0235","ix":213,"v":{"a":0,"k":100,"ix":213}},{"ty":0,"nm":"Scale at vertex 76","mn":"BAO_Boa-0236","ix":214,"v":{"a":0,"k":100,"ix":214}},{"ty":0,"nm":"Scale at vertex 77","mn":"BAO_Boa-0237","ix":215,"v":{"a":0,"k":100,"ix":215}},{"ty":0,"nm":"Scale at vertex 78","mn":"BAO_Boa-0238","ix":216,"v":{"a":0,"k":100,"ix":216}},{"ty":0,"nm":"Scale at vertex 79","mn":"BAO_Boa-0239","ix":217,"v":{"a":0,"k":100,"ix":217}},{"ty":0,"nm":"Scale at vertex 80","mn":"BAO_Boa-0240","ix":218,"v":{"a":0,"k":100,"ix":218}},{"ty":0,"nm":"Scale at vertex 81","mn":"BAO_Boa-0241","ix":219,"v":{"a":0,"k":100,"ix":219}},{"ty":0,"nm":"Scale at vertex 82","mn":"BAO_Boa-0242","ix":220,"v":{"a":0,"k":100,"ix":220}},{"ty":0,"nm":"Scale at vertex 83","mn":"BAO_Boa-0243","ix":221,"v":{"a":0,"k":100,"ix":221}},{"ty":0,"nm":"Scale at vertex 84","mn":"BAO_Boa-0244","ix":222,"v":{"a":0,"k":100,"ix":222}},{"ty":0,"nm":"Scale at vertex 85","mn":"BAO_Boa-0245","ix":223,"v":{"a":0,"k":100,"ix":223}},{"ty":0,"nm":"Scale at vertex 86","mn":"BAO_Boa-0246","ix":224,"v":{"a":0,"k":100,"ix":224}},{"ty":0,"nm":"Scale at vertex 87","mn":"BAO_Boa-0247","ix":225,"v":{"a":0,"k":100,"ix":225}},{"ty":0,"nm":"Scale at vertex 88","mn":"BAO_Boa-0248","ix":226,"v":{"a":0,"k":100,"ix":226}},{"ty":0,"nm":"Scale at vertex 89","mn":"BAO_Boa-0249","ix":227,"v":{"a":0,"k":100,"ix":227}},{"ty":0,"nm":"Scale at vertex 90","mn":"BAO_Boa-0250","ix":228,"v":{"a":0,"k":100,"ix":228}},{"ty":0,"nm":"Scale at vertex 91","mn":"BAO_Boa-0251","ix":229,"v":{"a":0,"k":100,"ix":229}},{"ty":0,"nm":"Scale at vertex 92","mn":"BAO_Boa-0252","ix":230,"v":{"a":0,"k":100,"ix":230}},{"ty":0,"nm":"Scale at vertex 93","mn":"BAO_Boa-0253","ix":231,"v":{"a":0,"k":100,"ix":231}},{"ty":0,"nm":"Scale at vertex 94","mn":"BAO_Boa-0254","ix":232,"v":{"a":0,"k":100,"ix":232}},{"ty":0,"nm":"Scale at vertex 95","mn":"BAO_Boa-0255","ix":233,"v":{"a":0,"k":100,"ix":233}},{"ty":0,"nm":"Scale at vertex 96","mn":"BAO_Boa-0256","ix":234,"v":{"a":0,"k":100,"ix":234}},{"ty":0,"nm":"Scale at vertex 97","mn":"BAO_Boa-0257","ix":235,"v":{"a":0,"k":100,"ix":235}},{"ty":0,"nm":"Scale at vertex 98","mn":"BAO_Boa-0258","ix":236,"v":{"a":0,"k":100,"ix":236}},{"ty":0,"nm":"Scale at vertex 99","mn":"BAO_Boa-0259","ix":237,"v":{"a":0,"k":100,"ix":237}},{"ty":0,"nm":"Scale at vertex 100","mn":"BAO_Boa-0260","ix":238,"v":{"a":0,"k":100,"ix":238}},{"ty":6,"nm":"","mn":"BAO_Boa-0261","ix":239,"v":0},{"ty":6,"nm":"","mn":"BAO_Boa-0021","ix":240,"v":0},{"ty":6,"nm":"Extrusion parameters","mn":"BAO_Boa-0016","ix":241,"v":0},{"ty":7,"nm":"Camera mode","mn":"BAO_Boa-0010","ix":242,"v":{"a":0,"k":1,"ix":242}},{"ty":0,"nm":"Extrusion","mn":"BAO_Boa-0007","ix":243,"v":{"a":0,"k":0.1,"ix":243}},{"ty":0,"nm":"Extrusion num layers","mn":"BAO_Boa-0009","ix":244,"v":{"a":0,"k":1,"ix":244}},{"ty":10,"nm":"Contour mask","mn":"BAO_Boa-0153","ix":245,"v":{"a":0,"k":0,"ix":245}},{"ty":0,"nm":"Contour definition","mn":"BAO_Boa-0154","ix":246,"v":{"a":0,"k":50,"ix":246}},{"ty":2,"nm":"Contour color","mn":"BAO_Boa-0155","ix":247,"v":{"a":0,"k":[1,1,1,1],"ix":247}},{"ty":7,"nm":"Use lights","mn":"BAO_Boa-0031","ix":248,"v":{"a":0,"k":1,"ix":248}},{"ty":6,"nm":"Light parameters","mn":"BAO_Boa-0040","ix":249,"v":0},{"ty":0,"nm":"Light ambient","mn":"BAO_Boa-0032","ix":250,"v":{"a":0,"k":100,"ix":250}},{"ty":0,"nm":"Light diffuse","mn":"BAO_Boa-0033","ix":251,"v":{"a":0,"k":50,"ix":251}},{"ty":0,"nm":"Light specular","mn":"BAO_Boa-0034","ix":252,"v":{"a":0,"k":50,"ix":252}},{"ty":0,"nm":"Light shininess","mn":"BAO_Boa-0035","ix":253,"v":{"a":0,"k":5,"ix":253}},{"ty":0,"nm":"Light metal","mn":"BAO_Boa-0036","ix":254,"v":{"a":0,"k":100,"ix":254}},{"ty":0,"nm":"Light constant","mn":"BAO_Boa-0037","ix":255,"v":{"a":0,"k":15,"ix":255}},{"ty":0,"nm":"Light linear","mn":"BAO_Boa-0038","ix":256,"v":{"a":0,"k":0,"ix":256}},{"ty":0,"nm":"Light quadratic","mn":"BAO_Boa-0039","ix":257,"v":{"a":0,"k":0,"ix":257}},{"ty":6,"nm":"","mn":"BAO_Boa-0041","ix":258,"v":0},{"ty":6,"nm":"","mn":"BAO_Boa-0017","ix":259,"v":0},{"ty":7,"nm":"Composite mode","mn":"BAO_Boa-0002","ix":260,"v":{"a":0,"k":1,"ix":260}}]},{"ty":5,"nm":"UnMult","np":2,"mn":"KNSW Unmult","ix":2,"en":1,"ef":[]}],"sw":300,"sh":100,"sc":"#ffffff","ip":0,"op":66,"st":0,"bm":0}]}],"fonts":{"list":[{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold","fName":"BeaufortforLOL-Bold","ascent":70.098876953125}]},"layers":[{"ddd":0,"ind":2,"ty":4,"nm":"checkMark_cell 2","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":1003,"s":[100],"e":[0]},{"t":1021}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[342.5,201.5,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-72.256,-22.547],[-100.178,6.229],[-109.903,-3.325],[-116.5,3.158],[-101.202,18.797],[-66,-16.746]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[-91.25,-1.875],"ix":2},"a":{"a":0,"k":[-91.25,-1.875],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0,0]},"n":["0p667_1_0p167_0","0p667_1_0p167_0"],"t":961,"s":[40,40],"e":[40,40]},{"t":977}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":961,"s":[1,1,1,1],"e":[0.039215687662,0.796078443527,0.901960790157,1]},{"t":977}],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":961,"op":1200,"st":900,"bm":0},{"ddd":0,"ind":3,"ty":5,"nm":"ABC 5","parent":4,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":1003,"s":[100],"e":[0]},{"t":1021}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":959,"s":[336,124,0],"e":[316,124,0],"to":[0,0,0],"ti":[0,0,0]},{"t":968}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"ABC","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.98,0.75,0.04]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":900,"op":1200,"st":900,"bm":0},{"ddd":0,"ind":4,"ty":0,"nm":"player_logo","refId":"comp_12","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":1003,"s":[100],"e":[0]},{"t":1021}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":959,"s":[132.5,197.5,0],"e":[145.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":968}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"w":200,"h":200,"ip":900,"op":1200,"st":900,"bm":0},{"ddd":0,"ind":5,"ty":5,"nm":"XYZ 5","parent":6,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":961,"s":[100],"e":[50]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":973,"s":[50],"e":[50]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":1003,"s":[50],"e":[0]},{"t":1021}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":959,"s":[-129,124,0],"e":[-113,124,0],"to":[0,0,0],"ti":[0,0,0]},{"t":968}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"XYZ","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":900,"op":1200,"st":900,"bm":0},{"ddd":0,"ind":6,"ty":0,"nm":"opponent_logo","refId":"comp_13","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":961,"s":[100],"e":[50]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":973,"s":[50],"e":[50]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":1003,"s":[50],"e":[0]},{"t":1021}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":959,"s":[368.5,197.5,0],"e":[356.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":968}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[0,0,0,0],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":961,"s":[0],"e":[80]},{"t":973}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":900,"op":1200,"st":900,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"currentCell 4","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":1003,"s":[100],"e":[0]},{"t":1021}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,199,0],"ix":2},"a":{"a":0,"k":[-465.5,-46,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-138.417,31.083],[138.875,31.083]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":1,"k":[{"i":{"x":[0],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0_1_0p333_0"],"t":973,"s":[50],"e":[35]},{"i":{"x":[0.967],"y":[0.822]},"o":{"x":[1],"y":[0]},"n":["0p967_0p822_1_0"],"t":981,"s":[35],"e":[100]},{"t":992}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.956862747669,0.717647075653,0.101960785687,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,2.5],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"baseLine","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[276,62],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[30,30],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_03","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":45,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"diamond","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,114.25],[-464.563,124.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,166],[-464.563,176.25]],"c":false},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"vertLines","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[465.5,-146],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"interior","np":2,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0.115709342062,0.465220421553,0.517647087574,1],"ix":4},"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":960,"s":[0],"e":[30]},{"t":961}],"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-465.5,-46],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0_1_0p167_0p167","0_1_0p167_0p167"],"t":959,"s":[120,120],"e":[100,100]},{"t":968}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"cell_01","np":5,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.117647059262,0.137254908681,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":900,"op":1200,"st":900,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"red_X 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[213.5,171,0],"ix":2},"a":{"a":0,"k":[-36.844,-27.421,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-91.953,-82.356],[-101.125,-73.03],[-83.167,-54.918],[-100.894,-36.652],[-91.645,-27.404],[-73.688,-45.593],[-55.73,-27.327],[-46.25,-36.729],[-64.208,-54.687],[-46.558,-72.799],[-55.73,-81.893],[-73.688,-64.013]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[-74.344,-54.421],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p667_1_0p167_0p167","0p667_1_0p167_0p167"],"t":661,"s":[35,35],"e":[25,25]},{"t":677}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":661,"s":[1,1,1,1],"e":[0.717647075653,0.156862750649,0.156862750649,1]},{"t":677}],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":661,"op":900,"st":600,"bm":0},{"ddd":0,"ind":9,"ty":5,"nm":"ABC 3","parent":10,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":733,"s":[100],"e":[0]},{"t":751}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":659,"s":[336,124,0],"e":[316,124,0],"to":[0,0,0],"ti":[0,0,0]},{"t":668}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"ABC","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.98,0.75,0.04]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":600,"op":900,"st":600,"bm":0},{"ddd":0,"ind":10,"ty":0,"nm":"player_logo","refId":"comp_12","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":661,"s":[100],"e":[100]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.167],"y":[0]},"n":["0p667_1_0p167_0"],"t":673,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":733,"s":[100],"e":[0]},{"t":751}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":659,"s":[132.5,197.5,0],"e":[145.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.167,"y":0.167},"n":"0p667_0p667_0p167_0p167","t":668,"s":[145.5,197.5,0],"e":[145.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":733,"s":[145.5,197.5,0],"e":[152.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":751}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[0,0,0,0],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":661,"s":[0],"e":[50]},{"t":673}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":600,"op":900,"st":600,"bm":0},{"ddd":0,"ind":11,"ty":5,"nm":"XYZ 3","parent":12,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":659,"s":[100],"e":[0]},{"t":668}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":659,"s":[-129,124,0],"e":[-113,124,0],"to":[0,0,0],"ti":[0,0,0]},{"t":668}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"XYZ","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":600,"op":900,"st":600,"bm":0},{"ddd":0,"ind":12,"ty":0,"nm":"opponent_logo","refId":"comp_13","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":659,"s":[100],"e":[0]},{"t":668}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":659,"s":[368.5,197.5,0],"e":[356.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":668}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"w":200,"h":200,"ip":600,"op":900,"st":600,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"currentCell 3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,199,0],"ix":2},"a":{"a":0,"k":[-465.5,-46,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-138.417,31.083],[138.875,31.083]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[1],"y":[0]},"n":["0p833_1_1_0"],"t":642,"s":[0],"e":[0]},{"t":661,"s":[0],"h":1},{"i":{"x":[0.999],"y":[1.001]},"o":{"x":[1],"y":[0]},"n":["0p999_1p001_1_0"],"t":716,"s":[0],"e":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":733,"s":[0],"e":[100]},{"t":751}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":642,"s":[50],"e":[0]},{"t":661,"s":[0],"h":1},{"i":{"x":[0.999],"y":[0.999]},"o":{"x":[1],"y":[0]},"n":["0p999_0p999_1_0"],"t":716,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[1]},"o":{"x":[1],"y":[0]},"n":["0p833_1_1_0"],"t":733,"s":[100],"e":[100]},{"t":751}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.956862747669,0.717647075653,0.101960785687,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,2.5],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"baseLine","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-138.417,31.083],[138.875,31.083]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":642,"s":[50],"e":[0]},{"t":661,"s":[0],"h":1},{"t":716,"s":[0],"h":1}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[1],"y":[0]},"n":["0p833_1_1_0"],"t":642,"s":[50],"e":[50]},{"t":661,"s":[50],"h":1},{"t":716,"s":[50],"h":1},{"t":733,"s":[0],"h":1}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.717647075653,0.156862750649,0.156862750649,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,2.5],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"baseLine_red","np":3,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[276,62],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[30,30],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_03","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":45,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"diamond","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,114.25],[-464.563,124.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,166],[-464.563,176.25]],"c":false},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"vertLines","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[465.5,-146],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"interior","np":2,"cix":2,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[-465.5,-46],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0_1_0p167_0p167","0_1_0p167_0p167"],"t":659,"s":[120,120],"e":[100,100]},{"t":668}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"cell_01","np":5,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gf","o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":660,"s":[0],"e":[80]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":661,"s":[80],"e":[0]},{"t":675}],"ix":10},"r":1,"g":{"p":3,"k":{"a":0,"k":[0,0.549,0.071,0.071,0.5,0.333,0.104,0.114,1,0.118,0.137,0.157],"ix":9}},"s":{"a":0,"k":[-468,-58],"ix":5},"e":{"a":0,"k":[-613,5],"ix":6},"t":2,"h":{"a":0,"k":0,"ix":7},"a":{"a":0,"k":0,"ix":8},"nm":"Gradient Fill 1","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"fl","c":{"a":0,"k":[0.117647059262,0.137254908681,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":600,"op":900,"st":600,"bm":0},{"ddd":0,"ind":14,"ty":4,"nm":"red_X","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[213.5,171,0],"ix":2},"a":{"a":0,"k":[-36.844,-27.421,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-91.953,-82.356],[-101.125,-73.03],[-83.167,-54.918],[-100.894,-36.652],[-91.645,-27.404],[-73.688,-45.593],[-55.73,-27.327],[-46.25,-36.729],[-64.208,-54.687],[-46.558,-72.799],[-55.73,-81.893],[-73.688,-64.013]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[-74.344,-54.421],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p667_1_0p167_0p167","0p667_1_0p167_0p167"],"t":361,"s":[35,35],"e":[25,25]},{"t":377}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":361,"s":[1,1,1,1],"e":[0.717647075653,0.156862750649,0.156862750649,1]},{"t":377}],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":361,"op":600,"st":300,"bm":0},{"ddd":0,"ind":15,"ty":5,"nm":"ABC 2","parent":16,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":359,"s":[336,124,0],"e":[316,124,0],"to":[0,0,0],"ti":[0,0,0]},{"t":368}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"ABC","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.98,0.75,0.04]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":300,"op":600,"st":300,"bm":0},{"ddd":0,"ind":16,"ty":0,"nm":"player_logo","refId":"comp_12","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":361,"s":[100],"e":[100]},{"t":373}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":359,"s":[132.5,197.5,0],"e":[145.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":368}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[0,0,0,0],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":361,"s":[0],"e":[50]},{"t":373}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":300,"op":600,"st":300,"bm":0},{"ddd":0,"ind":17,"ty":5,"nm":"XYZ 2","parent":18,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":359,"s":[100],"e":[0]},{"t":368}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":359,"s":[-129,124,0],"e":[-113,124,0],"to":[0,0,0],"ti":[0,0,0]},{"t":368}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"XYZ","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":300,"op":600,"st":300,"bm":0},{"ddd":0,"ind":18,"ty":0,"nm":"opponent_logo","refId":"comp_13","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":359,"s":[100],"e":[0]},{"t":368}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":359,"s":[368.5,197.5,0],"e":[356.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":368}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"w":200,"h":200,"ip":300,"op":600,"st":300,"bm":0},{"ddd":0,"ind":19,"ty":4,"nm":"currentCell 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,199,0],"ix":2},"a":{"a":0,"k":[-465.5,-46,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-138.417,31.083],[138.875,31.083]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":342,"s":[50],"e":[0]},{"t":361,"s":[0],"h":1}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[1],"y":[0]},"n":["0p833_1_1_0"],"t":342,"s":[50],"e":[50]},{"t":361,"s":[50],"h":1}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.717647075653,0.156862750649,0.156862750649,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,2.5],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"baseLine_red","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-138.417,31.083],[138.875,31.083]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[1],"y":[0]},"n":["0p833_1_1_0"],"t":342,"s":[0],"e":[0]},{"t":361,"s":[0],"h":1}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":342,"s":[50],"e":[0]},{"t":361,"s":[0],"h":1}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.956862747669,0.717647075653,0.101960785687,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,2.5],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"baseLine","np":3,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[276,62],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[30,30],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_03","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":45,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"diamond","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,114.25],[-464.563,124.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,166],[-464.563,176.25]],"c":false},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"vertLines","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[465.5,-146],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"interior","np":2,"cix":2,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[-465.5,-46],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0_1_0p167_0p167","0_1_0p167_0p167"],"t":359,"s":[120,120],"e":[100,100]},{"t":368}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"cell_01","np":5,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gf","o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":360,"s":[0],"e":[80]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":361,"s":[80],"e":[0]},{"t":375}],"ix":10},"r":1,"g":{"p":3,"k":{"a":0,"k":[0,0.549,0.071,0.071,0.5,0.333,0.104,0.114,1,0.118,0.137,0.157],"ix":9}},"s":{"a":0,"k":[-468,-58],"ix":5},"e":{"a":0,"k":[-613,5],"ix":6},"t":2,"h":{"a":0,"k":0,"ix":7},"a":{"a":0,"k":0,"ix":8},"nm":"Gradient Fill 1","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"fl","c":{"a":0,"k":[0.117647059262,0.137254908681,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":300,"op":600,"st":300,"bm":0},{"ddd":0,"ind":20,"ty":0,"nm":"<------Glow_hit","refId":"comp_14","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[249.656,198.75,0],"ix":2},"a":{"a":0,"k":[225,100,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0,0.667],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,-6.111]},"n":["0_1_0p167_0p167","0_1_0p167_0p167","0p667_1_0p167_-6p111"],"t":59,"s":[120,120,100],"e":[100,100,100]},{"t":68}],"ix":6}},"ao":0,"w":450,"h":200,"ip":34,"op":300,"st":34,"bm":0},{"ddd":0,"ind":21,"ty":4,"nm":"checkMark_cell","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[342.5,201.5,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-72.256,-22.547],[-100.178,6.229],[-109.903,-3.325],[-116.5,3.158],[-101.202,18.797],[-66,-16.746]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[-91.25,-1.875],"ix":2},"a":{"a":0,"k":[-91.25,-1.875],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0,0]},"n":["0p667_1_0p167_0","0p667_1_0p167_0"],"t":61,"s":[40,40],"e":[40,40]},{"t":77}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":61,"s":[1,1,1,1],"e":[0.039215687662,0.796078443527,0.901960790157,1]},{"t":77}],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":61,"op":300,"st":0,"bm":0},{"ddd":0,"ind":22,"ty":5,"nm":"ABC","parent":23,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":59,"s":[336,124,0],"e":[316,124,0],"to":[0,0,0],"ti":[0,0,0]},{"t":68}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"ABC","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.98,0.75,0.04]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":23,"ty":0,"nm":"player_logo","refId":"comp_12","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":59,"s":[132.5,197.5,0],"e":[145.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":68}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"w":200,"h":200,"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":24,"ty":5,"nm":"XYZ","parent":25,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":61,"s":[100],"e":[50]},{"t":73}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":59,"s":[-129,124,0],"e":[-113,124,0],"to":[0,0,0],"ti":[0,0,0]},{"t":68}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"XYZ","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":25,"ty":0,"nm":"opponent_logo","refId":"comp_13","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":61,"s":[100],"e":[50]},{"t":73}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":59,"s":[368.5,197.5,0],"e":[356.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":68}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[0,0,0,0],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":61,"s":[0],"e":[80]},{"t":73}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":26,"ty":4,"nm":"currentCell","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,199,0],"ix":2},"a":{"a":0,"k":[-465.5,-46,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-138.417,31.083],[138.875,31.083]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":83,"s":[0],"e":[100]},{"t":98}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0_1_0p333_0"],"t":41,"s":[50],"e":[35]},{"i":{"x":[0.967],"y":[0.822]},"o":{"x":[1],"y":[0]},"n":["0p967_0p822_1_0"],"t":49,"s":[35],"e":[100]},{"t":60}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.956862747669,0.717647075653,0.101960785687,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,2.5],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"baseLine","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[276,62],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[30,30],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_03","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":45,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"diamond","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,114.25],[-464.563,124.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,166],[-464.563,176.25]],"c":false},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"vertLines","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[465.5,-146],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"interior","np":2,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0.115709342062,0.465220421553,0.517647087574,1],"ix":4},"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":60,"s":[0],"e":[30]},{"t":61}],"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-465.5,-46],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0_1_0p167_0p167","0_1_0p167_0p167"],"t":59,"s":[120,120],"e":[100,100]},{"t":68}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"cell_01","np":5,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.117647059262,0.137254908681,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":0,"op":300,"st":0,"bm":0}],"markers":[{"tm":0,"cm":"win","dr":299},{"tm":300,"cm":"lose","dr":299},{"tm":600,"cm":"consolation","dr":299},{"tm":900,"cm":"winFinals","dr":299}]}')
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.6","fr":30,"ip":300,"op":450,"w":300,"h":300,"nm":"extraCells","ddd":0,"assets":[],"fonts":{"list":[{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold Italic","fName":"BeaufortforLOL-BoldItalic","ascent":69.5999145507813}]},"layers":[{"ddd":0,"ind":1,"ty":5,"nm":"vs 2","sr":1,"ks":{"o":{"a":0,"k":40,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150,155,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-BoldItalic","t":"vs","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":300,"op":450,"st":173,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"cells 3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[149.5,-41,0],"ix":2},"a":{"a":0,"k":[-465.5,-46,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[276,62],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_02","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[30,30],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_03","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":45,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"diamond","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,114.25],[-464.563,124.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,166],[-464.563,176.25]],"c":false},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"vertLines","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":50,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145.25],"ix":2},"a":{"a":0,"k":[-465,145.25],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"interior","np":3,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.117647059262,0.137254908681,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":300,"op":450,"st":300,"bm":0}],"markers":[{"tm":0,"cm":"otherTeams","dr":0},{"tm":150,"cm":"pastRound","dr":0},{"tm":300,"cm":"emptyCell","dr":0}]}')
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.6","fr":30,"ip":0,"op":150,"w":300,"h":300,"nm":"extraCells","ddd":0,"assets":[{"id":"image_0","w":200,"h":187,"u":"images/","p":"img_0.png"},{"id":"image_1","w":182,"h":200,"u":"images/","p":"img_1.png"},{"id":"comp_45","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"player_logo.png","cl":"png","refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[100,93.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":900,"st":0,"bm":0}]},{"id":"comp_46","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"opponent_logo.png","cl":"png","refId":"image_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[91,100,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":600,"st":0,"bm":0}]}],"fonts":{"list":[{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold","fName":"BeaufortforLOL-Bold","ascent":71.6988770291209},{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold Italic","fName":"BeaufortforLOL-BoldItalic","ascent":71.0999146103859}]},"layers":[{"ddd":0,"ind":7,"ty":5,"nm":"vs ","sr":1,"ks":{"o":{"a":0,"k":40,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150,155,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-BoldItalic","t":"vs","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":0,"op":150,"st":-127,"bm":0},{"ddd":0,"ind":8,"ty":5,"nm":"ABC 4","parent":9,"sr":1,"ks":{"o":{"a":0,"k":50,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[316,124,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"ABC","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":0,"nm":"team_1","refId":"comp_45","sr":1,"ks":{"o":{"a":0,"k":50,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[45.5,148.5,0],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"w":200,"h":200,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":10,"ty":5,"nm":"XYZ 4","parent":11,"sr":1,"ks":{"o":{"a":0,"k":50,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-117,124,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"XYZ","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":11,"ty":0,"nm":"team_2","refId":"comp_46","sr":1,"ks":{"o":{"a":0,"k":50,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[256.5,148.5,0],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[0,0,0,0],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":0,"k":80,"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"cells","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[149.5,-41,0],"ix":2},"a":{"a":0,"k":[-465.5,-46,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[276,62],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_02","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[30,30],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_03","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":45,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"diamond","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,114.25],[-464.563,124.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,166],[-464.563,176.25]],"c":false},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"vertLines","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":50,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145.25],"ix":2},"a":{"a":0,"k":[-465,145.25],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"interior","np":3,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.117647059262,0.137254908681,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":0,"op":150,"st":0,"bm":0}],"markers":[{"tm":0,"cm":"otherTeams","dr":0},{"tm":150,"cm":"pastRound","dr":0}]}')
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.6","fr":30,"ip":150,"op":300,"w":300,"h":300,"nm":"extraCells","ddd":0,"assets":[{"id":"image_0","w":200,"h":187,"u":"images/","p":"img_0.png"},{"id":"image_1","w":182,"h":200,"u":"images/","p":"img_1.png"},{"id":"comp_47","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"player_logo.png","cl":"png","refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[100,93.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":900,"st":0,"bm":0}]},{"id":"comp_48","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"opponent_logo.png","cl":"png","refId":"image_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[91,100,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":600,"st":0,"bm":0}]}],"fonts":{"list":[{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold Italic","fName":"BeaufortforLOL-BoldItalic","ascent":71.0999146103859},{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold","fName":"BeaufortforLOL-Bold","ascent":71.6988770291209}]},"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"checkMark_cell","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[241.5,152.5,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-72.256,-22.547],[-100.178,6.229],[-109.903,-3.325],[-116.5,3.158],[-101.202,18.797],[-66,-16.746]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[-91.25,-1.875],"ix":2},"a":{"a":0,"k":[-91.25,-1.875],"ix":1},"s":{"a":0,"k":[40,40],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.039215687662,0.796078443527,0.901960790157,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":150,"op":300,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":5,"nm":"ABC 5","parent":3,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[316,124,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"ABC","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.98,0.75,0.04]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":150,"op":300,"st":150,"bm":0},{"ddd":0,"ind":3,"ty":0,"nm":"team_6","refId":"comp_47","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[45.5,148.5,0],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"w":200,"h":200,"ip":150,"op":300,"st":150,"bm":0},{"ddd":0,"ind":4,"ty":5,"nm":"XYZ 5","parent":5,"sr":1,"ks":{"o":{"a":0,"k":50,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-117,124,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[400,400,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"XYZ","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":150,"op":300,"st":150,"bm":0},{"ddd":0,"ind":5,"ty":0,"nm":"team_5","refId":"comp_48","sr":1,"ks":{"o":{"a":0,"k":50,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[256.5,148.5,0],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[25,25,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[0,0,0,0],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":0,"k":80,"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":150,"op":300,"st":150,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"cells 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[149.5,-41,0],"ix":2},"a":{"a":0,"k":[-465.5,-46,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[276,62],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_02","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[30,30],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_03","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":45,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"diamond","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,114.25],[-464.563,124.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,166],[-464.563,176.25]],"c":false},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"vertLines","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145.25],"ix":2},"a":{"a":0,"k":[-465,145.25],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"interior","np":3,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.115709342062,0.465220421553,0.517647087574,1],"ix":4},"o":{"a":0,"k":30,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":4,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.117647059262,0.137254908681,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":150,"op":300,"st":150,"bm":0},{"ddd":0,"ind":7,"ty":5,"nm":"vs ","sr":1,"ks":{"o":{"a":0,"k":40,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150,155,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-BoldItalic","t":"vs","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":0,"op":150,"st":-127,"bm":0}],"markers":[{"tm":0,"cm":"otherTeams","dr":0},{"tm":150,"cm":"pastRound","dr":0}]}')
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.6","fr":30,"ip":1200,"op":1650,"w":700,"h":700,"nm":"finalsCell","ddd":0,"assets":[{"id":"image_0","w":200,"h":187,"u":"images/","p":"img_0.png"},{"id":"image_1","w":182,"h":200,"u":"images/","p":"img_1.png"},{"id":"comp_57","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"player_logo.png","cl":"png","refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[100,93.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":900,"st":0,"bm":0}]},{"id":"comp_58","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"opponent_logo.png","cl":"png","refId":"image_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[91,100,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":600,"st":0,"bm":0}]}],"fonts":{"list":[{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold","fName":"BeaufortforLOL-Bold","ascent":71.6988770291209}]},"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"red_X","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[313.156,322.579,0],"ix":2},"a":{"a":0,"k":[-36.844,-27.421,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-91.953,-82.356],[-101.125,-73.03],[-83.167,-54.918],[-100.894,-36.652],[-91.645,-27.404],[-73.688,-45.593],[-55.73,-27.327],[-46.25,-36.729],[-64.208,-54.687],[-46.558,-72.799],[-55.73,-81.893],[-73.688,-64.013]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[-74.344,-54.421],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p667_1_0p167_0p167","0p667_1_0p167_0p167"],"t":1261,"s":[50,50],"e":[40,40]},{"t":1277}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":1261,"s":[1,1,1,1],"e":[0.717647075653,0.156862750649,0.156862750649,1]},{"t":1277}],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":1261,"op":1672,"st":1200,"bm":0},{"ddd":0,"ind":2,"ty":5,"nm":"ABC 4","parent":3,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[108.571,264.929,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[285.714,285.714,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"ABC","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.98,0.75,0.04]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":1200,"op":1673,"st":1073,"bm":0},{"ddd":0,"ind":3,"ty":0,"nm":"player_logo","refId":"comp_57","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":1259,"s":[249,334,0],"e":[266,334,0],"to":[0,0,0],"ti":[0,0,0]},{"t":1268}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[35,35,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[0,0,0,0],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":1261,"s":[0],"e":[50]},{"t":1273}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":1200,"op":1673,"st":1200,"bm":0},{"ddd":0,"ind":4,"ty":5,"nm":"XYZ 2","parent":5,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":1259,"s":[100],"e":[0]},{"t":1268}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[97.143,260,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[285.714,285.714,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"XYZ","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":1200,"op":1673,"st":1073,"bm":0},{"ddd":0,"ind":5,"ty":0,"nm":"opponent_logo","refId":"comp_58","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":1259,"s":[100],"e":[0]},{"t":1268}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":1259,"s":[447,338,0],"e":[429,338,0],"to":[0,0,0],"ti":[0,0,0]},{"t":1268}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[35,35,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[1,1,1,1],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":0,"k":0,"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":1200,"op":1673,"st":1073,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"finalsCell 3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-17.5,254.5,0],"ix":2},"a":{"a":0,"k":[-465.5,-46,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-235.948,118.167],[39.937,118.167]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":1242,"s":[50],"e":[0]},{"t":1261,"s":[0],"h":1}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[1],"y":[0]},"n":["0p833_1_1_0"],"t":1242,"s":[50],"e":[50]},{"t":1261,"s":[50],"h":1}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.717647075653,0.156862750649,0.156862750649,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"baseLine_red","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-235.948,118.167],[39.937,118.167]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[1],"y":[0]},"n":["0p833_1_1_0"],"t":1242,"s":[0],"e":[0]},{"t":1261,"s":[0],"h":1}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":1242,"s":[50],"e":[0]},{"t":1261,"s":[0],"h":1}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.956862747669,0.717647075653,0.101960785687,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"baseLine","np":3,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[275,140],"ix":2},"p":{"a":0,"k":[-97.7,48],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_final","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Final","np":1,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[50,50],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_03","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":45,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"diamond","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,73.75],[-464.563,111.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,179],[-464.563,213.75]],"c":false},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"vertLines","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[-98,50],"ix":2},"a":{"a":0,"k":[-465,145.25],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"interior","np":3,"cix":2,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[-98.005,48.25],"ix":2},"a":{"a":0,"k":[-98.005,48.25],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0_1_0p167_0p167","0_1_0p167_0p167"],"t":1259,"s":[120,120],"e":[100,100]},{"t":1268}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":5,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gf","o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":1259,"s":[0],"e":[80]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":1260,"s":[80],"e":[0]},{"t":1274}],"ix":10},"r":1,"g":{"p":3,"k":{"a":0,"k":[0,0.549,0.071,0.071,0.5,0.333,0.104,0.114,1,0.118,0.137,0.157],"ix":9}},"s":{"a":0,"k":[-100,48],"ix":5},"e":{"a":0,"k":[-267,5],"ix":6},"t":2,"h":{"a":0,"k":0,"ix":7},"a":{"a":0,"k":0,"ix":8},"nm":"Gradient Fill 1","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"fl","c":{"a":0,"k":[0.117647059262,0.137254908681,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":1200,"op":1800,"st":1200,"bm":0}],"markers":[{"tm":0,"cm":"next_unknown","dr":0},{"tm":600,"cm":"next_known","dr":0},{"tm":1200,"cm":"loss","dr":0},{"tm":1649,"cm":"","dr":0}]}')
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.6","fr":30,"ip":599,"op":1200,"w":700,"h":700,"nm":"finalsCell","ddd":0,"assets":[{"id":"image_0","w":200,"h":187,"u":"images/","p":"img_0.png"},{"id":"image_1","w":182,"h":200,"u":"images/","p":"img_1.png"},{"id":"comp_59","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"player_logo.png","cl":"png","refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[100,93.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":900,"st":0,"bm":0}]},{"id":"comp_60","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"opponent_logo.png","cl":"png","refId":"image_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[91,100,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":600,"st":0,"bm":0}]},{"id":"comp_61","layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Clash_Logo_Small Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[42.5,42.5,0],"ix":2},"a":{"a":0,"k":[82.5,112.5,0],"ix":1},"s":{"a":0,"k":[37.778,37.778,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.457,-1.993],[0,0],[-9.706,2.813],[-3.093,8.939],[7.521,8.636],[-3.568,6.95],[-2.658,-7.104],[9.851,-0.504],[0,0],[-9.893,-18.064]],"o":[[9.709,2.817],[0,0],[-10.892,-8.992],[2.537,-7.335],[-7.523,-8.636],[-5.434,3.033],[2.657,7.104],[-9.893,0.319],[0,0],[1.238,2.261]],"v":[[-15.955,30.727],[2.813,33.21],[21.571,30.729],[25.796,8.868],[13.858,-12.331],[9.094,-33.544],[-0.54,-13.098],[-4.689,3.815],[-13.171,-7.851],[-18.44,24.351]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[79.527,34.407],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.17,-0.452],[17.191,-11.689],[-6.713,-2.834],[0,39.25],[16.677,-10.026],[1.727,-6.349],[0,0]],"o":[[-7.111,19.629],[7.333,4.074],[45.464,-30.734],[0,0],[-0.771,7.641],[0,0],[-1.807,7.008]],"v":[[3.358,-3.018],[-36.565,43.692],[-15.209,54.038],[36.565,-54.038],[-2.251,-28.981],[-6.069,-8.015],[6.978,-14.92]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[128.246,113.124],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":1,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.061,6.535],[0,0],[0,0.198],[0,0],[-7.218,-4.311],[-1.758,-6.341],[0,0],[0,0],[0,0],[0,0],[41.748,0],[0.437,0.985],[0,0],[-0.001,0],[0,0],[-0.082,0.008],[-14.379,5.743],[-7.016,-3.457],[5.229,-2.309],[-3.024,0],[-10.09,8.279],[4.439,43.254]],"o":[[-0.6,-6.463],[0,0],[-0.001,-0.198],[0,0],[7.19,4.69],[0.801,7.643],[0,0],[1.95,9.111],[0,0],[21.799,53.302],[0,0],[-41.193,0],[-0.003,-0.003],[0,0],[-0.001,-0.003],[0,0],[1.358,-0.347],[6.029,3.818],[-4.805,1.896],[9.435,6.617],[3.269,0],[-76.761,-30.442],[0,0]],"v":[[-69.401,-60.185],[-70.322,-79.697],[-70.341,-82.364],[-70.346,-82.957],[-54.244,-71.686],[-31.476,-57.343],[-27.561,-36.393],[-40.382,-43.178],[-36.135,-29.324],[-36.084,-29.3],[70.345,45.012],[12.06,82.957],[-46.205,45.058],[-46.226,45.036],[-46.216,45.034],[-46.226,45.012],[-46.075,44.998],[-19.544,36.086],[3.268,48.86],[-11.526,55.69],[12.06,62.658],[36.786,55.561],[-69.239,-58.45]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[70.345,142.043],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":1,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[2.965,61.109],[0,0],[12.985,10.933]],"o":[[0,0],[-12.986,10.933],[0,0],[-2.966,61.109]],"v":[[0.001,40.506],[33.976,-40.506],[0.001,-30.414],[-33.975,-40.506]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[82.405,108.135],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":1,"cix":2,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.35686275363,0.352941185236,0.337254911661,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":0,"op":900,"st":0,"bm":0}]}],"fonts":{"list":[{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold Italic","fName":"BeaufortforLOL-BoldItalic","ascent":71.0999146103859},{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold","fName":"BeaufortforLOL-Bold","ascent":71.6988770291209}]},"layers":[{"ddd":0,"ind":8,"ty":5,"nm":"ABC 3","parent":9,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[108.571,264.929,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[285.714,285.714,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"ABC","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.98,0.75,0.04]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":727,"op":1200,"st":600,"bm":0},{"ddd":0,"ind":9,"ty":0,"nm":"player_logo","refId":"comp_59","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":727,"s":[306,334,0],"e":[266,334,0],"to":[0,0,0],"ti":[0,0,0]},{"t":750}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[35,35,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[1,1,1,1],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":727,"s":[100],"e":[0]},{"t":756}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":727,"op":1200,"st":727,"bm":0},{"ddd":0,"ind":10,"ty":5,"nm":"XYZ","parent":11,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[97.143,260,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[285.714,285.714,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"XYZ","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":727,"op":1200,"st":600,"bm":0},{"ddd":0,"ind":11,"ty":0,"nm":"opponent_logo","refId":"comp_60","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":727,"s":[397,338,0],"e":[429,338,0],"to":[0,0,0],"ti":[0,0,0]},{"t":750}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[35,35,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[1,1,1,1],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":727,"s":[100],"e":[0]},{"t":756}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":727,"op":1200,"st":600,"bm":0},{"ddd":0,"ind":12,"ty":0,"nm":"tnmt_logo.png","cl":"png","refId":"comp_61","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[353.5,348,0],"ix":2},"a":{"a":0,"k":[42.5,42.5,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,-14.185]},"o":{"x":[1,1,1],"y":[0,0,0]},"n":["0p833_0p833_1_0","0p833_0p833_1_0","0p833_-14p185_1_0"],"t":705,"s":[80,80,100],"e":[100,100,100]},{"t":725}],"ix":6}},"ao":0,"w":85,"h":85,"ip":600,"op":728,"st":600,"bm":0},{"ddd":0,"ind":13,"ty":5,"nm":"vs 3","sr":1,"ks":{"o":{"a":0,"k":70,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[350,357,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":28,"f":"BeaufortforLOL-BoldItalic","t":"vs","j":2,"tr":24,"lh":33.6,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":728,"op":1201,"st":601,"bm":0},{"ddd":0,"ind":14,"ty":4,"nm":"finalsCell 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-17.5,254.5,0],"ix":2},"a":{"a":0,"k":[-465.5,-46,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-235.948,118.167],[39.937,118.167]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.279],"y":[0.838]},"o":{"x":[0.027],"y":[0.508]},"n":["0p279_0p838_0p027_0p508"],"t":738,"s":[0],"e":[20.148]},{"i":{"x":[0.972],"y":[0.706]},"o":{"x":[0.868],"y":[0.132]},"n":["0p972_0p706_0p868_0p132"],"t":749,"s":[20.148],"e":[50]},{"t":760}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":759,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":760,"s":[100],"e":[0]},{"t":772}],"ix":4},"w":{"a":0,"k":5,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"whiteStroke","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"st","c":{"a":0,"k":[0.956862747669,0.717647075653,0.101960785687,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"baseLine","np":4,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":1,"k":[{"i":{"x":[0.985,0.985],"y":[0.723,0.856]},"o":{"x":[1,1],"y":[0,0]},"n":["0p985_0p723_1_0","0p985_0p856_1_0"],"t":705,"s":[250,85],"e":[275,140]},{"t":725}],"ix":2},"p":{"a":0,"k":[-97.7,48],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_final","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Final","np":1,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[50,50],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_03","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":45,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"diamond","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,73.75],[-464.563,111.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,179],[-464.563,213.75]],"c":false},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"vertLines","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":727,"s":[0],"e":[100]},{"t":728}],"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[-98,50],"ix":2},"a":{"a":0,"k":[-465,145.25],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"interior","np":3,"cix":2,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.117647059262,0.137254908681,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":600,"op":1200,"st":600,"bm":0}],"markers":[{"tm":0,"cm":"next_unknown","dr":0},{"tm":600,"cm":"next_known","dr":0},{"tm":1200,"cm":"loss","dr":0},{"tm":1649,"cm":"","dr":0}]}')
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.6","fr":30,"ip":0,"op":600,"w":700,"h":700,"nm":"finalsCell","ddd":0,"assets":[{"id":"image_0","w":200,"h":187,"u":"images/","p":"img_0.png"},{"id":"comp_62","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"player_logo.png","cl":"png","refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[100,93.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":900,"st":0,"bm":0}]},{"id":"comp_63","layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Shape Layer 3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"n":["0p667_1_0p333_0","0p667_1_0p333_0"],"t":0,"s":[7,7],"e":[10,10]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"n":["0p667_1_0p333_0","0p667_1_0p333_0"],"t":11,"s":[10,10],"e":[7,7]},{"t":23}],"ix":2,"x":"var $bm_rt;\\n$bm_rt = loopOut();"},"p":{"a":0,"k":[-20,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"n":["0p667_1_0p333_0","0p667_1_0p333_0"],"t":6,"s":[7,7],"e":[10,10]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"n":["0p667_1_0p333_0","0p667_1_0p333_0"],"t":17,"s":[10,10],"e":[7,7]},{"t":29}],"ix":2,"x":"var $bm_rt;\\n$bm_rt = loopOut();"},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 2","mn":"ADBE Vector Shape - Ellipse","hd":false},{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"n":["0p667_1_0p333_0","0p667_1_0p333_0"],"t":11,"s":[7,7],"e":[10,10]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"n":["0p667_1_0p333_0","0p667_1_0p333_0"],"t":22,"s":[10,10],"e":[7,7]},{"t":34}],"ix":2,"x":"var $bm_rt;\\n$bm_rt = loopOut();"},"p":{"a":0,"k":[20,0],"ix":3},"nm":"Ellipse Path 3","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[0.941176474094,0.901960790157,0.823529422283,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":0,"op":900,"st":0,"bm":0}]},{"id":"comp_64","layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Clash_Logo_Small Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[42.5,42.5,0],"ix":2},"a":{"a":0,"k":[82.5,112.5,0],"ix":1},"s":{"a":0,"k":[37.778,37.778,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.457,-1.993],[0,0],[-9.706,2.813],[-3.093,8.939],[7.521,8.636],[-3.568,6.95],[-2.658,-7.104],[9.851,-0.504],[0,0],[-9.893,-18.064]],"o":[[9.709,2.817],[0,0],[-10.892,-8.992],[2.537,-7.335],[-7.523,-8.636],[-5.434,3.033],[2.657,7.104],[-9.893,0.319],[0,0],[1.238,2.261]],"v":[[-15.955,30.727],[2.813,33.21],[21.571,30.729],[25.796,8.868],[13.858,-12.331],[9.094,-33.544],[-0.54,-13.098],[-4.689,3.815],[-13.171,-7.851],[-18.44,24.351]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[79.527,34.407],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.17,-0.452],[17.191,-11.689],[-6.713,-2.834],[0,39.25],[16.677,-10.026],[1.727,-6.349],[0,0]],"o":[[-7.111,19.629],[7.333,4.074],[45.464,-30.734],[0,0],[-0.771,7.641],[0,0],[-1.807,7.008]],"v":[[3.358,-3.018],[-36.565,43.692],[-15.209,54.038],[36.565,-54.038],[-2.251,-28.981],[-6.069,-8.015],[6.978,-14.92]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[128.246,113.124],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":1,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.061,6.535],[0,0],[0,0.198],[0,0],[-7.218,-4.311],[-1.758,-6.341],[0,0],[0,0],[0,0],[0,0],[41.748,0],[0.437,0.985],[0,0],[-0.001,0],[0,0],[-0.082,0.008],[-14.379,5.743],[-7.016,-3.457],[5.229,-2.309],[-3.024,0],[-10.09,8.279],[4.439,43.254]],"o":[[-0.6,-6.463],[0,0],[-0.001,-0.198],[0,0],[7.19,4.69],[0.801,7.643],[0,0],[1.95,9.111],[0,0],[21.799,53.302],[0,0],[-41.193,0],[-0.003,-0.003],[0,0],[-0.001,-0.003],[0,0],[1.358,-0.347],[6.029,3.818],[-4.805,1.896],[9.435,6.617],[3.269,0],[-76.761,-30.442],[0,0]],"v":[[-69.401,-60.185],[-70.322,-79.697],[-70.341,-82.364],[-70.346,-82.957],[-54.244,-71.686],[-31.476,-57.343],[-27.561,-36.393],[-40.382,-43.178],[-36.135,-29.324],[-36.084,-29.3],[70.345,45.012],[12.06,82.957],[-46.205,45.058],[-46.226,45.036],[-46.216,45.034],[-46.226,45.012],[-46.075,44.998],[-19.544,36.086],[3.268,48.86],[-11.526,55.69],[12.06,62.658],[36.786,55.561],[-69.239,-58.45]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[70.345,142.043],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":1,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[2.965,61.109],[0,0],[12.985,10.933]],"o":[[0,0],[-12.986,10.933],[0,0],[-2.966,61.109]],"v":[[0.001,40.506],[33.976,-40.506],[0.001,-30.414],[-33.975,-40.506]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[82.405,108.135],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":1,"cix":2,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.35686275363,0.352941185236,0.337254911661,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":0,"op":900,"st":0,"bm":0}]}],"fonts":{"list":[{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold Italic","fName":"BeaufortforLOL-BoldItalic","ascent":71.0999146103859},{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold","fName":"BeaufortforLOL-Bold","ascent":71.6988770291209}]},"layers":[{"ddd":0,"ind":16,"ty":5,"nm":"ABC 2","parent":17,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[108.571,264.929,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[285.714,285.714,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"ABC","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.98,0.75,0.04]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":127,"op":600,"st":0,"bm":0},{"ddd":0,"ind":17,"ty":0,"nm":"player_logo","refId":"comp_62","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":127,"s":[306,334,0],"e":[266,334,0],"to":[0,0,0],"ti":[0,0,0]},{"t":150}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[35,35,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[1,1,1,1],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":128,"s":[100],"e":[0]},{"t":157}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":127,"op":600,"st":127,"bm":0},{"ddd":0,"ind":18,"ty":5,"nm":"WAITING","parent":20,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[98,212,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[200,200,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"WAITING","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":127,"op":600,"st":0,"bm":0},{"ddd":0,"ind":19,"ty":5,"nm":"vs ","sr":1,"ks":{"o":{"a":0,"k":70,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[350,357,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":28,"f":"BeaufortforLOL-BoldItalic","t":"vs","j":2,"tr":24,"lh":33.6,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":127,"op":600,"st":0,"bm":0},{"ddd":0,"ind":20,"ty":0,"nm":"questionMark","refId":"comp_63","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":127,"s":[397,338,0],"e":[429,338,0],"to":[0,0,0],"ti":[0,0,0]},{"t":150}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[50,50,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[1,1,1,1],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":128,"s":[100],"e":[0]},{"t":157}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":127,"op":600,"st":0,"bm":0},{"ddd":0,"ind":21,"ty":0,"nm":"tnmt_logo.png","cl":"png","refId":"comp_64","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[353.5,348,0],"ix":2},"a":{"a":0,"k":[42.5,42.5,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,-14.185]},"o":{"x":[1,1,1],"y":[0,0,0]},"n":["0p833_0p833_1_0","0p833_0p833_1_0","0p833_-14p185_1_0"],"t":105,"s":[80,80,100],"e":[100,100,100]},{"t":125}],"ix":6}},"ao":0,"w":85,"h":85,"ip":0,"op":128,"st":0,"bm":0},{"ddd":0,"ind":22,"ty":4,"nm":"finalsCell","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-17.5,254.5,0],"ix":2},"a":{"a":0,"k":[-465.5,-46,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-235.948,118.167],[39.937,118.167]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.279],"y":[0.838]},"o":{"x":[0.027],"y":[0.508]},"n":["0p279_0p838_0p027_0p508"],"t":148,"s":[0],"e":[20.148]},{"i":{"x":[0.972],"y":[0.706]},"o":{"x":[0.868],"y":[0.132]},"n":["0p972_0p706_0p868_0p132"],"t":159,"s":[20.148],"e":[50]},{"t":170}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":169,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":170,"s":[100],"e":[0]},{"t":182}],"ix":4},"w":{"a":0,"k":5,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"whiteStroke","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"st","c":{"a":0,"k":[0.956862747669,0.717647075653,0.101960785687,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"yellowStroke","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"baseLine","np":4,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":1,"k":[{"i":{"x":[0.985,0.985],"y":[0.723,0.856]},"o":{"x":[1,1],"y":[0,0]},"n":["0p985_0p723_1_0","0p985_0p856_1_0"],"t":105,"s":[250,85],"e":[275,140]},{"t":125}],"ix":2},"p":{"a":0,"k":[-97.7,48],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_final","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Final","np":1,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[50,50],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_03","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":45,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"diamond","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,73.75],[-464.563,111.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,179],[-464.563,213.75]],"c":false},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"vertLines","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":127,"s":[0],"e":[100]},{"t":128}],"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[-98,50],"ix":2},"a":{"a":0,"k":[-465,145.25],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"interior","np":3,"cix":2,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.117647059262,0.137254908681,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":0,"op":600,"st":0,"bm":0}],"markers":[{"tm":0,"cm":"next_unknown","dr":0},{"tm":600,"cm":"next_known","dr":0},{"tm":1200,"cm":"loss","dr":0},{"tm":1649,"cm":"","dr":0}]}')
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.6","fr":30,"ip":0,"op":300,"w":500,"h":400,"nm":"NextCell","ddd":0,"assets":[{"id":"image_0","w":200,"h":187,"u":"images/","p":"img_0.png"},{"id":"image_1","w":182,"h":200,"u":"images/","p":"img_1.png"},{"id":"comp_83","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"player_logo.png","cl":"png","refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[100,93.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":900,"st":0,"bm":0}]},{"id":"comp_84","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"opponent_logo.png","cl":"png","refId":"image_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[91,100,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":600,"st":0,"bm":0}]}],"fonts":{"list":[{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold Italic","fName":"BeaufortforLOL-BoldItalic","ascent":71.0999146103859},{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold","fName":"BeaufortforLOL-Bold","ascent":71.6988770291209}]},"layers":[{"ddd":0,"ind":8,"ty":5,"nm":"ABC","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":0,"s":[0],"e":[100]},{"t":13}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"n":"0p667_1_1_0","t":0,"s":[148.5,203.5,0],"e":[198.5,203.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":13,"s":[198.5,203.5,0],"e":[190.5,203.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":27}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[1,1,1,1],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":26,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":27,"s":[100],"e":[0]},{"t":45}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"ABC","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.98,0.75,0.04]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":0,"nm":"player_logo","refId":"comp_83","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":13,"s":[0],"e":[100]},{"t":27}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":13,"s":[144.5,197.5,0],"e":[132.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":27}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0,0.667],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,7.222]},"n":["0_1_0p167_0p167","0_1_0p167_0p167","0p667_1_0p167_7p222"],"t":13,"s":[10,10,100],"e":[25,25,100]},{"t":27}],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[1,1,1,1],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":26,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":27,"s":[100],"e":[0]},{"t":45}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":10,"ty":5,"nm":"XYZ","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":0,"s":[0],"e":[100]},{"t":13}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"n":"0p667_1_1_0","t":0,"s":[352.25,203.5,0],"e":[302.25,203.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":13,"s":[302.25,203.5,0],"e":[310.25,203.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":27}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[1,1,1,1],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":26,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":27,"s":[100],"e":[0]},{"t":45}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"XYZ","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":11,"ty":0,"nm":"opponent_logo","refId":"comp_84","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":13,"s":[0],"e":[100]},{"t":27}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":13,"s":[356.5,197.5,0],"e":[368.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":27}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0,0.667],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,7.222]},"n":["0_1_0p167_0p167","0_1_0p167_0p167","0p667_1_0p167_7p222"],"t":13,"s":[10,10,100],"e":[25,25,100]},{"t":27}],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[1,1,1,1],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":26,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":27,"s":[100],"e":[0]},{"t":45}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":5,"nm":"vs ","sr":1,"ks":{"o":{"a":0,"k":80,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,202,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-BoldItalic","t":"vs","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":0,"op":300,"st":-127,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"currentCell","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,199,0],"ix":2},"a":{"a":0,"k":[-465.5,-46,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-138.417,31.083],[138.875,31.083]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.279],"y":[0.852]},"o":{"x":[0.027],"y":[0.462]},"n":["0p279_0p852_0p027_0p462"],"t":0,"s":[0],"e":[20.148]},{"i":{"x":[0.972],"y":[0.545]},"o":{"x":[0.868],"y":[0.204]},"n":["0p972_0p545_0p868_0p204"],"t":10,"s":[20.148],"e":[50]},{"t":27}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":26,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":27,"s":[100],"e":[0]},{"t":39}],"ix":4},"w":{"a":0,"k":5,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"whiteStroke","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"st","c":{"a":0,"k":[0.956862747669,0.717647075653,0.101960785687,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,2.5],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"baseLine","np":4,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[276,62],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[30,30],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_03","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":45,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"diamond","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,114.25],[-464.563,124.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,166],[-464.563,176.25]],"c":false},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"vertLines","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[465.5,-146],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"interior","np":2,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0.115709342062,0.465220421553,0.517647087574,1],"ix":4},"o":{"a":0,"k":0,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-465.5,-46],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833],"y":[0.833,0.833]},"o":{"x":[1,1],"y":[0,0]},"n":["0p833_0p833_1_0","0p833_0p833_1_0"],"t":13,"s":[100,100],"e":[120,120]},{"t":27}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"cell_01","np":5,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.117647059262,0.137254908681,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":0,"op":300,"st":0,"bm":0}],"markers":[{"tm":0,"cm":"next_known","dr":299},{"tm":300,"cm":"next_unknown","dr":599}]}')
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.6","fr":30,"ip":300,"op":900,"w":500,"h":400,"nm":"NextCell","ddd":0,"assets":[{"id":"image_0","w":200,"h":187,"u":"images/","p":"img_0.png"},{"id":"comp_81","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"player_logo.png","cl":"png","refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[100,93.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":900,"st":0,"bm":0}]},{"id":"comp_82","layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Shape Layer 3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"n":["0p667_1_0p333_0","0p667_1_0p333_0"],"t":0,"s":[7,7],"e":[10,10]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"n":["0p667_1_0p333_0","0p667_1_0p333_0"],"t":11,"s":[10,10],"e":[7,7]},{"t":23}],"ix":2,"x":"var $bm_rt;\\n$bm_rt = loopOut();"},"p":{"a":0,"k":[-20,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"n":["0p667_1_0p333_0","0p667_1_0p333_0"],"t":6,"s":[7,7],"e":[10,10]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"n":["0p667_1_0p333_0","0p667_1_0p333_0"],"t":17,"s":[10,10],"e":[7,7]},{"t":29}],"ix":2,"x":"var $bm_rt;\\n$bm_rt = loopOut();"},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 2","mn":"ADBE Vector Shape - Ellipse","hd":false},{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"n":["0p667_1_0p333_0","0p667_1_0p333_0"],"t":11,"s":[7,7],"e":[10,10]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"n":["0p667_1_0p333_0","0p667_1_0p333_0"],"t":22,"s":[10,10],"e":[7,7]},{"t":34}],"ix":2,"x":"var $bm_rt;\\n$bm_rt = loopOut();"},"p":{"a":0,"k":[20,0],"ix":3},"nm":"Ellipse Path 3","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[0.941176474094,0.901960790157,0.823529422283,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":0,"op":900,"st":0,"bm":0}]}],"fonts":{"list":[{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold Italic","fName":"BeaufortforLOL-BoldItalic","ascent":71.0999146103859},{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold","fName":"BeaufortforLOL-Bold","ascent":71.6988770291209}]},"layers":[{"ddd":0,"ind":2,"ty":5,"nm":"ABC 2","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":300,"s":[0],"e":[100]},{"t":313}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":1,"y":0},"n":"0p667_1_1_0","t":300,"s":[148.5,203.5,0],"e":[198.5,203.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":313,"s":[198.5,203.5,0],"e":[190.5,203.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":327}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":24,"nm":"Levels (Individual Controls)","np":42,"mn":"ADBE Pro Levels2","ix":1,"en":1,"ef":[{"ty":7,"nm":"Channel:","mn":"ADBE Pro Levels2-0001","ix":1,"v":{"a":0,"k":1,"ix":1}},{},{"ty":6,"nm":"RGB","mn":"ADBE Pro Levels2-0003","ix":3,"v":0},{"ty":0,"nm":"Input Black","mn":"ADBE Pro Levels2-0004","ix":4,"v":{"a":0,"k":0,"ix":4}},{"ty":0,"nm":"Input White","mn":"ADBE Pro Levels2-0005","ix":5,"v":{"a":0,"k":1,"ix":5}},{"ty":0,"nm":"Gamma","mn":"ADBE Pro Levels2-0006","ix":6,"v":{"a":0,"k":1,"ix":6}},{"ty":0,"nm":"Output Black","mn":"ADBE Pro Levels2-0007","ix":7,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":326,"s":[0],"e":[1]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":327,"s":[1],"e":[0]},{"t":345}],"ix":7}},{"ty":0,"nm":"Output White","mn":"ADBE Pro Levels2-0008","ix":8,"v":{"a":0,"k":1,"ix":8}},{"ty":6,"nm":"RGB","mn":"ADBE Pro Levels2-0009","ix":9,"v":0},{"ty":6,"nm":"Red","mn":"ADBE Pro Levels2-0010","ix":10,"v":0},{"ty":0,"nm":"Red Input Black","mn":"ADBE Pro Levels2-0011","ix":11,"v":{"a":0,"k":0,"ix":11}},{"ty":0,"nm":"Red Input White","mn":"ADBE Pro Levels2-0012","ix":12,"v":{"a":0,"k":1,"ix":12}},{"ty":0,"nm":"Red Gamma","mn":"ADBE Pro Levels2-0013","ix":13,"v":{"a":0,"k":1,"ix":13}},{"ty":0,"nm":"Red Output Black","mn":"ADBE Pro Levels2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Red Output White","mn":"ADBE Pro Levels2-0015","ix":15,"v":{"a":0,"k":1,"ix":15}},{"ty":6,"nm":"Red","mn":"ADBE Pro Levels2-0016","ix":16,"v":0},{"ty":6,"nm":"Green","mn":"ADBE Pro Levels2-0017","ix":17,"v":0},{"ty":0,"nm":"Green Input Black","mn":"ADBE Pro Levels2-0018","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":0,"nm":"Green Input White","mn":"ADBE Pro Levels2-0019","ix":19,"v":{"a":0,"k":1,"ix":19}},{"ty":0,"nm":"Green Gamma","mn":"ADBE Pro Levels2-0020","ix":20,"v":{"a":0,"k":1,"ix":20}},{"ty":0,"nm":"Green Output Black","mn":"ADBE Pro Levels2-0021","ix":21,"v":{"a":0,"k":0,"ix":21}},{"ty":0,"nm":"Green Output White","mn":"ADBE Pro Levels2-0022","ix":22,"v":{"a":0,"k":1,"ix":22}},{"ty":6,"nm":"Green","mn":"ADBE Pro Levels2-0023","ix":23,"v":0},{"ty":6,"nm":"Blue","mn":"ADBE Pro Levels2-0024","ix":24,"v":0},{"ty":0,"nm":"Blue Input Black","mn":"ADBE Pro Levels2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":0,"nm":"Blue Input White","mn":"ADBE Pro Levels2-0026","ix":26,"v":{"a":0,"k":1,"ix":26}},{"ty":0,"nm":"Blue Gamma","mn":"ADBE Pro Levels2-0027","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":0,"nm":"Blue Output Black","mn":"ADBE Pro Levels2-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":0,"nm":"Blue Output White","mn":"ADBE Pro Levels2-0029","ix":29,"v":{"a":0,"k":1,"ix":29}},{"ty":6,"nm":"Blue","mn":"ADBE Pro Levels2-0030","ix":30,"v":0},{"ty":6,"nm":"Alpha","mn":"ADBE Pro Levels2-0031","ix":31,"v":0},{"ty":0,"nm":"Alpha Input Black","mn":"ADBE Pro Levels2-0032","ix":32,"v":{"a":0,"k":0,"ix":32}},{"ty":0,"nm":"Alpha Input White","mn":"ADBE Pro Levels2-0033","ix":33,"v":{"a":0,"k":1,"ix":33}},{"ty":0,"nm":"Alpha Gamma","mn":"ADBE Pro Levels2-0034","ix":34,"v":{"a":0,"k":1,"ix":34}},{"ty":0,"nm":"Alpha Output Black","mn":"ADBE Pro Levels2-0035","ix":35,"v":{"a":0,"k":0,"ix":35}},{"ty":0,"nm":"Alpha Output White","mn":"ADBE Pro Levels2-0036","ix":36,"v":{"a":0,"k":1,"ix":36}},{"ty":6,"nm":"Alpha","mn":"ADBE Pro Levels2-0037","ix":37,"v":0},{"ty":7,"nm":"Clip To Output Black","mn":"ADBE Pro Levels2-0038","ix":38,"v":{"a":0,"k":3,"ix":38}},{"ty":7,"nm":"Clip To Output White","mn":"ADBE Pro Levels2-0039","ix":39,"v":{"a":0,"k":3,"ix":39}},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":40,"v":{"a":0,"k":1,"ix":40}}]}],"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-Bold","t":"ABC","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.98,0.75,0.04]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":300,"op":900,"st":300,"bm":0},{"ddd":0,"ind":3,"ty":0,"nm":"player_logo","refId":"comp_81","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":313,"s":[0],"e":[100]},{"t":327}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":313,"s":[144.5,197.5,0],"e":[132.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":327}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0,0.667],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,7.222]},"n":["0_1_0p167_0p167","0_1_0p167_0p167","0p667_1_0p167_7p222"],"t":313,"s":[10,10,100],"e":[25,25,100]},{"t":327}],"ix":6}},"ao":0,"ef":[{"ty":24,"nm":"Levels (Individual Controls)","np":42,"mn":"ADBE Pro Levels2","ix":1,"en":1,"ef":[{"ty":7,"nm":"Channel:","mn":"ADBE Pro Levels2-0001","ix":1,"v":{"a":0,"k":1,"ix":1}},{},{"ty":6,"nm":"RGB","mn":"ADBE Pro Levels2-0003","ix":3,"v":0},{"ty":0,"nm":"Input Black","mn":"ADBE Pro Levels2-0004","ix":4,"v":{"a":0,"k":0,"ix":4}},{"ty":0,"nm":"Input White","mn":"ADBE Pro Levels2-0005","ix":5,"v":{"a":0,"k":1,"ix":5}},{"ty":0,"nm":"Gamma","mn":"ADBE Pro Levels2-0006","ix":6,"v":{"a":0,"k":1,"ix":6}},{"ty":0,"nm":"Output Black","mn":"ADBE Pro Levels2-0007","ix":7,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":326,"s":[0],"e":[1]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":327,"s":[1],"e":[0]},{"t":345}],"ix":7}},{"ty":0,"nm":"Output White","mn":"ADBE Pro Levels2-0008","ix":8,"v":{"a":0,"k":1,"ix":8}},{"ty":6,"nm":"RGB","mn":"ADBE Pro Levels2-0009","ix":9,"v":0},{"ty":6,"nm":"Red","mn":"ADBE Pro Levels2-0010","ix":10,"v":0},{"ty":0,"nm":"Red Input Black","mn":"ADBE Pro Levels2-0011","ix":11,"v":{"a":0,"k":0,"ix":11}},{"ty":0,"nm":"Red Input White","mn":"ADBE Pro Levels2-0012","ix":12,"v":{"a":0,"k":1,"ix":12}},{"ty":0,"nm":"Red Gamma","mn":"ADBE Pro Levels2-0013","ix":13,"v":{"a":0,"k":1,"ix":13}},{"ty":0,"nm":"Red Output Black","mn":"ADBE Pro Levels2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Red Output White","mn":"ADBE Pro Levels2-0015","ix":15,"v":{"a":0,"k":1,"ix":15}},{"ty":6,"nm":"Red","mn":"ADBE Pro Levels2-0016","ix":16,"v":0},{"ty":6,"nm":"Green","mn":"ADBE Pro Levels2-0017","ix":17,"v":0},{"ty":0,"nm":"Green Input Black","mn":"ADBE Pro Levels2-0018","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":0,"nm":"Green Input White","mn":"ADBE Pro Levels2-0019","ix":19,"v":{"a":0,"k":1,"ix":19}},{"ty":0,"nm":"Green Gamma","mn":"ADBE Pro Levels2-0020","ix":20,"v":{"a":0,"k":1,"ix":20}},{"ty":0,"nm":"Green Output Black","mn":"ADBE Pro Levels2-0021","ix":21,"v":{"a":0,"k":0,"ix":21}},{"ty":0,"nm":"Green Output White","mn":"ADBE Pro Levels2-0022","ix":22,"v":{"a":0,"k":1,"ix":22}},{"ty":6,"nm":"Green","mn":"ADBE Pro Levels2-0023","ix":23,"v":0},{"ty":6,"nm":"Blue","mn":"ADBE Pro Levels2-0024","ix":24,"v":0},{"ty":0,"nm":"Blue Input Black","mn":"ADBE Pro Levels2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":0,"nm":"Blue Input White","mn":"ADBE Pro Levels2-0026","ix":26,"v":{"a":0,"k":1,"ix":26}},{"ty":0,"nm":"Blue Gamma","mn":"ADBE Pro Levels2-0027","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":0,"nm":"Blue Output Black","mn":"ADBE Pro Levels2-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":0,"nm":"Blue Output White","mn":"ADBE Pro Levels2-0029","ix":29,"v":{"a":0,"k":1,"ix":29}},{"ty":6,"nm":"Blue","mn":"ADBE Pro Levels2-0030","ix":30,"v":0},{"ty":6,"nm":"Alpha","mn":"ADBE Pro Levels2-0031","ix":31,"v":0},{"ty":0,"nm":"Alpha Input Black","mn":"ADBE Pro Levels2-0032","ix":32,"v":{"a":0,"k":0,"ix":32}},{"ty":0,"nm":"Alpha Input White","mn":"ADBE Pro Levels2-0033","ix":33,"v":{"a":0,"k":1,"ix":33}},{"ty":0,"nm":"Alpha Gamma","mn":"ADBE Pro Levels2-0034","ix":34,"v":{"a":0,"k":1,"ix":34}},{"ty":0,"nm":"Alpha Output Black","mn":"ADBE Pro Levels2-0035","ix":35,"v":{"a":0,"k":0,"ix":35}},{"ty":0,"nm":"Alpha Output White","mn":"ADBE Pro Levels2-0036","ix":36,"v":{"a":0,"k":1,"ix":36}},{"ty":6,"nm":"Alpha","mn":"ADBE Pro Levels2-0037","ix":37,"v":0},{"ty":7,"nm":"Clip To Output Black","mn":"ADBE Pro Levels2-0038","ix":38,"v":{"a":0,"k":3,"ix":38}},{"ty":7,"nm":"Clip To Output White","mn":"ADBE Pro Levels2-0039","ix":39,"v":{"a":0,"k":3,"ix":39}},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":40,"v":{"a":0,"k":1,"ix":40}}]}],"w":200,"h":200,"ip":300,"op":900,"st":300,"bm":0},{"ddd":0,"ind":4,"ty":0,"nm":"questionMark","refId":"comp_82","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":313,"s":[0],"e":[100]},{"t":327}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":313,"s":[330.5,197.5,0],"e":[342.5,197.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":327}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[50,50,100],"ix":6}},"ao":0,"w":200,"h":200,"ip":300,"op":900,"st":300,"bm":0},{"ddd":0,"ind":5,"ty":5,"nm":"vs 2","sr":1,"ks":{"o":{"a":0,"k":80,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,202,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":16,"f":"BeaufortforLOL-BoldItalic","t":"vs","j":2,"tr":24,"lh":19.2,"ls":0,"fc":[0.63,0.61,0.55]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":300,"op":900,"st":173,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"currentCell 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,199,0],"ix":2},"a":{"a":0,"k":[-465.5,-46,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-138.417,31.083],[138.875,31.083]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.279],"y":[0.852]},"o":{"x":[0.027],"y":[0.462]},"n":["0p279_0p852_0p027_0p462"],"t":300,"s":[0],"e":[20.148]},{"i":{"x":[0.972],"y":[0.545]},"o":{"x":[0.868],"y":[0.204]},"n":["0p972_0p545_0p868_0p204"],"t":310,"s":[20.148],"e":[50]},{"t":327}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":326,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":327,"s":[100],"e":[0]},{"t":339}],"ix":4},"w":{"a":0,"k":5,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"whiteStroke","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"st","c":{"a":0,"k":[0.956862747669,0.717647075653,0.101960785687,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,2.5],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"baseLine","np":4,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[276,62],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[30,30],"ix":2},"p":{"a":0,"k":[-465,145],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"cell_03","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tr","p":{"a":0,"k":[-465,145],"ix":2},"a":{"a":0,"k":[-465,145],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":45,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"diamond","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,114.25],[-464.563,124.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-464.563,166],[-464.563,176.25]],"c":false},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"vertLines","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[465.5,-146],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"interior","np":2,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0.115709342062,0.465220421553,0.517647087574,1],"ix":4},"o":{"a":0,"k":0,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-465.5,-46],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833],"y":[0.833,0.833]},"o":{"x":[1,1],"y":[0,0]},"n":["0p833_0p833_1_0","0p833_0p833_1_0"],"t":313,"s":[100,100],"e":[120,120]},{"t":327}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"cell_01","np":5,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.117647059262,0.137254908681,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":300,"op":900,"st":300,"bm":0}],"markers":[{"tm":0,"cm":"next_known","dr":299},{"tm":300,"cm":"next_unknown","dr":599}]}')
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.6","fr":30,"ip":0,"op":150,"w":1280,"h":720,"nm":"matchup_intro","ddd":0,"assets":[{"id":"image_0","w":185,"h":185,"u":"images/","p":"img_0.png"},{"id":"image_1","w":185,"h":185,"u":"images/","p":"img_1.png"},{"id":"image_2","w":1280,"h":720,"u":"images/","p":"img_2.png"},{"id":"comp_109","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"opponent_logo.png","cl":"png","refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[91,100,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":900,"st":0,"bm":0}]},{"id":"comp_110","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"player_logo.png","cl":"png","refId":"image_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,93.5,0],"ix":2},"a":{"a":0,"k":[100,93.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":900,"st":0,"bm":0}]},{"id":"comp_111","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"opponent_vignette.png","cl":"png","refId":"image_2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,360,0],"ix":2},"a":{"a":0,"k":[640,360,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":900,"st":0,"bm":0}]}],"fonts":{"list":[{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold","fName":"BeaufortforLOL-Bold","ascent":71.6988770291209}]},"layers":[{"ddd":0,"ind":20,"ty":4,"nm":"Vs shape _MATTE","td":1,"sr":1,"ks":{"o":{"a":1,"k":[{"t":0,"s":[0],"h":1},{"t":18,"s":[100],"h":1}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[636.089,371.184,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[108.958,108.971,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.896,0.96],[-0.608,0.192],[0,0],[0,-0.736],[0.895,-1.471],[0,0],[0,0],[0,0.449],[-1.217,0.416],[0,0],[-0.353,-2.848],[0,0],[0,0]],"o":[[0.896,-1.408],[0.896,-0.96],[0,0],[0.799,0.32],[0,0.8],[0,0],[0,0],[-0.128,-1.408],[0,-1.632],[0,0],[1.087,0.449],[0,0],[0,0],[0,0]],"v":[[2.928,-26.688],[5.616,-30.24],[7.872,-31.968],[-2.688,-31.968],[-1.488,-30.384],[-2.832,-26.976],[-13.392,-9.552],[-15.072,-26.112],[-15.264,-28.896],[-13.44,-31.968],[-24.24,-31.968],[-22.08,-27.024],[-19.104,0.24],[-14.256,0.24]],"c":true},"ix":2},"nm":"V","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"V","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[1.504,0.432],[1.504,0],[2.16,-1.92],[0,-2.816],[-3.68,-2.464],[-0.8,-0.864],[0,-0.96],[0.832,-0.752],[1.472,0],[1.584,1.152],[0.703,2.496],[0,0],[-1.904,-0.559],[-1.856,0],[-2.24,1.888],[0,2.976],[3.775,2.561],[0.88,0.944],[0,0.992],[-0.785,0.672],[-1.313,0],[-1.361,-0.912],[-0.768,-1.76]],"o":[[-1.152,-0.704],[-1.504,-0.432],[-3.456,0],[-2.16,1.92],[0,3.264],[2.048,1.409],[0.799,0.864],[0,1.217],[-0.833,0.752],[-1.92,0],[-1.584,-1.152],[0,0],[1.056,0.768],[1.903,0.56],[3.84,0],[2.24,-1.888],[0,-3.136],[-2.016,-1.375],[-0.881,-0.943],[0,-1.248],[0.784,-0.672],[1.44,0],[1.36,0.912],[0,0]],"v":[[29.136,-30.384],[25.152,-32.088],[20.64,-32.736],[12.216,-29.856],[8.976,-22.752],[14.496,-14.16],[18.768,-10.752],[19.968,-8.016],[18.72,-5.064],[15.264,-3.936],[10.008,-5.664],[6.576,-11.136],[4.608,-2.064],[9.048,-0.072],[14.688,0.768],[23.808,-2.064],[27.168,-9.36],[21.504,-17.904],[17.16,-21.384],[15.84,-24.288],[17.016,-27.168],[20.16,-28.176],[24.36,-26.808],[27.552,-22.8]],"c":true},"ix":2},"nm":"s","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"s","np":1,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gf","o":{"a":0,"k":100,"ix":10},"r":1,"g":{"p":3,"k":{"a":0,"k":[0,0.804,0.745,0.569,0.494,0.673,0.59,0.394,0.988,0.541,0.435,0.22],"ix":9}},"s":{"a":0,"k":[0,-33],"ix":5},"e":{"a":0,"k":[0,0],"ix":6},"t":1,"nm":"Gradient Fill 1","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"st","c":{"a":0,"k":[0.941176474094,0.901960790157,0.823529422283,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":29,"op":150,"st":4,"bm":0},{"ddd":0,"ind":21,"ty":1,"nm":"VS_sheen","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,360,0],"ix":2},"a":{"a":0,"k":[640,360,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"a","pt":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":29,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[722.753,101.948],[702.347,91.335],[476.247,526.052],[496.653,536.665]],"c":true}],"e":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[808.753,171.948],[788.347,161.335],[562.247,596.052],[582.653,606.665]],"c":true}]},{"t":37}],"ix":1},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"sw":1280,"sh":720,"sc":"#ffffff","ip":29,"op":150,"st":0,"bm":0},{"ddd":0,"ind":22,"ty":4,"nm":"VS_lines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,360,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.977,1.046],[-0.663,0.209],[0,0],[0,-0.802],[0.976,-1.604],[0,0],[0,0],[0,0.489],[-1.325,0.454],[0,0],[-0.384,-3.103],[0,0],[0,0]],"o":[[0.976,-1.534],[0.976,-1.046],[0,0],[0.871,0.349],[0,0.872],[0,0],[0,0],[-0.14,-1.534],[0,-1.778],[0,0],[1.185,0.489],[0,0],[0,0],[0,0]],"v":[[-0.72,-17.898],[2.209,-21.769],[4.667,-23.652],[-6.839,-23.652],[-5.532,-21.926],[-6.996,-18.212],[-18.502,0.775],[-20.333,-17.27],[-20.542,-20.304],[-18.554,-23.652],[-30.322,-23.652],[-27.968,-18.264],[-24.726,11.446],[-19.444,11.446]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[1.638,0.471],[1.638,0],[2.353,-2.092],[0,-3.068],[-4.01,-2.685],[-0.872,-0.941],[0,-1.046],[0.906,-0.819],[1.603,0],[1.726,1.255],[0.767,2.72],[0,0],[-2.075,-0.61],[-2.023,0],[-2.441,2.058],[0,3.243],[4.114,2.79],[0.959,1.029],[0,1.081],[-0.855,0.732],[-1.43,0],[-1.482,-0.994],[-0.837,-1.917]],"o":[[-1.255,-0.767],[-1.639,-0.471],[-3.766,0],[-2.353,2.092],[0,3.557],[2.231,1.535],[0.871,0.942],[0,1.326],[-0.907,0.82],[-2.092,0],[-1.726,-1.255],[0,0],[1.151,0.837],[2.074,0.61],[4.184,0],[2.44,-2.057],[0,-3.417],[-2.197,-1.499],[-0.959,-1.028],[0,-1.36],[0.854,-0.732],[1.569,0],[1.482,0.994],[0,0]],"v":[[27.835,-21.926],[23.495,-23.783],[18.578,-24.489],[9.4,-21.35],[5.87,-13.609],[11.884,-4.246],[16.539,-0.532],[17.846,2.449],[16.486,5.666],[12.721,6.895],[6.994,5.012],[3.255,-0.951],[1.11,8.935],[5.948,11.106],[12.093,12.021],[22.03,8.935],[25.691,0.984],[19.52,-8.326],[14.787,-12.118],[13.348,-15.283],[14.63,-18.421],[18.055,-19.52],[22.632,-18.029],[26.11,-13.661]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":4,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":16,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":79,"s":[100],"e":[0]},{"t":92}],"ix":2},"o":{"a":0,"k":172,"ix":3},"m":1,"ix":3,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"tr","p":{"a":0,"k":[-1.243,-6.234],"ix":2},"a":{"a":0,"k":[-1.243,-6.234],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p667_1_0p167_0p167","0p667_1_0p167_0p167"],"t":16,"s":[235,235],"e":[100,100]},{"t":18}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.941176474094,0.901960790157,0.823529422283,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.5,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":0,"op":99,"st":0,"bm":0},{"ddd":0,"ind":23,"ty":4,"nm":"Vs shape","sr":1,"ks":{"o":{"a":1,"k":[{"t":0,"s":[0],"h":1},{"t":18,"s":[100],"h":1}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[636.089,371.184,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[108.958,108.971,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.896,0.96],[-0.608,0.192],[0,0],[0,-0.736],[0.895,-1.471],[0,0],[0,0],[0,0.449],[-1.217,0.416],[0,0],[-0.353,-2.848],[0,0],[0,0]],"o":[[0.896,-1.408],[0.896,-0.96],[0,0],[0.799,0.32],[0,0.8],[0,0],[0,0],[-0.128,-1.408],[0,-1.632],[0,0],[1.087,0.449],[0,0],[0,0],[0,0]],"v":[[2.928,-26.688],[5.616,-30.24],[7.872,-31.968],[-2.688,-31.968],[-1.488,-30.384],[-2.832,-26.976],[-13.392,-9.552],[-15.072,-26.112],[-15.264,-28.896],[-13.44,-31.968],[-24.24,-31.968],[-22.08,-27.024],[-19.104,0.24],[-14.256,0.24]],"c":true},"ix":2},"nm":"V","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"V","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[1.504,0.432],[1.504,0],[2.16,-1.92],[0,-2.816],[-3.68,-2.464],[-0.8,-0.864],[0,-0.96],[0.832,-0.752],[1.472,0],[1.584,1.152],[0.703,2.496],[0,0],[-1.904,-0.559],[-1.856,0],[-2.24,1.888],[0,2.976],[3.775,2.561],[0.88,0.944],[0,0.992],[-0.785,0.672],[-1.313,0],[-1.361,-0.912],[-0.768,-1.76]],"o":[[-1.152,-0.704],[-1.504,-0.432],[-3.456,0],[-2.16,1.92],[0,3.264],[2.048,1.409],[0.799,0.864],[0,1.217],[-0.833,0.752],[-1.92,0],[-1.584,-1.152],[0,0],[1.056,0.768],[1.903,0.56],[3.84,0],[2.24,-1.888],[0,-3.136],[-2.016,-1.375],[-0.881,-0.943],[0,-1.248],[0.784,-0.672],[1.44,0],[1.36,0.912],[0,0]],"v":[[29.136,-30.384],[25.152,-32.088],[20.64,-32.736],[12.216,-29.856],[8.976,-22.752],[14.496,-14.16],[18.768,-10.752],[19.968,-8.016],[18.72,-5.064],[15.264,-3.936],[10.008,-5.664],[6.576,-11.136],[4.608,-2.064],[9.048,-0.072],[14.688,0.768],[23.808,-2.064],[27.168,-9.36],[21.504,-17.904],[17.16,-21.384],[15.84,-24.288],[17.016,-27.168],[20.16,-28.176],[24.36,-26.808],[27.552,-22.8]],"c":true},"ix":2},"nm":"s","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"s","np":1,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gf","o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":77,"s":[100],"e":[0]},{"t":84}],"ix":10},"r":1,"g":{"p":3,"k":{"a":0,"k":[0,0.804,0.745,0.569,0.494,0.673,0.59,0.394,0.988,0.541,0.435,0.22],"ix":9}},"s":{"a":0,"k":[0,-33],"ix":5},"e":{"a":0,"k":[0,0],"ix":6},"t":1,"nm":"Gradient Fill 1","mn":"ADBE Vector Graphic - G-Fill","hd":false}],"ip":18,"op":150,"st":4,"bm":0},{"ddd":0,"ind":24,"ty":5,"nm":"OPPONENT TEAM","parent":25,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":9,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":18,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":73,"s":[100],"e":[0]},{"t":83}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[0,30,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":20,"f":"BeaufortforLOL-Bold","t":"OPPONENT TEAM","j":2,"tr":24,"lh":24,"ls":0,"fc":[0.78,0.67,0.43]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":0,"op":84,"st":0,"bm":0},{"ddd":0,"ind":25,"ty":5,"nm":"OPP ABREV","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":9,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":18,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":73,"s":[100],"e":[0]},{"t":83}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.001,"y":0},"n":"0_1_0p001_0","t":9,"s":[1163,470,0],"e":[913,470,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.167,"y":0.167},"n":"0p667_0p667_0p167_0p167","t":28,"s":[913,470,0],"e":[913,470,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":1,"y":1},"o":{"x":0.6,"y":0},"n":"1_1_0p6_0","t":73,"s":[913,470,0],"e":[913,500,0],"to":[0,0,0],"ti":[0,0,0]},{"t":83}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":48,"f":"BeaufortforLOL-Bold","t":"XYZ","j":2,"tr":24,"lh":57.6,"ls":0,"fc":[0.78,0.67,0.43]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":0,"op":84,"st":0,"bm":0},{"ddd":0,"ind":26,"ty":5,"nm":"PLAYER TEAM ","parent":27,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":9,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":18,"s":[100],"e":[100]},{"t":85}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[0,30,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":20,"f":"BeaufortforLOL-Bold","t":"PLAYER TEAM","j":2,"tr":24,"lh":24,"ls":0,"fc":[0.98,0.75,0.04]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":27,"ty":5,"nm":"PLAYER ABREV","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":9,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":18,"s":[100],"e":[100]},{"t":85}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.001,"y":0},"n":"0_1_0p001_0","t":9,"s":[107,470,0],"e":[371,470,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":0.167,"y":0.167},"n":"0_0_0p167_0p167","t":28,"s":[371,470,0],"e":[371,470,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":85,"s":[371,470,0],"e":[-269,470,0],"to":[0,0,0],"ti":[0,0,0]},{"t":101}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":48,"f":"BeaufortforLOL-Bold","t":"ABC","j":2,"tr":24,"lh":57.6,"ls":0,"fc":[0.98,0.75,0.04]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":28,"ty":4,"nm":"Linework","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,330,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-3,3],[0,0],[0,0],[0,0]],"o":[[0,0],[3,-3],[0,0],[0,0],[0,0]],"v":[[-125,-207],[-749,-207],[-757,250],[-124,250],[104,22]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0,"y":0},"n":"0_1_0_0","t":0,"s":[-553,0],"e":[20,0],"to":[0,0],"ti":[0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":10,"s":[20,0],"e":[0,0],"to":[0,0],"ti":[0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.167,"y":0.167},"n":"0p667_0p667_0p167_0p167","t":18,"s":[0,0],"e":[0,0],"to":[0,0],"ti":[0,0]},{"i":{"x":0,"y":1},"o":{"x":0.333,"y":0},"n":"0_1_0p333_0","t":80,"s":[0,0],"e":[20,0],"to":[0,0],"ti":[0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":85,"s":[20,0],"e":[-806,0],"to":[0,0],"ti":[0,0]},{"t":101}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"rp","c":{"a":0,"k":3,"ix":1},"o":{"a":0,"k":0,"ix":2},"m":1,"ix":2,"tr":{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[-100,100],"ix":3},"r":{"a":0,"k":0,"ix":4},"so":{"a":0,"k":100,"ix":5},"eo":{"a":0,"k":100,"ix":6},"nm":"Transform"},"nm":"Repeater 1","mn":"ADBE Vector Filter - Repeater","hd":false},{"ty":"gs","o":{"a":0,"k":100,"ix":9},"w":{"a":0,"k":2,"ix":10},"g":{"p":5,"k":{"a":0,"k":[0,0.541,0.435,0.22,0.254,0.663,0.551,0.325,0.507,0.784,0.667,0.431,0.754,0.663,0.551,0.325,1,0.541,0.435,0.22],"ix":8}},"s":{"a":0,"k":[0,-150],"ix":4},"e":{"a":0,"k":[0,150],"ix":5},"t":1,"lc":1,"lj":1,"ml":4,"nm":"Gradient Stroke 1","mn":"ADBE Vector Graphic - G-Stroke","hd":false}],"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":29,"ty":4,"nm":"Linework 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,330,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0.053180002699,0.426194015204,0.713725968903,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 2","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.333,"y":0},"n":"0_1_0p333_0","t":0,"s":[{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-125,-207],[-453,-207],[-226.845,20.681],[-456,250],[-124,250],[104,22]],"c":true}],"e":[{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-125,-207],[-122,-207],[104.155,20.681],[-125,250],[-124,250],[104,22]],"c":true}]},{"t":10}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0,"y":0},"n":"0_1_0_0","t":0,"s":[-553,0],"e":[20,0],"to":[0,0],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0},"n":"0p667_1_0p167_0","t":10,"s":[20,0],"e":[0,0],"to":[0,0],"ti":[0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":90,"s":[0,0],"e":[-806,0],"to":[0,0],"ti":[0,0]},{"t":106}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":1,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.784313738346,0.666666686535,0.43137255311,1],"ix":4},"o":{"a":0,"k":15,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"rp","c":{"a":0,"k":3,"ix":1},"o":{"a":0,"k":0,"ix":2},"m":1,"ix":4,"tr":{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[-100,100],"ix":3},"r":{"a":0,"k":0,"ix":4},"so":{"a":0,"k":100,"ix":5},"eo":{"a":0,"k":100,"ix":6},"nm":"Transform"},"nm":"Repeater 1","mn":"ADBE Vector Filter - Repeater","hd":false}],"ip":0,"op":13,"st":5,"bm":0},{"ddd":0,"ind":30,"ty":4,"nm":"slash","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[910,300,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[250,250],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0p667_1_0p167_0p167"],"t":37,"s":[0],"e":[100]},{"t":62}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0p667_1_0p167_0p167"],"t":27,"s":[0],"e":[100]},{"t":50}],"ix":2},"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0p667_1_0p167_0p167"],"t":27,"s":[-150],"e":[-37.3]},{"t":50}],"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"circle","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-75.25,-100.25],[81,94]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0_1_0p167_0p167"],"t":62,"s":[0],"e":[100]},{"t":73}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.868],"y":[0.499]},"o":{"x":[1],"y":[0]},"n":["0p868_0p499_1_0"],"t":50,"s":[0],"e":[100]},{"t":61}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 2","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"gs","o":{"a":0,"k":100,"ix":9},"w":{"a":0,"k":2,"ix":10},"g":{"p":3,"k":{"a":0,"k":[0,0.784,0.667,0.431,0.153,0.892,0.833,0.716,0.305,1,1,1],"ix":8}},"s":{"a":0,"k":[0,-91],"ix":4},"e":{"a":0,"k":[0,115],"ix":5},"t":1,"lc":1,"lj":1,"ml":4,"nm":"Gradient Stroke 1","mn":"ADBE Vector Graphic - G-Stroke","hd":false},{"ty":"st","c":{"a":0,"k":[0.447058796883,0.915432393551,1,1],"ix":3},"o":{"a":0,"k":10,"ix":4},"w":{"a":0,"k":8,"ix":5},"lc":2,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"st","c":{"a":0,"k":[0.447058796883,0.915432393551,1,1],"ix":3},"o":{"a":0,"k":10,"ix":4},"w":{"a":0,"k":16,"ix":5},"lc":2,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[2.875,-3.125],"ix":2},"a":{"a":0,"k":[2.875,-3.125],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"slash","np":5,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.784313738346,0.666666686535,0.43137255311,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":0,"op":150,"st":0,"bm":0},{"ddd":0,"ind":31,"ty":0,"nm":"opponent_logo.png Comp 3","cl":"png","refId":"comp_109","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":-11,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":-2,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":73,"s":[100],"e":[0]},{"t":83}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":28,"s":[913,300,0],"e":[913,300,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":61,"s":[913,300,0],"e":[933,323,0],"to":[0,0,0],"ti":[0,0,0]},{"t":76}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"s","pt":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-75.824,325],[298.192,341],[-60.335,-98]],"c":true},"ix":1},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[0.494117647409,0,0,1],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,0.164705872536,0.164705872536,1],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":61,"s":[100],"e":[50]},{"t":81}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":61,"op":84,"st":-17,"bm":0},{"ddd":0,"ind":32,"ty":0,"nm":"opponent_logo.png Comp 3","cl":"png","refId":"comp_109","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":-11,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":-2,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":73,"s":[100],"e":[0]},{"t":83}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":28,"s":[913,300,0],"e":[913,300,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":61,"s":[913,300,0],"e":[893,277,0],"to":[0,0,0],"ti":[0,0,0]},{"t":76}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"a","pt":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-75.824,325],[298.192,341],[-60.335,-98]],"c":true},"ix":1},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[0.494117647409,0,0,1],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,0.164705872536,0.164705872536,1],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":61,"s":[100],"e":[50]},{"t":81}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":200,"ip":61,"op":84,"st":-17,"bm":0},{"ddd":0,"ind":33,"ty":0,"nm":"opponent_logo.png Comp 3","cl":"png","refId":"comp_109","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":6,"s":[0],"e":[100]},{"t":15}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.001,"y":0},"n":"0_1_0p001_0","t":6,"s":[1163,300,0],"e":[913,300,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":0.167,"y":0.167},"n":"0_0_0p167_0p167","t":25,"s":[913,300,0],"e":[913,300,0],"to":[0,0,0],"ti":[0,0,0]},{"t":28}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":200,"h":200,"ip":6,"op":61,"st":0,"bm":0},{"ddd":0,"ind":34,"ty":0,"nm":"player_logo.png Comp 3","cl":"png","refId":"comp_110","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":6,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":15,"s":[100],"e":[100]},{"t":85}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.001,"y":0},"n":"0_1_0p001_0","t":6,"s":[107,300,0],"e":[371,300,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.732,"y":0.732},"o":{"x":0.419,"y":0.419},"n":"0p732_0p732_0p419_0p419","t":25,"s":[371,300,0],"e":[371,300,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.08,"y":0.08},"o":{"x":0.098,"y":0.098},"n":"0p08_0p08_0p098_0p098","t":28,"s":[371,300,0],"e":[371,300,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":85,"s":[371,300,0],"e":[-269,300,0],"to":[0,0,0],"ti":[0,0,0]},{"t":101}],"ix":2},"a":{"a":0,"k":[100,93.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":200,"h":187,"ip":6,"op":150,"st":0,"bm":0},{"ddd":0,"ind":35,"ty":4,"nm":"dashes","sr":1,"ks":{"o":{"a":0,"k":30,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,354,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[430,430],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"st","c":{"a":0,"k":[0.784313738346,0.666666686535,0.43137255311,1],"ix":3},"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":84,"s":[100],"e":[0]},{"t":102}],"ix":4},"w":{"a":0,"k":15,"ix":5},"lc":1,"lj":1,"ml":4,"d":[{"n":"d","nm":"dash","v":{"a":0,"k":1.508,"ix":1}},{"n":"g","nm":"gap","v":{"a":0,"k":12,"ix":2}},{"n":"o","nm":"offset","v":{"a":0,"k":0,"ix":7}}],"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0_1_0p167_0p167","0_1_0p167_0p167"],"t":18,"s":[25,25],"e":[115,115]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[1,1],"y":[0,0]},"n":["0p667_1_1_0","0p667_1_1_0"],"t":25,"s":[115,115],"e":[100,100]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"n":["0p667_1_0p333_0","0p667_1_0p333_0"],"t":30,"s":[100,100],"e":[100,100]},{"i":{"x":[0.833,0.833],"y":[0.833,0.833]},"o":{"x":[0.333,0.333],"y":[0,0]},"n":["0p833_0p833_0p333_0","0p833_0p833_0p333_0"],"t":84,"s":[100,100],"e":[60,60]},{"t":102}],"ix":3},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\\n$bm_rt = mul(time, 10);"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":18,"op":150,"st":4,"bm":0},{"ddd":0,"ind":36,"ty":0,"nm":"opponent_vignette.png Comp 1","cl":"png","refId":"comp_111","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":0,"s":[0],"e":[70]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":11,"s":[70],"e":[70]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":129,"s":[70],"e":[0]},{"t":139}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,360,0],"ix":2},"a":{"a":0,"k":[640,360,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":24,"nm":"Levels (Individual Controls)","np":42,"mn":"ADBE Pro Levels2","ix":1,"en":1,"ef":[{"ty":7,"nm":"Channel:","mn":"ADBE Pro Levels2-0001","ix":1,"v":{"a":0,"k":1,"ix":1}},{},{"ty":6,"nm":"RGB","mn":"ADBE Pro Levels2-0003","ix":3,"v":0},{"ty":0,"nm":"Input Black","mn":"ADBE Pro Levels2-0004","ix":4,"v":{"a":0,"k":0,"ix":4}},{"ty":0,"nm":"Input White","mn":"ADBE Pro Levels2-0005","ix":5,"v":{"a":0,"k":1,"ix":5}},{"ty":0,"nm":"Gamma","mn":"ADBE Pro Levels2-0006","ix":6,"v":{"a":0,"k":1,"ix":6}},{"ty":0,"nm":"Output Black","mn":"ADBE Pro Levels2-0007","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":0,"nm":"Output White","mn":"ADBE Pro Levels2-0008","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":6,"nm":"RGB","mn":"ADBE Pro Levels2-0009","ix":9,"v":0},{"ty":6,"nm":"Red","mn":"ADBE Pro Levels2-0010","ix":10,"v":0},{"ty":0,"nm":"Red Input Black","mn":"ADBE Pro Levels2-0011","ix":11,"v":{"a":0,"k":0,"ix":11}},{"ty":0,"nm":"Red Input White","mn":"ADBE Pro Levels2-0012","ix":12,"v":{"a":0,"k":1,"ix":12}},{"ty":0,"nm":"Red Gamma","mn":"ADBE Pro Levels2-0013","ix":13,"v":{"a":0,"k":1,"ix":13}},{"ty":0,"nm":"Red Output Black","mn":"ADBE Pro Levels2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Red Output White","mn":"ADBE Pro Levels2-0015","ix":15,"v":{"a":0,"k":1,"ix":15}},{"ty":6,"nm":"Red","mn":"ADBE Pro Levels2-0016","ix":16,"v":0},{"ty":6,"nm":"Green","mn":"ADBE Pro Levels2-0017","ix":17,"v":0},{"ty":0,"nm":"Green Input Black","mn":"ADBE Pro Levels2-0018","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":0,"nm":"Green Input White","mn":"ADBE Pro Levels2-0019","ix":19,"v":{"a":0,"k":1,"ix":19}},{"ty":0,"nm":"Green Gamma","mn":"ADBE Pro Levels2-0020","ix":20,"v":{"a":0,"k":1,"ix":20}},{"ty":0,"nm":"Green Output Black","mn":"ADBE Pro Levels2-0021","ix":21,"v":{"a":0,"k":0,"ix":21}},{"ty":0,"nm":"Green Output White","mn":"ADBE Pro Levels2-0022","ix":22,"v":{"a":0,"k":1,"ix":22}},{"ty":6,"nm":"Green","mn":"ADBE Pro Levels2-0023","ix":23,"v":0},{"ty":6,"nm":"Blue","mn":"ADBE Pro Levels2-0024","ix":24,"v":0},{"ty":0,"nm":"Blue Input Black","mn":"ADBE Pro Levels2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":0,"nm":"Blue Input White","mn":"ADBE Pro Levels2-0026","ix":26,"v":{"a":0,"k":1,"ix":26}},{"ty":0,"nm":"Blue Gamma","mn":"ADBE Pro Levels2-0027","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":0,"nm":"Blue Output Black","mn":"ADBE Pro Levels2-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":0,"nm":"Blue Output White","mn":"ADBE Pro Levels2-0029","ix":29,"v":{"a":0,"k":1,"ix":29}},{"ty":6,"nm":"Blue","mn":"ADBE Pro Levels2-0030","ix":30,"v":0},{"ty":6,"nm":"Alpha","mn":"ADBE Pro Levels2-0031","ix":31,"v":0},{"ty":0,"nm":"Alpha Input Black","mn":"ADBE Pro Levels2-0032","ix":32,"v":{"a":0,"k":0,"ix":32}},{"ty":0,"nm":"Alpha Input White","mn":"ADBE Pro Levels2-0033","ix":33,"v":{"a":0,"k":1,"ix":33}},{"ty":0,"nm":"Alpha Gamma","mn":"ADBE Pro Levels2-0034","ix":34,"v":{"a":0,"k":1,"ix":34}},{"ty":0,"nm":"Alpha Output Black","mn":"ADBE Pro Levels2-0035","ix":35,"v":{"a":0,"k":0,"ix":35}},{"ty":0,"nm":"Alpha Output White","mn":"ADBE Pro Levels2-0036","ix":36,"v":{"a":0,"k":1,"ix":36}},{"ty":6,"nm":"Alpha","mn":"ADBE Pro Levels2-0037","ix":37,"v":0},{"ty":7,"nm":"Clip To Output Black","mn":"ADBE Pro Levels2-0038","ix":38,"v":{"a":0,"k":3,"ix":38}},{"ty":7,"nm":"Clip To Output White","mn":"ADBE Pro Levels2-0039","ix":39,"v":{"a":0,"k":3,"ix":39}},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":40,"v":{"a":0,"k":1,"ix":40}}]}],"w":1280,"h":720,"ip":0,"op":139,"st":-12,"bm":0}],"markers":[{"tm":0,"cm":"win","dr":0},{"tm":150,"cm":"lose","dr":0},{"tm":299,"cm":"","dr":0}]}')
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.6","fr":30,"ip":150,"op":300,"w":1280,"h":720,"nm":"matchup_intro","ddd":0,"assets":[{"id":"image_0","w":185,"h":185,"u":"images/","p":"img_0.png"},{"id":"image_1","w":185,"h":185,"u":"images/","p":"img_1.png"},{"id":"image_2","w":1280,"h":720,"u":"images/","p":"img_2.png"},{"id":"comp_115","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"opponent_logo.png","cl":"png","refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,100,0],"ix":2},"a":{"a":0,"k":[91,100,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":900,"st":0,"bm":0}]},{"id":"comp_116","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"player_logo.png","cl":"png","refId":"image_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[100,93.5,0],"ix":2},"a":{"a":0,"k":[100,93.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":900,"st":0,"bm":0}]},{"id":"comp_117","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"opponent_vignette.png","cl":"png","refId":"image_2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,360,0],"ix":2},"a":{"a":0,"k":[640,360,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":900,"st":0,"bm":0}]}],"fonts":{"list":[{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold","fName":"BeaufortforLOL-Bold","ascent":71.6988770291209}]},"layers":[{"ddd":0,"ind":2,"ty":4,"nm":"Vs shape _MATTE 2","td":1,"sr":1,"ks":{"o":{"a":1,"k":[{"t":150,"s":[0],"h":1},{"t":168,"s":[100],"h":1}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[636.089,371.184,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[108.958,108.971,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.896,0.96],[-0.608,0.192],[0,0],[0,-0.736],[0.895,-1.471],[0,0],[0,0],[0,0.449],[-1.217,0.416],[0,0],[-0.353,-2.848],[0,0],[0,0]],"o":[[0.896,-1.408],[0.896,-0.96],[0,0],[0.799,0.32],[0,0.8],[0,0],[0,0],[-0.128,-1.408],[0,-1.632],[0,0],[1.087,0.449],[0,0],[0,0],[0,0]],"v":[[2.928,-26.688],[5.616,-30.24],[7.872,-31.968],[-2.688,-31.968],[-1.488,-30.384],[-2.832,-26.976],[-13.392,-9.552],[-15.072,-26.112],[-15.264,-28.896],[-13.44,-31.968],[-24.24,-31.968],[-22.08,-27.024],[-19.104,0.24],[-14.256,0.24]],"c":true},"ix":2},"nm":"V","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"V","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[1.504,0.432],[1.504,0],[2.16,-1.92],[0,-2.816],[-3.68,-2.464],[-0.8,-0.864],[0,-0.96],[0.832,-0.752],[1.472,0],[1.584,1.152],[0.703,2.496],[0,0],[-1.904,-0.559],[-1.856,0],[-2.24,1.888],[0,2.976],[3.775,2.561],[0.88,0.944],[0,0.992],[-0.785,0.672],[-1.313,0],[-1.361,-0.912],[-0.768,-1.76]],"o":[[-1.152,-0.704],[-1.504,-0.432],[-3.456,0],[-2.16,1.92],[0,3.264],[2.048,1.409],[0.799,0.864],[0,1.217],[-0.833,0.752],[-1.92,0],[-1.584,-1.152],[0,0],[1.056,0.768],[1.903,0.56],[3.84,0],[2.24,-1.888],[0,-3.136],[-2.016,-1.375],[-0.881,-0.943],[0,-1.248],[0.784,-0.672],[1.44,0],[1.36,0.912],[0,0]],"v":[[29.136,-30.384],[25.152,-32.088],[20.64,-32.736],[12.216,-29.856],[8.976,-22.752],[14.496,-14.16],[18.768,-10.752],[19.968,-8.016],[18.72,-5.064],[15.264,-3.936],[10.008,-5.664],[6.576,-11.136],[4.608,-2.064],[9.048,-0.072],[14.688,0.768],[23.808,-2.064],[27.168,-9.36],[21.504,-17.904],[17.16,-21.384],[15.84,-24.288],[17.016,-27.168],[20.16,-28.176],[24.36,-26.808],[27.552,-22.8]],"c":true},"ix":2},"nm":"s","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"s","np":1,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gf","o":{"a":0,"k":100,"ix":10},"r":1,"g":{"p":3,"k":{"a":0,"k":[0,0.804,0.745,0.569,0.494,0.673,0.59,0.394,0.988,0.541,0.435,0.22],"ix":9}},"s":{"a":0,"k":[0,-33],"ix":5},"e":{"a":0,"k":[0,0],"ix":6},"t":1,"nm":"Gradient Fill 1","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"st","c":{"a":0,"k":[0.941176474094,0.901960790157,0.823529422283,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":179,"op":300,"st":154,"bm":0},{"ddd":0,"ind":3,"ty":1,"nm":"VS_sheen 2","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,360,0],"ix":2},"a":{"a":0,"k":[640,360,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"a","pt":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":179,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[722.753,101.948],[702.347,91.335],[476.247,526.052],[496.653,536.665]],"c":true}],"e":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[808.753,171.948],[788.347,161.335],[562.247,596.052],[582.653,606.665]],"c":true}]},{"t":187}],"ix":1},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"sw":1280,"sh":720,"sc":"#ffffff","ip":179,"op":300,"st":150,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"VS_lines 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,360,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.977,1.046],[-0.663,0.209],[0,0],[0,-0.802],[0.976,-1.604],[0,0],[0,0],[0,0.489],[-1.325,0.454],[0,0],[-0.384,-3.103],[0,0],[0,0]],"o":[[0.976,-1.534],[0.976,-1.046],[0,0],[0.871,0.349],[0,0.872],[0,0],[0,0],[-0.14,-1.534],[0,-1.778],[0,0],[1.185,0.489],[0,0],[0,0],[0,0]],"v":[[-0.72,-17.898],[2.209,-21.769],[4.667,-23.652],[-6.839,-23.652],[-5.532,-21.926],[-6.996,-18.212],[-18.502,0.775],[-20.333,-17.27],[-20.542,-20.304],[-18.554,-23.652],[-30.322,-23.652],[-27.968,-18.264],[-24.726,11.446],[-19.444,11.446]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[1.638,0.471],[1.638,0],[2.353,-2.092],[0,-3.068],[-4.01,-2.685],[-0.872,-0.941],[0,-1.046],[0.906,-0.819],[1.603,0],[1.726,1.255],[0.767,2.72],[0,0],[-2.075,-0.61],[-2.023,0],[-2.441,2.058],[0,3.243],[4.114,2.79],[0.959,1.029],[0,1.081],[-0.855,0.732],[-1.43,0],[-1.482,-0.994],[-0.837,-1.917]],"o":[[-1.255,-0.767],[-1.639,-0.471],[-3.766,0],[-2.353,2.092],[0,3.557],[2.231,1.535],[0.871,0.942],[0,1.326],[-0.907,0.82],[-2.092,0],[-1.726,-1.255],[0,0],[1.151,0.837],[2.074,0.61],[4.184,0],[2.44,-2.057],[0,-3.417],[-2.197,-1.499],[-0.959,-1.028],[0,-1.36],[0.854,-0.732],[1.569,0],[1.482,0.994],[0,0]],"v":[[27.835,-21.926],[23.495,-23.783],[18.578,-24.489],[9.4,-21.35],[5.87,-13.609],[11.884,-4.246],[16.539,-0.532],[17.846,2.449],[16.486,5.666],[12.721,6.895],[6.994,5.012],[3.255,-0.951],[1.11,8.935],[5.948,11.106],[12.093,12.021],[22.03,8.935],[25.691,0.984],[19.52,-8.326],[14.787,-12.118],[13.348,-15.283],[14.63,-18.421],[18.055,-19.52],[22.632,-18.029],[26.11,-13.661]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":154,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":166,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":229,"s":[100],"e":[0]},{"t":242}],"ix":2},"o":{"a":0,"k":172,"ix":3},"m":1,"ix":3,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"tr","p":{"a":0,"k":[-1.243,-6.234],"ix":2},"a":{"a":0,"k":[-1.243,-6.234],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p667_1_0p167_0p167","0p667_1_0p167_0p167"],"t":166,"s":[235,235],"e":[100,100]},{"t":168}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.941176474094,0.901960790157,0.823529422283,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.5,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":150,"op":249,"st":150,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"Vs shape 2","sr":1,"ks":{"o":{"a":1,"k":[{"t":150,"s":[0],"h":1},{"t":168,"s":[100],"h":1}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[636.089,371.184,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[108.958,108.971,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.896,0.96],[-0.608,0.192],[0,0],[0,-0.736],[0.895,-1.471],[0,0],[0,0],[0,0.449],[-1.217,0.416],[0,0],[-0.353,-2.848],[0,0],[0,0]],"o":[[0.896,-1.408],[0.896,-0.96],[0,0],[0.799,0.32],[0,0.8],[0,0],[0,0],[-0.128,-1.408],[0,-1.632],[0,0],[1.087,0.449],[0,0],[0,0],[0,0]],"v":[[2.928,-26.688],[5.616,-30.24],[7.872,-31.968],[-2.688,-31.968],[-1.488,-30.384],[-2.832,-26.976],[-13.392,-9.552],[-15.072,-26.112],[-15.264,-28.896],[-13.44,-31.968],[-24.24,-31.968],[-22.08,-27.024],[-19.104,0.24],[-14.256,0.24]],"c":true},"ix":2},"nm":"V","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"V","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[1.504,0.432],[1.504,0],[2.16,-1.92],[0,-2.816],[-3.68,-2.464],[-0.8,-0.864],[0,-0.96],[0.832,-0.752],[1.472,0],[1.584,1.152],[0.703,2.496],[0,0],[-1.904,-0.559],[-1.856,0],[-2.24,1.888],[0,2.976],[3.775,2.561],[0.88,0.944],[0,0.992],[-0.785,0.672],[-1.313,0],[-1.361,-0.912],[-0.768,-1.76]],"o":[[-1.152,-0.704],[-1.504,-0.432],[-3.456,0],[-2.16,1.92],[0,3.264],[2.048,1.409],[0.799,0.864],[0,1.217],[-0.833,0.752],[-1.92,0],[-1.584,-1.152],[0,0],[1.056,0.768],[1.903,0.56],[3.84,0],[2.24,-1.888],[0,-3.136],[-2.016,-1.375],[-0.881,-0.943],[0,-1.248],[0.784,-0.672],[1.44,0],[1.36,0.912],[0,0]],"v":[[29.136,-30.384],[25.152,-32.088],[20.64,-32.736],[12.216,-29.856],[8.976,-22.752],[14.496,-14.16],[18.768,-10.752],[19.968,-8.016],[18.72,-5.064],[15.264,-3.936],[10.008,-5.664],[6.576,-11.136],[4.608,-2.064],[9.048,-0.072],[14.688,0.768],[23.808,-2.064],[27.168,-9.36],[21.504,-17.904],[17.16,-21.384],[15.84,-24.288],[17.016,-27.168],[20.16,-28.176],[24.36,-26.808],[27.552,-22.8]],"c":true},"ix":2},"nm":"s","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"s","np":1,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gf","o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":227,"s":[100],"e":[0]},{"t":234}],"ix":10},"r":1,"g":{"p":3,"k":{"a":0,"k":[0,0.804,0.745,0.569,0.494,0.673,0.59,0.394,0.988,0.541,0.435,0.22],"ix":9}},"s":{"a":0,"k":[0,-33],"ix":5},"e":{"a":0,"k":[0,0],"ix":6},"t":1,"nm":"Gradient Fill 1","mn":"ADBE Vector Graphic - G-Fill","hd":false}],"ip":168,"op":300,"st":154,"bm":0},{"ddd":0,"ind":6,"ty":5,"nm":"OPPONENT TEAM 2","parent":7,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":159,"s":[0],"e":[100]},{"t":168}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[0,30,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":20,"f":"BeaufortforLOL-Bold","t":"OPPONENT TEAM","j":2,"tr":24,"lh":24,"ls":0,"fc":[0.78,0.67,0.43]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":150,"op":300,"st":150,"bm":0},{"ddd":0,"ind":7,"ty":5,"nm":"OPP ABREV 2","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":159,"s":[0],"e":[100]},{"t":168}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.001,"y":0},"n":"0_1_0p001_0","t":159,"s":[1163,470,0],"e":[913,470,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.08,"y":0.08},"o":{"x":0.167,"y":0.167},"n":"0p08_0p08_0p167_0p167","t":178,"s":[913,470,0],"e":[913,470,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":235,"s":[913,470,0],"e":[1533,470,0],"to":[0,0,0],"ti":[0,0,0]},{"t":250}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":48,"f":"BeaufortforLOL-Bold","t":"XYZ","j":2,"tr":24,"lh":57.6,"ls":0,"fc":[0.78,0.67,0.43]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":150,"op":300,"st":150,"bm":0},{"ddd":0,"ind":8,"ty":5,"nm":"PLAYER TEAM 2","parent":9,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":159,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":168,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":223,"s":[100],"e":[0]},{"t":233}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[0,30,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":20,"f":"BeaufortforLOL-Bold","t":"PLAYER TEAM","j":2,"tr":24,"lh":24,"ls":0,"fc":[0.98,0.75,0.04]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":150,"op":300,"st":150,"bm":0},{"ddd":0,"ind":9,"ty":5,"nm":"PLAYER ABREV 2","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":159,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":168,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":223,"s":[100],"e":[0]},{"t":233}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.001,"y":0},"n":"0_1_0p001_0","t":159,"s":[107,470,0],"e":[371,470,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.167,"y":0.167},"n":"0p667_0p667_0p167_0p167","t":178,"s":[371,470,0],"e":[371,470,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.999,"y":0.998},"o":{"x":0.6,"y":0},"n":"0p999_0p998_0p6_0","t":223,"s":[371,470,0],"e":[371,500,0],"to":[0,0,0],"ti":[0,0,0]},{"t":233}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"t":{"d":{"k":[{"s":{"s":48,"f":"BeaufortforLOL-Bold","t":"ABC","j":2,"tr":24,"lh":57.6,"ls":0,"fc":[0.98,0.75,0.04]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":150,"op":300,"st":150,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"Linework 4","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,330,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-3,3],[0,0],[0,0],[0,0]],"o":[[0,0],[3,-3],[0,0],[0,0],[0,0]],"v":[[-125,-207],[-749,-207],[-757,250],[-124,250],[104,22]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0,"y":0},"n":"0_1_0_0","t":150,"s":[-553,0],"e":[20,0],"to":[0,0],"ti":[0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":160,"s":[20,0],"e":[0,0],"to":[0,0],"ti":[0,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.167,"y":0.167},"n":"0p667_0p667_0p167_0p167","t":168,"s":[0,0],"e":[0,0],"to":[0,0],"ti":[0,0]},{"i":{"x":0,"y":1},"o":{"x":0.333,"y":0},"n":"0_1_0p333_0","t":230,"s":[0,0],"e":[20,0],"to":[0,0],"ti":[0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":235,"s":[20,0],"e":[-806,0],"to":[0,0],"ti":[0,0]},{"t":251}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"rp","c":{"a":0,"k":3,"ix":1},"o":{"a":0,"k":0,"ix":2},"m":1,"ix":2,"tr":{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[-100,100],"ix":3},"r":{"a":0,"k":0,"ix":4},"so":{"a":0,"k":100,"ix":5},"eo":{"a":0,"k":100,"ix":6},"nm":"Transform"},"nm":"Repeater 1","mn":"ADBE Vector Filter - Repeater","hd":false},{"ty":"gs","o":{"a":0,"k":100,"ix":9},"w":{"a":0,"k":2,"ix":10},"g":{"p":5,"k":{"a":0,"k":[0,0.541,0.435,0.22,0.254,0.663,0.551,0.325,0.507,0.784,0.667,0.431,0.754,0.663,0.551,0.325,1,0.541,0.435,0.22],"ix":8}},"s":{"a":0,"k":[0,-150],"ix":4},"e":{"a":0,"k":[0,150],"ix":5},"t":1,"lc":1,"lj":1,"ml":4,"nm":"Gradient Stroke 1","mn":"ADBE Vector Graphic - G-Stroke","hd":false}],"ip":150,"op":300,"st":150,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"Linework 3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,330,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0.053180002699,0.426194015204,0.713725968903,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 2","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.333,"y":0},"n":"0_1_0p333_0","t":150,"s":[{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-125,-207],[-453,-207],[-226.845,20.681],[-456,250],[-124,250],[104,22]],"c":true}],"e":[{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-125,-207],[-122,-207],[104.155,20.681],[-125,250],[-124,250],[104,22]],"c":true}]},{"t":160}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0,"y":0},"n":"0_1_0_0","t":150,"s":[-553,0],"e":[20,0],"to":[0,0],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0},"n":"0p667_1_0p167_0","t":160,"s":[20,0],"e":[0,0],"to":[0,0],"ti":[0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":240,"s":[0,0],"e":[-806,0],"to":[0,0],"ti":[0,0]},{"t":256}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":1,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.784313738346,0.666666686535,0.43137255311,1],"ix":4},"o":{"a":0,"k":15,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"rp","c":{"a":0,"k":3,"ix":1},"o":{"a":0,"k":0,"ix":2},"m":1,"ix":4,"tr":{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[-100,100],"ix":3},"r":{"a":0,"k":0,"ix":4},"so":{"a":0,"k":100,"ix":5},"eo":{"a":0,"k":100,"ix":6},"nm":"Transform"},"nm":"Repeater 1","mn":"ADBE Vector Filter - Repeater","hd":false}],"ip":150,"op":163,"st":155,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"slash 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[367.5,300,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[250,250],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0p667_1_0p167_0p167"],"t":187,"s":[0],"e":[100]},{"t":212}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0p667_1_0p167_0p167"],"t":177,"s":[0],"e":[100]},{"t":200}],"ix":2},"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0p667_1_0p167_0p167"],"t":177,"s":[-150],"e":[-37.3]},{"t":200}],"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"circle","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-75.25,-100.25],[81,94]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0_1_0p167_0p167"],"t":212,"s":[0],"e":[100]},{"t":223}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.868],"y":[0.499]},"o":{"x":[1],"y":[0]},"n":["0p868_0p499_1_0"],"t":200,"s":[0],"e":[100]},{"t":211}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 2","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"gs","o":{"a":0,"k":100,"ix":9},"w":{"a":0,"k":2,"ix":10},"g":{"p":3,"k":{"a":0,"k":[0,0.784,0.667,0.431,0.153,0.892,0.833,0.716,0.305,1,1,1],"ix":8}},"s":{"a":0,"k":[0,-91],"ix":4},"e":{"a":0,"k":[0,115],"ix":5},"t":1,"lc":1,"lj":1,"ml":4,"nm":"Gradient Stroke 1","mn":"ADBE Vector Graphic - G-Stroke","hd":false},{"ty":"st","c":{"a":0,"k":[0.447058796883,0.915432393551,1,1],"ix":3},"o":{"a":0,"k":10,"ix":4},"w":{"a":0,"k":8,"ix":5},"lc":2,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"st","c":{"a":0,"k":[0.447058796883,0.915432393551,1,1],"ix":3},"o":{"a":0,"k":10,"ix":4},"w":{"a":0,"k":16,"ix":5},"lc":2,"lj":1,"ml":4,"nm":"Stroke 2","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[2.875,-3.125],"ix":2},"a":{"a":0,"k":[2.875,-3.125],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"slash","np":5,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.784313738346,0.666666686535,0.43137255311,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":150,"op":300,"st":150,"bm":0},{"ddd":0,"ind":13,"ty":0,"nm":"opponent_logo.png Comp 3","cl":"png","refId":"comp_115","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":156,"s":[0],"e":[100]},{"t":165}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.001,"y":0},"n":"0_1_0p001_0","t":156,"s":[1163,300,0],"e":[913,300,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0,"y":0},"o":{"x":0.167,"y":0.167},"n":"0_0_0p167_0p167","t":175,"s":[913,300,0],"e":[913,300,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.08,"y":0.08},"o":{"x":0.167,"y":0.167},"n":"0p08_0p08_0p167_0p167","t":178,"s":[913,300,0],"e":[913,300,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":235,"s":[913,300,0],"e":[1533,300,0],"to":[0,0,0],"ti":[0,0,0]},{"t":250}],"ix":2},"a":{"a":0,"k":[100,100,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":200,"h":200,"ip":156,"op":300,"st":150,"bm":0},{"ddd":0,"ind":14,"ty":0,"nm":"player_logo.png Comp 3","cl":"png","refId":"comp_116","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":139,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":148,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":223,"s":[100],"e":[0]},{"t":233}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":211,"s":[371,300,0],"e":[391,323,0],"to":[0,0,0],"ti":[0,0,0]},{"t":226}],"ix":2},"a":{"a":0,"k":[100,93.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"s","pt":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-75.824,318.5],[298.192,334.5],[-60.335,-104.5]],"c":true},"ix":1},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[0.494117647409,0,0,1],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,0.164705872536,0.164705872536,1],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":211,"s":[100],"e":[50]},{"t":231}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":187,"ip":211,"op":234,"st":133,"bm":0},{"ddd":0,"ind":15,"ty":0,"nm":"player_logo.png Comp 3","cl":"png","refId":"comp_116","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":139,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":148,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":223,"s":[100],"e":[0]},{"t":233}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.167,"y":0.167},"n":"0_1_0p167_0p167","t":211,"s":[371,300,0],"e":[351,277,0],"to":[0,0,0],"ti":[0,0,0]},{"t":226}],"ix":2},"a":{"a":0,"k":[100,93.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"a","pt":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-75.824,318.5],[298.192,334.5],[-60.335,-104.5]],"c":true},"ix":1},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[0.494117647409,0,0,1],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,0.164705872536,0.164705872536,1],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":211,"s":[100],"e":[50]},{"t":231}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":200,"h":187,"ip":211,"op":234,"st":133,"bm":0},{"ddd":0,"ind":16,"ty":0,"nm":"player_logo.png Comp 3","cl":"png","refId":"comp_116","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":156,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":165,"s":[100],"e":[100]},{"t":235}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0,"y":1},"o":{"x":0.001,"y":0},"n":"0_1_0p001_0","t":156,"s":[107,300,0],"e":[371,300,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.732,"y":0.732},"o":{"x":0.419,"y":0.419},"n":"0p732_0p732_0p419_0p419","t":175,"s":[371,300,0],"e":[371,300,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.08,"y":0.08},"o":{"x":0.098,"y":0.098},"n":"0p08_0p08_0p098_0p098","t":178,"s":[371,300,0],"e":[371,300,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":1,"y":0},"n":"0p833_0p833_1_0","t":235,"s":[371,300,0],"e":[-269,300,0],"to":[0,0,0],"ti":[0,0,0]},{"t":251}],"ix":2},"a":{"a":0,"k":[100,93.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":200,"h":187,"ip":156,"op":211,"st":150,"bm":0},{"ddd":0,"ind":17,"ty":4,"nm":"dashes 2","sr":1,"ks":{"o":{"a":0,"k":30,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,354,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[430,430],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"st","c":{"a":0,"k":[0.784313738346,0.666666686535,0.43137255311,1],"ix":3},"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":234,"s":[100],"e":[0]},{"t":252}],"ix":4},"w":{"a":0,"k":15,"ix":5},"lc":1,"lj":1,"ml":4,"d":[{"n":"d","nm":"dash","v":{"a":0,"k":1.508,"ix":1}},{"n":"g","nm":"gap","v":{"a":0,"k":12,"ix":2}},{"n":"o","nm":"offset","v":{"a":0,"k":0,"ix":7}}],"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0_1_0p167_0p167","0_1_0p167_0p167"],"t":168,"s":[25,25],"e":[115,115]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[1,1],"y":[0,0]},"n":["0p667_1_1_0","0p667_1_1_0"],"t":175,"s":[115,115],"e":[100,100]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"n":["0p667_1_0p333_0","0p667_1_0p333_0"],"t":180,"s":[100,100],"e":[100,100]},{"i":{"x":[0.833,0.833],"y":[0.833,0.833]},"o":{"x":[0.333,0.333],"y":[0,0]},"n":["0p833_0p833_0p333_0","0p833_0p833_0p333_0"],"t":234,"s":[100,100],"e":[60,60]},{"t":252}],"ix":3},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\\n$bm_rt = mul(time, 10);"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":168,"op":300,"st":154,"bm":0},{"ddd":0,"ind":18,"ty":0,"nm":"opponent_vignette.png Comp 1","cl":"png","refId":"comp_117","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":150,"s":[0],"e":[70]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":161,"s":[70],"e":[70]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":279,"s":[70],"e":[0]},{"t":289}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,360,0],"ix":2},"a":{"a":0,"k":[640,360,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":24,"nm":"Levels (Individual Controls)","np":42,"mn":"ADBE Pro Levels2","ix":1,"en":1,"ef":[{"ty":7,"nm":"Channel:","mn":"ADBE Pro Levels2-0001","ix":1,"v":{"a":0,"k":1,"ix":1}},{},{"ty":6,"nm":"RGB","mn":"ADBE Pro Levels2-0003","ix":3,"v":0},{"ty":0,"nm":"Input Black","mn":"ADBE Pro Levels2-0004","ix":4,"v":{"a":0,"k":0,"ix":4}},{"ty":0,"nm":"Input White","mn":"ADBE Pro Levels2-0005","ix":5,"v":{"a":0,"k":1,"ix":5}},{"ty":0,"nm":"Gamma","mn":"ADBE Pro Levels2-0006","ix":6,"v":{"a":0,"k":1,"ix":6}},{"ty":0,"nm":"Output Black","mn":"ADBE Pro Levels2-0007","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":0,"nm":"Output White","mn":"ADBE Pro Levels2-0008","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":6,"nm":"RGB","mn":"ADBE Pro Levels2-0009","ix":9,"v":0},{"ty":6,"nm":"Red","mn":"ADBE Pro Levels2-0010","ix":10,"v":0},{"ty":0,"nm":"Red Input Black","mn":"ADBE Pro Levels2-0011","ix":11,"v":{"a":0,"k":0,"ix":11}},{"ty":0,"nm":"Red Input White","mn":"ADBE Pro Levels2-0012","ix":12,"v":{"a":0,"k":1,"ix":12}},{"ty":0,"nm":"Red Gamma","mn":"ADBE Pro Levels2-0013","ix":13,"v":{"a":0,"k":1,"ix":13}},{"ty":0,"nm":"Red Output Black","mn":"ADBE Pro Levels2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Red Output White","mn":"ADBE Pro Levels2-0015","ix":15,"v":{"a":0,"k":1,"ix":15}},{"ty":6,"nm":"Red","mn":"ADBE Pro Levels2-0016","ix":16,"v":0},{"ty":6,"nm":"Green","mn":"ADBE Pro Levels2-0017","ix":17,"v":0},{"ty":0,"nm":"Green Input Black","mn":"ADBE Pro Levels2-0018","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":0,"nm":"Green Input White","mn":"ADBE Pro Levels2-0019","ix":19,"v":{"a":0,"k":1,"ix":19}},{"ty":0,"nm":"Green Gamma","mn":"ADBE Pro Levels2-0020","ix":20,"v":{"a":0,"k":1,"ix":20}},{"ty":0,"nm":"Green Output Black","mn":"ADBE Pro Levels2-0021","ix":21,"v":{"a":0,"k":0,"ix":21}},{"ty":0,"nm":"Green Output White","mn":"ADBE Pro Levels2-0022","ix":22,"v":{"a":0,"k":1,"ix":22}},{"ty":6,"nm":"Green","mn":"ADBE Pro Levels2-0023","ix":23,"v":0},{"ty":6,"nm":"Blue","mn":"ADBE Pro Levels2-0024","ix":24,"v":0},{"ty":0,"nm":"Blue Input Black","mn":"ADBE Pro Levels2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":0,"nm":"Blue Input White","mn":"ADBE Pro Levels2-0026","ix":26,"v":{"a":0,"k":1,"ix":26}},{"ty":0,"nm":"Blue Gamma","mn":"ADBE Pro Levels2-0027","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":0,"nm":"Blue Output Black","mn":"ADBE Pro Levels2-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":0,"nm":"Blue Output White","mn":"ADBE Pro Levels2-0029","ix":29,"v":{"a":0,"k":1,"ix":29}},{"ty":6,"nm":"Blue","mn":"ADBE Pro Levels2-0030","ix":30,"v":0},{"ty":6,"nm":"Alpha","mn":"ADBE Pro Levels2-0031","ix":31,"v":0},{"ty":0,"nm":"Alpha Input Black","mn":"ADBE Pro Levels2-0032","ix":32,"v":{"a":0,"k":0,"ix":32}},{"ty":0,"nm":"Alpha Input White","mn":"ADBE Pro Levels2-0033","ix":33,"v":{"a":0,"k":1,"ix":33}},{"ty":0,"nm":"Alpha Gamma","mn":"ADBE Pro Levels2-0034","ix":34,"v":{"a":0,"k":1,"ix":34}},{"ty":0,"nm":"Alpha Output Black","mn":"ADBE Pro Levels2-0035","ix":35,"v":{"a":0,"k":0,"ix":35}},{"ty":0,"nm":"Alpha Output White","mn":"ADBE Pro Levels2-0036","ix":36,"v":{"a":0,"k":1,"ix":36}},{"ty":6,"nm":"Alpha","mn":"ADBE Pro Levels2-0037","ix":37,"v":0},{"ty":7,"nm":"Clip To Output Black","mn":"ADBE Pro Levels2-0038","ix":38,"v":{"a":0,"k":3,"ix":38}},{"ty":7,"nm":"Clip To Output White","mn":"ADBE Pro Levels2-0039","ix":39,"v":{"a":0,"k":3,"ix":39}},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":40,"v":{"a":0,"k":1,"ix":40}}]}],"w":1280,"h":720,"ip":150,"op":289,"st":138,"bm":0}],"markers":[{"tm":0,"cm":"win","dr":0},{"tm":150,"cm":"lose","dr":0},{"tm":299,"cm":"","dr":0}]}')
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.6","fr":30,"ip":0,"op":588,"w":1280,"h":720,"nm":"dashes","ddd":0,"assets":[{"id":"image_0","w":1280,"h":720,"u":"images/","p":"img_0.png"}],"layers":[{"ddd":0,"ind":1,"ty":2,"nm":"dashes_matte.png","cl":"png","td":1,"refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,360,0],"ix":2},"a":{"a":0,"k":[640,360,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":588,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"dashes inner","tt":2,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":14,"s":[0],"e":[80]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":28,"s":[80],"e":[40]},{"t":52}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,360,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0,0.667],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,-3.472]},"n":["0_1_0p167_0p167","0_1_0p167_0p167","0p667_1_0p167_-3p472"],"t":15,"s":[75,75,100],"e":[100,100,100]},{"t":63}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[250,250],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0_1_0p167_0p167"],"t":0,"s":[0],"e":[-75]},{"t":65}],"ix":6,"x":"var $bm_rt;\\n$bm_rt = sum(value, mul(time, -10));"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.627451002598,0.607843160629,0.549019634724,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":15,"ix":5},"lc":1,"lj":1,"ml":4,"d":[{"n":"d","nm":"dash","v":{"a":0,"k":1.5,"ix":1}},{"n":"g","nm":"gap","v":{"a":0,"k":6.354,"ix":2}},{"n":"o","nm":"offset","v":{"a":0,"k":0,"ix":7}}],"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":0,"op":588,"st":0,"bm":0}],"markers":[{"tm":-102,"cm":"","dr":0},{"tm":0,"cm":"","dr":0},{"tm":17,"cm":"","dr":0}]}')
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.15","fr":30,"ip":0,"op":283,"w":1280,"h":720,"nm":"Trophy_appear","ddd":0,"assets":[{"id":"image_0","w":825,"h":720,"u":"images/","p":"gradient_matte.png","e":0},{"id":"image_1","w":400,"h":708,"u":"images/","p":"trophyAsset.png","e":0},{"id":"image_2","w":1280,"h":720,"u":"images/","p":"sheen_line.png","e":0},{"id":"comp_0","layers":[{"ddd":0,"ind":1,"ty":0,"nm":"TrophyMatte","refId":"comp_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,310,0],"ix":2},"a":{"a":0,"k":[148.5,232,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0,0.833],"y":[1,1,1]},"o":{"x":[0.18,0.18,0.333],"y":[0.692,0.692,0]},"n":["0_1_0p18_0p692","0_1_0p18_0p692","0p833_1_0p333_0"],"t":167,"s":[22,22,100],"e":[125,125,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,-0.961]},"o":{"x":[1,1,0.167],"y":[0,0,0]},"n":["0p833_0p833_1_0","0p833_0p833_1_0","0p833_-0p961_0p167_0"],"t":180,"s":[125,125,100],"e":[95,95,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,148.039]},"n":["0p667_1_0p167_0p167","0p667_1_0p167_0p167","0p667_1_0p167_148p039"],"t":187,"s":[95,95,100],"e":[100,100,100]},{"t":190}],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[0,0,0,0],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,1],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":0,"k":100,"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]},{"ty":24,"nm":"Levels (Individual Controls)","np":42,"mn":"ADBE Pro Levels2","ix":2,"en":1,"ef":[{"ty":7,"nm":"Channel:","mn":"ADBE Pro Levels2-0001","ix":1,"v":{"a":0,"k":1,"ix":1}},{},{"ty":6,"nm":"RGB","mn":"ADBE Pro Levels2-0003","ix":3,"v":0},{"ty":0,"nm":"Input Black","mn":"ADBE Pro Levels2-0004","ix":4,"v":{"a":0,"k":0.4,"ix":4}},{"ty":0,"nm":"Input White","mn":"ADBE Pro Levels2-0005","ix":5,"v":{"a":0,"k":0.659,"ix":5}},{"ty":0,"nm":"Gamma","mn":"ADBE Pro Levels2-0006","ix":6,"v":{"a":0,"k":1,"ix":6}},{"ty":0,"nm":"Output Black","mn":"ADBE Pro Levels2-0007","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":0,"nm":"Output White","mn":"ADBE Pro Levels2-0008","ix":8,"v":{"a":0,"k":1,"ix":8}},{"ty":6,"nm":"RGB","mn":"ADBE Pro Levels2-0009","ix":9,"v":0},{"ty":6,"nm":"Red","mn":"ADBE Pro Levels2-0010","ix":10,"v":0},{"ty":0,"nm":"Red Input Black","mn":"ADBE Pro Levels2-0011","ix":11,"v":{"a":0,"k":0,"ix":11}},{"ty":0,"nm":"Red Input White","mn":"ADBE Pro Levels2-0012","ix":12,"v":{"a":0,"k":1,"ix":12}},{"ty":0,"nm":"Red Gamma","mn":"ADBE Pro Levels2-0013","ix":13,"v":{"a":0,"k":1,"ix":13}},{"ty":0,"nm":"Red Output Black","mn":"ADBE Pro Levels2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Red Output White","mn":"ADBE Pro Levels2-0015","ix":15,"v":{"a":0,"k":1,"ix":15}},{"ty":6,"nm":"Red","mn":"ADBE Pro Levels2-0016","ix":16,"v":0},{"ty":6,"nm":"Green","mn":"ADBE Pro Levels2-0017","ix":17,"v":0},{"ty":0,"nm":"Green Input Black","mn":"ADBE Pro Levels2-0018","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":0,"nm":"Green Input White","mn":"ADBE Pro Levels2-0019","ix":19,"v":{"a":0,"k":1,"ix":19}},{"ty":0,"nm":"Green Gamma","mn":"ADBE Pro Levels2-0020","ix":20,"v":{"a":0,"k":1,"ix":20}},{"ty":0,"nm":"Green Output Black","mn":"ADBE Pro Levels2-0021","ix":21,"v":{"a":0,"k":0,"ix":21}},{"ty":0,"nm":"Green Output White","mn":"ADBE Pro Levels2-0022","ix":22,"v":{"a":0,"k":1,"ix":22}},{"ty":6,"nm":"Green","mn":"ADBE Pro Levels2-0023","ix":23,"v":0},{"ty":6,"nm":"Blue","mn":"ADBE Pro Levels2-0024","ix":24,"v":0},{"ty":0,"nm":"Blue Input Black","mn":"ADBE Pro Levels2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":0,"nm":"Blue Input White","mn":"ADBE Pro Levels2-0026","ix":26,"v":{"a":0,"k":1,"ix":26}},{"ty":0,"nm":"Blue Gamma","mn":"ADBE Pro Levels2-0027","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":0,"nm":"Blue Output Black","mn":"ADBE Pro Levels2-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":0,"nm":"Blue Output White","mn":"ADBE Pro Levels2-0029","ix":29,"v":{"a":0,"k":1,"ix":29}},{"ty":6,"nm":"Blue","mn":"ADBE Pro Levels2-0030","ix":30,"v":0},{"ty":6,"nm":"Alpha","mn":"ADBE Pro Levels2-0031","ix":31,"v":0},{"ty":0,"nm":"Alpha Input Black","mn":"ADBE Pro Levels2-0032","ix":32,"v":{"a":0,"k":0,"ix":32}},{"ty":0,"nm":"Alpha Input White","mn":"ADBE Pro Levels2-0033","ix":33,"v":{"a":0,"k":1,"ix":33}},{"ty":0,"nm":"Alpha Gamma","mn":"ADBE Pro Levels2-0034","ix":34,"v":{"a":0,"k":1,"ix":34}},{"ty":0,"nm":"Alpha Output Black","mn":"ADBE Pro Levels2-0035","ix":35,"v":{"a":0,"k":0,"ix":35}},{"ty":0,"nm":"Alpha Output White","mn":"ADBE Pro Levels2-0036","ix":36,"v":{"a":0,"k":1,"ix":36}},{"ty":6,"nm":"Alpha","mn":"ADBE Pro Levels2-0037","ix":37,"v":0},{"ty":7,"nm":"Clip To Output Black","mn":"ADBE Pro Levels2-0038","ix":38,"v":{"a":0,"k":3,"ix":38}},{"ty":7,"nm":"Clip To Output White","mn":"ADBE Pro Levels2-0039","ix":39,"v":{"a":0,"k":3,"ix":39}},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":40,"v":{"a":0,"k":1,"ix":40}}]}],"w":297,"h":464,"ip":167,"op":1074,"st":167,"bm":2}]},{"id":"comp_1","layers":[{"ddd":0,"ind":1,"ty":2,"nm":"trophyAsset.png","cl":"png","refId":"image_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[148.5,232,0],"ix":2},"a":{"a":0,"k":[200,354,0],"ix":1},"s":{"a":0,"k":[50,50,100],"ix":6}},"ao":0,"ip":0,"op":907,"st":0,"bm":0}]}],"fonts":{"list":[{"origin":0,"fPath":"","fClass":"","fFamily":"LoL Display","fWeight":"","fStyle":"Bold","fName":"BeaufortforLOL-Bold","ascent":69.4992065429688}]},"layers":[{"ddd":0,"ind":1,"ty":2,"nm":"MATTE 2","td":1,"refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,340,0],"ix":2},"a":{"a":0,"k":[412.5,360,0],"ix":1},"s":{"a":0,"k":[100,70,100],"ix":6}},"ao":0,"ip":7,"op":736,"st":-164,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"dashes inner","tt":1,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":21,"s":[0],"e":[80]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":25,"s":[80],"e":[40]},{"t":50}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,340,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0,0.667],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,-3.472]},"n":["0_1_0p167_0p167","0_1_0p167_0p167","0p667_1_0p167_-3p472"],"t":22,"s":[75,75,100],"e":[100,100,100]},{"t":62}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[400,400],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0_1_0p167_0p167"],"t":7,"s":[0],"e":[-75]},{"t":72}],"ix":6,"x":"var $bm_rt;\\n$bm_rt = sum(value, mul(time, -10));"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":8,"ix":5},"lc":1,"lj":1,"ml":4,"d":[{"n":"d","nm":"dash","v":{"a":0,"k":2,"ix":1}},{"n":"g","nm":"gap","v":{"a":0,"k":6.379,"ix":2}},{"n":"o","nm":"offset","v":{"a":0,"k":0,"ix":7}}],"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":7,"op":907,"st":7,"bm":0},{"ddd":0,"ind":3,"ty":2,"nm":"MATTE","td":1,"refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,340,0],"ix":2},"a":{"a":0,"k":[412.5,360,0],"ix":1},"s":{"a":0,"k":[100,80,100],"ix":6}},"ao":0,"ip":7,"op":736,"st":-164,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"dashes outer","tt":1,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[1],"y":[0]},"n":["0p833_0p833_1_0"],"t":19,"s":[0],"e":[80]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":23,"s":[80],"e":[24]},{"t":48}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,340,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0,0.667],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,5.185]},"n":["0_1_0p167_0p167","0_1_0p167_0p167","0p667_1_0p167_5p185"],"t":19,"s":[60,60,100],"e":[100,100,100]},{"t":59}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[550,550],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0_1_0p167_0p167"],"t":5,"s":[0],"e":[75]},{"t":70}],"ix":6,"x":"var $bm_rt;\\n$bm_rt = sum(value, mul(time, 10));"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":8,"ix":5},"lc":1,"lj":1,"ml":4,"d":[{"n":"d","nm":"dash","v":{"a":0,"k":2,"ix":1}},{"n":"g","nm":"gap","v":{"a":0,"k":9.519,"ix":2}},{"n":"o","nm":"offset","v":{"a":0,"k":0,"ix":7}}],"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":7,"op":905,"st":5,"bm":0},{"ddd":0,"ind":5,"ty":5,"nm":"CHAMPION","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"s":true,"x":{"a":0,"k":640,"ix":3},"y":{"a":0,"k":540,"ix":4}},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0,0.667],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,-7.179]},"n":["0_1_0p167_0p167","0_1_0p167_0p167","0p667_1_0p167_-7p179"],"t":20,"s":[120,120,100],"e":[100,100,100]},{"t":43}],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[1,1,1,1],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":20,"s":[100],"e":[0]},{"t":28}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"t":{"d":{"k":[{"s":{"s":30,"f":"BeaufortforLOL-Bold","t":"TOURNAMENT CHAMPION\\r","j":2,"tr":50,"lh":36,"ls":0,"fc":[0.8,0.75,0.57]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":20,"op":739,"st":-161,"bm":0},{"ddd":0,"ind":6,"ty":5,"nm":"16 team Bracket","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"s":true,"x":{"a":0,"k":640,"ix":3},"y":{"a":0,"k":570,"ix":4}},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[1,1,1,1],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":20,"s":[100],"e":[0]},{"t":28}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"t":{"d":{"k":[{"s":{"s":18,"f":"BeaufortforLOL-Bold","t":"16 TEAM BRACKET","j":2,"tr":50,"lh":21.6,"ls":0,"fc":[0.47,0.35,0.16]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2}},"a":[]},"ip":20,"op":739,"st":-161,"bm":0},{"ddd":0,"ind":7,"ty":0,"nm":"TrophyMatte","td":1,"refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,360,0],"ix":2},"a":{"a":0,"k":[640,360,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":1280,"h":720,"ip":0,"op":733,"st":-167,"bm":0},{"ddd":0,"ind":8,"ty":2,"nm":"sheen_line.png","cl":"png","tt":3,"refId":"image_2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":-133,"ix":10,"x":"var $bm_rt;\\n$bm_rt = sum(mul(time, -90), value);"},"p":{"a":0,"k":[723,-10,0],"ix":2},"a":{"a":0,"k":[640,360,0],"ix":1},"s":{"a":0,"k":[125,100,100],"ix":6}},"ao":0,"ip":0,"op":907,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":0,"nm":"Trophy","refId":"comp_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[640,310,0],"ix":2},"a":{"a":0,"k":[148.5,232,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0,0,0.833],"y":[1,1,1]},"o":{"x":[0.18,0.18,0.333],"y":[0.692,0.692,0]},"n":["0_1_0p18_0p692","0_1_0p18_0p692","0p833_1_0p333_0"],"t":0,"s":[22,22,100],"e":[125,125,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,7.646]},"o":{"x":[1,1,0.167],"y":[0,0,0]},"n":["0p833_0p833_1_0","0p833_0p833_1_0","0p833_7p646_0p167_0"],"t":13,"s":[125,125,100],"e":[95,95,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0]},"n":["0p667_1_0p167_0p167","0p667_1_0p167_0p167","0p667_1_0p167_0"],"t":20,"s":[95,95,100],"e":[100,100,100]},{"t":23}],"ix":6}},"ao":0,"ef":[{"ty":20,"nm":"Tint","np":7,"mn":"ADBE Tint","ix":1,"en":1,"ef":[{"ty":2,"nm":"Map Black To","mn":"ADBE Tint-0001","ix":1,"v":{"a":0,"k":[1,1,1,1],"ix":1}},{"ty":2,"nm":"Map White To","mn":"ADBE Tint-0002","ix":2,"v":{"a":0,"k":[1,1,1,0],"ix":2}},{"ty":0,"nm":"Amount to Tint","mn":"ADBE Tint-0003","ix":3,"v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":5,"s":[100],"e":[0]},{"t":13,"s":[0],"h":1},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":20,"s":[100],"e":[0]},{"t":28}],"ix":3}},{"ty":6,"nm":"","mn":"ADBE Tint-0004","ix":4,"v":0},{"ty":7,"nm":"GPU Rendering","mn":"ADBE Force CPU GPU","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"w":297,"h":464,"ip":0,"op":907,"st":0,"bm":0}],"markers":[{"tm":-107,"cm":"","dr":0},{"tm":-77,"cm":"introStart","dr":0},{"tm":0,"cm":"trophy","dr":0},{"tm":43,"cm":"loopStart","dr":0},{"tm":282,"cm":"loopEnd","dr":0},{"tm":582,"cm":"end","dr":0}]}')
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = 1.6,
                i = 42,
                o = 84,
                r = [{
                    x: 0,
                    y: 0
                }, {
                    x: -1.6,
                    y: -84,
                    usePixelOffsetY: !0
                }, {
                    x: -1.6,
                    y: o,
                    usePixelOffsetY: !0
                }, {
                    x: -1.6,
                    y: -42,
                    usePixelOffsetY: !0
                }, {
                    x: -1.6,
                    y: i,
                    usePixelOffsetY: !0
                }, {
                    x: -1.6,
                    y: -42,
                    usePixelOffsetY: !0
                }, {
                    x: -1.6,
                    y: i,
                    usePixelOffsetY: !0
                }],
                l = [16],
                c = {
                    2: r,
                    4: r,
                    8: r,
                    16: [{
                        x: 0,
                        y: 0
                    }, {
                        x: -1.6,
                        y: 0
                    }, {
                        x: s,
                        y: 0
                    }, {
                        x: -1.6,
                        y: -84,
                        usePixelOffsetY: !0
                    }, {
                        x: -1.6,
                        y: o,
                        usePixelOffsetY: !0
                    }, {
                        x: s,
                        y: -84,
                        usePixelOffsetY: !0
                    }, {
                        x: s,
                        y: o,
                        usePixelOffsetY: !0
                    }, {
                        x: -1.6,
                        y: -42,
                        usePixelOffsetY: !0
                    }, {
                        x: -1.6,
                        y: i,
                        usePixelOffsetY: !0
                    }, {
                        x: -1.6,
                        y: -42,
                        usePixelOffsetY: !0
                    }, {
                        x: -1.6,
                        y: i,
                        usePixelOffsetY: !0
                    }, {
                        x: s,
                        y: -42,
                        usePixelOffsetY: !0
                    }, {
                        x: s,
                        y: i,
                        usePixelOffsetY: !0
                    }, {
                        x: s,
                        y: -42,
                        usePixelOffsetY: !0
                    }, {
                        x: s,
                        y: i,
                        usePixelOffsetY: !0
                    }]
                };

            function d(e, t) {
                const n = {};
                for (let e = 0; e < t.length; ++e) {
                    const a = Math.floor(Math.log2(e + 1));
                    n[a] = n[a] || [], n[a].push(t[e])
                }
                for (const e of Object.keys(n)) {
                    const t = n[e];
                    if (t.length <= 1) continue;
                    const a = t.length / 2;
                    for (let e = 0; e < a; ++e) {
                        const n = t[e];
                        t[e] = t[e + a], t[e + a] = n
                    }
                }
                return a._.flatMap(n, (e => e))
            }
            for (const e of Object.keys(c))
                if (a._.includes(l, parseInt(e))) {
                    const t = a._.cloneDeep(c[e]);
                    c[e + "_flipped"] = d(0, t)
                } var m = {
                get: (e, t) => t && a._.includes(l, e) ? c[e + "_flipped"] : c[e]
            };
            t.default = m
        }, (e, t, n) => {
            "use strict";
            e.exports = n(154)
        }, (e, t, n) => {
            "use strict";
            var a = n(155),
                s = n(160);

            function i(e) {
                e.fn.perfectScrollbar = function(e) {
                    return this.each((function() {
                        if ("object" == typeof e || void 0 === e) {
                            var t = e;
                            s.get(this) || a.initialize(this, t)
                        } else {
                            var n = e;
                            "update" === n ? a.update(this) : "destroy" === n && a.destroy(this)
                        }
                    }))
                }
            }
            var o = window.jQuery ?? window.$;
            void 0 !== o && i(o), e.exports = i
        }, (e, t, n) => {
            "use strict";
            var a = n(156),
                s = n(164),
                i = n(174);
            e.exports = {
                initialize: s,
                update: i,
                destroy: a
            }
        }, (e, t, n) => {
            "use strict";
            var a = n(157),
                s = n(159),
                i = n(160);
            e.exports = function(e) {
                var t = i.get(e);
                t && (t.event.unbindAll(), s.remove(t.scrollbarX), s.remove(t.scrollbarY), s.remove(t.scrollbarXRail), s.remove(t.scrollbarYRail), a.removePsClasses(e), i.remove(e))
            }
        }, (e, t, n) => {
            "use strict";
            var a = n(158),
                s = n(159),
                i = t.toInt = function(e) {
                    return parseInt(e, 10) || 0
                },
                o = t.clone = function(e) {
                    if (e) {
                        if (e.constructor === Array) return e.map(o);
                        if ("object" == typeof e) {
                            var t = {};
                            for (var n in e) t[n] = o(e[n]);
                            return t
                        }
                        return e
                    }
                    return null
                };
            t.extend = function(e, t) {
                var n = o(e);
                for (var a in t) n[a] = o(t[a]);
                return n
            }, t.isEditable = function(e) {
                return s.matches(e, "input,[contenteditable]") || s.matches(e, "select,[contenteditable]") || s.matches(e, "textarea,[contenteditable]") || s.matches(e, "button,[contenteditable]")
            }, t.removePsClasses = function(e) {
                for (var t = a.list(e), n = 0; n < t.length; n++) {
                    var s = t[n];
                    0 === s.indexOf("ps-") && a.remove(e, s)
                }
            }, t.outerWidth = function(e) {
                return i(s.css(e, "width")) + i(s.css(e, "paddingLeft")) + i(s.css(e, "paddingRight")) + i(s.css(e, "borderLeftWidth")) + i(s.css(e, "borderRightWidth"))
            }, t.startScrolling = function(e, t) {
                a.add(e, "ps-in-scrolling"), void 0 !== t ? a.add(e, "ps-" + t) : (a.add(e, "ps-x"), a.add(e, "ps-y"))
            }, t.stopScrolling = function(e, t) {
                a.remove(e, "ps-in-scrolling"), void 0 !== t ? a.remove(e, "ps-" + t) : (a.remove(e, "ps-x"), a.remove(e, "ps-y"))
            }, t.env = {
                isWebKit: "WebkitAppearance" in document.documentElement.style,
                supportsTouch: "ontouchstart" in window || window.DocumentTouch && document instanceof window.DocumentTouch,
                supportsIePointer: null !== window.navigator.msMaxTouchPoints
            }
        }, (e, t) => {
            "use strict";
            t.add = function(e, t) {
                e.classList ? e.classList.add(t) : function(e, t) {
                    var n = e.className.split(" ");
                    n.indexOf(t) < 0 && n.push(t), e.className = n.join(" ")
                }(e, t)
            }, t.remove = function(e, t) {
                e.classList ? e.classList.remove(t) : function(e, t) {
                    var n = e.className.split(" "),
                        a = n.indexOf(t);
                    a >= 0 && n.splice(a, 1), e.className = n.join(" ")
                }(e, t)
            }, t.list = function(e) {
                return e.classList ? Array.prototype.slice.apply(e.classList) : e.className.split(" ")
            }
        }, e => {
            "use strict";
            var t = {};
            t.e = function(e, t) {
                var n = document.createElement(e);
                return n.className = t, n
            }, t.appendTo = function(e, t) {
                return t.appendChild(e), e
            }, t.css = function(e, t, n) {
                return "object" == typeof t ? function(e, t) {
                    for (var n in t) {
                        var a = t[n];
                        "number" == typeof a && (a = a.toString() + "px"), e.style[n] = a
                    }
                    return e
                }(e, t) : void 0 === n ? function(e, t) {
                    return window.getComputedStyle(e)[t]
                }(e, t) : function(e, t, n) {
                    return "number" == typeof n && (n = n.toString() + "px"), e.style[t] = n, e
                }(e, t, n)
            }, t.matches = function(e, t) {
                return void 0 !== e.matches ? e.matches(t) : void 0 !== e.matchesSelector ? e.matchesSelector(t) : void 0 !== e.webkitMatchesSelector ? e.webkitMatchesSelector(t) : void 0 !== e.mozMatchesSelector ? e.mozMatchesSelector(t) : void 0 !== e.msMatchesSelector ? e.msMatchesSelector(t) : void 0
            }, t.remove = function(e) {
                void 0 !== e.remove ? e.remove() : e.parentNode && e.parentNode.removeChild(e)
            }, t.queryChildren = function(e, n) {
                return Array.prototype.filter.call(e.childNodes, (function(e) {
                    return t.matches(e, n)
                }))
            }, e.exports = t
        }, (e, t, n) => {
            "use strict";
            var a = n(157),
                s = n(158),
                i = n(161),
                o = n(159),
                r = n(162),
                l = n(163),
                c = {};

            function d(e) {
                var t, n, l = this;

                function c() {
                    s.add(e, "ps-focus")
                }

                function d() {
                    s.remove(e, "ps-focus")
                }
                l.settings = a.clone(i), l.containerWidth = null, l.containerHeight = null, l.contentWidth = null, l.contentHeight = null, l.isRtl = "rtl" === o.css(e, "direction"), l.isNegativeScroll = (n = e.scrollLeft, e.scrollLeft = -1, t = e.scrollLeft < 0, e.scrollLeft = n, t), l.negativeScrollAdjustment = l.isNegativeScroll ? e.scrollWidth - e.clientWidth : 0, l.event = new r, l.ownerDocument = e.ownerDocument || document, l.scrollbarXRail = o.appendTo(o.e("div", "ps-scrollbar-x-rail"), e), l.scrollbarX = o.appendTo(o.e("div", "ps-scrollbar-x"), l.scrollbarXRail), l.scrollbarX.setAttribute("tabindex", 0), l.event.bind(l.scrollbarX, "focus", c), l.event.bind(l.scrollbarX, "blur", d), l.scrollbarXActive = null, l.scrollbarXWidth = null, l.scrollbarXLeft = null, l.scrollbarXBottom = a.toInt(o.css(l.scrollbarXRail, "bottom")), l.isScrollbarXUsingBottom = l.scrollbarXBottom == l.scrollbarXBottom, l.scrollbarXTop = l.isScrollbarXUsingBottom ? null : a.toInt(o.css(l.scrollbarXRail, "top")), l.railBorderXWidth = a.toInt(o.css(l.scrollbarXRail, "borderLeftWidth")) + a.toInt(o.css(l.scrollbarXRail, "borderRightWidth")), o.css(l.scrollbarXRail, "display", "block"), l.railXMarginWidth = a.toInt(o.css(l.scrollbarXRail, "marginLeft")) + a.toInt(o.css(l.scrollbarXRail, "marginRight")), o.css(l.scrollbarXRail, "display", ""), l.railXWidth = null, l.railXRatio = null, l.scrollbarYRail = o.appendTo(o.e("div", "ps-scrollbar-y-rail"), e), l.scrollbarY = o.appendTo(o.e("div", "ps-scrollbar-y"), l.scrollbarYRail), l.scrollbarY.setAttribute("tabindex", 0), l.event.bind(l.scrollbarY, "focus", c), l.event.bind(l.scrollbarY, "blur", d), l.scrollbarYActive = null, l.scrollbarYHeight = null, l.scrollbarYTop = null, l.scrollbarYRight = a.toInt(o.css(l.scrollbarYRail, "right")), l.isScrollbarYUsingRight = l.scrollbarYRight == l.scrollbarYRight, l.scrollbarYLeft = l.isScrollbarYUsingRight ? null : a.toInt(o.css(l.scrollbarYRail, "left")), l.scrollbarYOuterWidth = l.isRtl ? a.outerWidth(l.scrollbarY) : null, l.railBorderYWidth = a.toInt(o.css(l.scrollbarYRail, "borderTopWidth")) + a.toInt(o.css(l.scrollbarYRail, "borderBottomWidth")), o.css(l.scrollbarYRail, "display", "block"), l.railYMarginHeight = a.toInt(o.css(l.scrollbarYRail, "marginTop")) + a.toInt(o.css(l.scrollbarYRail, "marginBottom")), o.css(l.scrollbarYRail, "display", ""), l.railYHeight = null, l.railYRatio = null
            }

            function m(e) {
                return e.getAttribute("data-ps-id")
            }
            t.add = function(e) {
                var t = l();
                return function(e, t) {
                    e.setAttribute("data-ps-id", t)
                }(e, t), c[t] = new d(e), c[t]
            }, t.remove = function(e) {
                delete c[m(e)],
                    function(e) {
                        e.removeAttribute("data-ps-id")
                    }(e)
            }, t.get = function(e) {
                return c[m(e)]
            }
        }, e => {
            "use strict";
            e.exports = {
                handlers: ["click-rail", "drag-scrollbar", "keyboard", "wheel", "touch"],
                maxScrollbarLength: null,
                minScrollbarLength: null,
                scrollXMarginOffset: 0,
                scrollYMarginOffset: 0,
                suppressScrollX: !1,
                suppressScrollY: !1,
                swipePropagation: !0,
                useBothWheelAxes: !1,
                wheelPropagation: !1,
                wheelSpeed: 1,
                theme: "default"
            }
        }, e => {
            "use strict";
            var t = function(e) {
                this.element = e, this.events = {}
            };
            t.prototype.bind = function(e, t) {
                void 0 === this.events[e] && (this.events[e] = []), this.events[e].push(t), this.element.addEventListener(e, t, !1)
            }, t.prototype.unbind = function(e, t) {
                var n = void 0 !== t;
                this.events[e] = this.events[e].filter((function(a) {
                    return !(!n || a === t) || (this.element.removeEventListener(e, a, !1), !1)
                }), this)
            }, t.prototype.unbindAll = function() {
                for (var e in this.events) this.unbind(e)
            };
            var n = function() {
                this.eventElements = []
            };
            n.prototype.eventElement = function(e) {
                var n = this.eventElements.filter((function(t) {
                    return t.element === e
                }))[0];
                return void 0 === n && (n = new t(e), this.eventElements.push(n)), n
            }, n.prototype.bind = function(e, t, n) {
                this.eventElement(e).bind(t, n)
            }, n.prototype.unbind = function(e, t, n) {
                this.eventElement(e).unbind(t, n)
            }, n.prototype.unbindAll = function() {
                for (var e = 0; e < this.eventElements.length; e++) this.eventElements[e].unbindAll()
            }, n.prototype.once = function(e, t, n) {
                var a = this.eventElement(e),
                    s = function(e) {
                        a.unbind(t, s), n(e)
                    };
                a.bind(t, s)
            }, e.exports = n
        }, e => {
            "use strict";
            e.exports = function() {
                function e() {
                    return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1)
                }
                return function() {
                    return e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e()
                }
            }()
        }, (e, t, n) => {
            "use strict";
            var a = n(157),
                s = n(158),
                i = n(160),
                o = n(165),
                r = {
                    "click-rail": n(167),
                    "drag-scrollbar": n(168),
                    keyboard: n(169),
                    wheel: n(170),
                    touch: n(171),
                    selection: n(172)
                },
                l = n(173);
            e.exports = function(e, t) {
                t = "object" == typeof t ? t : {}, s.add(e, "ps-container");
                var n = i.add(e);
                n.settings = a.extend(n.settings, t), s.add(e, "ps-theme-" + n.settings.theme), n.settings.handlers.forEach((function(t) {
                    r[t](e)
                })), l(e), o(e)
            }
        }, (e, t, n) => {
            "use strict";
            var a = n(157),
                s = n(158),
                i = n(159),
                o = n(160),
                r = n(166);

            function l(e, t) {
                return e.settings.minScrollbarLength && (t = Math.max(t, e.settings.minScrollbarLength)), e.settings.maxScrollbarLength && (t = Math.min(t, e.settings.maxScrollbarLength)), t
            }
            e.exports = function(e) {
                var t, n = o.get(e);
                n.containerWidth = e.clientWidth, n.containerHeight = e.clientHeight, n.contentWidth = e.scrollWidth, n.contentHeight = e.scrollHeight, e.contains(n.scrollbarXRail) || ((t = i.queryChildren(e, ".ps-scrollbar-x-rail")).length > 0 && t.forEach((function(e) {
                        i.remove(e)
                    })), i.appendTo(n.scrollbarXRail, e)), e.contains(n.scrollbarYRail) || ((t = i.queryChildren(e, ".ps-scrollbar-y-rail")).length > 0 && t.forEach((function(e) {
                        i.remove(e)
                    })), i.appendTo(n.scrollbarYRail, e)), !n.settings.suppressScrollX && n.containerWidth + n.settings.scrollXMarginOffset < n.contentWidth ? (n.scrollbarXActive = !0, n.railXWidth = n.containerWidth - n.railXMarginWidth, n.railXRatio = n.containerWidth / n.railXWidth, n.scrollbarXWidth = l(n, a.toInt(n.railXWidth * n.containerWidth / n.contentWidth)), n.scrollbarXLeft = a.toInt((n.negativeScrollAdjustment + e.scrollLeft) * (n.railXWidth - n.scrollbarXWidth) / (n.contentWidth - n.containerWidth))) : n.scrollbarXActive = !1, !n.settings.suppressScrollY && n.containerHeight + n.settings.scrollYMarginOffset < n.contentHeight ? (n.scrollbarYActive = !0, n.railYHeight = n.containerHeight - n.railYMarginHeight, n.railYRatio = n.containerHeight / n.railYHeight, n.scrollbarYHeight = l(n, a.toInt(n.railYHeight * n.containerHeight / n.contentHeight)), n.scrollbarYTop = a.toInt(e.scrollTop * (n.railYHeight - n.scrollbarYHeight) / (n.contentHeight - n.containerHeight))) : n.scrollbarYActive = !1, n.scrollbarXLeft >= n.railXWidth - n.scrollbarXWidth && (n.scrollbarXLeft = n.railXWidth - n.scrollbarXWidth), n.scrollbarYTop >= n.railYHeight - n.scrollbarYHeight && (n.scrollbarYTop = n.railYHeight - n.scrollbarYHeight),
                    function(e, t) {
                        var n = {
                            width: t.railXWidth
                        };
                        t.isRtl ? n.left = t.negativeScrollAdjustment + e.scrollLeft + t.containerWidth - t.contentWidth : n.left = e.scrollLeft, t.isScrollbarXUsingBottom ? n.bottom = t.scrollbarXBottom - e.scrollTop : n.top = t.scrollbarXTop + e.scrollTop, i.css(t.scrollbarXRail, n);
                        var a = {
                            top: e.scrollTop,
                            height: t.railYHeight
                        };
                        t.isScrollbarYUsingRight ? t.isRtl ? a.right = t.contentWidth - (t.negativeScrollAdjustment + e.scrollLeft) - t.scrollbarYRight - t.scrollbarYOuterWidth : a.right = t.scrollbarYRight - e.scrollLeft : t.isRtl ? a.left = t.negativeScrollAdjustment + e.scrollLeft + 2 * t.containerWidth - t.contentWidth - t.scrollbarYLeft - t.scrollbarYOuterWidth : a.left = t.scrollbarYLeft + e.scrollLeft, i.css(t.scrollbarYRail, a), i.css(t.scrollbarX, {
                            left: t.scrollbarXLeft,
                            width: t.scrollbarXWidth - t.railBorderXWidth
                        }), i.css(t.scrollbarY, {
                            top: t.scrollbarYTop,
                            height: t.scrollbarYHeight - t.railBorderYWidth
                        })
                    }(e, n), n.scrollbarXActive ? s.add(e, "ps-active-x") : (s.remove(e, "ps-active-x"), n.scrollbarXWidth = 0, n.scrollbarXLeft = 0, r(e, "left", 0)), n.scrollbarYActive ? s.add(e, "ps-active-y") : (s.remove(e, "ps-active-y"), n.scrollbarYHeight = 0, n.scrollbarYTop = 0, r(e, "top", 0))
            }
        }, (e, t, n) => {
            "use strict";
            var a, s, i = n(160),
                o = function(e) {
                    var t = document.createEvent("Event");
                    return t.initEvent(e, !0, !0), t
                };
            e.exports = function(e, t, n) {
                if (void 0 === e) throw "You must provide an element to the update-scroll function";
                if (void 0 === t) throw "You must provide an axis to the update-scroll function";
                if (void 0 === n) throw "You must provide a value to the update-scroll function";
                "top" === t && n <= 0 && (e.scrollTop = n = 0, e.dispatchEvent(o("ps-y-reach-start"))), "left" === t && n <= 0 && (e.scrollLeft = n = 0, e.dispatchEvent(o("ps-x-reach-start")));
                var r = i.get(e);
                "top" === t && n >= r.contentHeight - r.containerHeight && ((n = r.contentHeight - r.containerHeight) - e.scrollTop <= 1 ? n = e.scrollTop : e.scrollTop = n, e.dispatchEvent(o("ps-y-reach-end"))), "left" === t && n >= r.contentWidth - r.containerWidth && ((n = r.contentWidth - r.containerWidth) - e.scrollLeft <= 1 ? n = e.scrollLeft : e.scrollLeft = n, e.dispatchEvent(o("ps-x-reach-end"))), a || (a = e.scrollTop), s || (s = e.scrollLeft), "top" === t && n < a && e.dispatchEvent(o("ps-scroll-up")), "top" === t && n > a && e.dispatchEvent(o("ps-scroll-down")), "left" === t && n < s && e.dispatchEvent(o("ps-scroll-left")), "left" === t && n > s && e.dispatchEvent(o("ps-scroll-right")), "top" === t && (e.scrollTop = a = n, e.dispatchEvent(o("ps-scroll-y"))), "left" === t && (e.scrollLeft = s = n, e.dispatchEvent(o("ps-scroll-x")))
            }
        }, (e, t, n) => {
            "use strict";
            var a = n(160),
                s = n(165),
                i = n(166);
            e.exports = function(e) {
                ! function(e, t) {
                    function n(e) {
                        return e.getBoundingClientRect()
                    }
                    var a = function(e) {
                        e.stopPropagation()
                    };
                    t.event.bind(t.scrollbarY, "click", a), t.event.bind(t.scrollbarYRail, "click", (function(a) {
                        var o = a.pageY - window.pageYOffset - n(t.scrollbarYRail).top > t.scrollbarYTop ? 1 : -1;
                        i(e, "top", e.scrollTop + o * t.containerHeight), s(e), a.stopPropagation()
                    })), t.event.bind(t.scrollbarX, "click", a), t.event.bind(t.scrollbarXRail, "click", (function(a) {
                        var o = a.pageX - window.pageXOffset - n(t.scrollbarXRail).left > t.scrollbarXLeft ? 1 : -1;
                        i(e, "left", e.scrollLeft + o * t.containerWidth), s(e), a.stopPropagation()
                    }))
                }(e, a.get(e))
            }
        }, (e, t, n) => {
            "use strict";
            var a = n(157),
                s = n(159),
                i = n(160),
                o = n(165),
                r = n(166);

            function l(e, t) {
                var n = null,
                    i = null;
                var l = function(s) {
                        ! function(s) {
                            var i = n + s * t.railXRatio,
                                o = Math.max(0, t.scrollbarXRail.getBoundingClientRect().left) + t.railXRatio * (t.railXWidth - t.scrollbarXWidth);
                            t.scrollbarXLeft = i < 0 ? 0 : i > o ? o : i;
                            var l = a.toInt(t.scrollbarXLeft * (t.contentWidth - t.containerWidth) / (t.containerWidth - t.railXRatio * t.scrollbarXWidth)) - t.negativeScrollAdjustment;
                            r(e, "left", l)
                        }(s.pageX - i), o(e), s.stopPropagation(), s.preventDefault()
                    },
                    c = function() {
                        a.stopScrolling(e, "x"), t.event.unbind(t.ownerDocument, "mousemove", l)
                    };
                t.event.bind(t.scrollbarX, "mousedown", (function(o) {
                    i = o.pageX, n = a.toInt(s.css(t.scrollbarX, "left")) * t.railXRatio, a.startScrolling(e, "x"), t.event.bind(t.ownerDocument, "mousemove", l), t.event.once(t.ownerDocument, "mouseup", c), o.stopPropagation(), o.preventDefault()
                }))
            }

            function c(e, t) {
                var n = null,
                    i = null;
                var l = function(s) {
                        ! function(s) {
                            var i = n + s * t.railYRatio,
                                o = Math.max(0, t.scrollbarYRail.getBoundingClientRect().top) + t.railYRatio * (t.railYHeight - t.scrollbarYHeight);
                            t.scrollbarYTop = i < 0 ? 0 : i > o ? o : i;
                            var l = a.toInt(t.scrollbarYTop * (t.contentHeight - t.containerHeight) / (t.containerHeight - t.railYRatio * t.scrollbarYHeight));
                            r(e, "top", l)
                        }(s.pageY - i), o(e), s.stopPropagation(), s.preventDefault()
                    },
                    c = function() {
                        a.stopScrolling(e, "y"), t.event.unbind(t.ownerDocument, "mousemove", l)
                    };
                t.event.bind(t.scrollbarY, "mousedown", (function(o) {
                    i = o.pageY, n = a.toInt(s.css(t.scrollbarY, "top")) * t.railYRatio, a.startScrolling(e, "y"), t.event.bind(t.ownerDocument, "mousemove", l), t.event.once(t.ownerDocument, "mouseup", c), o.stopPropagation(), o.preventDefault()
                }))
            }
            e.exports = function(e) {
                var t = i.get(e);
                l(e, t), c(e, t)
            }
        }, (e, t, n) => {
            "use strict";
            var a = n(157),
                s = n(159),
                i = n(160),
                o = n(165),
                r = n(166);

            function l(e, t) {
                var n = !1;
                t.event.bind(e, "mouseenter", (function() {
                    n = !0
                })), t.event.bind(e, "mouseleave", (function() {
                    n = !1
                }));
                var i = !1;
                t.event.bind(t.ownerDocument, "keydown", (function(l) {
                    if (!(l.isDefaultPrevented && l.isDefaultPrevented() || l.defaultPrevented)) {
                        var c = s.matches(t.scrollbarX, ":focus") || s.matches(t.scrollbarY, ":focus");
                        if (n || c) {
                            var d = document.activeElement ? document.activeElement : t.ownerDocument.activeElement;
                            if (d) {
                                if ("IFRAME" === d.tagName) d = d.contentDocument.activeElement;
                                else
                                    for (; d.shadowRoot && d.shadowRoot.activeElement;) d = d.shadowRoot.activeElement;
                                if (a.isEditable(d)) return
                            }
                            var m = 0,
                                u = 0;
                            switch (l.which) {
                                case 37:
                                    m = l.metaKey ? -t.contentWidth : l.altKey ? -t.containerWidth : -30;
                                    break;
                                case 38:
                                    u = l.metaKey ? t.contentHeight : l.altKey ? t.containerHeight : 30;
                                    break;
                                case 39:
                                    m = l.metaKey ? t.contentWidth : l.altKey ? t.containerWidth : 30;
                                    break;
                                case 40:
                                    u = l.metaKey ? -t.contentHeight : l.altKey ? -t.containerHeight : -30;
                                    break;
                                case 33:
                                    u = 90;
                                    break;
                                case 32:
                                    u = l.shiftKey ? 90 : -90;
                                    break;
                                case 34:
                                    u = -90;
                                    break;
                                case 35:
                                    u = l.ctrlKey ? -t.contentHeight : -t.containerHeight;
                                    break;
                                case 36:
                                    u = l.ctrlKey ? e.scrollTop : t.containerHeight;
                                    break;
                                default:
                                    return
                            }
                            r(e, "top", e.scrollTop - u), r(e, "left", e.scrollLeft + m), o(e), i = function(n, a) {
                                var s = e.scrollTop;
                                if (0 === n) {
                                    if (!t.scrollbarYActive) return !1;
                                    if (0 === s && a > 0 || s >= t.contentHeight - t.containerHeight && a < 0) return !t.settings.wheelPropagation
                                }
                                var i = e.scrollLeft;
                                if (0 === a) {
                                    if (!t.scrollbarXActive) return !1;
                                    if (0 === i && n < 0 || i >= t.contentWidth - t.containerWidth && n > 0) return !t.settings.wheelPropagation
                                }
                                return !0
                            }(m, u), i && l.preventDefault()
                        }
                    }
                }))
            }
            e.exports = function(e) {
                l(e, i.get(e))
            }
        }, (e, t, n) => {
            "use strict";
            var a = n(160),
                s = n(165),
                i = n(166);

            function o(e, t) {
                var n = !1;

                function a(a) {
                    var o = function(e) {
                            var t = e.deltaX,
                                n = -1 * e.deltaY;
                            return void 0 !== t && void 0 !== n || (t = -1 * e.wheelDeltaX / 6, n = e.wheelDeltaY / 6), e.deltaMode && 1 === e.deltaMode && (t *= 10, n *= 10), t != t && n != n && (t = 0, n = e.wheelDelta), e.shiftKey ? [-n, -t] : [t, n]
                        }(a),
                        r = o[0],
                        l = o[1];
                    (function(t, n) {
                        var a = e.querySelector("textarea:hover, select[multiple]:hover, .ps-child:hover");
                        if (a) {
                            if (!window.getComputedStyle(a).overflow.match(/(scroll|auto)/)) return !1;
                            var s = a.scrollHeight - a.clientHeight;
                            if (s > 0 && !(0 === a.scrollTop && n > 0 || a.scrollTop === s && n < 0)) return !0;
                            var i = a.scrollLeft - a.clientWidth;
                            if (i > 0 && !(0 === a.scrollLeft && t < 0 || a.scrollLeft === i && t > 0)) return !0
                        }
                        return !1
                    })(r, l) || (n = !1, t.settings.useBothWheelAxes ? t.scrollbarYActive && !t.scrollbarXActive ? (i(e, "top", l ? e.scrollTop - l * t.settings.wheelSpeed : e.scrollTop + r * t.settings.wheelSpeed), n = !0) : t.scrollbarXActive && !t.scrollbarYActive && (i(e, "left", r ? e.scrollLeft + r * t.settings.wheelSpeed : e.scrollLeft - l * t.settings.wheelSpeed), n = !0) : (i(e, "top", e.scrollTop - l * t.settings.wheelSpeed), i(e, "left", e.scrollLeft + r * t.settings.wheelSpeed)), s(e), n = n || function(n, a) {
                        var s = e.scrollTop;
                        if (0 === n) {
                            if (!t.scrollbarYActive) return !1;
                            if (0 === s && a > 0 || s >= t.contentHeight - t.containerHeight && a < 0) return !t.settings.wheelPropagation
                        }
                        var i = e.scrollLeft;
                        if (0 === a) {
                            if (!t.scrollbarXActive) return !1;
                            if (0 === i && n < 0 || i >= t.contentWidth - t.containerWidth && n > 0) return !t.settings.wheelPropagation
                        }
                        return !0
                    }(r, l), n && (a.stopPropagation(), a.preventDefault()))
                }
                void 0 !== window.onwheel ? t.event.bind(e, "wheel", a) : void 0 !== window.onmousewheel && t.event.bind(e, "mousewheel", a)
            }
            e.exports = function(e) {
                o(e, a.get(e))
            }
        }, (e, t, n) => {
            "use strict";
            var a = n(157),
                s = n(160),
                i = n(165),
                o = n(166);

            function r(e, t, n, a) {
                function r(t, n) {
                    o(e, "top", e.scrollTop - n), o(e, "left", e.scrollLeft - t), i(e)
                }
                var l = {},
                    c = 0,
                    d = {},
                    m = null,
                    u = !1,
                    p = !1;

                function h() {
                    u = !0
                }

                function g() {
                    u = !1
                }

                function f(e) {
                    return e.targetTouches ? e.targetTouches[0] : e
                }

                function _(e) {
                    return !(!e.targetTouches || 1 !== e.targetTouches.length) || !(!e.pointerType || "mouse" === e.pointerType || e.pointerType === e.MSPOINTER_TYPE_MOUSE)
                }

                function b(e) {
                    if (_(e)) {
                        p = !0;
                        var t = f(e);
                        l.pageX = t.pageX, l.pageY = t.pageY, c = (new Date).getTime(), null !== m && clearInterval(m), e.stopPropagation()
                    }
                }

                function x(n) {
                    if (!p && t.settings.swipePropagation && b(n), !u && p && _(n)) {
                        var a = f(n),
                            s = {
                                pageX: a.pageX,
                                pageY: a.pageY
                            },
                            i = s.pageX - l.pageX,
                            o = s.pageY - l.pageY;
                        r(i, o), l = s;
                        var m = (new Date).getTime(),
                            h = m - c;
                        h > 0 && (d.x = i / h, d.y = o / h, c = m),
                            function(n, a) {
                                var s = e.scrollTop,
                                    i = e.scrollLeft,
                                    o = Math.abs(n),
                                    r = Math.abs(a);
                                if (r > o) {
                                    if (a < 0 && s === t.contentHeight - t.containerHeight || a > 0 && 0 === s) return !t.settings.swipePropagation
                                } else if (o > r && (n < 0 && i === t.contentWidth - t.containerWidth || n > 0 && 0 === i)) return !t.settings.swipePropagation;
                                return !0
                            }(i, o) && (n.stopPropagation(), n.preventDefault())
                    }
                }

                function y() {
                    !u && p && (p = !1, clearInterval(m), m = setInterval((function() {
                        s.get(e) && (d.x || d.y) ? Math.abs(d.x) < .01 && Math.abs(d.y) < .01 ? clearInterval(m) : (r(30 * d.x, 30 * d.y), d.x *= .8, d.y *= .8) : clearInterval(m)
                    }), 10))
                }
                n ? (t.event.bind(window, "touchstart", h), t.event.bind(window, "touchend", g), t.event.bind(e, "touchstart", b), t.event.bind(e, "touchmove", x), t.event.bind(e, "touchend", y)) : a && (window.PointerEvent ? (t.event.bind(window, "pointerdown", h), t.event.bind(window, "pointerup", g), t.event.bind(e, "pointerdown", b), t.event.bind(e, "pointermove", x), t.event.bind(e, "pointerup", y)) : window.MSPointerEvent && (t.event.bind(window, "MSPointerDown", h), t.event.bind(window, "MSPointerUp", g), t.event.bind(e, "MSPointerDown", b), t.event.bind(e, "MSPointerMove", x), t.event.bind(e, "MSPointerUp", y)))
            }
            e.exports = function(e) {
                (a.env.supportsTouch || a.env.supportsIePointer) && r(e, s.get(e), a.env.supportsTouch, a.env.supportsIePointer)
            }
        }, (e, t, n) => {
            "use strict";
            var a = n(157),
                s = n(160),
                i = n(165),
                o = n(166);

            function r(e, t) {
                var n = null,
                    r = {
                        top: 0,
                        left: 0
                    };

                function l() {
                    n && (clearInterval(n), n = null), a.stopScrolling(e)
                }
                var c = !1;
                t.event.bind(t.ownerDocument, "selectionchange", (function() {
                    var t;
                    e.contains(0 === (t = window.getSelection ? window.getSelection() : document.getSelection ? document.getSelection() : "").toString().length ? null : t.getRangeAt(0).commonAncestorContainer) ? c = !0 : (c = !1, l())
                })), t.event.bind(window, "mouseup", (function() {
                    c && (c = !1, l())
                })), t.event.bind(window, "keyup", (function() {
                    c && (c = !1, l())
                })), t.event.bind(window, "mousemove", (function(t) {
                    if (c) {
                        var d = {
                                x: t.pageX,
                                y: t.pageY
                            },
                            m = {
                                left: e.offsetLeft,
                                right: e.offsetLeft + e.offsetWidth,
                                top: e.offsetTop,
                                bottom: e.offsetTop + e.offsetHeight
                            };
                        d.x < m.left + 3 ? (r.left = -5, a.startScrolling(e, "x")) : d.x > m.right - 3 ? (r.left = 5, a.startScrolling(e, "x")) : r.left = 0, d.y < m.top + 3 ? (r.top = m.top + 3 - d.y < 5 ? -5 : -20, a.startScrolling(e, "y")) : d.y > m.bottom - 3 ? (r.top = d.y - m.bottom + 3 < 5 ? 5 : 20, a.startScrolling(e, "y")) : r.top = 0, 0 === r.top && 0 === r.left ? l() : n || (n = setInterval((function() {
                            s.get(e) ? (o(e, "top", e.scrollTop + r.top), o(e, "left", e.scrollLeft + r.left), i(e)) : clearInterval(n)
                        }), 50))
                    }
                }))
            }
            e.exports = function(e) {
                r(e, s.get(e))
            }
        }, (e, t, n) => {
            "use strict";
            var a = n(160),
                s = n(165);
            e.exports = function(e) {
                ! function(e, t) {
                    t.event.bind(e, "scroll", (function() {
                        s(e)
                    }))
                }(e, a.get(e))
            }
        }, (e, t, n) => {
            "use strict";
            var a = n(157),
                s = n(159),
                i = n(160),
                o = n(165),
                r = n(166);
            e.exports = function(e) {
                var t = i.get(e);
                t && (t.negativeScrollAdjustment = t.isNegativeScroll ? e.scrollWidth - e.clientWidth : 0, s.css(t.scrollbarXRail, "display", "block"), s.css(t.scrollbarYRail, "display", "block"), t.railXMarginWidth = a.toInt(s.css(t.scrollbarXRail, "marginLeft")) + a.toInt(s.css(t.scrollbarXRail, "marginRight")), t.railYMarginHeight = a.toInt(s.css(t.scrollbarYRail, "marginTop")) + a.toInt(s.css(t.scrollbarYRail, "marginBottom")), s.css(t.scrollbarXRail, "display", "none"), s.css(t.scrollbarYRail, "display", "none"), o(e), r(e, "top", e.scrollTop), r(e, "left", e.scrollLeft), s.css(t.scrollbarXRail, "display", ""), s.css(t.scrollbarYRail, "display", ""))
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<svg class="bracket-line" viewBox="' + c(typeof(i = null != (i = n.viewbox || (null != t ? t.viewbox : t)) ? i : r) === l ? i.call(o, {
                        name: "viewbox",
                        hash: {},
                        data: s
                    }) : i) + '" preserveAspectRatio="none" shape-rendering="crispEdges">\r\n  <path stroke="#fff" fill="transparent" vector-effect="non-scaling-stroke" d="' + c(typeof(i = null != (i = n.d || (null != t ? t.d : t)) ? i : r) === l ? i.call(o, {
                        name: "d",
                        hash: {},
                        data: s
                    }) : i) + '"></path>\r\n</svg>\r\n'
                },
                useData: !0
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<svg class="bracket-line" viewBox="' + c(typeof(i = null != (i = n.viewbox || (null != t ? t.viewbox : t)) ? i : r) === l ? i.call(o, {
                        name: "viewbox",
                        hash: {},
                        data: s
                    }) : i) + '" preserveAspectRatio="none" shape-rendering="crispEdges">\r\n  <path stroke="#fff" fill="transparent" vector-effect="non-scaling-stroke" stroke-dasharray="4,6"\r\n        stroke-dashoffset="6" d="' + c(typeof(i = null != (i = n.d || (null != t ? t.d : t)) ? i : r) === l ? i.call(o, {
                        name: "d",
                        hash: {},
                        data: s
                    }) : i) + '"></path>\r\n</svg>\r\n'
                },
                useData: !0
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<svg class="bracket-line connector" viewBox="' + c(typeof(i = null != (i = n.viewbox || (null != t ? t.viewbox : t)) ? i : r) === l ? i.call(o, {
                        name: "viewbox",
                        hash: {},
                        data: s
                    }) : i) + '" preserveAspectRatio="none" shape-rendering="crispEdges">\r\n  <path stroke="#fff" stroke-width="2" fill="transparent" vector-effect="non-scaling-stroke" d="' + c(typeof(i = null != (i = n.d || (null != t ? t.d : t)) ? i : r) === l ? i.call(o, {
                        name: "d",
                        hash: {},
                        data: s
                    }) : i) + '"></path>\r\n</svg>\r\n'
                },
                useData: !0
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<svg class="bracket-line connector" viewBox="' + c(typeof(i = null != (i = n.viewbox || (null != t ? t.viewbox : t)) ? i : r) === l ? i.call(o, {
                        name: "viewbox",
                        hash: {},
                        data: s
                    }) : i) + '" preserveAspectRatio="none" shape-rendering="crispEdges">\r\n  <path stroke="#fff" stroke-width="2" fill="transparent" vector-effect="non-scaling-stroke" stroke-dasharray="4,6"\r\n  stroke-dashoffset="6" d="' + c(typeof(i = null != (i = n.d || (null != t ? t.d : t)) ? i : r) === l ? i.call(o, {
                        name: "d",
                        hash: {},
                        data: s
                    }) : i) + '"></path>\r\n</svg>\r\n'
                },
                useData: !0
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i;
                    return '<div id="match-timer-gameid-' + e.escapeExpression("function" == typeof(i = null != (i = n.gameId || (null != t ? t.gameId : t)) ? i : n.helperMissing) ? i.call(null != t ? t : e.nullContext || {}, {
                        name: "gameId",
                        hash: {},
                        data: s
                    }) : i) + '" class="clash-game-timer"></div>'
                },
                useData: !0
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "t50nAFce",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\bracket-components\\\\bracket-layout\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\bracket-components\\\\bracket-layout\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\bracket-components\\\\bracket-layout\\\\index.js\\" "],["text","\\n"],["append",["unknown",["bracketObserver"]],false],["text","\\n"],["append",["unknown",["isLosersBracketObserver"]],false],["text","\\n"],["append",["unknown",["targetRoundObserver"]],false],["text","\\n\\n"],["open-element","span",[]],["dynamic-attr","debug-bracket-id",["concat",[["unknown",["currentBracket","id"]]]]],["flush-element"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","bracket-layout-overflow-wrapper"],["flush-element"],["text","\\n"],["text","\\n"],["text","  "],["open-element","div",[]],["static-attr","class","visible-area winners"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","fade-top-bot-wrapper"],["flush-element"],["text","\\n"],["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",["bracket-content winners ",["helper",["if"],[["get",["isEog"]],"start-hidden"],null]]]],["dynamic-attr","style",["unknown",["winnersBracketContentStyle"]],null],["flush-element"],["text","\\n"],["text","        "],["open-element","div",[]],["static-attr","class","timers-wrapper winners"],["flush-element"],["text","\\n        "],["close-element"],["text","\\n"],["text","        "],["open-element","div",[]],["static-attr","class","lines-wrapper winners"],["flush-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","matches-wrapper"],["flush-element"],["text","\\n"],["block",["each"],[["get",["winnersContainerMatches"]]],[["key"],["id"]],5],["text","        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["static-attr","class","visible-area losers"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","fade-top-bot-wrapper"],["flush-element"],["text","\\n"],["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",["bracket-content losers ",["helper",["if"],[["get",["isEog"]],"start-hidden"],null]]]],["dynamic-attr","style",["unknown",["losersBracketContentStyle"]],null],["flush-element"],["text","\\n"],["text","        "],["open-element","div",[]],["static-attr","class","timers-wrapper losers"],["flush-element"],["text","\\n        "],["close-element"],["text","\\n"],["text","        "],["open-element","div",[]],["static-attr","class","lines-wrapper losers"],["flush-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","matches-wrapper"],["flush-element"],["text","\\n"],["block",["each"],[["get",["losersContainerMatches"]]],[["key"],["id"]],4],["text","        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n\\n"],["block",["if"],[["get",["isInteractive"]]],null,3,0],["text","\\n"],["close-element"],["text"," "],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","clash-bracket-win-mark-video-container"],["flush-element"],["text","\\n  "],["open-element","lol-uikit-video",[]],["static-attr","class","clash-bracket-win-mark-video win"],["static-attr","fade-in","0"],["static-attr","fade-out","0"],["static-attr","src","/fe/lol-clash/assets/animations/videos/brackets/checkMark_large_blue.webm"],["static-attr","preload",""],["flush-element"],["close-element"],["text","\\n  "],["open-element","lol-uikit-video",[]],["static-attr","class","clash-bracket-win-mark-video loss"],["static-attr","fade-in","0"],["static-attr","fade-out","0"],["static-attr","src","/fe/lol-clash/assets/animations/videos/brackets/xMark_large.webm"],["static-attr","preload",""],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","\\n    "],["open-element","div",[]],["static-attr","class","interactivity-blocker"],["flush-element"],["close-element"],["text","\\n\\n"]],"locals":[]},{"statements":[["text","              "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n                "],["open-element","h6",[]],["static-attr","style","margin-bottom:6px"],["flush-element"],["append",["unknown",["tra","clash_overview_bracket_type_losers"]],false],["close-element"],["text","\\n                "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_bracket_layout_no_losers_matches"]],false],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],1]],"locals":[]},{"statements":[["text","\\n"],["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["bracket-button-wrapper ",["helper",["if"],[["get",["triggerAnimIsLosers"]],"losers","winners"],null]]]],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","bracket-button-vertical"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","bracket-button-horizontal"],["flush-element"],["text","\\n          "],["append",["helper",["generic-button"],null,[["baseImgPath","overImgPath","downImgPath","disabledImgPath","isEnabled","onHoverSound","onClickSound","onClick"],[["get",["bracketSwitchButtonImgUp"]],["get",["bracketSwitchButtonImgOver"]],["get",["bracketSwitchButtonImgDown"]],["get",["bracketSwitchButtonImgDisabled"]],true,"button-circlegold-hover","button-circlegold-click",["helper",["action"],[["get",[null]],"toggleBracket"],null]]]],false],["text","\\n"],["block",["unless"],[["get",["hasLosersMatches"]]],null,2],["text","        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","match losers"],["dynamic-attr","match-id",["concat",[["unknown",["match","id"]]]]],["flush-element"],["text","\\n              "],["append",["helper",["bracket-match"],null,[["match","localPlayerRosterId"],[["get",["match"]],["get",["localPlayerRosterId"]]]]],false],["text","\\n            "],["close-element"],["text","\\n"]],"locals":["match"]},{"statements":[["text","            "],["append",["helper",["bracket-match"],null,[["match","localPlayerRosterId"],[["get",["match"]],["get",["localPlayerRosterId"]]]]],false],["text","\\n"]],"locals":["match"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = d(n(184)),
                i = d(n(185)),
                o = d(n(3)),
                r = d(n(96)),
                l = d(n(153));
            n(175), n(186);
            var c = n(9);

            function d(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const m = n(187),
                u = n(188),
                p = n(189),
                h = n(190),
                g = n(191),
                f = {
                    x: 1055,
                    y: 522
                },
                _ = {
                    x: 1280,
                    y: 600
                },
                b = 278,
                x = 62,
                y = 278,
                k = 140,
                v = ["winners", "losers", "losers-2"],
                E = {
                    1: v[0],
                    3: v[0],
                    5: v[1],
                    7: v[1],
                    9: v[1],
                    11: v[1],
                    13: v[2],
                    15: v[2]
                },
                S = ".bracket-content",
                T = ".visible-area.winners",
                w = S + ".winners",
                I = ".lines-wrapper.winners",
                C = S + ".losers",
                R = S + ".losers2",
                P = ".timers-wrapper.winners",
                L = ".timers-wrapper.losers",
                A = ".timers-wrapper.losers2",
                B = Object.freeze({
                    losers: {},
                    winners: {},
                    losers2: {}
                }),
                D = 220;
            let O = 0;

            function N(e) {
                const t = Math.round(e);
                return t % 2 == 1 ? t + 1 : t
            }

            function M(e) {
                return e && e.length
            }
            const G = {
                9: 120,
                11: 120,
                5: -120,
                7: -120
            };
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-bracket-layout-16"],
                classNameBindings: ["isScrollAnimating:force-visible", "isEog::is-bracket-tab"],
                layout: n(192),
                oldBracket: null,
                bracket: null,
                targetRound: -1,
                tournamentNameLocKey: "",
                localPlayerRosterId: null,
                isLosersBracket: !1,
                isInteractive: !0,
                useAnimations: !1,
                isEog: !1,
                isEogAndInThirdPlaceMatch: !1,
                totalAnimDuration: 18,
                selectedBracket: v[0],
                cachedSelectedBracket: null,
                currentBracket: null,
                roundScrollPositions: null,
                displayFlipped: !1,
                currentScrollAnimationFrame: 0,
                isAnimationPaused: !1,
                playAnimsOnInsertElement: !1,
                gameTimers: {},
                gameTimersTickerInstance: null,
                winnersContainerMatches: a.Ember.computed("currentBracket", "currentBracket.size", "currentBracket.matches.[]", (function() {
                    const e = this.get("currentBracket.size"),
                        t = [];
                    return (this.get("currentBracket.matches") || []).forEach((n => {
                        (1 === n.get("highestPossiblePosition") || 3 === n.get("highestPossiblePosition") && e > 4) && t.push(n)
                    })), t
                })),
                losersContainerMatches: a.Ember.computed("currentBracket", "currentBracket.size", "currentBracket.matches.[]", (function() {
                    const e = [],
                        t = this.get("currentBracket.matches") || [],
                        n = this.get("currentBracket.size");
                    return t.forEach((t => {
                        t.get("highestPossiblePosition") !== n / 2 + 1 && t.get("highestPossiblePosition") !== n / 2 + 3 || e.push(t)
                    })), e
                })),
                r2losersContainerMatches: a.Ember.computed("currentBracket", "currentBracket.size", "currentBracket.matches.[]", (function() {
                    const e = [];
                    return (this.get("currentBracket.matches") || []).forEach((t => {
                        5 !== t.get("highestPossiblePosition") && 7 !== t.get("highestPossiblePosition") || e.push(t)
                    })), e
                })),
                doubleLosersContainerMatches: a.Ember.computed("currentBracket", "currentBracket.size", "currentBracket.matches.[]", (function() {
                    const e = [];
                    return (this.get("currentBracket.matches") || []).forEach((t => {
                        13 !== t.get("highestPossiblePosition") && 15 !== t.get("highestPossiblePosition") || e.push(t)
                    })), e
                })),
                isUpButtonHidden: a.Ember.computed("selectedBracket", (function() {
                    return this.get("selectedBracket") === v[0]
                })),
                isDownButtonHidden: a.Ember.computed("selectedBracket", (function() {
                    return this.get("selectedBracket") === v[2]
                })),
                init() {
                    this._super(...arguments), this.set("roundScrollPositions", a._.cloneDeep(B))
                },
                didInsertElement() {
                    this._super(...arguments), (0, l.default)(a.Ember.$), this._initScrollbar(1), this._initScrollbar(5), this._initScrollbar(13), this._domUpdate(!0), this.get("playAnimsOnInsertElement") && this._tryPlayAnimation()
                },
                _initScrollbar(e) {
                    const t = this._getVisibleArea(e);
                    M(t) && (t.perfectScrollbar({
                        suppressScrollY: !0,
                        useBothWheelAxes: !0,
                        maxScrollbarLength: 230,
                        handlers: ["click-rail", "drag-scrollbar", "wheel"]
                    }), t.on("ps-scroll-x", this._onScroll.bind(this, e)), this.$(".ps__scrollbar-x").attr("tabindex", -1), this.$(".ps__scrollbar-y").attr("tabindex", -1))
                },
                _updateTimers(e, t) {
                    if (!e || !e.length) return;
                    const n = this.get("gameTimers");
                    e.forEach((e => {
                        const a = e.get("id");
                        e.get("status") === c.MatchStatus.STARTED && e.get("gameStartTime") > 0 ? this._addTimer(n, e, t) : this._stopTimer(n, a)
                    })), this._updateGameTimerTicker(n)
                },
                _addTimer(e, t, n) {
                    if (!t || !t.get("id")) return;
                    const s = t.get("id");
                    if (e[s]) return;
                    a.logger.trace("bracket-match-timers: adding timer for match " + s);
                    const i = t.get("highestPossiblePosition") > n / 2,
                        o = this._getTimersWrapper(i).find(`#match-timer-gameid-${s}`);
                    if (!o) return void a.logger.error("bracket-match-timers: could not find dom element for timer " + s);
                    const r = Math.floor((Date.now() - Number(t.get("gameStartTime") || 0)) / 1e3);
                    e[s] = {
                        domNode: o,
                        time: r
                    }, o.show()
                },
                _stopTimer(e, t) {
                    e[t] && (a.logger.trace("bracket-match-timers: stopping timer for " + t), e[t].domNode.hide(), delete e[t])
                },
                _startGameTimerTicker(e) {
                    a.logger.trace("bracket-match-timers: starting match timers");
                    const t = e => {
                        Object.keys(e).forEach((t => {
                            const n = e[t];
                            n.time++, n.domNode.text((e => {
                                if (e > 7200) return "";
                                const t = Math.floor(e / 3600);
                                e %= 3600;
                                const n = String(Math.floor(e / 60)).padStart(2, "0"),
                                    a = String(e % 60).padStart(2, "0");
                                return t > 0 ? `${t}:${n}:${a}` : `${n}:${a}`
                            })(n.time))
                        }))
                    };
                    this.set("gameTimersTickerInstance", setInterval((() => t(e)), 1e3))
                },
                _stopGameTimerTicker() {
                    a.logger.trace("bracket-match-timers: stopping match timers");
                    const e = this.get("gameTimersTickerInstance");
                    clearInterval(e), this.set("gameTimersTickerInstance", null);
                    const t = this.get("gameTimers");
                    Object.keys(t).forEach((e => {
                        delete t[e]
                    })), this.set("gameTimers", {})
                },
                _updateGameTimerTicker(e) {
                    const t = this.get("gameTimersTickerInstance");
                    Object.keys(e).length > 0 && !t ? this._startGameTimerTicker(e) : !Object.keys(e).length && t && this._stopGameTimerTicker()
                },
                onWillDestroyElement: a.Ember.on("willDestroyElement", (function() {
                    const e = this._getVisibleArea(5);
                    M(e) && e.scrollLeft(500), this._bracketAnimation && (a.logger.trace("bracket-layout destroyed, calling bracket anim cleanup..."), this._bracketAnimation.cleanup(), this._bracketAnimation = null), this._stopGameTimerTicker()
                })),
                selectedBracketObserver: a.Ember.on("didInsertElement", a.Ember.computed("selectedBracket", (function() {
                    if (this.get("isEog")) return;
                    const e = this.get("selectedBracket"),
                        t = this.get("cachedSelectedBracket") || this.get("selectedBracket");
                    this._showBracket(e, t, {
                        useAnimation: !0,
                        useHorizontalScroll: !0
                    }), this.set("cachedSelectedBracket", e)
                }))),
                targetRoundObserver: a.Ember.computed("targetRound", (function() {
                    if (this.get("isEog")) return;
                    const e = this.get("targetRound");
                    this._centerOnRound(e)
                })),
                isNotEog: a.Ember.computed.not("isEog"),
                isScrollAnimating: a.Ember.computed.and("currentScrollAnimationFrame", "isNotEog"),
                hasLosersMatches: a.Ember.computed("bracket.version", (function() {
                    return (this.get("bracket.matches") || []).find((e => e.hasValidRoster() && 1 !== e.highestPossiblePosition))
                })),
                bracketObserver: a.Ember.computed("bracket.version", "localPlayerRosterId", "bracket.matches.@each.forfeitRosterId", (function() {
                    const e = this.get("bracket"),
                        t = this.get("localPlayerRosterId");
                    if (e && t) {
                        if (!this.get("currentBracket")) {
                            const t = this.get("oldBracket");
                            if (t) {
                                a.logger.trace("bracket-layout -- initialized with oldBracket, will play any anims from oldBracket->bracket immediately");
                                const e = this.get("localPlayerRosterId"),
                                    n = this.get("bracket"),
                                    s = t.findCurrentMatch(e),
                                    i = n.findCurrentMatch(e),
                                    o = this.get("isEog");
                                return this.set("isFirstRoundLoss", o && r.default.isFirstRoundLoss(s, i)), this.set("isSecondRoundDoubleLoss", o && r.default.isSecondRoundDoubleLoss(s, i)), this._updateBracketData(t), this.set("oldBracket", null), void this._tryPlayAnimation()
                            }
                            return a.logger.trace("bracket-layout -- updating currentBracket with initial data"), void this._updateBracketData(e)
                        }
                        this._tryPlayAnimation()
                    }
                })),
                _domUpdate(e) {
                    const t = this.get("currentBracket");
                    if (!t) return void a.logger.trace("bracket-layout -- _domUpdate -- no currentBracket");
                    a.logger.trace("bracket-layout -- _domUpdate -- ok -- initial", e);
                    const n = this.get("isEog");
                    if (e && !n) {
                        const e = this.get("localPlayerRosterId"),
                            n = t.findCurrentMatch(e) || t.findLastCompletedMatch(e);
                        n && this.set("selectedBracket", E[n.get("highestPossiblePosition")])
                    }
                    const s = this.get("selectedBracket"),
                        i = this.get("currentBracket.matches"),
                        o = this.get("currentBracket.size");
                    n || this._showBracket(s, null, {
                        useAnimation: !1,
                        useHorizontalScroll: !e
                    }), this._updateScrollbars(), this._getLinesWrapper(1).empty(), this._getLinesWrapper(5).empty(), this._getLinesWrapper(13).empty(), this._updateBracketLines(i, 1), this._updateBracketLines(i, o / 2 + 1), this._updateBracketLines(i, 5), this._updateBracketLines(i, 13), n || this._updateBracketButton(), this._updateBracketConnectorLines(i, o, 16, 1, !0), this._updateBracketConnectorLines(i, o, 8, 1, !0), this._updateBracketConnectorLines(i, o, 16, 9, !0), this._updateBracketConnectorLines(i, o, 16, 9, !1), this._updateBracketConnectorLines(i, o, 8, 5, !1), this._updateBracketConnectorLines(i, o, 16, 13, !1), this._updateMatchThirdPlaceLines(i, 1), this._updateMatchThirdPlaceLines(i, 5), this._updateMatchThirdPlaceLines(i, 9), this._updateMatchThirdPlaceLines(i, 13), this._centerOnRound(this.get("targetRound"), !1, e)
                },
                _updateBracketData(e, t = !1) {
                    if (a.logger.trace("bracket-layout -- _updateBracketData"), !e) return;
                    const n = e.cloneBracketData();
                    let s = n.get("matches");
                    if (!s) return;
                    const i = n.get("size") || 0;
                    if (this.get("isEog") && !t && s.length > 0) {
                        const e = this.get("localPlayerRosterId"),
                            t = s.find((e => 1 === e.highestPossiblePosition && 2 === e.lowestPossiblePosition));
                        t && t.hasRosterId(e) && (a.logger.trace("bracket-layout -- isEog and local roster is in finals, deleting other matches..."), s = [t], n.set("matches", s), this.set("isEogFinals", !0));
                        const o = s.find((e => 3 === e.highestPossiblePosition && 4 === e.lowestPossiblePosition && i > 4));
                        o && o.hasRosterId(e) && this.set("isEogAndInThirdPlaceMatch", !0)
                    }
                    this.set("currentBracket", n);
                    for (let e = 1; e < i; e += 2) this._calculateLayout(s, i, e);
                    this.get("roundScrollPositions");
                    this._domUpdate()
                },
                _calculateLayout(e, t, n) {
                    const s = [];
                    if (e.forEach((e => {
                            e.highestPossiblePosition === n && s.push(e)
                        })), !s) return;
                    const o = s.length + 1;
                    let r = !1;
                    for (let t = 0; t < e.length; ++t) {
                        const n = e[t],
                            a = this.get("localPlayerRosterId"),
                            s = n.hasRosterId(a);
                        n.hasLocalRoster = s;
                        if (!(1 === n.highestPossiblePosition && 16 === n.lowestPossiblePosition) || n.lowestPossiblePosition - n.highestPossiblePosition == 1) continue;
                        const i = n.order >= Math.ceil((n.lowestPossiblePosition - n.highestPossiblePosition + 1) / 4);
                        !r && i && s && (r = !0)
                    }
                    r ? a.logger.trace("player is on right, bracket display will be flipped") : a.logger.trace("player is already on left side of bracket, will not flip");
                    const l = i.default.get(o, r);
                    if (!l) return void a.logger.error("error updating bracket layout: unknown match layout type: ", o);
                    const c = this.get("isEog"),
                        d = this.get("isEogAndInThirdPlaceMatch"),
                        m = E[n] === v[1],
                        u = E[n] === v[2],
                        p = {
                            x: Number.MAX_SAFE_INTEGER,
                            y: Number.MAX_SAFE_INTEGER
                        },
                        h = {
                            x: -Number.MAX_SAFE_INTEGER,
                            y: -Number.MAX_SAFE_INTEGER
                        },
                        g = G[n] || 0;
                    if (s.forEach((n => {
                            const a = n.lowestPossiblePosition - n.highestPossiblePosition == 1 && 1 === n.highestPossiblePosition;
                            if (n.lowestPossiblePosition - n.highestPossiblePosition != 1) {
                                n.nextMatch = s.find((e => e.round === n.round + 1 && e.highestPossiblePosition === n.highestPossiblePosition && e.order === Math.floor(n.order / 2)));
                                const t = (n.lowestPossiblePosition - n.highestPossiblePosition + 1) / 2 + n.highestPossiblePosition;
                                n.nextLosersMatch = e.find((e => e.round === n.round + 1 && t === e.highestPossiblePosition && n.lowestPossiblePosition === e.lowestPossiblePosition && e.order === Math.floor(n.order / 2)))
                            }
                            n.set("isFinals", a), n.set("isEog", c);
                            const i = Math.min(Math.pow(2, Math.log2(t) - n.round) + n.order - 1, l.length - 1),
                                o = l[i];
                            if (n.css = {
                                    position: "absolute",
                                    left: 0,
                                    top: 0,
                                    width: !a || c && !d ? b : y,
                                    height: !a || c && !d ? x : k
                                }, n.nextMatch) {
                                const e = {
                                        x: n.nextMatch.css.left + .5 * n.nextMatch.css.width,
                                        y: n.nextMatch.css.top + .5 * n.nextMatch.css.height
                                    },
                                    t = {
                                        x: o.usePixelOffsetX ? o.x : o.x * n.nextMatch.css.width,
                                        y: o.usePixelOffsetY ? o.y : o.y * n.nextMatch.css.height
                                    };
                                n.css.left = e.x + t.x - .5 * n.css.width, n.css.top = e.y + t.y - .5 * n.css.height
                            } else n.css.left = o.x, n.css.top = o.y;
                            p.x = Math.min(p.x, n.css.left), p.y = Math.min(p.y, n.css.top), h.x = Math.max(h.x, n.css.left + n.css.width), h.y = Math.max(h.y, n.css.top + n.css.height)
                        })), a.logger.trace("bracket-layout -- highestPossiblePosition", n), a.logger.trace("bracket-layout -- size after matches - x/y", {
                            x: h.x - p.x,
                            y: h.y - p.y
                        }), 1 === n || 5 === n || 9 === n || 13 === n) {
                        {
                            const e = h.y - p.y,
                                t = this.get("isEog") ? 0 : 74,
                                a = .5 * (this._getVisibleSize().y - t - e);
                            let s = .5 * this._getVisibleSize().x - .5 * b;
                            this.get("isFirstRoundLoss") && (m ? s += D : s -= D);
                            this.get("isSecondRoundDoubleLoss") && (u ? s += D : m && (s -= D)), 5 === n && (s += b + 170), p.x -= s, p.y -= a, h.x += s, 1 === n && (this._bracketContentPadding = {
                                left: s,
                                top: a
                            })
                        }
                        a.logger.trace("bracket-layout -- size after padding - x/y", {
                            x: h.x - p.x,
                            y: h.y - p.y,
                            tx: p.x,
                            ty: p.y
                        });
                        for (let e = 0; e < s.length; ++e) {
                            const t = s[e];
                            t.css.left -= p.x, t.css.top -= p.y - g;
                            if (this.get("isEogFinals")) {
                                const e = 45;
                                t.css.top += .5 * t.css.height - e
                            }
                            const a = t.get("round"),
                                i = t.css.left - this._bracketContentPadding.left;
                            1 !== n && 9 !== n && 13 !== n || (this._setRoundScrollPosition(a, n, i), 0 === e && this._setRoundScrollPosition("finals", n, i)), t.set("calculatedCss", t.css)
                        }
                        if (1 === n || 9 === n) {
                            const e = this.get("roundScrollPositions");
                            a.logger.trace("roundScrollPositions set to ", e), h.x -= p.x, h.y = this._getVisibleSize().y;
                            const t = `width: ${h.x}px; height: ${h.y}px;`,
                                n = (m ? "losers" : "winners") + "BracketContentStyle";
                            this.set(n, t), a.logger.trace(`bracket-layout -- ${n} set to ${t}`)
                        }
                    } else {
                        const a = n - 2,
                            i = e.filter((e => e.highestPossiblePosition === a)),
                            o = Math.log2(t - a + 1),
                            r = .5 * this._getVisibleSize().x - .5 * b + 1.6 * b * (o - 1),
                            l = this.get("isEog"),
                            c = 1 === a,
                            d = l ? c ? 2 * x - 10 : 22 : x + (c ? 10 : 22 - x);
                        s.forEach((e => {
                            const t = i.find((t => t.round === e.round));
                            e.css.left = t && t.css ? t.css.left : r, e.css.top = t && t.css ? t.css.top + t.css.height + d : 360, e.set("calculatedCss", e.css)
                        }))
                    }
                },
                _tryPlayAnimation() {
                    this.element ? (this.set("playAnimsOnInsertElement", !1), Promise.all([a.Util.waitForElement(this.element, w, {
                        subtree: !0
                    }), a.Util.waitForElement(this.element, C, {
                        subtree: !0
                    })]).then((e => {
                        a.logger.trace("bracket-layout -- attempting to play anims after rendered required content elements", e), this._internalPlayAnimation()
                    }))) : this.set("playAnimsOnInsertElement", !0)
                },
                _internalPlayAnimation() {
                    const e = this.get("bracket");
                    if (!this.get("useAnimations")) return a.logger.trace("bracket layout updating immediately as it does not use animations"), void this._updateBracketData(e);
                    if (!this._bracketAnimation) {
                        const e = e => {
                                e && (this._scrollOptions = {
                                    durationMs: .001
                                });
                                const t = this._getVisibleArea().scrollLeft();
                                a.logger.trace("bracket-layout -- clearRound1Offset"), this._animateScroll(t, D)
                            },
                            t = (e, t) => {
                                this._scrollOptions = t || {}, t.isInstant && (this._scrollOptions.durationMs = .001);
                                const n = this.get("selectedBracket"),
                                    s = E[t.highestPossiblePosition];
                                void 0 !== t.highestPossiblePosition && s !== n && this.set("selectedBracket", s), a.logger.trace("bracket-layout -- setTargetRound from anim -- ", {
                                    round: e,
                                    selectedBracket: this.get("selectedBracket"),
                                    scrollOptions: t
                                }), this.set("targetRound", e);
                                this._centerOnRound(e, !0)
                            },
                            n = (e, t) => {
                                const n = E[e];
                                if (this.get("selectedBracket") === n) return;
                                this.set("selectedBracket", n);
                                const s = !(t = t || {}).isInstant,
                                    i = t.isInstant ? .001 : t.verticalDuration,
                                    {
                                        easing: o
                                    } = t,
                                    r = {
                                        useAnimation: s,
                                        useHorizontalScroll: !1,
                                        verticalDuration: i,
                                        easing: o
                                    };
                                a.logger.trace("bracket-layout -- setIsLosersBracket from anim --", {
                                    bracketName: n,
                                    options: t,
                                    showBracketOptions: r
                                }), this._showBracket(n, null, r)
                            },
                            i = this._createPlayerBracketConnectorLine.bind(this),
                            o = e => this.get("isEogFinals") ? 0 : this._getRoundScrollPosition(e),
                            r = (e, t) => {
                                const n = E[e];
                                return n !== v[1] || t ? n === v[2] ? this._getLosers2Anchor() : 0 : this._getLosersAnchor()
                            },
                            l = (e, t) => {
                                if (!e || !t) return !0;
                                const n = e.get("highestPossiblePosition"),
                                    a = t.get("highestPossiblePosition");
                                return E[n] === E[a]
                            },
                            c = {
                                layout: this.$(),
                                winners: this._getBracketContent(1),
                                losers: this._getBracketContent(5),
                                losers2: this._getBracketContent(13)
                            },
                            d = this.get("tra"),
                            m = this.get("localPlayerRosterId"),
                            u = this.get("tournamentNameLocKey");
                        this._bracketAnimation = new s.default(c, d, u, m, {
                            setTargetRound: t,
                            setIsLosersBracket: n,
                            clearRound1Offset: e,
                            createPlayerBracketConnectorLine: i,
                            getRoundScroll: o,
                            getLosersBracketAdjustment: r,
                            isSameBracketLayer: l
                        })
                    }
                    if (this.get("isAnimationInProgress")) a.logger.trace("bracket-layout -- received bracket update but animation is in progress, queueing update");
                    else {
                        a.logger.trace("bracket-layout -- received bracket update, triggering animation...");
                        const e = this.get("currentBracket"),
                            t = this.get("bracket"),
                            n = this.get("totalAnimDuration"),
                            s = this._bracketAnimation.playAnimation(e, t, this._getVideos(), n).then((e => {
                                if (!this._bracketAnimation) return;
                                e ? a.logger.trace("bracket-layout -- bracket anim finished, updating bracket data...") : a.logger.trace("bracket-layout -- no anim was necessary, updating bracket data...");
                                const t = this.get("bracket");
                                this._updateBracketData(t, !e)
                            }));
                        a.Util.setBoolDuringPromise(s, this, "isAnimationInProgress")
                    }
                },
                _getVideos() {
                    const e = e => {
                        const t = this.$(e);
                        return M(t) ? t.get(0) : null
                    };
                    return this._updateScrollbars(), {
                        checkmark: {
                            visibleSize: this._getVisibleSize(),
                            video: e(".clash-bracket-win-mark-video.win")
                        },
                        xmark: {
                            visibleSize: this._getVisibleSize(),
                            video: e(".clash-bracket-win-mark-video.loss")
                        }
                    }
                },
                _getVisibleSize() {
                    return this.get("isEog") ? _ : f
                },
                _updateScrollbars() {
                    const e = this._getVisibleArea(1),
                        t = this._getVisibleArea(5),
                        n = this._getVisibleArea(13);
                    M(e) && M(t) && M(n) && (e.perfectScrollbar("update"), t.perfectScrollbar("update"), n.perfectScrollbar("update"))
                },
                _showBracket(e, t, n) {
                    void 0 === (n = n || {}).useHorizontalScroll && (n.useHorizontalScroll = !0), a.logger.trace(`bracket-layout -- showBracket selectedBracket=[${e}], options:`, n);
                    const s = this.$(".visible-area"),
                        i = this._getVisibleArea(1),
                        o = this._getVisibleArea(5),
                        r = this._getVisibleArea(13);
                    if (M(s) && M(i) && M(o) && M(r)) {
                        const l = this.get("showBracketAnimTimer");
                        a.Ember.run.cancel(l), this.set("showBracketAnimTimer", null), this._cancelAnimation();
                        const c = this._getRoundScrollPositions(1).finals,
                            d = this._getLosersAnchor();
                        let m = Promise.resolve();
                        if (n.useHorizontalScroll)
                            if (e === v[2]) {
                                const e = o.scrollLeft(),
                                    t = e - d;
                                a.logger.trace("_showBracket -- calculated scrollLeft", {
                                    losersScrollLeft: e,
                                    scrollLeft: t
                                }), r.scrollLeft(t), r.perfectScrollbar("update"), n.useAnimation && (e < d ? m = this._animateScroll(e, d, v[1]) : e > c && (m = this._animateScroll(e, c, v[1])))
                            } else if (e === v[1] && t === v[2]) {
                            const e = r.scrollLeft() + d;
                            o.scrollLeft(e), o.perfectScrollbar("update")
                        } else if (e === v[1]) {
                            const e = i.scrollLeft(),
                                t = e - d;
                            o.scrollLeft(t), o.perfectScrollbar("update"), n.useAnimation && (e < d ? m = this._animateScroll(e, d, v[0]) : e > c && (m = this._animateScroll(e, c, v[0])))
                        } else {
                            const e = o.scrollLeft() + d;
                            i.scrollLeft(e), i.perfectScrollbar("update")
                        }
                        this.set("isAnimationPaused", !0), this._updateBracketButton(), n.useAnimation ? m.then((() => {
                            const t = n.verticalDuration || 300,
                                i = n.easing || "ease-in-out",
                                o = `transform ${t}ms ${i}`;
                            a.logger.trace("BracketAnimation -- transition", o);
                            const r = [];
                            e === v[1] ? r.push({
                                transition: o,
                                transform: "translate(0%, -100%)"
                            }) : e === v[2] ? r.push({
                                transition: o,
                                transform: "translate(0%, -200%)"
                            }) : r.push({
                                transition: o,
                                transform: ""
                            });
                            const l = n => {
                                if (r[n]) {
                                    s.css(r[n]);
                                    const e = a.Ember.run.later(l.bind(null, n + 1), t + 50);
                                    this.set("showBracketAnimTimer", e)
                                } else {
                                    this.set("isAnimationPaused", !1), this.set("showBracketAnimTimer", null);
                                    const t = this.get("targetRound");
                                    e === v[1] && this.attrs.selectRound && 1 === t ? this.attrs.selectRound(2) : e === v[2] && this.attrs.selectRound && t < 3 ? this.attrs.selectRound(3) : this._isRoundTargeted(t) || this._centerOnRound(t)
                                }
                            };
                            l(0)
                        })) : (e === v[1] ? s.css("transform", "translateY(-100%)") : e === v[2] ? s.css("transform", "translateY(-200%)") : s.css("transform", ""), this.set("isAnimationPaused", !1))
                    }
                },
                _getVisibleArea(e) {
                    const t = void 0 === e ? this.get("selectedBracket") : E[e];
                    return this._getVisibleAreaByBracketName(t)
                },
                _getVisibleAreaByBracketName(e) {
                    switch (e) {
                        case v[0]:
                            return this.$(T);
                        case v[1]:
                            return this.$(".visible-area.losers");
                        case v[2]:
                            return this.$(".visible-area.losers2");
                        default:
                            return this.$(T)
                    }
                },
                _getBracketContent(e) {
                    switch (void 0 === e ? this.get("selectedBracket") : E[e]) {
                        case v[0]:
                            return this.$(w);
                        case v[1]:
                            return this.$(C);
                        case v[2]:
                            return this.$(R);
                        default:
                            return this.$(w)
                    }
                },
                _getLinesWrapper(e) {
                    switch (E[e]) {
                        case v[0]:
                            return this.$(I);
                        case v[1]:
                            return this.$(".lines-wrapper.losers");
                        case v[2]:
                            return this.$(".lines-wrapper.losers2");
                        default:
                            return this.$(I)
                    }
                },
                _getTimersWrapper(e) {
                    switch (E[e]) {
                        case v[0]:
                            return this.$(P);
                        case v[1]:
                            return this.$(L);
                        case v[2]:
                            return this.$(A);
                        default:
                            return this.$(P)
                    }
                },
                _toggleTimersWrapperDisplay(e) {
                    e ? (this.$(P).show(), this.$(L).show(), this.$(A).show()) : (this.$(P).hide(), this.$(L).hide(), this.$(A).hide())
                },
                _getRoundScrollPositions(e) {
                    const t = this.get("roundScrollPositions");
                    switch (void 0 === e ? this.get("selectedBracket") : E[e]) {
                        case v[0]:
                            return t.winners;
                        case v[1]:
                            return t.losers;
                        case v[2]:
                            return t.losers2;
                        default:
                            return t.winners
                    }
                },
                _getRoundScrollPosition(e, t = void 0) {
                    return this._getRoundScrollPositions(t)[e] || 0
                },
                _getLosersAnchor(e = 2) {
                    return this._getRoundScrollPositions(1)[e] || 0
                },
                _getLosers2Anchor(e = 3) {
                    return this._getRoundScrollPositions(1)[e] || 0
                },
                _isRoundTargeted(e, t = void 0) {
                    const n = this._getRoundScrollPosition(e, t);
                    if (!a.Util.isNumberOk(n)) return !1;
                    const s = this._getVisibleArea(t),
                        i = M(s) ? s.scrollLeft() : 0;
                    return i > n - 200 && i < n + 200
                },
                _onScroll(e, t) {
                    const n = E[e],
                        s = this.get("selectedBracket");
                    if (s !== n) return;
                    if (this.attrs.onScrollChanged) {
                        const e = this._getBracketContent(1),
                            n = this._getVisibleArea(1);
                        if (e && n) {
                            const i = e.outerWidth() - n.innerWidth();
                            let o = t.currentTarget.scrollLeft;
                            s === v[1] ? o += this._getLosersAnchor() : s === v[2] && (o += this._getLosers2Anchor()), this.attrs.onScrollChanged(a.Util.clamp01(o / i))
                        }
                    }
                    if (!this.get("isScrollAnimating") && this.attrs.selectRound) {
                        const t = this._getRoundScrollPositions(e);
                        for (const n of Object.keys(t))
                            if (this._isRoundTargeted(n, e)) {
                                this.attrs.selectRound(parseInt(n));
                                break
                            }
                    }
                },
                _getBracketConnectorX(e = 3, t = 1) {
                    const n = this._getRoundScrollPositions(t)[e] || 0;
                    return this._bracketContentPadding.left - .6 * b / 2 + n
                },
                _updateBracketButton() {},
                _centerOnRound(e, t = !1, n = !1) {
                    if (this.get("isEog") && !t) return;
                    if (!this.element || !a.Util.isNumberOk(e) || e < 1) return;
                    if (!this.get("isScrollAnimating") && this._isRoundTargeted(e)) return;
                    const s = this._getRoundScrollPosition(e);
                    if (a.Util.isNumberOk(s)) {
                        const e = this._getVisibleArea(),
                            t = M(e);
                        if (n && t) e.scrollLeft(s), e.perfectScrollbar("update");
                        else if (t) {
                            const t = e.scrollLeft();
                            this._animateScroll(t, s)
                        }
                    } else a.logger.error(`cannot center on round with no scroll position: ${e}`)
                },
                _animateScroll(e, t, n) {
                    if (this.get("isAnimationPaused")) return Promise.resolve();
                    if (!a.Util.isNumberOk(e) || !a.Util.isNumberOk(t)) return Promise.resolve();
                    n = void 0 === n ? this.get("selectedBracket") : n, a.logger.trace(`bracket-layout -- _animateScroll from ${e} to ${t}, isLosers? [${n}], scrollOptions:`, this._scrollOptions), this._cancelAnimation();
                    return new Promise(((s, i) => {
                        let r;
                        const l = () => {
                                const e = requestAnimationFrame(r);
                                this.set("currentScrollAnimationFrame", e)
                            },
                            c = () => {
                                this.set("currentScrollAnimationFrame", 0), s()
                            },
                            d = O++;
                        this.set("currentAnimationId", d);
                        let m = {};
                        this._scrollOptions && (m = this._scrollOptions, this._scrollOptions = null);
                        const u = m.durationMs || .5 * Math.abs(e - t),
                            p = this._getVisibleAreaByBracketName(n);
                        let h = null;
                        r = n => {
                            if (this.get("currentAnimationId") !== d || 0 === this.get("currentScrollAnimationFrame")) return void i();
                            null === h && (h = n);
                            const s = m.easing || (0, o.default)(0, 0, .57, 1),
                                r = (n - h) / u,
                                g = a.Util.lerp(e, t, s(a.Util.clamp01(r)));
                            M(p) && (p.scrollLeft(g), p.perfectScrollbar("update")), r < 1 ? l() : c()
                        }, l()
                    })).catch((e => {
                        a.logger.error("bracket-layout -- _animateScroll error inside promise:", e)
                    }))
                },
                _cancelAnimation() {
                    const e = this.get("currentScrollAnimationFrame");
                    0 !== e && (cancelAnimationFrame(e), this.set("currentAnimationId", -1))
                },
                _updateTimerElements(e, t) {
                    if (e && e.length)
                        for (const n of e) this._updateTimerElement(n, t)
                },
                _updateTimerElement(e, t) {
                    if (!e || !e.nextMatch) return;
                    const n = e.get("highestPossiblePosition") > t / 2,
                        s = this._getTimersWrapper(n);
                    if (M(s) && !e.timer) {
                        const t = a.Util.createDomNode(g({
                            gameId: e.get("id")
                        }));
                        e.timer = this.$(t).appendTo(s), e.timer.css({
                            left: e.css.left + 280,
                            top: e.css.top + 15
                        }), e.timer.hide()
                    }
                },
                _updateBracketLines(e, t) {
                    const n = [];
                    if (e.forEach((e => {
                            e.highestPossiblePosition === t && n.push(e)
                        })), n && n.length)
                        for (const e of n) this._updateBracketLine(e, t)
                },
                _updateBracketLine(e, t) {
                    const n = this._getLinesWrapper(t);
                    if (!e || !e.nextMatch || !M(n)) return;
                    const s = e.css.left < e.nextMatch.css.left,
                        i = {
                            left: e.css.left + (s ? e.css.width : 0),
                            top: e.css.top + .5 * e.css.height
                        },
                        o = {
                            left: e.nextMatch.css.left + (s ? 0 : e.nextMatch.css.width),
                            top: e.nextMatch.css.top + .5 * e.nextMatch.css.height
                        };
                    let r = o.top - i.top < 0;
                    o.left - i.left < 0 && (r = !r);
                    const l = N(Math.max(Math.abs(o.left - i.left), 1)) + 2,
                        c = N(Math.max(Math.abs(o.top - i.top), 1)) + 2,
                        d = `0 0 ${l} ${c}`;
                    let u = r ? "M0,100 L50,100 L50,0 L100,0" : "M0,0 L50,0 L50,100 L100,100";
                    if (i.top === o.top && (u = "M0,0 L100,0"), u = a.Util.denormalizeSvgPath(u, l, c), e.bracketLine) e.bracketLine.attr("viewbox", d), e.bracketLine.find("path").attr("d", u);
                    else {
                        const t = a.Util.createDomNode(m({
                            viewbox: d,
                            d: u
                        }));
                        e.bracketLine = this.$(t).appendTo(n)
                    }
                    e.bracketLine.width(l), e.bracketLine.height(c), e.bracketLine.css({
                        left: Math.round(Math.min(i.left, o.left)) - 1,
                        top: Math.round(Math.min(i.top, o.top)) - 1
                    });
                    const p = e.hasLocalRoster && e.nextMatch && e.nextMatch.hasLocalRoster;
                    this._toggleLineLocalStyle(e.bracketLine, p)
                },
                _toggleLineLocalStyle(e, t) {
                    e.length && (t ? e.get(0).classList.add("local") : e.get(0).classList.remove("local"))
                },
                _updateBracketConnectorLines(e, t, n, s, i) {
                    const o = this._getLinesWrapper(s),
                        r = {
                            losersLines: []
                        },
                        l = {
                            viewbox: "0 0 2 100",
                            d: "M0,0 L0,100"
                        },
                        c = this.get("isEog"),
                        d = this.get("isFirstRoundLoss"),
                        m = this.get("isSecondRoundDoubleLoss");
                    if (i) {
                        if (!c || d || m) {
                            const t = [];
                            if (e.forEach((e => {
                                    e.highestPossiblePosition === s && e.lowestPossiblePosition === n && e.css.left < e.nextMatch.css.left && t.push(e)
                                })), !t.length) return;
                            const i = t.length,
                                c = !!a._.find(e, (e => e.hasLocalRoster && e.highestPossiblePosition === (n + s + 1) / 2)),
                                d = t[0].round + 1;
                            if (i < 4 && r.winnersMidline) r.winnersMidline.remove(), r.winnersMidline = null;
                            else if (4 === i && !r.winnersMidline) {
                                const e = a.Util.createDomNode(h(l));
                                r.winnersMidline = this.$(e).appendTo(o)
                            }
                            if (!r.winnersConnectorTop) {
                                const e = a.Util.createDomNode(h(l));
                                r.winnersConnectorTop = this.$(e).appendTo(o)
                            }
                            if (!r.winnersConnectorBot) {
                                const e = a.Util.createDomNode(h(l));
                                r.winnersConnectorBot = this.$(e).appendTo(o)
                            }
                            const m = N(this._getBracketConnectorX(d, s)) - 2,
                                u = a._.filter(t, (e => 1 === e.get("round")));
                            let p = a._.reduce(u, ((e, t) => e + t.css.top), 0);
                            p = p / u.length + .5 * x;
                            let g = null,
                                f = null;
                            {
                                let e = null,
                                    n = null;
                                for (const a of t) !a.css || a.css.left > m || (a.hasLocalRoster && (f = a), a.css.top < p ? (!e || a.css.top > e.css.top) && (e = a) : ((!n || a.css.top < n.css.top) && (n = a), (!g || a.css.top > g.css.top) && (g = a)));
                                if (r.winnersMidline && e && e.css && n && n.css) {
                                    const t = e.css.top + .5 * x,
                                        a = n.css.top - e.css.top;
                                    r.winnersMidline.css({
                                        left: m,
                                        top: t,
                                        height: a,
                                        width: 1
                                    })
                                }
                            }
                            if (g && g.css) {
                                const e = this._getBracketContent(s),
                                    t = N(g.css.top + .5 * x),
                                    n = 110,
                                    a = N(e.outerHeight() - t - n),
                                    i = t + a;
                                r.winnersConnectorTop.css({
                                    left: m,
                                    top: t,
                                    height: a,
                                    width: 1
                                }), r.winnersConnectorBot.css({
                                    left: m,
                                    top: i,
                                    height: n,
                                    width: 1
                                })
                            }
                            c && this._createPlayerBracketConnectorLine(f, !0)
                        }
                    } else {
                        const t = a._.filter(e, (e => e.get("lowestPossiblePosition") === n && e.get("highestPossiblePosition") === s && e.nextMatch && e.css.left < e.nextMatch.css.left));
                        this._createLosersBracketConnectorLine(t, r, o)
                    }
                },
                _createLosersBracketConnectorLine(e, t, n) {
                    if (!e || !e.length) return;
                    const s = {
                            viewbox: "0 0 2 100",
                            d: "M0,0 L0,100"
                        },
                        i = {
                            viewbox: "0 0 100 2",
                            d: "M0,0 L100,0"
                        },
                        o = !!a._.find(e, (e => e.hasLocalRoster));
                    let r = -1,
                        l = null,
                        c = null,
                        d = 0;
                    {
                        let a = 0;
                        for (; a < e.length; ++a) {
                            let s = null;
                            if (t.losersLines.length > a) s = t.losersLines[a];
                            else {
                                const e = this._createBracketConnectorLine(i);
                                s = this.$(e).appendTo(n), t.losersLines.push(s)
                            }
                            const o = e[a];
                            d = N(this._getBracketConnectorX(o.round, o.get("highestPossiblePosition")));
                            const m = N(o.css.top + .5 * x),
                                u = Math.max(N(o.css.left - d) - 1, 1),
                                p = 0 === a || o.hasLocalRoster,
                                h = p ? d : d + 1,
                                g = p ? u + 1 : u;
                            s.css({
                                left: h,
                                top: m,
                                width: g,
                                height: 1
                            }), o.hasLocalRoster && (r = m, c = o), (!l || o.css.top > l.css.top) && (l = o)
                        }
                        for (; a < t.losersLines.length;) t.losersLines[a].remove(), t.losersLines.splice(a, 1)
                    }
                    let m = 0;
                    if (r > 0) {
                        if (!t.losersConnectorTop) {
                            const e = this._createBracketConnectorLine(s);
                            t.losersConnectorTop = this.$(e).appendTo(n)
                        }
                        m = r, t.losersConnectorTop.css({
                            left: d,
                            top: 0,
                            height: m,
                            width: 1
                        })
                    } else t.losersConnectorTop && (t.losersConnectorTop.remove(), t.losersConnectorTop = null);
                    {
                        let e = 0,
                            a = 0;
                        if (r > 0 ? (e = r, a = l.css.top + .5 * x - r) : (e = 0, a = l.css.top + .5 * x), !t.losersConnectorBot) {
                            const e = this._createBracketConnectorLine(s);
                            t.losersConnectorBot = this.$(e).appendTo(n)
                        }
                        t.losersConnectorBot.css({
                            left: d,
                            top: e,
                            height: a,
                            width: 1
                        })
                    }
                    o && this._createPlayerBracketConnectorLine(c, !1)
                },
                _updateMatchThirdPlaceLines(e, t) {
                    const n = e.find((e => e.highestPossiblePosition === t + 2 && e.lowestPossiblePosition - e.highestPossiblePosition == 1));
                    if (!n) return;
                    const s = this._getLinesWrapper(t),
                        i = n.hasLocalRoster,
                        o = e.filter((e => e.highestPossiblePosition === t && e.lowestPossiblePosition === n.lowestPossiblePosition && e.round === n.round - 1));
                    o.length && o.forEach((e => {
                        const t = e.css.left < e.nextLosersMatch.css.left,
                            o = {
                                left: e.css.left + (t ? e.css.width : 0),
                                top: e.css.top + .5 * e.css.height
                            },
                            r = {
                                left: e.nextLosersMatch.css.left + (t ? 0 : e.nextLosersMatch.css.width),
                                top: e.nextLosersMatch.css.top + .5 * e.nextLosersMatch.css.height
                            };
                        let l = r.top - o.top < 0;
                        r.left - o.left < 0 && (l = !l);
                        const c = Math.min(o.top, r.top),
                            d = Math.min(o.left, r.left),
                            m = N(Math.max(Math.abs(r.left - o.left), 1)) + 2,
                            p = N(Math.max(Math.abs(n.css.top + .5 * e.css.height - c), 1)) + 2,
                            h = `0 0 ${m} ${p}`;
                        let g = l ? "M0,100 L50,100 L50,0 L100,0" : "M0,0 L50,0 L50,100 L100,100";
                        g = a.Util.denormalizeSvgPath(g, m, p);
                        const f = a.Util.createDomNode(u({
                                viewbox: h,
                                d: g
                            })),
                            _ = this.$(f);
                        _.appendTo(s), _.css({
                            left: d,
                            top: c,
                            width: m - 2,
                            height: p - 1
                        }), this._toggleLineLocalStyle(_, e.hasLocalRoster && i)
                    }))
                },
                _createBracketConnectorLine: e => a.Util.createDomNode(p(e)),
                _createPlayerBracketConnectorLine(e, t, n = {}) {
                    if (!e) return;
                    const s = {
                            position: "absolute"
                        },
                        i = this._getLinesWrapper(e.get("highestPossiblePosition"));
                    if (t) {
                        const n = N(this._getBracketConnectorX(e.round + 1, e.get("highestPossiblePosition")));
                        s.top = N(e.css.top + .5 * e.css.height), s.left = N(e.css.left + e.css.width), s.width = N(n - s.left), s.height = N(_.y - s.top), a.logger.trace("createPlayerBracketConnectorLine", {
                            isToLosers: t,
                            x: n,
                            css: s
                        });
                        const o = {
                                viewbox: `0 0 ${s.width} ${s.height}`,
                                d: a.Util.denormalizeSvgPath("M0,0 L100,0 L100,100", s.width, s.height)
                            },
                            r = this._createBracketConnectorLine(o),
                            l = this.$(r);
                        return l.appendTo(i), l.css(s), this._toggleLineLocalStyle(l, !0), l
                    } {
                        const o = N(this._getBracketConnectorX(e.round, e.get("highestPossiblePosition")));
                        s.top = 0, s.left = o, s.width = Math.max(N(e.css.left - o) - 1, 1), s.height = N(e.css.top + .5 * x), a.logger.trace("createPlayerBracketConnectorLine", {
                            isToLosers: t,
                            x: o,
                            css: s
                        }), ((e, n, s) => {
                            a.logger.trace("applying fudge", {
                                isToLosers: t,
                                css: e,
                                width: n,
                                height: s
                            }), n && (e.left -= n, e.width += 2 * n), s && (e.top -= s, e.height += 2 * s)
                        })(s, n.fudgeWidth || 0, n.fudgeHeight || 2);
                        const r = {
                                viewbox: `0 0 ${s.width} ${s.height}`,
                                d: a.Util.denormalizeSvgPath("M0,0 L0,100 L100,100", s.width, s.height)
                            },
                            l = this._createBracketConnectorLine(r),
                            c = this.$(l);
                        return c.appendTo(i), c.css(s), this._toggleLineLocalStyle(c, !0), c
                    }
                },
                _setRoundScrollPosition(e, t, n) {
                    const a = this._getRoundScrollPositions(t),
                        s = a[e];
                    (void 0 === s || s > n) && (a[e] = n)
                },
                actions: {
                    scrollBracketUp() {
                        const e = this.get("selectedBracket"),
                            t = v.findIndex((t => t === e)) || 0,
                            n = Math.max(t - 1, 0);
                        this.attrs.selectBracket(v[n])
                    },
                    scrollBracketDown() {
                        const e = this.get("selectedBracket"),
                            t = v.findIndex((t => t === e)) || 0,
                            n = Math.min(t + 1, v.length - 1);
                        this.attrs.selectBracket(v[n])
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = n(9),
                i = (o(n(96)), o(n(3)));

            function o(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const r = {
                    currentConsolation: n(136),
                    currentLose: n(137),
                    currentWin: n(138),
                    currentWinFinals: n(139),
                    extraEmpty: n(140),
                    extraOtherTeams: n(141),
                    extraPastRound: n(142),
                    finalsLoss: n(143),
                    finalsOppKnown: n(144),
                    finalsOppUnknown: n(145),
                    nextOppKnown: n(146),
                    nextOppUnknown: n(147),
                    matchupIntroWin: n(148),
                    matchupIntroLoss: n(149),
                    dashes: n(150),
                    trophyAppear: n(151)
                },
                l = "brackets-checkmark",
                c = "brackets-xmark",
                d = "brackets-consolation",
                m = "brackets-finals-lose",
                u = "brackets-finals-win",
                p = "brackets-nextcell-known",
                h = "brackets-finals-nextunknown",
                g = "brackets-match-lose",
                f = "brackets-match-win",
                _ = "brackets-matchup-intro",
                b = "brackets-trophy-celebration",
                x = Object.freeze({
                    leftLogoRootPath: ["assets", 0, "u"],
                    leftLogoPath: ["assets", 0, "p"],
                    rightLogoRootPath: ["assets", 1, "u"],
                    rightLogoPath: ["assets", 1, "p"],
                    leftShortName: ["layers", 1, "t", "d", "k", 0, "s", "t"],
                    rightShortName: ["layers", 3, "t", "d", "k", 0, "s", "t"]
                }),
                y = Object.freeze({
                    leftLogoRootPath: ["assets", 0, "u"],
                    leftLogoPath: ["assets", 0, "p"],
                    leftShortName: ["layers", 0, "t", "d", "k", 0, "s", "t"]
                }),
                k = Object.freeze(a._.assign({
                    waitingText: ["layers", 2, "t", "d", "k", 0, "s", "t"]
                }, y)),
                v = a._.assign({}, x, {
                    leftShortName: ["layers", 0, "t", "d", "k", 0, "s", "t"],
                    rightShortName: ["layers", 2, "t", "d", "k", 0, "s", "t"]
                }),
                E = Object.freeze({
                    imagesPath: ["assets", 2, "u"],
                    localLogoRootPath: ["assets", 1, "u"],
                    localLogoPath: ["assets", 1, "p"],
                    opponentLogoRootPath: ["assets", 0, "u"],
                    opponentLogoPath: ["assets", 0, "p"],
                    localName: ["layers", 6, "t", "d", "k", 0, "s", "t"],
                    localShortName: ["layers", 7, "t", "d", "k", 0, "s", "t"],
                    opponentName: ["layers", 4, "t", "d", "k", 0, "s", "t"],
                    opponentShortName: ["layers", 5, "t", "d", "k", 0, "s", "t"]
                }),
                S = Object.freeze({
                    gradientRootPath: ["assets", 0, "u"],
                    sheenRootPath: ["assets", 2, "u"],
                    trophyRootPath: ["assets", 1, "u"],
                    trophyPath: ["assets", 1, "p"],
                    tournamentChampionLoc: ["layers", 4, "t", "d", "k", 0, "s", "t"],
                    bracketNameLoc: ["layers", 5, "t", "d", "k", 0, "s", "t"]
                }),
                T = Object.freeze({
                    currentConsolation: x,
                    currentLose: x,
                    currentWin: x,
                    currentWinFinals: x,
                    extraEmpty: x,
                    extraOtherTeams: x,
                    extraPastRound: x,
                    finalsLoss: x,
                    finalsOppKnown: v,
                    finalsOppUnknown: k,
                    nextOppKnown: v,
                    nextOppUnknown: y,
                    matchupIntroWin: E,
                    matchupIntroLoss: E,
                    dashes: {
                        imagesPath: ["assets", 0, "u"]
                    },
                    trophyAppear: S
                }),
                w = "#f4b71a";

            function I(e) {
                const t = a.Ember.$(document.createElement("div"));
                return t.css({
                    position: "absolute",
                    left: 0,
                    top: -60,
                    right: 0,
                    bottom: -60,
                    overflow: "hidden"
                }), t.appendTo(e), t
            }

            function C(e, t, n, s = {}) {
                a.logger.trace("playing video on match at position", {
                    videoName: n,
                    matchCss: t
                });
                const i = s.type || "intro",
                    o = s.signal || 0,
                    r = s.fadeIn || 0,
                    l = s.fadeOut || 0;
                void 0 === s.playImmediately && (s.playImmediately = !0);
                const c = `<lol-uikit-video class="clash-bracket-video" type="${i}"\n    signal-before-end="${o}" fade-in="${r}" fade-out="${l}"\n    src="/fe/lol-clash/assets/animations/videos/brackets/${n}.webm" preload></lol-uikit-video>`;
                let d = null;
                d = null === t ? I(e) : L(t, e), d.append(c);
                const m = d.find(".clash-bracket-video").get(0),
                    u = () => d.remove();
                return m.addEventListener("done", u), s.playImmediately && m && m.play(), {
                    cleanup: u,
                    video: m
                }
            }

            function R(e, t, n, s) {
                a.logger.trace("BracketAnimation -- playing animation at matchCss with variables", {
                    animName: n,
                    matchCss: t,
                    lottieVariables: s
                });
                let i = null;
                if (null === t) {
                    const t = I(e);
                    t.attr({
                        "anim-name": n
                    }), i = t.get(0)
                } else i = L(t, e).get(0);
                const o = a._.cloneDeep(r[n]);
                if (!o) return void a.logger.error(`no animation by the name ${n}`);
                ! function(e, t, n) {
                    const s = T[t];
                    if (!s) return void a.logger.error("BracketAnimation.setLottieVariable -- no variables specified for animation", t);
                    a.logger.trace("BracketAnimation.setLottieVariable -- setting lottie variables for animation", t), a.LottieAnim.setLottieVariables(e, s, n)
                }(o, n, s);
                const l = a.Ember.$(document.createElement("div"));
                l.addClass("clash-bracket-animation"), l.css({
                    width: `${o.w}px`,
                    height: `${o.h}px`
                }), l.appendTo(i);
                const c = a.lottie.loadAnimation({
                    container: l.get(0),
                    renderer: "svg",
                    loop: !1,
                    autoplay: !1,
                    animationData: o
                });
                return c && c.play(), {
                    targetElement: i,
                    lottie: c,
                    cleanup: () => {
                        c.destroy(), a.Ember.$(i).remove()
                    }
                }
            }

            function P(e, t, n = !0) {
                const s = a.Ember.$(e);
                let i = s;
                n && (i = s.clone(!0));
                const o = i.find("path");
                if (o && o.length) {
                    const e = o.get(0).getTotalLength();
                    return o.attr({
                        "stroke-dasharray": e,
                        "stroke-dashoffset": e
                    }), o.css(t), i.css({
                        opacity: 1
                    }), i.appendTo(s.parent()), o.get(0)
                }
                return null
            }

            function L(e, t) {
                const n = document.createElement("div"),
                    s = a.Ember.$(n);
                return s.css(e), s.appendTo(t), s
            }

            function A(e, t) {
                return t.find((t => t.get("id") === e))
            }

            function B(e) {
                return a.logger.trace("BracketAnimation -- playAudio sfx, id", e), a.AudioManager.playAudio(e), {
                    cleanup: () => a.AudioManager.stopAudio(e)
                }
            }
            t.default = class {
                constructor(e, t, n, a, s) {
                    this._$elements = e, this._tra = t, this._localPlayerRosterId = a, this._tournamentLocKey = n, this._bracketLayoutCommands = s, this._isAnimating = !1, this._initializeAssets(), this._initializeConfigs()
                }
                _initializeAssets() {
                    this._assetsPromise = Promise.all([(0, a.dataBinding)("/lol-game-data").get("/assets/v1/summoner-trophies.json"), (0, a.dataBinding)("/lol-game-data").get("assets/v1/generic-assets.json")]), this._assetsPromise.then((e => {
                        const [t, n] = e;
                        this._trophiesGameData = t, this._logosGameData = n ? n["clash-logos"] : {}
                    }))
                }
                _initializeConfigs() {
                    this._isBracketFinalsAnimEnabled = !0, this._configsPromise = (0, a.dataBinding)("/lol-platform-config").get("/v1/namespaces/ClashConfig/BracketFinalsAnimEnabled"), this._configsPromise.then((e => {
                        this._isBracketFinalsAnimEnabled = !1 !== e
                    }))
                }
                cleanup() {
                    if (this._isAnimating = !1, this._timeline && (a.logger.trace("BracketAnimation -- cleanup: kill _timeline"), this._timeline.kill(), this._timeline = null), this._anims) {
                        a.logger.trace("BracketAnimation -- cleanup: cleanup _anims");
                        for (const e of this._anims) e && e.cleanup && e.cleanup();
                        this._anims = null
                    }
                    this._animResolve && (a.logger.trace("BracketAnimation -- cleanup: resolve anim promise"), this._animResolve(), this._animResolve = null)
                }
                playAnimation(e, t, n, o) {
                    if (!e) return a.logger.error("BracketAnimation -- ***ERROR*** NO oldBracket DATA"), Promise.resolve();
                    if (!t) return a.logger.error("BracketAnimation -- ***ERROR*** NO newBracket DATA"), Promise.resolve();
                    const r = () => {
                        const e = a.gsap.TweenLite.to(this._$elements.winners.get(0), .5, {
                                opacity: 1
                            }),
                            t = a.gsap.TweenLite.to(this._$elements.losers.get(0), .5, {
                                opacity: 1
                            }),
                            n = a.gsap.TweenLite.to(this._$elements.losers2.get(0), .5, {
                                opacity: 1
                            });
                        e && e.play(), t && t.play(), n && n.play()
                    };
                    return a.logger.trace("BracketAnimation -- playAnimation, videos", n), a.logger.trace("BracketAnimation -- playAnimation, elements", {
                        layout: this._$elements.layout,
                        winners: this._$elements.winners,
                        losers: this._$elements.losers
                    }), Promise.all([this._configsPromise, this._assetsPromise]).then((() => new Promise(((x, y) => {
                        const k = this._isBracketFinalsAnimEnabled,
                            v = e.get("matches"),
                            E = t.get("matches"),
                            S = e.findCurrentMatch(this._localPlayerRosterId),
                            T = t.findCurrentMatch(this._localPlayerRosterId),
                            I = S || T ? (S || T).get("round") : 1,
                            L = S || T ? (S || T).get("highestPossiblePosition") : 1;
                        if (!S || T && S.get("id") === T.get("id") && S.get("status") === T.get("status")) {
                            if (a.logger.trace("BracketAnimation -- determined no anim necessary", {
                                    prevMatch: S,
                                    newMatch: T
                                }), S || T) this._bracketLayoutCommands.setIsLosersBracket(L, {
                                isInstant: !0
                            }), this._bracketLayoutCommands.setTargetRound(I, {
                                isInstant: !0
                            });
                            else {
                                const e = t.findLastCompletedMatch(this._localPlayerRosterId),
                                    n = e ? e.get("round") : 1,
                                    a = e ? e.get("highestPossiblePosition") : 1;
                                this._bracketLayoutCommands.setIsLosersBracket(a, {
                                    isInstant: !0
                                }), this._bracketLayoutCommands.setTargetRound(n, {
                                    isInstant: !0
                                })
                            }
                            return r(), void x(!1)
                        }
                        const D = e => a.Util.compareRosterIds(e, s.MATCH_ROSTER_BYE_ID) ? a.Ember.Object.create({
                                id: s.MATCH_ROSTER_BYE_ID,
                                logoId: 0,
                                logoColorId: 0,
                                name: this._tra.get("clash_bracket_match_bye"),
                                shortName: this._tra.get("clash_bracket_match_bye_short_name")
                            }) : null,
                            O = e => {
                                if (!e || e.get("id") === s.MATCH_ROSTER_BYE_ID) return "/fe/lol-clash/assets/images/bye.png";
                                const t = e.get("logoId"),
                                    n = e.get("logoColorId");
                                return this._logosGameData && a.Util.isNumberOk(t) && a.Util.isNumberOk(n) ? this._logosGameData[`logo_${t}_${n}`] : ""
                            },
                            N = S.get("rosterId1"),
                            M = S.get("rosterId2"),
                            G = T ? T.get("rosterId1") : s.INVALID_ROSTER_ID,
                            F = T ? T.get("rosterId2") : s.INVALID_ROSTER_ID;
                        let U = null,
                            V = null,
                            j = null;
                        if (a.Util.compareRosterIds(this._localPlayerRosterId, N) ? (U = S.get("roster1"), V = S.get("roster2") || D(M)) : (U = S.get("roster2"), V = S.get("roster1") || D(N)), !U) return void y("no local roster on prevMatch");
                        T && (j = a.Util.compareRosterIds(this._localPlayerRosterId, G) ? T.get("roster2") || D(F) : T.get("roster1") || D(G));
                        const H = A(S.get("id"), E),
                            W = T ? A(T.get("id"), v) : null,
                            $ = H.get("winnerId"),
                            q = S && S.get("isFinals") && !S.get("isLosersBracket"),
                            Y = S && S.get("isFinals"),
                            z = T && T.get("isFinals") && !T.get("isLosersBracket"),
                            K = a.Util.compareRosterIds($, this._localPlayerRosterId),
                            X = !!V && a.Util.compareRosterIds($, V.get("id"));
                        a.logger.trace("BracketAnimation -- isWin, isLoss", {
                            isWin: K,
                            isLoss: X
                        }), a.logger.trace("BracketAnimation -- anim data prevMatch / newMatch", {
                            prevMatch: S,
                            newMatch: T
                        }), a.logger.trace("BracketAnimation -- anim data localRoster / prevOppRoster / newOppRoster", {
                            localRoster: U,
                            prevOppRoster: V,
                            newOppRoster: j
                        }), a.logger.trace("BracketAnimation -- anim data localRosterId / winnerId / prevMatchIsFinals / newMatchIsFinals", {
                            _localPlayerRosterId: this._localPlayerRosterId,
                            winnerId: $,
                            prevMatchIsFinals: q,
                            newMatchIsFinals: z
                        });
                        const Q = {
                                rightLogoRootPath: "",
                                leftLogoRootPath: "",
                                leftLogoPath: O(U),
                                rightLogoPath: O(V),
                                leftShortName: U.get("shortName").toUpperCase(),
                                rightShortName: V ? V.get("shortName").toUpperCase() : "",
                                waitingText: this._tra.get("clash_bracket_animation_text_waiting")
                            },
                            Z = {
                                rightLogoRootPath: "",
                                leftLogoRootPath: "",
                                leftLogoPath: O(U),
                                rightLogoPath: O(j),
                                leftShortName: U.get("shortName").toUpperCase(),
                                rightShortName: j ? j.get("shortName").toUpperCase() : "",
                                waitingText: this._tra.get("clash_bracket_animation_text_waiting")
                            },
                            J = {
                                imagesPath: "/fe/lol-clash/assets/animations/lottie/brackets/matchup_intro/images/",
                                localLogoRootPath: "",
                                opponentLogoRootPath: "",
                                localLogoPath: O(U),
                                opponentLogoPath: O(V),
                                localName: U.get("name").toUpperCase(),
                                localShortName: U.get("shortName").toUpperCase(),
                                opponentName: V ? V.get("name").toUpperCase() : "",
                                opponentShortName: V ? V.get("shortName").toUpperCase() : ""
                            },
                            ee = L >= 5 && L <= 11,
                            te = L >= 13 && L <= 15,
                            ne = !this._bracketLayoutCommands.isSameBracketLayer(S, T),
                            ae = this._bracketLayoutCommands.getLosersBracketAdjustment(L, ne),
                            se = this._bracketLayoutCommands.getRoundScroll(I);
                        a.logger.trace("BracketAnimation -- prevMatchIsLosersContainer adjustment scroll", {
                            prevMatchIsInLosersBracketContainer: ee,
                            adjustment: ae,
                            scroll: se
                        });
                        const ie = {
                                x: S.css.left + .5 * S.css.width + ae - (ne ? 0 : se),
                                y: S.css.top + .5 * S.css.height
                            },
                            oe = new a.gsap.TimelineLite,
                            re = new a.gsap.TimelineLite,
                            le = new a.gsap.TimelineLite;
                        oe.add(re, 0), oe.add(le, 3.3), this._animResolve = () => x(!0), this._anims = [], this._isAnimating = !0;
                        const ce = e => {
                                const t = {
                                        position: "absolute",
                                        left: e ? 700 : 180,
                                        top: 80,
                                        width: 400,
                                        height: 400
                                    },
                                    n = C(this._$elements.layout, t, "slash_FX");
                                this._anims.push(n)
                            },
                            de = (e, t, n) => {
                                const s = e.video;
                                if (!s) return void a.logger.error("BracketAnimation -- missing mark video");
                                const i = {
                                        x: .5 * e.visibleSize.x,
                                        y: .5 * e.visibleSize.y
                                    },
                                    o = n ? .07 : .12;
                                a.logger.trace("BracketAnimation -- *mark startPoint", i), le.set(s, a._.assign({
                                    scale: .85
                                }, i), 0).add((() => {
                                    const e = a.Ember.$(s).parent();
                                    e.parent().append(e), s && s.play(), this._anims.push(B(t))
                                }), 0).to(s, .43, {
                                    scale: 1,
                                    ease: a.Util.cubicBezier(.36, 0, 0, 0)
                                }, 1.13).to(s, .47, a._.assign({
                                    scale: o,
                                    ease: a.Util.cubicBezier(1, 0, .67, 0)
                                }, ie), 1.57).to(s, .15, {
                                    opacity: 0
                                }, 2.45)
                            },
                            me = (e, t = 0) => {
                                t += .05, le.add((() => {
                                    if (a.logger.trace("BracketAnimation -- addNewMatchToTimeline", {
                                            newMatch: T,
                                            preupdateNewMatch: W,
                                            newMatchIsFinals: z,
                                            newOppRoster: j
                                        }), T && W) {
                                        const t = z ? j ? "finalsOppKnown" : "finalsOppUnknown" : j ? "nextOppKnown" : "nextOppUnknown",
                                            n = R(e, W.css, t, Z);
                                        W.set("hasBracketAnim", !0), this._anims.push(n);
                                        const a = z ? h : p;
                                        this._anims.push(B(a))
                                    }
                                }), t).add((() => {
                                    if (W) {
                                        const t = z ? "cell_finals_magicBurst" : "cell_nextMatch_magicHit",
                                            n = C(e, W.css, t);
                                        this._anims.push(n)
                                    }
                                }), t + (z ? 2.4 : .8))
                            },
                            ue = () => {
                                if (T) {
                                    const e = {
                                        durationMs: 1270,
                                        easing: (0, i.default)(1, 0, 0, 1),
                                        highestPossiblePosition: L
                                    };
                                    le.add((() => this._bracketLayoutCommands.setTargetRound(T.get("round"), e)), 2.6)
                                }
                            };
                        this._bracketLayoutCommands.setIsLosersBracket(L, {
                            isInstant: !0
                        }), this._bracketLayoutCommands.setTargetRound(I, {
                            isInstant: !0
                        }), (K || X) && le.to(this._$elements.winners.get(0), .73, {
                            opacity: 1
                        }, .27).to(this._$elements.losers.get(0), .73, {
                            opacity: 1
                        }, .27).to(this._$elements.losers2.get(0), .73, {
                            opacity: 1
                        }, .27);
                        const pe = ee ? this._$elements.losers : te ? this._$elements.losers2 : this._$elements.winners;
                        if (K) {
                            if (re.add((() => {
                                    const e = R(this._$elements.layout, null, "matchupIntroWin", J);
                                    this._anims.push(e), this._anims.push(B(_))
                                }), 0).add((() => ce(!0)), 1.95), n.checkmark.video ? de(n.checkmark, l, !0) : a.logger.error("BracketAnimation -- no checkmark video!"), le.add((() => {
                                    const e = q ? "currentWinFinals" : "currentWin",
                                        t = R(pe, S.css, e, Q);
                                    S.set("hasBracketAnim", !0), this._anims.push(t), this._anims.push(B(q ? u : f)), q && (k ? a.Ember.run.later((() => {
                                        if (this._isAnimating && this._anims) {
                                            t.cleanup();
                                            const e = this._anims.findIndex((e => e === t));
                                            this._anims.splice(e, 1)
                                        }
                                    }), 4170) : a.Ember.run.later((() => {
                                        t && t.lottie && t.lottie.pause()
                                    }), 3500))
                                }), 0).add((() => {
                                    const e = C(pe, S.css, "cell_win_magicHit");
                                    this._anims.push(e)
                                }), 1.99), Y) {
                                k && le.add((() => {
                                    const t = e.get("size");
                                    let n = "";
                                    switch (t) {
                                        case 4:
                                            n = "trophyCelebration_blue";
                                            break;
                                        case 8:
                                            n = "trophyCelebration_purple";
                                            break;
                                        case 16:
                                            n = "trophyCelebration_orange";
                                            break;
                                        default:
                                            return void y(`BracketAnimation -- unknown bracket size ${t}, no trophy anim!`)
                                    }
                                    const a = C(this._$elements.layout, null, n, {
                                        signal: .5
                                    });
                                    this._anims.push(a), this._anims.push(B(b)), a.video.addEventListener("signal", (() => {
                                        if (this._isAnimating) {
                                            const e = C(this._$elements.layout, null, "trophyCelebration_loop", {
                                                type: "loop",
                                                playImmediately: !1
                                            });
                                            this._anims.push(e), setTimeout((() => {
                                                if (this._isAnimating) {
                                                    e.video && e.video.play();
                                                    const t = this._$elements.layout.find(".bracket-animation-trophy-appear");
                                                    t.parent().append(t)
                                                }
                                            }), .5)
                                        }
                                    }))
                                }), 3);
                                const t = e.get("size"),
                                    n = "loc_key" === this._tournamentLocKey ? "pilot" : this._tournamentLocKey;
                                le.add((() => {
                                    let e = null;
                                    if (k) {
                                        if (this._trophiesGameData && this._trophiesGameData.Trophies) {
                                            const s = a._.find(this._trophiesGameData.Trophies, (function(e) {
                                                return e.theme.toLowerCase() === n.toLowerCase() && String(e.bracket) === String(t)
                                            }));
                                            e = a._.get(s, "profileIcon", "") || null
                                        }
                                        e || (e = `fe/lol-clash/assets/placeholder/trophies/${t}.png`), a.logger.trace("BracketAnimation -- trophyPath: ", e)
                                    } else e = "/fe/lol-clash/assets/images/1x1_transparent.png";
                                    const s = {
                                            gradientRootPath: "/fe/lol-clash/assets/animations/lottie/brackets/trophy/images/",
                                            sheenRootPath: "/fe/lol-clash/assets/animations/lottie/brackets/trophy/images/",
                                            trophyRootPath: "",
                                            trophyPath: e,
                                            tournamentChampionLoc: this._tra.get(16 === t ? "clash_eog_celebration_tournament_champion" : "clash_eog_celebration_bracket_champion"),
                                            bracketNameLoc: this._tra.formatString("clash_eog_celebration_team_bracket", {
                                                size: t
                                            })
                                        },
                                        i = R(this._$elements.layout, null, "trophyAppear", s);
                                    this._anims.push(i), a.Ember.$(i.targetElement).addClass("bracket-animation-trophy-appear")
                                }), k ? 5.57 : 3).add((() => {
                                    let e = null;
                                    switch (t) {
                                        case 4:
                                            e = `fem1-win-open-bracket-${n}`;
                                            break;
                                        case 8:
                                            e = `fem1-win-winners-bracket-${n}`;
                                            break;
                                        case 16:
                                            e = `fem1-win-champ-bracket-${n}`
                                    }
                                    a.clashVO && a.clashVO.play(e, "fem1-win-bracket-generic")
                                }), k ? 6.5 : 3.5)
                            } else if (z ? (le.add((() => {
                                    const e = R(pe, W.css, "dashes", {
                                        imagesPath: "/fe/lol-clash/assets/animations/lottie/brackets/dashes/images/"
                                    });
                                    this._anims.push(e)
                                }), 3.4), me(pe)) : me(pe, 3), ue(), S.bracketLine) {
                                let e = P(S.bracketLine, {
                                    stroke: w,
                                    "stroke-width": 4
                                });
                                if (e) {
                                    const t = a.Util.cubicBezier(0, 0, .67, 1);
                                    le.to(e, .97, {
                                        "stroke-dashoffset": 0,
                                        ease: t
                                    }, 2.8), le.to(e, .63, {
                                        "stroke-dashoffset": -e.getTotalLength()
                                    }, 3.5)
                                }
                                if (e = P(S.bracketLine, {
                                        stroke: "#16cae5",
                                        "stroke-width": 2
                                    }), e) {
                                    const t = a.Util.cubicBezier(0, 0, 0, 1);
                                    le.to(e, .63, {
                                        "stroke-dashoffset": 0,
                                        ease: t
                                    }, 3.5)
                                }
                            }
                            a.logger.trace("BracketAnimation -- finished setting up WIN timelines")
                        } else if (X) {
                            if (re.add((() => {
                                    const e = R(this._$elements.layout, null, "matchupIntroLoss", J);
                                    this._anims.push(e), this._anims.push(B(_))
                                }), 0).add((() => ce(!1)), 1.95), n.xmark.video ? de(n.xmark, c, !1) : a.logger.error("BracketAnimation -- no xmark video!"), le.add((() => {
                                    const e = q ? "finalsLoss" : "currentLose",
                                        t = R(pe, S.css, e, Q);
                                    S.set("hasBracketAnim", !0), this._anims.push(t);
                                    const n = ne ? d : q ? m : g;
                                    this._anims.push(B(n))
                                }), 0), a.logger.trace("BracketAnimation -- loss prevMatch newMatch", {
                                    isBracketLayerTransitionLoss: ne,
                                    prevMatch: S,
                                    newMatch: T
                                }), ne) {
                                le.add((() => {
                                    const e = {
                                        durationMs: 1270,
                                        easing: (0, i.default)(1, 0, 0, 1)
                                    };
                                    this._bracketLayoutCommands.setIsLosersBracket(T.get("highestPossiblePosition"), {
                                        isInstant: !1,
                                        verticalDuration: 1530,
                                        easing: "cubic-bezier(0.66, 0, 0, 1)"
                                    }), this._bracketLayoutCommands.setTargetRound(T.get("round"), e)
                                }), 4.47), le.add((() => this._bracketLayoutCommands.clearRound1Offset()), 6.4);
                                me(ee ? this._$elements.losers2 : this._$elements.losers, 6.2);
                                const e = {
                                    fudgeWidth: 6,
                                    isEog: !0
                                };
                                {
                                    let t = this._bracketLayoutCommands.createPlayerBracketConnectorLine(S, !0, e);
                                    t.get(0).classList.add("debug-anim-winners-dashed");
                                    let n = P(t, {
                                        stroke: "#fff",
                                        "stroke-width": 1
                                    }, !1);
                                    if (n) {
                                        const e = a.Util.cubicBezier(.1, 0, .71, 1);
                                        le.to(n, 1.03, {
                                            "stroke-dashoffset": 0,
                                            ease: e
                                        }, 3.07)
                                    }
                                    if (t = this._bracketLayoutCommands.createPlayerBracketConnectorLine(S, !0, e), t.get(0).classList.add("debug-anim-winners-yellow"), n = P(t, {
                                            stroke: w,
                                            "stroke-width": 4
                                        }, !1), n) {
                                        const e = a.Util.cubicBezier(.01, 0, .41, 1);
                                        le.to(n, .9, {
                                            "stroke-dashoffset": 0,
                                            ease: e
                                        }, 4.47)
                                    }
                                    const s = this._bracketLayoutCommands.createPlayerBracketConnectorLine(W, !1, {
                                        isEog: !0
                                    });
                                    if (s.get(0).classList.add("debug-anim-losers"), n = P(s, {
                                            stroke: w,
                                            "stroke-width": 4
                                        }, !1), n) {
                                        let e = a.Util.cubicBezier(.77, -.02, .99, 1);
                                        le.to(n, .73, {
                                            "stroke-dashoffset": 0,
                                            ease: e
                                        }, 5.37), e = a.Util.cubicBezier(.7, 0, .99, 1), le.to(n, 1.03, {
                                            "stroke-dashoffset": -n.getTotalLength(),
                                            ease: e
                                        }, 5.43)
                                    }
                                }
                            } else T && (me(pe, 3), ue());
                            a.logger.trace("BracketAnimation -- finished setting up LOSS timelines")
                        } else a.logger.warning("BracketAnimation -- trying to play animation with no win or loss...?"), r();
                        oe.add((() => {
                            a.logger.trace("BracketAnimation -- complete!"), this.cleanup()
                        }), o), oe.getChildren().length > 0 ? (oe.play(), this._timeline = oe) : (y("unable to find an animation to play"), a.logger.error("unable to find an animation to play"))
                    })))).catch((e => (a.logger.error("BracketAnimation -- ***ERROR*** ", e), r(), !1)))
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = 1.6,
                i = 42,
                o = [{
                    x: 0,
                    y: -42,
                    usePixelOffsetY: !0
                }, {
                    x: -1.6,
                    y: i,
                    usePixelOffsetY: !0
                }, {
                    x: s,
                    y: i,
                    usePixelOffsetY: !0
                }, {
                    x: -1.6,
                    y: -42,
                    usePixelOffsetY: !0
                }, {
                    x: -1.6,
                    y: i,
                    usePixelOffsetY: !0
                }, {
                    x: s,
                    y: -42,
                    usePixelOffsetY: !0
                }, {
                    x: s,
                    y: i,
                    usePixelOffsetY: !0
                }],
                r = [{
                    x: 0,
                    y: 0
                }, {
                    x: -1.6,
                    y: 0
                }, {
                    x: s,
                    y: 0
                }, {
                    x: -1.6,
                    y: -84,
                    usePixelOffsetY: !0
                }, {
                    x: -1.6,
                    y: 84,
                    usePixelOffsetY: !0
                }, {
                    x: s,
                    y: -84,
                    usePixelOffsetY: !0
                }, {
                    x: s,
                    y: 84,
                    usePixelOffsetY: !0
                }, {
                    x: -1.6,
                    y: -42,
                    usePixelOffsetY: !0
                }, {
                    x: -1.6,
                    y: i,
                    usePixelOffsetY: !0
                }, {
                    x: -1.6,
                    y: -42,
                    usePixelOffsetY: !0
                }, {
                    x: -1.6,
                    y: i,
                    usePixelOffsetY: !0
                }, {
                    x: s,
                    y: -42,
                    usePixelOffsetY: !0
                }, {
                    x: s,
                    y: i,
                    usePixelOffsetY: !0
                }, {
                    x: s,
                    y: -42,
                    usePixelOffsetY: !0
                }, {
                    x: s,
                    y: i,
                    usePixelOffsetY: !0
                }],
                l = [16, 8, 4],
                c = {
                    2: r,
                    4: o,
                    8: o,
                    16: r
                };

            function d(e, t) {
                const n = {};
                for (let e = 0; e < t.length; ++e) {
                    const a = Math.floor(Math.log2(e + 1));
                    n[a] = n[a] || [], n[a].push(t[e])
                }
                for (const e of Object.keys(n)) {
                    const t = n[e];
                    if (t.length <= 1) continue;
                    const a = t.length / 2;
                    for (let e = 0; e < a; ++e) {
                        const n = t[e];
                        t[e] = t[e + a], t[e + a] = n
                    }
                }
                return a._.flatMap(n, (e => e))
            }
            for (const e of Object.keys(c))
                if (a._.includes(l, parseInt(e))) {
                    const t = a._.cloneDeep(c[e]);
                    c[e + "_flipped"] = d(0, t)
                } var m = {
                get: (e, t) => t && a._.includes(l, e) ? c[e + "_flipped"] : c[e]
            };
            t.default = m
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<svg class="bracket-line" viewBox="' + c(typeof(i = null != (i = n.viewbox || (null != t ? t.viewbox : t)) ? i : r) === l ? i.call(o, {
                        name: "viewbox",
                        hash: {},
                        data: s
                    }) : i) + '" preserveAspectRatio="none" shape-rendering="crispEdges">\r\n  <path stroke="#fff" fill="transparent" vector-effect="non-scaling-stroke" d="' + c(typeof(i = null != (i = n.d || (null != t ? t.d : t)) ? i : r) === l ? i.call(o, {
                        name: "d",
                        hash: {},
                        data: s
                    }) : i) + '"></path>\r\n</svg>\r\n'
                },
                useData: !0
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<svg class="bracket-line dashed" viewBox="' + c(typeof(i = null != (i = n.viewbox || (null != t ? t.viewbox : t)) ? i : r) === l ? i.call(o, {
                        name: "viewbox",
                        hash: {},
                        data: s
                    }) : i) + '" preserveAspectRatio="none" shape-rendering="crispEdges">\r\n  <path stroke="#fff" fill="transparent" vector-effect="non-scaling-stroke" stroke-dasharray="4,6"\r\n        stroke-dashoffset="6" d="' + c(typeof(i = null != (i = n.d || (null != t ? t.d : t)) ? i : r) === l ? i.call(o, {
                        name: "d",
                        hash: {},
                        data: s
                    }) : i) + '"></path>\r\n</svg>\r\n'
                },
                useData: !0
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<svg class="bracket-line connector" viewBox="' + c(typeof(i = null != (i = n.viewbox || (null != t ? t.viewbox : t)) ? i : r) === l ? i.call(o, {
                        name: "viewbox",
                        hash: {},
                        data: s
                    }) : i) + '" preserveAspectRatio="none" shape-rendering="crispEdges">\r\n  <path stroke="#fff" stroke-width="2" fill="transparent" vector-effect="non-scaling-stroke" d="' + c(typeof(i = null != (i = n.d || (null != t ? t.d : t)) ? i : r) === l ? i.call(o, {
                        name: "d",
                        hash: {},
                        data: s
                    }) : i) + '"></path>\r\n</svg>\r\n'
                },
                useData: !0
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<svg class="bracket-line connector" viewBox="' + c(typeof(i = null != (i = n.viewbox || (null != t ? t.viewbox : t)) ? i : r) === l ? i.call(o, {
                        name: "viewbox",
                        hash: {},
                        data: s
                    }) : i) + '" preserveAspectRatio="none" shape-rendering="crispEdges">\r\n  <path stroke="#fff" stroke-width="2" fill="transparent" vector-effect="non-scaling-stroke" stroke-dasharray="4,6"\r\n  stroke-dashoffset="6" d="' + c(typeof(i = null != (i = n.d || (null != t ? t.d : t)) ? i : r) === l ? i.call(o, {
                        name: "d",
                        hash: {},
                        data: s
                    }) : i) + '"></path>\r\n</svg>\r\n'
                },
                useData: !0
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i;
                    return '<div id="match-timer-gameid-' + e.escapeExpression("function" == typeof(i = null != (i = n.gameId || (null != t ? t.gameId : t)) ? i : n.helperMissing) ? i.call(null != t ? t : e.nullContext || {}, {
                        name: "gameId",
                        hash: {},
                        data: s
                    }) : i) + '" class="clash-game-timer"></div>'
                },
                useData: !0
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "nKPxVZMj",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\bracket-components\\\\bracket-layout-16\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\bracket-components\\\\bracket-layout-16\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\bracket-components\\\\bracket-layout-16\\\\index.js\\" "],["text","\\n"],["append",["unknown",["bracketObserver"]],false],["text","\\n"],["append",["unknown",["selectedBracketObserver"]],false],["text","\\n"],["append",["unknown",["targetRoundObserver"]],false],["text","\\n\\n"],["open-element","span",[]],["dynamic-attr","debug-bracket-id",["concat",[["unknown",["currentBracket","id"]]]]],["flush-element"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","bracket-layout-overflow-wrapper"],["flush-element"],["text","\\n"],["text","\\n"],["text","  "],["open-element","div",[]],["static-attr","class","visible-area winners"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","fade-top-bot-wrapper"],["flush-element"],["text","\\n"],["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",["bracket-content winners ",["helper",["if"],[["get",["isEog"]],"start-hidden"],null]]]],["dynamic-attr","style",["unknown",["winnersBracketContentStyle"]],null],["flush-element"],["text","\\n"],["text","        "],["open-element","div",[]],["static-attr","class","timers-wrapper winners"],["flush-element"],["text","\\n        "],["close-element"],["text","\\n"],["text","        "],["open-element","div",[]],["static-attr","class","lines-wrapper winners"],["flush-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","matches-wrapper"],["flush-element"],["text","\\n"],["block",["each"],[["get",["winnersContainerMatches"]]],[["key"],["id"]],5],["text","        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["static-attr","class","visible-area losers"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","fade-top-bot-wrapper"],["flush-element"],["text","\\n"],["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",["bracket-content losers ",["helper",["if"],[["get",["isEog"]],"start-hidden"],null]]]],["dynamic-attr","style",["unknown",["losersBracketContentStyle"]],null],["flush-element"],["text","\\n"],["text","        "],["open-element","div",[]],["static-attr","class","timers-wrapper losers"],["flush-element"],["text","\\n        "],["close-element"],["text","\\n"],["text","        "],["open-element","div",[]],["static-attr","class","lines-wrapper losers"],["flush-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","matches-wrapper"],["flush-element"],["text","\\n"],["block",["each"],[["get",["losersContainerMatches"]]],[["key"],["id"]],4],["text","\\n"],["block",["each"],[["get",["r2losersContainerMatches"]]],[["key"],["id"]],3],["text","        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["static-attr","class","visible-area losers2"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","fade-top-bot-wrapper"],["flush-element"],["text","\\n"],["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",["bracket-content losers2 ",["helper",["if"],[["get",["isEog"]],"start-hidden"],null]]]],["dynamic-attr","style",["unknown",["losersBracketContentStyle"]],null],["flush-element"],["text","\\n"],["text","        "],["open-element","div",[]],["static-attr","class","timers-wrapper losers2"],["flush-element"],["text","\\n        "],["close-element"],["text","\\n"],["text","        "],["open-element","div",[]],["static-attr","class","lines-wrapper losers2"],["flush-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","matches-wrapper"],["flush-element"],["text","\\n"],["block",["each"],[["get",["doubleLosersContainerMatches"]]],[["key"],["id"]],2],["text","        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n\\n"],["block",["if"],[["get",["isInteractive"]]],null,1,0],["text","\\n"],["close-element"],["text"," "],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","clash-bracket-win-mark-video-container"],["flush-element"],["text","\\n  "],["open-element","lol-uikit-video",[]],["static-attr","class","clash-bracket-win-mark-video win"],["static-attr","fade-in","0"],["static-attr","fade-out","0"],["static-attr","src","/fe/lol-clash/assets/animations/videos/brackets/checkMark_large_blue.webm"],["static-attr","preload",""],["flush-element"],["close-element"],["text","\\n  "],["open-element","lol-uikit-video",[]],["static-attr","class","clash-bracket-win-mark-video loss"],["static-attr","fade-in","0"],["static-attr","fade-out","0"],["static-attr","src","/fe/lol-clash/assets/animations/videos/brackets/xMark_large.webm"],["static-attr","preload",""],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","\\n    "],["open-element","div",[]],["static-attr","class","interactivity-blocker"],["flush-element"],["close-element"],["text","\\n\\n"]],"locals":[]},{"statements":[["text","\\n"],["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["bracket-button-wrapper winners ",["helper",["if"],[["get",["isUpButtonHidden"]],"hidden"],null]]]],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","bracket-button-vertical"],["flush-element"],["text","\\n\\n        "],["append",["helper",["generic-button"],null,[["baseImgPath","overImgPath","downImgPath","disabledImgPath","isEnabled","onHoverSound","onClickSound","onClick"],["/fe/lol-clash/assets/images/buttons/button-uparrow.png","/fe/lol-clash/assets/images/buttons/button-uparrow-over.png","/fe/lol-clash/assets/images/buttons/button-uparrow-down.png","/fe/lol-clash/assets/images/buttons/button-uparrow-disabled.png",true,"button-circlegold-hover","button-circlegold-click",["helper",["action"],[["get",[null]],"scrollBracketUp"],null]]]],false],["text","\\n\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["bracket-button-wrapper losers ",["helper",["if"],[["get",["isDownButtonHidden"]],"hidden"],null]]]],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","bracket-button-vertical"],["flush-element"],["text","\\n\\n        "],["append",["helper",["generic-button"],null,[["baseImgPath","overImgPath","downImgPath","disabledImgPath","isEnabled","onHoverSound","onClickSound","onClick"],["/fe/lol-clash/assets/images/buttons/button-downarrow.png","/fe/lol-clash/assets/images/buttons/button-downarrow-over.png","/fe/lol-clash/assets/images/buttons/button-downarrow-down.png","/fe/lol-clash/assets/images/buttons/button-downarrow-disabled.png",true,"button-circlegold-hover","button-circlegold-click",["helper",["action"],[["get",[null]],"scrollBracketDown"],null]]]],false],["text","\\n\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","match losers"],["dynamic-attr","match-id",["concat",[["unknown",["match","id"]]]]],["flush-element"],["text","\\n              "],["append",["helper",["bracket-match"],null,[["match","localPlayerRosterId"],[["get",["match"]],["get",["localPlayerRosterId"]]]]],false],["text","\\n            "],["close-element"],["text","\\n"]],"locals":["match"]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","match losers"],["dynamic-attr","match-id",["concat",[["unknown",["match","id"]]]]],["flush-element"],["text","\\n              "],["append",["helper",["bracket-match"],null,[["match","localPlayerRosterId"],[["get",["match"]],["get",["localPlayerRosterId"]]]]],false],["text","\\n            "],["close-element"],["text","\\n"]],"locals":["match"]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","match losers"],["dynamic-attr","match-id",["concat",[["unknown",["match","id"]]]]],["flush-element"],["text","\\n              "],["append",["helper",["bracket-match"],null,[["match","localPlayerRosterId"],[["get",["match"]],["get",["localPlayerRosterId"]]]]],false],["text","\\n            "],["close-element"],["text","\\n"]],"locals":["match"]},{"statements":[["text","            "],["append",["helper",["bracket-match"],null,[["match","localPlayerRosterId"],[["get",["match"]],["get",["localPlayerRosterId"]]]]],false],["text","\\n"]],"locals":["match"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9);
            n(194), e.exports = a.Ember.Component.extend({
                classNames: ["clash-bracket-match"],
                classNameBindings: ["isLocal:is-local", "showAsFinals:finals", "hasRoster:has-roster", "match.hasBracketAnim:hidden"],
                layout: n(195),
                summonerService: a.Ember.inject.service("summoner"),
                clashService: a.Ember.inject.service("clash"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                match: null,
                localPlayerRosterId: null,
                isNotEog: a.Ember.computed.not("match.isEog"),
                showAsFinals: a.Ember.computed.and("match.isFinals", "isNotEog"),
                matchObserver: a.Ember.on("didInsertElement", a.Ember.computed("match.calculatedCss", (function() {
                    const e = this.get("match.calculatedCss") || [];
                    this.$().css(e)
                }))),
                isLocal: a.Ember.computed("localPlayerRosterId", "match.rosterId1", "match.rosterId2", (function() {
                    const e = String(this.get("localPlayerRosterId"));
                    if (!e || e === s.INVALID_ROSTER_ID) return !1;
                    const t = String(this.get("match.rosterId1")),
                        n = String(this.get("match.rosterId2"));
                    return e === t || e === n
                })),
                shouldIndicateLocalRoster: a.Ember.computed("isLocal", "match.status", (function() {
                    const e = this.get("isLocal"),
                        t = this.get("match.status") === s.MatchStatus.COMPLETED;
                    return e && !t
                })),
                leftRoster: a.Ember.computed("localPlayerRosterId", "match.rosterId1", "match.rosterId2", (function() {
                    const e = this.get("localPlayerRosterId"),
                        t = this.get("match.rosterId1"),
                        n = this.get("match.rosterId2");
                    return String(e) === String(n) ? (this.set("leftRosterId", n), this.get("match.roster2")) : (this.set("leftRosterId", t), this.get("match.roster1"))
                })),
                rightRoster: a.Ember.computed("localPlayerRosterId", "match.rosterId1", "match.rosterId2", (function() {
                    const e = this.get("localPlayerRosterId"),
                        t = this.get("match.rosterId1"),
                        n = this.get("match.rosterId2");
                    return String(e) === String(n) ? (this.set("rightRosterId", t), this.get("match.roster1")) : (this.set("rightRosterId", n), this.get("match.roster2"))
                })),
                hasRoster: a.Ember.computed.and("leftRoster", "rightRoster"),
                hasWinner: a.Ember.computed.alias("match.hasWinner"),
                isNotLocal: a.Ember.computed.not("isLocal"),
                canSpectate: a.Ember.computed.and("match.isFinals", "isNotLocal"),
                isLeftRosterWinner: a.Ember.computed("leftRoster.rosterId", "match.hasWinner", "match.winnerId", (function() {
                    return this._isRosterWinner(this.get("leftRoster.rosterId"))
                })),
                isRightRosterWinner: a.Ember.computed("rightRoster.rosterId", "match.hasWinner", "match.winnerId", (function() {
                    return this._isRosterWinner(this.get("rightRoster.rosterId"))
                })),
                isLeftRosterReplaced: a.Ember.computed("match.failRosterStatus", (function() {
                    return this._isRosterReplaced(this.get("match.failRosterStatus"), this.get("leftRoster.rosterId") || 0)
                })),
                isRightRosterReplaced: a.Ember.computed("match.failRosterStatus", (function() {
                    return this._isRosterReplaced(this.get("match.failRosterStatus"), this.get("rightRoster.rosterId") || 0)
                })),
                wasLeftRosterReplaced: a.Ember.computed("match.failRosterStatus", (function() {
                    return this._wasRosterReplaced(this.get("match.failRosterStatus"), this.get("leftRoster.rosterId") || 0) && !this._isRosterLocal(this.get("leftRoster.rosterId"))
                })),
                wasRightRosterReplaced: a.Ember.computed("match.failRosterStatus", (function() {
                    return this._wasRosterReplaced(this.get("match.failRosterStatus"), this.get("rightRoster.rosterId") || 0) && !this._isRosterLocal(this.get("rightRoster.rosterId"))
                })),
                matchWidth: a.Ember.computed((function() {
                    return this.get("match").css ? this.get("match").css.width : 0
                })),
                matchHeight: a.Ember.computed((function() {
                    return this.get("match").css ? this.get("match").css.height : 0
                })),
                svgViewbox: a.Ember.computed("matchWidth", "matchHeight", (function() {
                    return `0 0 ${this.get("matchWidth")+2} ${this.get("matchHeight")+2}`
                })),
                _isRosterWinner(e) {
                    if (!this.get("match.hasWinner")) return !1;
                    return e === this.get("match.winnerId")
                },
                _isRosterLocal(e) {
                    return String(e) === String(this.get("localPlayerRosterId"))
                },
                _isRosterReplaced(e, t) {
                    if (!e) return !1;
                    return this.get("match.rosterId1") === t ? 1 === Number(e) || 3 === Number(e) : 2 === Number(e) || 3 === Number(e)
                },
                _wasRosterReplaced(e, t) {
                    if (!e) return !1;
                    return this.get("match.rosterId1") === t ? -1 === Number(e) || -3 === Number(e) : -2 === Number(e) || -3 === Number(e)
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "W8ahjrEl",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\bracket-components\\\\bracket-match\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\bracket-components\\\\bracket-match\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\bracket-components\\\\bracket-match\\\\index.js\\" "],["text","\\n"],["open-element","span",[]],["dynamic-attr","debug-match-id",["concat",[["unknown",["match","id"]]]]],["dynamic-attr","debug-match-order",["concat",[["unknown",["match","order"]]]]],["flush-element"],["close-element"],["text","\\n"],["append",["unknown",["matchObserver"]],false],["text","\\n\\n"],["block",["if"],[["get",["match","isFinals"]]],null,2],["text","\\n"],["open-element","div",[]],["static-attr","class","team-vs-team"],["flush-element"],["text","\\n  "],["open-element","svg",[]],["static-attr","class","lines"],["dynamic-attr","viewBox",["concat",[["unknown",["svgViewbox"]]]]],["static-attr","preserveAspectRatio","none"],["flush-element"],["text","\\n    "],["open-element","rect",[]],["static-attr","fill","transparent"],["static-attr","x","1"],["static-attr","y","1"],["dynamic-attr","width",["concat",[["unknown",["matchWidth"]]]]],["dynamic-attr","height",["concat",[["unknown",["matchHeight"]]]]],["static-attr","stroke","#fff"],["static-attr","vector-effect","non-scaling-stroke"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["append",["helper",["bracket-match-roster"],null,[["tournament","roster","rosterId","forfeitRosterId","hasWinner","isWinner","isLocal","isFinals","isLosersBracket","isReplaced","wasReplaced"],[["get",["tournament"]],["get",["leftRoster"]],["get",["leftRosterId"]],["get",["match","forfeitRosterId"]],["get",["hasWinner"]],["get",["isLeftRosterWinner"]],["get",["isLocal"]],["get",["match","isFinals"]],["get",["match","isLosersBracket"]],["get",["isLeftRosterReplaced"]],["get",["wasLeftRosterReplaced"]]]]],false],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","vs"],["flush-element"],["text","\\n"],["text","    "],["open-element","div",[]],["static-attr","class","vs-text"],["flush-element"],["text","vs"],["close-element"],["text","\\n    "],["open-element","svg",[]],["static-attr","class","vs-line"],["static-attr","viewBox","0 0 100 100"],["static-attr","preserveAspectRatio","none"],["flush-element"],["text","\\n      "],["open-element","path",[]],["static-attr","stroke","#fff"],["static-attr","fill","transparent"],["static-attr","vector-effect","non-scaling-stroke"],["static-attr","d","M50,0 L50,100"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","svg",[]],["static-attr","class","vs-box"],["static-attr","viewBox","0 0 100 100"],["flush-element"],["text","\\n"],["text","      "],["open-element","rect",[]],["static-attr","stroke","#fff"],["static-attr","fill","transparent"],["static-attr","stroke-opacity","0.5"],["static-attr","vector-effect","non-scaling-stroke"],["static-attr","width","70.71"],["static-attr","height","70.71"],["static-attr","transform","translate(50) rotate(45)"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","svg",[]],["static-attr","class","vs-line"],["static-attr","viewBox","0 0 100 100"],["static-attr","preserveAspectRatio","none"],["flush-element"],["text","\\n      "],["open-element","path",[]],["static-attr","stroke","#fff"],["static-attr","fill","transparent"],["static-attr","vector-effect","non-scaling-stroke"],["static-attr","d","M50,0 L50,100"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["append",["helper",["bracket-match-roster"],null,[["tournament","roster","rosterId","forfeitRosterId","hasWinner","isWinner","isMirrored","isLocal","isFinals","isLosersBracket","isReplaced","wasReplaced"],[["get",["tournament"]],["get",["rightRoster"]],["get",["rightRosterId"]],["get",["match","forfeitRosterId"]],["get",["hasWinner"]],["get",["isRightRosterWinner"]],true,false,["get",["match","isFinals"]],["get",["match","isLosersBracket"]],["get",["isRightRosterReplaced"]],["get",["wasRightRosterReplaced"]]]]],false],["text","\\n"],["close-element"],["text","\\n\\n"],["text","\\n"],["block",["if"],[["get",["shouldIndicateLocalRoster"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","local-player-indicator"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","img",[]],["static-attr","class","clash-bracket-match-magic"],["static-attr","src","/fe/lol-clash/assets/images/brackets/match-finals-bg-glow-01.png"],["flush-element"],["close-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-bracket-match-magic delayed"],["static-attr","src","/fe/lol-clash/assets/images/brackets/match-finals-bg-glow-02.png"],["flush-element"],["close-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-bracket-match-magic right delayed"],["static-attr","src","/fe/lol-clash/assets/images/brackets/match-finals-bg-glow-01.png"],["flush-element"],["close-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-bracket-match-magic right"],["static-attr","src","/fe/lol-clash/assets/images/brackets/match-finals-bg-glow-02.png"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-bracket-match-finals-circle-spinner"],["flush-element"],["append",["unknown",["dash-circle-spinner"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isNotEog"]]],null,1]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9);
            n(197), e.exports = a.Ember.Component.extend({
                telemetryService: a.Ember.inject.service("telemetry"),
                classNames: ["clash-bracket-match-roster"],
                classNameBindings: ["isLocal:local", "isFinals:finals", "hasAndIsWinner:winner", "isLoserOrForfeit:loser", "isMirrored:mirrored", "hasRoster:has-roster", "isReplaced:is-replaced", "wasReplaced:was-replaced"],
                layout: n(198),
                roster: null,
                rosterId: s.INVALID_ROSTER_ID,
                forfeitRosterId: s.INVALID_ROSTER_ID,
                hasWinner: !1,
                isWinner: null,
                isMirrored: !1,
                isLocal: !1,
                isFinals: !1,
                isLosersBracket: !1,
                isReplaced: !1,
                wasReplaced: !1,
                clashService: a.Ember.inject.service("clash"),
                gdsService: a.Ember.inject.service("gds"),
                isLoser: a.Ember.computed.not("isWinner"),
                hasAndIsWinner: a.Ember.computed.and("hasWinner", "isWinner"),
                hasAndIsNotWinner: a.Ember.computed.and("hasWinner", "isLoser"),
                isLoserOrForfeit: a.Ember.computed.or("hasAndIsNotWinner", "isForfeit"),
                hasRoster: a.Ember.computed.bool("roster"),
                isBye: a.Ember.computed.equal("rosterId", s.MATCH_ROSTER_BYE_ID),
                isTrophyBracket: a.Ember.computed.not("isLosersBracket"),
                isTrophyWinner: a.Ember.computed.and("hasAndIsWinner", "isFinals", "isTrophyBracket"),
                isFinalsLoser: a.Ember.computed.and("isLoserOrForfeit", "isFinals"),
                isForfeit: a.Ember.computed("rosterId", "forfeitRosterId", (function() {
                    const e = this.get("rosterId"),
                        t = this.get("forfeitRosterId");
                    return t !== s.INVALID_ROSTER_ID && e !== s.INVALID_ROSTER_ID && a.Util.compareRosterIds(e, t)
                })),
                status: a.Ember.computed("hasWinner", "isWinner", "isForfeit", (function() {
                    return this.get("isForfeit") ? "loser" : this.get("hasWinner") ? this.get("isWinner") ? "winner" : "loser" : ""
                })),
                rosterLogoPath: a.Ember.computed("roster", "roster.logo", "roster.logoColor", "gdsService.ready", (function() {
                    if (!this.get("gdsService.ready")) return "";
                    const e = this.get("roster.logo"),
                        t = this.get("roster.logoColor");
                    return this.get("gdsService").getLogoPath(e, t)
                })),
                _openScoutingPanel: function() {
                    const e = this.get("tournament"),
                        t = this.get("roster"),
                        n = this.get("roster.id"),
                        s = {
                            tournament: e,
                            roster: t
                        };
                    this.get("telemetryService").sendEvent("ScoutingEntered", {
                        rosterId: n,
                        source: "bracket-match-roster"
                    }), a.PrivateAPI._scoutTeam(s)
                },
                actions: {
                    onMouseEnter() {
                        a.AudioManager.playAudio("grid-hover")
                    },
                    onMouseDown() {
                        a.AudioManager.playAudio("grid-click")
                    },
                    onMouseClick() {
                        a.AudioManager.playAudio("grid-click-release"), this._openScoutingPanel()
                    },
                    openScouting() {
                        this._openScoutingPanel()
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "tYjFlw0A",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\bracket-components\\\\bracket-match\\\\bracket-match-roster\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\bracket-components\\\\bracket-match\\\\bracket-match-roster\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\bracket-components\\\\bracket-match\\\\bracket-match-roster\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["roster"]]],null,19,7]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n        "],["open-element","h6",[]],["flush-element"],["append",["unknown",["tra","clash_bracket_match_tbd_tooltip_header"]],false],["close-element"],["text","\\n        "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_bracket_match_tbd_tooltip_description"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\n  "],["open-element","div",[]],["static-attr","class","no-roster"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/brackets/roster-tbd.png"],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["bottom","system"]],0],["text","  "],["close-element"],["text","\\n\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n        "],["open-element","h6",[]],["flush-element"],["append",["unknown",["tra","clash_bracket_match_bye_tooltip_header"]],false],["close-element"],["text","\\n        "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_bracket_match_bye_tooltip_description"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["no-roster ",["helper",["if"],[["get",["isFinals"]],"finals"],null]]]],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/bye.png"],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["bottom","system"]],2],["text","  "],["close-element"],["text","\\n\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isBye"]]],null,3,1]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n        "],["open-element","h6",[]],["flush-element"],["append",["unknown",["tra","clash_bracket_match_replaced_tooltip_header"]],false],["close-element"],["text","\\n        "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_bracket_match_replaced_tooltip_description"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["roster-replaced ",["helper",["if"],[["get",["isFinals"]],"finals"],null]]]],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/roster-replaced.png"],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["bottom","system"]],5],["text","  "],["close-element"],["text","\\n\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isReplaced"]]],null,6,4]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n        "],["open-element","h6",[]],["flush-element"],["append",["unknown",["tra","clash_bracket_match_replaced_tooltip_header"]],false],["close-element"],["text","\\n        "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_bracket_match_was_replaced_tooltip_description"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["bottom","system"]],8]],"locals":[]},{"statements":[["text","            "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/xmark.png"],["flush-element"],["close-element"],["text","\\n          "]],"locals":[]},{"statements":[["text","            "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/xmark_small.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isFinalsLoser"]]],null,11,10]],"locals":[]},{"statements":[["text","            "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/checkmark_blue.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isWinner"]]],null,13,12]],"locals":[]},{"statements":[["text","            "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/placeholder/general/logo.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","tag-icon"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isTrophyWinner"]]],null,15,14],["text","        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","img",[]],["static-attr","class","bracket-match-glow"],["static-attr","src","/fe/lol-clash/assets/images/brackets/match-normal-glow.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","img",[]],["static-attr","class","bracket-match-glow"],["static-attr","src","/fe/lol-clash/assets/images/brackets/match-finals-glow.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","bracket-match-background"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isFinals"]]],null,18,17],["text","  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["roster-determined ",["helper",["if"],[["get",["isMirrored"]],"mirrored"],null]]]],["dynamic-attr","roster-id",["concat",[["helper",["if"],[["get",["roster"]],["get",["roster","id"]]],null]]]],["modifier",["action"],[["get",[null]],"onMouseEnter"],[["on"],["mouseEnter"]]],["modifier",["action"],[["get",[null]],"onMouseDown"],[["on"],["mouseDown"]]],["modifier",["action"],[["get",[null]],"onMouseClick"],[["on"],["click"]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["icon ",["unknown",["status"]]]]],["flush-element"],["text","\\n      "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["rosterLogoPath"]]]]],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["tag ",["unknown",["status"]]]]],["flush-element"],["text","\\n      "],["open-element","div",[]],["flush-element"],["text","\\n        "],["append",["unknown",["roster","shortName"]],false],["text","\\n      "],["close-element"],["text","\\n"],["block",["if"],[["get",["status"]]],null,16],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["wasReplaced"]]],null,9],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(200), e.exports = a.Ember.Component.extend({
                classNames: ["clash-dash-circle-spinner"],
                layout: n(201)
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "9Xj2Xk9K",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\dash-circle-spinner\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\dash-circle-spinner\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\dash-circle-spinner\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-dash-circle-spinner-dashes"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-dash-circle-spinner-inner-mask"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-dash-circle-spinner-inner"],["static-attr","src","/fe/lol-clash/assets/images/dash-circles/dash_circle.svg"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-dash-circle-spinner-dashes"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-dash-circle-spinner-outer-mask"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-dash-circle-spinner-outer"],["static-attr","src","/fe/lol-clash/assets/images/dash-circles/dash_circle.svg"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = r(n(2)),
                i = r(n(203)),
                o = r(n(204));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            n(205);
            const l = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                basePaths: {
                    gameflow: "/lol-gameflow"
                },
                boundProperties: {
                    isPlaymodeRestricted: {
                        path: "/lol-clash/v1/playmode-restricted",
                        default: !1
                    }
                }
            });

            function c(e) {
                return e.get("members").map((e => e.summonerId))
            }
            e.exports = a.Ember.Component.extend(l, {
                classNames: ["clash-spectate-button"],
                layout: n(206),
                clashService: a.Ember.inject.service("clash"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                spectatorService: a.Ember.inject.service("spectator"),
                summonerService: a.Ember.inject.service("summoner"),
                isPlaymodeUnrestricted: a.Ember.computed.not("isPlaymodeRestricted"),
                isMatchStarted: a.Ember.computed.equal("matchStatus", "STARTED"),
                isGameStarted: a.Ember.computed.gt("gameStartTime", 0),
                isAbleToSpectate: a.Ember.computed.and("spectatorService.isSpectateEnabled", "isPlaymodeUnrestricted", "isMatchStarted", "isGameStarted"),
                isVisible: a.Ember.computed.alias("isAbleToSpectate"),
                fullRoster1: a.Ember.computed("isAbleToSpectate", "rosterId1", (function() {
                    return this._makeFullRoster("rosterId1")
                })),
                fullRoster2: a.Ember.computed("isAbleToSpectate", "rosterId2", (function() {
                    return this._makeFullRoster("rosterId2")
                })),
                _makeFullRoster(e) {
                    if (!this.get("isAbleToSpectate")) return null;
                    const t = this.get(e);
                    if (t) {
                        const n = `_cachedRoster_${e}`,
                            s = this.get(n);
                        if (s && s.rosterId === t) return a.logger.trace("spectate-button: returning cached full roster for key %s rosterId %o", {
                            key: e,
                            rosterId: t
                        }), s;
                        a.logger.trace("spectate-button: making full roster for key %s rosterId %o", {
                            key: e,
                            rosterId: t
                        });
                        const o = i.default.create({
                            rosterId: t
                        });
                        return this.set(n, o), o
                    }
                    return a.logger.trace("spectate-button: failed to make full roster, no ID found for key: %s", e), null
                },
                elapsedTimeMs: a.Ember.computed("gameStartTime", (function() {
                    const e = this.get("gameStartTime");
                    if (!a._.isFinite(e) || e <= 0) return -1;
                    const t = Date.now() - e;
                    return t <= 0 || t > 72e5 ? -1 : t
                })),
                elapsedTimeText: a.Ember.computed("elapsedTimeMs", (function() {
                    const e = this.get("elapsedTimeMs");
                    return -1 === e ? "" : o.default.formatMilliseconds(e)
                })),
                _elapsedTimeTicker: a.Ember.on("didInsertElement", (function() {
                    const e = setInterval(function() {
                        this.notifyPropertyChange("elapsedTimeMs")
                    }.bind(this), 1e3);
                    this.on("willDestroyElement", (function() {
                        clearInterval(e)
                    }))
                })),
                launchingSpectator: !1,
                actions: {
                    spectate() {
                        if (this.get("launchingSpectator")) return void a.logger.warning("spectate-button: spectate action called but we are already determining spectator name");
                        if (!this.get("isAbleToSpectate")) return void a.logger.trace("spectate-button: not able to spectate");
                        const e = ["fullRoster1", "fullRoster2"].map((e => this.get(e)));
                        if (a._.some(e, a._.isNil)) return void a.logger.trace("spectate-button: full roster missing");
                        this.set("launchingSpectator", !0);
                        const t = s.default.rejectAfter(15e3, "Timed out"),
                            n = e.map((e => s.default.waitForEmber(e, "roster.members.[]", (() => !a._.isEmpty(e.get("members"))))));
                        a.logger.trace("spectate-button: waiting for rosters to get their lists of members"), Promise.race([t, Promise.all(n).then((() => {
                            if (t.settled) throw new Error("Timed out");
                            const n = a._.flatten(e.map(c));
                            if (0 === n.length) throw new Error("Rosters empty");
                            return a.logger.trace("spectate-button: getting summoner names for IDs: %o", n), this.get("summonerService").getSummonerNames(n)
                        })).then((e => {
                            if (t.settled) throw new Error("Timed out");
                            if (!a._.isArray(e) || 0 === e.length) throw a.logger.trace("spectate-button: summoner names: %o", e), new Error("No summoner names found");
                            return a.logger.trace("spectate-button: checking spectatability for summoner names: %o", e), this.get("spectatorService").getSummonersAvailableForWatching(e.map((e => e.displayName))).then((e => a._.get(e, "availableForWatching"))).then((t => function(e, t) {
                                return t.filter((t => e.contains(t.displayName)))
                            }(t, e)))
                        })).then((e => {
                            if (t.settled) throw new Error("Timed out");
                            if (!a._.isArray(e) || 0 === e.length) return a.logger.error("spectate-button: cannot spectate any summoners in the match"), void a.ModalManager.add({
                                type: "DialogAlert",
                                data: {
                                    contents: this.get("tra.clash_spectate_try_again_dialog_text"),
                                    okText: this.get("tra.clash_spectate_failure_dialog_ok_button")
                                },
                                owner: this.get("element")
                            });
                            a.logger.trace("spectate-button: spectatable summoners: %o", e);
                            const n = e[0];
                            return a.logger.trace("spectate-button: launching spectator for summoner: %s", n), this.get("spectatorService").launchSpectator(n.displayName, n.puuid)
                        }))]).catch((e => {
                            n.forEach((e => e.cancel())), a.logger.error("spectate-button: failed to spectate: %o", e), a.ModalManager.add({
                                type: "DialogAlert",
                                data: {
                                    contents: this.get("tra.clash_spectate_failure_dialog_text"),
                                    okText: this.get("tra.clash_spectate_failure_dialog_ok_button")
                                },
                                owner: this.get("element")
                            })
                        })).finally((() => {
                            this.set("launchingSpectator", !1)
                        }))
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(92)) && a.__esModule ? a : {
                    default: a
                };
            const o = (0, s.emberDataBinding)({
                Ember: s.Ember,
                websocket: (0, s.getProvider)().getSocket(),
                boundProperties: {
                    roster: {
                        path: "/lol-clash/v1/roster/{{rosterId}}",
                        default: {
                            name: "",
                            shortName: "",
                            id: "",
                            tournamentId: "",
                            iconId: 0,
                            members: [],
                            captainSummonerId: "",
                            tier: -1,
                            isRegistered: !1,
                            isActiveInCurrentPhase: !1,
                            currentBracketWins: 0,
                            numCompletedPeriods: 0,
                            points: 0,
                            withdraw: {},
                            availableLogos: null,
                            _initialize: null
                        },
                        objectTypes: i.default.getObjectBindingTypes()
                    }
                }
            });
            e.exports = s.Ember.Object.extend(o, {
                onInit: s.Ember.on("init", (function() {
                    this.get("roster")
                })),
                tournamentId: s.Ember.computed.alias("roster.tournamentId"),
                id: s.Ember.computed("roster.id", (function() {
                    const e = this.get("roster.id"),
                        t = Number(e);
                    return Number.isNaN(t) ? e : t
                })),
                invitationId: s.Ember.computed.alias("roster.invitationId"),
                name: s.Ember.computed.alias("roster.name"),
                shortName: s.Ember.computed.alias("roster.shortName"),
                iconId: s.Ember.computed.alias("roster.iconId"),
                chromaId: s.Ember.computed.alias("roster.iconColorId"),
                logoId: s.Ember.computed.alias("roster.iconId"),
                logoColorId: s.Ember.computed.alias("roster.iconColorId"),
                rosterOwnedLogos: s.Ember.computed.alias("roster.availableLogos"),
                members: s.Ember.computed.alias("roster.members"),
                captainId: s.Ember.computed.alias("roster.captainSummonerId"),
                tier: s.Ember.computed.alias("roster.tier"),
                isRegistered: s.Ember.computed.alias("roster.isRegistered"),
                isActiveInCurrentPhase: s.Ember.computed.alias("roster.isActiveInCurrentPhase"),
                isCurrentBracketComplete: s.Ember.computed.alias("roster.isCurrentBracketComplete"),
                currentBracketWins: s.Ember.computed.alias("roster.currentBracketWins"),
                numCompletedPeriods: s.Ember.computed.alias("roster.numCompletedPeriods"),
                points: s.Ember.computed.alias("roster.points"),
                isEliminated: s.Ember.computed.alias("roster.isEliminated"),
                withdraw: s.Ember.computed.alias("roster.withdraw"),
                phaseInfos: s.Ember.computed.alias("roster.phaseInfos"),
                suggestedInvites: s.Ember.computed.alias("roster.suggestedInvites"),
                highTierVariance: s.Ember.computed.alias("roster.highTierVariance"),
                isNotRegistered: s.Ember.computed.alias("roster.isNotRegistered"),
                requiresBuyin: s.Ember.computed.alias("roster.requiresBuyin"),
                captain: s.Ember.computed.alias("roster.captain"),
                localPlayerMember: s.Ember.computed.alias("roster.localPlayerMember"),
                isRosterFull: s.Ember.computed.alias("roster.isRosterFull"),
                aggregatedWithdrawVotes: s.Ember.computed.alias("roster.aggregatedWithdrawVotes"),
                lft: s.Ember.computed.alias("roster.lft"),
                hasVoted() {
                    this._callOnBase("hasVoted", arguments)
                },
                getMemberById() {
                    this._callOnBase("getMemberById", arguments)
                },
                isWithdrawVoteInProgress() {
                    this._callOnBase("isWithdrawVoteInProgress", arguments)
                },
                _callOnBase(e, t) {
                    const n = this.get("roster");
                    n && e && n[e] && "function" == typeof n[n] && n[e](...t)
                }
            })
        }, e => {
            "use strict";
            e.exports = {
                formatSeconds: function(e) {
                    return this.formatMilliseconds(1e3 * e)
                },
                formatMilliseconds: function(e) {
                    e = e || 0;
                    const t = Math.floor(e / 60 / 60 / 1e3).toString();
                    let n = Math.floor(e / 60 / 1e3 % 60).toString();
                    const a = ("0" + Math.floor(e / 1e3 % 60).toString()).slice(-2);
                    return t > 0 && (n = ("0" + n).slice(-2)), (t > 0 ? t + ":" : "") + n + ":" + a
                }
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "4A6T0Ieo",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\spectate-button\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\spectate-button\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\spectate-button\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","button-and-spinner"],["flush-element"],["text","\\n  "],["open-element","lol-uikit-flat-button-secondary",[]],["static-attr","class","spectate-watch-now"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"spectate"],null],null],["dynamic-attr","disabled",["unknown",["launchingSpectator"]],null],["flush-element"],["text","\\n    "],["append",["unknown",["tra","clash_spectate_watch_now"]],false],["text"," "],["open-element","div",[]],["static-attr","class","spectate-red-dot"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["block",["if"],[["get",["launchingSpectator"]]],null,0],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","spectate-timer"],["flush-element"],["append",["unknown",["elapsedTimeText"]],false],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["append",["helper",["uikit-spinner"],null,[["class","width","height"],["spectate-loading-spinner","32px","32px"]]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-persistence-root"],
                layout: n(208),
                clashApi: null,
                shared: null,
                setSocialPanelComponent: null
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "yQRo1ZMz",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\persistence-root\\\\layout.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\persistence-root\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","id","clash-event-observer"],["flush-element"],["text","\\n  "],["append",["unknown",["clash-event-observer"]],false],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","id","clash-social-panel-component"],["flush-element"],["text","\\n  "],["append",["helper",["social-persistent"],null,[["clashApi","shared","setSocialPanelComponent"],[["get",["clashApi"]],["get",["shared"]],["get",["setSocialPanelComponent"]]]]],false],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            e.exports = a.Ember.Service.extend({
                genericAssetsComputed: a.GameDataGeneric.genericAssetsComputed,
                ready: a.Ember.computed.bool("genericAssetsComputed.ready"),
                getLogoPath: (e, t) => a.GameDataGeneric.getLogoPath(e, t)
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            const s = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                logPrefix: "service:summoner",
                basePaths: {
                    summoner: "/lol-summoner"
                }
            });
            e.exports = a.Ember.Service.extend(s, {
                getSummoner: function(e) {
                    const t = `/v1/summoners/${e}`;
                    return this.get("api.summoner").get(t)
                },
                getSummonerNames: function(e) {
                    const t = JSON.stringify(e);
                    return this.get("api.summoner").get(`/v2/summoner-names?ids=${t}`)
                },
                getSummonerByName: function(e) {
                    const t = `/v1/summoners?name=${e=encodeURIComponent(e)}`;
                    return this.get("api.summoner").get(t)
                },
                getSummonersByIds: function(e = "") {
                    const t = `/v2/summoners?ids=[${e}]`;
                    return this.get("api.summoner").get(t)
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            const s = (0, a.emberDataBinding)({
                    Ember: a.Ember,
                    websocket: (0, a.getProvider)().getSocket(),
                    basePaths: {
                        platform: "/lol-platform-config",
                        settings: "/lol-settings"
                    },
                    boundProperties: {
                        clashTutorial: {
                            api: "settings",
                            path: "/v1/account/clash-tutorial",
                            default: void 0
                        },
                        clashTutorialEnabled: {
                            api: "platform",
                            path: "/v1/namespaces/ClashConfig/TutorialEnabled",
                            default: !1
                        }
                    }
                }),
                i = Object.freeze({
                    captainRosterScreenTutorialFlow: [{
                        name: "rosterDetailsModalNameTagStep",
                        showSteps: !0
                    }, {
                        name: "rosterDetailsModalLogoStep",
                        showSteps: !0
                    }],
                    memberRosterScreenTutorialFlow: [{
                        name: "memberJoinTeamStep",
                        showSteps: !1
                    }],
                    memberTutorialFlow: [{
                        name: "memberTicketStep",
                        showSteps: !0
                    }, {
                        name: "memberRewardStep",
                        showSteps: !1
                    }, {
                        name: "memberRoleStep",
                        showSteps: !0
                    }, {
                        name: "memberLockinStep",
                        showSteps: !0
                    }],
                    captainTutorialFlow: [{
                        name: "captainTicketStep",
                        showSteps: !0
                    }, {
                        name: "captainRewardStep",
                        showSteps: !1
                    }, {
                        name: "captainRoleStep",
                        showSteps: !0
                    }, {
                        name: "captainInviteStep",
                        showSteps: !0
                    }, {
                        name: "captainLockinStep",
                        showSteps: !0
                    }],
                    smsTutorialFlow: [{
                        name: "smsButtonStep",
                        showSteps: !1
                    }]
                }),
                o = ["captainRosterScreenTutorialFlow", "captainTutorialFlow"],
                r = ["memberTutorialFlow"],
                l = n(212),
                c = n(213),
                d = n(214);
            e.exports = a.Ember.Service.extend(s, {
                onInit: a.Ember.on("init", (function() {
                    this._postClashTutorialUpdate("initialized", !0)
                })),
                captainRosterScreenTutorialFlow: a.Ember.computed("clashTutorial.data.version", (function() {
                    return this.get("clashTutorial.data") ? this.getCurrentTutorialStep("captainRosterScreenTutorialFlow") : null
                })),
                memberRosterScreenTutorialFlow: a.Ember.computed("clashTutorial.data.version", (function() {
                    return this.get("clashTutorial.data") ? this.getCurrentTutorialStep("memberRosterScreenTutorialFlow") : null
                })),
                memberTutorialFlow: a.Ember.computed("clashTutorial.data.version", (function() {
                    return this.get("clashTutorial.data") ? this.getCurrentTutorialStep("memberTutorialFlow") : null
                })),
                captainTutorialFlow: a.Ember.computed("clashTutorial.data.version", (function() {
                    return this.get("clashTutorial.data") ? this.getCurrentTutorialStep("captainTutorialFlow") : null
                })),
                smsTutorialFlow: a.Ember.computed("clashTutorial.data.version", (function() {
                    return this.get("clashTutorial.data") ? this.getCurrentTutorialStep("smsTutorialFlow") : null
                })),
                getCurrentTutorialStep(e) {
                    if (!this.get("clashTutorialEnabled")) return {};
                    const t = i[e];
                    if (!t || !t.length) return {};
                    for (let n = 0; n < t.length; n++)
                        if (!this.get(`clashTutorial.data.${t[n].name}`)) {
                            const a = this._calculateTutorialSteps(e, t[n].name);
                            return {
                                name: t[n].name,
                                showSteps: t[n].showSteps,
                                currentStep: a.currentStep,
                                totalSteps: a.totalSteps
                            }
                        } return {}
                },
                completeTutorialStep(e, t) {
                    const n = i[e];
                    if (!n) return;
                    const a = n.findIndex((e => e.name === t));
                    a < 0 || this._postClashTutorialUpdate(n[a].name, !0)
                },
                _calculateTutorialSteps(e, t) {
                    if (!e || !t) return {};
                    let n, a = [];
                    if (o.includes(e) ? n = o : r.includes(e) && (n = r), n)
                        for (let e = 0; e < n.length; e++) a = a.concat(i[n[e]]);
                    else a = i[e];
                    let s = 0,
                        l = 0;
                    for (let e = 0; e < a.length; e++) a[e].showSteps && l++, a[e].name === t && (s = l);
                    return {
                        currentStep: s,
                        totalSteps: l
                    }
                },
                _postClashTutorialUpdate(e, t) {
                    const n = {};
                    let a = this.get("clashTutorial.data.version") || 0;
                    e && t && (n[e] = t, n.version = ++a, this.get("api.settings").patch("/v1/account/clash-tutorial", {
                        data: n,
                        schemaVersion: 1
                    }))
                },
                completeAllClashTutorialFlows() {
                    for (const e in i) {
                        const t = i[e];
                        for (let e = 0; e < t.length; e++) this._postClashTutorialUpdate(t[e].name, !0)
                    }
                },
                resetClashTutorialFlow() {
                    this.get("api.settings").post("/v1/account/clash-tutorial", {
                        data: {},
                        schemaVersion: 1
                    })
                },
                createContextualNotificationBlockElement(e, t) {
                    const n = (t.showSteps ? l : c)({
                        title: e.formatString(`clash_tutorial_tooltip_${t.name}_title`, {}),
                        description: e.formatString(`clash_tutorial_tooltip_${t.name}_description`, {}),
                        currentStep: t.currentStep,
                        totalSteps: t.totalSteps
                    });
                    return a.Util.createDomNode(n)
                },
                createIndependentNotificationElement(e, t, n) {
                    const s = d({
                        title: e.formatString(`clash_tutorial_tooltip_${t.name}_title`, {}),
                        description: e.formatString(`clash_tutorial_tooltip_${t.name}_description`, {}),
                        currentStep: t.currentStep,
                        totalSteps: t.totalSteps,
                        topOffset: n
                    });
                    return a.Util.createDomNode(s)
                }
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<lol-uikit-content-block style="padding-bottom:18px" type="dialog-small">\r\n  <h4>' + c(typeof(i = null != (i = n.title || (null != t ? t.title : t)) ? i : r) === l ? i.call(o, {
                        name: "title",
                        hash: {},
                        data: s
                    }) : i) + '</h4>\r\n  <hr class="heading-spacer" />\r\n  <p>' + c(typeof(i = null != (i = n.description || (null != t ? t.description : t)) ? i : r) === l ? i.call(o, {
                        name: "description",
                        hash: {},
                        data: s
                    }) : i) + '</p>\r\n  <h5 style="color: #785a28">' + c(typeof(i = null != (i = n.currentStep || (null != t ? t.currentStep : t)) ? i : r) === l ? i.call(o, {
                        name: "currentStep",
                        hash: {},
                        data: s
                    }) : i) + " / " + c(typeof(i = null != (i = n.totalSteps || (null != t ? t.totalSteps : t)) ? i : r) === l ? i.call(o, {
                        name: "totalSteps",
                        hash: {},
                        data: s
                    }) : i) + "</h5>\r\n</lol-uikit-content-block>\r\n"
                },
                useData: !0
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<lol-uikit-content-block style="padding-bottom:18px" type="dialog-small">\r\n  <h4>' + c(typeof(i = null != (i = n.title || (null != t ? t.title : t)) ? i : r) === l ? i.call(o, {
                        name: "title",
                        hash: {},
                        data: s
                    }) : i) + '</h4>\r\n  <hr class="heading-spacer" />\r\n  <p>' + c(typeof(i = null != (i = n.description || (null != t ? t.description : t)) ? i : r) === l ? i.call(o, {
                        name: "description",
                        hash: {},
                        data: s
                    }) : i) + "</p>\r\n</lol-uikit-content-block>"
                },
                useData: !0
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<lol-uikit-flyout-frame id="tutorial-notification-container" orientation="right" dismissable="false" \r\n  style="position:absolute;top:' + c(typeof(i = null != (i = n.topOffset || (null != t ? t.topOffset : t)) ? i : r) === l ? i.call(o, {
                        name: "topOffset",
                        hash: {},
                        data: s
                    }) : i) + 'px;right:-325px">\r\n  <lol-uikit-content-block style="padding-bottom:18px" type="dialog-small">\r\n    <h4>' + c(typeof(i = null != (i = n.title || (null != t ? t.title : t)) ? i : r) === l ? i.call(o, {
                        name: "title",
                        hash: {},
                        data: s
                    }) : i) + '</h4>\r\n    <hr class="heading-spacer" />\r\n    <p>' + c(typeof(i = null != (i = n.description || (null != t ? t.description : t)) ? i : r) === l ? i.call(o, {
                        name: "description",
                        hash: {},
                        data: s
                    }) : i) + '</p>\r\n    <h5 style="color: #785a28">' + c(typeof(i = null != (i = n.currentStep || (null != t ? t.currentStep : t)) ? i : r) === l ? i.call(o, {
                        name: "currentStep",
                        hash: {},
                        data: s
                    }) : i) + " / " + c(typeof(i = null != (i = n.totalSteps || (null != t ? t.totalSteps : t)) ? i : r) === l ? i.call(o, {
                        name: "totalSteps",
                        hash: {},
                        data: s
                    }) : i) + "</h5>\r\n  </lol-uikit-content-block>\r\n</lol-uikit-flyout-frame>\r\n"
                },
                useData: !0
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(216);
            var s = n(9),
                i = l(n(11)),
                o = l(n(44)),
                r = l(n(217));

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const c = "clash",
                d = "BRACKET_STATUS_COMPLETE_TOURNAMENT_OVER",
                m = n(218),
                u = n(219),
                p = n(220),
                h = ["UPDATE_TOURNAMENT", "CANCEL_TOURNAMENT", "CANCEL_PERIOD", "ADD_PHASE", "UPDATE_PHASE", "REVERT_PHASE", "CR_TOURNAMENT_LOCK_IN_OPEN", "CR_TOURNAMENT_REGISTRATION_OPEN"],
                g = (0, a.emberDataBinding)({
                    Ember: a.Ember,
                    websocket: (0, a.getProvider)().getSocket(),
                    basePaths: {
                        platform: "/lol-platform-config",
                        endofgame: "/lol-end-of-game",
                        clash: "/lol-clash",
                        processControl: "/process-control"
                    },
                    boundProperties: {
                        session: "/lol-login/v1/session",
                        summoner: "/lol-summoner/v1/current-summoner",
                        preEndOfGame: "/lol-pre-end-of-game/v1/currentSequenceEvent",
                        gameFlow: "/lol-gameflow/v1/session",
                        clashQueueIds: {
                            api: "platform",
                            path: "/v1/namespaces/ClashConfig/ClashQueueIds",
                            default: [700, 701, 720, 721]
                        },
                        isMissedLockinModalEnabled: {
                            api: "platform",
                            path: "/v1/namespaces/ClashConfig/IsMissedLockinModalEnabled",
                            default: !0
                        },
                        eogPlayerUpdate: {
                            api: "clash",
                            path: "/v1/eog-player-update",
                            default: {
                                grantedLootItems: {}
                            }
                        },
                        eogGameEnd: {
                            api: "clash",
                            path: "/v1/game-end",
                            default: {}
                        },
                        notificationPrompt: {
                            api: "clash",
                            path: "/v1/notifications"
                        },
                        eogTesting: {
                            api: "clash",
                            path: "/v1/eog-test"
                        },
                        simpleStateFlags: {
                            api: "clash",
                            path: "/v1/simple-state-flags",
                            default: []
                        },
                        isEndOfGameFlowEnabled: {
                            path: "/lol-platform-config/v1/namespaces/ClashConfig/EndOfGameFlowEnabled",
                            default: !0
                        },
                        regionLocale: "/riotclient/region-locale",
                        cancelledTournamentIds: "/lol-clash/v1/tournament/cancelled",
                        playmodeRestrictedInfo: {
                            path: "/lol-clash/v2/playmode-restricted",
                            default: {
                                isRestricted: !1,
                                tournamentId: s.INVALID_TOURNAMENT_ID
                            }
                        }
                    }
                });
            const f = [];

            function _(e, t) {
                const n = new Date(e),
                    a = {
                        hour: "numeric",
                        minute: "numeric"
                    };
                return function(e) {
                    return (new Date).toLocaleDateString() === new Date(e).toLocaleDateString()
                }(e) || (a.year = "numeric", a.month = "numeric", a.day = "numeric"), n.toLocaleString(t, a)
            }
            e.exports = a.Ember.Component.extend(g, {
                classNames: ["clash-event-observer"],
                layout: n(221),
                localSummonerId: a.Ember.computed.alias("summoner.summonerId"),
                tournamentId: a.Ember.computed.alias("eogPlayerUpdate.tournamentId"),
                earnedVp: a.Ember.computed.alias("eogPlayerUpdate.earnedVp"),
                themeVp: a.Ember.computed.alias("eogPlayerUpdate.themeVp"),
                seasonVp: a.Ember.computed.alias("eogPlayerUpdate.seasonVp"),
                queueId: a.Ember.computed.alias("gameFlow.gameData.queue.id"),
                previousSequenceName: null,
                playerNotificationsInitialized: !1,
                eogTestingObserver: a.Ember.observer("eogTesting", (function() {
                    this.get("eogTesting") && this._triggerEndOfGameFlow()
                })),
                platformConfigObserver: a.Ember.observer("session", "session.state", (function() {
                    if (function(e) {
                            return !e || "SUCCEEDED" !== e.state
                        }(this.get("session"))) return;
                    (0, a.dataBinding)("/lol-pre-end-of-game").post(`v1/registration/${c}/3`);
                    this.get("playerNotificationsInitialized") || (this._initPlayerNotificationsPlugin(), this.set("playerNotificationsInitialized", !0))
                })),
                preEndOfGameObserver: a.Ember.on("init", a.Ember.observer("preEndOfGame.name", (function() {
                    a.Ember.run.once(this, "_handlePreEndOfGameSequence")
                }))),
                scoreboardObserver: a.Ember.computed("gameFlow", "gameFlow.phase", "gameFlow.gameData.gameId", (function() {
                    const e = this.get("queueId"),
                        t = this.get("gameFlow.phase"),
                        n = this.get("clashQueueIds");
                    if ("EndOfGame" === t && e && n && n.includes(e)) {
                        const e = this.get("gameFlow.gameData.gameId");
                        this._overrideEOGPlayAgainButton(e)
                    }
                })),
                eogUpdateObserver: a.Ember.computed("eogPlayerUpdate", "eogGameEnd", "eogPlayerUpdate.tournamentId", "eogGameEnd.tournamentId", (function() {
                    this.get("api.clash").get("/v1/awaiting-resent-eog", {
                        skipCache: !0
                    }).then((e => {
                        if (!e) return;
                        const t = this.get("eogPlayerUpdate"),
                            n = this.get("eogGameEnd"),
                            i = e => e && a.Util.isNumberOk(e.tournamentId) && e.tournamentId !== s.INVALID_TOURNAMENT_ID;
                        i(t) && i(n) && (a.logger.trace("received eog notification outside of normal flow eogPlayer/eogGameEnd", {
                            eogPlayerUpdate: t,
                            eogGameEnd: n
                        }), this._triggerEndOfGameFlow())
                    }), (() => null))
                })),
                inGameTournamentIdObserver: a.Ember.computed("playmodeRestrictedInfo.tournamentId", (function() {
                    const e = this.get("currentInGameTournamentId");
                    e !== s.INVALID_TOURNAMENT_ID && (this.set("previousInGameTournamentId", e), a.logger.trace("clash-event-observer -- previousInGameTournamentId", e));
                    const t = this.get("playmodeRestrictedInfo.tournamentId");
                    this.set("currentInGameTournamentId", t), a.logger.trace("clash-event-observer -- currentInGameTournamentId", t)
                })),
                notificationPromptObserver: a.Ember.computed("notificationPrompt.notification.titleKey", (function() {
                    const e = this.get("notificationPrompt.notification");
                    e && e.titleKey && (this._handleClashNotification(e, !0), this.get("api.clash").post("/v1/notifications/acknowledge"))
                })),
                simpleStateFlagsObserver: a.Ember.computed("simpleStateFlags.[]", (function() {
                    const e = this.get("simpleStateFlags");
                    for (const t of e) t.status !== s.SimpleStateStatus.ACKNOWLEDGED && (t.id.startsWith("missedlockin") || t.id.startsWith("missedflight")) && this._handleMissedLockin(t.id)
                })),
                scoutingFlowObserver: a.Ember.observer("gameFlow.phase", (function() {
                    const e = this.get("gameFlow.phase"),
                        t = this.get("queuedScoutingFlow");
                    a.Ember.run.once((() => {
                        !a.Util.isGameflowInGame(e) && t && (t(), this.set("queuedScoutingFlow", null))
                    }))
                })),
                _handlePreEndOfGameSequence() {
                    const e = this.get("previousSequenceName"),
                        t = this.get("preEndOfGame.name"),
                        n = this.get("queueId"),
                        s = this.get("clashQueueIds");
                    t === c && e !== c && (a.Util.isNumberOk(n) && s && s.includes(n) ? (a.logger.trace("clash-event-observer -- _triggerEndOfGameFlow via preEndOfGameSequence"), this._triggerEndOfGameFlow(!0)) : (a.logger.trace("clash-event-observer -- skipping _triggerEndOfGameFlow"), this._completePreEogSequenceCallback())), this.set("previousSequenceName", t)
                },
                _triggerEndOfGameFlow(e = !1, t = !1) {
                    this.get("isEndOfGameFlowEnabled") && (i.default.disablePopups(), a.logger.trace("clash-event-observer -- _triggerEndOfGameFlow, isPreEog?", e), r.default.addEntryToAnimationQueue({
                        name: r.default.Anim.EogFlow,
                        play: () => {
                            if (this.get("_eogModal")) return;
                            let n;
                            n = a.ModalManager.add({
                                type: "TournamentEndOfGameFlow",
                                data: {
                                    closeModalCallback: () => {
                                        a.logger.trace("clash-event-observer -- _triggerEndOfGameFlow closed"), a.ModalManager.remove(n), a.Util.destroyEmberApp(n), n = null, this.set("_eogModal", null), this.get("api.clash").post("/v1/game-end/acknowledge"), this.get("api.clash").post("/v1/eog-player-update/acknowledge"), this._completePreEogSequenceCallback(), i.default.enablePopups()
                                    },
                                    isPreEog: e,
                                    isWithdraw: t
                                },
                                show: !0,
                                ComponentFactory: a.componentFactory
                            }), this.set("_eogModal", n)
                        }
                    }))
                },
                _triggerScoutingIntroFlow(e, t, n) {
                    const s = this.get("cancelledTournamentIds");
                    a._.includes(s, e) ? a.logger.trace("clash-event-observer -- _triggerScoutingIntroFlow IGNORED because tournament is cancelled") : (a.logger.trace("clash-event-observer -- _triggerScoutingIntroFlow"), r.default.addEntryToAnimationQueue({
                        name: r.default.Anim.ScoutingIntro,
                        play: () => {
                            if (this.get("_scoutingIntroComponent")) return;
                            let s;
                            s = a.ModalManager.add({
                                type: "ClashScoutingIntroFlow",
                                data: {
                                    closeModalCallback: () => {
                                        a.ModalManager.remove(s), a.Util.destroyEmberApp(s), s = null, this.set("_scoutingIntroComponent", null)
                                    },
                                    tournamentId: e,
                                    bracketId: t,
                                    isFirstRound: "true" === n
                                },
                                show: !0,
                                ComponentFactory: a.componentFactory
                            }), this.set("_scoutingIntroComponent", s)
                        }
                    }))
                },
                _overrideEOGPlayAgainButton(e) {
                    a.Postgame.setGameSpecificPlayAgainOverride(e, this.get("tra.clash_tournament_back_to_tournaments"), this._backToTournamentsCallback.bind(this))
                },
                _backToTournamentsCallback: function() {
                    this.get("api.endofgame").post("/v1/state/dismiss-stats").then((() => {
                        a.Ember.run.later((() => {
                            a.PrivateAPI.forceAllowNav(), a.PrivateAPI.open()
                        }), 500)
                    }))
                },
                _completePreEogSequenceCallback: function() {
                    a.logger.trace("posting to pre-end-of-game complete url"), (0, a.dataBinding)("/lol-pre-end-of-game").post(`/v1/complete/${c}`)
                },
                _initPlayerNotificationsPlugin() {
                    a.Social.playerNotifications().registerToastRenderer("clash", (e => {
                        a.logger.trace("displaying player-notification", e);
                        const t = document.createElement("div"),
                            n = this._extractLoc(e),
                            s = {};
                        s.title = this.get("tra").formatString(`clash_notification_title_${n.locKey}`, n.params), s.description = this.get("tra").formatString(`clash_notification_description_${n.locKey}`, n.params), s.iconUrl = n.params.iconUrl ? n.params.iconUrl : `/fe/lol-clash/assets/images/toast-icons/icon_${n.locKey}.png`, s.noIcon = n.params.noIcon;
                        return a.Ember.$(t).empty().append(a.Util.createDomNode(m(s))), t
                    })), a.Social.playerNotifications().on("clash", "notification", "toast", this._handleClashNotification.bind(this))
                },
                _handleClashNotification(e, t = !1) {
                    if (!e || !e.data || !e.data.reason) return;
                    const n = this._extractLoc(e);
                    switch (a.logger.trace("clash-event-observer -- notification", e), a.logger.trace("clash-event-observer -- extracted loc", n), h.find((t => e.data.reason.includes(t))) && a.PrivateAPI.showAlert(!0), e.data.reason) {
                        case "BYE_AUTO_WIN":
                        case "QUEUE_DODGE":
                        case "RESTRICTION_AUTO_WIN":
                        case "GAME_END_ERROR": {
                            const t = t => e.created && t.created === e.created && t.data.reason === e.data.reason;
                            if (f.find(t)) break;
                            f.push(e), a.logger.trace("clash-event-observer -- _triggerEndOfGameFlow via notification, reason:", e.data.reason), this._triggerEndOfGameFlow()
                        }
                        break;
                        case "WITHDRAW":
                            "true" !== e.data.isStillCompeting && (a.logger.trace("clash-event-observer -- _triggerEndOfGameFlow via notification, reason:", e.data.reason), this._triggerEndOfGameFlow(!1, !0));
                            break;
                        case "BRACKET_READY":
                            r.default.setBracketReadyReceived(e.data.bracketId);
                            break;
                        case "INVITE":
                        case "RESENT_INVITE":
                            a.AudioManager.playAudio("notification-invite")
                    }
                    t && ("GAME_SCHEDULED" === e.data.reason ? this._handleScoutingIntroFlow(e) : "true" === e.data.isHighTierVariance ? this._handleHighTierVarianceModal() : "ROSTER_DELETE" === e.data.reason ? this._showForceRestartModal(n.locKey, n.params) : this._showClashNotificationModal(n.locKey, n.params))
                },
                _handleScoutingIntroFlow(e) {
                    if ("true" === e.data.isTournamentOver) return;
                    if ("true" === e.data.isBracketComplete) return void o.default.setShowOverviewPageOnce(!0);
                    const {
                        tournamentId: t
                    } = e.data, {
                        bracketId: n
                    } = e.data;
                    a.logger.trace(`clash-event-observer -- received ${e.data.reason} notification for tournament ${t} bracket ${n}`);
                    if ("true" === e.data.isLocalRosterEliminated) a.logger.trace("clash-event-observer -- not triggering scouting modal cause we are eliminated");
                    else {
                        const s = this.get("gameFlow.phase");
                        if (a.Util.isGameflowInGame(s)) return void this.set("queuedScoutingFlow", (() => {
                            this._triggerScoutingIntroFlow(t, n, e.data.isFirstRound)
                        }));
                        this.set("queuedScoutingFlow", null), this._triggerScoutingIntroFlow(t, n, e.data.isFirstRound)
                    }
                },
                _handleHighTierVarianceModal() {
                    a.logger.trace("roster has high tier variance, showing dialog...");
                    const e = this.get("tra.clash_high_tier_variance_title"),
                        t = this.get("tra.clash_high_tier_variance_description");
                    a.ModalManager.add({
                        type: "DialogAlert",
                        data: {
                            contents: a.UIKit.getTemplateHelper().contentBlockDialog(e, t),
                            okText: this.get("tra.lib_ui_dialog_alert_ok"),
                            dismissible: !1
                        }
                    })
                },
                _handleMissedLockin(e = "") {
                    this.get("api.clash").post(`/v1/simple-state-flags/${e}/acknowledge`);
                    const t = {
                            reason: "MissedLockin",
                            details: e
                        },
                        n = a.PrivateAPI.getCurrentRosterId(),
                        o = this.get("localSummonerId");
                    n ? this.get("api.clash").get(`/v1/roster/${n}`).then((e => {
                        if (e) {
                            const n = e.members || [];
                            Object.assign(t, n.reduce(((e, t) => (e[t.state] = (e[t.state] || 0) + 1, e)), {}));
                            const a = n.find((t => t.summonerId === e.captainSummonerId));
                            a && (t.captainLockedIn = a.state === s.RosterMemberState.READY);
                            const i = n.find((e => e.summonerId === o));
                            i && (t.summonerLockedIn = i.state === s.RosterMemberState.READY)
                        }
                        a.PrivateAPI.sendClientState(t)
                    }), (e => {
                        t.error = e.toString(), a.PrivateAPI.sendClientState(t)
                    })) : a.PrivateAPI.sendClientState(t);
                    if (!this.get("isMissedLockinModalEnabled")) return;
                    const r = this.get("gameFlow.phase");
                    if (a.Util.isGameflowInGame(r)) return;
                    const l = e.split("_");
                    if (5 !== l.length) return;
                    const c = parseInt(l[2]),
                        d = parseInt(l[4]);
                    if (!a.Util.isNumberOk(c) || !a.Util.isNumberOk(d)) return;
                    a.logger.trace("displaying missed lockin, id", e), i.default.disablePopups();
                    const m = a.componentFactory.create("MissedLockinModal", {
                            tournamentId: c,
                            phaseId: d
                        }),
                        u = () => i.default.enablePopups();
                    return a.ModalManager.add({
                        type: "DialogAlert",
                        data: {
                            contents: m.domNode,
                            okText: this.get("tra.clash_missed_lockin_modal_button_text"),
                            dismissible: !1
                        }
                    }).okPromise.then(u, u)
                },
                _extractLoc(e) {
                    let t = e.data.reason;
                    const n = {},
                        i = (this.get("regionLocale.locale") || "en_US").replace("_", "-");
                    switch (e.data.reason) {
                        case "KICK":
                            "true" === e.data.isPlayerRemoved && (t = "KICK_SELF");
                            break;
                        case "BRACKET_READY":
                            "true" === e.data.isNextMatchABye && (t = "BRACKET_STATUS_NEXT_MATCH_BYE");
                            break;
                        case "ROUND_COMPLETE":
                            t = d;
                            break;
                        case "WITHDRAW":
                            t = "true" === e.data.isWinner ? "WITHDRAW_OPPONENT" : "WITHDRAW_SELF";
                            break;
                        case "CANCEL_PERIOD_lastperiod": {
                            const t = parseInt(e.data.newPhaseLockinTimestamp, 10);
                            n.newTime = _(t, i)
                        }
                        break;
                        case "ADD_PHASE": {
                            const t = parseInt(e.data.newPhaseLockinTimestamp, 10);
                            n.newTime = _(t, i)
                        }
                        break;
                        case "UPDATE_PHASE": {
                            const t = parseInt(e.data.stepNewTime, 10);
                            n.stepName = this.get("tra.clash_notification_step_name_" + e.data.stepType), n.newTime = _(t, i)
                        }
                        break;
                        case "REVERT_PHASE_from_lockin": {
                            const t = parseInt(e.data.newPhaseLockinTimestamp, 10);
                            n.newTime = _(t, i)
                        }
                        break;
                        case "CR_TOURNAMENT_LOCK_IN_OPEN": {
                            const t = parseInt(e.data.msUntilPhaseStart, 10);
                            n.minutesUntilPhaseStart = Math.round(t / 1e3 / 60)
                        }
                        break;
                        case "CAPTAIN_LEAVE":
                            e.data.isNewCaptain && (t = "CAPTAIN_LEAVE_SELF_PROMOTED");
                            break;
                        case "GAME_START_RETRY":
                        case "GAME_START_RETRY_SUMMONERS":
                        case "GAME_START_RETRY_OPPONENT":
                        case "GAME_START_FAILED":
                        case "GAME_START_FAILED_SUMMONERS":
                        case "GAME_START_FAILED_OPPONENT":
                            n.noIcon = !0, n.currentRetry = e.data.currentRetry, n.maxRetry = e.data.maxRetry, n.retrySeconds = e.data.retrySeconds, n.displayNames = e.data.displayNames
                    }
                    return e.data.iconId && e.data.iconId !== s.INVALID_LOGO_ID && e.data.iconColorId && e.data.iconColorId !== s.INVALID_LOGO_COLOR_ID && a.GameDataGeneric.getLogoPathPromise(e.data.iconId, e.data.iconColorId).then((e => {
                        n.iconUrl = e
                    })), n.playerName = e.data.sourcePlayer ? e.data.sourcePlayer : this.get("tra.clash_player_name_default"), n.targetName = e.data.targetPlayer ? e.data.targetPlayer : this.get("tra.clash_player_name_default"), n.tournamentName = a.Util.getLocIfExists(this.get("tra"), `clash_tournament_name_${e.data.tournamentName}`, "clash_tournament_name_default"), n.rosterName = e.data.rosterName ? e.data.rosterName : e.data.sourcePlayer, {
                        locKey: t,
                        params: n
                    }
                },
                _showClashNotificationModal(e, t) {
                    const n = this.get("gameFlow.phase");
                    a.Util.isGameflowInGame(n) && e !== d || e && a.ModalManager.add({
                        type: "DialogAlert",
                        data: {
                            contents: this._renderNotificationModal(u, e, t),
                            okText: this.get("tra.clash_button_notification_confirm"),
                            dismissible: !1
                        }
                    })
                },
                _renderNotificationModal(e, t, n) {
                    const s = a.Util.createDomNode(e({
                            title: this.get("tra").formatString(`clash_notification_title_${t}`, n),
                            content: this.get("tra").formatString(`clash_notification_description_${t}`, n)
                        })),
                        i = a.Ember.$(document.createElement("div"));
                    return i.append(s), i.get(0)
                },
                _showForceRestartModal() {
                    const e = this.get("gameFlow.phase");
                    if (a.Util.isGameflowInGame(e)) return;
                    const t = a.ModalManager.add({
                        type: "DialogAlert",
                        data: {
                            contents: this._renderRestartModal(p),
                            okText: this.get("tra.clash_restart_modal_button_text"),
                            dismissible: !1
                        }
                    });
                    t.okPromise.then((() => {
                        this._completeQuitTimer()
                    })), this.set("clientQuitModal", t), this._startClientPatchTimer()
                },
                _renderRestartModal(e) {
                    const t = a.Util.createDomNode(e({
                            title: this.get("tra.clash_notification_title_ROSTER_DELETE"),
                            content: ""
                        })),
                        n = a.Ember.$(document.createElement("div"));
                    return n.append(t), n.get(0)
                },
                _setClientRestartMessage(e) {
                    const t = this.get("tra").formatString("clash_notification_description_ROSTER_DELETE", {
                        seconds: e
                    });
                    a.Ember.$("#clash-restart-modal-time").text(t)
                },
                _startClientPatchTimer() {
                    this.set("clientPatchModalTimer", 15), this.clientQuitTimer = setInterval(function() {
                        this.get("clientPatchModalTimer") > 0 ? (this.set("clientPatchModalTimer", this.get("clientPatchModalTimer") - 1), this._setClientRestartMessage(this.get("clientPatchModalTimer"))) : this.get("clientQuitModal") && this._completeQuitTimer()
                    }.bind(this), 1e3)
                },
                _completeQuitTimer() {
                    clearInterval(this.clientQuitTimer), a.ModalManager.remove(this.get("clientQuitModal")), this.set("clientQuitModal", null), this._quitClient()
                },
                _quitClient() {
                    this.get("api.processControl").post("/v1/process/quit")
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = {};
            let i = null,
                o = [];
            const r = {};
            let l = [];
            const c = {};
            class d {
                constructor() {}
                static getOrCreateObjectProperty(e, t) {
                    return e[t] || (e[t] = {}), e[t]
                }
                static hasPlayedIntroForPhase(e, t) {
                    const n = s[e];
                    return !!n && n[t]
                }
                static setPlayedIntroForPhase(e, t) {
                    if (!e || !t) return;
                    d.getOrCreateObjectProperty(s, e)[t] = !0
                }
                static getIsAnimationInProgress() {
                    return null !== i
                }
                static playNextEntryInAnimationQueue() {
                    o.length > 0 && !i && (i = o.shift(), i && (a.logger.trace("lobby -- playing next", i.name), i && i.play()))
                }
                static addEntryToAnimationQueue(e) {
                    i && i.name === e.name || o.find((t => t.name === e.name)) ? a.logger.trace("lobby -- ignoring entry (already playing or in queue!):", e.name) : (a.logger.trace("lobby -- adding entry", e.name), o.push(e), d.playNextEntryInAnimationQueue())
                }
                static completeAnimation(e) {
                    i && i.name === e && (a.logger.trace("lobby -- anim complete", i.name), i = null), d.playNextEntryInAnimationQueue()
                }
                static clearAnimationQueue() {
                    o = []
                }
                static completeScoutingFlowForRound(e, t, n, s) {
                    if (a.logger.trace("lobby -- completeScoutingFlowForRound", {
                            tournamentId: e,
                            bracketId: t,
                            currentRound: n,
                            currentLoserRound: s
                        }), e < 0 || t < 0) return;
                    c[t] = !0;
                    const i = d.getOrCreateObjectProperty(r, e),
                        o = d.getOrCreateObjectProperty(i, t);
                    o.currentRound = n, o.currentLoserRound = s;
                    for (let e = 0; e < l.length; e++) l[e].callback();
                    l = []
                }
                static getScoutingFlowStateForRound(e, t) {
                    if (e < 0 || t < 0) return {};
                    const n = d.getOrCreateObjectProperty(r, e),
                        a = d.getOrCreateObjectProperty(n, t);
                    return {
                        currentLoserRound: a.currentLoserRound,
                        currentRound: a.currentRound
                    }
                }
                static addScoutingFlowStateObserver(e, t) {
                    !!l.find((t => t.id === e)) || l.push({
                        id: e,
                        callback: t
                    })
                }
                static hasReceivedBracketReady(e) {
                    return !!c[e]
                }
                static setBracketReadyReceived(e) {
                    a.logger.trace("lobby -- setBracketReadyReceived", e), c[e] = !0
                }
            }
            d.Anim = Object.freeze({
                EogFlow: "EogFlow",
                ScoutingIntro: "ScoutingIntro",
                LobbyIntro: "LobbyIntro"
            });
            var m = d;
            t.default = m
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                1: function(e, t, n, a, s) {
                    var i;
                    return '      <img class="clash-toast-notification-icon" src="' + e.escapeExpression("function" == typeof(i = null != (i = n.iconUrl || (null != t ? t.iconUrl : t)) ? i : n.helperMissing) ? i.call(null != t ? t : e.nullContext || {}, {
                        name: "iconUrl",
                        hash: {},
                        data: s
                    }) : i) + '"/>\r\n'
                },
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o, r = null != t ? t : e.nullContext || {},
                        l = n.helperMissing,
                        c = "function",
                        d = e.escapeExpression;
                    return '<div>\r\n  <div class="clash-toast-notification-background"></div>\r\n  <lol-uikit-content-block class="clash-toast-notification">\r\n    <div class="clash-toast-notification-content">\r\n      <div class="title">' + d(typeof(o = null != (o = n.title || (null != t ? t.title : t)) ? o : l) === c ? o.call(r, {
                        name: "title",
                        hash: {},
                        data: s
                    }) : o) + '</div>\r\n      <div class="description">' + d(typeof(o = null != (o = n.description || (null != t ? t.description : t)) ? o : l) === c ? o.call(r, {
                        name: "description",
                        hash: {},
                        data: s
                    }) : o) + "</div>\r\n    </div>\r\n" + (null != (i = n.unless.call(r, null != t ? t.noIcon : t, {
                        name: "unless",
                        hash: {},
                        fn: e.program(1, s, 0),
                        inverse: e.noop,
                        data: s
                    })) ? i : "") + "  </lol-uikit-content-block>  \r\n</div>\r\n"
                },
                useData: !0
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<lol-uikit-dialog-frame>\r\n  <lol-uikit-content-block type="dialog-small" class="clash-notification-modal">\r\n    <div class="clash-modal-title">' + c(typeof(i = null != (i = n.title || (null != t ? t.title : t)) ? i : r) === l ? i.call(o, {
                        name: "title",
                        hash: {},
                        data: s
                    }) : i) + '</div>\r\n    <div class="clash-modal-body">' + c(typeof(i = null != (i = n.content || (null != t ? t.content : t)) ? i : r) === l ? i.call(o, {
                        name: "content",
                        hash: {},
                        data: s
                    }) : i) + "</div>\r\n  </lol-uikit-content-block>\r\n</lol-uikit-dialog-frame>\r\n"
                },
                useData: !0
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<lol-uikit-dialog-frame>\r\n  <lol-uikit-content-block type="dialog-large" class="clash-notification-modal">\r\n    <div class="clash-modal-body">' + c(typeof(i = null != (i = n.title || (null != t ? t.title : t)) ? i : r) === l ? i.call(o, {
                        name: "title",
                        hash: {},
                        data: s
                    }) : i) + '</div>\r\n    <div class="clash-modal-body" id="clash-restart-modal-time">' + c(typeof(i = null != (i = n.content || (null != t ? t.content : t)) ? i : r) === l ? i.call(o, {
                        name: "content",
                        hash: {},
                        data: s
                    }) : i) + "</div>\r\n  </lol-uikit-content-block>\r\n</lol-uikit-dialog-frame>\r\n"
                },
                useData: !0
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "DHqdrLi3",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-event-observer\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-event-observer\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-event-observer\\\\index.js\\" "],["text","\\n"],["append",["unknown",["scoreboardObserver"]],false],["text","\\n"],["append",["unknown",["eogUpdateObserver"]],false],["text","\\n"],["append",["unknown",["notificationPromptObserver"]],false],["text","\\n"],["append",["unknown",["simpleStateFlagsObserver"]],false],["text","\\n"],["append",["unknown",["inGameTournamentIdObserver"]],false]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = n(9),
                o = (a = n(10)) && a.__esModule ? a : {
                    default: a
                };
            n(223);
            const r = (0, s.emberDataBinding)({
                Ember: s.Ember,
                websocket: (0, s.getProvider)().getSocket(),
                basePaths: {
                    clash: "/lol-clash"
                },
                boundProperties: {
                    playmodeRestrictedInfo: {
                        path: "/lol-clash/v2/playmode-restricted",
                        default: {
                            isRestricted: !1,
                            tournamentId: i.INVALID_TOURNAMENT_ID
                        }
                    },
                    allStateInfo: "/lol-clash/v1/tournament-state-info",
                    invitedRosterIds: {
                        path: "/lol-clash/v1/invited-roster-ids",
                        default: []
                    }
                }
            });
            e.exports = s.Ember.Component.extend(r, {
                classNames: ["clash-social-persistent"],
                layout: n(224),
                clashService: s.Ember.inject.service("clash"),
                localPlayer: s.Ember.computed.alias("clashService.localPlayer"),
                tournament: s.Ember.computed.alias("clashService.tournament"),
                roster: s.Ember.computed.alias("clashService.localPlayer.roster"),
                localPlayerState: s.Ember.computed.alias("localPlayer.state"),
                clashApi: null,
                shared: null,
                setSocialPanelComponent: null,
                didInsertElement() {
                    if (this._super(...arguments), !this.element) return;
                    const e = this.element,
                        t = this.get("setSocialPanelComponent");
                    t && (t(e), e.parentElement.removeChild(e))
                },
                hasTournament: s.Ember.computed.bool("tournament"),
                hasRoster: s.Ember.computed.bool("clashService.localPlayer.roster"),
                isScheduleInValidState: s.Ember.computed("tournament.state", "hasRoster", "playmodeRestrictedInfo.isRestricted", (function() {
                    const e = this.get("tournament.state"),
                        t = this.get("playmodeRestrictedInfo.isRestricted"),
                        n = this.get("hasRoster");
                    return e === o.default.Tournament.LOCK_IN && n || t && (e === o.default.Tournament.SCOUTING || e === o.default.Tournament.IN_GAME)
                })),
                isScheduleVisible: s.Ember.computed.and("hasTournament", "hasRoster", "isScheduleInValidState"),
                playmodeRestrictedObserver: s.Ember.computed("playmodeRestrictedInfo.isRestricted", "playmodeRestrictedInfo.tournamentId", "allStateInfo.@each.state", "shared.state.clashSelectedTournamentId", (function() {
                    const e = this.get("playmodeRestrictedInfo.isRestricted");
                    let t = i.INVALID_TOURNAMENT_ID;
                    if (e) t = this.get("playmodeRestrictedInfo.tournamentId");
                    else {
                        const e = this.get("shared.state.clashSelectedTournamentId"),
                            n = this.get("allStateInfo"),
                            a = s._.filter(n, (e => e.state === o.default.Tournament.LOCK_IN)).map((e => e.tournamentId));
                        a.indexOf(e) >= 0 ? (s.logger.trace("social-persistent -- selecting tournamentId selected on clash screen", e), t = e) : a.length > 0 && (t = a[0])
                    }
                    s.logger.trace("NOTE: following initialization is for social-persistent tournament-schedule!"), s.Util.isNumberOk(t) || (t = i.INVALID_TOURNAMENT_ID), this.get("clashService").setSelectedTournamentId(t)
                })),
                showNextState: s.Ember.computed("tournament.state", "isScheduleVisible", "invitedRosterIds.[]", (function() {
                    const e = this.get("isScheduleVisible"),
                        t = this.get("invitedRosterIds");
                    if (e || t.length) {
                        const e = this.get("tournament.state");
                        return e && (e === o.default.Tournament.IDLE || e === o.default.Tournament.LOCK_IN)
                    }
                    return !1
                })),
                nextStateHeader: s.Ember.computed("tournament.state", (function() {
                    const e = this.get("tournament.state");
                    if (!e) return "";
                    const t = this.get("tra"),
                        n = `clash_game_info_panel_next_state_header_${e}`;
                    return t.exists(n) ? t.get(n) : t.get("clash_game_info_panel_next_state_header")
                })),
                nextStateText: s.Ember.computed("tournament.state", "tournament.lockinStartTimeLocal", "localPlayer.nextMatch.roundStartTime", (function() {
                    const e = this.get("tournament.state");
                    if (!e) return "";
                    let t = "";
                    return e !== o.default.Tournament.IDLE ? this.get("tra.clash_game_info_panel_next_state_no_match") : (t = this.get("tournament.lockinStartTimeLocal"), this.get("tra").formatString(`clash_game_info_panel_next_state_${e}`, {
                        timestamp: t
                    }))
                })),
                yesVotesCount: s.Ember.computed("tournament", "roster", "roster.withdraw.voteWithdrawMembers.[]", (function() {
                    const e = this.get("roster.withdraw.voteWithdrawMembers");
                    return e ? e.length : 0
                })),
                isWithdrawPanelVisible: s.Ember.computed("tournament.state", "localPlayerState", (function() {
                    const e = this.get("tournament.state"),
                        t = this.get("localPlayerState"),
                        n = e === o.default.Tournament.SCOUTING || e === o.default.Tournament.LOCK_IN,
                        a = t === o.default.Player.REGISTERED_ROSTER || t === o.default.Player.BRACKET_ROSTER;
                    return !(!n || !a)
                })),
                showWithdrawPanel: s.Ember.computed("yesVotesCount", "isWithdrawPanelVisible", (function() {
                    return this.get("isWithdrawPanelVisible") && this.get("yesVotesCount") > 0
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "6NqKnGpj",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\social-persistent\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\social-persistent\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\social-persistent\\\\index.js\\" "],["text","\\n"],["append",["unknown",["playmodeRestrictedObserver"]],false],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-social-persistent-content"],["flush-element"],["text","\\n  "],["open-element","img",[]],["static-attr","class","clash-social-persistent-magic-bg"],["static-attr","src","/fe/lol-clash/assets/images/social-magic-bg.jpg"],["flush-element"],["close-element"],["text","\\n  "],["append",["helper",["tournament-schedule"],null,[["clashApi","shared","isVisible","isPlaymodeRestricted"],[["get",["clashApi"]],["get",["shared"]],["get",["isScheduleVisible"]],["get",["playmodeRestrictedInfo","isRestricted"]]]]],false],["text","\\n  "],["append",["helper",["tournament-invite-panel"],null,[["clashApi","shared","showSeparator","invitedRosterIds"],[["get",["clashApi"]],["get",["shared"]],["get",["isScheduleVisible"]],["get",["invitedRosterIds"]]]]],false],["text","\\n"],["block",["if"],[["get",["showNextState"]]],null,1],["block",["if"],[["get",["showWithdrawPanel"]]],null,0],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["append",["unknown",["withdraw-status-panel"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-social-persistent-next-state"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-social-persistent-next-state-header"],["flush-element"],["append",["unknown",["nextStateHeader"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-social-persistent-next-state-text"],["flush-element"],["append",["unknown",["nextStateText"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(226), e.exports = a.Ember.Component.extend({
                classNames: ["clash-section-header"],
                layout: n(227),
                headerText: "",
                isCollapsible: !1,
                pipCount: 0,
                isOpen: !1,
                actions: {
                    toggle() {
                        this.get("isCollapsible") && this.attrs.toggle && this.attrs.toggle()
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "hCRr3Nyn",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\section-header\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\section-header\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\section-header\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-section-header-content ",["helper",["if"],[["get",["isCollapsible"]],"tournament-arrow-hitbox"],null]]]],["modifier",["action"],[["get",[null]],"toggle"]],["flush-element"],["text","\\n"],["block",["if"],[["get",["isCollapsible"]]],null,0],["text","  "],["open-element","div",[]],["static-attr","class","clash-section-header-text"],["flush-element"],["append",["unknown",["headerText"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-section-header-pip-counter ",["helper",["if"],[["get",["isOpen"]],"is-section-open"],null]]]],["flush-element"],["append",["helper",["pip-counter"],null,[["pipCount"],[["get",["pipCount"]]]]],false],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-section-header-arrow-toggle"],["flush-element"],["text","\\n      "],["append",["helper",["arrow-toggle"],null,[["isOpen"],[["get",["isOpen"]]]]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = r(n(10)),
                i = r(n(229));
            n(230);
            var o = n(9);

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const l = n(231),
                c = (0, a.emberDataBinding)({
                    Ember: a.Ember,
                    websocket: (0, a.getProvider)().getSocket(),
                    basePaths: {
                        clash: "/lol-clash",
                        gameflow: "/lol-gameflow",
                        platform: "/lol-platform-config"
                    },
                    boundProperties: {
                        gameflowSession: "/lol-gameflow/v1/session",
                        withdrawGameStartBufferMs: {
                            api: "platform",
                            path: "/v1/namespaces/ClashConfig/WithdrawGameStartBufferMs",
                            default: 35e3
                        }
                    }
                });
            e.exports = a.Ember.Component.extend(c, {
                classNames: ["clash-tournament-schedule"],
                classNameBindings: ["isVisible:is-schedule-visible"],
                layout: n(232),
                isPlaymodeRestricted: !1,
                clashService: a.Ember.inject.service("clash"),
                gdsService: a.Ember.inject.service("gds"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                localPlayerState: a.Ember.computed.alias("localPlayer.state"),
                bracket: a.Ember.computed.alias("localPlayer.bracket"),
                roster: a.Ember.computed.alias("clashService.localPlayer.roster"),
                withdrawVotes: a.Ember.computed.alias("roster.aggregatedWithdrawVotes"),
                tournamentStateInfo: a.Ember.computed.alias("tournament.tournamentStateInfo"),
                phases: a.Ember.computed.alias("tournament.phases"),
                roundStartTime: a.Ember.computed.alias("localPlayer.nextMatch.roundStartTime"),
                isViewingClash: a.Ember.computed.alias("shared.state.isViewingClash"),
                isWithdrawEnabled: a.Ember.computed.alias("clashService.isWithdrawEnabled"),
                isWithdrawMatchmakingEnabled: a.Ember.computed.alias("clashService.isWithdrawMatchmakingEnabled"),
                isWithdrawAllowed: a.Ember.computed("localPlayer.nextMatch.roundStartTime", "clashService.withdrawGameStartBufferMs", "tournament.state", "bracket", "isWithdrawMatchmakingEnabled", {
                    get(e) {
                        const t = this.get("withdrawAllowedTimer");
                        t && (a.Ember.run.cancel(t), this.set("withdrawAllowedTimer", null));
                        const n = this.get("tournament.state"),
                            i = this.get("localPlayerState"),
                            o = n === s.default.Tournament.SCOUTING || n === s.default.Tournament.LOCK_IN,
                            r = i === s.default.Player.REGISTERED_ROSTER || i === s.default.Player.BRACKET_ROSTER;
                        if (!o || !r) return !1;
                        const l = this.get("isWithdrawMatchmakingEnabled");
                        if (n === s.default.Tournament.LOCK_IN && i === s.default.Player.REGISTERED_ROSTER) return l;
                        const c = this.get("localPlayer.nextMatch.roundStartTime") || -1;
                        if (c < 0) return !0;
                        const d = c - this.get("clashService.withdrawGameStartBufferMs") - this.get("clashService").getCurrentClashServerTime();
                        return d > 0 && (this.set("withdrawAllowedTimer", a.Ember.run.later((() => {
                            this.set("withdrawAllowedTimer", null), this.set("isWithdrawAllowed", !1)
                        }), d)), !0)
                    },
                    set: (e, t) => t
                }),
                isInMatchmaking: a.Ember.computed("tournament.state", "localPlayerState", (function() {
                    return this.get("tournament.state") === s.default.Tournament.LOCK_IN && this.get("localPlayerState") === s.default.Player.REGISTERED_ROSTER
                })),
                isGotoButtonVisible: a.Ember.computed("gameflowSession.phase", "isViewingClash", (function() {
                    if (this.get("isViewingClash")) return !1;
                    const e = this.get("gameflowSession.phase");
                    return !a.Util.isGameflowInGame(e)
                })),
                waitingForMatchToFinish: a.Ember.computed("tournament.state", "localPlayer.nextMatch", "localPlayer.nextMatch.rosterId1", "localPlayer.nextMatch.rosterId2", "localPlayer.nextMatch.failRosterStatus", "tournamentStateInfo.nextStateChangeTime", (function() {
                    const e = this.get("tournament.state");
                    if (s.default.Tournament.SCOUTING === e) {
                        if (this.get("localPlayer.nextMatch.isBye")) return !1;
                        return this.get("tournamentStateInfo.nextStateChangeTime") <= 0
                    }
                    return !1
                })),
                isInGame: a.Ember.computed("tournament.state", "gameflowSession.phase", (function() {
                    if (this.get("tournament.state") === s.default.Tournament.IN_GAME) {
                        const e = this.get("gameflowSession.phase");
                        return a.Util.isGameflowInGame(e)
                    }
                    return !1
                })),
                isInGamePhase: a.Ember.computed.equal("tournament.state", "IN_GAME"),
                isScoutingPhase: a.Ember.computed.equal("tournament.state", "SCOUTING"),
                isScoutingOrInGamePhase: a.Ember.computed.or("isInGamePhase", "isScoutingPhase"),
                logoPath: a.Ember.computed("roster", "roster.iconId", "roster.iconColorId", "gdsService.ready", (function() {
                    if (!this.get("gdsService.ready")) return "";
                    const e = this.get("roster.iconId"),
                        t = this.get("roster.iconColorId");
                    return this.get("gdsService").getLogoPath(e, t)
                })),
                showPendingEllipses: a.Ember.computed("isScoutingOrInGamePhase", "localPlayer.nextMatch.roundStartTime", "tournament.status", (function() {
                    const e = this.get("tournament.status"),
                        t = this.get("isScoutingPhase"),
                        n = this.get("isScoutingOrInGamePhase"),
                        s = this.get("localPlayer.nextMatch.roundStartTime"),
                        i = this.get("tournament");
                    return e !== o.TournamentStatus.PAUSED && e !== o.TournamentStatus.PRERESUME && (!(i && a.Util.isNumberOk(s) && s > 0 && t) && n)
                })),
                showTimer: a.Ember.computed("tournament.state", "tournament.phases.[]", "tournament.status", "waitingForMatchToFinish", "isInGame", (function() {
                    return this.get("tournament.status") !== o.TournamentStatus.PAUSED && !(this.get("waitingForMatchToFinish") || this.get("isInGame"))
                })),
                currentStateName: a.Ember.computed("tournament.state", "localPlayer.state", "roster", "tournament.status", "waitingForMatchToFinish", "isInGame", (function() {
                    const e = this.get("tournament.status");
                    if (e === o.TournamentStatus.PAUSED) return this.get("tra.clash_game_info_panel_tournament_paused");
                    if (e === o.TournamentStatus.PRERESUME) return this.get("tra.clash_game_info_panel_tournament_resuming");
                    const t = this.get("tournament.state");
                    return t === s.default.Tournament.LOCK_IN && this.get("roster.isRegistered") ? this.get("tra.clash_game_info_panel_brackets_forming") : this.get("waitingForMatchToFinish") ? this.get("tra.clash_game_info_panel_text_waiting") : this.get("isInGame") ? this.get("tra.clash_game_info_panel_text_in_game") : t ? this.get(`tra.clash_game_info_panel_state_${t}`) : ""
                })),
                memberLockins: a.Ember.computed("roster.members.[]", "roster.members.@each.isReady", "tournament.rosterSize", (function() {
                    const e = this.get("tournament.rosterSize"),
                        t = this.get("roster.members") || [],
                        n = i.default.getRosterMembersInRosterMemberListOrder(e, t, !0),
                        a = [];
                    for (const e of n)
                        if (e) {
                            const t = e.get("isReady");
                            a.push(t ? {
                                iconSrc: "/fe/lol-clash/assets/images/social/Player_Ready.png"
                            } : {
                                iconSrc: "/fe/lol-clash/assets/images/social/Player_Joined.png"
                            })
                        } else a.push({
                            iconSrc: "/fe/lol-clash/assets/images/social/Player_Empty.png"
                        });
                    return a
                })),
                withdrawModalInstance: null,
                hasVotedInWithdrawVote: !1,
                withdrawVotesObserver: a.Ember.computed("roster.withdraw.voteWithdrawMembers.[]", "roster.withdraw.declineWithdrawMembers.[]", "roster", "isWithdrawEnabled", "isWithdrawAllowed", (function() {
                    const e = this.get("roster"),
                        t = this.get("localPlayer.summonerId");
                    if (!e || !t) return;
                    const n = e.isWithdrawVoteInProgress();
                    let s = this.get("withdrawModalInstance");
                    if (!n && s) return a.ModalManager.remove(s), void this.set("withdrawModalInstance", null);
                    const i = e.hasVoted(t);
                    this.set("hasVotedInWithdrawVote", i);
                    const o = this.get("isWithdrawEnabled") && this.get("isWithdrawAllowed");
                    n && !i && !s && o && (s = this._createWithdrawModal()), s && o && this._updateWithdrawModal()
                })),
                _removeAllDialogs() {
                    const e = this.get("withdrawModalInstance");
                    e && (a.ModalManager.remove(e), this.set("withdrawModalInstance", null))
                },
                stateTransitionObserver: a.Ember.computed("tournament.state", (function() {
                    this._removeAllDialogs()
                })),
                showWithdrawButton: a.Ember.computed("tournament.state", "withdrawVotes.[]", "isWithdrawEnabled", "isWithdrawAllowed", (function() {
                    if (!this.get("isWithdrawEnabled")) return !1;
                    if (!this.get("isWithdrawAllowed")) return !1;
                    const e = this.get("roster");
                    if (!e) return !1;
                    return !e.isWithdrawVoteInProgress()
                })),
                txtWithdrawButtonTooltipTitle: a.Ember.computed("isInMatchmaking", (function() {
                    return this.get("isInMatchmaking") ? this.get("tra.clash_withdraw_button_tooltip_title") : this.get("tra.clash_forfeit_button_tooltip_title")
                })),
                txtWithdrawButtonTooltipBody: a.Ember.computed("isInMatchmaking", (function() {
                    return this.get("isInMatchmaking") ? this.get("tra.clash_withdraw_button_tooltip") : this.get("tra.clash_forfeit_button_tooltip")
                })),
                _getVotesElements() {
                    const e = this.get("withdrawVotes"),
                        t = [];
                    for (let n = 0; n < e.length; ++n) t.push(e[n]);
                    return t
                },
                _createWithdrawModal() {
                    const e = this.get("roster"),
                        t = this.get("isInMatchmaking"),
                        n = this._getVotesElements(),
                        s = t ? this.get("tra.clash_withdraw_modal_title") : this.get("tra.clash_forfeit_modal_title"),
                        i = t ? this.get("tra.clash_withdraw_modal_description") : this.get("tra.clash_forfeit_modal_description"),
                        o = l({
                            title: s,
                            description: i,
                            votes: n
                        }),
                        r = a.Util.createDomNode(o),
                        c = e && e.isWithdrawVoteInProgress() ? this.get("tra.clash_forfeit_button_keep_playing") : this.get("tra.clash_forfeit_button_cancel"),
                        d = a.ModalManager.add({
                            type: "DialogConfirm",
                            data: {
                                contents: r,
                                acceptText: this.get("tra.clash_forfeit_button_confirm"),
                                declineText: c,
                                closeButton: !1
                            }
                        });
                    this.set("withdrawModalInstance", d);
                    const m = this.get("clashService");
                    return d.acceptPromise.then((() => {
                        m && m.voteWithdraw(e.get("id")), this.set("withdrawModalInstance", null)
                    }), (() => {
                        m && e && e.isWithdrawVoteInProgress() && m.declineWithdraw(e.get("id")), this.set("withdrawModalInstance", null)
                    })), d
                },
                _updateWithdrawModal() {
                    this._removeAllDialogs(), this._createWithdrawModal()
                },
                isVisibleObserver: a.Ember.computed("isVisible", "isWithdrawEnabled", "isWithdrawAllowed", (function() {
                    const e = this.get("isVisible"),
                        t = this.get("isWithdrawEnabled"),
                        n = this.get("isWithdrawAllowed");
                    e && t && n || this._removeAllDialogs()
                })),
                actions: {
                    openTournaments() {
                        a.logger.trace("calling openWithTournament from social-game-info");
                        const e = this.get("clashApi"),
                            t = this.get("clashService.tournamentId");
                        e.openWithTournament(t)
                    },
                    openWithdrawPrompt() {
                        this.get("hasVotedInWithdrawVote") || this._createWithdrawModal()
                    }
                }
            })
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            t.default = class {
                static getRosterMembersInRosterMemberListOrder(e, t, n = !1) {
                    const a = [],
                        s = t.find((e => e.get("isLocalPlayer"))),
                        i = s ? e - 1 : e;
                    let o = 0;
                    for (; a.length < i;)
                        if (o < t.length) {
                            const e = t[o];
                            e.get("isLocalPlayer") || e.get("isDeclined") && n || a.push(t[o]), o++
                        } else a.push(null);
                    return s && a.unshift(s), a
                }
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                1: function(e, t, n, a, s, i) {
                    return '      <div class="vote-block ' + e.escapeExpression(e.lambda(i[0][0], t)) + '"></div>\r\n'
                },
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s, i) {
                    var o, r, l = null != t ? t : e.nullContext || {},
                        c = n.helperMissing,
                        d = "function",
                        m = e.escapeExpression;
                    return '<lol-uikit-content-block class="clash-defaults-dialog" type="dialog-small">\r\n  <h4>' + m(typeof(r = null != (r = n.title || (null != t ? t.title : t)) ? r : c) === d ? r.call(l, {
                        name: "title",
                        hash: {},
                        data: s,
                        blockParams: i
                    }) : r) + '</h4>\r\n  <p style="margin-top:10px">' + m(typeof(r = null != (r = n.description || (null != t ? t.description : t)) ? r : c) === d ? r.call(l, {
                        name: "description",
                        hash: {},
                        data: s,
                        blockParams: i
                    }) : r) + '</p>\r\n  <div class="clash-votes-container">\r\n' + (null != (o = n.each.call(l, null != t ? t.votes : t, {
                        name: "each",
                        hash: {},
                        fn: e.program(1, s, 1, i),
                        inverse: e.noop,
                        data: s,
                        blockParams: i
                    })) ? o : "") + "  </div>\r\n</lol-uikit-content-block>"
                },
                useData: !0,
                useBlockParams: !0
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "2f/opAI4",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\tournament-schedule\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\tournament-schedule\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\tournament-schedule\\\\index.js\\" "],["text","\\n"],["append",["unknown",["isVisibleObserver"]],false],["text","\\n"],["append",["unknown",["stateTransitionObserver"]],false],["text","\\n"],["append",["unknown",["withdrawVotesObserver"]],false],["text","\\n\\n"],["block",["if"],[["get",["isVisible"]]],null,12]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-pending-animation-container"],["flush-element"],["text","\\n            "],["append",["helper",["pending-indicator"],null,[["width","dotHeight","dotWidth"],[21,5,5]]],false],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["showPendingEllipses"]]],null,0]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-small"],["flush-element"],["text","\\n              "],["open-element","h6",[]],["flush-element"],["append",["unknown",["tra","clash_forfeit_button_tooltip_title"]],false],["close-element"],["text","\\n              "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_forfeit_button_tooltip"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-withdraw-button"],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["left","system"]],2],["text","          "],["append",["helper",["generic-button"],null,[["onClick","baseImgPath","overImgPath","downImgPath","isEnabled","onClickSound","onHoverSound"],[["helper",["action"],[["get",[null]],"openWithdrawPrompt"],null],"/fe/lol-clash/assets/images/buttons/button-withdraw.png","/fe/lol-clash/assets/images/buttons/button-withdraw-over.png","/fe/lol-clash/assets/images/buttons/button-withdraw-down.png",true,"button-circlegold-click","button-circlegold-hover"]]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text"," "],["text","\\n\\n"],["block",["if"],[["get",["showWithdrawButton"]]],null,3],["text","\\n"],["block",["if"],[["get",["isScoutingOrInGamePhase"]]],null,1],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-small"],["flush-element"],["text","\\n              "],["open-element","h6",[]],["flush-element"],["append",["unknown",["txtWithdrawButtonTooltipTitle"]],false],["close-element"],["text","\\n              "],["open-element","p",[]],["flush-element"],["append",["unknown",["txtWithdrawButtonTooltipBody"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-withdraw-button is-matchmaking"],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["left","system"]],5],["text","          "],["append",["helper",["generic-button"],null,[["onClick","baseImgPath","overImgPath","downImgPath","isEnabled","onClickSound","onHoverSound"],[["helper",["action"],[["get",[null]],"openWithdrawPrompt"],null],"/fe/lol-clash/assets/images/buttons/button-withdraw.png","/fe/lol-clash/assets/images/buttons/button-withdraw-over.png","/fe/lol-clash/assets/images/buttons/button-withdraw-down.png",true,"button-circlegold-click","button-circlegold-hover"]]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","img",[]],["static-attr","class","clash-tournament-schedule-lockedin-member-icon"],["dynamic-attr","src",["concat",[["unknown",["memberLockin","iconSrc"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":["memberLockin"]},{"statements":[["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-lockedin-section"],["flush-element"],["text","\\n"],["block",["each"],[["get",["memberLockins"]]],null,7],["text","      "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["showWithdrawButton"]]],null,6],["text","\\n    "]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-open-tournaments-btn"],["flush-element"],["text","\\n          "],["append",["helper",["generic-button"],null,[["onClick","baseImgPath","overImgPath","downImgPath","onClickSound","onHoverSound","iconSizeModifier"],[["helper",["action"],[["get",[null]],"openTournaments",["get",["rosterMember","summonerId"]]],null],"/fe/lol-clash/assets/images/buttons/icon-arrow-blue.png","/fe/lol-clash/assets/images/buttons/icon-arrow-blue-over.png","/fe/lol-clash/assets/images/buttons/icon-arrow-blue-down.png","button-circlegold-click","button-circlegold-hover",0.85]]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-roster-short-name"],["flush-element"],["text","\\n            "],["append",["unknown",["roster","shortName"]],false],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["append",["helper",["state-countdown"],null,[["tournament","usePaddedZeros","displayTimerDescriptionTxt","showMinutesBelow60s","injectNumberStyling","customTag","isAudioEnabled"],[["get",["tournament"]],false,false,false,true,"game-info-panel",true]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["append",["helper",["section-header"],null,[["headerText"],[["get",["tra","clash_game_info_panel_title"]]]]],false],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-content"],["flush-element"],["text","\\n"],["text","    "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-current-state-info"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-roster-icon"],["flush-element"],["text","\\n        "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["logoPath"]]]]],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-timer-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["showTimer"]]],null,11,10],["text","        "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-current-state-name"],["flush-element"],["text","\\n          "],["append",["unknown",["currentStateName"]],false],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"],["block",["if"],[["get",["isGotoButtonVisible"]]],null,9],["text","    "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["tournament","isLockinAvailable"]]],null,8,4],["text","  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(234);
            const s = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                basePaths: {
                    clash: "/lol-clash"
                },
                boundProperties: {
                    loginSession: "/lol-login/v1/session"
                }
            });
            e.exports = a.Ember.Component.extend(s, {
                classNames: ["clash-tournament-invite-panel"],
                classNameBindings: ["isContentVisible:is-content-visible"],
                layout: n(235),
                clashService: a.Ember.inject.service("clash"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                clashApi: null,
                shared: null,
                isContentVisible: !1,
                isOpen: !1,
                renderInvites: !1,
                invites: a.Ember.ArrayProxy.create({
                    content: a.Ember.A()
                }),
                showSeparator: !1,
                scrolledTop: !0,
                isScrollable: a.Ember.computed.gt("invites.length", 2),
                onDidInsertElement: a.Ember.on("didInsertElement", (function() {
                    a.Util.waitForElement(this.get("element"), ".clash-tournament-invite-panel-invite-list").then((e => {
                        e.addEventListener("scroll", (() => a.Ember.run((() => this.set("scrolledTop", 0 === e.scrollTop)))))
                    }))
                })),
                invitedRosterIdsObserver: a.Ember.computed("invitedRosterIds", "invitedRosterIds.[]", (function() {
                    const e = this.get("invitedRosterIds"),
                        t = this.get("invites");
                    a.logger.trace("tournament-invite-panel -- updating roster invites...", e);
                    for (let n = 0; n < t.get("length"); ++n) {
                        const a = t.objectAt(n);
                        if (a.get("isInviteDestroying")) continue;
                        const s = a.get("invitedRosterId");
                        e.indexOf(s) < 0 && this._setInviteDestroying(a)
                    }
                    for (const n of e) {
                        const e = t.find((e => e.get("invitedRosterId") === n));
                        e ? e.set("isInviteDestroying", !1) : (a.logger.trace("tournament-invite-panel -- new invite, id", n), t.pushObject(a.Ember.Object.create({
                            invitedRosterId: n,
                            isInviteDestroying: !1,
                            isVisible: a.Ember.computed.not("isInviteDestroying")
                        })), this._setIsOpen(!0))
                    }
                    a.logger.trace("tournament-invite-panel -- invites updated", t);
                    const n = this.get("invitedRosterIds.length");
                    a.logger.trace("tournament-invite-panel -- rosterInviteCount", n), n > 0 ? a.Ember.run.next((() => {
                        a.logger.trace("tournament-invite-panel -- setting content visible: true"), this.set("isContentVisible", !0)
                    })) : (this._setIsOpen(!1), a.Ember.run.next((() => {
                        a.logger.trace("tournament-invite-panel -- setting content visible: false"), this.set("isContentVisible", !1)
                    })))
                })),
                lockinStartText: a.Ember.computed("tournament.lockinStartTimeLocal", (function() {
                    const e = this.get("tournament.lockinStartTimeLocal");
                    return this.get("tra").formatString("clash_persistent_lockin_start_time", {
                        lockinTime: e
                    })
                })),
                _setIsOpen(e) {
                    if (this.get("isOpen") === e) return;
                    this.set("isOpen", e);
                    const t = this.get("isOpenAnimTimer");
                    if (t && a.Ember.run.cancel(t), e) this.set("renderInvites", !0);
                    else {
                        const e = a.Ember.run.later((() => {
                            this.set("renderInvites", !1)
                        }), 3e3);
                        this.set("isOpenAnimTimer", e)
                    }
                },
                _setInviteDestroying(e) {
                    let t = null,
                        n = null;
                    if ("object" == typeof e) t = e, n = t.get("invitedRosterId");
                    else {
                        const a = this.get("invites");
                        n = e, t = a.find((e => e.get("invitedRosterId") === n))
                    }
                    t && (a.logger.trace("tournament-invite-panel -- set invite to destroying, id", n), t.set("isInviteDestroying", !0), a.Ember.run.later(this._destroyInvite.bind(this, n), 200))
                },
                _destroyInvite(e) {
                    const t = this.get("invites"),
                        n = t.find((t => t.get("invitedRosterId") === e));
                    n && n.get("isInviteDestroying") && (t.removeObject(n), a.logger.trace("tournament-invite-panel -- destroyed invite", n.get("invitedRosterId")), n.destroy())
                },
                actions: {
                    toggleInvites() {
                        const e = !this.get("isOpen");
                        this._setIsOpen(e)
                    },
                    viewRoster(e, t) {
                        const n = this.get("clashApi");
                        this.set("shared.state.viewRosterId", t), n.openViewRoster(e, t)
                    },
                    cancelInvite(e) {
                        return this.get("clashService").declineInvite(e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "ToZmXmqn",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\tournament-invite-panel\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\tournament-invite-panel\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\tournament-invite-panel\\\\index.js\\" "],["text","\\n"],["append",["unknown",["invitedRosterIdsObserver"]],false],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-tournament-invite-panel-content ",["helper",["if"],[["get",["isContentVisible"]],"clash-invites-visible"],null]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["showSeparator"]]],null,4],["text","  "],["append",["helper",["section-header"],null,[["headerText","isCollapsible","pipCount","isOpen","toggle"],[["get",["tra","clash_social_persistent_header"]],true,["get",["invites","length"]],["get",["isOpen"]],["helper",["action"],[["get",[null]],"toggleInvites"],null]]]],false],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-social-persistent-separator clash-tournament-invite-scroll-separator ",["helper",["if"],[["get",["scrolledTop"]],"","is-separator-visible"],null]]]],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-tournament-invite-panel-invite-list-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-tournament-invite-panel-invite-list ",["helper",["if"],[["get",["isOpen"]],"open","closed"],null]," invites-",["unknown",["invites","length"]]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["renderInvites"]]],null,3],["text","    "],["close-element"],["text","\\n"],["block",["if"],[["get",["isScrollable"]]],null,1],["text","  "],["close-element"],["text","\\n"],["block",["if"],[["get",["tournament","isIdle"]]],null,0],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-social-persistent-separator"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-social-persistent-lockin-countdown"],["flush-element"],["append",["unknown",["lockinStartText"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-tournament-invite-panel-bottom-gradient"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-tournament-invite-panel-invite ",["helper",["if"],[["get",["invite","isVisible"]],"is-visible"],null]]]],["flush-element"],["text","\\n            "],["append",["helper",["tournament-invite"],null,[["invite","shared","viewRoster","cancelInvite"],[["get",["invite"]],["get",["shared"]],["helper",["action"],[["get",[null]],"viewRoster"],null],["helper",["action"],[["get",[null]],"cancelInvite"],null]]]],false],["text","\\n          "],["close-element"],["text","\\n"]],"locals":["invite"]},{"statements":[["block",["each"],[["get",["invites"]]],[["key"],["invitedRosterId"]],2]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-social-persistent-separator"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(237);
            const s = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                boundProperties: {
                    roster: "/lol-clash/v1/roster/{{invite.invitedRosterId}}"
                }
            });
            e.exports = a.Ember.Component.extend(s, {
                classNames: ["clash-tournament-invite"],
                classNameBindings: ["invite.isVisible:is-invite-visible"],
                layout: n(238),
                summonerService: a.Ember.inject.service("summoner"),
                clashService: a.Ember.inject.service("clash"),
                gdsService: a.Ember.inject.service("gds"),
                localPlayerSummonerId: a.Ember.computed.alias("clashService.localPlayer.summonerId"),
                invite: null,
                shared: null,
                isCallInProgress: !1,
                viewRosterOver: !1,
                cancelInviteOver: !1,
                isNotCallInProgress: a.Ember.computed.not("isCallInProgress"),
                isAnyButtonEnabled: a.Ember.computed.not("isCallInProgress", "invite.isVisible"),
                rosterLogoPath: a.Ember.computed("roster", "roster.iconId", "roster.iconColorId", "gdsService.ready", (function() {
                    if (!this.get("gdsService.ready")) return "";
                    const e = this.get("roster.iconId"),
                        t = this.get("roster.iconColorId");
                    return this.get("gdsService").getLogoPath(e, t)
                })),
                isViewButtonEnabled: a.Ember.computed("isAnyButtonEnabled", "invite.invitedRosterId", "shared.state.viewRosterId", (function() {
                    const e = this.get("isAnyButtonEnabled"),
                        t = this.get("invite.invitedRosterId"),
                        n = this.get("shared.state.viewRosterId"),
                        s = e && n !== t;
                    return a.Ember.run.next((() => this.send("viewRosterUp"))), s
                })),
                actions: {
                    viewRoster() {
                        if (this.attrs.viewRoster) {
                            const e = this.get("roster.tournamentId"),
                                t = this.get("invite.invitedRosterId");
                            this.attrs.viewRoster(e, t)
                        }
                    },
                    cancelInvite() {
                        if (this.attrs.cancelInvite) {
                            const e = this.get("invite.invitedRosterId"),
                                t = this.attrs.cancelInvite(e);
                            a.Util.setBoolDuringPromise(t, this, "isCallInProgress")
                        }
                    },
                    viewRosterOver() {
                        this.get("isViewButtonEnabled") && this.set("viewRosterOver", !0)
                    },
                    viewRosterUp() {
                        this.set("viewRosterOver", !1)
                    },
                    cancelInviteOver() {
                        this.set("cancelInviteOver", !0)
                    },
                    cancelInviteUp() {
                        this.set("cancelInviteOver", !1)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "orhL/tJI",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\tournament-invite-panel\\\\tournament-invite\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\tournament-invite-panel\\\\tournament-invite\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\tournament-invite-panel\\\\tournament-invite\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-tournament-invite-icon"],["flush-element"],["text","\\n"],["text","  "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["rosterLogoPath"]]]]],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","clash-tournament-invite-roster-info"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-tournament-invite-title"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-tournament-invite-title-text"],["flush-element"],["append",["unknown",["roster","shortName"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-tournament-invite-description"],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-tournament-invite-description-normal ",["helper",["if"],[["get",["viewRosterOver"]],"hidden"],null]," ",["helper",["if"],[["get",["cancelInviteOver"]],"hidden"],null]]]],["flush-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-tournament-invite-description-view-roster ",["helper",["if"],[["get",["viewRosterOver"]],"visible"],null]]]],["flush-element"],["append",["unknown",["tra","clash_tournament_invite_view_roster_btn"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-tournament-invite-description-cancel-invite ",["helper",["if"],[["get",["cancelInviteOver"]],"visible"],null]]]],["flush-element"],["append",["unknown",["tra","clash_tournament_invite_cancel_invite_btn"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","clash-tournament-invite-button clash-tournament-invite-view-roster"],["modifier",["action"],[["get",[null]],"viewRosterOver"],[["on"],["mouseEnter"]]],["modifier",["action"],[["get",[null]],"viewRosterUp"],[["on"],["mouseLeave"]]],["flush-element"],["text","\\n    "],["append",["helper",["generic-button"],null,[["onClick","upBgPath","overBgPath","downBgPath","baseImgPath","overImgPath","downImgPath","isEnabled","onClickSound","onHoverSound","iconSizeModifier"],[["helper",["action"],[["get",[null]],"viewRoster"],null],"/fe/lol-clash/assets/images/buttons/button-bg-blue.png","/fe/lol-clash/assets/images/buttons/button-bg-blue-over.png","/fe/lol-clash/assets/images/buttons/button-bg-blue-down.png","/fe/lol-clash/assets/images/buttons/button-inner-arrow-blue.png","/fe/lol-clash/assets/images/buttons/button-inner-arrow-blue-over.png","/fe/lol-clash/assets/images/buttons/button-inner-arrow-blue-down.png",["get",["isViewButtonEnabled"]],"button-circlegold-click","button-circlegold-hover",0.6]]],false],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-tournament-invite-button clash-tournament-invite-cancel"],["modifier",["action"],[["get",[null]],"cancelInviteOver"],[["on"],["mouseEnter"]]],["modifier",["action"],[["get",[null]],"cancelInviteUp"],[["on"],["mouseLeave"]]],["flush-element"],["text","\\n  "],["append",["helper",["generic-button"],null,[["onClick","baseImgPath","overImgPath","downImgPath","downImgPath","isEnabled","onClickSound","onHoverSound","iconSizeModifier"],[["helper",["action"],[["get",[null]],"cancelInvite"],null],"/fe/lol-clash/assets/images/buttons/icon-x-blue.png","/fe/lol-clash/assets/images/buttons/icon-x-blue-over.png","/fe/lol-clash/assets/images/buttons/icon-x-blue-down.png","/fe/lol-clash/assets/images/buttons/icon-x-blue-disabled.png",["get",["isAnyButtonEnabled"]],"button-circlegold-click","button-circlegold-hover",0.85]]],false],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(10)) && a.__esModule ? a : {
                    default: a
                };
            n(240);
            const o = n(241);
            e.exports = s.Ember.Component.extend({
                classNames: ["clash-withdraw-status-panel"],
                layout: n(242),
                clashService: s.Ember.inject.service("clash"),
                localPlayer: s.Ember.computed.alias("clashService.localPlayer"),
                tournament: s.Ember.computed.alias("clashService.tournament"),
                roster: s.Ember.computed.alias("clashService.localPlayer.roster"),
                localPlayerState: s.Ember.computed.alias("localPlayer.state"),
                withdrawVotes: s.Ember.computed.alias("roster.aggregatedWithdrawVotes"),
                isInMatchmaking: s.Ember.computed("tournament.state", "localPlayerState", (function() {
                    return this.get("tournament.state") === i.default.Tournament.LOCK_IN && this.get("localPlayerState") === i.default.Player.REGISTERED_ROSTER
                })),
                showCancelWithdrawButton: s.Ember.computed("roster.withdraw.initVoteMember", (function() {
                    return this.get("roster.withdraw.initVoteMember") === this.get("localPlayer.summonerId")
                })),
                hasVotedInWithdrawVote: s.Ember.computed("roster", (function() {
                    const e = this.get("roster"),
                        t = this.get("localPlayer.summonerId");
                    if (!e || !t) return !1;
                    return e.hasVoted(t)
                })),
                yesVotesCount: s.Ember.computed("roster.withdraw.voteWithdrawMembers.[]", (function() {
                    const e = this.get("roster.withdraw.voteWithdrawMembers");
                    return e ? e.length : 0
                })),
                requiredVotesCount: s.Ember.computed("tournament.rosterSize", (function() {
                    const e = this.get("tournament.rosterSize");
                    return e ? Math.floor(e / 2) + 1 : 0
                })),
                txtWithdrawPanelTitle: s.Ember.computed("isInMatchmaking", (function() {
                    return this.get("isInMatchmaking") ? this.get("tra.clash_withdraw_social_panel_title") : this.get("tra.clash_forfeit_social_panel_title")
                })),
                actions: {
                    cancelWithdraw() {
                        const e = this.get("tra.clash_cancel_forfeit_modal_title"),
                            t = this.get("tra.clash_cancel_forfeit_modal_description"),
                            n = this.get("clashService"),
                            a = o({
                                title: e,
                                description: t
                            }),
                            i = s.Util.createDomNode(a),
                            r = s.ModalManager.add({
                                type: "DialogConfirm",
                                data: {
                                    contents: i,
                                    acceptText: this.get("tra.lib_ui_dialog_confirm_accept"),
                                    declineText: this.get("tra.lib_ui_dialog_confirm_decline"),
                                    closeButton: !1
                                }
                            });
                        this.set("cancelWithdrawInstance", r), r.acceptPromise.then((() => {
                            const e = this.get("roster.id");
                            n.cancelWithdraw(e)
                        }), (() => {}))
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<lol-uikit-content-block class="clash-defaults-dialog" type="dialog-small">\r\n  <h4>' + c(typeof(i = null != (i = n.title || (null != t ? t.title : t)) ? i : r) === l ? i.call(o, {
                        name: "title",
                        hash: {},
                        data: s
                    }) : i) + '</h4>\r\n  <p style="margin-top:10px">' + c(typeof(i = null != (i = n.description || (null != t ? t.description : t)) ? i : r) === l ? i.call(o, {
                        name: "description",
                        hash: {},
                        data: s
                    }) : i) + "</p>\r\n</lol-uikit-content-block>"
                },
                useData: !0
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "9Kw1G+b0",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\withdraw-status-panel\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\withdraw-status-panel\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\social\\\\withdraw-status-panel\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-tournament-schedule-withdraw-container ",["helper",["if"],[["get",["hasVotedInWithdrawVote"]],"","active"],null]]]],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-withdraw-caret-top"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-withdraw-content"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-withdraw-title"],["flush-element"],["append",["unknown",["txtWithdrawPanelTitle"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-withdraw-body"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-withdraw-status"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-withdraw-progress-text"],["flush-element"],["text","\\n          "],["append",["unknown",["yesVotesCount"]],false],["text","/"],["append",["unknown",["requiredVotesCount"]],false],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-vote-block-container"],["flush-element"],["text","\\n"],["block",["each"],[["get",["withdrawVotes"]]],null,2],["text","      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["block",["if"],[["get",["showCancelWithdrawButton"]]],null,1],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-small"],["flush-element"],["text","\\n          "],["open-element","h6",[]],["flush-element"],["append",["unknown",["tra","clash_cancel_forfeit_tooltip_title"]],false],["close-element"],["text","\\n          "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_cancel_forfeit_tooltip"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-tournament-schedule-withdraw-cancel-button"],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["left","system"]],0],["text","      "],["append",["helper",["generic-button"],null,[["onClick","baseImgPath","overImgPath","downImgPath","isEnabled","onClickSound","onHoverSound"],[["helper",["action"],[["get",[null]],"cancelWithdraw"],null],"/fe/lol-clash/assets/images/buttons/icon-x.png","/fe/lol-clash/assets/images/buttons/icon-x-over.png","/fe/lol-clash/assets/images/buttons/icon-x-down.png",true,"button-circlegold-click","button-circlegold-hover"]]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-tournament-schedule-vote-block ",["get",["vote"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":["vote"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(244), e.exports = a.Ember.Component.extend({
                classNames: ["clash-arrow-toggle"],
                layout: n(245),
                isOpen: !1,
                useAnimation: !0,
                arrowStyle: "medium"
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "a48RbrhX",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\arrow-toggle\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\arrow-toggle\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\arrow-toggle\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["arrow-toggle ",["unknown",["arrowStyle"]]," ",["helper",["if"],[["get",["isOpen"]],"open"],null]," ",["helper",["if"],[["get",["useAnimation"]],"use-animation"],null]]]],["flush-element"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = d(n(88)),
                i = d(n(91)),
                o = d(n(217)),
                r = d(n(44)),
                l = d(n(11)),
                c = n(9);

            function d(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            n(247);
            const m = (0, a.emberDataBinding)({
                    Ember: a.Ember,
                    websocket: (0, a.getProvider)().getSocket(),
                    boundProperties: {
                        gameFlow: "/lol-gameflow/v1/session"
                    }
                }),
                u = ["localPlayer.roster.id", "match.rosterId1", "match.rosterId2", "bracket", "bracket.size", "tournament.id"];
            e.exports = a.Ember.Component.extend(m, {
                telemetryService: a.Ember.inject.service("telemetry"),
                classNames: ["clash-scouting-intro-flow"],
                layout: n(248),
                closeModalCallback: null,
                tournamentId: -1,
                bracketId: -1,
                isFirstRound: !1,
                bracket: a.Ember.computed.alias("localPlayer.bracket"),
                match: a.Ember.computed.alias("localPlayer.nextMatch"),
                isInitialized: !1,
                onInit: a.Ember.on("init", (function() {
                    a.logger.trace("scouting-intro-flow -- initializing...");
                    for (const e of u) this.addObserver(e, this, "_onRequiredDataUpdated");
                    this.set("isInitialized", !1);
                    const e = s.default.create({
                        id: this.get("tournamentId")
                    });
                    this.set("tournament", e);
                    const t = i.default.create({
                        tournament: e
                    });
                    this.set("localPlayer", t), this._autoCloseTimer = setTimeout((() => {
                        a.logger.warning("scouting-intro-flow -- auto-close timer triggered, closing modal"), this.send("closeModal"), this._clearTimers()
                    }), 6e4), this._dataTimeoutTimer = setTimeout((() => {
                        this.get("isInitialized") || (a.logger.warning("scouting-intro-flow -- timed out waiting for data, closing modal"), this.send("closeModal"), this._clearTimers())
                    }), 2500), l.default.disablePopups()
                })),
                willDestroyElement() {
                    this._super(...arguments), this._clearTimers()
                },
                _clearTimers() {
                    this._autoCloseTimer && clearTimeout(this._autoCloseTimer), this._dataTimeoutTimer && clearTimeout(this._dataTimeoutTimer)
                },
                gameFlowObserver: a.Ember.computed("gameFlow.phase", (function() {
                    const e = this.get("gameFlow.phase");
                    a.Util.isGameflowInGame(e) && this.send("closeModal")
                })),
                tierText: a.Ember.computed("localPlayer.roster.tier", (function() {
                    const e = this.get("localPlayer.roster.tier");
                    if (e) {
                        const t = c.ROMAN_NUMERALS[e];
                        return this.get("tra").formatString("clash_roster_tier_display", {
                            tier: t
                        })
                    }
                    return "-"
                })),
                bracketText: a.Ember.computed("bracket.size", (function() {
                    const e = this.get("bracket.size") || "?";
                    return this.get("tra").formatString("clash_overview_bracket_type", {
                        bracketSize: e
                    })
                })),
                gameText: a.Ember.computed("match.round", (function() {
                    const e = this.get("match.round");
                    return this.get("tra").formatString("clash_scouting_intro_game_count", {
                        round: e
                    })
                })),
                _onRequiredDataUpdated() {
                    a.Ember.run.once((() => {
                        const e = this.get("localPlayer.roster.id"),
                            t = this.get("match"),
                            n = this.get("bracket"),
                            s = this.get("bracket.size"),
                            i = this.get("tournament.id"),
                            o = this.get("isInitialized");
                        if (!t || !n || !s || !a.Util.isNumberOk(i) || o) return void a.logger.trace("scouting-intro-flow -- waiting for good data", {
                            bracketSize: s,
                            tournamentId: i
                        });
                        const r = this.get("match.rosterId1"),
                            l = this.get("match.rosterId2");
                        if (r < c.MATCH_ROSTER_BYE_ID || l < c.MATCH_ROSTER_BYE_ID) a.logger.trace("scouting-intro-flow -- waiting for non TBD rosterids", {
                            rosterId1: r,
                            rosterId2: l
                        });
                        else {
                            a.Util.compareRosterIds(e, r) ? (this.set("localRosterId", r), this.set("localRoster", this.get("match.roster1")), this.set("opponentRosterId", l), this.set("opponentRoster", this.get("match.roster2"))) : (this.set("localRosterId", l), this.set("localRoster", this.get("match.roster2")), this.set("opponentRosterId", r), this.set("opponentRoster", this.get("match.roster1"))), a.logger.trace(`scouting-intro-flow -- _onRequiredDataUpdated: localPlayerRosterId ${e}, localRosterId ${this.get("localRosterId")}, opponentRosterId ${this.get("opponentRosterId")}, match.rosterId1 ${r}, match.rosterId2 ${l}`), this._preInitializeScoutingIntroAnimation(), this.set("isInitialized", !0);
                            for (const e of u) this.removeObserver(e, this, "_onRequiredDataUpdated")
                        }
                    }))
                },
                _preInitializeScoutingIntroAnimation() {
                    const e = a.GameDataGeneric.getLogoPathPromise(this.get("localRoster.iconId") || 0, this.get("localRoster.chromaId") || 0),
                        t = a.GameDataGeneric.getLogoPathPromise(this.get("opponentRoster.iconId") || 0, this.get("opponentRoster.chromaId") || 0);
                    Promise.all([e, t]).then((e => {
                        const [t, n] = e;
                        this._initializeScoutingIntroAnimation(t, n)
                    }))
                },
                _initializeScoutingIntroAnimation(e, t) {
                    a.logger.trace("initializing scouting intro animation");
                    const n = this.$("#scouting-intro-video-state-machine").get(0),
                        s = this.$(".clash-scouting-content"),
                        i = this.$(".clash-scouting-view-opponent-button-container"),
                        o = this.$("#scouting-intro-animation-container");
                    a.Ember.$.getJSON("/fe/lol-clash/assets/animations/lottie/scouting-start.json", (r => {
                        const l = (this.get("localRoster.name") || "-").toUpperCase(),
                            c = (this.get("localRoster.shortName") || "-").toUpperCase(),
                            d = (this.get("opponentRoster.name") || "-").toUpperCase(),
                            m = (this.get("opponentRoster.shortName") || "-").toUpperCase();
                        r.assets[1].u = t, r.assets[1].p = "", r.assets[2].u = e, r.assets[2].p = "", r.layers[3].t.d.k[0].s.t = d, r.layers[4].t.d.k[0].s.t = m, r.layers[5].t.d.k[0].s.t = l, r.layers[6].t.d.k[0].s.t = c;
                        const u = a.lottie.loadAnimation({
                            container: o.get(0),
                            renderer: "svg",
                            loop: !1,
                            autoplay: !1,
                            animationData: r
                        });
                        this.set("scoutingIntroAnim", u), u.addEventListener("complete", (() => {
                            u.goToAndPlay(115, !0)
                        }));
                        const p = this.get("isFirstRound");
                        a.logger.trace("scouting-intro-flow -- playing scouting intro anim, isFirstRound: ", p), p ? (n.addEventListener("videoStateDone", (e => {
                            "scouting-intro-outro" === e.detail.video && (s.attr("style", "opacity: 1"), i.show(), this._playScoutingIntroAnim())
                        })), a.Ember.run.later((() => {
                            this.$("#scouting-intro-video-state-machine").get(0).dispatchEvent(new Event("scouting-intro-animation")), this._animateTextBracketIntro(), a.AudioManager.playAudio("lobby-transition")
                        }), 1e3)) : a.Ember.run.later((() => {
                            s.attr("style", "opacity: 1"), i.show(), this._playScoutingIntroAnim()
                        }), 1e3)
                    }))
                },
                _playScoutingIntroAnim() {
                    a.logger.trace("scouting-intro-flow -- _playScoutingIntroAnim");
                    const e = this.get("scoutingIntroAnim"),
                        t = this.get("opponentRosterId");
                    a.Util.isNumberOk(t) && t > c.MATCH_ROSTER_BYE_ID && e ? (a.logger.trace("scouting-intro-flow -- playing scouting intro anim...", {
                        opponentRosterId: t
                    }), e && e.play(), a.AudioManager.playAudio("opponent-found"), this._animateTextOpponentFound()) : (a.logger.trace("scouting-intro-flow -- opponent is BYE, not playing scouting intro anim"), this.send("closeModal"))
                },
                _animateTextBracketIntro() {
                    const e = this.$(".clash-scouting-text-heading"),
                        t = this.$(".clash-scouting-text-bracket"),
                        n = this.$(".clash-scouting-text-tier"),
                        s = new a.gsap.TimelineMax({
                            paused: !0
                        });
                    s.add("start", "+=0"), s.fromTo(t, .53, {
                        x: -30
                    }, {
                        x: 0
                    }, "start+=1.8"), s.to(t, .27, {
                        opacity: 1
                    }, "start+=1.8"), s.to(t, .53, {
                        y: -50
                    }, "start+=4.2"), s.to(t, .53, {
                        css: {
                            scale: .6
                        }
                    }, "start+=4.2"), s.fromTo(n, .53, {
                        x: -50
                    }, {
                        x: 0
                    }, "start+=1.87"), s.to(n, .27, {
                        opacity: 1
                    }, "start+=1.87"), s.to(n, .27, {
                        opacity: 0
                    }, "start+=4.2"), s.to(e, .27, {
                        opacity: 1
                    }, "start+=1.73"), s.to(e, .27, {
                        opacity: 0
                    }, "start+=4.2"), s.play()
                },
                _animateTextOpponentFound() {
                    const e = this.$(".clash-scouting-text-bracket"),
                        t = this.$(".clash-scouting-text-game"),
                        n = new a.gsap.TimelineMax({
                            paused: !0
                        });
                    n.add("start", "+=0"), n.to(e, .01, {
                        opacity: 1
                    }, "start"), n.to(e, .01, {
                        y: -50
                    }, "start"), n.to(e, .01, {
                        css: {
                            scale: .6
                        }
                    }, "start"), n.to(t, .01, {
                        opacity: 1
                    }, "start+=0.78"), n.to(t, .01, {
                        y: -70
                    }, "start+=0.78"), n.play()
                },
                _destroyScoutingIntroAnim() {
                    const e = this.get("scoutingIntroAnim");
                    e && (a.AudioManager.stopAudio("opponent-found"), e.destroy(), this.set("scoutingIntroAnim", null))
                },
                _completeAndUpdateScoutingFlow() {
                    const e = this.get("tournamentId"),
                        t = this.get("bracketId"),
                        n = this.get("bracket.currentRound"),
                        a = this.get("bracket.currentLoserRound");
                    o.default.completeScoutingFlowForRound(e, t, n, a), o.default.completeAnimation(o.default.Anim.ScoutingIntro), l.default.enablePopups()
                },
                actions: {
                    closeModal() {
                        this._completeAndUpdateScoutingFlow(), this._destroyScoutingIntroAnim(), this.closeModalCallback()
                    },
                    closeModalAndOpenScouting() {
                        const e = this.get("tournament"),
                            t = this.get("opponentRoster"),
                            n = this.get("opponentRosterId"),
                            s = {
                                tournament: e,
                                roster: t
                            };
                        this.get("telemetryService").sendEvent("ScoutingEntered", {
                            rosterId: n,
                            source: "scouting-intro-flow"
                        }), a.PrivateAPI._scoutTeam(s);
                        const i = this.get("localRosterId");
                        r.default.setReminded(r.default.Type.POPUP_TEAM_SCOUTING_STARTED, i), this._completeAndUpdateScoutingFlow(), this._destroyScoutingIntroAnim(), this.closeModalCallback()
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "Kohm2ee8",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting-intro-flow\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting-intro-flow\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting-intro-flow\\\\index.js\\" "],["text","\\n"],["append",["unknown",["matchRosterObserver"]],false],["text","\\n"],["append",["unknown",["gameFlowObserver"]],false],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-scouting-intro-wrapper"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-scouting-text-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-scouting-text-heading"],["flush-element"],["append",["unknown",["tra","clash_scouting_intro_heading"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-scouting-text-bracket"],["flush-element"],["append",["unknown",["bracketText"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-scouting-text-tier"],["flush-element"],["append",["unknown",["tierText"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-scouting-text-game"],["flush-element"],["append",["unknown",["gameText"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-scouting-content"],["flush-element"],["text","\\n"],["text","    "],["open-element","div",[]],["static-attr","id","scouting-intro-animation-container"],["flush-element"],["close-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","clash-scouting-view-opponent-button-container"],["flush-element"],["text","\\n      "],["append",["helper",["arrow-footer"],null,[["confirmButtonText","confirmButtonHoverSound","confirmButtonClickSound","closeButtonText","closeButtonHoverSound","closeButtonClickSound","confirmButtonClicked","closeButtonClicked"],[["get",["tra","clash_action_timeline_state_fwd_btn_text_scouting"]],"/fe/lol-clash/assets/audio/sfx-clash-action-button-forward-hover.ogg","/fe/lol-clash/assets/audio/sfx-clash-action-button-forward-click.ogg","","/fe/lol-clash/assets/audio/sfx-clash-action-button-back-hover.ogg","/fe/lol-clash/assets/audio/sfx-clash-action-button-back-click.ogg","closeModalAndOpenScouting","closeModal"]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","lol-uikit-video-state-machine",[]],["static-attr","id","scouting-intro-video-state-machine"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-video-group",[]],["flush-element"],["text","\\n      "],["open-element","lol-uikit-video-state",[]],["static-attr","state","null"],["static-attr","no-preserve-state",""],["flush-element"],["close-element"],["text","\\n      "],["open-element","lol-uikit-video-state",[]],["static-attr","state","scouting-intro-animation"],["static-attr","no-preserve-state",""],["flush-element"],["text","\\n        "],["open-element","lol-uikit-video",[]],["static-attr","type","intro"],["static-attr","name","scouting-intro-intro"],["static-attr","src","/fe/lol-clash/assets/animations/videos/lobby/lobby_bracket_transition_intro.webm"],["flush-element"],["close-element"],["text","\\n        "],["open-element","lol-uikit-video",[]],["static-attr","type","outro"],["static-attr","name","scouting-intro-outro"],["static-attr","preload",""],["static-attr","fade-out","0"],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/animations/videos/lobby/lobby_bracket_transition_",["unknown",["bracket","size"]],".webm"]]],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = o(n(250)),
                i = o(n(217));

            function o(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            n(251);
            const r = (0, a.emberDataBinding)({
                    Ember: a.Ember,
                    websocket: (0, a.getProvider)().getSocket(),
                    basePaths: {
                        clash: "/lol-clash"
                    }
                }),
                l = Object.freeze({
                    BRACKET: 1,
                    TROPHY: 2,
                    CAPSULE_UPGRADE: 3,
                    CAPSULE_GRANT: 4,
                    VP_REWARD: 5
                }),
                c = Object.freeze({
                    LARGE: "large",
                    SMALL: "small"
                }),
                d = ["FLAG", "VP", "LOGO", "TROPHY"];
            e.exports = a.Ember.Component.extend(r, {
                classNames: ["tournament-end-of-game-flow"],
                layout: n(252),
                isPreEog: !1,
                isWithdraw: !1,
                startCeremony: !1,
                closeModalCallback: null,
                currentCelebration: null,
                currentBannerSize: c.LARGE,
                currentCelebrationIndex: -1,
                celebrations: [],
                isCloseBannersState: a.Ember.computed.equal("celebrationState", "close-banners"),
                isClosedState: a.Ember.computed.equal("celebrationState", "closed"),
                isClosingState: a.Ember.computed.or("isClosedState", "isOutroState", "isCloseBannersState"),
                isExitPhase: a.Ember.computed.or("isClosedState", "isCloseBannersState"),
                isShowRewardPhase: a.Ember.computed.equal("celebrationState", "show-reward"),
                isRewardOutroPhase: a.Ember.computed.equal("celebrationState", "reward-outro"),
                currentStateTimeout: null,
                onInit: a.Ember.on("init", (function() {
                    this.set("celebrations", []), this.set("currentCelebration", null), this.set("currentBannerSize", c.LARGE), this.set("currentCelebrationIndex", -1)
                })),
                onDidInsertElement: a.Ember.on("didInsertElement", (function() {
                    const e = this.$(".clash-celebration-animation");
                    if (e && e[0] && void 0 === this.subscribeParameterChanged) {
                        const t = e[0].getAttribute("state");
                        this.updateState(t), this.subscribeParameterChanged = function(e, t, n) {
                            "state" === e && this.updateState(n)
                        }.bind(this), e[0].subscribeParameterChanged(this.subscribeParameterChanged)
                    }
                    this.$(".clash-celebration-animation").get(0).setAttribute("state", "intro"), a.Ember.run.later((() => {
                        Promise.race([this._getDataPromise(), this._createTimeoutPromise()]).then((() => {
                            this.set("startCeremony", !0), this._unobserveClashEndpoints()
                        })).catch((() => {
                            const e = this.get("celebrations");
                            e && e.length > 0 ? this.set("startCeremony", !0) : this.set("celebrationComplete", !0), this._unobserveClashEndpoints()
                        })), this._resetStateCountdown()
                    }), 500)
                })),
                currentCelebrationComponent: a.Ember.computed("currentCelebration", (function() {
                    const e = this.get("currentCelebration");
                    return e ? (this._currentCelebrationApp && a.Util.destroyEmberApp(this._currentCelebrationApp), this._currentCelebrationApp = a.componentFactory.create(e.component, e.data), this._currentCelebrationApp.domNode) : null
                })),
                bannerSizeObserver: a.Ember.computed("currentCelebration", (function() {
                    const e = this.get("currentCelebration"),
                        t = this.get("currentCelebrationIndex");
                    let n = this.get("currentBannerSize"); - 1 !== t && (e ? null === n ? e.view === c.LARGE ? (this.set("currentBannerTransition", "animate-banner-open-large"), this.set("currentBannerSize", e.view)) : (this.set("currentBannerTransition", "animate-banner-open-small"), this.set("currentBannerSize", c.SMALL)) : n === c.LARGE ? e.view === c.SMALL && (this.set("currentBannerTransition", "animate-banner-large-small"), this.set("currentBannerSize", e.view)) : n === c.SMALL && e.view === c.LARGE && (this.set("currentBannerTransition", "animate-banner-small-large"), this.set("currentBannerSize", e.view)) : (n === c.SMALL ? this.set("currentBannerTransition", "animate-banner-close-small") : n === c.LARGE && this.set("currentBannerTransition", "animate-banner-close-large"), this.set("currentBannerSize", null)))
                })),
                onWillDestroyElement: a.Ember.on("willDestroyElement", (function() {
                    i.default.completeAnimation(i.default.Anim.EogFlow), this._unobserveClashEndpoints(), this._currentCelebrationApp && a.Util.destroyEmberApp(this._currentCelebrationApp)
                })),
                updateState(e) {
                    this.set("celebrationState", e), this.set("skipped", !1), "start" === e || "increment-celebration" === e ? this._incrementCelebrationData() : "closed" === e && (this._unobserveClashEndpoints(), i.default.completeAnimation(i.default.Anim.EogFlow), this.closeModalCallback())
                },
                _incrementCelebrationData() {
                    const e = this.get("celebrations"),
                        t = this.get("currentCelebrationIndex");
                    if (t + 1 < e.length) {
                        const n = t + 1,
                            a = e[n];
                        this.setProperties({
                            showNext: !1,
                            currentCelebrationIndex: n,
                            currentCelebration: a
                        })
                    }
                },
                _calculateGameEndCeremonies(e) {
                    const t = this.get("celebrations");
                    a.Util.isNumberOk(e.tournamentId) && a.Util.isNumberOk(e.bracketId) && t.push({
                        component: "BracketCelebration",
                        priority: l.BRACKET,
                        view: c.LARGE,
                        data: {
                            totalDuration: 18,
                            tournamentNameLocKey: e.tournamentNameLocKey
                        }
                    }), t.sort(((e, t) => e.priority - t.priority)), this.set("celebrations", t)
                },
                _calculateEogPlayerUpdateCeremonies(e) {
                    const t = e.earnedRewards,
                        n = e.rewardProgress,
                        a = e.tournamentId,
                        i = e.themeVp,
                        o = e.tier;
                    if (!t && !n) return;
                    let r = this.get("celebrations"),
                        m = [],
                        u = [],
                        p = {};
                    for (let e = 0; e < t.length; e++) {
                        const n = t[e],
                            a = t[e].rewardType,
                            i = t[e].rewardSpec;
                        if ("LOOT" === a && i.name.includes("CHEST")) {
                            let e = s.default.trimLootItemCapsuleName(i.name);
                            if (!e) continue;
                            if (p[e]) {
                                let t = i.quantity || 1;
                                t = parseInt(t), p[e].quantity += t
                            } else p[e] = i
                        } else "VP" === a ? m.push(t[e]) : d.includes(a) || u.push({
                            reward: n
                        })
                    }
                    for (let t of Object.keys(p)) r.push({
                        component: "CapsuleGrantCelebration",
                        data: {
                            rewardSpec: p[t],
                            bracketSize: e.bracketSize,
                            lowestPosition: e.lowestPosition,
                            bid: e.bid
                        },
                        priority: l.CAPSULE_GRANT,
                        view: c.SMALL
                    });
                    m.length > 0 && this.get("api.clash").get(`/v1/tournament/${a}`).then((e => {
                        const t = s.default.buildVpRewards(e, m, i);
                        let n = !1;
                        for (let e = 0; e < t.vpLoops.length; e++) {
                            let a = !n && t.vpLoops[e].bonusVpAmount > 0;
                            a && (n = !0), r.push({
                                component: "VpGrantCelebration",
                                data: {
                                    showBonusVp: a,
                                    vpLoop: t.vpLoops[e],
                                    regularVp: t.regularVp,
                                    bonusVp: t.bonusVp,
                                    tier: o
                                },
                                priority: l.VP_REWARD + e,
                                view: c.SMALL
                            })
                        }
                    }));
                    for (let e = 0; e < u.length; e++) r.push({
                        component: "RewardGrantCelebration",
                        data: {
                            reward: u[e].reward
                        },
                        priority: l.VP_REWARD + m.length + e,
                        view: c.SMALL
                    });
                    let h = {};
                    for (let e = 0; e < n.length; e++) {
                        const t = n[e],
                            a = t.rewardType,
                            i = t.rewardSpec;
                        if ("LOOT" === a) {
                            let e = s.default.trimLootItemCapsuleName(i.name);
                            if (!e) continue;
                            if (h[e]) {
                                let t = i.quantity || 1;
                                t = parseInt(t), h[e].quantity += t
                            } else h[e] = i
                        }
                    }
                    for (let t of Object.keys(h)) r.push({
                        component: "CapsuleUpgradeCelebration",
                        data: {
                            rewardSpec: h[t],
                            bracketSize: e.bracketSize,
                            bid: e.bid
                        },
                        priority: l.CAPSULE_UPGRADE,
                        view: c.SMALL
                    });
                    r.sort(((e, t) => e.priority - t.priority)), this.set("celebrations", r)
                },
                _createGameEndPromise(e) {
                    return new Promise((t => {
                        e.addObserver("/v1/game-end", this, (n => {
                            n && n.tournamentId >= 0 && (this._calculateGameEndCeremonies(n), e.unobserve("/v1/game-end", this), t(n))
                        }))
                    }))
                },
                _createEogPlayerUpdatePromise(e) {
                    return new Promise((t => {
                        e.addObserver("/v1/eog-player-update", this, (n => {
                            n && n.tournamentId >= 0 && (this._calculateEogPlayerUpdateCeremonies(n), e.unobserve("/v1/eog-player-update", this), t(n))
                        }))
                    }))
                },
                _getDataPromise() {
                    const e = (0, a.dataBinding)("/lol-clash", (0, a.getProvider)().getSocket());
                    this.set("clashBinding", e);
                    let t;
                    return this.get("isWithdraw") ? t = this._createEogPlayerUpdatePromise(e) : (t = this._createGameEndPromise(e), this._createEogPlayerUpdatePromise(e)), t
                },
                _createTimeoutPromise: () => new Promise(((e, t) => {
                    a.Ember.run.later((() => {
                        t()
                    }), 25e3)
                })),
                _resetStateCountdown(e = 18) {
                    let t = this.get("currentStateCountdown");
                    t && clearTimeout(t), t = setTimeout((() => {
                        this.send("onNext")
                    }), 1e3 * e), this.set("currentStateCountdown", t), this._animateCountdownMeter(e - 1)
                },
                _animateCountdownMeter(e) {
                    const t = this.$(".clash-countdown-meter");
                    let n = this.get("countdownMeterAnimationTween");
                    n ? n.play(0) : (n = a.gsap.TweenLite.to(t, e, {
                        css: {
                            scaleX: 0
                        },
                        ease: "Linear.easeNone"
                    }), this.set("countdownMeterAnimationTween", n))
                },
                _unobserveClashEndpoints() {
                    const e = this.get("clashBinding");
                    e && (e.unobserve("/v1/game-end", this), e.unobserve("/v1/eog-player-update", this))
                },
                actions: {
                    onNext() {
                        const e = this.get("currentCelebrationIndex"),
                            t = this.get("celebrations");
                        t && t[e] && t[e + 1] ? (this.set("showNext", !0), this._resetStateCountdown(), a.Util.destroyEmberApp(t[e].component), t[e].state = "complete", t[e + 1].state = "active") : (this.set("celebrationComplete", !0), this.set("currentCelebration", null))
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            t.default = class {
                static buildVpRewards(e, t, n) {
                    const {
                        rewardConfig: a
                    } = e;
                    let s = 0;
                    const i = t.find((e => "regular" === e.rewardSpec.name));
                    i && i.rewardSpec && (s = i.rewardSpec.quantity);
                    let o = 0;
                    const r = t.find((e => "bonus" === e.rewardSpec.name));
                    r && r.rewardSpec && (o = r.rewardSpec.quantity);
                    const l = this._getRewardConfigByName(a, "VP Payout");
                    if (!l || l.length <= 0) return;
                    l.push({
                        key: "0",
                        vals: []
                    }), this._sortRewardConfigEntries(l);
                    const c = parseInt(n),
                        d = Math.max(0, c - s - o);
                    let m = l.length - 1,
                        u = l.length - 1,
                        p = 0;
                    for (let e = l.length - 2; e >= 0; e--) parseInt(l[e].key) <= c && parseInt(l[e + 1].key) >= c && (u = e), parseInt(l[e].key) <= d && parseInt(l[e + 1].key) > d && (m = e, p = d - parseInt(l[e].key));
                    return {
                        vpLoops: this._buildVpLoops(l, m, u, p, s, o),
                        bonusVp: o,
                        regularVp: s
                    }
                }
                static _buildVpLoops(e, t, n, a, s, i) {
                    const o = [];
                    for (let r = t; r <= n; r++) {
                        const t = parseInt(e[r].key),
                            n = r < e.length - 1 ? parseInt(e[r + 1].key) : parseInt(e[r].key),
                            l = r < e.length - 1 ? e[r + 1].vals : e[r].vals,
                            c = n - t;
                        let d = c,
                            m = 0,
                            u = 0,
                            p = 0,
                            h = this._fillVpProgressBar(d, a);
                        if (m = h.vpUsed, d = h.remainingFillAmount, a = h.vpRemaining, h = this._fillVpProgressBar(d, s), u = h.vpUsed, d = h.remainingFillAmount, s = h.vpRemaining, h = this._fillVpProgressBar(d, i), p = h.vpUsed, d = h.remainingFillAmount, i = h.vpRemaining, r >= e.length - 2 && s + i > 0) {
                            const e = {
                                progressStartAmount: t,
                                progressEndAmount: n,
                                progressFillAmount: c + s + i,
                                initialVpAmount: m,
                                regularVpAmount: u,
                                bonusVpAmount: p,
                                vals: l
                            };
                            o.push(e);
                            break
                        }
                        const g = {
                            progressStartAmount: t,
                            progressEndAmount: n,
                            progressFillAmount: c,
                            initialVpAmount: m,
                            regularVpAmount: u,
                            bonusVpAmount: p,
                            vals: l
                        };
                        o.push(g)
                    }
                    return o
                }
                static _fillVpProgressBar(e, t) {
                    let n = 0;
                    return e > 0 && t > 0 && (e > t ? (n = t, e -= t, t = 0) : (t -= e, n = e, e = 0)), {
                        remainingFillAmount: e,
                        vpUsed: Number(n),
                        vpRemaining: Number(t)
                    }
                }
                static _getRewardConfigByName(e, t) {
                    let n = e.find((e => e.name === t));
                    return n ? (n = a._.cloneDeep(n), n.entries) : null
                }
                static _sortRewardConfigEntries(e) {
                    return e.sort(((e, t) => parseInt(e.key) - parseInt(t.key))), e
                }
                static calculateWinsFromPosition(e, t) {
                    if (!e || !t) return 0;
                    const n = Math.floor(Math.log2(e));
                    let a = 0;
                    return t > e / 2 && (t -= e / 2, a = -1), Math.max(n - Math.floor(Math.log2(t)) + a, 0)
                }
                static getBracketDataFromLootName(e) {
                    if (!e) return {};
                    const t = e.split("_");
                    if (t.length < 4) return {};
                    return {
                        bracketSize: t[2],
                        lowestPosition: t[3]
                    }
                }
                static trimLootItemCapsuleName(e) {
                    if (!e) return null;
                    const t = e.split("_");
                    if (t.length < 4) return e;
                    return `CHEST_clash_${t[2]}_${t[3]}`
                }
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "vmhFpbST",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\index.js\\" "],["text","\\n"],["open-element","uikit-state-machine",[]],["static-attr","class","clash-celebration-animation"],["static-attr","state","a"],["dynamic-attr","start-ceremony",["concat",[["unknown",["startCeremony"]]]]],["dynamic-attr","celebration-complete",["concat",[["unknown",["celebrationComplete"]]]]],["dynamic-attr","show-next",["concat",[["unknown",["showNext"]]]]],["dynamic-attr","skipped",["concat",[["unknown",["skipped"]]]]],["static-attr","skip-all","false"],["flush-element"],["text","\\n  \\n"],["text","  \\n  "],["open-element","uikit-states",[]],["flush-element"],["text","\\n    "],["open-element","uikit-state",[]],["static-attr","name","intro"],["flush-element"],["text","\\n      "],["open-element","uikit-behavior-media",[]],["static-attr","selector",".clash-celebration-intro-magic"],["static-attr","playing",""],["flush-element"],["close-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","initialize"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-delay",[]],["static-attr","duration","500"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","uikit-state",[]],["static-attr","name","initialize"],["flush-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","waiting"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-parameter",[]],["static-attr","name","start-ceremony"],["static-attr","value","false"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","start"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-parameter",[]],["static-attr","name","start-ceremony"],["static-attr","value","true"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","outro"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-parameter",[]],["static-attr","name","skip-all"],["static-attr","value","true"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","uikit-state",[]],["static-attr","name","waiting"],["flush-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","start"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-parameter",[]],["static-attr","name","start-ceremony"],["static-attr","value","true"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","outro"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-parameter",[]],["static-attr","name","celebration-complete"],["static-attr","value","true"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","outro"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-parameter",[]],["static-attr","name","skip-all"],["static-attr","value","true"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","uikit-state",[]],["static-attr","name","start"],["flush-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","show-reward"],["flush-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","outro"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-parameter",[]],["static-attr","name","skip-all"],["static-attr","value","true"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","uikit-state",[]],["static-attr","name","show-reward"],["flush-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","outro"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-parameter",[]],["static-attr","name","celebration-complete"],["static-attr","value","true"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","reward-outro"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-parameter",[]],["static-attr","name","show-next"],["static-attr","value","true"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","outro"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-parameter",[]],["static-attr","name","skip-all"],["static-attr","value","true"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","uikit-state",[]],["static-attr","name","reward-outro"],["flush-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","increment-celebration"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-delay",[]],["static-attr","duration","500"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","outro"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-parameter",[]],["static-attr","name","skip-all"],["static-attr","value","true"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","uikit-state",[]],["static-attr","name","increment-celebration"],["flush-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","show-reward"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-delay",[]],["static-attr","duration","100"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","uikit-state",[]],["static-attr","name","outro"],["flush-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","close-banners"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-delay",[]],["static-attr","duration","250"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","uikit-state",[]],["static-attr","name","close-banners"],["flush-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","closed"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-delay",[]],["static-attr","duration","500"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","uikit-state",[]],["static-attr","name","closed"],["flush-element"],["text","\\n\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["text","\\n"],["text","  "],["open-element","img",[]],["static-attr","class","clash-celebration-background"],["static-attr","src","/fe/lol-clash/assets/images/background/background-lobby.jpg"],["static-attr","visible-state","intro,waiting,initialize,start,show-reward,reward-outro,increment-celebration,outro,close-banners"],["flush-element"],["close-element"],["text","\\n\\n"],["text","  "],["open-element","user-experience-perf-switch",[]],["static-attr","class","clash-celebration-intro-magic"],["static-attr","default-visibility","hidden"],["static-attr","visible-state","intro,waiting,initialize,start,show-reward,increment-celebration,outro,close-banners"],["flush-element"],["text","\\n    "],["open-element","uikit-video",[]],["static-attr","src","/fe/lol-clash/assets/animations/videos/celebration/EoG_Intro_Magic.webm"],["static-attr","perf-flags","largeAreaAnimationsEnabled"],["static-attr","cache-name","rcp-fe-lol-clash"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","hidden"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["static-attr","class","clash-loading-spinner-container"],["static-attr","default-visibility","hidden"],["static-attr","visible-state","waiting"],["flush-element"],["text","\\n    "],["append",["helper",["uikit-spinner"],null,[["class"],["loading-spinner"]]],false],["text","\\n  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-wrapper ",["helper",["if"],[["get",["isShowRewardPhase"]],"animateFadeIn"],null]," ",["helper",["if"],[["get",["isRewardOutroPhase"]],"animateFadeOut"],null]]]],["static-attr","default-visibility","hidden"],["static-attr","visible-state","show-reward,reward-outro,outro"],["flush-element"],["text","\\n    "],["append",["unknown",["currentCelebrationComponent"]],false],["text","\\n  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["static-attr","class","clash-reward-pips"],["static-attr","default-visibility","hidden"],["static-attr","visible-state","intro,waiting,initialize,start,show-reward,reward-outro,increment-celebration,outro,close-banners"],["flush-element"],["text","\\n"],["block",["if"],[["get",["celebrations"]]],null,1],["text","  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-banner clash-top-banner ",["unknown",["currentBannerTransition"]]]]],["static-attr","default-visibility","hidden"],["static-attr","visible-state","intro,waiting,initialize,start,show-reward,reward-outro,increment-celebration,outro,close-banners"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-top-banner-border"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-banner clash-bottom-banner ",["unknown",["currentBannerTransition"]]]]],["static-attr","default-visibility","hidden"],["static-attr","visible-state","intro,waiting,initialize,start,show-reward,reward-outro,increment-celebration,outro,close-banners"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-bottom-banner-border"],["flush-element"],["close-element"],["text","\\n\\n"],["text","    "],["open-element","div",[]],["static-attr","class","next-button-container"],["flush-element"],["text","\\n      "],["open-element","lol-uikit-flat-button",[]],["static-attr","id","clash-claim-button"],["static-attr","class","clash-claim-button"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"onNext"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","clash_eog_celebration_next_button"]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","id","clash-countdown-meter-container"],["flush-element"],["text","\\n        "],["open-element","img",[]],["static-attr","class","clash-countdown-meter-background"],["static-attr","src","/fe/lol-clash/assets/images/countdown-meter/countdown_meter_bg.svg"],["flush-element"],["close-element"],["text","\\n        "],["open-element","img",[]],["static-attr","class","clash-countdown-meter"],["static-attr","src","/fe/lol-clash/assets/images/countdown-meter/countdown_meter.svg"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n\\n  "],["close-element"],["text","\\n\\n"],["close-element"],["text","\\n"],["append",["unknown",["bannerSizeObserver"]],false],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","clash-reward-pip"],["flush-element"],["close-element"],["text","\\n"]],"locals":["celebration"]},{"statements":[["text","      "],["open-element","div",[]],["flush-element"],["text","test"],["close-element"],["text","\\n"],["block",["each"],[["get",["celebrations"]]],null,0]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(95)) && a.__esModule ? a : {
                    default: a
                };
            n(254);
            const o = (0, s.emberDataBinding)({
                Ember: s.Ember,
                websocket: (0, s.getProvider)().getSocket(),
                boundProperties: {
                    gameEnd: {
                        path: "/lol-clash/v1/game-end",
                        default: null,
                        objectTypes: i.default.getObjectBindingTypes("oldBracket")
                    },
                    playerTournamentData: "/lol-clash/v1/tournament/{{gameEnd.tournamentId}}/player",
                    bracket: {
                        path: "/lol-clash/v1/bracket/{{gameEnd.bracketId}}",
                        default: null,
                        objectTypes: i.default.getObjectBindingTypes()
                    }
                }
            });
            e.exports = s.Ember.Component.extend(o, {
                classNames: ["bracket-celebration"],
                layout: n(255),
                totalDuration: 18,
                localPlayerRosterId: s.Ember.computed("playerTournamentData.rosterId", (function() {
                    const e = this.get("playerTournamentData.rosterId");
                    return e ? parseInt(e) : 0
                })),
                titleLoc: s.Ember.computed("bracket.matches", "bracket.matches.[]", "bracket.matches.@each.status", "localPlayerRosterId", (function() {
                    const e = this.get("bracket"),
                        t = this.get("localPlayerRosterId");
                    if (!e || !t) return "";
                    const n = e.calculateBracketProgressForRoster(t),
                        a = n.latestCompletedMatch,
                        s = n.latestUpcomingMatch,
                        i = e.get("totalRounds");
                    return a ? String(a.winnerId) === String(t) ? a.get("isLosersBracket") || a.round !== i ? a.get("isLosersBracket") && a.round === i ? "clash_eog_celebration_bracket_consolation_winner" : a.get("isLosersBracket") ? "clash_eog_celebration_bracket_consolation_win" : "clash_eog_celebration_bracket_win" : "clash_eog_celebration_bracket_bracket_winner" : a.get("isLosersBracket") ? s ? "clash_eog_celebration_bracket_loss" : "clash_eog_celebration_bracket_consolation_loss" : a.round !== i && s ? "clash_eog_celebration_bracket_loss" : "clash_eog_celebration_bracket_loss_no_consolation" : "clash_eog_celebration_bracket_generic"
                })),
                headerTitle: s.Ember.computed("titleLoc", (function() {
                    let e = this.get("titleLoc");
                    return e || (e = "clash_eog_celebration_bracket_generic"), this.get(`tra.${e}_title`)
                })),
                headerSubtitle: s.Ember.computed("titleLoc", (function() {
                    let e = this.get("titleLoc");
                    return e || (e = "clash_eog_celebration_bracket_generic"), this.get(`tra.${e}_subtitle`)
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "Jk5lLc7w",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\bracket-celebration\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\bracket-celebration\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\bracket-celebration\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-eog-bracket-celebration-title-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-bracket-celebration-title"],["flush-element"],["append",["unknown",["headerTitle"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-bracket-celebration-subtitle"],["flush-element"],["append",["unknown",["headerSubtitle"]],false],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","end-of-game-modal-content clash-eog-bracket-celebration-content"],["flush-element"],["text","\\n  "],["append",["helper",["bracket-celebration-view"],null,[["gameEnd","bracket","localPlayerRosterId","totalDuration"],[["get",["gameEnd"]],["get",["bracket"]],["get",["localPlayerRosterId"]],["get",["totalDuration"]]]]],false],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(257), e.exports = a.Ember.Component.extend({
                classNames: ["bracket-celebration-view"],
                layout: n(258),
                gameEnd: null,
                bracket: null,
                localPlayerRosterId: null,
                totalDuration: 18,
                bracketSize: a.Ember.computed.alias("bracket.size"),
                is16ManBracket: a.Ember.computed("bracketSize", (function() {
                    return 16 === this.get("bracketSize")
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "nAKp4dIL",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\bracket-celebration\\\\bracket-celebration-view\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\bracket-celebration\\\\bracket-celebration-view\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\bracket-celebration\\\\bracket-celebration-view\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["bracket"]]],null,3,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["append",["helper",["uikit-spinner"],null,[["class"],["loading-spinner"]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["append",["helper",["bracket-layout"],null,[["bracket","oldBracket","tournamentNameLocKey","localPlayerRosterId","isLosersBracket","targetRound","isInteractive","useAnimations","isEog","totalAnimDuration"],[["get",["bracket"]],["get",["gameEnd","oldBracket"]],["get",["gameEnd","tournamentNameLocKey"]],["get",["localPlayerRosterId"]],false,1,false,true,true,["get",["totalDuration"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["append",["helper",["bracket-layout-16"],null,[["bracket","oldBracket","tournamentNameLocKey","localPlayerRosterId","isLosersBracket","selectedBracket","targetRound","isInteractive","useAnimations","isEog","totalAnimDuration"],[["get",["bracket"]],["get",["gameEnd","oldBracket"]],["get",["gameEnd","tournamentNameLocKey"]],["get",["localPlayerRosterId"]],false,"winners",1,false,true,true,["get",["totalDuration"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["is16ManBracket"]]],null,2,1]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(250)) && a.__esModule ? a : {
                    default: a
                };
            n(260);
            e.exports = s.Ember.Component.extend({
                classNames: ["capsule-grant-celebration"],
                layout: n(261),
                isInitialized: !1,
                capsuleVideoObserver: s.Ember.computed("rewardSpec", "bracketSize", "lowestPosition", (function() {
                    const e = this.get("bracketSize"),
                        t = this.get("lowestPosition"),
                        n = i.default.calculateWinsFromPosition(e, t) || 0;
                    this.set("wins", n), this.get("isInitialized") || s.Ember.run.next((() => {
                        this._animateCapsuleGrant(e, n), this.set("isInitialized", !0)
                    }))
                })),
                capsuleFramePath: s.Ember.computed("capsuleType", (function() {
                    return `/fe/lol-clash/assets/images/capsule-progress/reward_frame_${this.get("capsuleType")}.png`
                })),
                capsuleType: s.Ember.computed("bid", (function() {
                    return this.get("bid") > 1 ? "capsule" : "orb"
                })),
                title: s.Ember.computed("capsuleType", (function() {
                    const e = this.get("capsuleType");
                    return this.get(`tra.clash_eog_celebration_${e}_grant_title`)
                })),
                subtitle: s.Ember.computed("capsuleType", (function() {
                    const e = this.get("capsuleType");
                    return this.get(`tra.clash_eog_celebration_${e}_grant_subtitle`)
                })),
                onWillDestroyElement: s.Ember.on("willDestroyElement", (function() {
                    const e = this.get("audioPath");
                    s.AudioManager.stopAudio(e)
                })),
                _getCapsuleAudioPath() {
                    return `${this.get("capsuleType")}-${this.get("bracketSize")}-${this.get("wins")}`
                },
                _animateCapsuleGrant(e, t) {
                    const n = this.$("#clash-capsule-grant-video-state-machine").get(0);
                    n && s.Ember.$.getJSON(`/fe/lol-clash/assets/animations/lottie/capsule-grant-bracket${e}_${t}.json`, (e => {
                        const a = s.lottie.loadAnimation({
                            container: document.getElementById("clash-frame-grant"),
                            renderer: "svg",
                            loop: !1,
                            autoplay: !1,
                            animationData: e
                        });
                        n.addEventListener("videoStateSignal", (e => {
                            "capsule-intro" === e.detail.video && (t || this.$("#clash-frame-grant").hide())
                        })), n && n.dispatchEvent(new Event("clash-capsule-grant")), t > 0 && a && a.play();
                        const i = this._getCapsuleAudioPath();
                        this.set("audioPath", i), s.AudioManager.playAudio(i), this.$(".clash-capsule-grant-frame").show().delay(3e3).fadeOut(500)
                    }))
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "FXBwkLKl",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\capsule-grant-celebration\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\capsule-grant-celebration\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\capsule-grant-celebration\\\\index.js\\" "],["text","\\n"],["append",["unknown",["capsuleVideoObserver"]],false],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-eog-celebration-title-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-celebration-title"],["flush-element"],["append",["unknown",["title"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-celebration-subtitle"],["flush-element"],["append",["unknown",["subtitle"]],false],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","clash-capsule-grant-celebration-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-capsule-image-container"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-capsule-grant-frame"],["dynamic-attr","src",["concat",[["unknown",["capsuleFramePath"]]]]],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","id","clash-frame-grant"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-capsule-grant-video-container"],["flush-element"],["text","\\n      "],["open-element","lol-uikit-video-state-machine",[]],["static-attr","id","clash-capsule-grant-video-state-machine"],["flush-element"],["text","\\n        "],["open-element","lol-uikit-video-group",[]],["flush-element"],["text","\\n          "],["open-element","lol-uikit-video-state",[]],["static-attr","state","null"],["static-attr","no-preserve-state",""],["flush-element"],["close-element"],["text","\\n          "],["open-element","lol-uikit-video-state",[]],["static-attr","state","clash-capsule-grant"],["static-attr","no-preserve-state",""],["flush-element"],["text","\\n            "],["open-element","lol-uikit-video",[]],["static-attr","type","intro"],["static-attr","name","capsule-intro"],["static-attr","preload",""],["static-attr","signal-before-end","2.2"],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/animations/videos/celebration/capsules/payout_",["unknown",["capsuleType"]],"_",["unknown",["bracketSize"]],"_intro.webm"]]],["flush-element"],["close-element"],["text","\\n            "],["open-element","lol-uikit-video",[]],["static-attr","type","idle"],["static-attr","name","capsule-loop"],["static-attr","preload",""],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/animations/videos/celebration/capsules/payout_",["unknown",["capsuleType"]],"_",["unknown",["bracketSize"]],"_loop.webm"]]],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(263);
            const s = "capsule";
            e.exports = a.Ember.Component.extend({
                classNames: ["capsule-upgrade-celebration"],
                layout: n(264),
                rewardSpec: {},
                isInitialized: !1,
                onDidInsertElement: a.Ember.on("didInsertElement", (function() {
                    const e = this.get("bid"),
                        t = this.get("bracketSize"),
                        n = e > 1 ? s : "orb";
                    this.set("capsuleVideoPath", `/fe/lol-clash/assets/animations/videos/celebration/capsules/upgrade_${n}_${t}.webm`), this.get("isInitialized") || a.Ember.run.next((() => {
                        this._animateCapsuleUpgrade(t), this.set("isInitialized", !0)
                    }))
                })),
                capsuleFramePath: a.Ember.computed("capsuleType", (function() {
                    return `/fe/lol-clash/assets/images/capsule-progress/reward_frame_${this.get("capsuleType")}.png`
                })),
                capsuleType: a.Ember.computed("bid", (function() {
                    return this.get("bid") > 1 ? s : "orb"
                })),
                title: a.Ember.computed("capsuleType", (function() {
                    const e = this.get("capsuleType");
                    return this.get(`tra.clash_eog_celebration_${e}_upgrade_title`)
                })),
                subtitle: a.Ember.computed("capsuleType", (function() {
                    const e = this.get("capsuleType");
                    return this.get(`tra.clash_eog_celebration_${e}_upgrade_subtitle`)
                })),
                onWillDestroyElement: a.Ember.on("willDestroyElement", (function() {
                    const e = this.get("audioPath");
                    a.AudioManager.stopAudio(e)
                })),
                _getCapsuleAudioPath() {
                    return `${this.get("capsuleType")}-upgrade-${this.get("bracketSize")}`
                },
                _animateCapsuleUpgrade(e) {
                    const t = this.$(".clash-capsule-upgrade-video").get(0);
                    a.Ember.$.getJSON(`/fe/lol-clash/assets/animations/lottie/capsule-upgrade-bracket${e}.json`, (e => {
                        const n = a.lottie.loadAnimation({
                            container: document.getElementById("clash-frame-pips"),
                            renderer: "svg",
                            loop: !1,
                            autoplay: !1,
                            animationData: e
                        });
                        t && t.play(), n && n.play();
                        const s = this._getCapsuleAudioPath();
                        this.set("audioPath", s), a.AudioManager.playAudio(s)
                    }))
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "AdVogCcX",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\capsule-upgrade-celebration\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\capsule-upgrade-celebration\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\capsule-upgrade-celebration\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-eog-celebration-title-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-celebration-title"],["flush-element"],["append",["unknown",["title"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-celebration-subtitle"],["flush-element"],["append",["unknown",["subtitle"]],false],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","clash-capsule-upgrade-celebration-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-capsule-image-container"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-capsule-upgrade-frame"],["dynamic-attr","src",["concat",[["unknown",["capsuleFramePath"]]]]],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","id","clash-frame-pips"],["flush-element"],["close-element"],["text","\\n    "],["open-element","lol-uikit-video",[]],["static-attr","class","clash-capsule-upgrade-video"],["static-attr","type","intro"],["dynamic-attr","src",["concat",[["unknown",["capsuleVideoPath"]]]]],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9);
            n(266);
            const i = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                basePaths: {
                    gameData: "/lol-game-data"
                },
                boundProperties: {
                    bannersGameData: {
                        api: "gameData",
                        path: "/assets/v1/summoner-banners.json",
                        default: {}
                    }
                }
            });
            e.exports = a.Ember.Component.extend(i, {
                classNames: ["vp-grant-celebration"],
                layout: n(267),
                gdsService: a.Ember.inject.service("gds"),
                vpLoop: null,
                regularVp: 0,
                bonusVp: 0,
                showBonusVp: !1,
                showRewardBackground: !1,
                onDidInsertElement: a.Ember.on("didInsertElement", (function() {
                    this._initializeVpCircle()
                })),
                tierTxt: a.Ember.computed("tier", (function() {
                    const e = this.get("tier");
                    return e ? s.ROMAN_NUMERALS[e] : ""
                })),
                reward: a.Ember.computed("vpLoop", "vpLoop.vals", (function() {
                    const e = this.get("vpLoop.vals");
                    return e && e.length ? e[0].primary : null
                })),
                regularVpText: a.Ember.computed("regularVp", (function() {
                    const e = this.get("regularVp");
                    return this.get("tra").formatString("clash_eog_celebration_vp_earned_text", {
                        regularVp: e
                    })
                })),
                currentVpRewardImage: a.Ember.computed("bannersGameData.BannerFlags.[]", "reward", "gdsService.ready", (function() {
                    const e = this.get("reward");
                    if (!e) return null;
                    if ("FLAG" === e.rewardType) {
                        const t = this.get("bannersGameData.BannerFlags");
                        if (!t) return null;
                        const n = a._.first(a._.filter(t, {
                            theme: e.rewardSpec.theme,
                            level: Number(e.rewardSpec.level)
                        }));
                        return n ? n.inventoryIcon : null
                    }
                    if ("LOGO" === e.rewardType) {
                        if (!this.get("gdsService.ready")) return "";
                        const t = e.rewardSpec.name;
                        return this.get("gdsService").getLogoPath(t, 1)
                    }
                    return null
                })),
                isFlagReward: a.Ember.computed.equal("reward.rewardType", "FLAG"),
                isLogoReward: a.Ember.computed.equal("reward.rewardType", "LOGO"),
                onWillDestroyElement: a.Ember.on("willDestroyElement", (function() {
                    a.AudioManager.stopAllAudio()
                })),
                _initializeVpCircle() {
                    const e = this.get("vpLoop");
                    if (!e) return;
                    const t = parseInt(e.progressStartAmount),
                        n = parseInt(e.progressEndAmount),
                        s = Math.min(parseInt(e.progressFillAmount), n - t),
                        i = parseInt(e.progressFillAmount) - (n - t),
                        o = parseInt(e.initialVpAmount),
                        r = parseInt(e.regularVpAmount),
                        l = parseInt(e.bonusVpAmount),
                        c = t + o + r + l,
                        d = s ? o / s * 100 : 0,
                        m = s ? r / s * 100 : 0,
                        u = s ? l / s * 100 : 0,
                        p = s <= o + r + l,
                        h = 0 === s;
                    this.set("initialVpPercent", d), this.set("regularVpPercent", m), this.set("bonusVpPercent", u), this.set("progressCurrentAmount", c), this.set("progressEndAmount", n), this.set("isRewardTrackComplete", h), this.set("displayedProgressCurrentAmount", t), a.Ember.run.later((() => {
                        const e = new a.gsap.TimelineMax({
                            paused: !0
                        });
                        this._animateVpMeter(e, o, r, l, t, c, i, d, m, u, p), p && !h && e.add((() => {
                            this._playRewardCompleteVideo()
                        })), e.play()
                    }), 250)
                },
                _animateVpMeter(e, t, n, s, i, o, r, l, c, d, m) {
                    const u = t + n > 0 ? 1 : 0,
                        p = s ? .67 : 0,
                        h = .67,
                        g = t + n > 0 ? u + h + .5 : h,
                        f = u + p + h + (g - u);
                    this._animateMeterFill(l, c, d, h, g);
                    const _ = {
                        amount: i
                    };
                    if (u > 0 && e.add(a.gsap.TweenLite.to(_, u, {
                            amount: i + t + n + r,
                            onUpdate: () => {
                                this.set("displayedProgressCurrentAmount", Math.round(_.amount))
                            }
                        }).delay(h)), s > 0 && e.add(a.gsap.TweenLite.to(_, p - .1, {
                            amount: o,
                            onUpdate: () => {
                                this.set("displayedProgressCurrentAmount", Math.round(_.amount))
                            }
                        }).delay(u ? .5 : .67)), this.get("showBonusVp")) {
                        const e = g - .2;
                        a.Ember.run.later((() => {
                            this._animateBonusVpContent(m)
                        }), 1e3 * e)
                    }
                    return f
                },
                _animateMeterFill(e, t, s, i, o) {
                    const r = e + t > 0,
                        l = s > 0,
                        c = n(268);
                    c.layers[0].shapes[0].it[1].o.k = Math.max(0, e + t - 4.5), c.layers[0].shapes[0].it[1].e.k[0].e = [Math.min(100, s)];
                    const d = n(269);
                    d.layers[0].shapes[1].s.k = e, d.layers[0].shapes[1].e.k[0].e = [e + t];
                    const m = a.lottie.loadAnimation({
                            container: document.getElementById("clash-vp-meter-regular"),
                            renderer: "svg",
                            loop: !1,
                            autoplay: !1,
                            animationData: d
                        }),
                        u = a.lottie.loadAnimation({
                            container: document.getElementById("clash-vp-meter-bonus"),
                            renderer: "svg",
                            loop: !1,
                            autoplay: !1,
                            animationData: c
                        });
                    r && a.Ember.run.later((() => {
                        m && m.play(), a.AudioManager.playAudio("victory-point-bar-fill")
                    }), 1e3 * i), l && a.Ember.run.later((() => {
                        u && u.play(), a.AudioManager.playAudio("victory-point-bonus-bar-fill")
                    }), 1e3 * o)
                },
                _animateBonusVpContent(e) {
                    const t = this.$(".clash-bonus-vp-container"),
                        n = this.$(".bonus-vp-background"),
                        s = this.$(".bonus-vp-background-circle-outline"),
                        i = this.$(".bonus-vp-text"),
                        o = this.$(".bonus-vp-tier"),
                        r = this.get("bonusVp");
                    a.gsap.TweenLite.to(t, .1, {
                        css: {
                            opacity: 1
                        }
                    });
                    const l = new a.gsap.TimelineMax({
                        repeat: -1
                    });
                    l.to(n, 1, {
                        rotation: 360,
                        ease: a.gsap.Linear.easeNone
                    }), a.gsap.TweenLite.to(l, 1, {
                        timeScale: .05,
                        ease: a.gsap.Expo.easeOut
                    }), a.gsap.TweenLite.fromTo(n, .5, {
                        scale: .2
                    }, {
                        scale: 1
                    }), a.gsap.TweenMax.fromTo(s, .5, {
                        scale: 1,
                        opacity: 1,
                        ease: "Expo.easeOut"
                    }, {
                        scale: .15,
                        opacity: 0
                    }), a.gsap.TweenLite.fromTo(i, .33, {
                        css: {
                            bottom: "-50px"
                        },
                        ease: "Expo.easeOut"
                    }, {
                        css: {
                            bottom: 0
                        }
                    }).delay(.17), a.gsap.TweenLite.fromTo(i, .2, {
                        css: {
                            opacity: 0
                        }
                    }, {
                        css: {
                            opacity: 1
                        }
                    }).delay(.17), a.gsap.TweenLite.fromTo(o, .33, {
                        css: {
                            top: "-50px"
                        },
                        ease: "Expo.easeOut"
                    }, {
                        css: {
                            top: 0
                        }
                    }).delay(.17), a.gsap.TweenLite.fromTo(o, .2, {
                        css: {
                            opacity: 0
                        }
                    }, {
                        css: {
                            opacity: 1
                        }
                    }).delay(.17);
                    const c = {
                        amount: 0
                    };
                    this.set("displayedBonusVp", c.amount), a.gsap.TweenLite.to(c, .67, {
                        amount: r,
                        ease: a.gsap.Expo.easeOut,
                        onUpdate: () => {
                            this.set("displayedBonusVp", Math.round(c.amount))
                        }
                    }).delay(.33), e && a.gsap.TweenLite.to(t, .5, {
                        opacity: 0
                    }).delay(2.75)
                },
                _playRewardCompleteVideo() {
                    const e = document.getElementById("reward-complete-video");
                    e && (e.addEventListener("signal", (() => {
                        const e = this.$(".vp-reward-image-container"),
                            t = this.$(".clash-vp-display-visuals"),
                            n = this.$(".clash-reward-display-container"),
                            s = this.$(".clash-eog-celebration-vp-title-container"),
                            i = this.$(".clash-vp-progress-circle");
                        a.gsap.TweenLite.to(i, .1, {
                            opacity: 0
                        }), a.gsap.TweenLite.to(t, .1, {
                            opacity: 0
                        }), a.gsap.TweenLite.to(s, .25, {
                            opacity: 0
                        }), this.get("isFlagReward") ? (a.gsap.TweenLite.to(n, 1, {
                            opacity: 1
                        }).delay(.45), a.gsap.TweenLite.to(e, .1, {
                            opacity: 0
                        }).delay(.45)) : (a.gsap.TweenLite.to(n, .5, {
                            opacity: 1
                        }).delay(.55), a.gsap.TweenLite.to(e, .1, {
                            opacity: 0
                        }).delay(.55)), this.set("showRewardBackground", !0)
                    })), e && e.play(), a.AudioManager.playAudio("victory-point-reward-transition"))
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "6eU3hw6/",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\vp-grant-celebration\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\vp-grant-celebration\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\vp-grant-celebration\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-eog-celebration-vp-title-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-celebration-title"],["flush-element"],["append",["unknown",["tra","clash_eog_celebration_vp_grant_title"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-celebration-subtitle"],["flush-element"],["append",["unknown",["tra","clash_eog_celebration_vp_grant_subtitle"]],false],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","clash-vp-grant-celebration-container"],["flush-element"],["text","\\n"],["text","  "],["open-element","div",[]],["static-attr","class","clash-vp-view-wrapper"],["static-attr","default-visibility","hidden"],["static-attr","visible-state","intro,show-reward,outro"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-vp-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-vp-container-visuals"],["flush-element"],["text","\\n"],["block",["if"],[["get",["currentVpRewardImage"]]],null,5],["text","\\n"],["text","        "],["open-element","div",[]],["static-attr","class","clash-vp-progress-circle"],["flush-element"],["text","\\n          "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/celebration/vp_progression_meter_background.png"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","id","clash-vp-meter-bonus"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","id","clash-vp-meter-regular"],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["isRewardTrackComplete"]]],null,1],["text","          "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/celebration/vp_progression_frame.png"],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"],["text","    "],["open-element","div",[]],["static-attr","class","clash-vp-display-visuals"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","vp-display"],["flush-element"],["text","\\n        "],["append",["unknown",["displayedProgressCurrentAmount"]],false],["text","/"],["append",["unknown",["progressEndAmount"]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","vp-display-text"],["flush-element"],["text","\\n        "],["append",["unknown",["tra","clash_victory_points"]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["block",["if"],[["get",["bonusVp"]]],null,0],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-reward-display-container"],["flush-element"],["text","\\n  "],["append",["helper",["reward-grant-celebration"],null,[["reward","rewardImagePath","showBackground","showRewardImage"],[["get",["reward"]],["get",["currentVpRewardImage"]],["get",["showRewardBackground"]],true]]],false],["text","\\n"],["close-element"],["text","\\n"],["open-element","lol-uikit-video",[]],["static-attr","id","reward-complete-video"],["static-attr","class","reward-complete-video"],["static-attr","type","intro"],["static-attr","signal-before-end","2.8"],["static-attr","src","/fe/lol-clash/assets/animations/videos/celebration/vp_reward_complete.webm"],["flush-element"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-bonus-vp-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","bonus-vp-background"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","bonus-vp-background-circle-outline"],["flush-element"],["text","\\n        "],["open-element","svg",[]],["static-attr","height","130"],["static-attr","width","130"],["flush-element"],["text","\\n          "],["open-element","circle",[]],["static-attr","cx","65"],["static-attr","cy","65"],["static-attr","r","65"],["static-attr","stroke","gray"],["static-attr","stroke-width","2"],["static-attr","fill","rgba(0,0,0,0)"],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","bonus-vp-text"],["flush-element"],["append",["unknown",["tra","clash_eog_celebration_vp_bonus_text"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","bonus-vp-display"],["flush-element"],["text","\\n        +"],["append",["unknown",["displayedBonusVp"]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","bonus-vp-tier"],["flush-element"],["append",["unknown",["tra","clash_tier"]],false],["text"," "],["append",["unknown",["tierTxt"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","img",[]],["static-attr","class","clash-vp-reward-complete-image"],["static-attr","src","/fe/lol-clash/assets/images/celebration/vp_progression_meter_complete.png"],["flush-element"],["close-element"],["text","\\n            "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/celebration/reward_complete_checkmark.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["open-element","img",[]],["static-attr","class","vp-reward-image-logo"],["dynamic-attr","src",["concat",[["unknown",["currentVpRewardImage"]]]]],["flush-element"],["close-element"],["text","\\n            "]],"locals":[]},{"statements":[["block",["if"],[["get",["isLogoReward"]]],null,2]],"locals":[]},{"statements":[["text","              "],["open-element","img",[]],["static-attr","class","vp-reward-image-flag"],["static-attr","src","/fe/lol-clash/assets/placeholder/rewards/background.jpg"],["flush-element"],["close-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","vp-reward-image-flag banner"],["dynamic-attr","style",["concat",["background-image:url(\'",["unknown",["currentVpRewardImage"]],"\')"]]],["flush-element"],["close-element"],["text","\\n              "],["open-element","img",[]],["static-attr","class","vp-reward-image-flag"],["static-attr","src","/fe/lol-clash/assets/placeholder/rewards/BANNER_FLAG_shadow.png"],["flush-element"],["close-element"],["text","\\n              "],["open-element","img",[]],["static-attr","class","vp-reward-image-flag"],["static-attr","src","/fe/lol-clash/assets/placeholder/rewards/BANNER_FLAG_frame_default.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","vp-reward-image-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isFlagReward"]]],null,4,3],["text","          "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.4","fr":30,"ip":0,"op":35,"w":500,"h":500,"nm":"Comp 1b","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":3,"ty":4,"nm":"VP_bonus","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,250,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"s","pt":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[0.756,133.831],[-74.5,209.087],[82.5,218.169]],"c":true},"ix":1},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[366,366],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\\n$bm_rt = linear(value, 0, 100, 2.5, 97.5);"},"e":{"a":1,"k":[{"i":{"x":[0],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0_1_0p167_0p167"],"t":0,"s":[0],"e":[17]},{"t":20}],"ix":2,"x":"var $bm_rt;\\n$bm_rt = linear(value, 0, 100, 2.5, 97.5);"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\\n$bm_rt = linear(value, 0, 100, 0, 360);"},"m":1,"ix":2,"nm":"Trim Paths_UPDATE","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.784313738346,0.666666686535,0.43137255311,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":18,"ix":5},"lc":1,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":180,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[500,500],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"Rectangle Path 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4},"o":{"a":0,"k":0,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":451,"st":0,"bm":0}],"markers":[]}')
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.3","fr":30,"ip":0,"op":81,"w":500,"h":500,"nm":"Comp 1b","ddd":0,"assets":[{"id":"image_0","w":500,"h":500,"u":"/fe/lol-clash/assets/animations/lottie/images/","p":"VP_new.png"},{"id":"image_1","w":500,"h":500,"u":"/fe/lol-clash/assets/animations/lottie/images/","p":"VP_old.png"}],"layers":[{"ddd":0,"ind":3,"ty":4,"nm":"VP_new_MATTE","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,250,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"d":1,"ty":"el","s":{"a":0,"k":[366,366],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"tm","s":{"a":0,"k":30,"ix":1,"x":"var $bm_rt;\\n$bm_rt = linear(value, 0, 100, 2.5, 97.5);"},"e":{"a":1,"k":[{"i":{"x":[0],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0_1_0p167_0p167"],"t":0,"s":[0],"e":[65]},{"t":30}],"ix":2,"x":"var $bm_rt;\\n$bm_rt = linear(value, 0, 100, 2.5, 97.5);"},"o":{"a":0,"k":180,"ix":3},"m":1,"ix":2,"nm":"Trim Paths_UPDATE","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":91,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":0,"op":451,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":2,"nm":"VP_new.png","cl":"png","tt":1,"refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11,"x":"var $bm_rt;\\nvar start, end;\\nstart = thisComp.layer(\'VP_new_MATTE\').content(\'Trim Paths_UPDATE\').start;\\n$bm_rt = end = thisComp.layer(\'VP_new_MATTE\').content(\'Trim Paths_UPDATE\').end;\\nif (start > end)\\n    $bm_rt = 0;\\nelse\\n    $bm_rt = 100;"},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,250,0],"ix":2},"a":{"a":0,"k":[250,250,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"s","pt":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[250.256,383.331],[175,458.587],[332,467.669]],"c":true},"ix":1},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"ip":0,"op":451,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"VP_old_MATTE","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,250,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"d":1,"ty":"el","s":{"a":0,"k":[366,366],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":0,"k":0,"ix":2,"x":"var $bm_rt;\\nvar start, end;\\nstart = thisComp.layer(\'VP_new_MATTE\').content(\'Trim Paths_UPDATE\').start;\\n$bm_rt = end = thisComp.layer(\'VP_new_MATTE\').content(\'Trim Paths_UPDATE\').end;\\nif (start > end)\\n    $bm_rt = end;\\nelse\\n    $bm_rt = sub(start, 0.54);"},"o":{"a":0,"k":180,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0,0,0,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":18,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"d":1,"ty":"el","s":{"a":0,"k":[366,366],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 2","mn":"ADBE Vector Shape - Ellipse","hd":false}],"ip":0,"op":451,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":2,"nm":"VP_old.png","cl":"png","tt":1,"refId":"image_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,250,0],"ix":2},"a":{"a":0,"k":[250,250,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"s","pt":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[250.256,383.331],[175,458.587],[332,467.669]],"c":true},"ix":1},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"ip":0,"op":451,"st":0,"bm":0}],"markers":[]}')
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(271);
            const s = "FRAME",
                i = "SUMMONER_ICON_";
            e.exports = a.Ember.Component.extend({
                classNames: ["reward-grant-celebration"],
                layout: n(272),
                reward: null,
                showBackground: !1,
                showRewardImage: !1,
                rewardImagePath: null,
                rewardType: a.Ember.computed.alias("reward.rewardType"),
                rewardSpec: a.Ember.computed.alias("reward.rewardSpec"),
                rewardTextDescription: "",
                isFlagReward: a.Ember.computed.equal("rewardType", "FLAG"),
                isFrameReward: a.Ember.computed.equal("rewardType", s),
                isSummonerIconReward: a.Ember.computed("rewardSpec.name", (function() {
                    const e = this.get("rewardSpec.name");
                    return e && e.includes(i)
                })),
                rewardObserver: a.Ember.computed("rewardType", "rewardSpec", "rewardSpec.name", (function() {
                    const e = this.get("rewardType"),
                        t = this.get("rewardSpec");
                    if (e && t) {
                        if (e === s) {
                            a.Ember.run.next((() => {
                                this._animateFrameGrant(t)
                            }));
                            const e = t.level || "";
                            this.set("rewardTextDescription", this.get("tra").formatString("clash_eog_celebration_frame_reward_description", {
                                level: e
                            }))
                        }
                        if (t.name && t.name.includes(i)) {
                            const e = t.name.split(i),
                                n = parseInt(e[1], 10),
                                s = a.SummonerIconManager.getIconUrlById(n);
                            this.set("rewardImagePath", s), this.set("showRewardImage", !0), this.set("rewardTextDescription", this.get("tra.clash_reward_summoner_icon"))
                        }
                    }
                })),
                _animateFrameGrant(e) {
                    const t = this.$("#frameIntroVideo").get(0);
                    a.Ember.$.getJSON("/fe/lol-clash/assets/animations/lottie/frame-reward-grant.json", (n => {
                        const s = e.level || 1;
                        n.assets[0].p = `Banner_Frame_Tier_${s}.png`;
                        const i = a.lottie.loadAnimation({
                            container: this.$(".clash-reward-animation-lottie-container").get(0),
                            renderer: "svg",
                            loop: !1,
                            autoplay: !1,
                            animationData: n
                        });
                        t && t.play(), i && i.play()
                    }))
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "PFLoqLhK",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\reward-grant-celebration\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\reward-grant-celebration\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\end-of-game-flow\\\\reward-grant-celebration\\\\index.js\\" "],["text","\\n"],["append",["unknown",["rewardObserver"]],false],["text","\\n"],["block",["if"],[["get",["showBackground"]]],null,6],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-eog-celebration-title-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-celebration-title"],["flush-element"],["append",["unknown",["tra","clash_eog_celebration_reward_grant_title"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-celebration-subtitle"],["flush-element"],["append",["unknown",["tra","clash_eog_celebration_reward_grant_subtitle"]],false],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","clash-reward-grant-celebration-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["showRewardImage"]]],null,4],["text","  "],["open-element","div",[]],["static-attr","class","clash-reward-animation-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-reward-animation-lottie-container"],["flush-element"],["text","\\n      "],["open-element","lol-uikit-video",[]],["static-attr","id","frameIntroVideo"],["static-attr","type","intro"],["static-attr","src","/fe/lol-clash/assets/animations/videos/celebration/frame-magic.webm"],["static-attr","fade-in","0"],["static-attr","fade-out","0"],["static-attr","preload",""],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-reward-text-description"],["flush-element"],["text","\\n    "],["append",["unknown",["rewardTextDescription"]],false],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","clash-reward-image"],["dynamic-attr","src",["concat",[["unknown",["rewardImagePath"]]]]],["flush-element"],["close-element"],["text","\\n      "]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","clash-reward-image-summoner-icon"],["dynamic-attr","src",["concat",[["unknown",["rewardImagePath"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isSummonerIconReward"]]],null,1,0]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","clash-reward-banner-image banner"],["dynamic-attr","src",["concat",[["unknown",["rewardImagePath"]]]]],["flush-element"],["close-element"],["text","\\n        "],["open-element","img",[]],["static-attr","class","clash-reward-banner-frame-shadow"],["static-attr","src","/fe/lol-clash/assets/placeholder/rewards/BANNER_FLAG_shadow.png"],["flush-element"],["close-element"],["text","\\n        "],["open-element","img",[]],["static-attr","class","clash-reward-banner-frame"],["static-attr","src","/fe/lol-clash/assets/placeholder/rewards/BANNER_FLAG_frame_default.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-reward-image-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isFlagReward"]]],null,3,2],["text","    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","img",[]],["dynamic-attr","class",["concat",["clash-eog-reward-grant-background ",["helper",["if"],[["get",["showBackground"]],"animateFadeIn"],null]]]],["static-attr","src","/fe/lol-clash/assets/images/celebration/background_banner.jpg"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isFlagReward"]]],null,5]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(274);
            var s = n(9);
            const i = 0,
                o = 2e3,
                r = 5e3;
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-eos-celebration"],
                layout: n(275),
                gdsService: a.Ember.inject.service("gds"),
                closeModalCallback: null,
                data: {},
                rewards: a.Ember.computed.alias("data.rewards"),
                seasonVp: a.Ember.computed.alias("data.seasonVp"),
                didInsertElement() {
                    this._super(...arguments), a.Util.waitForElement(this.element, "#intro-video").then((() => {
                        a.logger.warning("initializing eos celebration");
                        const e = this.$("#intro-video").get(0);
                        e && e.play();
                        const t = this.element.querySelector(".clash-eos-celebration-title-container"),
                            n = this.element.querySelector(".clash-eos-celebration-contents"),
                            s = this.element.querySelector(".clash-eos-celebration-background");
                        t && t.classList && t.classList.add("visible"), n && n.classList && n.classList.add("visible"), s && s.classList && s.classList.add("visible")
                    }))
                },
                rewardsTier: a.Ember.computed("seasonVp", (function() {
                    const e = this.get("seasonVp");
                    return e >= i && e < o ? 0 : e >= o && e < r ? 1 : e >= r ? 2 : 0
                })),
                headerTitle: a.Ember.computed("rewardsTier", (function() {
                    const e = this.get("rewardsTier") || 0;
                    return this.get(`tra.clash_eos_tier_${e}`)
                })),
                headerSubtitle: a.Ember.computed("seasonVp", "headerTitle", (function() {
                    const e = this.get("seasonVp");
                    return this.get("tra").formatString("clash_eos_header_description", {
                        rank: this.get("headerTitle"),
                        amount: e
                    })
                })),
                backgroundPath: a.Ember.computed("rewardsTier", (function() {
                    return `/fe/lol-clash/assets/images/celebration/eos/eos-background-tier-${this.get("rewardsTier")}.png`
                })),
                videoPath: a.Ember.computed("rewardsTier", (function() {
                    return `/fe/lol-clash/assets/animations/videos/celebration/eos/eos_intro_${this.get("rewardsTier")}.webm`
                })),
                cssModifierClass: a.Ember.computed("rewardsTier", (function() {
                    return `tier-${this.get("rewardsTier")}`
                })),
                logoRewards: a.Ember.computed("rewards", "rewards.[]", (function() {
                    const e = this.get("rewards");
                    return e && e.length ? e.filter((e => e.rewardType === s.RewardType.LOGO)) : []
                })),
                logoRewardsCount: a.Ember.computed.alias("logoRewards.length"),
                hasLogoRewards: a.Ember.computed.gt("logoRewardsCount", 0),
                logoRewardsAssetPaths: a.Ember.computed("logoRewards", "logoRewardsCount", "rewardsTier", "gdsService.ready", (function() {
                    if (!this.get("gdsService.ready")) return;
                    const e = this.get("logoRewards");
                    return e && e.length ? e.map((e => {
                        const t = e.rewardSpec ? e.rewardSpec.name : null;
                        return this.get("gdsService").getLogoPath(t, 1)
                    })) : []
                })),
                iconRewards: a.Ember.computed("rewards", "rewards.[]", (function() {
                    const e = this.get("rewards");
                    return e && e.length ? e.filter((e => e.rewardType === s.RewardType.LOOT)) : []
                })),
                iconRewardsCount: a.Ember.computed.alias("iconRewards.length"),
                hasIconRewards: a.Ember.computed.gt("iconRewardsCount", 0),
                iconRewardsAssetPath: a.Ember.computed("iconRewards", "iconRewardsCount", (function() {
                    const e = this.get("iconRewardsCount");
                    return e ? `/fe/lol-clash/assets/images/celebration/eos/icon-${e}.png` : null
                })),
                bannerRewards: a.Ember.computed("rewards", "rewards.[]", (function() {
                    const e = this.get("rewards");
                    return e && e.length ? e.filter((e => e.rewardType === s.RewardType.FLAG)) : []
                })),
                bannerRewardsCount: a.Ember.computed.alias("bannerRewards.length"),
                hasBannerRewards: a.Ember.computed.gt("bannerRewardsCount", 0),
                bannerRewardsAssetPath: a.Ember.computed("bannerRewards", "bannerRewardsCount", "rewardsTier", (function() {
                    const e = this.get("bannerRewardsCount");
                    if (!e) return null;
                    const t = this.get("rewardsTier");
                    return 1 === e && 0 === t ? "/fe/lol-clash/assets/images/celebration/eos/banner-1-contender.png" : `/fe/lol-clash/assets/images/celebration/eos/banner-${e}.png`
                })),
                actions: {
                    onButtonClick() {
                        this.closeModalCallback()
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "HQDLFRLs",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\eos-celebration\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\eos-celebration\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\eos-celebration\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-eos-celebration-wrapper"],["flush-element"],["text","\\n  "],["open-element","img",[]],["static-attr","class","clash-eos-celebration-background"],["dynamic-attr","src",["unknown",["backgroundPath"]],null],["flush-element"],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["static-attr","class","clash-eos-celebration-video-container"],["flush-element"],["text","\\n    "],["open-element","user-experience-perf-switch",[]],["flush-element"],["text","\\n      "],["open-element","lol-uikit-video",[]],["static-attr","class","clash-eos-celebration-video"],["static-attr","id","intro-video"],["static-attr","type","intro"],["static-attr","fade-in","0"],["static-attr","fade-out","0"],["dynamic-attr","src",["unknown",["videoPath"]],null],["static-attr","perf-flags","parallelVideoStreamingEnabled"],["static-attr","preload",""],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["static-attr","class","clash-eos-celebration-contents-wrapper"],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-eos-celebration-contents ",["unknown",["cssModifierClass"]]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["hasLogoRewards"]]],null,3],["text","\\n"],["block",["if"],[["get",["hasBannerRewards"]]],null,1],["text","\\n"],["block",["if"],[["get",["hasIconRewards"]]],null,0],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-eos-celebration-title-container ",["unknown",["cssModifierClass"]]]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-eos-celebration-title"],["flush-element"],["append",["unknown",["headerTitle"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-eos-celebration-subtitle"],["flush-element"],["append",["helper",["sanitize"],[["get",["headerSubtitle"]]],null],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-eos-celebration-close-button-container ",["unknown",["cssModifierClass"]]]]],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-button",[]],["static-attr","id","clash-claim-button"],["static-attr","class","clash-claim-button"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"onButtonClick"],null],null],["flush-element"],["text","\\n      "],["append",["unknown",["tra","clash_button_notification_confirm"]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","clash-eos-contents-entry"],["flush-element"],["text","\\n          "],["open-element","img",[]],["dynamic-attr","src",["unknown",["iconRewardsAssetPath"]],null],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-eos-contents-entry-description ",["unknown",["cssModifierClass"]]]]],["flush-element"],["text","\\n            "],["append",["unknown",["tra","clash_eos_description_icon"]],false],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","clash-eos-contents-entry"],["flush-element"],["text","\\n          "],["open-element","img",[]],["static-attr","class","clash-eos-banner-image"],["dynamic-attr","src",["unknown",["bannerRewardsAssetPath"]],null],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-eos-contents-entry-description ",["unknown",["cssModifierClass"]]]]],["flush-element"],["text","\\n            "],["append",["unknown",["tra","clash_eos_description_banner"]],false],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["open-element","img",[]],["static-attr","class","clash-eos-logo-image"],["dynamic-attr","src",["get",["logoPath"]],null],["flush-element"],["close-element"],["text","\\n"]],"locals":["logoPath"]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","clash-eos-contents-entry"],["flush-element"],["text","\\n          "],["open-element","div",[]],["flush-element"],["text","\\n"],["block",["each"],[["get",["logoRewardsAssetPaths"]]],null,2],["text","          "],["close-element"],["text","\\n          "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-eos-contents-entry-description ",["unknown",["cssModifierClass"]]]]],["flush-element"],["text","\\n            "],["append",["unknown",["tra","clash_eos_description_logo"]],false],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(115)) && a.__esModule ? a : {
                    default: a
                },
                o = n(9);
            n(277);
            const r = (0, s.emberDataBinding)({
                Ember: s.Ember,
                websocket: (0, s.getProvider)().getSocket(),
                boundProperties: {
                    profileIconData: {
                        path: "/lol-game-data/assets/v1/profile-icons.json",
                        default: []
                    }
                }
            });
            e.exports = s.Ember.Component.extend(r, {
                classNames: ["clash-ticket-offer-notification"],
                layout: n(278),
                rosterMember: null,
                summoner: null,
                offer: null,
                onRevoke: null,
                incomingOffers: s.Ember.computed.alias("rosterMember.incomingOffers"),
                onInit: s.Ember.on("init", (function() {
                    const e = this.get("tra"),
                        t = this.get("summoner");
                    let n = s.playerNames.isUsingAlias ? t?.gameName : t?.displayName;
                    n || (n = e.get("clash_player_name_default"));
                    const a = e.get("clash_ticket_offer_title"),
                        o = e.formatString("clash_ticket_offer", {
                            summonerName: n
                        });
                    this.set("title", a), this.set("description", o), this.get("profileIconData"), i.default.destroy(), s.AudioManager.playAudio("ticket-entered")
                })),
                offersObserver: s.Ember.computed("incomingOffers", "incomingOffers.[]", "incomingOffers.@each.summonerId", (function() {
                    const e = this.get("incomingOffers"),
                        t = this.get("summoner");
                    if (e && t)
                        for (const n of e)
                            if (n.summonerId === t.summonerId) return;
                    const n = this.get("onRevoke");
                    n && n()
                })),
                summonerIconPath: s.Ember.computed("summoner.profileIconId", "profileIconData.[]", (function() {
                    return this._getProfileIconPath(this.get("summoner.profileIconId"))
                })),
                ticketTypeText: s.Ember.computed("offer.ticketType", (function() {
                    return (this.get("offer.ticketType") || o.TicketType.BASIC).toLowerCase()
                })),
                _getProfileIconPath(e) {
                    if (!Number.isInteger(e) || -1 === e) return "";
                    const t = this.get("profileIconData");
                    if (!t || !t.length) return "";
                    const n = e => t.find((t => String(t.id) === String(e))),
                        a = n(e) || n(0);
                    return a ? a.iconPath : ""
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "oFjeOJET",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-offer-notification\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-offer-notification\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-offer-notification\\\\index.js\\" "],["text","\\n"],["append",["unknown",["offersObserver"]],false],["text","\\n"],["open-element","img",[]],["static-attr","class","clash-ticket-offer-notification-background"],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/images/ticket-offer/ticket-offer-bg-",["unknown",["ticketTypeText"]],".png"]]],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-ticket-offer-notification-text"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-ticket-offer-notification-title"],["flush-element"],["append",["unknown",["title"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-ticket-offer-notification-sender"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-ticket-offer-from"],["flush-element"],["append",["unknown",["tra","clash_ticket_offer_from"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-ticket-offer-summoner-icon"],["flush-element"],["text","\\n"],["block",["if"],[["get",["summonerIconPath"]]],null,2,0],["text","    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-ticket-offer-summoner-name"],["flush-element"],["text","\\n      "],["append",["helper",["player-name"],null,[["format","puuid","gameName","tagLine","summonerName"],["short",["get",["summoner","puuid"]],["get",["summoner","gameName"]],["get",["summoner","tagLine"]],["get",["summoner","displayName"]]]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-ticket-offer-notification-description"],["flush-element"],["append",["unknown",["description"]],false],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["open-element","img",[]],["static-attr","class","clash-roster-member-empty-summoner-icon"],["static-attr","src","/fe/lol-clash/assets/images/roster/player-empty-icon.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["summonerIconPath"]]]]],["flush-element"],["close-element"]],"locals":[]},{"statements":[["text","          "],["block",["uikit-framed-icon"],null,[["borderwidth"],[2]],1],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9),
                i = r(n(92)),
                o = r(n(11));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            n(280);
            const l = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                basePaths: {
                    platform: "/lol-platform-config"
                },
                boundProperties: {
                    roster: {
                        path: "/lol-clash/v1/roster/{{viewRosterId}}",
                        default: null,
                        objectTypes: i.default.getObjectBindingTypes()
                    },
                    capacityIndicatorEnabled: {
                        api: "platform",
                        path: "/v1/namespaces/ClashConfig/CapacityIndicatorEnabled",
                        default: !1
                    }
                }
            });
            e.exports = a.Ember.Component.extend(l, {
                classNames: ["clash-view-roster-modal"],
                layout: n(281),
                clashService: a.Ember.inject.service("clash"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                tournamentId: null,
                viewRosterId: null,
                onTeamJoined: null,
                onInit: a.Ember.on("init", (function() {
                    const e = this.get("tournamentId");
                    this.get("clashService").setSelectedTournamentId(e), this._didJoinTeam = !1, o.default.stopAutoShowTooltip()
                })),
                onWillDestroyElement: a.Ember.on("willDestroyElement", (function() {
                    o.default.startAutoShowTooltip()
                })),
                invitationObserver: a.Ember.computed("clashService.invitedRosterIds.[]", "viewRosterId", (function() {
                    if (this._didJoinTeam) return;
                    const e = this.get("viewRosterId");
                    if (!a.Util.isNumberOk(e) || e === s.INVALID_ROSTER_ID) return;
                    const t = this.get("clashService.invitedRosterIds");
                    if (null === t) return;
                    if (!t.find((t => t === e.toString()))) {
                        a.logger.trace("view roster is no longer in invitedRosterIds, cancel viewing roster");
                        this.get("onInviteRevoked")()
                    }
                })),
                _confirmLeaveExistingRoster() {
                    const e = this.get("roster"),
                        t = this.get("localPlayer.roster");
                    if (!t || t.get("isRegistered")) return Promise.resolve();
                    const n = (e.get("name") || this.get("tra.clash_action_timeline_join_team_leave_existing_confirmation_no_name")).toUpperCase(),
                        s = (t.get("name") || this.get("tra.clash_action_timeline_join_team_leave_existing_confirmation_no_name")).toUpperCase(),
                        i = this.get("tra.clash_action_timeline_join_team_leave_existing_confirmation_title"),
                        o = this.get("tra").formatString("clash_action_timeline_join_team_leave_existing_confirmation", {
                            newRosterName: n,
                            currentRosterName: s
                        });
                    return a.ModalManager.add({
                        type: "DialogConfirm",
                        data: {
                            contents: a.UIKit.getTemplateHelper().contentBlockDialog(i, o),
                            acceptText: this.get("tra.lib_ui_dialog_confirm_accept"),
                            declineText: this.get("tra.lib_ui_dialog_confirm_decline"),
                            closeButton: !1
                        }
                    }).acceptPromise
                },
                _join() {
                    return this._confirmLeaveExistingRoster().then((() => {
                        this._didJoinTeam = !0;
                        const e = this.get("clashService"),
                            t = this.get("roster").get("id");
                        return e.acceptInvite(t)
                    }), (() => {}))
                },
                actions: {
                    joinTeam() {
                        return this._join().then((() => {
                            this.get("onTeamJoined")()
                        }), (() => {
                            this._didJoinTeam = !1
                        }))
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "G3iQHfH1",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\view-roster-modal\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\view-roster-modal\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\view-roster-modal\\\\index.js\\" "],["text","\\n"],["append",["unknown",["invitationObserver"]],false],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-view-roster-modal-roster-layout"],["flush-element"],["text","\\n  "],["append",["helper",["roster-layout"],null,[["tournament","roster","isViewRosterModal","joinTeam"],[["get",["tournament"]],["get",["roster"]],true,["helper",["action"],[["get",[null]],"joinTeam"],null]]]],false],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-view-roster-modal-countdown"],["flush-element"],["text","\\n  "],["append",["helper",["state-countdown"],null,[["tournament","usePaddedZeros","displayTimerDescriptionTxt","showMinutesBelow60s","injectNumberStyling","showTimeUpTxt","customTag"],[["get",["tournament"]],false,true,false,true,true,"landing"]]],false],["text","\\n"],["close-element"],["text","\\n"],["block",["if"],[["get",["capacityIndicatorEnabled"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-view-roster-modal-warning-text"],["flush-element"],["append",["unknown",["tra","clash_phase_cap_warning"]],false],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(283);
            const s = a.UIKit.getContextualNotificationManager();
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-roster-layout"],
                layout: n(284),
                tournament: null,
                roster: null,
                isViewRosterModal: !1,
                displayModal: !1,
                inviteCallback: null,
                locOverride: "",
                maxTier: null,
                _onCloseCallback: function() {
                    this.set("displayModal", !1)
                },
                gdsService: a.Ember.inject.service("gds"),
                clashService: a.Ember.inject.service("clash"),
                init() {
                    this._super(...arguments), this.onCloseCallback = this._onCloseCallback.bind(this)
                },
                rosterLogoPath: a.Ember.computed("roster", "roster.logoId", "roster.logoColorId", "gdsService.ready", (function() {
                    if (!this.get("gdsService.ready")) return "";
                    const e = this.get("roster.logoId"),
                        t = this.get("roster.logoColorId");
                    return this.get("gdsService").getLogoPath(e, t)
                })),
                showInviteModal(e, t, n) {
                    const a = this.get("_inviteTutorialStepTooltip");
                    a && s.remove(a), this.setProperties({
                        inviteCallback: e,
                        locOverride: t,
                        maxTier: n,
                        displayModal: !0
                    })
                },
                actions: {
                    openInviteModal(e) {
                        const t = this.get("clashService"),
                            n = this.get("roster.id");
                        this.showInviteModal((s => {
                            if (!s || !s.length) return;
                            let i;
                            i = e ? t.invitePlayers(n, s) : t.suggestPlayers(n, s), a.Util.setBoolDuringPromise(i, this, "isCallInProgress")
                        }), "", null)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "QfSZLx/D",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-layout\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-layout\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-layout\\\\index.js\\" "],["text","\\n"],["append",["helper",["roster-details"],null,[["roster","isViewRosterModal","openInviteModal"],[["get",["roster"]],["get",["isViewRosterModal"]],["helper",["action"],[["get",[null]],"openInviteModal"],null]]]],false],["text","\\n"],["append",["helper",["roster-member-list"],null,[["tournament","roster","rosterMemberDeltas","isViewRosterModal","openInviteModal","joinTeam"],[["get",["tournament"]],["get",["roster"]],["get",["rosterMemberDeltas"]],["get",["isViewRosterModal"]],["helper",["action"],[["get",[null]],"openInviteModal"],null],["get",["joinTeam"]]]]],false],["text","\\n\\n"],["block",["if"],[["get",["displayModal"]]],null,1]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["append",["helper",["invite-dialog"],null,[["locOverride","maxTier","inviteCallback"],[["get",["locOverride"]],["get",["maxTier"]],["get",["inviteCallback"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-modal"],null,[["type","acceptText","declineText","closeButton","dismissibleType","onClose"],["DialogConfirm",["get",["tra","clash_button_done"]],["get",["tra","clash_overview_confirm_cancel"]],true,"inside",["get",["onCloseCallback"]]]],0]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            const s = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                logPrefix: "service:chat",
                basePaths: {
                    chat: "/lol-chat"
                },
                boundProperties: {
                    friends: {
                        api: "chat",
                        path: "/v1/friends"
                    },
                    groups: {
                        api: "chat",
                        path: "/v1/friend-groups"
                    },
                    me: {
                        api: "chat",
                        path: "/v1/me"
                    }
                }
            });
            e.exports = a.Ember.Service.extend(s, {
                friends: a.Ember.A(),
                isFriend(e) {
                    const t = this.get("friends");
                    return !!(t && t.length > 0) && t.isAny("summonerId", Number(e))
                },
                getFriend(e) {
                    const t = `/v1/friends/${e}`;
                    return this.get("api.chat").get(t)
                },
                addFriend(e) {
                    a.logger.trace(`adding friend ${e}`), this.get("api.chat").post("/v1/friend-requests", {
                        name: e
                    })
                },
                removeFriend(e) {
                    a.logger.trace(`removing friend ${e}`), this.get("api.chat").delete(`/v1/friends/${e}`)
                },
                blockPlayer(e, t) {
                    a.logger.trace(`blocking player ${e} - ${t}`), this.get("api.chat").post("/v1/blocked-players", {
                        id: e,
                        name: t
                    })
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            e.exports = a.Ember.Service.extend({
                appData: null,
                setAppData(e) {
                    this.set("appData", e)
                },
                selectTab(e) {
                    const t = this.get("appData").navTabs[e];
                    t ? t.show() : a.logger.warning(`cannot select clash tab [${t}] as it is not a tab`)
                },
                setTabEnabledState(e, t, n) {
                    const s = this.get("appData").navTabs[e];
                    s ? s.setEnabled(t, n) : a.logger.warning(`cannot setEnabled for clash tab [${s}] as it is not a tab`)
                },
                enableTab(e, t = !0) {
                    this.setTabEnabledState(e, !0, t)
                },
                disableTab(e) {
                    this.setTabEnabledState(e, !1)
                },
                isTabEnabled(e) {
                    return (this.get("appData").navTabs[e] || {}).isEnabled || !1
                },
                isTabSelected(e) {
                    return e === this.get("appData.currentTabId")
                },
                setTooltip(e, t) {
                    this.get("appData").navTabs[e].setTooltip(t)
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9);
            n(288), e.exports = a.Ember.Component.extend({
                classNames: ["clash-tier-placement"],
                layout: n(289),
                rosterTier: s.INVALID_TIER,
                rosterMemberTiers: [],
                customTooltipTitle: null,
                customTooltipBody: null,
                useCustomTooltip: a.Ember.computed.and("customTooltipTitle", "customTooltipBody"),
                hasRosterMemberTiers: a.Ember.computed.gt("rosterMemberTiers.length", 0),
                defaultTierTooltip: a.Ember.computed((function() {
                    const e = this.get("tra.clash_roster_tier_name_1"),
                        t = this.get("tra.clash_roster_tier_name_2"),
                        n = this.get("tra.clash_roster_tier_name_3"),
                        a = this.get("tra.clash_roster_tier_name_4");
                    return this.get("tra").formatString("clash_roster_tier_tooltip", {
                        tier1: e,
                        tier2: t,
                        tier3: n,
                        tier4: a
                    })
                })),
                tierObserver: a.Ember.on("didInsertElement", a.Ember.computed("rosterTier", (function() {
                    const e = this.get("rosterTier"),
                        t = this.get("currentTier");
                    a.Util.isNumberOk(t) && e !== t && a.Util.waitForElement(this.element, "#introVideo").then((() => {
                        const e = this.$("#introVideo").get(0);
                        e && e.play()
                    })), this.set("currentTier", e)
                })))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "4gFXMlO9",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tier-placement\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tier-placement\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tier-placement\\\\index.js\\" "],["text","\\n"],["append",["unknown",["tierObserver"]],false],["text","\\n"],["open-element","lol-uikit-video",[]],["static-attr","id","introVideo"],["static-attr","type","intro"],["static-attr","src","/fe/lol-clash/assets/animations/videos/roster/tierChange.webm"],["static-attr","fade-in","0"],["static-attr","fade-out","0"],["static-attr","preload",""],["flush-element"],["close-element"],["text","\\n"],["append",["helper",["tier-placement-visual"],null,[["tier"],[["get",["rosterTier"]]]]],false],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["bottom","system"]],5]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-tier-placement-tooltip"],["flush-element"],["open-element","p",[]],["flush-element"],["append",["unknown",["defaultTierTooltip"]],false],["close-element"],["close-element"],["text","\\n    "]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","clash-tier-placement-tooltip-member"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-tier-placement-tooltip-member-name"],["flush-element"],["text","\\n              "],["append",["helper",["player-name"],null,[["format","puuid","gameName","tagLine","summonerName"],["full",["get",["member","puuid"]],["get",["member","gameName"]],["get",["member","tagLine"]],["get",["member","summonerName"]]]]],false],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-tier-placement-tooltip-tier"],["flush-element"],["append",["helper",["tier-placement-visual"],null,[["tier"],[["get",["member","tier"]]]]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":["member"]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-tier-placement-tooltip-membertiers"],["flush-element"],["text","\\n"],["block",["each"],[["get",["rosterMemberTiers"]]],null,1],["text","      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["hasRosterMemberTiers"]]],null,2,0]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-tier-placement-tooltip"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-tier-placement-tooltip-title"],["flush-element"],["text","\\n          "],["append",["unknown",["customTooltipTitle"]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","p",[]],["flush-element"],["text","\\n          "],["append",["unknown",["customTooltipBody"]],false],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n"],["block",["if"],[["get",["useCustomTooltip"]]],null,4,3],["text","  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9),
                i = r(n(291)),
                o = r(n(292));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            n(293);
            const l = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                boundProperties: {
                    gameflowSession: {
                        path: "/lol-gameflow/v1/session",
                        default: void 0
                    }
                }
            });
            e.exports = a.Ember.Component.extend(l, {
                classNames: ["clash-roster-details"],
                classNameBindings: ["isLocalPlayerCaptain:is-captain:is-member", "isDetailsEditable:is-roster-details-editable"],
                layout: n(294),
                clashService: a.Ember.inject.service("clash"),
                gdsService: a.Ember.inject.service("gds"),
                roster: null,
                isEditingDetails: !1,
                isViewRosterModal: !0,
                hasClosedRosterDetailsDialog: !1,
                logoId: a.Ember.computed.alias("roster.iconId"),
                logoColorId: a.Ember.computed.alias("roster.chromaId"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                tournamentLftEnabled: a.Ember.computed.alias("tournament.lft"),
                isUsingLftLayout: a.Ember.computed("isLftEnabled", "isViewRosterModal", "tournamentLftEnabled", (function() {
                    return this.get("isLftEnabled") && this.get("tournamentLftEnabled") && !this.get("isViewRosterModal")
                })),
                init() {
                    this._super(...arguments), this._binding = (0, a.dataBinding)("/lol-platform-config", (0, a.getProvider)().getSocket()), this._binding.addObserver("/v1/namespaces/ClashConfig/LftEnabled", this, (e => {
                        const t = !1 !== e;
                        this.set("isLftEnabled", t)
                    })), a.Util.waitForEmber(this, "gameflowSession", (() => void 0 !== this.get("gameflowSession"))).then((() => {
                        const e = this.get("gameflowSession.phase");
                        e && a.Util.isGameflowInGame(e) || this._openDetailsSelector(!0)
                    }))
                },
                rosterObserver: a.Ember.computed("roster", "clashService.logoConfig", (function() {
                    const e = this.get("clashService.logoConfig"),
                        t = this.get("roster"),
                        n = this.get("rosterOwnedLogos");
                    if (t && null !== n && e) {
                        const n = o.default.getAvailableLogosForRoster(e, t);
                        this.set("cacheAvailableLogos", n)
                    }
                })),
                isLocalPlayerCaptain: a.Ember.computed.bool("roster.captain.isLocalPlayer"),
                isNotLocalPlayerCaptain: a.Ember.computed.not("isLocalPlayerCaptain"),
                isLocalPlayerNotRegistered: a.Ember.computed.not("roster.localPlayerMember.isReady"),
                isLocalPlayerPending: a.Ember.computed.alias("roster.localPlayerMember.isPending"),
                isNotLocalPlayerPending: a.Ember.computed.not("isLocalPlayerPending"),
                isDetailsEditable: a.Ember.computed.and("roster.isNotRegistered", "isNotLocalPlayerPending"),
                hasIcon: a.Ember.computed.gt("roster.iconId", s.INVALID_LOGO_ID),
                hasNoIcon: a.Ember.computed.not("hasIcon"),
                showPendingIndicator: a.Ember.computed.and("hasNoIcon", "isNotLocalPlayerCaptain"),
                availabilityObserver: a.Ember.computed("roster.logoId", "roster.rosterOwnedLogos.[]", "roster.rosterOwnedLogos.@each.{logo,memberOwnedCount}", (function() {
                    const e = this.get("clashService.logoConfig"),
                        t = this.get("roster"),
                        n = this.get("roster.logoId"),
                        a = this.get("roster.logoColorId"),
                        s = o.default.getAvailableLogosForRoster(e, t),
                        i = o.default.isLogoAvailable(s, n),
                        r = o.default.isLogoColorAvailable(e, s, n, a),
                        l = this.get("cacheAvailableLogos"),
                        c = o.default.calculateNewLogos(l, s),
                        d = c.findIndex((e => e.id === n));
                    d >= 0 && c.splice(d, 1), this.set("isLogoAvailable", i), this.set("isLogoColorAvailable", r), this.set("newLogos", c), this.set("cacheAvailableLogos", s);
                    const m = this.get("sharedData");
                    m && (m.set("availableLogos", s), m.set("newLogos", c))
                })),
                rosterMemberTiers: a.Ember.computed("roster.members.[]", "roster.members.@each.{isPending,displayName,tier}", (function() {
                    const e = this.get("roster.members");
                    return a._.filter(e, (e => !e.get("isPending"))).map((e => ({
                        tier: e.get("tier"),
                        puuid: e.get("puuid") || null,
                        summonerName: e.get("displayName") || null,
                        gameName: e.get("gameName") || null,
                        tagLine: e.get("tagLine") || null
                    })))
                })),
                rosterLogoPath: a.Ember.computed("logoId", "logoColorId", "gdsService.ready", (function() {
                    if (!this.get("gdsService.ready")) return "";
                    const e = this.get("logoId"),
                        t = this.get("logoColorId");
                    return this.get("gdsService").getLogoPath(e, t)
                })),
                willDestroyElement() {
                    this._super(...arguments), this._binding.removeObserver("/v1/namespaces/ClashConfig/LftEnabled", this);
                    const e = this.get("closeModalCallback");
                    e && e()
                },
                isEditingDetailsObserver: a.Ember.computed("isEditingDetails", (function() {
                    this.get("isEditingDetails") ? a.FullpageModalTracker.instance()._onOpen() : a.FullpageModalTracker.instance()._onClose()
                })),
                _openDetailsSelector(e = !1) {
                    if (this.get("isEditingDetails") || !this.get("isDetailsEditable")) return;
                    const t = this.get("tra"),
                        n = this.get("clashService"),
                        r = this.get("roster.id"),
                        l = this.get("roster.name"),
                        c = this.get("roster.shortName"),
                        d = this.get("roster"),
                        m = n.get("logoConfig"),
                        u = o.default.getAvailableLogosForRoster(m, d),
                        p = this.get("newLogos"),
                        h = this.get("isLocalPlayerCaptain"),
                        g = this.get("roster.logoId"),
                        f = this.get("roster.logoColorId"),
                        _ = a.Util.isNumberOk(g) && g !== s.INVALID_LOGO_ID;
                    if (e && (!h || l || c || _)) return;
                    const b = i.default.create(t, n, r, h, u, p, {
                            initialName: l,
                            initialTag: c,
                            initialLogoId: g,
                            initialLogoColorId: f
                        }),
                        {
                            promise: x
                        } = b;
                    a.Util.setBoolDuringPromise(x, this, "isEditingDetails"), this.set("closeModalCallback", b.closeModalCallback), this.set("sharedData", b.sharedData);
                    const y = () => this.set("newLogos", []);
                    x.then((() => {
                        this.set("hasClosedRosterDetailsDialog", !0), y();
                        const e = this.get("sharedData").get("selectedLogoId"),
                            t = this.get("sharedData").get("selectedLogoColorId"),
                            n = o.default.getAvailableLogosForRoster(m, d),
                            a = o.default.isLogoColorAvailable(m, n, e, t);
                        this.set("isLogoColorAvailable", a)
                    }), y)
                },
                actions: {
                    openDetailsSelector() {
                        this._openDetailsSelector()
                    },
                    openInviteModal() {
                        this.sendAction("openInviteModal")
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            t.default = class {
                static create(e, t, n, s, i, o, r) {
                    "instance" !== a.Ember.typeOf(r) && (r = a.Ember.Object.create(r));
                    const l = a.Ember.Object.create({
                        logoConfig: t.get("logoConfig"),
                        getRewardConfig: t.getRewardConfig.bind(t)
                    });
                    r.set("sharedData", l), r.set("isSaveAllowed", s), l.set("availableLogos", i), l.set("newLogos", o), l.set("selectedLogoId", r.get("initialLogoId")), l.set("selectedLogoColorId", r.get("initialLogoColorId"));
                    const c = a.componentFactory.create("RosterDetailsSelectorComponent", r),
                        d = a.Ember.$(document.createElement("div"));
                    d.addClass("clash-roster-details-selector-root"), d.append(a.componentFactory.getDOMNode(c));
                    const m = a.ModalManager.add({
                        type: "DialogConfirm",
                        data: {
                            contents: d.get(0),
                            acceptText: e.get("clash_roster_icon_picker_save_button")
                        }
                    });
                    m.disableAcceptButton(), l.set("disableAcceptButton", m.disableAcceptButton.bind(m)), l.set("enableAcceptButton", (() => {
                        s && m.enableAcceptButton()
                    }));
                    const u = a.ModalManager.getDOMNode(m),
                        p = a.Ember.$(u);
                    p.find("lol-uikit-flat-button.button-decline").remove();
                    const h = p.find("lol-uikit-flat-button.button-accept");
                    l.setTooltip = e => {
                        if (e) {
                            const t = a.UIKit.getTemplateHelper().contentBlockTooltipSystem(e),
                                n = a.Ember.$('<lol-uikit-tooltip type="system" tooltip-position="bottom"></lol-uikit-tooltip>');
                            n.append(t), a.TooltipManager.assign(h, n.get(0), null, {
                                targetAnchor: {
                                    x: "center",
                                    y: "bottom"
                                },
                                tooltipAnchor: {
                                    x: "center",
                                    y: "top"
                                }
                            })
                        } else a.TooltipManager.unassign(h)
                    };
                    const g = new Promise(((e, t) => {
                        l.set("closeDialog", (() => {
                            a.ModalManager.remove(m), t()
                        }))
                    }));
                    return {
                        promise: Promise.race([m.acceptPromise, g]).then((() => {
                            a.Util.destroyEmberApp(c);
                            const e = l.get("teamName"),
                                s = l.get("teamTag"),
                                i = l.get("selectedLogoId"),
                                o = l.get("selectedLogoColorId");
                            return t.setRosterDetails(n, i, o, e, s)
                        }), (() => a.Util.destroyEmberApp(c))),
                        closeModalCallback: () => {
                            a.ModalManager.remove(m)
                        },
                        sharedData: l
                    }
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            class s {
                static getAvailableLogosForRoster(e, t) {
                    const n = e.get("byId") || {};
                    let s = [];
                    if (t) {
                        const e = t.get("rosterOwnedLogos") || [];
                        s = a._.map(e, (e => {
                            const t = n[e.logo] || {
                                    colors: []
                                },
                                s = a._.toPairs(t.colors).filter((t => {
                                    const n = t[1];
                                    return e.memberOwnedCount >= n
                                })).map((e => parseInt(e[0])));
                            return {
                                id: e.logo,
                                colors: s,
                                free: !1,
                                memberOwnedCount: e.memberOwnedCount
                            }
                        }))
                    }
                    const i = e.get("logos") || [],
                        o = a._.filter(i, (e => e.free)).map((e => ({
                            id: e.id,
                            colors: a._.keys(e.colors).map((e => parseInt(e))),
                            free: !0,
                            memberOwnedCount: 99
                        }))),
                        r = a._.concat(s, o);
                    return r.length || a.logger.error("no available or free logos! things may get wonky."), r.bypass = t && t.get("isRegistered"), r
                }
                static getLogoColorAvailability(e, t, n, s) {
                    if (t.bypass) return {
                        isAvailable: !0
                    };
                    if (!a.Util.isNumberOk(n) || !a.Util.isNumberOk(s)) return {
                        isAvailable: !1
                    };
                    const i = (e.get("byId") || {})[n] || {
                            colors: {}
                        },
                        o = a._.keyBy(t, "id")[n] || {},
                        r = o.colors && o.colors.indexOf(s) > -1;
                    return {
                        ownedCount: o.memberOwnedCount || 0,
                        requiredCount: i.colors[s] || 0,
                        isAvailable: r
                    }
                }
                static isLogoAvailable(e, t) {
                    if (e.bypass) return !0;
                    const n = e.find((e => e.id === t));
                    return !!(n && n.colors && n.colors.length)
                }
                static isLogoColorAvailable(e, t, n, a) {
                    return s.getLogoColorAvailability(e, t, n, a).isAvailable
                }
                static calculateNewLogos(e = [], t = []) {
                    const n = [];
                    for (const s of t) {
                        const t = {
                                id: s.id,
                                colors: []
                            },
                            i = s.colors && s.colors.length,
                            o = e.find((e => e.id === s.id)),
                            r = o && o.colors && o.colors.length;
                        if (!r && i) t.colors = s.colors;
                        else if (r && i) {
                            const e = e => !o.colors.find((t => t === e));
                            t.colors = a._.filter(s.colors, e)
                        }
                        t.colors.length && n.push(t)
                    }
                    return n
                }
            }
            t.default = s
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "/c09WvpG",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-details\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-details\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-details\\\\index.js\\" "],["text","\\n"],["append",["unknown",["rosterObserver"]],false],["text","\\n"],["append",["unknown",["availabilityObserver"]],false],["text","\\n"],["append",["unknown",["isEditingDetailsObserver"]],false],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-roster-team-logo-background"],["flush-element"],["text","\\n  "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["rosterLogoPath"]]]]],["static-attr","class","clash-roster-team-logo-background-image"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-roster-team-logo-background-overlay-gradient"],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["append",["helper",["roster-details-visual-team"],null,[["roster","rosterLogoPath","rosterMemberTiers","displayLogoPendingIndicator","isLogoAvailable","isLogoColorAvailable","logoPipCount","isDetailsEditable","hasClosedRosterDetailsDialog","openDetailsSelector","openInviteModal"],[["get",["roster"]],["get",["rosterLogoPath"]],["get",["rosterMemberTiers"]],["get",["showPendingIndicator"]],["get",["isLogoAvailable"]],["get",["isLogoColorAvailable"]],["get",["newLogos","length"]],["get",["isDetailsEditable"]],["get",["hasClosedRosterDetailsDialog"]],["helper",["action"],[["get",[null]],"openDetailsSelector"],null],["helper",["action"],[["get",[null]],"openInviteModal"],null]]]],false],["text","\\n"],["block",["unless"],[["get",["isLocalPlayerPending"]]],null,5]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n          "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_roster_details_save_not_allowed"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["bottom","system"]],0],["text","    "]],"locals":[]},{"statements":[["block",["unless"],[["get",["isLocalPlayerCaptain"]]],null,1]],"locals":[]},{"statements":[["text","        "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n          "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_roster_details_tooltip_details_not_editable"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["bottom","system"]],3],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-roster-details-edit-icon ",["helper",["if"],[["get",["isDetailsEditable"]],"editable"],null]]]],["modifier",["action"],[["get",[null]],"openDetailsSelector"]],["flush-element"],["text","\\n"],["block",["unless"],[["get",["isDetailsEditable"]]],null,4,2],["text","  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(229)) && a.__esModule ? a : {
                    default: a
                };
            n(296);
            const o = s.UIKit.getContextualNotificationManager();
            e.exports = s.Ember.Component.extend({
                classNames: ["clash-roster-member-list"],
                layout: n(297),
                clashService: s.Ember.inject.service("clash"),
                tutorialService: s.Ember.inject.service("tutorial"),
                localPlayer: s.Ember.computed.alias("clashService.localPlayer"),
                localPlayerSummonerId: s.Ember.computed.alias("clashService.localPlayer.summonerId"),
                isCaptain: s.Ember.computed("roster.captainId", "localPlayerSummonerId", (function() {
                    return this.get("roster.captainId") === this.get("localPlayerSummonerId")
                })),
                tournament: null,
                roster: null,
                isViewRosterModal: !1,
                rosterMembers: s.Ember.computed("roster.members.[]", "roster.members.@each.{state,summonerId}", "roster.id", (function() {
                    const e = this.get("tournament.rosterSize"),
                        t = this.get("roster.members") || [];
                    return i.default.getRosterMembersInRosterMemberListOrder(e, t, !0)
                })),
                onWillDestroyElement: s.Ember.on("willDestroyElement", (function() {
                    const e = this.get("_modal");
                    e && s.ModalManager.remove(e);
                    const t = this.get("_inviteDialogComponent");
                    t && s.Util.destroyEmberApp(t), this._closeContextualNotification(this.get("_inviteTutorialStepTooltip"))
                })),
                tutorialObserver: s.Ember.computed("tutorialService.captainTutorialFlow.name", "roster", (function() {
                    if (!this.get("roster")) return;
                    if (!this.get("roster.captain.isLocalPlayer")) return;
                    const e = this.get("tutorialService.captainTutorialFlow");
                    e && "captainInviteStep" === e.name && s.Util.waitForElement(this.element, ".clash-tutorial-container").then((() => {
                        const t = this.$(".clash-tutorial-container");
                        t && this._createTutorialTooltip(t, e, "_inviteTutorialStepTooltip")
                    }))
                })),
                _createTutorialTooltip(e, t, n) {
                    if (this.get(n)) return;
                    const a = this.get("tutorialService").createContextualNotificationBlockElement(this.get("tra"), t),
                        s = o.add(a, {
                            target: {
                                domNode: e,
                                anchor: {
                                    x: "center",
                                    y: "top"
                                }
                            },
                            offset: {
                                x: 40,
                                y: -180
                            },
                            anchor: {
                                x: "center",
                                y: "top"
                            },
                            orientation: "right",
                            dismissOnTargetHide: !0
                        });
                    return s.onRemove.then((() => {
                        this.get("tutorialService").completeTutorialStep("captainTutorialFlow", t.name), this.set(n, null)
                    })), this.set(n, s), s
                },
                _closeContextualNotification(e) {
                    e && o.remove(e)
                },
                actions: {
                    openInviteModal(e) {
                        return this.attrs.openInviteModal(e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "0tUK326t",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-member-list\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-member-list\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-member-list\\\\index.js\\" "],["text","\\n"],["append",["unknown",["tutorialObserver"]],false],["text","\\n"],["block",["each"],[["get",["rosterMembers"]]],null,0],["open-element","div",[]],["static-attr","class","clash-tutorial-container"],["flush-element"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["append",["helper",["roster-member"],null,[["index","roster","rosterMember","openInviteModal","isViewRosterModal","rosterMemberDeltas","joinTeam"],[["get",["index"]],["get",["roster"]],["get",["rosterMember"]],["helper",["action"],[["get",[null]],"openInviteModal"],null],["get",["isViewRosterModal"]],["get",["rosterMemberDeltas"]],["get",["joinTeam"]]]]],false],["text","\\n"]],"locals":["rosterMember","index"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9),
                i = n(74),
                o = l(n(299));
            n(300);
            var r = l(n(301));

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const c = a.UIKit.getContextualNotificationManager();
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-roster-member"],
                classNameBindings: ["isLocalPlayer:clash-roster-member-local:clash-roster-member-remote", "isRosterBeingViewed:is-being-viewed"],
                layout: n(302),
                clashService: a.Ember.inject.service("clash"),
                telemetryService: a.Ember.inject.service("telemetry"),
                chatService: a.Ember.inject.service("chat"),
                tutorialService: a.Ember.inject.service("tutorial"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                state: a.Ember.computed.alias("tournament.state"),
                currentBuyin: a.Ember.computed.alias("rosterMember.currentBuyin"),
                buyinType: a.Ember.computed.alias("rosterMember.buyinType"),
                phases: a.Ember.computed.alias("tournament.phases"),
                index: 0,
                roster: null,
                rosterMember: null,
                rosterMemberDeltas: null,
                isViewRosterModal: !1,
                puuid: a.Ember.computed.alias("rosterMember.puuid"),
                gameName: a.Ember.computed("rosterMember.gameName", (function() {
                    return this.get("rosterMember.gameName") || null
                })),
                tagLine: a.Ember.computed("rosterMember.tagLine", (function() {
                    return this.get("rosterMember.tagLine") || null
                })),
                summonerName: a.Ember.computed("rosterMember.displayName", (function() {
                    return this.get("rosterMember.displayName") || null
                })),
                didPlayIntroAnimation: !1,
                isCallInProgress: !1,
                isTutorialPaused: !1,
                isAnimationsPaused: !1,
                isNotViewRosterModal: a.Ember.computed.not("isViewRosterModal"),
                isLocalPlayer: a.Ember.computed.alias("rosterMember.isLocalPlayer"),
                isNotLocalPlayer: a.Ember.computed.not("rosterMember.isLocalPlayer"),
                isPending: a.Ember.computed.alias("rosterMember.isPending"),
                isPendingLocalPlayer: a.Ember.computed.and("isPending", "isLocalPlayer"),
                isNotPendingLocalPlayer: a.Ember.computed.not("isPendingLocalPlayer"),
                isPendingRemotePlayer: a.Ember.computed.and("isPending", "isNotLocalPlayer"),
                isReady: a.Ember.computed.alias("rosterMember.isReady"),
                isNotReady: a.Ember.computed.not("isReady"),
                isCaptain: a.Ember.computed.alias("rosterMember.isRosterCaptain"),
                isLocalPlayerRosterCaptain: a.Ember.computed.alias("roster.captain.isLocalPlayer"),
                isLocalPlayerSmsVerified: a.Ember.computed.alias("localPlayer.isSmsVerified"),
                isInviteAllowed: a.Ember.computed.alias("isLocalPlayerSmsVerified"),
                isNoTicketSet: a.Ember.computed.equal("rosterMember.previousBuyin", 0),
                isNotRosterEliminated: a.Ember.computed.not("roster.isEliminated"),
                isMemberBuyinRequired: a.Ember.computed.and("isNotRosterEliminated", "isNoTicketSet"),
                isBuyinRequired: a.Ember.computed.or("isMemberBuyinRequired", "roster.requiresBuyin"),
                isBuyinEnabled: a.Ember.computed.and("isNotReady", "isBuyinRequired", "isNotPendingLocalPlayer", "isLocalPlayerSmsVerified"),
                isRosterBeingViewed: a.Ember.computed.alias("roster.localPlayerMember.isPending"),
                isAramQueue: a.Ember.computed.alias("tournament.isAramQueue"),
                isNotCallInProgress: a.Ember.computed.not("isCallInProgress"),
                isPendingAndNotViewRosterModal: a.Ember.computed("isPending", "isViewRosterModal", (function() {
                    return this.get("isPending") && !this.get("isViewRosterModal")
                })),
                onInit: a.Ember.on("init", (function() {
                    this._onModalOpen = () => {
                        this.set("isTutorialPaused", !0), this.set("isAnimationsPaused", !0), this._closeTutorialTooltips()
                    }, this._onModalFullClose = () => {
                        this.set("isTutorialPaused", !1), this.set("isAnimationsPaused", !1), this._updateTutorialState()
                    }, a.FullpageModalTracker.instance().addEventListener(a.FullpageModalTracker.Event.OPEN, this._onModalOpen), a.FullpageModalTracker.instance().addEventListener(a.FullpageModalTracker.Event.FULL_CLOSE, this._onModalFullClose), this._initializeAnimationData()
                })),
                onDidInsertElement: a.Ember.on("didInsertElement", (function() {
                    this._attachContextMenu()
                })),
                onWillDestroyElement: a.Ember.on("willDestroyElement", (function() {
                    a.FullpageModalTracker.instance().removeEventListener(a.FullpageModalTracker.Event.OPEN, this._onModalOpen), a.FullpageModalTracker.instance().removeEventListener(a.FullpageModalTracker.Event.FULL_CLOSE, this._onModalFullClose), this._destroyModal("kickPlayerModal"), this._closeTutorialTooltips()
                })),
                rosterMemberObserver: a.Ember.computed("rosterMember.summonerId", "tournament.state", "isCaptain", "isReady", (function() {
                    this._closeContextMenu(), this.get("isTicketSelectorOpen") && this._closeTicketSelector()
                })),
                rosterMemberFriend: a.Ember.computed("rosterMember", "rosterMember.summonerId", "chatService.friends.[]", (function() {
                    const e = this.get("rosterMember.summonerId"),
                        t = this.get("chatService.friends");
                    return e && t && t.length ? t.find((t => t.summonerId === e)) : null
                })),
                haloSize: a.Ember.computed("isLocalPlayer", (function() {
                    return this.get("isLocalPlayer") ? "medium" : "small"
                })),
                hasBlockingAction: a.Ember.computed("isPendingLocalPlayer", "isRosterBeingViewed", "isLocalPlayerSmsVerified", "isLocalPlayer", (function() {
                    const e = this.get("isPendingLocalPlayer"),
                        t = this.get("isRosterBeingViewed");
                    if (e && t) return !0;
                    const n = this.get("isLocalPlayer"),
                        a = this.get("isLocalPlayerSmsVerified");
                    return n && !a
                })),
                inviteNotAllowedReason: a.Ember.computed("isLocalPlayerSmsVerified", (function() {
                    return this.get("isLocalPlayerSmsVerified") ? "" : this.get("tra.clash_tooltip_invite_not_allowed_sms_verify")
                })),
                showActionSpinner: a.Ember.computed("isLocalPlayer", "isReady", "tournament.isLockinAvailable", "isCaptain", "roster.isRosterFull", "isRosterBeingViewed", (function() {
                    if (!this.get("isLocalPlayer")) return !1;
                    if (this.get("isRosterBeingViewed")) return !0;
                    const e = this.get("isCaptain"),
                        t = this.get("roster.isRosterFull");
                    if (e && !t) return !0;
                    const n = this.get("isReady"),
                        a = this.get("tournament.isLockinAvailable");
                    return !n && a
                })),
                showPositionPendingIndicator: a.Ember.computed("isLocalPlayer", "rosterMember.position", (function() {
                    if (this.get("isLocalPlayer")) return !1;
                    const e = this.get("rosterMember.position");
                    return e === i.POSITIONS.NONE || e === i.POSITIONS.UNSELECTED
                })),
                visualState: a.Ember.computed("isCaptain", "roster.isRosterFull", "isLocalPlayer", "isLocalPlayerSmsVerified", "roster.isActiveInCurrentPhase", "tournament.isLockinAvailable", "rosterMember.isReady", "isPending", "currentBuyin", "tournament.entryFee", (function() {
                    const e = this.get("isPending"),
                        t = this.get("isLocalPlayer"),
                        n = this.get("isLocalPlayerSmsVerified"),
                        a = this.get("isCaptain"),
                        i = this.get("roster.isRosterFull"),
                        o = this.get("roster.isActiveInCurrentPhase"),
                        r = this.get("tournament.isLockinAvailable"),
                        l = this.get("rosterMember.isReady"),
                        c = this.get("currentBuyin"),
                        d = this.get("tournament.entryFee");
                    return e ? s.RosterMemberState.PENDING : t && !n ? "verify_sms" : a && !i ? "inviting" : o ? "in_queue" : r ? !e && !l && c >= d ? "ticket_selected" : this.get("rosterMember.state") : "waiting_for_phase"
                })),
                visualStateText: a.Ember.computed("visualState", (function() {
                    return this.get("tra.clash_roster_member_state_" + this.get("visualState"))
                })),
                showTicketOffers: a.Ember.computed("isBuyinEnabled", "tournament.entryFee", "isRosterBeingViewed", (function() {
                    const e = this.get("isBuyinEnabled"),
                        t = this.get("isRosterBeingViewed"),
                        n = this.get("tournament.entryFee") || 0;
                    return e && !t && n > 0
                })),
                memberActionItems: a.Ember.computed("isLocalPlayer", "isLocalPlayerRosterCaptain", "isPending", "isLocalPlayerSmsVerified", "roster.isRegistered", "rosterMember.isFriend", "rosterMember.displayName", "chatService.friends.[]", (function() {
                    if (this.get("isLocalPlayer")) return [];
                    const e = this.get("rosterMember"),
                        t = this.get("isPending");
                    if (!e || t) return [];
                    const n = [],
                        s = this.get("isLocalPlayerRosterCaptain"),
                        i = this.get("roster.isRegistered"),
                        r = this.get("isLocalPlayerSmsVerified"),
                        l = e => {
                            n.push(a._.assign({
                                target: this
                            }, e))
                        };
                    s && (l({
                        label: this.get("tra.clash_roster_member_action_promote_captain"),
                        action: this._transferRosterCaptain.bind(this),
                        disabled: t || !r
                    }), i || l({
                        label: this.get("tra.clash_roster_member_action_kick_player"),
                        action: this._kickPlayer.bind(this),
                        disabled: !r
                    }));
                    const c = this.get("rosterMemberFriend.pid"),
                        d = this.get("rosterMember.summonerId"),
                        m = this.get("rosterMember.displayName"),
                        u = this.get("tra"),
                        p = this.get("chatService"),
                        h = this.get("telemetryService");
                    return n.concat((0, o.default)(c, d, m, u, p, h, {
                        source: "roster-member",
                        hide: {
                            invite: !0
                        }
                    }))
                })),
                hasMemberActions: a.Ember.computed.gt("memberActionItems.length", 0),
                tutorialFlowName: a.Ember.computed("rosterMember", "localPlayer", "isLocalPlayerSmsVerified", (function() {
                    const e = this.get("rosterMember"),
                        t = this.get("localPlayer"),
                        n = this.get("rosterMember.isLocalPlayer");
                    if (!e || !t || !n) return "";
                    const a = this.get("isCaptain"),
                        s = this.get("isLocalPlayerSmsVerified"),
                        i = this.get("isPendingLocalPlayer");
                    return s ? i ? "memberRosterScreenTutorialFlow" : a ? "captainTutorialFlow" : "memberTutorialFlow" : "smsTutorialFlow"
                })),
                tutorialObserver: a.Ember.on("didInsertElement", a.Ember.computed("tutorialFlowName", "tutorialService.memberTutorialFlow.name", "tutorialService.captainTutorialFlow.name", "tutorialService.memberRosterScreenTutorialFlow.name", "tutorialService.smsTutorialFlow.name", (function() {
                    a.Ember.run.next((() => {
                        this._updateTutorialState()
                    }))
                }))),
                isSmsTutorialFlowStep: a.Ember.computed("tutorialFlowName", "tutorialService.smsTutorialFlow.name", (function() {
                    return "smsTutorialFlow" === this.get("tutorialFlowName") && "smsButtonStep" === this.get("tutorialService.smsTutorialFlow.name")
                })),
                isJoinTeamTutorialFlowStep: a.Ember.computed("tutorialFlowName", "tutorialService.memberRosterScreenTutorialFlow.name", (function() {
                    return "memberRosterScreenTutorialFlow" === this.get("tutorialFlowName") && "memberJoinTeamStep" === this.get("tutorialService.memberRosterScreenTutorialFlow.name")
                })),
                currentBuyinObserver: a.Ember.computed("rosterMember.currentBuyin", "rosterMember.buyinType", (function() {
                    if (this.get("rosterMember.currentBuyin") && this.get("rosterMember.isLocalPlayer")) {
                        const e = this.get("tutorialFlowName"),
                            t = this.get(`tutorialService.${e}`);
                        !t || "captainTicketStep" !== t.name && "memberTicketStep" !== t.name || (this.get("tutorialService").completeTutorialStep(this.get("tutorialFlowName"), t.name), this._closeContextualNotification(this.get("_ticketTutorialStepTooltip")))
                    }
                    this.set("displayedBuyin", this.get("rosterMember.currentBuyin")), this.set("displayedTicketType", this.get("rosterMember.buyinType"))
                })),
                _updateTutorialState() {
                    if (!this.get("rosterMember.isLocalPlayer")) return;
                    const e = this.get("tutorialFlowName");
                    if (!e) return;
                    const t = this.get(`tutorialService.${e}`);
                    t && ("memberTicketStep" === t.name || "captainTicketStep" === t.name ? this._createTutorialTooltip(".clash-roster-member-ticket-selector", t, "_ticketTutorialStepTooltip", 85, !1) : "memberRoleStep" === t.name || "captainRoleStep" === t.name ? this._createTutorialTooltip(".clash-roster-member-position-selector", t, "_roleTutorialStepTooltip", 85, !1) : "smsButtonStep" === t.name ? this._createTutorialTooltip("#clash-sms-verify-button", t, "_smsTutorialStepTooltip", 55, !0) : "memberJoinTeamStep" === t.name && this._createTutorialTooltip("#clash-join-team-button", t, "_joinTeamTutorialStepTooltip", 55, !0))
                },
                _createTutorialTooltip(e, t, n, s, i = !0) {
                    a.Ember.run.later((() => {
                        if (this.get(n)) return;
                        const a = this.$(e);
                        if (!a || !a.get(0)) return;
                        const o = this.get("tutorialService").createContextualNotificationBlockElement(this.get("tra"), t),
                            r = c.add(o, {
                                target: {
                                    domNode: a,
                                    anchor: {
                                        x: "center",
                                        y: "top"
                                    }
                                },
                                offset: {
                                    x: 0,
                                    y: s
                                },
                                anchor: {
                                    x: "center",
                                    y: "top"
                                },
                                orientation: "bottom",
                                dismissOnTargetHide: !1
                            });
                        r.onRemove.then((() => {
                            i && !this.get("isTutorialPaused") && this.get("tutorialService").completeTutorialStep(this.get("tutorialFlowName"), t.name), this.set(n, null)
                        })), this.set(n, r)
                    }), 500)
                },
                _closeTutorialTooltips() {
                    this._closeContextualNotification(this.get("_ticketTutorialStepTooltip")), this._closeContextualNotification(this.get("_roleTutorialStepTooltip")), this._closeContextualNotification(this.get("_smsTutorialStepTooltip")), this._closeContextualNotification(this.get("_joinTeamTutorialStepTooltip"))
                },
                _closeContextualNotification(e) {
                    e && c.remove(e)
                },
                async _transferRosterCaptain() {
                    const e = this.get("rosterMember"),
                        t = this.get("rosterMember.summonerId"),
                        n = this.get("tra.clash_roster_member_confirm_transfer_ownership_title"),
                        {
                            playerNameFull: s
                        } = await a.playerNames.getDisplayNameBySummonerId(t),
                        i = this.get("tra").formatString("clash_roster_member_confirm_transfer_ownership_description", {
                            summonerName: s
                        });
                    a.ModalManager.add({
                        type: "DialogConfirm",
                        data: {
                            contents: a.UIKit.getTemplateHelper().contentBlockDialog(n, i),
                            acceptText: this.get("tra.clash_roster_member_confirm_transfer_ownership_accept"),
                            declineText: this.get("tra.clash_roster_member_confirm_transfer_ownership_cancel"),
                            closeButton: !1
                        }
                    }).acceptPromise.then((() => {
                        const t = this.get("clashService"),
                            n = this.get("roster.id");
                        t.transferRosterCaptain(n, e.summonerId)
                    }), (() => {}))
                },
                async _kickPlayerConfirmationDialog() {
                    const e = this.get("rosterMember.summonerId"),
                        {
                            playerNameFull: t
                        } = await a.playerNames.getDisplayNameBySummonerId(e),
                        n = this.get("tra.clash_kick_player_confirmation_dialog_title"),
                        s = this.get("tra").formatString("clash_kick_player_confirmation_dialog_text", {
                            name: t
                        });
                    this._destroyModal("kickPlayerModal"), a.logger.trace("Verifying captain wants to kick player");
                    const i = a.ModalManager.add({
                        type: "DialogConfirm",
                        data: {
                            contents: a.UIKit.getTemplateHelper().contentBlockDialog(n, s),
                            acceptText: this.get("tra.clash_kick_player_confirmation_dialog_button_yes"),
                            declineText: this.get("tra.clash_kick_player_confirmation_dialog_button_cancel"),
                            closeButton: !1
                        }
                    });
                    return this.set("kickPlayerModal", i), i.acceptPromise
                },
                _kickPlayer() {
                    const e = this.get("roster.id"),
                        t = this.get("rosterMember");
                    this._kickPlayerConfirmationDialog().then((() => {
                        this._destroyModal("kickPlayerModal"), this._kickPlayerServiceCall(e, t.summonerId)
                    })).catch((() => {
                        this._destroyModal("kickPlayerModal")
                    }))
                },
                _kickPlayerServiceCall(e, t) {
                    this.get("clashService").kickPlayer(e, t)
                },
                _attachContextMenu() {
                    const e = this.$();
                    if (!e.length) return void a.logger.error("unable to find summon icon element for context menu");
                    const t = e.get(0),
                        n = e => {
                            if ("clash-generic-button-root" === e.toElement.className) return void a.UIKit.getContextMenuManager().close();
                            const t = this.get("memberActionItems");
                            if (t && t.length) {
                                const n = a.UIKit.getContextMenuManager();
                                n.setMenuItems(t), n.openAtEvent(e)
                            }
                        };
                    t.removeEventListener("click", n), t.removeEventListener("contextmenu", n), t.addEventListener("click", n), t.addEventListener("contextmenu", n)
                },
                _closeContextMenu() {
                    const e = a.UIKit.getContextMenuManager();
                    e && e.close()
                },
                _closeTicketSelector() {
                    this.$(".clash-ticket-display-ticket-selector").attr("style", "opacity: 1"), this.$(".clash-roster-member-right-align-col-0").attr("style", "opacity: 1"), this.$(".clash-roster-member-right-align-col-2").attr("style", "opacity: 1"), this.$(".TicketSelector").remove(), a.Util.destroyEmberApp(this._ticketSelectorComponent), this.set("isTicketSelectorOpen", !1)
                },
                actions: {
                    setPositionRole(e) {
                        const t = this.get("tutorialFlowName"),
                            n = this.get(`tutorialService.${t}`);
                        !n || "captainRoleStep" !== n.name && "memberRoleStep" !== n.name || (this.get("tutorialService").completeTutorialStep(t, n.name), this._closeContextualNotification(this.get("_roleTutorialStepTooltip")));
                        const a = this.get("clashService"),
                            s = this.get("roster.id");
                        return this.get("telemetryService").sendEvent("SetPosition", {
                            rosterId: s,
                            position: e,
                            source: "Roster"
                        }), a.setPositionRole(s, e)
                    },
                    setTicket(e, t) {
                        const n = this.get("clashService"),
                            a = this.get("roster.id");
                        n.setTicket(a, e, t).then((() => {
                            this.set("displayedBuyin", this.get("currentBuyin")), this.set("displayedTicketType", this.get("buyinType"))
                        })).catch((() => {
                            this.set("displayedBuyin", this.get("currentBuyin")), this.set("displayedTicketType", this.get("buyinType"))
                        }))
                    },
                    openInviteModal() {
                        const e = this.get("localPlayer.summonerId") === this.get("roster.captainId");
                        return this.attrs.openInviteModal(e)
                    },
                    openSmsVerificationModal() {
                        this._closeContextualNotification(this.get("_smsTutorialStepTooltip")), a.AccountVerification.show("phone-entry", this), a.Telemetry.sendCustomData("rcp-fe-lol-account-verification", {
                            event_name: "account_verification_clash_verify",
                            screen_id: "clash",
                            message: "Player clicked Verify button."
                        })
                    },
                    joinTeam() {
                        const e = this.attrs.joinTeam();
                        a.Util.setBoolDuringPromise(e, this, "isJoinTeamButtonDisabled"), this._closeContextualNotification(this.get("_joinTeamTutorialStepTooltip"))
                    },
                    onOpenPositionRoleMenu() {
                        this._closeContextualNotification(this.get("_roleTutorialStepTooltip"))
                    },
                    openTicketSelector() {
                        const e = this.$();
                        this._ticketSelectorComponent = a.componentFactory.create("TicketSelector", {
                            tournament: this.get("tournament"),
                            localPlayer: this.get("localPlayer"),
                            onClose: () => {
                                this._closeTicketSelector()
                            },
                            onSelectTicket: (e, t) => {
                                this.set("displayedBuyin", e), this.set("displayedTicketType", t), this.send("setTicket", e, t), this.$(".clash-roster-member-right-align-col-0").attr("style", "opacity: 1"), this.$(".clash-roster-member-right-align-col-2").attr("style", "opacity: 1")
                            }
                        });
                        const t = a.componentFactory.getDOMNode(this._ticketSelectorComponent);
                        e.append(t), this.$(".clash-ticket-display-ticket-selector").attr("style", "opacity: 0"), this.$(".clash-roster-member-right-align-col-0").attr("style", "opacity: 0.3"), this.$(".clash-roster-member-right-align-col-2").attr("style", "opacity: 0.3"), this.set("isTicketSelectorOpen", !0), this._closeContextualNotification(this.get("_ticketTutorialStepTooltip"))
                    }
                },
                animationObserver: a.Ember.computed("isAnimationsPaused", (function() {
                    const e = this.get("isAnimationsPaused"),
                        t = this.get("currentTimelineAnimation");
                    t && (e ? t.pause() : t.play())
                })),
                rosterDeltasObserver: a.Ember.on("didInsertElement", a.Ember.computed("rosterMemberDeltas.version", (function() {
                    const e = this.get("rosterMemberDeltas");
                    if (!e) return;
                    if (e[r.default.ChangeStates.IS_ROSTER_NEW]) return void a.Ember.run.next((() => {
                        this.get("rosterMember.isLocalPlayer") ? this._animateLocalPlayerIntro() : this._animateEmptySlotIntro()
                    }));
                    const t = this.get("rosterMember.summonerId");
                    e[t] && (e[t] === r.default.ChangeStates.MEMBER_PENDING ? this._animatePendingPlayerIntro() : e[t] === r.default.ChangeStates.MEMBER_ACCEPTED ? this._animateAcceptedPlayerIntro() : e[t] === r.default.ChangeStates.MEMBER_CHECKIN && (this.get("rosterMember.isLocalPlayer") ? this._animateLocalPlayerLockIn() : this._animateMemberLockIn()))
                }))),
                _initializeAnimationData() {
                    a.gsapCustomEase.create("cb0001", "0,0,0,1"), a.gsapCustomEase.create("cb1011", "1,0,1,1"), a.gsapCustomEase.create("cb9546", "1,0,0.95,0.46"), a.gsapCustomEase.create("cb0671", "0,0,0.67,1")
                },
                _animateLocalPlayerIntro() {
                    const e = this.$(".clash-roster-member-position-selector"),
                        t = this.$(".clash-roster-member-name-state-section"),
                        n = this.$("#clash-roster-member-summoner-icon-container"),
                        a = this.$(".clash-roster-member-ticket-selector"),
                        s = this.$("#clash-roster-member-captain-icon-image"),
                        i = this.$("#introVideo").get(0),
                        o = this._createTimelineAnimation();
                    o.add("start", "+=0"), o.add((() => {
                        i && i.play()
                    }), "start+=0.73"), o.from(a, .43, {
                        opacity: 0,
                        ease: "cb0001"
                    }, "start+=0.93"), o.from(e, .43, {
                        x: -43,
                        opacity: 0,
                        ease: "cb0001"
                    }, "start+=0.93"), o.from(s, .1, {
                        opacity: 0
                    }, "start+=1.5"), o.fromTo(t, .2, {
                        x: 0,
                        ease: "cb0001"
                    }, {
                        x: 38
                    }, "start"), o.to(t, .37, {
                        x: 0,
                        ease: "cb1011"
                    }, "start+=0.2"), o.fromTo(n, .33, {
                        scale: .41,
                        ease: "cb0001"
                    }, {
                        scale: 1.15
                    }, "start"), o.to(n, .23, {
                        scale: 1,
                        ease: "cb9546"
                    }, "start+=0.33"), o.play()
                },
                _animatePendingPlayerIntro() {
                    a.Util.waitForElement(this.element, ".clash-roster-member-name-state-section").then((() => {
                        const e = this.$(".clash-roster-member-name-state-section"),
                            t = this._createTimelineAnimation();
                        t.add("start", "+=0"), t.fromTo(e, .53, {
                            x: 38,
                            ease: "cb0001"
                        }, {
                            x: 0
                        }, "start"), t.fromTo(e, .17, {
                            opacity: 0
                        }, {
                            opacity: 1
                        }, "start"), t.play()
                    }))
                },
                _animateEmptySlotIntro() {
                    const e = .6 + .1 * this.get("index"),
                        t = e + .7,
                        n = this.$(".clash-roster-member-streak-container");
                    a.gsapCustomEase.create("cb0001", "0,0,0,1");
                    const s = this._createTimelineAnimation();
                    s.add("start", "+=0"), s.to(n, .01, {
                        opacity: 1
                    }, `start+=${e}`), s.fromTo(n, .8, {
                        x: 0,
                        ease: "cb0001"
                    }, {
                        x: 475
                    }, `start+=${e}`), s.to(n, .1, {
                        opacity: 0
                    }, `start+=${t}`), s.play()
                },
                _animateAcceptedPlayerIntro() {
                    const e = this.$(".clash-roster-member-name-state-section"),
                        t = this.$("#clash-roster-member-summoner-icon-container"),
                        n = this.$("#introVideo").get(0),
                        a = this._createTimelineAnimation();
                    a.add("start", "+=0"), a.add((() => {
                        n && n.play()
                    }), "start+=0.567"), a.fromTo(e, .2, {
                        x: 0,
                        ease: "cb0001"
                    }, {
                        x: 38
                    }, "start"), a.to(e, .37, {
                        x: 0,
                        ease: "cb1011"
                    }, "start+=0.2"), a.fromTo(t, .33, {
                        scale: .41,
                        ease: "cb0001"
                    }, {
                        scale: 1.15
                    }, "start"), a.to(t, .23, {
                        scale: 1,
                        ease: "cb9546"
                    }, "start+=0.33"), a.play()
                },
                _animateLocalPlayerLockIn() {
                    const e = this.$("#clash-roster-member-summoner-icon-container"),
                        t = this.$("#introVideo").get(0),
                        n = this._createTimelineAnimation();
                    n.add("start", "+=0"), n.add((() => {
                        t && t.play()
                    }), "start+=0.33"), n.fromTo(e, .1, {
                        x: 0,
                        ease: "cb0671"
                    }, {
                        x: -20
                    }, "start"), n.to(e, .23, {
                        x: 0,
                        ease: "cb1011"
                    }, "start+=0.1"), n.play()
                },
                _animateMemberLockIn() {
                    a.Util.waitForElement(this.element, ".clash-roster-member-info-icon").then((() => {
                        const e = this.$(".clash-roster-member-info-icon"),
                            t = this.$("#clash-roster-member-summoner-icon-container"),
                            n = this.$("#introVideo").get(0),
                            a = this._createTimelineAnimation();
                        a.add("start", "+=0"), a.add((() => {
                            n && n.play()
                        }), "start+=0.33"), a.fromTo(t, .1, {
                            x: 0,
                            ease: "cb0671"
                        }, {
                            x: -20
                        }, "start"), a.to(t, .23, {
                            x: 0,
                            ease: "cb1011"
                        }, "start+=0.1"), a.to(t, .01, {
                            scale: 1
                        }, "start"), a.fromTo(e, .2, {
                            opacity: 0
                        }, {
                            opacity: 1
                        }, "start+=0.33"), a.fromTo(e, .3, {
                            x: -20,
                            ease: "cb0671"
                        }, {
                            x: 0
                        }, "start+=0.33"), a.play()
                    }))
                },
                _createTimelineAnimation() {
                    let e = this.get("currentTimelineAnimation");
                    return e && e.isActive() && (e.seek(e.totalDuration(), !0), e.kill()), e = new a.gsap.TimelineMax({
                        paused: !0
                    }), e.eventCallback("onComplete", (() => {
                        this.get("isAnimationsPaused") || (this.set("currentTimelineAnimation", null), e.kill())
                    })), this.set("currentTimelineAnimation", e), e
                },
                _destroyModalAndApp(e) {
                    const t = this.get(e);
                    t && (a.ModalManager.remove(t.modal), a.Util.destroyEmberApp(t.app), this.set(e, null))
                },
                _destroyModal(e) {
                    const t = this.get(e);
                    t && (a.ModalManager.remove(t), this.set(e, null))
                }
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function(e, t, n, s, i, o, r) {
                (r = r || {}).hide = r.hide || {}, r.source = r.source || "Unknown";
                const l = [],
                    c = i.isFriend(t),
                    d = e => {
                        l.push(a._.assign({
                            target: !0
                        }, e))
                    };
                r.hide.invite || d({
                    target: a.Parties,
                    label: s.get("clash_overview_context_menu_game_invite"),
                    action: () => a.Parties.invitePlayer(t, n),
                    disabled: !a.Parties.canInvitePlayer(t)
                });
                c || r.hide.addFriend || d({
                    target: i,
                    label: s.get("clash_overview_context_menu_add_friend"),
                    action: () => {
                        i.addFriend(n), o.sendEvent("AddFriend", {
                            source: r.source,
                            addSummonerName: n
                        })
                    }
                });
                c && !r.hide.sendMessage && d({
                    target: i,
                    label: s.get("clash_overview_context_menu_send_message"),
                    action: () => a.Social.openConversation(e)
                });
                r.hide.viewProfile || d({
                    target: a.Profiles,
                    label: s.get("clash_overview_context_menu_view_profile"),
                    action: () => a.Profiles.showOverlay({
                        summonerId: t
                    })
                });
                c && !r.hide.removeFriend && d({
                    label: s.get("clash_overview_context_menu_unfriend"),
                    action: () => async function(e, t, n, s) {
                        const {
                            playerNameFull: i
                        } = await a.playerNames.getDisplayNameBySummonerId(t), o = a.UIKit.getTemplateHelper().contentBlockDialog(n.get("clash_overview_confirm_unfriend_title"), n.formatString("clash_overview_confirm_unfriend_text", {
                            name: i
                        }), "dialog-medium", "confirm-friend-actions"), r = a.ModalManager.add({
                            type: "DialogConfirm",
                            data: {
                                contents: o,
                                acceptText: n.get("clash_overview_confirm_unfriend"),
                                declineText: n.get("clash_overview_confirm_cancel"),
                                closeButton: !1
                            }
                        }), l = r.domNode.querySelector(".confirm-friend-actions");
                        l.style.width = "360px", l.querySelector("p").style.textAlign = "left", r.acceptPromise.then((() => {
                            s.removeFriend(e)
                        })).catch((() => {}))
                    }(e, t, s, i)
                });
                c && !r.hide.blockPlayer && d({
                    label: s.get("clash_overview_context_menu_block"),
                    action: () => async function(e, t, n, s, i) {
                        const {
                            playerNameFull: o
                        } = await a.playerNames.getDisplayNameBySummonerId(t), r = a.UIKit.getTemplateHelper().contentBlockDialog(s.get("clash_overview_confirm_block_title"), s.formatString("clash_overview_confirm_block_text", {
                            name: o
                        }), "dialog-medium", "confirm-friend-actions"), l = a.ModalManager.add({
                            type: "DialogConfirm",
                            data: {
                                contents: r,
                                acceptText: s.get("clash_overview_confirm_block"),
                                declineText: s.get("clash_overview_confirm_cancel"),
                                closeButton: !1
                            }
                        }), c = l.domNode.querySelector(".confirm-friend-actions");
                        c.style.width = "360px", c.querySelector("p").style.textAlign = "left", l.acceptPromise.then((() => {
                            i.blockPlayer(e, n)
                        })).catch((() => {}))
                    }(e, t, n, s, i)
                });
                return l
            };
            var a = n(1)
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = n(9);
            const i = {};
            let o = 0,
                r = {
                    version: 0
                };
            const l = {},
                c = {},
                d = Object.freeze({
                    IS_ROSTER_NEW: "ROSTER_NEW",
                    MEMBER_PENDING: "PENDING",
                    MEMBER_ACCEPTED: "ACCEPTED",
                    MEMBER_CHECKIN: "CHECKIN",
                    MEMBER_PENDING_TO_DECLINED: "PENDING_TO_DECLINED",
                    MEMBER_ACCEPTED_TO_DECLINED: "ACCEPTED_TO_DECLINED"
                });
            class m {
                constructor() {}
                static setRoster(e) {
                    if (!e) return;
                    const t = e.get("id");
                    null != t && (i[t] = a._.cloneDeep(e))
                }
                static getRoster(e) {
                    return i[e]
                }
                static calculateRosterChangeDeltas(e, t) {
                    if (m.resetDeltas(), !t) return {};
                    const n = a._.cloneDeep(t);
                    if (!e && n.members && 1 === n.members.length) return r[d.IS_ROSTER_NEW] = !0, r;
                    if (!e) return r;
                    if (e.members && n.members)
                        for (let t = 0; t < e.members.length; t++) {
                            const a = e.members[t];
                            if (!n.members.find((e => e.summonerId === a.summonerId))) {
                                const e = a.state === s.RosterMemberState.PENDING ? d.MEMBER_PENDING_TO_DECLINED : d.MEMBER_ACCEPTED_TO_DECLINED;
                                r[a.summonerId] = e
                            }
                        }
                    for (let t = 0; t < n.members.length; t++) {
                        const a = n.members[t],
                            i = e.members.find((e => e.summonerId === a.summonerId)),
                            o = !i || i.state !== a.state,
                            l = i && i.state === s.RosterMemberState.READY && a !== s.RosterMemberState.READY;
                        if (o && !l) {
                            let e;
                            switch (a.state) {
                                case s.RosterMemberState.PENDING:
                                    e = d.MEMBER_PENDING;
                                    break;
                                case s.RosterMemberState.NOT_READY:
                                    e = d.MEMBER_ACCEPTED;
                                    break;
                                case s.RosterMemberState.READY:
                                    e = d.MEMBER_CHECKIN
                            }
                            e && (r[a.summonerId] = e)
                        }
                    }
                    return r
                }
                static resetDeltas() {
                    o += 1, r = {
                        version: o
                    }
                }
                static getTier(e) {
                    return l[String(e)]
                }
                static setTier(e, t) {
                    l[String(t)] = e
                }
                static getCapacity(e) {
                    return e ? c[String(e)] : null
                }
                static setCapacity(e, t) {
                    c[String(t)] = e
                }
            }
            m.ChangeStates = d;
            var u = m;
            t.default = u
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "eR1nEw4l",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-member\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-member\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-member\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","style","display:none"],["flush-element"],["text","\\n"],["text","  "],["append",["unknown",["rosterMemberObserver"]],false],["text","\\n  "],["append",["unknown",["tutorialObserver"]],false],["text","\\n  "],["append",["unknown",["memberActionItems"]],false],["text","\\n  "],["append",["unknown",["currentBuyinObserver"]],false],["text","\\n  "],["append",["unknown",["animationObserver"]],false],["text","\\n  "],["append",["unknown",["rosterDeltasObserver"]],false],["text","\\n  "],["append",["unknown",["currentBuyinObserver"]],false],["text","\\n"],["close-element"],["text","\\n\\n"],["comment"," streak "],["text","\\n"],["open-element","img",[]],["static-attr","class","clash-roster-member-streak-container"],["static-attr","src","/fe/lol-clash/assets/images/roster/roster-row-streak.png"],["flush-element"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","clash-roster-member-info-icon"],["flush-element"],["text","\\n"],["block",["unless"],[["get",["isLocalPlayer"]]],null,32],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["rosterMember","isLocalPlayer"]]],null,30,29],["text","\\n"],["block",["if"],[["get",["isPendingAndNotViewRosterModal"]]],null,28,27],["text"," "],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["append",["unknown",["tra","clash_roster_member_empty_slot_text_member"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["append",["unknown",["tra","clash_roster_member_empty_slot_text_captain"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n              "],["open-element","p",[]],["flush-element"],["append",["unknown",["inviteNotAllowedReason"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["bottom","system"]],2]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-roster-member-pending-or-invite-container"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"openInviteModal"],null],null],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-roster-member-invite-button"],["flush-element"],["text","\\n        "],["append",["helper",["generic-button"],null,[["baseImgPath","disabledImgPath","iconSizeModifier","isEnabled"],["/fe/lol-clash/assets/images/buttons/icon-add.png","/fe/lol-clash/assets/images/buttons/icon-add-disabled.png",0.6,["get",["isInviteAllowed"]]]]],false],["text","\\n"],["block",["if"],[["get",["inviteNotAllowedReason"]]],null,3],["text","      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-roster-member-empty-slot-text"],["flush-element"],["text","\\n"],["block",["if"],[["get",["roster","captain","isLocalPlayer"]]],null,1,0],["text","      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\n"],["block",["if"],[["get",["isNotViewRosterModal"]]],null,4]],"locals":[]},{"statements":[["text","            "],["append",["helper",["position-selector"],null,[["positionRole","isLocal","isEnabled","animationsEnabled","setPositionRole","openPositionRoleMenu"],[["get",["rosterMember","position"]],["get",["rosterMember","isLocalPlayer"]],true,true,["helper",["action"],[["get",[null]],"setPositionRole"],null],["helper",["action"],[["get",[null]],"onOpenPositionRoleMenu"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","clash-roster-member-position-pending"],["flush-element"],["append",["unknown",["pending-indicator"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-roster-member-position-selector ",["helper",["if"],[["get",["isAramQueue"]],"hidden"],null]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["showPositionPendingIndicator"]]],null,7,6],["text","        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                "],["open-element","lol-uikit-comet-border",[]],["static-attr","slot","comet-border"],["static-attr","class","clash-button-tutorial-animation"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-flat-button",[]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"openSmsVerificationModal"],null],null],["static-attr","id","clash-sms-verify-button"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isSmsTutorialFlowStep"]]],null,9],["text","              "],["append",["unknown",["tra","clash_roster_member_verify_sms_btn"]],false],["text","\\n              "],["open-element","img",[]],["static-attr","class","clash-roster-member-sms-verification-icon"],["static-attr","src","/fe/lol-clash/assets/images/roster/sms-verification-icon-mobile.png"],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                "],["open-element","lol-uikit-comet-border",[]],["static-attr","slot","comet-border"],["static-attr","class","clash-button-tutorial-animation"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-flat-button",[]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"joinTeam"],null],null],["dynamic-attr","disabled",["unknown",["isJoinTeamButtonDisabled"]],null],["static-attr","id","clash-join-team-button"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isJoinTeamTutorialFlowStep"]]],null,11],["text","              "],["append",["unknown",["tra","clash_action_timeline_state_fwd_btn_text_join"]],false],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","clash-roster-member-blocking-action-button"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isPendingLocalPlayer"]]],null,12,10],["text","        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","clash-roster-member-ticket-selector"],["flush-element"],["text","\\n          "],["append",["helper",["ticket-display"],null,[["tournament","rosterId","roster","rosterMember","isBuyinRequired","isBuyinEnabled","availableTickets","isRowHighlighted","showTicketOffers","isTicketSelectorOpen","displayedBuyin","displayedTicketType","isRosterBeingViewed","onTicketSelected","openTicketSelector"],[["get",["tournament"]],["get",["roster","id"]],["get",["roster"]],["get",["rosterMember"]],["get",["isBuyinRequired"]],["get",["isBuyinEnabled"]],["get",["localPlayer","availableTickets"]],["get",["isRowHighlighted"]],["get",["showTicketOffers"]],["get",["isTicketSelectorOpen"]],["get",["displayedBuyin"]],["get",["displayedTicketType"]],["get",["isRosterBeingViewed"]],["helper",["action"],[["get",[null]],"setTicket"],null],["helper",["action"],[["get",[null]],"openTicketSelector"],null]]]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n              "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_tooltip_roster_captain"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","img",[]],["static-attr","id","clash-roster-member-captain-icon-image"],["static-attr","src","/fe/lol-clash/assets/images/roster/captain-icon.png"],["flush-element"],["close-element"],["text","\\n          "],["open-element","lol-uikit-video",[]],["static-attr","id","captainIconVideo"],["static-attr","type","intro"],["static-attr","src","/fe/lol-clash/assets/animations/videos/roster/captainIconIntro.webm"],["static-attr","fade-in","0"],["static-attr","fade-out","0"],["static-attr","preload",""],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],15]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","clash-roster-member-availability-icon not-friend"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-roster-member-availability-icon ",["unknown",["rosterMember","availability"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["rosterMember","isFriend"]]],null,18,17]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","clash-image-ring-spinner animated"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","img",[]],["static-attr","class","clash-roster-member-empty-summoner-icon"],["static-attr","src","/fe/lol-clash/assets/images/roster/player-empty-icon.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["rosterMember","summonerIconPath"]]]]],["flush-element"],["close-element"]],"locals":[]},{"statements":[["text","          "],["block",["uikit-framed-icon"],null,[["borderwidth","interactive"],[2,["get",["hasMemberActions"]]]],22],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["rosterMember","summonerIconPath"]]],null,23,21],["block",["if"],[["get",["showActionSpinner"]]],null,20],["block",["unless"],[["get",["isLocalPlayer"]]],null,19]],"locals":[]},{"statements":[["text","        "],["append",["unknown",["pending-indicator"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","\\n"],["text","  "],["open-element","lol-parties-comm-halo",[]],["static-attr","id","clash-roster-member-summoner-icon-container"],["dynamic-attr","puuid",["unknown",["rosterMember","puuid"]],null],["dynamic-attr","size",["unknown",["haloSize"]],null],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-roster-member-summoner-icon"],["dynamic-attr","debug-id",["concat",[["unknown",["rosterMember","summonerId"]]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["isPendingRemotePlayer"]]],null,25,24],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["static-attr","class","clash-roster-member-name-state-section"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-roster-member-summoner-name"],["flush-element"],["text","\\n      "],["append",["helper",["player-name"],null,[["format","puuid","summonerName","gameName","tagLine"],["short",["get",["puuid"]],["get",["summonerName"]],["get",["gameName"]],["get",["tagLine"]]]]],false],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-roster-member-visual-state ",["unknown",["visualState"]]]]],["flush-element"],["append",["unknown",["visualStateText"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["static-attr","class","clash-roster-member-right-align-container"],["flush-element"],["text","\\n"],["text","    "],["open-element","div",[]],["static-attr","class","clash-roster-member-right-align-col-2"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-roster-member-captain-icon"],["flush-element"],["text","\\n"],["block",["if"],[["get",["rosterMember","isRosterCaptain"]]],null,16],["text","      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n\\n"],["text","    "],["open-element","div",[]],["static-attr","class","clash-roster-member-right-align-col-1"],["flush-element"],["text","\\n"],["block",["unless"],[["get",["hasBlockingAction"]]],null,14],["text","    "],["close-element"],["text","\\n\\n"],["text","    "],["open-element","div",[]],["static-attr","class","clash-roster-member-right-align-col-0"],["flush-element"],["text","\\n"],["block",["if"],[["get",["hasBlockingAction"]]],null,13,8],["text","    "],["close-element"],["text"," "],["text","\\n  "],["close-element"],["text"," "],["text","\\n\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["rosterMember"]]],null,26,5]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-roster-member-pending-or-invite-container"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"openInviteModal"],null],null],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-roster-member-summoner-icon"],["flush-element"],["text","\\n      "],["append",["unknown",["pending-indicator"]],false],["text","\\n    "],["close-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","clash-roster-member-empty-slot-text"],["flush-element"],["text","\\n      "],["append",["unknown",["tra","clash_roster_member_state_PENDING"]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","lol-uikit-video",[]],["static-attr","id","introVideo"],["static-attr","type","intro"],["static-attr","src","/fe/lol-clash/assets/animations/videos/roster/playerEntrance_small.webm"],["static-attr","fade-in","0"],["static-attr","fade-out","0"],["static-attr","preload",""],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","lol-uikit-video",[]],["static-attr","id","introVideo"],["static-attr","type","intro"],["static-attr","src","/fe/lol-clash/assets/animations/videos/roster/playerEntrance_large.webm"],["static-attr","fade-in","0"],["static-attr","fade-out","0"],["static-attr","preload",""],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/buttons/icon-checkmark.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isReady"]]],null,31]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(74);
            n(304);
            const i = ".clash-position-selector-background";
            e.exports = a.Ember.Component.extend({
                layout: n(305),
                classNames: ["clash-player-positions"],
                classNameBindings: ["isCurrentPlayer:is-current-player:is-member", "showSingleSelector:single-selector"],
                screenRoot: a.Viewport.fullScreen().getScreenRoot(a.Viewport.getApiKey("rcp-fe-lol-clash_apikey"), "rcp-fe-lol-clash"),
                _screenRootHideCallback: void 0,
                _isSelectingPosition: !1,
                isEnabled: !0,
                useBlue: !1,
                isCurrentPlayer: a.Ember.computed.alias("isLocal"),
                isNotCurrentPlayer: a.Ember.computed.not("isCurrentPlayer"),
                positionRole: s.POSITIONS.UNSELECTED,
                isPrimaryUnselected: a.Ember.computed.equal("positionRole", s.POSITIONS.UNSELECTED),
                isPrimaryFill: a.Ember.computed.equal("positionRole", s.POSITIONS.FILL),
                primaryTooltipConfig: {
                    targetAnchor: {
                        x: "left",
                        y: "center"
                    },
                    tooltipAnchor: {
                        x: "right",
                        y: "center"
                    },
                    offset: {
                        x: 0,
                        y: 0
                    }
                },
                setupListeners: a.Ember.on("didInsertElement", (function() {
                    const e = this.element.querySelector(i),
                        t = this._primaryClick.bind(this);
                    e.addEventListener("mousedown", t), this.set("_primaryClickListener", t), this.set("isInserted", !0)
                })),
                enabledObserver: a.Ember.computed("isInserted", "isEnabled", "isCurrentPlayer", (function() {
                    if (!this._getBackgroundElement()) return;
                    const e = this.get("isEnabled"),
                        t = this.get("isCurrentPlayer"),
                        n = this.get("useBlue");
                    t && n ? this._getBackgroundElement().classList.add("state-blue") : this._getBackgroundElement().classList.remove("state-blue"), e && t ? this._getBackgroundElement().classList.add("enabled") : this._getBackgroundElement().classList.remove("enabled")
                })),
                destroyModalApp: a.Ember.on("willDestroyElement", (function() {
                    const e = this.get("_positionSelectorComponent");
                    e && a.Util.destroyEmberApp(e)
                })),
                destroyListeners: a.Ember.on("willDestroyElement", (function() {
                    this.element.querySelector(i).removeEventListener("mousedown", this.get("_primaryClickListener"))
                })),
                _primaryClick: function() {
                    this._click(i, this.get("positionRole"))
                },
                _click: function(e, t) {
                    this.set("_isSelectingPosition", !0);
                    const n = this.positionSelectorComponentDomNode(e, t),
                        s = n.querySelector(".clash-position-selector-modal");
                    s && s.classList.add("moving"), a.LayerManager.addLayer(n), this.set("_screenRootHideCallback", (() => {
                        this.hidePositionSelectModal(), this.get("screenRoot").off("hide", this.get("_screenRootHideCallback"))
                    })), this.get("screenRoot").on("hide", this.get("_screenRootHideCallback")), this.attrs && this.attrs.openPositionRoleMenu && this.attrs.openPositionRoleMenu()
                },
                _selectedCallback: function(e, t) {
                    if (t) {
                        t !== this.get("positionRole") && this._setPositionRole(t), this.hidePositionSelectModal()
                    }
                },
                positionSelectorComponentDomNode: function(e, t) {
                    let n = this.get("_positionSelectorComponent");
                    const s = this.element.querySelector(e);
                    return this.updatePositionSelector(s, e, t, this._selectedCallback.bind(this)), n || (n = a.componentFactory.create("PositionSelectorModal", {
                        playerPositionData: this.get("selectorData")
                    }), this.set("_positionSelectorComponent", n)), n.domNode
                },
                updatePositionSelector: function(e, t, n, s) {
                    const i = this.get("selectorData") || a.Ember.Object.create();
                    i.set("selectorId", t), i.set("currentPosition", n), i.set("selectedCallback", s), i.set("targetElement", e), i.set("positionRole", this.get("positionRole")), i.notifyPropertyChange("targetElementUpdated"), this.set("selectorData", i)
                },
                hidePositionSelectModal: function() {
                    this.get("_isSelectingPosition") && (a.LayerManager.removeLayer(this.get("_positionSelectorComponent").domNode), this.set("_isSelectingPosition", !1))
                },
                _getBackgroundElement() {
                    return this.element.querySelector(i)
                },
                _setPositionRole(e) {
                    return this.attrs.setPositionRole(e)
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "dawJDsR5",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\position-selector\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\position-selector\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\position-selector\\\\index.js\\" "],["text","\\n"],["append",["unknown",["enabledObserver"]],false],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-position-selector-background"],["dynamic-attr","data-position",["concat",[["unknown",["positionRole"]]]]],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-position-selector-contents"],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-position-icon ",["helper",["if"],[["get",["isCurrentPlayer"]],"local"],null]]]],["flush-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","content",[]],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(74);
            n(307), e.exports = a.Ember.Component.extend({
                layout: n(308),
                classNames: ["clash-position-selector-modal"],
                playerPositionData: null,
                selectorId: a.Ember.computed.alias("playerPositionData.selectorId"),
                targetElement: a.Ember.computed.alias("playerPositionData.targetElement"),
                selectedCallback: a.Ember.computed.alias("playerPositionData.selectedCallback"),
                currentPosition: a.Ember.computed.alias("playerPositionData.currentPosition"),
                firstPosition: a.Ember.computed.alias("playerPositionData.firstPosition"),
                secondaryPosition: a.Ember.computed.alias("playerPositionData.secondaryPosition"),
                currentlyHoveredPosition: null,
                previouslyHoveredPosition: null,
                currentlySelectedPosition: null,
                onDidInsertElement: a.Ember.on("didInsertElement", (function() {
                    this.resetSelector()
                })),
                onTargetElementChanged: a.Ember.observer("playerPositionData.targetElementUpdated", (function() {
                    a.Ember.run.once(this, this.resetSelector)
                })),
                resetSelector: function() {
                    this.set("previouslyHoveredPosition", this.get("currentlyHoveredPosition")), this._playAudio("radialmenu-open"), this.updateLocation(), this.updatePositionText(s.POSITIONS.UNSELECTED), this.updateCurrentPositionIcon(), this.updatePointer(s.POSITIONS.UNSELECTED), this.updateIcon(s.POSITIONS.UNSELECTED)
                },
                updateLocation: function() {
                    const e = this.get("targetElement");
                    if (!e) return;
                    const t = e.getBoundingClientRect(),
                        n = t.width / 2,
                        a = t.height / 2,
                        s = this.positionSelector(),
                        i = s ? s.getBoundingClientRect() : {
                            width: 0,
                            height: 0
                        },
                        o = i.width / 2,
                        r = i.height / 2;
                    let l = t.top - r;
                    l += a, s.style.top = `${l}px`;
                    let c = t.left - o;
                    c += n, s.style.left = `${c}px`
                },
                updateCurrentPositionIcon: function() {
                    const e = this.get("currentPosition"),
                        t = this.$(".clash-current-position-icon").get(0);
                    if (!t) return;
                    const n = e ? "icon-" + e.toLowerCase() : "";
                    t.className = "clash-current-position-icon " + n
                },
                selectPosition: function(e) {
                    this._playAudio("radialmenu-role-select");
                    const t = this.get("playerPositionData");
                    this.set("currentlySelectedPosition", e);
                    t.get("selectedCallback")(this.get("selectorId"), e.toUpperCase())
                },
                handleHoverIn: function(e) {
                    this.set("previouslyHoveredPosition", this.get("currentlyHoveredPosition")), this.set("currentlyHoveredPosition", e), this.get("previouslyHoveredPosition") !== this.get("currentlyHoveredPosition") && this._playAudio("radialmenu-role-hover"), this.updatePointer(e), this.updateIcon(e), this.updatePositionText(e)
                },
                handleHoverOut: function(e) {
                    const t = e || s.POSITIONS.UNSELECTED,
                        n = this.positionPointer(t),
                        a = this.positionPointer(s.POSITIONS.UNSELECTED);
                    a && a.classList.remove("hidden"), n && n.classList.add("hidden");
                    const i = this.positionIcon(e);
                    i && i.classList.remove("active")
                },
                updatePositionText: function(e) {
                    const t = this.get("previouslyHoveredPosition");
                    t && t !== s.POSITIONS.UNSELECTED && this.positionText(t).classList.add("hidden");
                    const n = this.positionText(e);
                    e !== s.POSITIONS.UNSELECTED && n.classList.remove("hidden")
                },
                updatePointer: function(e) {
                    const t = e || s.POSITIONS.UNSELECTED,
                        n = this.get("previouslyHoveredPosition") || s.POSITIONS.UNSELECTED,
                        a = this.positionPointer(t),
                        i = this.positionPointer(n),
                        o = this.positionPointer(s.POSITIONS.UNSELECTED);
                    n && i.classList.add("hidden"), a && a.classList.remove("hidden"), t !== s.POSITIONS.UNSELECTED && o.classList.add("hidden")
                },
                updateIcon: function(e) {
                    const t = this.get("previouslyHoveredPosition") || s.POSITIONS.UNSELECTED,
                        n = this.positionIcon(t);
                    n && n.classList.remove("active");
                    const a = this.positionIcon(e);
                    a && a.classList.add("active")
                },
                positionSelector: function() {
                    return this.$(".clash-position-selector").get(0)
                },
                positionPointer: function(e) {
                    const t = ".clash-position-pointer-" + e.toLowerCase();
                    return this.$(t).get(0)
                },
                positionIcon: function(e) {
                    const t = ".clash-position-icon-" + e.toLowerCase();
                    return this.$(t).get(0)
                },
                positionText: function(e) {
                    const t = ".position-text-" + e.toLowerCase();
                    return this.$(t).get(0)
                },
                _playAudio: function(e) {
                    a.AudioManager.playAudio(e)
                },
                actions: {
                    positionHoverIn: function(e) {
                        const t = e.toUpperCase();
                        this.handleHoverIn(s.POSITIONS[t])
                    },
                    positionHoverOut: function(e) {
                        const t = e.toUpperCase();
                        this.handleHoverOut(s.POSITIONS[t])
                    },
                    positionSelected: function(e) {
                        "unselected" === e && (e = this.get("currentPosition")), e && "none" !== e || (e = "unselected");
                        const t = e.toUpperCase();
                        this.selectPosition(s.POSITIONS[t])
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "KWuXdrdX",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\position-selector-modal\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\position-selector-modal\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\position-selector-modal\\\\index.js\\" "],["text","\\n"],["open-element","lol-uikit-full-page-backdrop",[]],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-position-selector"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-position-selector-small-backdrop"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-position-selector-hextech-dashed-ring"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-position-selection-icons"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-position-selection-icon clash-position-icon-utility"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-position-text position-text-utility hidden"],["flush-element"],["text","\\n              "],["append",["unknown",["tra","clash_position_utility"]],false],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-position-selection-icon clash-position-icon-middle"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-position-text position-text-middle hidden"],["flush-element"],["text","\\n              "],["append",["unknown",["tra","clash_position_middle"]],false],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-position-selection-icon clash-position-icon-jungle"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-position-text position-text-jungle hidden"],["flush-element"],["text","\\n              "],["append",["unknown",["tra","clash_position_jungle"]],false],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-position-selection-icon clash-position-icon-bottom"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-position-text position-text-bottom hidden"],["flush-element"],["text","\\n              "],["append",["unknown",["tra","clash_position_bottom"]],false],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-position-selection-icon clash-position-icon-fill"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-position-text position-text-fill hidden"],["flush-element"],["text","\\n              "],["append",["unknown",["tra","clash_position_fill"]],false],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-position-selection-icon clash-position-icon-top"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-position-text position-text-top hidden"],["flush-element"],["text","\\n              "],["append",["unknown",["tra","clash_position_top"]],false],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n\\n        "],["open-element","div",[]],["static-attr","class","clash-position-selection-pointers"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-position-selection-pointer clash-position-pointer-unselected"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-position-selection-pointer clash-position-pointer-utility hidden"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-position-selection-pointer clash-position-pointer-middle hidden"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-position-selection-pointer clash-position-pointer-jungle hidden"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-position-selection-pointer clash-position-pointer-bottom hidden"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-position-selection-pointer clash-position-pointer-fill hidden"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-position-selection-pointer clash-position-pointer-top hidden"],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n\\n        "],["open-element","ul",[]],["static-attr","class","clash-position-selector-pie"],["flush-element"],["text","\\n          "],["open-element","li",[]],["static-attr","class","clash-position-selection position-jungle"],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"positionHoverIn","jungle"],null],null],["dynamic-attr","onmouseleave",["helper",["action"],[["get",[null]],"positionHoverOut","jungle"],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"positionSelected","jungle"],null],null],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-position-selection-proxy"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","li",[]],["static-attr","class","clash-position-selection position-middle"],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"positionHoverIn","middle"],null],null],["dynamic-attr","onmouseleave",["helper",["action"],[["get",[null]],"positionHoverOut","middle"],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"positionSelected","middle"],null],null],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-position-selection-proxy"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","li",[]],["static-attr","class","clash-position-selection position-bottom"],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"positionHoverIn","bottom"],null],null],["dynamic-attr","onmouseleave",["helper",["action"],[["get",[null]],"positionHoverOut","bottom"],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"positionSelected","bottom"],null],null],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-position-selection-proxy"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","li",[]],["static-attr","class","clash-position-selection position-utility"],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"positionHoverIn","utility"],null],null],["dynamic-attr","onmouseleave",["helper",["action"],[["get",[null]],"positionHoverOut","utility"],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"positionSelected","utility"],null],null],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-position-selection-proxy"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","li",[]],["static-attr","class","clash-position-selection position-fill"],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"positionHoverIn","fill"],null],null],["dynamic-attr","onmouseleave",["helper",["action"],[["get",[null]],"positionHoverOut","fill"],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"positionSelected","fill"],null],null],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-position-selection-proxy"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","li",[]],["static-attr","class","clash-position-selection position-fill"],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"positionHoverIn","fill"],null],null],["dynamic-attr","onmouseleave",["helper",["action"],[["get",[null]],"positionHoverOut","fill"],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"positionSelected","fill"],null],null],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-position-selection-proxy"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","li",[]],["static-attr","class","clash-position-selection position-fill"],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"positionHoverIn","fill"],null],null],["dynamic-attr","onmouseleave",["helper",["action"],[["get",[null]],"positionHoverOut","fill"],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"positionSelected","fill"],null],null],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-position-selection-proxy"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","li",[]],["static-attr","class","clash-position-selection position-top"],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"positionHoverIn","top"],null],null],["dynamic-attr","onmouseleave",["helper",["action"],[["get",[null]],"positionHoverOut","top"],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"positionSelected","top"],null],null],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-position-selection-proxy"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-current-position-icon"],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"positionHoverIn","unselected"],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"positionSelected","unselected"],null],null],["flush-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9),
                i = r(n(310)),
                o = r(n(10));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            n(311);
            const l = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                boundProperties: {
                    history: {
                        path: "/lol-clash/v1/player/history",
                        default: []
                    }
                }
            });
            e.exports = a.Ember.Component.extend(i.default, l, {
                classNames: ["clash-root"],
                layout: n(312),
                appData: null,
                clashNav: a.Ember.inject.service("clash-nav"),
                clashService: a.Ember.inject.service("clash"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                currentRoster: a.Ember.computed.alias("localPlayer.roster"),
                isClashBanned: a.Ember.computed.alias("clashService.localPlayer.isClashBanned"),
                isParticipationForbidden: a.Ember.computed.or("isHonorRestricted", "isClashBanned"),
                previousTab: a.Ember.computed.alias("appData.previousTab"),
                currentTabId: a.Ember.computed.alias("appData.currentTabId"),
                isHubTab: a.Ember.computed.equal("currentTabId", s.ClashTab.HUB),
                isTeamTab: a.Ember.computed.equal("currentTabId", s.ClashTab.TEAM),
                isBracketTab: a.Ember.computed.equal("currentTabId", s.ClashTab.BRACKET),
                isWinnersTab: a.Ember.computed.equal("currentTabId", s.ClashTab.WINNERS),
                isAwardsTab: a.Ember.computed.equal("currentTabId", s.ClashTab.AWARDS),
                isNotVisible: a.Ember.computed.equal("currentTabId", s.ClashTab.INVALID),
                isVisible: a.Ember.computed.not("isNotVisible"),
                isLoading: a.Ember.computed.bool("appData.isLoading"),
                isVisibleAndInitialized: a.Ember.computed("isVisible", "clashService.isInitialized", "isLoading", "currentTabId", (function() {
                    const e = this.get("isVisible"),
                        t = this.get("clashService.isInitialized"),
                        n = this.get("isLoading"),
                        s = e && t && !n;
                    return a.logger.trace(`isVisibleAndInitialized [${s}]: isVisible [${e}], isInitialized [${t}], isLoading [${n}]`), s
                })),
                hasNoHistory: a.Ember.computed.equal("history.length", 0),
                isDynamicBackgroundTab: a.Ember.computed("isHubTab", "isTeamTab", "isBracketTab", (function() {
                    return this.get("isHubTab") || this.get("isTeamTab") || this.get("isBracketTab")
                })),
                isHubTabLanding: a.Ember.computed("isHubTab", "hasNoHistory", "currentRoster", (function() {
                    return this.get("isHubTab") && this.get("hasNoHistory") && !this.get("currentRoster")
                })),
                backgroundImagePath: a.Ember.computed("tournament.nameLocKey", (function() {
                    return `/fe/lol-clash/assets/images/background/background-${this.get("tournament.nameLocKey")||"default"}.jpg`
                })),
                onInit: a.Ember.on("init", (function() {
                    const e = this.get("clashNav"),
                        t = this.get("appData");
                    e.setAppData(t)
                })),
                participationForbiddenObserver: a.Ember.computed("isParticipationForbidden", (function() {
                    const e = this.get("clashNav");
                    if (this.get("isParticipationForbidden")) {
                        const t = this.get("isHonorRestricted"),
                            n = this.get("isClashBanned"),
                            a = this.get("tra");
                        if (n) e.setTooltip(s.ClashTab.TEAM, a.formatString("clash_ineligible_banned_tooltip"));
                        else if (t) {
                            const t = this.get("honorLevelRequired"),
                                n = a.formatString("clash_ineligible_honor_tooltip", {
                                    level: t
                                });
                            e.setTooltip(s.ClashTab.TEAM, n)
                        }
                    } else e.setTooltip(s.ClashTab.TEAM, "")
                })),
                tournamentIdObserver: a.Ember.computed("appData.tournamentId", (function() {
                    const e = this.get("clashService.tournamentId"),
                        t = this.get("appData.tournamentId");
                    a.logger.trace(`clash-root -- tournamentId changed from ${e} to ${t}`), t !== e && this.get("clashService").setSelectedTournamentId(t)
                })),
                isTournamentActive: a.Ember.computed("tournament.state", (function() {
                    const e = this.get("tournament.state");
                    return !!e && e !== o.default.Tournament.RESULTS
                })),
                actions: {
                    selectTournament(e) {
                        this.get("appData").selectTournament(e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            const s = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                boundProperties: {
                    honorLevelRequired: "/lol-platform-config/v1/namespaces/ClashConfig/HonorLevelRequired",
                    isHonorRestricted: "/lol-clash/v1/tournament/{{tournamentId}}/player-honor-restricted"
                }
            });
            e.exports = s
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "crh1HozD",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-root\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-root\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-root\\\\index.js\\" "],["text","\\n"],["append",["unknown",["tournamentIdObserver"]],false],["text","\\n"],["append",["unknown",["participationForbiddenObserver"]],false],["text","\\n\\n"],["block",["if"],[["get",["isDynamicBackgroundTab"]]],null,13,11],["text","\\n"],["block",["if"],[["get",["isVisibleAndInitialized"]]],null,10,0],["text"," "],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text"," "],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","clash-root-loading-spinner"],["flush-element"],["text","\\n    "],["append",["helper",["uikit-spinner"],null,[["width","height"],["30px","30px"]]],false],["text","\\n  "],["close-element"],["text","\\n\\n"]],"locals":[]},{"statements":[["text","    "],["append",["unknown",["clash-tab-awards"]],false],["text","\\n  "]],"locals":[]},{"statements":[["block",["if"],[["get",["isAwardsTab"]]],null,1]],"locals":[]},{"statements":[["text","    "],["append",["unknown",["clash-tab-winners"]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isWinnersTab"]]],null,3,2]],"locals":[]},{"statements":[["text","    "],["append",["helper",["clash-tab-bracket"],null,[["bracket"],[["get",["localPlayer","bracket"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isBracketTab"]]],null,5,4]],"locals":[]},{"statements":[["text","    "],["append",["helper",["clash-tab-team"],null,[["appData"],[["get",["appData"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isTeamTab"]]],null,7,6]],"locals":[]},{"statements":[["text","    "],["append",["helper",["clash-tab-hub"],null,[["appData","history","isTournamentActive"],[["get",["appData"]],["get",["history"]],["get",["isTournamentActive"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","\\n"],["block",["if"],[["get",["isHubTab"]]],null,9,8],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-root-tournament-selector"],["dynamic-attr","tab",["concat",[["unknown",["currentTabId"]]]]],["dynamic-attr","tournament-state",["concat",[["unknown",["tournament","state"]]]]],["flush-element"],["text","\\n    "],["append",["helper",["tournament-selector"],null,[["selectTournament"],[["helper",["action"],[["get",[null]],"selectTournament"],null]]]],false],["text","\\n  "],["close-element"],["text","\\n\\n  "],["append",["helper",["aram-intro-modal"],null,[["tournament"],[["get",["tournament"]]]]],false],["text","\\n\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-root-background"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-root-action-timeline-background-gradient"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-root-background-landing"],["dynamic-attr","style",["concat",["background-image:url(",["unknown",["backgroundImagePath"]],")"]]],["flush-element"],["text","\\n  "],["close-element"],["text","\\n"],["block",["if"],[["get",["isTournamentActive"]]],null,12]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(314), e.exports = a.Ember.Component.extend({
                classNames: ["clash-tab-hub"],
                layout: n(315),
                clashService: a.Ember.inject.service("clash"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                currentRoster: a.Ember.computed.alias("localPlayer.roster"),
                hasHistory: a.Ember.computed.gt("history.length", 0),
                showLandingGlow: a.Ember.computed.and("showLanding", "isTournamentActive"),
                appData: null,
                history: null,
                isTournamentActive: !1,
                isClashRewardsModalEnabled: a.Ember.computed.alias("clashService.isClashRewardsModalEnabled"),
                onInit: a.Ember.on("init", a.Ember.computed("tournament.id", "hasHistory", "currentRoster", (function() {
                    this.get("hasHistory"), this.get("currentRoster");
                    this.set("showLanding", !1)
                }))),
                actions: {
                    showClashLoginModal: function() {
                        a.PrivateAPI._forceShowClashLoginModal()
                    },
                    showClashRewardsModal: function() {
                        a.PrivateAPI._forceShowClashRewardsModal()
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "ws0r6Zc7",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-hub\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-hub\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-hub\\\\index.js\\" "],["text","\\n"],["append",["unknown",["onInit"]],false],["text","\\n"],["open-element","lol-uikit-flat-button-secondary",[]],["static-attr","class","clash-tab-hub-explanation-button"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"showClashLoginModal"],null],null],["flush-element"],["text","\\n  "],["append",["unknown",["tra","clash_hub_how_does_clash_work"]],false],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-tab-hub-content ",["helper",["if"],[["get",["showLandingGlow"]],"showLandingGlow"],null]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["showLanding"]]],null,2,1],["text","\\n"],["block",["if"],[["get",["isTournamentActive"]]],null,0],["text","  \\n  "],["open-element","div",[]],["static-attr","class","clash-root-faq-button"],["flush-element"],["text","\\n    "],["append",["unknown",["clash-faq"]],false],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-tab-hub-action-timeline"],["flush-element"],["text","\\n      "],["append",["helper",["action-timeline"],null,[["appData","tournament","currentRoster","viewTeamOnly"],[["get",["appData"]],["get",["tournament"]],["get",["currentRoster"]],true]]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["append",["helper",["clash-hub"],null,[["appData","history"],[["get",["appData"]],["get",["history"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["append",["unknown",["clash-landing"]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9),
                i = l(n(10)),
                o = l(n(44));
            n(317);
            var r = l(n(301));

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const c = (0, a.emberDataBinding)({
                    Ember: a.Ember,
                    websocket: (0, a.getProvider)().getSocket(),
                    basePaths: {
                        platform: "/lol-platform-config"
                    },
                    boundProperties: {
                        capacityIndicatorEnabled: {
                            api: "platform",
                            path: "/v1/namespaces/ClashConfig/CapacityIndicatorEnabled",
                            default: !1
                        }
                    }
                }),
                d = n(318),
                m = n(319),
                u = n(320),
                p = n(321);
            e.exports = a.Ember.Component.extend(c, {
                classNames: ["clash-tab-team"],
                layout: n(322),
                clashService: a.Ember.inject.service("clash"),
                gdsService: a.Ember.inject.service("gds"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                currentRoster: a.Ember.computed.alias("localPlayer.roster"),
                rosterId: a.Ember.computed.alias("currentRoster.id"),
                hasMatchInfo: a.Ember.computed.bool("localPlayer.nextMatch"),
                hasRoster: a.Ember.computed.bool("clashService.localPlayer.roster"),
                findTeamViewEnabled: a.Ember.computed.alias("clashService.findTeamViewEnabled"),
                appData: null,
                visibleComponents: [],
                isLobby: !1,
                showLobby: a.Ember.computed("isLobby", "currentRoster.isRegistered", (function() {
                    const e = this.get("isLobby"),
                        t = e;
                    return a.logger.trace(`clash-tab-team -- isLobby [${e}] = showLobby: `, t), t
                })),
                showFindTeamView: a.Ember.computed("hasRoster", "findTeamViewEnabled", (function() {
                    return this.get("findTeamViewEnabled") && !this.get("hasRoster")
                })),
                onDidInsertElement: a.Ember.on("didInsertElement", (function() {
                    this._showOverviewPage() || (o.default.clearShowOverviewCallback(), o.default.addOneTimeShowOverviewCallback((() => {
                        this._showOverviewPage()
                    })))
                })),
                onWillDestroyElement: a.Ember.on("willDestroyElement", (function() {
                    this._removeModal("consolationReminder"), this._removeModal("byeReminder"), this._removeModal("tierUpdatePopup"), this._removeModal("phaseFullPopup"), o.default.clearShowOverviewCallback()
                })),
                rosterObserver: a.Ember.computed("currentRoster", "currentRoster.id", "currentRoster.members.[]", "currentRoster.members.@each.summonerId", "currentRoster.members.@each.state", (function() {
                    const e = this.get("currentRoster.id"),
                        t = this.get("currentRoster"),
                        n = r.default.getRoster(e),
                        a = r.default.calculateRosterChangeDeltas(n, t);
                    this.set("deltas", a), r.default.setRoster(t)
                })),
                rosterTierObserver: a.Ember.computed("currentRoster.tier", (function() {
                    const e = this.get("currentRoster.tier"),
                        t = this.get("currentRoster.id"),
                        n = this.get("tournament.hasPhaseTierLimits");
                    if (e <= 0 || !n) return;
                    const s = r.default.getTier(t);
                    if (s > 0 && s !== e) {
                        const t = this.get("tournament"),
                            n = this.get("currentRoster");
                        a.Ember.run.later((() => {
                            this.showTierUpdatePopup(s, e, t, n)
                        }), 1e3)
                    }
                    r.default.setTier(e, t)
                })),
                capacityStatusObserver: a.Ember.computed("tournament.currentPhase", "currentRoster.isRegistered", "tournament.currentPhase.capacityStatus", (function() {
                    const e = this.get("tournament.currentPhase"),
                        t = this.get("tournament.currentPhase.capacityStatus"),
                        n = this.get("currentRoster.isRegistered");
                    if (!e || !t || n) return;
                    const a = this.get("tournament.state"),
                        o = this.get("currentRoster.isRegistered") && !this.get("currentRoster.isEliminated");
                    if (r.default.getCapacity(e.id) !== t && t.toLowerCase() === s.CapacityStatus.FULL && a === i.default.Tournament.LOCK_IN && !o) {
                        const e = this.get("tournament");
                        this.showPhaseFullPopup(e)
                    }
                    r.default.setCapacity(t, e.id)
                })),
                stateObserver: a.Ember.computed("tournament.state", "localPlayer.state", "tournament.currentPhaseId", (function() {
                    const e = this.get("tournament.state"),
                        t = this.get("localPlayer.state");
                    if (!e || !t) return;
                    const n = i.default.getData(e, t);
                    a.logger.trace(`state changed, now: tournament[${e}], player[${t}]`, n), this._setVisibleComponents(n), this._showOverviewPage() || (o.default.clearShowOverviewCallback(), o.default.addOneTimeShowOverviewCallback((() => {
                        this._showOverviewPage()
                    })))
                })),
                remindersObserver: a.Ember.computed("tournament.state", "localPlayer.state", "localPlayer.roster.id", "localPlayer.bracket", "localPlayer.nextMatch", "localPlayer.nextMatch.rosterId1", "localPlayer.nextMatch.rosterId2", (function() {
                    const e = this.get("tournament.state"),
                        t = this.get("localPlayer.state"),
                        n = this.get("localPlayer.roster.id"),
                        o = this.get("localPlayer.bracket"),
                        r = this.get("localPlayer.nextMatch");
                    if (!(e && t && this.get("isLobby") && n && o && r)) return;
                    o.isRosterInLosers(n) && this.showModalConsolationReminder(n), e === i.default.Tournament.SCOUTING && (e => e && e.rosterId1 >= 0 && e.rosterId2 >= 0)(r) && function(e, t) {
                        if (t.failRosterStatus > 0) return !1;
                        let n = !1;
                        return n = String(e) === String(t.rosterId1) ? t.rosterId2 === s.MATCH_ROSTER_BYE_ID : t.rosterId1 === s.MATCH_ROSTER_BYE_ID, n
                    }(n, r) && a.Ember.run.later((() => {
                        this.showModalByeReminder(r.id)
                    }), 2e3)
                })),
                _removeModal(e) {
                    const t = this.get(e);
                    t && (a.ModalManager.remove(t), this.set(e, null))
                },
                _setVisibleComponents(e) {
                    e = e || [];
                    const t = this.get("visibleComponents") || [];
                    for (const e of t) this.set(e, !1);
                    for (const t of e) this.set(t, !0);
                    this.set("visibleComponents", e)
                },
                _showOverviewPage() {
                    if (o.default.willShowOverviewPageOnce()) {
                        const e = this.get("rosterId"),
                            t = this.get("tournament");
                        if (e) {
                            this.get("clashService").getRosterStats(e).then((e => {
                                a.PrivateAPI._tournamentOverview({
                                    source: "clash-tab-team",
                                    rosterStats: e,
                                    isActiveTournament: !0,
                                    tournament: t
                                })
                            }))
                        }
                        return !0
                    }
                    return !1
                },
                showModalConsolationReminder: function(e) {
                    if (o.default.wasReminded(o.default.Type.POPUP_TEAM_DROPPED_TO_CONSOLATION, e)) return;
                    o.default.setReminded(o.default.Type.POPUP_TEAM_DROPPED_TO_CONSOLATION, e);
                    const t = {
                            headerText: this.get("tra.clash_notification_title_TEAM_CONSOLATION_BRACKET_REMINDER"),
                            descriptionImage: "/fe/lol-clash/assets/images/lobby/consolation-bracket-icon.png",
                            descriptionText: this.get("tra.clash_notification_description_TEAM_CONSOLATION_BRACKET_REMINDER")
                        },
                        n = a.Util.createDomNode(d(t)),
                        s = a.ModalManager.add({
                            type: "DialogAlert",
                            data: {
                                contents: n,
                                okText: this.get("tra.lib_ui_dialog_alert_ok"),
                                dismissible: !0
                            }
                        });
                    this.set("consolationReminder", s)
                },
                showModalByeReminder: function(e) {
                    if (o.default.wasReminded(o.default.Type.POPUP_TEAM_BYE, e)) return;
                    o.default.setReminded(o.default.Type.POPUP_TEAM_BYE, e);
                    const t = {
                            headerText: this.get("tra.clash_notification_title_TEAM_BYE_REMINDER"),
                            descriptionImage: "/fe/lol-clash/assets/images/bye-radial.png",
                            descriptionText: this.get("tra.clash_notification_description_TEAM_BYE_REMINDER")
                        },
                        n = a.Util.createDomNode(m(t)),
                        s = a.ModalManager.add({
                            type: "DialogAlert",
                            data: {
                                contents: n,
                                okText: this.get("tra.clash_button_done"),
                                dismissible: !1
                            }
                        });
                    this.set("byeReminder", s)
                },
                showTierUpdatePopup: function(e, t, n, i) {
                    const o = n.get("currentPhase") || n.get("nextPhase"),
                        r = !o || !o.limitTiers || o.limitTiers.includes(Number(t)) && o.limitTiers.includes(Number(e)),
                        l = r ? this.get("tra.clash_modal_tier_update_title") : this.get("tra.clash_modal_tier_lockin_update_title"),
                        c = r ? t < e ? "clash_modal_tier_update_description_increase$html" : "clash_modal_tier_update_description_decrease$html" : "clash_modal_tier_lockin_update_description",
                        d = i.tier ? this.get("tra").formatString("clash_roster_tier_display", {
                            tier: s.ROMAN_NUMERALS[i.tier]
                        }) : null,
                        m = i.get("logoId"),
                        p = i.get("logoColorId"),
                        h = this.get("gdsService").getLogoPath(m, p),
                        g = n.get("locale");
                    let f, _, b;
                    o && (f = n.getDateString(g, o.lockinStartTime, {
                        weekday: "long"
                    }), _ = n.convertTimestampToLocalTime(g, o.lockinStartTime), b = n.convertTimestampToLocalTime(g, o.scoutingStartTime));
                    const x = {
                            rosterTag: i.shortName,
                            rosterTier: d,
                            logoPath: h,
                            startDay: f,
                            startTime: _,
                            endTime: b,
                            differentPhase: !r,
                            title: l
                        },
                        y = a.Util.createDomNode(u(x));
                    this.$(y).find(".description-text").html(this.get("tra").formatString(c, {
                        newTier: s.ROMAN_NUMERALS[t],
                        oldTier: s.ROMAN_NUMERALS[e]
                    }));
                    const k = a.ModalManager.add({
                        type: "DialogAlert",
                        data: {
                            contents: y,
                            okText: this.get("tra.lib_ui_dialog_alert_ok"),
                            dismissible: !1
                        }
                    });
                    this.set("tierUpdatePopup", k)
                },
                showPhaseFullPopup: function(e) {
                    const t = e.get("currentPhase"),
                        n = e.get("nextPhase");
                    if (!n) return;
                    const i = t && t.period !== n.period,
                        o = t && t.limitTiers && t.limitTiers.length && n.limitTiers && n.limitTiers.length,
                        r = e.get("locale"),
                        l = e.getDateString(r, n.lockinStartTime, {
                            weekday: "long"
                        }),
                        c = e.convertTimestampToLocalTime(r, n.lockinStartTime),
                        d = s.ROMAN_NUMERALS[t ? t.getLowestLimitTier() : 0],
                        m = s.ROMAN_NUMERALS[n ? n.getLowestLimitTier() : 0],
                        u = i || !o ? "clash_modal_phase_full_next_day_title" : "clash_modal_phase_full_title",
                        h = i || !o ? "clash_modal_phase_full_next_day_description" : "clash_modal_phase_full_description",
                        g = {
                            title: this.get("tra").formatString(u, {
                                day: l,
                                time: c
                            }),
                            description: this.get("tra").formatString(h, {
                                oldTier: d,
                                newTier: m,
                                day: l,
                                time: c
                            }),
                            timeString: i ? `${l} - ${c}` : c,
                            fullText: this.get("tra.clash_capacity_full")
                        },
                        f = a.Util.createDomNode(p(g)),
                        _ = a.ModalManager.add({
                            type: "DialogAlert",
                            data: {
                                contents: f,
                                okText: this.get("tra.lib_ui_dialog_alert_ok"),
                                dismissible: !1
                            }
                        });
                    this.set("phaseFullPopup", _)
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<div class="clash-team-notification-consolation-container">\r\n  <div class="header-text">' + c(typeof(i = null != (i = n.headerText || (null != t ? t.headerText : t)) ? i : r) === l ? i.call(o, {
                        name: "headerText",
                        hash: {},
                        data: s
                    }) : i) + '</div>\r\n  <img class="description-image" src="' + c(typeof(i = null != (i = n.descriptionImage || (null != t ? t.descriptionImage : t)) ? i : r) === l ? i.call(o, {
                        name: "descriptionImage",
                        hash: {},
                        data: s
                    }) : i) + '"/>\r\n  <div class="description-text">' + c(typeof(i = null != (i = n.descriptionText || (null != t ? t.descriptionText : t)) ? i : r) === l ? i.call(o, {
                        name: "descriptionText",
                        hash: {},
                        data: s
                    }) : i) + "</div>\r\n</div>\r\n"
                },
                useData: !0
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<div class="clash-team-notification-bye-container">\r\n  <div class="header-text">' + c(typeof(i = null != (i = n.headerText || (null != t ? t.headerText : t)) ? i : r) === l ? i.call(o, {
                        name: "headerText",
                        hash: {},
                        data: s
                    }) : i) + '</div>\r\n  <img class="description-image" src="' + c(typeof(i = null != (i = n.descriptionImage || (null != t ? t.descriptionImage : t)) ? i : r) === l ? i.call(o, {
                        name: "descriptionImage",
                        hash: {},
                        data: s
                    }) : i) + '"/>\r\n  <div class="description-text">' + c(typeof(i = null != (i = n.descriptionText || (null != t ? t.descriptionText : t)) ? i : r) === l ? i.call(o, {
                        name: "descriptionText",
                        hash: {},
                        data: s
                    }) : i) + "</div>\r\n</div>\r\n"
                },
                useData: !0
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                1: function(e, t, n, a, s) {
                    var i, o, r = null != t ? t : e.nullContext || {},
                        l = n.helperMissing,
                        c = "function",
                        d = e.escapeExpression;
                    return '    <div class="clash-roster-container">\r\n      <div class="clash-team-logo">\r\n        <img src="' + d(typeof(o = null != (o = n.logoPath || (null != t ? t.logoPath : t)) ? o : l) === c ? o.call(r, {
                        name: "logoPath",
                        hash: {},
                        data: s
                    }) : o) + '" class="clash-team-logo-img">\r\n      </div>\r\n      <div class="clash-team-tier-container">\r\n        <div class="clash-team-tag">' + d(typeof(o = null != (o = n.rosterTag || (null != t ? t.rosterTag : t)) ? o : l) === c ? o.call(r, {
                        name: "rosterTag",
                        hash: {},
                        data: s
                    }) : o) + '</div>\r\n        <div class="clash-tier">' + d(typeof(o = null != (o = n.rosterTier || (null != t ? t.rosterTier : t)) ? o : l) === c ? o.call(r, {
                        name: "rosterTier",
                        hash: {},
                        data: s
                    }) : o) + "</div>\r\n      </div>\r\n    </div>\r\n" + (null != (i = n.if.call(r, null != t ? t.differentPhase : t, {
                        name: "if",
                        hash: {},
                        fn: e.program(2, s, 0),
                        inverse: e.noop,
                        data: s
                    })) ? i : "") + '    <hr class="clash-hr"/>\r\n'
                },
                2: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '      <div class="header-text">' + c(typeof(i = null != (i = n.startDay || (null != t ? t.startDay : t)) ? i : r) === l ? i.call(o, {
                        name: "startDay",
                        hash: {},
                        data: s
                    }) : i) + ": " + c(typeof(i = null != (i = n.startTime || (null != t ? t.startTime : t)) ? i : r) === l ? i.call(o, {
                        name: "startTime",
                        hash: {},
                        data: s
                    }) : i) + " - " + c(typeof(i = null != (i = n.endTime || (null != t ? t.endTime : t)) ? i : r) === l ? i.call(o, {
                        name: "endTime",
                        hash: {},
                        data: s
                    }) : i) + "</div>\r\n"
                },
                4: function(e, t, n, a, s) {
                    var i;
                    return null != (i = n.if.call(null != t ? t : e.nullContext || {}, null != t ? t.differentPhase : t, {
                        name: "if",
                        hash: {},
                        fn: e.program(5, s, 0),
                        inverse: e.noop,
                        data: s
                    })) ? i : ""
                },
                5: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '      <div class="header-text">' + c(typeof(i = null != (i = n.startDay || (null != t ? t.startDay : t)) ? i : r) === l ? i.call(o, {
                        name: "startDay",
                        hash: {},
                        data: s
                    }) : i) + ": " + c(typeof(i = null != (i = n.startTime || (null != t ? t.startTime : t)) ? i : r) === l ? i.call(o, {
                        name: "startTime",
                        hash: {},
                        data: s
                    }) : i) + " - " + c(typeof(i = null != (i = n.endTime || (null != t ? t.endTime : t)) ? i : r) === l ? i.call(o, {
                        name: "endTime",
                        hash: {},
                        data: s
                    }) : i) + '</div>\r\n      <hr class="clash-hr"/>\r\n'
                },
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o, r = null != t ? t : e.nullContext || {};
                    return '<div class="clash-tier-update-container">\r\n' + (null != (i = n.if.call(r, null != t ? t.rosterTag : t, {
                        name: "if",
                        hash: {},
                        fn: e.program(1, s, 0),
                        inverse: e.program(4, s, 0),
                        data: s
                    })) ? i : "") + '  <div class="header-text">' + e.escapeExpression("function" == typeof(o = null != (o = n.title || (null != t ? t.title : t)) ? o : n.helperMissing) ? o.call(r, {
                        name: "title",
                        hash: {},
                        data: s
                    }) : o) + '</div>\r\n  <div class="description-text"></div>\r\n</div>\r\n'
                },
                useData: !0
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<div class="clash-phase-full-container">\r\n  <div class="header-text">' + c(typeof(i = null != (i = n.title || (null != t ? t.title : t)) ? i : r) === l ? i.call(o, {
                        name: "title",
                        hash: {},
                        data: s
                    }) : i) + '</div>\r\n  <div class="image-container">\r\n    <div class="bracket-image-container">\r\n      <div class="background-image full"></div>\r\n      <div class="bracket-image-full">' + c(typeof(i = null != (i = n.fullText || (null != t ? t.fullText : t)) ? i : r) === l ? i.call(o, {
                        name: "fullText",
                        hash: {},
                        data: s
                    }) : i) + '</div>\r\n    </div>\r\n    <div class="bracket-image-container">\r\n      <div class="background-image"></div>\r\n      <div class="bracket-caption">' + c(typeof(i = null != (i = n.timeString || (null != t ? t.timeString : t)) ? i : r) === l ? i.call(o, {
                        name: "timeString",
                        hash: {},
                        data: s
                    }) : i) + '</div>\r\n    </div>\r\n  </div>\r\n  <div class="description-text">' + c(typeof(i = null != (i = n.description || (null != t ? t.description : t)) ? i : r) === l ? i.call(o, {
                        name: "description",
                        hash: {},
                        data: s
                    }) : i) + "</div>\r\n</div>\r\n"
                },
                useData: !0
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "jj7UzqbZ",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-team\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-team\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-team\\\\index.js\\" "],["text","\\n"],["append",["unknown",["stateObserver"]],false],["text","\\n"],["append",["unknown",["remindersObserver"]],false],["text","\\n"],["append",["unknown",["rosterObserver"]],false],["text","\\n"],["append",["unknown",["rosterTierObserver"]],false],["text","\\n"],["append",["unknown",["capacityStatusObserver"]],false],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","clash-tab-team-root"],["flush-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","debug-roster-id",["concat",[["unknown",["currentRoster","id"]]]]],["static-attr","class","clash-tab-team-content"],["flush-element"],["text","\\n\\n"],["block",["if"],[["get",["showFindTeamView"]]],null,5,4],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-tab-team-action-timeline"],["flush-element"],["text","\\n      "],["append",["helper",["action-timeline"],null,[["appData","tournament","currentRoster"],[["get",["appData"]],["get",["tournament"]],["get",["currentRoster"]]]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","clash-capacity-indicator-container"],["flush-element"],["text","\\n          "],["append",["helper",["capacity-indicator"],null,[["tournament","roster"],[["get",["tournament"]],["get",["currentRoster"]]]]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-tab-team-top-row"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-tab-team-tournament-info"],["flush-element"],["text","\\n          "],["append",["helper",["tournament-info"],null,[["tournament","localPlayer","showCapsuleProgress","showBorder","showLft"],[["get",["tournament"]],["get",["localPlayer"]],true,false,false]]],false],["text","\\n        "],["close-element"],["text","\\n\\n        "],["open-element","div",[]],["static-attr","class","clash-tab-team-roster"],["flush-element"],["text","\\n          "],["append",["helper",["roster-layout"],null,[["tournament","roster","rosterMemberDeltas"],[["get",["tournament"]],["get",["currentRoster"]],["get",["deltas"]]]]],false],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["capacityIndicatorEnabled"]]],null,0],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-root-faq-button"],["flush-element"],["text","\\n        "],["append",["unknown",["clash-faq"]],false],["text","\\n      "],["close-element"],["text","\\n\\n    "]],"locals":[]},{"statements":[["block",["if"],[["get",["isRoster"]]],null,1]],"locals":[]},{"statements":[["text","\\n"],["text","\\n      "],["append",["helper",["roster-lobby-view"],null,[["hasMatchInfo"],[["get",["hasMatchInfo"]]]]],false],["text","\\n\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["showLobby"]]],null,3,2]],"locals":[]},{"statements":[["text","\\n      "],["append",["unknown",["find-team-view"]],false],["text","\\n\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9);
            n(324);
            const i = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                basePaths: {
                    clash: "/lol-clash"
                },
                boundProperties: {
                    simpleStateFlags: {
                        api: "clash",
                        path: "/v1/simple-state-flags",
                        default: []
                    }
                }
            });
            e.exports = a.Ember.Component.extend(i, {
                classNames: ["clash-tab-bracket"],
                layout: n(325),
                clashService: a.Ember.inject.service("clash"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                bracket: null,
                backgroundParallax: 0,
                isLosersBracketSelected: !1,
                selectedBracket: "winners",
                bracketSize: a.Ember.computed.alias("bracket.size"),
                is16ManBracket: a.Ember.computed("bracketSize", (function() {
                    return 16 === this.get("bracketSize")
                })),
                simpleStateFlagsObserver: a.Ember.computed("simpleStateFlags.[]", (function() {
                    const e = this.get("tournament.id"),
                        t = this.get("simpleStateFlags");
                    if (!e || !t) return;
                    const n = `updatedbracket_${e}`;
                    for (const e of t) e.status !== s.SimpleStateStatus.ACKNOWLEDGED && e.id === n && this.get("api.clash").post(`/v1/simple-state-flags/${n}/acknowledge`)
                })),
                bracketObserver: a.Ember.computed("localPlayer.roster.id", "bracket", (function() {
                    const e = this.get("bracket");
                    if (e) {
                        const t = this.get("localPlayer.roster.id"),
                            n = e.isRosterInLosersBracketContainer(t);
                        this.set("isLosersBracketSelected", n), a.logger.trace("clash-tab-bracket -- isLosersBracketSelected", n)
                    }
                })),
                selectedRound: a.Ember.computed("isLosersBracketSelected", "bracket.currentRound", "bracket.currentLoserRound", (function() {
                    const e = this.get("bracket"),
                        t = this.get("isLosersBracketSelected"),
                        n = this.get("localPlayer.roster.id"),
                        a = e.calculateBracketProgressForRoster(n);
                    let s = null;
                    if (a && a.latestUpcomingMatch && a.latestUpcomingMatch.get("isLosersBracket") === t) s = a.latestUpcomingMatch.get("round");
                    else {
                        const e = this.get("bracket.currentRound"),
                            n = this.get("bracket.currentLoserRound");
                        s = t ? n : e
                    }
                    return s
                })),
                backgroundImagePath: a.Ember.computed("tournament.nameLocKey", (function() {
                    return `/fe/lol-clash/assets/images/background/background-${this.get("tournament.nameLocKey")||"default"}.jpg`
                })),
                actions: {
                    selectBracket(e) {
                        const t = "winners" !== e;
                        this.set("isLosersBracketSelected", t), a.logger.trace("clash-tab-bracket -- isLosersBracketSelected", t)
                    },
                    selectBracket16(e) {
                        const t = "winners" !== e;
                        this.set("isLosersBracketSelected", t), this.set("selectedBracket", e), a.logger.trace("clash-tab-bracket -- isLosersBracketSelected", t)
                    },
                    selectRound(e) {
                        this.get("selectedRound") !== e && this.set("selectedRound", e)
                    },
                    setScrollValue(e) {
                        this.set("backgroundParallax", e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "a9imjGhS",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-bracket\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-bracket\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-bracket\\\\index.js\\" "],["text","\\n"],["append",["unknown",["simpleStateFlagsObserver"]],false],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","clash-tab-bracket-background"],["flush-element"],["text","\\n  "],["append",["helper",["parallax-background"],null,[["imgPath","parallax","parallaxScale"],[["get",["backgroundImagePath"]],["get",["backgroundParallax"]],0.1]]],false],["text","\\n"],["close-element"],["text","\\n\\n"],["append",["unknown",["bracketObserver"]],false],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","clash-tab-bracket-root"],["flush-element"],["text","\\n"],["block",["if"],[["get",["bracket"]]],null,5,0],["text"," "],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-tab-bracket-loading-spinner"],["flush-element"],["text","\\n      "],["append",["helper",["uikit-spinner"],null,[["width","height"],["60px","60px"]]],false],["text","\\n    "],["close-element"],["text","\\n\\n  "]],"locals":[]},{"statements":[["text","          "],["append",["helper",["bracket-nav"],null,[["bracket","isLosersBracket","selectedRound","selectRound"],[["get",["bracket"]],["get",["isLosersBracketSelected"]],["get",["selectedRound"]],["helper",["action"],[["get",[null]],"selectRound"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["append",["helper",["bracket-nav-16"],null,[["bracket","isLosersBracket","selectedBracket","selectedRound","selectRound"],[["get",["bracket"]],["get",["isLosersBracketSelected"]],["get",["selectedBracket"]],["get",["selectedRound"]],["helper",["action"],[["get",[null]],"selectRound"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["append",["helper",["bracket-layout"],null,[["bracket","isLosersBracket","targetRound","localPlayerRosterId","tournamentNameLocKey","selectBracket","selectRound","onScrollChanged","isInteractive","isEog"],[["get",["bracket"]],["get",["isLosersBracketSelected"]],["get",["selectedRound"]],["get",["localPlayer","roster","id"]],["get",["tournament","nameLocKey"]],["helper",["action"],[["get",[null]],"selectBracket"],null],["helper",["action"],[["get",[null]],"selectRound"],null],["helper",["action"],[["get",[null]],"setScrollValue"],null],true,false]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["append",["helper",["bracket-layout-16"],null,[["bracket","isLosersBracket","selectedBracket","targetRound","localPlayerRosterId","tournamentNameLocKey","selectBracket","selectRound","onScrollChanged","isInteractive","isEog"],[["get",["bracket"]],["get",["isLosersBracketSelected"]],["get",["selectedBracket"]],["get",["selectedRound"]],["get",["localPlayer","roster","id"]],["get",["tournament","nameLocKey"]],["helper",["action"],[["get",[null]],"selectBracket16"],null],["helper",["action"],[["get",[null]],"selectRound"],null],["helper",["action"],[["get",[null]],"setScrollValue"],null],true,false]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-tab-bracket-layout"],["flush-element"],["text","\\n"],["block",["if"],[["get",["is16ManBracket"]]],null,4,3],["text","    "],["close-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","clash-tab-bracket-content"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-tab-bracket-header"],["flush-element"],["text","\\n        "],["append",["helper",["bracket-header"],null,[["bracket","isLosersBracket","localPlayerRosterId"],[["get",["bracket"]],["get",["isLosersBracketSelected"]],["get",["localPlayer","roster","id"]]]]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-tab-bracket-nav"],["flush-element"],["text","\\n"],["block",["if"],[["get",["is16ManBracket"]]],null,2,1],["text","      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9);
            n(327);
            var i, o = (i = n(89)) && i.__esModule ? i : {
                default: i
            };
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-tab-winners"],
                layout: n(328),
                clashService: a.Ember.inject.service("clash"),
                chatService: a.Ember.inject.service("chat"),
                friends: a.Ember.computed.alias("chatService.friends"),
                loadingRoot: !0,
                loadingWinners: !0,
                failed: !1,
                tournamentHistory: null,
                winnerHistory: null,
                selectedTier: 0,
                selectedRosterName: "",
                tierOptions: null,
                summoner: null,
                localPlayerSummonerId: a.Ember.computed.alias("summoner.summonerId"),
                init() {
                    this._super(...arguments);
                    this.get("clashService").getTournamentHistoryAndWinners().then(this.handleTournamentHistoryAndWinnersSuccess.bind(this), this.handleTournamentHistoryAndWinnersFail.bind(this)), (0, a.dataBinding)("/lol-summoner").get("/v1/current-summoner").then((e => {
                        this.set("summoner", e)
                    }))
                },
                willDestroyElement() {
                    this._super(...arguments), this.set("loadingRoot", !0), this.set("loadingWinners", !0), this.set("failed", !1), this.set("tournamentHistory", null), this.set("winnerHistory", null), this.set("selectedTier", 0), this.set("tierOptions", null)
                },
                tournamentDropdownOptions: a.Ember.computed("tournamentHistory.[]", "winnerHistory", (function() {
                    const e = this.get("tournamentHistory"),
                        t = this.get("winnerHistory"),
                        n = t ? t.tournamentId : s.INVALID_TOURNAMENT_ID;
                    return a._.map(e, (e => {
                        const t = this.getTournamentNameParts(e.nameLocKey, e.nameLocKeySecondary);
                        return {
                            id: e.id,
                            fullName: t,
                            selected: e.id === n
                        }
                    }))
                })),
                sortedAndFilteredWinners: a.Ember.computed("winnerHistory", "selectedTier", "localPlayerSummonerId", "friends.[]", "selectedRosterName", (function() {
                    const e = this.get("winnerHistory"),
                        t = this.get("selectedTier"),
                        n = this.get("selectedRosterName").toLowerCase().trim(),
                        s = this.get("friends"),
                        i = this.get("localPlayerSummonerId");
                    if (e && i) {
                        const o = s ? s.map((e => e.summonerId)) : a.Ember.A();
                        return e.winners.forEach((e => {
                            e.playerIds ? (e.isMine = e.playerIds.includes(i), e.isFriend = o.some((t => e.playerIds.includes(t)))) : (e.isMine = !1, e.isFriend = !1)
                        })), a._.filter(e.winners, (e => (!n || e.name && e.name.toLowerCase().indexOf(n) > -1 || e.shortName && e.shortName.toLowerCase().indexOf(n) > -1) && (!t || e.tier === t))).sort(((e, t) => e.isMine !== t.isMine ? e.isMine ? -1 : 1 : e.isFried !== t.isFriend ? e.isFriend ? -1 : 1 : e.averageWinDuration !== t.averageWinDuration ? e.averageWinDuration - t.averageWinDuration : e.createTime !== t.createTime ? e.createTime - t.createTime : e.rosterId - t.rosterId))
                    }
                    return null
                })),
                sortedAndFilteredWinnersObserver: a.Ember.computed("sortedAndFilteredWinners", (function() {
                    const e = this.get("sortedAndFilteredWinners"),
                        t = this.get("selectedTier");
                    if (e && e.length > 0 && !t) {
                        const t = e[0].tier;
                        this.set("selectedTier", t)
                    }
                    const n = new Set,
                        a = this.get("winnerHistory");
                    a && a.winners && a.winners.forEach((e => {
                        n.add(e.tier)
                    }));
                    const s = this._makeTierOptions(this.get("selectedTier"), Array.from(n));
                    this.set("tierOptions", s)
                })),
                handleTournamentHistoryAndWinnersSuccess(e) {
                    a.Ember.run((() => {
                        this.set("loadingRoot", !1), this.set("loadingWinners", !1), this.set("failed", !1), this.set("tournamentHistory", e.tournamentHistory), this.set("winnerHistory", e.tournamentWinners), this.set("selectedTier", 0), this.set("tierOptions", null)
                    }))
                },
                handleTournamentHistoryAndWinnersFail() {
                    a.Ember.run((() => {
                        this.set("loadingRoot", !1), this.set("loadingWinners", !1), this.set("failed", !0), this.set("tournamentHistory", null), this.set("winnerHistory", null), this.set("selectedTier", 0), this.set("tierOptions", null)
                    }))
                },
                handleTournamentWinnerHistorySuccess(e) {
                    a.Ember.run((() => {
                        this.set("loadingWinners", !1), this.set("failed", !1), this.set("winnerHistory", e), this.set("selectedTier", 0), this.set("tierOptions", null)
                    }))
                },
                handleTournamentWinnerHistoryFail() {
                    a.Ember.run((() => {
                        this.set("loadingWinners", !1), this.set("failed", !0), this.set("winnerHistory", null), this.set("selectedTier", 0), this.set("tierOptions", null)
                    }))
                },
                getTournamentNameParts(e, t) {
                    const n = this.get("tra");
                    if (!n) return "";
                    const a = o.default.getTournamentLocalizedName(n, e),
                        s = o.default.getTournamentLocalizedSecondary(n, t);
                    return this.get("tra").formatString("clash_tournament_name_separator_week", {
                        name: a,
                        week: s
                    })
                },
                _makeTierOption: (e, t, n) => ({
                    name: s.ROMAN_NUMERALS[e],
                    value: e,
                    enabled: t,
                    selected: n
                }),
                _makeTierOptions(e, t) {
                    const n = [];
                    for (let a = 1; a <= 4; ++a) n.push(this._makeTierOption(a, t.includes(a), e === a));
                    return n
                },
                actions: {
                    selectTournament(e) {
                        const t = this.get("winnerHistory");
                        if (null === t || t.tournamentId !== e) {
                            const t = this.get("clashService");
                            this.set("loadingWinners", !0), t.getTournamentWinnerHistory(e).then(this.handleTournamentWinnerHistorySuccess.bind(this), this.handleTournamentWinnerHistoryFail.bind(this))
                        }
                    },
                    handleTierSelected(e) {
                        e && e.value && this.get("selectedTier") !== e.value && this.set("selectedTier", e.value)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "URFue7mc",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-winners\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-winners\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-winners\\\\index.js\\" "],["text","\\n"],["append",["unknown",["sortedAndFilteredWinnersObserver"]],false],["text","\\n\\n"],["block",["if"],[["get",["loadingRoot"]]],null,9,8]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","clash-tab-winners-no-results"],["flush-element"],["text","\\n          "],["open-element","img",[]],["static-attr","class","clash-tab-winners-no-results-img"],["static-attr","src","/fe/lol-clash/assets/images/winners/no-results.png"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-tab-winners-no-results-text"],["flush-element"],["text","\\n            "],["append",["unknown",["tra","clash_hall_of_champions_no_results"]],false],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["append",["helper",["winners-roster"],null,[["winnerData"],[["get",["winner"]]]]],false],["text","\\n"]],"locals":["winner"]},{"statements":[["text","        "],["open-element","lol-uikit-scrollable",[]],["static-attr","class","winners-roster-scroll-container"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","winners-rosters"],["flush-element"],["text","\\n"],["block",["each"],[["get",["sortedAndFilteredWinners"]]],[["key"],["rosterId"]],1],["text","            "],["open-element","div",[]],["static-attr","class","winners-roster-scroll-padding"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-tab-winners-tournament-title"],["flush-element"],["text","\\n        "],["append",["unknown",["tra","clash_hall_of_champions_main_title"]],false],["text","\\n      "],["close-element"],["text","\\n\\n      "],["open-element","div",[]],["static-attr","class","clash-tab-winners-tier-selector"],["flush-element"],["text","\\n        "],["append",["helper",["underlined-selector"],null,[["title","options","onSelectOption"],[["get",["tra","clash_hall_of_champions_tier_selector_title"]],["get",["tierOptions"]],["helper",["action"],[["get",[null]],"handleTierSelected"],null]]]],false],["text","\\n      "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["sortedAndFilteredWinners"]]],null,2,0]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-tab-winners-tournament-title"],["flush-element"],["text","\\n        "],["append",["unknown",["tra","clash_hall_of_champions_loading"]],false],["text","\\n      "],["close-element"],["text","\\n\\n      "],["open-element","div",[]],["static-attr","class","clash-tab-winners-loading-spinner"],["flush-element"],["text","\\n        "],["append",["helper",["uikit-spinner"],null,[["width","height"],["60px","60px"]]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["info","selected"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"selectTournament",["get",["info","id"]]],null],null],["flush-element"],["text","\\n              "],["append",["unknown",["info","fullName"]],false],["text","\\n            "],["close-element"],["text","\\n"]],"locals":["info"]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-tab-winners-content"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-tab-winners-tournament-selector"],["flush-element"],["text","\\n      "],["open-element","lol-uikit-flat-dropdown",[]],["static-attr","slot","lol-uikit-dropdown-optgroup"],["static-attr","class","tournament-selector-dropdown"],["flush-element"],["text","\\n        "],["open-element","lol-uikit-dropdown-optgroup",[]],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","lol-uikit-dropdown-optgroup-header"],["static-attr","slot","lol-uikit-dropdown-optgroup-header"],["flush-element"],["text",">\\n            "],["append",["unknown",["tra","clash_hall_of_champions_past_tournaments"]],false],["text","\\n          "],["close-element"],["text","\\n"],["block",["each"],[["get",["tournamentDropdownOptions"]]],null,5],["text","        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["loadingWinners"]]],null,4,3],["text","  "],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","clash-tab-winners-search-box-container"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-input",[]],["flush-element"],["text","\\n      "],["append",["helper",["input"],null,[["type","maxlength","disabled","value","placeholder","autocomplete","autocorrect","autocapitalize","spellcheck"],["search","30",false,["get",["selectedRosterName"]],["get",["tra","clash_hall_of_champions_roster_search_placeholder"]],"off","off","off",false]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-tab-winners-content"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-tab-winners-no-results"],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","clash-tab-winners-no-results-img"],["static-attr","src","/fe/lol-clash/assets/images/winners/no-results.png"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-tab-winners-no-results-text"],["flush-element"],["text","\\n        "],["append",["unknown",["tra","clash_hall_of_champions_loading_error"]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["failure"]]],null,7,6]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-tab-winners-loading-spinner"],["flush-element"],["text","\\n    "],["append",["helper",["uikit-spinner"],null,[["width","height"],["60px","60px"]]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(9);
            n(330);
            var s;
            (s = n(89)) && s.__esModule;
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-tab-awards"],
                layout: n(331),
                clashService: a.Ember.inject.service("clash"),
                loadingRoot: !0,
                localPlayerSummonerId: a.Ember.computed.alias("summoner.summonerId"),
                init() {
                    this._super(...arguments);
                    this.get("clashService");
                    (0, a.dataBinding)("/lol-summoner").get("/v1/summoner").then((e => {
                        this.set("summoner", e), this.set("loadingRoot", !1)
                    }))
                },
                willDestroyElement() {
                    this._super(...arguments), this.set("loadingRoot", !0)
                },
                actions: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "ywO0b+rY",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-awards\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-awards\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-awards\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["loadingRoot"]]],null,1,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-tab-awards-content"],["flush-element"],["text","\\n    "],["append",["unknown",["clash-awards-root"]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-tab-winners-loading-spinner"],["flush-element"],["text","\\n    "],["append",["helper",["uikit-spinner"],null,[["width","height"],["60px","60px"]]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);

            function s(e) {
                const t = e[0],
                    n = e[1];
                return !(!t || !t.length) && t.indexOf(n) === t.length - 1
            }
            e.exports = {
                isLast: s,
                helper: a.Ember.Helper.helper(s)
            }
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(10)) && a.__esModule ? a : {
                    default: a
                },
                o = n(9);
            n(334);
            e.exports = s.Ember.Component.extend({
                classNames: ["clash-landing"],
                layout: n(335),
                clashNav: s.Ember.inject.service("clash-nav"),
                clashService: s.Ember.inject.service("clash"),
                isCreatingRoster: !1,
                localPlayer: s.Ember.computed.alias("clashService.localPlayer"),
                tournament: s.Ember.computed.alias("clashService.tournament"),
                canCreateRoster: s.Ember.computed.not("localPlayer.roster"),
                isCreateRosterBtnDisabled: s.Ember.computed("canCreateRoster", "isCreatingRoster", "tournament.state", (function() {
                    return !this.get("canCreateRoster") || this.get("isCreatingRoster") || this.get("tournament.state") === i.default.Tournament.RESULTS
                })),
                tournamentTitle: s.Ember.computed("tournament.nameLocKey", (function() {
                    const e = this.get("tra"),
                        t = this.get("tournament"),
                        n = t ? t.getLocalizedName(e) : "";
                    return e.formatString("clash_landing_text_title", {
                        tournamentName: n
                    })
                })),
                tournamentMonthDays: s.Ember.computed("tournament.startMonth", "tournament.rosterCreateDeadlineMonth", "tournament.startDay", "tournament.rosterCreateDeadlineDay", (function() {
                    const e = this.get("tournament.startMonth"),
                        t = this.get("tournament.rosterCreateDeadlineMonth"),
                        n = this.get("tournament.startDay"),
                        a = this.get("tournament.rosterCreateDeadlineDay");
                    if (!(e && t && n && a)) return "";
                    const s = e === t && n === a ? "clash_landing_text_date_months_same_day" : "clash_landing_text_date_months";
                    return this.get("tra").formatString(s, {
                        startMonth: e,
                        endMonth: t,
                        startDay: n,
                        endDay: a
                    })
                })),
                showGraph: s.Ember.computed("tournament", "tournament.id", "tournament.tierConfigs.[]", (function() {
                    const e = this.get("tournament.tierConfigs");
                    return e && e.length
                })),
                showTable: s.Ember.computed("tournament", "tournament.id", "tournament.hasPhaseTierLimits", "showGraph", (function() {
                    return this.get("tournament.hasPhaseTierLimits") && !this.get("showGraph")
                })),
                showTableObserver: s.Ember.computed("showTable", "tournament.phases.[]", (function() {
                    if (this.get("showTable")) {
                        const e = this.get("tournament"),
                            t = this.get("tournament.phases");
                        s.Ember.run.next((() => {
                            this._createTable(e, t)
                        }))
                    }
                })),
                _createTable(e, t) {
                    if (!t || !t.length) return;
                    const n = s.Util.getSortedPhases(t),
                        a = this.$("#clash-table");
                    if (!n || !n.length || !a) return;
                    const i = this.get("tra.clash_tiers_4"),
                        o = this.get("tra.clash_tiers_3_1");
                    a.empty(), a.append(`<tr><th></th><th>${i}</th><th>${o}</th></tr>`);
                    const r = e.get("locale");
                    let l, c, d = 1;
                    for (let t = 0; t < n.length; t++) {
                        const s = n[t];
                        if (s.period !== l) {
                            const t = this.get("tra").formatString("clash_tournament_day", {
                                    day: d
                                }),
                                n = e.getMonthDayDate(r, s.lockinStartTime);
                            c = this.$("<tr></tr>").appendTo(a), c.append(`<td>${t} (${n})</td>`), l = s.period, d++
                        }
                        const i = e.convertTimestampToLocalTime(r, s.lockinStartTime);
                        c.append(`<td>${i}</td>`)
                    }
                },
                _createRoster() {
                    const e = this.get("clashService"),
                        t = this.get("tournament.id");
                    this.set("isCreatingRoster", !0), e.createRoster(t).then((() => {
                        this.set("isCreatingRoster", !1);
                        const e = this.get("clashNav");
                        e.enableTab(o.ClashTab.TEAM), e.selectTab(o.ClashTab.TEAM)
                    }), (() => {
                        this.set("isCreatingRoster", !1)
                    }))
                },
                actions: {
                    createRoster() {
                        this.get("localPlayer.roster") || this._createRoster()
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "DsLcdK/5",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\landing\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\landing\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\landing\\\\index.js\\" "],["text","\\n"],["append",["unknown",["showTableObserver"]],false],["text","\\n"],["block",["if"],[["get",["tournament"]]],null,3,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","center-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","landing-title"],["flush-element"],["append",["unknown",["tra","clash_landing_text_title_no_tournaments"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","landing-date"],["flush-element"],["append",["unknown",["tra","clash_landing_text_date_no_tournaments"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","landing-copy"],["flush-element"],["append",["unknown",["tra","clash_landing_text_copy"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-landing-table-title"],["flush-element"],["append",["unknown",["tra","clash_schedule_table_title"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-landing-table"],["flush-element"],["text","\\n        "],["open-element","table",[]],["static-attr","id","clash-table"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-landing-table-warning"],["flush-element"],["open-element","span",[]],["static-attr","class","red"],["flush-element"],["text","*"],["close-element"],["text"," "],["append",["unknown",["tra","clash_roster_tier_change_explanation"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","landing-graph-container"],["flush-element"],["text","\\n        "],["append",["helper",["schedule-graph"],null,[["tournament"],[["get",["tournament"]]]]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","center-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","landing-title"],["flush-element"],["append",["unknown",["tournamentTitle"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","landing-date"],["flush-element"],["append",["unknown",["tournamentMonthDays"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","landing-copy"],["flush-element"],["append",["unknown",["tra","clash_landing_text_copy"]],false],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["showGraph"]]],null,2],["block",["if"],[["get",["showTable"]]],null,1],["text","  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = o(n(11)),
                i = o(n(10));

            function o(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            n(337);
            const r = a.UIKit.getContextualNotificationManager();
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-tournament-info"],
                layout: n(338),
                tournament: null,
                localPlayer: null,
                titleOverride: null,
                descriptionOverride: null,
                showCapsuleProgress: !1,
                showBorder: !0,
                showLft: !0,
                roster: a.Ember.computed.alias("localPlayer.roster"),
                playerTier: a.Ember.computed.alias("localPlayer.playerData.tier"),
                isRosterActive: a.Ember.computed.alias("localPlayer.roster.isActiveInCurrentPhase"),
                isRosterEliminated: a.Ember.computed.alias("localPlayer.roster.isEliminated"),
                lastThemeOfSeason: a.Ember.computed.alias("tournament.lastThemeOfSeason"),
                tournamentLftEnabled: a.Ember.computed.alias("tournament.lft"),
                tutorialService: a.Ember.inject.service("tutorial"),
                willDestroyElement() {
                    this._super(...arguments), this._binding.removeObserver("/v1/namespaces/ClashConfig/LftEnabled", this), this._closeContextualNotification(this.get("_rewardTutorialStepTooltip"))
                },
                init() {
                    this._super(...arguments), this._binding = (0, a.dataBinding)("/lol-platform-config", (0, a.getProvider)().getSocket()), this._binding.addObserver("/v1/namespaces/ClashConfig/LftEnabled", this, (e => {
                        const t = !1 !== e;
                        this.set("isLftEnabled", t)
                    }))
                },
                isLftVisible: a.Ember.computed("isLftEnabled", "showLft", "tournamentLftEnabled", (function() {
                    return this.get("isLftEnabled") && this.get("showLft") && this.get("tournamentLftEnabled")
                })),
                showDayPlanner: a.Ember.computed("tournament.numRemainingPeriods", "isRosterActive", "tournament.phases.[]", "tournament.phases.@each.id", (function() {
                    const e = this.get("phases"),
                        t = this.get("tournamentId");
                    if (!e || !e.length || !a.Util.isNumberOk(t)) return !1;
                    const n = s.default.organizePhasesByDay(e),
                        i = this.get("tournament.numRemainingPeriods"),
                        o = this.get("isRosterActive");
                    return n.sortedPeriods && n.sortedPeriods > 1 && (i || o)
                })),
                hasNoTournament: a.Ember.computed.not("tournament"),
                isTournamentThemeComplete: a.Ember.computed("tournament.lastThemeOfSeason", "tournament.numRemainingPeriods", "isRosterActive", (function() {
                    const e = this.get("tournament"),
                        t = this.get("lastThemeOfSeason"),
                        n = this.get("tournament.numRemainingPeriods"),
                        a = this.get("isRosterActive");
                    return (!e || t) && !n && !a
                })),
                showPlayerTier: a.Ember.computed("playerTier", "isTournamentThemeComplete", (function() {
                    const e = this.get("playerTier"),
                        t = this.get("isTournamentThemeComplete");
                    return e && !t
                })),
                tournamentName: a.Ember.computed("tournament.nameLocKey", (function() {
                    const e = this.get("tournament"),
                        t = this.get("tra");
                    return e ? e.getLocalizedName(t) : ""
                })),
                tournamentDay: a.Ember.computed("tournament.id", "tournament.currentPhase.period", "tournament.nameLocKeySecondary", (function() {
                    const e = this.get("tournament"),
                        t = this.get("tra");
                    return e ? e.getLocalizedSecondaryName(t) : ""
                })),
                title: a.Ember.computed.or("titleOverride", "tournamentName"),
                subtitle: a.Ember.computed("tournamentDay", "descriptionOverride", "isTournamentThemeComplete", (function() {
                    const e = this.get("descriptionOverride");
                    if (e) return e;
                    if (this.get("isTournamentThemeComplete")) {
                        return this.get("tournament") ? this.get("tra").formatString("clash_tournament_info_subtitle_complete") : ""
                    }
                    return this.get("tournamentDay")
                })),
                tutorialFlowName: a.Ember.computed("roster", (function() {
                    if (!this.get("roster")) return;
                    return this.get("roster.captain.isLocalPlayer") ? "captainTutorialFlow" : "memberTutorialFlow"
                })),
                tutorialObserver: a.Ember.computed("tutorialService.memberTutorialFlow.name", "tutorialService.captainTutorialFlow.name", "tutorialFlowName", (function() {
                    const e = this.get("tutorialFlowName"),
                        t = this.get(`tutorialService.${e}`);
                    t && ("memberRewardStep" !== t.name && "captainRewardStep" !== t.name || a.Util.waitForElement(this.element, ".clash-tournament-info-rewards-view").then((() => {
                        const e = this.$(".clash-tournament-info-rewards-view");
                        e && this._createTutorialTooltip(e, t, "_rewardTutorialStepTooltip")
                    })))
                })),
                tournamentStateObserver: a.Ember.computed("tournament.state", (function() {
                    const e = this.get("tournament.state");
                    e !== i.default.Tournament.SCOUTING && e !== i.default.Tournament.IN_GAME || this._closeContextualNotification(this.get("_rewardTutorialStepTooltip"))
                })),
                _createTutorialTooltip(e, t, n) {
                    if (this.get(n)) return;
                    const a = this.get("tutorialService").createContextualNotificationBlockElement(this.get("tra"), t),
                        s = r.add(a, {
                            target: {
                                domNode: e,
                                anchor: {
                                    x: "center",
                                    y: "center"
                                }
                            },
                            offset: {
                                x: 250,
                                y: -20
                            },
                            anchor: {
                                x: "center",
                                y: "center"
                            },
                            orientation: "right",
                            dismissOnTargetHide: !0
                        });
                    return s.onRemove.then((() => {
                        this.get("tutorialService").completeTutorialStep(this.get("tutorialFlowName"), t.name), this.set(n, null)
                    })), this.set(n, s), s
                },
                _closeContextualNotification(e) {
                    e && r.remove(e)
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "vDwoDbT6",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-info\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-info\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-info\\\\index.js\\" "],["text","\\n"],["append",["unknown",["tutorialObserver"]],false],["text","\\n"],["append",["unknown",["tournamentStateObserver"]],false],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-tournament-info-title"],["flush-element"],["append",["unknown",["title"]],false],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-tournament-info-subtitle"],["flush-element"],["append",["unknown",["subtitle"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["showDayPlanner"]]],null,5],["open-element","div",[]],["static-attr","class","clash-tournament-info-rewards-view"],["flush-element"],["text","\\n"],["block",["if"],[["get",["showCapsuleProgress"]]],null,4,3],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-tournament-info-my-tickets"],["flush-element"],["append",["unknown",["my-tickets-container"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["showPlayerTier"]]],null,2],["text","\\n"],["block",["if"],[["get",["isLftVisible"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["append",["unknown",["lft-toggle"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","horizontal-line"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["showBorder"]]],null,1],["text","  "],["open-element","div",[]],["static-attr","class","your-tier"],["flush-element"],["text","\\n    "],["append",["unknown",["tra","clash_tournament_info_your_tier"]],false],["text","\\n    "],["append",["helper",["tier-placement"],null,[["rosterTier","customTooltipTitle","customTooltipBody"],[["get",["playerTier"]],["get",["tra","clash_personal_tier_tooltip_title"]],["get",["tra","clash_personal_tier_tooltip_body"]]]]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["append",["helper",["vp-progress"],null,[["themeComplete"],[["get",["isTournamentThemeComplete"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["append",["helper",["capsule-progress"],null,[["tournament","localPlayer"],[["get",["tournament"]],["get",["localPlayer"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["append",["helper",["day-planner"],null,[["tournament","isRosterEliminated"],[["get",["tournament"]],["get",["isRosterEliminated"]]]]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(74),
                i = n(54);
            n(340);
            const {
                RunMixin: o
            } = a.EmberAddons.EmberLifeline, r = "PRIMARY", l = "SECONDARY", c = "/v2/account/LCUPreferences/lol-clash", d = "lftPlayerToggleTooltipSeen", m = "clash-lft-tooltip-icon";
            e.exports = a.Ember.Component.extend(o, {
                classNames: ["clash-lft-toggle"],
                layout: n(341),
                clashService: a.Ember.inject.service("clash"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                lftEnabled: a.Ember.computed.alias("localPlayer.lft"),
                primaryPosition: a.Ember.computed.alias("localPlayer.primaryPosition"),
                secondaryPosition: a.Ember.computed.alias("localPlayer.secondaryPosition"),
                isPrimaryUnselected: a.Ember.computed.equal("primaryPosition", s.POSITIONS.UNSELECTED),
                isPrimaryFill: a.Ember.computed.equal("primaryPosition", s.POSITIONS.FILL),
                isSecondaryDisabled: a.Ember.computed.or("isPrimaryFill", "isPrimaryUnselected"),
                isSecondaryEnabled: a.Ember.computed.not("isSecondaryDisabled"),
                didInsertElement() {
                    this._super(...arguments), this.initTooltip()
                },
                willDestroyElement() {
                    this._super(...arguments), this.unassignTooltip()
                },
                lftToggleState: a.Ember.computed("lftEnabled", (function() {
                    return this.get("lftEnabled") ? "open" : ""
                })),
                setPositionRole(e, t) {
                    this._updatePositionRole(e, t), this._updatePlayerLft(this.get("lftEnabled"))
                },
                _updatePlayerLft(e) {
                    let t = this.get("primaryPosition");
                    const n = this.get("secondaryPosition");
                    e && t === s.POSITIONS.UNSELECTED && n === s.POSITIONS.UNSELECTED && (t = s.POSITIONS.FILL, this.set("primaryPosition", t)), this.get("clashService").updatePlayerLft(e, t, n)
                },
                _updatePositionRole(e, t) {
                    const n = this.get("primaryPosition"),
                        a = this.get("secondaryPosition");
                    let i = t === r ? e : n,
                        o = t === l ? e : a;
                    i === n && o === a || (i === s.POSITIONS.FILL ? o = s.POSITIONS.UNSELECTED : n !== e && a !== e || (i = a, o = a === s.POSITIONS.FILL ? s.POSITIONS.UNSELECTED : n), this.set("primaryPosition", i), this.set("secondaryPosition", o))
                },
                _formatToClassName: e => "." + e,
                initTooltip: function() {
                    return (0, i.getAccountSetting)(c, d, !0).then((e => {
                        const t = Boolean(e && e.value);
                        if (this.assignTooltip(t), !t) return this.autoShowTooltip(), (0, i.saveAccountSetting)(c, d, !0, e.schemaVersion)
                    }))
                },
                assignTooltip: function(e) {
                    const t = this.element.querySelector(this._formatToClassName(m));
                    if (!t) return;
                    this.set("tooltipContainerElement", t);
                    const n = document.createElement("lol-uikit-tooltip"),
                        s = a.TemplateHelper.contentBlockTooltipAttention(this.get("tra.clash_lft_tooltip_free_agent"));
                    if (!e) {
                        const e = document.createElement("div");
                        e.innerHTML = this.get("tra.clash_lft_tooltip_new_title"), e.className = "clash-lft-tooltip-title", this.set("tooltipTitleElement", e), s.prepend(e)
                    }
                    n.appendChild(s), a.TooltipManager.assign(t, n, null, {
                        type: "attention",
                        targetAnchor: {
                            x: "right",
                            y: "center"
                        },
                        tooltipAnchor: {
                            x: "left",
                            y: "center"
                        },
                        offset: {
                            x: 14,
                            y: 0
                        }
                    }), a.TooltipManager.hide(t)
                },
                unassignTooltip: function() {
                    const e = this.get("tooltipContainerElement");
                    e && a.TooltipManager.unassign(e)
                },
                autoShowTooltip: function() {
                    const e = this.element.querySelector(this._formatToClassName(m));
                    e && (a.TooltipManager.show(e), this.runTask((() => {
                        a.TooltipManager.hide(e), this.runTask((() => {
                            const e = this.get("tooltipTitleElement");
                            e && e.classList.add("hidden")
                        }), 500)
                    }), 5e3))
                },
                actions: {
                    toggle() {
                        this.get("isLftToggleDisabled") || this._updatePlayerLft(!this.get("localPlayer.lft"))
                    },
                    setPositionRolePrimary(e) {
                        this.setPositionRole(e, r)
                    },
                    setPositionRoleSecondary(e) {
                        this.setPositionRole(e, l)
                    },
                    onTooltipHover() {
                        const e = this.get("tooltipContainerElement");
                        e && a.TooltipManager.show(e)
                    },
                    onTooltipHoverLeave() {
                        const e = this.get("tooltipContainerElement");
                        e && a.TooltipManager.hide(e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "sB/Thz7b",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\lft-toggle\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\lft-toggle\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\lft-toggle\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-free-agent-row"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-lft-title"],["flush-element"],["text","\\n    "],["append",["unknown",["tra","clash_lft_free_agent_title"]],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-lft-toggle-wrapper ",["helper",["if"],[["get",["localPlayer","lft"]],"open",""],null]," ",["helper",["if"],[["get",["localPlayer","lft"]],"right","left"],null]," ",["helper",["if"],[["get",["isLftToggleDisabled"]],"disabled"],null]]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","toggle-container animated"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggle"],null],null],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","open"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","toggle-button animated"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["bottom","system"]],0],["text","  "],["close-element"],["text","\\n  "],["open-element","lol-uikit-info-icon",[]],["static-attr","class","clash-lft-tooltip-icon"],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"onTooltipHover"],null],null],["dynamic-attr","onmouseleave",["helper",["action"],[["get",[null]],"onTooltipHoverLeave"],null],null],["flush-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-lft-position-wrapper ",["helper",["if"],[["get",["isPrimaryFill"]],"single-selector"],null]]]],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","position-element secondary"],["flush-element"],["text","\\n    "],["append",["helper",["position-selector"],null,[["positionRole","isLocal","isEnabled","animationsEnabled","setPositionRole"],[["get",["localPlayer","secondaryPosition"]],true,true,true,["helper",["action"],[["get",[null]],"setPositionRoleSecondary"],null]]]],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","position-element primary"],["flush-element"],["text","\\n    "],["append",["helper",["position-selector"],null,[["positionRole","isLocal","isEnabled","animationsEnabled","setPositionRole"],[["get",["localPlayer","primaryPosition"]],true,true,true,["helper",["action"],[["get",[null]],"setPositionRolePrimary"],null]]]],false],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-small"],["flush-element"],["text","\\n        "],["open-element","p",[]],["flush-element"],["text","\\n          "],["append",["unknown",["tra","clash_lft_toggle_tooltip"]],false],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(343), e.exports = a.Ember.Component.extend({
                classNames: ["clash-trophy"],
                layout: n(344),
                tier: null,
                theme: null,
                bracketSize: null,
                trophiesGameData: null,
                trophies: a.Ember.computed.alias("trophiesGameData.Trophies"),
                pedestals: a.Ember.computed.alias("trophiesGameData.TrophyPedestals"),
                onInit: a.Ember.on("init", (function() {
                    (0, a.dataBinding)("/lol-game-data").get("/assets/v1/summoner-trophies.json").then((e => {
                        a.Ember.run((() => this.set("trophiesGameData", e)))
                    }))
                })),
                gdsCupgemTrophyImgSrc: a.Ember.computed("trophies.[]", "bracketSize", "theme", (function() {
                    const e = this.get("bracketSize"),
                        t = this.get("theme");
                    if (!e || !t) return null;
                    const n = this.get("trophies");
                    if (!n) return null;
                    const s = a._.find(n, (function(n) {
                        return n.theme.toLowerCase() === t.toLowerCase() && parseInt(n.bracket, 10) === parseInt(e, 10)
                    }));
                    return a._.get(s, "profileIcon")
                })),
                gdsPedestalTrophyImgSrc: a.Ember.computed("pedestals.[]", "tier", (function() {
                    const e = this.get("pedestals"),
                        t = this.get("tier");
                    if (!t || !e) return null;
                    const n = a._.find(e, (function(e) {
                        return parseInt(e.tier, 10) === parseInt(t, 10)
                    }));
                    return a._.get(n, "profileIcon")
                })),
                gdsAssetsAvailable: a.Ember.computed("gdsCupgemTrophyImgSrc", "gdsPedestalTrophyImgSrc", (function() {
                    const e = this.get("gdsCupgemTrophyImgSrc"),
                        t = this.get("gdsPedestalTrophyImgSrc");
                    return e && t
                })),
                placeholderCupGemAsset: a.Ember.computed("bracketSize", (function() {
                    const e = this.get("bracketSize");
                    return e ? `/fe/lol-clash/assets/placeholder/trophies/${e}.png` : ""
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "WjJ2nrjZ",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-trophy\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-trophy\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-trophy\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-trophy-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["gdsAssetsAvailable"]]],null,1,0],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","img",[]],["static-attr","class","clash-trophy-placeholder-cupgem"],["dynamic-attr","src",["concat",[["unknown",["placeholderCupGemAsset"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","img",[]],["static-attr","class","clash-trophy-pedestal"],["dynamic-attr","src",["concat",[["unknown",["gdsPedestalTrophyImgSrc"]]]]],["flush-element"],["close-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-trophy-cupgem"],["dynamic-attr","src",["concat",[["unknown",["gdsCupgemTrophyImgSrc"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(346);
            var s, i = (s = n(217)) && s.__esModule ? s : {
                default: s
            };
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-roster-lobby-view"],
                layout: n(347),
                hasMatchInfo: !1,
                clashService: a.Ember.inject.service("clash"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                roster: a.Ember.computed.alias("clashService.localPlayer.roster"),
                onDidInsertElement: a.Ember.on("didInsertElement", a.Ember.observer("tournament", "tournament.id", "tournament.currentPhase", (function() {
                    const e = this.$("#lobby-banner-video-state-machine");
                    if (!e || !e.get(0)) return;
                    const t = e.get(0);
                    i.default.addEntryToAnimationQueue({
                        name: i.default.Anim.LobbyIntro,
                        play: () => this._playIntroAnimation(t)
                    })
                }))),
                onWillDestroyElement: a.Ember.on("willDestroyElement", (function() {
                    i.default.completeAnimation(i.default.Anim.LobbyIntro), this.set("isAnimated", !1)
                })),
                _playIntroAnimation(e) {
                    const t = this.get("tournament.id"),
                        n = this.get("tournament.currentPhaseId");
                    if (e.addEventListener("videoStateDone", (() => {
                            i.default.completeAnimation(i.default.Anim.LobbyIntro), this.set("isAnimated", !1)
                        })), !a.Util.isNumberOk(t) || !a.Util.isNumberOk(n)) return e.dispatchEvent(new Event("lobby-animation")), a.AudioManager.playAudio("member-banner-intro"), void this.set("isAnimated", !0);
                    i.default.hasPlayedIntroForPhase(t, n) ? (e.dispatchEvent(new Event("lobby-animation-no-intro")), i.default.completeAnimation(i.default.Anim.LobbyIntro)) : (e.dispatchEvent(new Event("lobby-animation")), a.AudioManager.playAudio("member-banner-intro"), this.set("isAnimated", !0), i.default.setPlayedIntroForPhase(t, n))
                },
                rosterMembers: a.Ember.computed("roster.members.[]", (function() {
                    const e = this.get("tournament.rosterSize"),
                        t = this.get("roster.members") || [],
                        n = a._.fill(Array(5), null);
                    let s = 0,
                        i = 0;
                    const o = Math.floor(2.5);
                    for (let a = Math.floor((5 - e) / 2); a < Math.min(e, t.length);) t[a].get("isLocalPlayer") ? (s = a, ++a) : i !== o ? (n[i] = t[a], ++a, ++i) : ++i;
                    return n[o] = t[s], n
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "0cg/Jsqs",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-lobby-view\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-lobby-view\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-lobby-view\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","lobby-animation-container"],["flush-element"],["text","\\n  "],["open-element","lol-uikit-video-state-machine",[]],["static-attr","id","lobby-banner-video-state-machine"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-video-group",[]],["flush-element"],["text","\\n      "],["open-element","lol-uikit-video-state",[]],["static-attr","state","null"],["static-attr","no-preserve-state",""],["flush-element"],["close-element"],["text","\\n      "],["open-element","lol-uikit-video-state",[]],["static-attr","state","lobby-animation"],["static-attr","no-preserve-state",""],["flush-element"],["text","\\n        "],["open-element","lol-uikit-video",[]],["static-attr","type","intro"],["static-attr","name","lobby-intro"],["static-attr","src","/fe/lol-clash/assets/animations/videos/lobby/lobby_banners_intro.webm"],["flush-element"],["close-element"],["text","\\n        "],["open-element","lol-uikit-video",[]],["static-attr","type","idle"],["static-attr","name","lobby-loop"],["static-attr","preload",""],["static-attr","src","/fe/lol-clash/assets/animations/videos/lobby/lobby_banners_loop.webm"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","lol-uikit-video-state",[]],["static-attr","state","lobby-animation-no-intro"],["static-attr","no-preserve-state",""],["flush-element"],["text","\\n        "],["open-element","lol-uikit-video",[]],["static-attr","type","idle"],["static-attr","name","lobby-loop"],["static-attr","preload",""],["static-attr","fade-in","0"],["static-attr","src","/fe/lol-clash/assets/animations/videos/lobby/lobby_banners_loop.webm"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["block",["each"],[["get",["rosterMembers"]]],null,1],["text","\\n"],["block",["if"],[["get",["hasMatchInfo"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-tab-team-match-info"],["flush-element"],["text","\\n    "],["append",["unknown",["match-info"]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["append",["helper",["roster-lobby-member"],null,[["roster","rosterMember","index","isAnimated"],[["get",["roster"]],["get",["rosterMember"]],["get",["index"]],["get",["isAnimated"]]]]],false],["text","\\n"]],"locals":["rosterMember","index"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(349);
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-roster-lobby-member"],
                classNameBindings: ["isCenter:local:remote"],
                layout: n(350),
                clashService: a.Ember.inject.service("clash"),
                telemetryService: a.Ember.inject.service("telemetry"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                isAramQueue: a.Ember.computed.alias("tournament.isAramQueue"),
                roster: null,
                rosterMember: null,
                puuid: a.Ember.computed.alias("rosterMember.puuid"),
                gameName: a.Ember.computed("rosterMember.gameName", (function() {
                    return this.get("rosterMember.gameName") || null
                })),
                tagLine: a.Ember.computed("rosterMember.tagLine", (function() {
                    return this.get("rosterMember.tagLine") || null
                })),
                summonerName: a.Ember.computed("rosterMember.displayName", (function() {
                    return this.get("rosterMember.displayName") || null
                })),
                isAnimated: !1,
                onDidInsertElement: a.Ember.on("didInsertElement", (function() {
                    this.get("isAnimated") ? this._animateElements() : this._showElements()
                })),
                isCenter: a.Ember.computed("index", (function() {
                    const e = this.get("index");
                    return Math.floor(2.5) === e
                })),
                _animateElements() {
                    const e = this.$(".roster-captain-icon-container"),
                        t = this.$(".summoner-icon-halo"),
                        n = this.$(".summoner-name"),
                        s = this.$(".role-selector-button-container"),
                        i = this.$(".ticket-selector-button-container"),
                        o = new a.gsap.TimelineMax({
                            paused: !0
                        });
                    o.add("start", "+=0"), o.fromTo(e, .2, {
                        opacity: 0
                    }, {
                        opacity: 1
                    }, "start+=0.5"), o.fromTo(t, .2, {
                        opacity: 0
                    }, {
                        opacity: 1
                    }, "start+=0.5"), o.fromTo(n, .2, {
                        opacity: 0
                    }, {
                        opacity: 1
                    }, "start+=0.65"), o.fromTo(s, .2, {
                        opacity: 0
                    }, {
                        opacity: 1
                    }, "start+=0.8"), o.fromTo(i, .2, {
                        opacity: 0
                    }, {
                        opacity: 1
                    }, "start+=0.95"), o.play()
                },
                _showElements() {
                    const e = this.$(".roster-captain-icon-container"),
                        t = this.$(".summoner-icon-halo"),
                        n = this.$(".summoner-name"),
                        a = this.$(".role-selector-button-container"),
                        s = this.$(".ticket-selector-button-container");
                    e.attr("style", "opacity: 1"), t.attr("style", "opacity: 1"), n.attr("style", "opacity: 1"), a.attr("style", "opacity: 1"), s.attr("style", "opacity: 1")
                },
                actions: {
                    setPositionRole(e) {
                        const t = this.get("clashService"),
                            n = this.get("roster.id");
                        return this.get("telemetryService").sendEvent("SetPosition", {
                            rosterId: n,
                            position: e,
                            source: "Lobby"
                        }), t.setPositionRole(n, e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "26Ybjvef",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-lobby-view\\\\roster-lobby-member\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-lobby-view\\\\roster-lobby-member\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-lobby-view\\\\roster-lobby-member\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["rosterMember"]]],null,7,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","img",[]],["static-attr","class","summoner-icon-halo summoner-icon"],["static-attr","src","/fe/lol-clash/assets/images/roster/player-empty-icon.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","role-selector-button-container"],["flush-element"],["text","\\n      "],["append",["helper",["position-selector"],null,[["positionRole","isLocal","isEnabled","animationsEnabled","setPositionRole"],[["get",["rosterMember","position"]],["get",["rosterMember","isLocalPlayer"]],true,true,["helper",["action"],[["get",[null]],"setPositionRole"],null]]]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","roster-captain-icon"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","roster-captain-icon-container"],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","roster-captain-icon-border"],["static-attr","src","/fe/lol-clash/assets/images/lobby/lobby-captain-border.png"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","img",[]],["static-attr","class","summoner-icon"],["static-attr","src","/fe/lol-clash/assets/images/roster/player-empty-icon.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["rosterMember","summonerIconPath"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-framed-icon"],null,[["class","borderwidth"],["summoner-icon",2]],5]],"locals":[]},{"statements":[["text","  "],["open-element","lol-parties-comm-halo",[]],["dynamic-attr","puuid",["unknown",["rosterMember","puuid"]],null],["static-attr","size","large"],["static-attr","class","summoner-icon-halo"],["flush-element"],["text","\\n"],["block",["if"],[["get",["rosterMember","summonerIconPath"]]],null,6,4],["text","  "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["rosterMember","isRosterCaptain"]]],null,3],["text","\\n"],["text","  "],["open-element","div",[]],["static-attr","class","summoner-name-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["rosterMember","isRosterCaptain"]]],null,2],["text","    "],["open-element","div",[]],["static-attr","class","summoner-name"],["flush-element"],["text","\\n      "],["append",["helper",["player-name"],null,[["format","puuid","summonerName","gameName","tagLine"],["short",["get",["puuid"]],["get",["summonerName"]],["get",["gameName"]],["get",["tagLine"]]]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["block",["unless"],[["get",["isAramQueue"]]],null,1],["text","\\n"],["text","  "],["open-element","div",[]],["static-attr","class","ticket-selector-button-container"],["flush-element"],["text","\\n    "],["append",["helper",["ticket-display"],null,[["tournament","rosterId","roster","rosterMember","displayedBuyin","displayedTicketType","isBuyinEnabled","showTicketOffers","forceGold"],[["get",["tournament"]],["get",["roster","id"]],["get",["roster"]],["get",["rosterMember"]],["get",["rosterMember","currentBuyin"]],["get",["rosterMember","buyinType"]],false,false,true]]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9);
            n(352), e.exports = a.Ember.Component.extend({
                classNames: ["clash-match-info"],
                layout: n(353),
                clashService: a.Ember.inject.service("clash"),
                gdsService: a.Ember.inject.service("gds"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                bracket: a.Ember.computed.alias("localPlayer.bracket"),
                match: a.Ember.computed.alias("localPlayer.nextMatch"),
                matchRosterObserver: a.Ember.computed("localPlayer.roster.id", "match.rosterId1", "match.rosterId2", (function() {
                    const e = this.get("localPlayer.roster.id");
                    let t = null;
                    String(e) === String(this.get("match.rosterId1")) ? (t = this.get("match.roster2"), this.set("localRoster", this.get("match.roster1")), this.set("opponentRosterId", this.get("match.rosterId2")), this.set("opponentRoster", t), this.set("localPicksFirst", Boolean(t)), this.set("opponentPicksFirst", !1), this.set("isOpponentReplaced", 2 === this.get("match.failRosterStatus"))) : (t = this.get("match.roster1"), this.set("localRoster", this.get("match.roster2")), this.set("opponentRosterId", this.get("match.rosterId1")), this.set("opponentRoster", t), this.set("localPicksFirst", !1), this.set("opponentPicksFirst", Boolean(t)), this.set("isOpponentReplaced", 1 === this.get("match.failRosterStatus")))
                })),
                isOpponentBye: a.Ember.computed("opponentRosterId", "match.failRosterStatus", (function() {
                    return this.get("opponentRosterId") === s.MATCH_ROSTER_BYE_ID && this.get("match.failRosterStatus") <= 0
                })),
                headerTxt: a.Ember.computed("match.round", "bracket.totalRounds", (function() {
                    const e = this.get("match.round");
                    return this.get("tra").formatString("clash_roster_match_info_header", {
                        currentRound: e
                    })
                })),
                rosterLogoPath: a.Ember.computed("localRoster", "localRoster.logo", "localRoster.logoColor", "gdsService.ready", (function() {
                    const e = this.get("localRoster");
                    if (!e) return "";
                    if (!this.get("gdsService.ready")) return "";
                    const t = e.get("logo"),
                        n = e.get("logoColor");
                    return this.get("gdsService").getLogoPath(t, n)
                })),
                opponentRosterLogoPath: a.Ember.computed("opponentRoster", "opponentRoster.logo", "opponentRoster.logoColor", "gdsService.ready", (function() {
                    const e = this.get("opponentRoster");
                    if (!e) return "";
                    if (!this.get("gdsService.ready")) return "";
                    const t = e.get("logo"),
                        n = e.get("logoColor");
                    return this.get("gdsService").getLogoPath(t, n)
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "99sU7yjN",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\match-info\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\match-info\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\match-info\\\\index.js\\" "],["text","\\n"],["append",["unknown",["matchRosterObserver"]],false],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","header"],["flush-element"],["text","\\n  "],["append",["helper",["sanitize"],[["get",["headerTxt"]]],null],false],["text","\\n"],["close-element"],["text","\\n\\n\\n"],["block",["if"],[["get",["isOpponentBye"]]],null,18,17]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","pick-side-label-second"],["flush-element"],["append",["unknown",["tra","clash_roster_match_info_pick_second"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","pick-side-label-first"],["flush-element"],["append",["unknown",["tra","clash_roster_match_info_pick_first"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","pick-side-label-second"],["flush-element"],["append",["unknown",["tra","clash_roster_match_info_pick_second"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","pick-side-label-first"],["flush-element"],["append",["unknown",["tra","clash_roster_match_info_pick_first"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","pick-side-labels-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["localPicksFirst"]]],null,3,2],["block",["if"],[["get",["opponentPicksFirst"]]],null,1,0],["text","    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n                "],["open-element","h6",[]],["flush-element"],["append",["unknown",["tra","clash_bracket_match_tbd_tooltip_header"]],false],["close-element"],["text","\\n                "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_match_info_tbd_tooltip_description"]],false],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],5]],"locals":[]},{"statements":[["text","              "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n                "],["open-element","h6",[]],["flush-element"],["append",["unknown",["tra","clash_bracket_match_replaced_tooltip_header"]],false],["close-element"],["text","\\n                "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_bracket_match_replaced_tooltip_description"]],false],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],7]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","icon roster-tbd"],["flush-element"],["text","\\n          "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/celebration/bonus-vp-ticks.svg"],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["isOpponentReplaced"]]],null,8,6],["text","        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","tag roster-tbd"],["flush-element"],["text","\\n          "],["append",["unknown",["tra","clash_match_info_waiting"]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","img",[]],["static-attr","class","pick-side-image"],["static-attr","src","/fe/lol-clash/assets/images/brackets/pick-second.svg"],["flush-element"],["close-element"],["text","\\n          "]],"locals":[]},{"statements":[["block",["if"],[["get",["localPicksFirst"]]],null,10]],"locals":[]},{"statements":[["text","            "],["open-element","img",[]],["static-attr","class","pick-side-image"],["static-attr","src","/fe/lol-clash/assets/images/brackets/pick-first.svg"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","hitbox"],["modifier",["action"],[["get",[null]],"onMouseClick",["get",["opponentRoster"]]],[["on"],["click"]]],["flush-element"],["close-element"],["text","\\n"],["text","        "],["open-element","div",[]],["static-attr","class","icon"],["flush-element"],["text","\\n          "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["opponentRosterLogoPath"]]]]],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","tag-row"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","tag"],["flush-element"],["text","\\n            "],["append",["unknown",["opponentRoster","shortName"]],false],["text","\\n          "],["close-element"],["text","\\n"],["block",["if"],[["get",["opponentPicksFirst"]]],null,12,11],["text","        "],["close-element"],["text","\\n\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","img",[]],["static-attr","class","pick-side-image"],["static-attr","src","/fe/lol-clash/assets/images/brackets/pick-second.svg"],["flush-element"],["close-element"],["text","\\n        "]],"locals":[]},{"statements":[["block",["if"],[["get",["opponentPicksFirst"]]],null,14]],"locals":[]},{"statements":[["text","          "],["open-element","img",[]],["static-attr","class","pick-side-image"],["static-attr","src","/fe/lol-clash/assets/images/brackets/pick-first.svg"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","main-content"],["flush-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","roster-info local"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","icon"],["flush-element"],["text","\\n        "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["rosterLogoPath"]]]]],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","tag-row"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","tag"],["flush-element"],["text","\\n          "],["append",["unknown",["localRoster","shortName"]],false],["text","\\n        "],["close-element"],["text","\\n"],["block",["if"],[["get",["localPicksFirst"]]],null,16,15],["text","      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","vs"],["flush-element"],["text","\\n"],["text","      "],["open-element","div",[]],["static-attr","class","vs-text"],["flush-element"],["text","vs"],["close-element"],["text","\\n      "],["open-element","svg",[]],["static-attr","class","vs-line"],["static-attr","viewBox","0 0 4 50"],["static-attr","preserveAspectRatio","none"],["flush-element"],["text","\\n        "],["open-element","path",[]],["static-attr","vector-effect","non-scaling-stroke"],["static-attr","d","M2,0 L2,50"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","svg",[]],["static-attr","class","vs-box"],["static-attr","viewBox","0 0 100 100"],["flush-element"],["text","\\n"],["text","        "],["open-element","rect",[]],["static-attr","vector-effect","non-scaling-stroke"],["static-attr","width","70.71"],["static-attr","height","70.71"],["static-attr","transform","translate(50) rotate(45)"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","svg",[]],["static-attr","class","vs-line bot-line"],["static-attr","viewBox","0 0 4 50"],["static-attr","preserveAspectRatio","none"],["flush-element"],["text","\\n        "],["open-element","path",[]],["static-attr","vector-effect","non-scaling-stroke"],["static-attr","d","M2,0 L2,50"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","roster-info"],["flush-element"],["text","\\n"],["block",["if"],[["get",["opponentRoster"]]],null,13,9],["text","    "],["close-element"],["text","\\n\\n  "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["opponentRoster"]]],null,4],["text","\\n"]],"locals":[]},{"statements":[["text","\\n  "],["open-element","div",[]],["static-attr","class","main-content"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","roster-bye"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","roster-bye-tag"],["flush-element"],["text","\\n        "],["append",["unknown",["tra","clash_bracket_match_bye"]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(355);
            const s = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                boundProperties: {
                    faqLinkOverride: {
                        path: "/lol-platform-config/v1/namespaces/ClashConfig/FaqLinkOverride",
                        default: null
                    }
                }
            });
            e.exports = a.Ember.Component.extend(s, {
                telemetryService: a.Ember.inject.service("telemetry"),
                classNames: ["clash-faq"],
                layout: n(356),
                clashFaqLink: a.Ember.computed("faqLinkOverride", (function() {
                    return this.get("faqLinkOverride") || this.get("tra.clash_faq_external_link")
                })),
                actions: {
                    onClick() {
                        a.AudioManager.playAudio("button-circlegold-click"), this.get("telemetryService").sendEvent("FAQClicked")
                    },
                    onHover() {
                        a.AudioManager.playAudio("button-circlegold-hover")
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "L0qwf8xG",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-faq\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-faq\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-faq\\\\index.js\\" "],["text","\\n"],["open-element","a",[]],["static-attr","class","clash-faq-link"],["dynamic-attr","href",["concat",[["unknown",["clashFaqLink"]]]]],["static-attr","target","_blank"],["modifier",["action"],[["get",[null]],"onClick"],[["on","preventDefault"],["click",false]]],["modifier",["action"],[["get",[null]],"onHover"],[["on"],["mouseEnter"]]],["flush-element"],["text","\\n  "],["append",["unknown",["tra","clash_tournament_faq_name"]],false],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(10)) && a.__esModule ? a : {
                    default: a
                };
            n(358), e.exports = s.Ember.Component.extend({
                classNames: ["clash-hub"],
                layout: n(359),
                clashService: s.Ember.inject.service("clash"),
                tournament: s.Ember.computed.alias("clashService.tournament"),
                localPlayer: s.Ember.computed.alias("clashService.localPlayer"),
                roster: s.Ember.computed.alias("localPlayer.roster"),
                appData: null,
                history: null,
                showRegisterText: s.Ember.computed("tournament", "tournament.state", (function() {
                    return this.get("tournament.state") !== i.default.Tournament.RESULTS
                })),
                resultsStateText: s.Ember.computed("roster", "showRegisterText", "tournament.state", (function() {
                    if (!this.get("showRegisterText")) {
                        const e = this.get("roster"),
                            t = this.get("roster.isCurrentBracketComplete");
                        return e && t ? this.get("tra.clash_state_countdown_RESULTS") : this.get("tra.clash_state_countdown_CONCLUDING")
                    }
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "LD45MVKi",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-hub-section clash-hub-left"],["flush-element"],["text","\\n"],["block",["if"],[["get",["tournament"]]],null,1,0],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-hub-section clash-hub-middle"],["flush-element"],["text","\\n  "],["append",["helper",["hub-content"],null,[["appData","history"],[["get",["appData"]],["get",["history"]]]]],false],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["append",["unknown",["season-vp-display"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["append",["helper",["tournament-info"],null,[["tournament","localPlayer","showCapsuleProgress","showBorder"],[["get",["tournament"]],["get",["localPlayer"]],false,true]]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(361), e.exports = a.Ember.Component.extend({
                classNames: ["clash-parallax-background"],
                layout: n(362),
                imgPath: "",
                parallaxScale: 1,
                parallax: 0,
                didInsertElement() {
                    this._super(...arguments), this._getParallaxTarget().on("load", this._updateParallax.bind(this))
                },
                parallaxObserver: a.Ember.on("didInsertElement", a.Ember.computed("parallax", (function() {
                    this._updateParallax()
                }))),
                _updateParallax() {
                    const e = this._getParallaxTarget();
                    if (!e) return void a.logger.error("_updateParallax missing target");
                    const t = e.parent(),
                        n = e.outerWidth() - t.outerWidth();
                    if (!t) return void a.logger.error("_updateParallax missing container (target.parent)");
                    if (n <= 0) return;
                    const s = this.get("parallaxScale"),
                        i = this.get("parallax") * s * n;
                    t.scrollLeft(i)
                },
                _getParallaxTarget() {
                    return this.$("#parallax-target")
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "UZzhfF2i",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\parallax-background\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\parallax-background\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\parallax-background\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["imgPath"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["append",["unknown",["parallaxObserver"]],false],["text","\\n  "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["imgPath"]]]]],["static-attr","id","parallax-target"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(10)) && a.__esModule ? a : {
                    default: a
                };
            n(364);
            e.exports = s.Ember.Component.extend({
                classNames: ["clash-bracket-header"],
                layout: n(365),
                clashService: s.Ember.inject.service("clash"),
                tournament: s.Ember.computed.alias("clashService.tournament"),
                bracket: null,
                isLosersBracket: !1,
                localPlayerRosterId: null,
                bracketName: s.Ember.computed("bracket.size", "isLosersBracket", (function() {
                    const e = this.get("isLosersBracket"),
                        t = this.get("bracket.size");
                    return e ? this.get("tra").formatString("clash_bracket_header_bracket_type_consolation", {
                        bracketSize: t
                    }) : this.get("tra").formatString("clash_bracket_header_bracket_type_regular", {
                        bracketSize: t
                    })
                })),
                roundName: s.Ember.computed("isLosersBracket", "bracket", "bracket.currentRound", "bracket.currentLoserRound", "bracket.size", "bracket.losersBracketSize", "localPlayerRosterId", "tournament.state", (function() {
                    if (!this.get("bracket")) return "";
                    if (this.get("tournament.state") === i.default.Tournament.RESULTS) return this.get("tra.clash_bracket_header_complete");
                    const e = this.get("isLosersBracket"),
                        t = this.get("bracket.currentRound"),
                        n = this.get("bracket.currentLoserRound"),
                        a = e ? n : t,
                        s = e ? this.get("bracket.losersBracketSize") : this.get("bracket.size");
                    return a === Math.log2(s) && !e && this.get("bracket").isRosterInWinners(this.get("localPlayerRosterId")) ? this.get("tra.clash_bracket_header_finals") : this.get("tra").formatString("clash_bracket_header_non_finals", {
                        roundNumber: a
                    })
                })),
                bracketInfo: s.Ember.computed("bracketName", "roundName", (function() {
                    const e = this.get("bracketName"),
                        t = this.get("roundName");
                    return this.get("tra").formatString("clash_bracket_header_bracket_info", {
                        bracketName: e,
                        roundName: t
                    })
                })),
                tournamentName: s.Ember.computed("tournament.nameLocKey", (function() {
                    const e = this.get("tra"),
                        t = this.get("tournament");
                    return t ? t.getLocalizedName(e) : e.get("clash_tournament_name_default")
                })),
                tournamentDay: s.Ember.computed("tournament.nameLocKeySecondary", (function() {
                    const e = this.get("tra"),
                        t = this.get("tournament");
                    return t ? t.getLocalizedSecondaryName(e) : ""
                })),
                tournamentInfo: s.Ember.computed("tournamentName", "tournamentDay", (function() {
                    const e = this.get("tournamentName"),
                        t = this.get("tournamentDay");
                    return this.get("tra").formatString("clash_bracket_header_tournament_info", {
                        tournamentName: e,
                        tournamentDay: t
                    })
                })),
                headerResizeObserver: s.Ember.computed("bracketInfo", "tournamentInfo", (function() {
                    s.Ember.run.scheduleOnce("afterRender", this, "_headerResize")
                })),
                _headerResize() {
                    const e = this.get("element").querySelector(".bracket-text"),
                        t = this.get("element").querySelector(".tournament-text");
                    this._resizeDivFont(30, e), this._resizeDivFont(18, t)
                },
                _resizeDivFont(e, t) {
                    t.style.fontSize = `${e}px`;
                    const n = t.offsetWidth;
                    if (n <= 500) return;
                    const a = 500 / n * e;
                    t.style.fontSize = `${a}px`
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "aF0rJchh",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-bracket\\\\bracket-header\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-bracket\\\\bracket-header\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-bracket\\\\bracket-header\\\\index.js\\" "],["text","\\n"],["append",["unknown",["headerResizeObserver"]],false],["text","\\n\\n"],["open-element","img",[]],["static-attr","class","header-logo"],["static-attr","src","/fe/lol-clash/assets/placeholder/general/logo.png"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","header-info"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","bracket-text"],["flush-element"],["text","\\n    "],["append",["unknown",["bracketInfo"]],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","tournament-text"],["flush-element"],["text","\\n    "],["append",["unknown",["tournamentInfo"]],false],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(367), e.exports = a.Ember.Component.extend({
                classNames: ["clash-bracket-nav"],
                layout: n(368),
                clashService: a.Ember.inject.service("clash"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                bracket: null,
                selectedRound: null,
                isLosersBracket: !1,
                roundData: null,
                selectedRoundObserver: a.Ember.computed("selectedRound", (function() {
                    const e = this.get("roundData"),
                        t = this.get("selectedRound");
                    for (const n of Object.keys(e)) {
                        const a = parseInt(n);
                        if (a === t) {
                            e[a].set("triggerSelect", !0);
                            break
                        }
                    }
                })),
                bracketSizeObserver: a.Ember.computed("bracket.size", "bracket.losersBracketSize", "isLosersBracket", (function() {
                    const e = this.get("isLosersBracket"),
                        t = e ? this.get("bracket.losersBracketSize") : this.get("bracket.size"),
                        n = this.get("selectedRound"),
                        s = Math.log2(t),
                        i = this.get("tra"),
                        o = {};
                    for (let t = 1; t <= s; ++t) {
                        let r = t;
                        e && (r += 1);
                        const l = r !== s || e ? i.formatString("clash_bracket_nav_item_non_finals", {
                            roundNumber: r
                        }) : i.get("clash_bracket_nav_item_finals");
                        o[r] = a.Ember.Object.create({
                            name: l,
                            triggerSelect: r === n
                        })
                    }
                    this.set("roundData", o)
                })),
                actions: {
                    selectRound(e) {
                        this.attrs.selectedRound && ("string" == typeof e && (e = parseInt(e)), this.attrs.selectRound(e))
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "FGvZqSA1",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-bracket\\\\bracket-nav\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-bracket\\\\bracket-nav\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-bracket\\\\bracket-nav\\\\index.js\\" "],["text","\\n"],["append",["unknown",["bracketSizeObserver"]],false],["text","\\n"],["append",["unknown",["selectedRoundObserver"]],false],["text","\\n"],["block",["each"],[["helper",["-each-in"],[["get",["roundData"]]],null]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","button"],["flush-element"],["text","\\n    "],["append",["helper",["generic-button"],null,[["text","canBeSelected","triggerSelected","selectionGroup","onSelected","onClickSound"],[["get",["data","name"]],true,["get",["data","triggerSelect"]],"games",["helper",["action"],[["get",[null]],"selectRound",["get",["roundNumber"]]],null],"text-click-small"]]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":["roundNumber","data"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(370), e.exports = a.Ember.Component.extend({
                classNames: ["clash-bracket-nav-16"],
                layout: n(371),
                clashService: a.Ember.inject.service("clash"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                bracket: null,
                selectedRound: null,
                isLosersBracket: !1,
                selectedBracket: "winners",
                roundData: null,
                selectedRoundObserver: a.Ember.computed("selectedRound", "selectedBracket", (function() {
                    const e = this.get("roundData"),
                        t = this.get("selectedRound");
                    for (const n of Object.keys(e)) {
                        const a = parseInt(n);
                        if (a === t) {
                            e[a].set("triggerSelect", !0);
                            break
                        }
                    }
                })),
                bracketSizeObserver: a.Ember.computed("bracket.size", "bracket.losersBracketSize", "selectedBracket", (function() {
                    const e = this.get("selectedBracket"),
                        t = "winners" === e ? 16 : "losers" === e ? 8 : 4,
                        n = this.get("selectedRound"),
                        s = Math.log2(t),
                        i = this.get("tra"),
                        o = {};
                    for (let t = 1; t <= s; ++t) {
                        let r = t;
                        "losers" === e ? r += 1 : "losers-2" === e && (r += 2);
                        const l = r === s && "winners" === e ? i.get("clash_bracket_nav_item_finals") : i.formatString("clash_bracket_nav_item_non_finals", {
                            roundNumber: r
                        });
                        o[r] = a.Ember.Object.create({
                            name: l,
                            triggerSelect: r === n
                        })
                    }
                    this.set("roundData", o)
                })),
                actions: {
                    selectRound(e) {
                        this.attrs.selectedRound && ("string" == typeof e && (e = parseInt(e)), this.attrs.selectRound(e))
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "v1JRl3EJ",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-bracket\\\\bracket-nav-16\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-bracket\\\\bracket-nav-16\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\clash-tab-bracket\\\\bracket-nav-16\\\\index.js\\" "],["text","\\n"],["append",["unknown",["bracketSizeObserver"]],false],["text","\\n"],["append",["unknown",["selectedRoundObserver"]],false],["text","\\n"],["block",["each"],[["helper",["-each-in"],[["get",["roundData"]]],null]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","button"],["flush-element"],["text","\\n    "],["append",["helper",["generic-button"],null,[["text","canBeSelected","triggerSelected","selectionGroup","onSelected","onClickSound"],[["get",["data","name"]],true,["get",["data","triggerSelect"]],"games",["helper",["action"],[["get",[null]],"selectRound",["get",["roundNumber"]]],null],"text-click-small"]]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":["roundNumber","data"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9),
                i = r(n(10)),
                o = r(n(310));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            n(373);
            const l = Object.freeze(["lockin", "matchmaking_future", "scouting_future"]),
                c = Object.freeze(["matchmaking", "scouting_future", "in_queue_future"]),
                d = Object.freeze(["scouting", "in_queue_future"]),
                m = Object.freeze(["scouting_waiting", "scouting_future", "in_queue_future"]),
                u = Object.freeze(["in_queue"]),
                p = Object.freeze(["paused", "matchmaking_future", "scouting_future"]),
                h = Object.freeze(["paused", "scouting_future", "in_queue_future"]),
                g = Object.freeze(["resuming", "matchmaking_future", "scouting_future"]),
                f = Object.freeze(["resuming", "scouting_future", "in_queue_future"]),
                _ = a.UIKit.getContextualNotificationManager();
            e.exports = a.Ember.Component.extend(o.default, {
                classNames: ["clash-action-timeline"],
                layout: n(374),
                clashNav: a.Ember.inject.service("clash-nav"),
                clashService: a.Ember.inject.service("clash"),
                gdsService: a.Ember.inject.service("gds"),
                telemetryService: a.Ember.inject.service("telemetry"),
                tutorialService: a.Ember.inject.service("tutorial"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                tournamentStateInfo: a.Ember.computed.alias("tournament.tournamentStateInfo"),
                findTeamViewEnabled: a.Ember.computed.alias("clashService.findTeamViewEnabled"),
                isClashBanned: a.Ember.computed.alias("clashService.localPlayer.isClashBanned"),
                isParticipationForbidden: a.Ember.computed.or("isHonorRestricted", "isClashBanned"),
                previousActionData: null,
                appData: null,
                tournament: null,
                currentRoster: null,
                viewTeamOnly: !1,
                currentTabId: a.Ember.computed.alias("appData.currentTabId"),
                currentTournamentSummary: a.Ember.computed.alias("appData.currentTournamentSummary"),
                hasRoster: a.Ember.computed("currentTournamentSummary.rosterId", "currentRoster", (function() {
                    const e = this.get("currentRoster"),
                        t = this.get("currentTournamentSummary.rosterId");
                    return e && t && t !== s.INVALID_ROSTER_ID
                })),
                hasNoRoster: a.Ember.computed.not("hasRoster"),
                isRegistered: a.Ember.computed.alias("currentRoster.isRegistered"),
                onWillDestroyElement: a.Ember.on("willDestroyElement", (function() {
                    const e = this.get("previousActionData");
                    e && e._destroyLastDialogModal(), this._closeContextualNotification(this.get("_lockinTutorialStepTooltip"))
                })),
                _actionTimelinesDef: a.Ember.computed("currentTabId", "tournament.status", "tournament.state", "tournament.currentPhaseId", "hasRoster", "isRegistered", "localPlayer.nextMatch", "tournamentStateInfo.nextStateChangeTime", (function() {
                    const e = this.get("tournament.state");
                    if (!e) return null;
                    let t = null,
                        n = null;
                    const o = this.get("hasRoster"),
                        r = this.get("isRegistered");
                    if (e === i.default.Tournament.LOCK_IN || e === i.default.Tournament.IDLE) {
                        const e = this.get("findTeamViewEnabled") ? this.get("currentTabId") === s.ClashTab.TEAM ? "find_team" : "create_or_find_team" : "create_team";
                        t = o ? r ? "matchmaking" : "lockin" : e, n = r ? c : l
                    } else if (e === i.default.Tournament.SCOUTING) {
                        const e = this.get("localPlayer.nextMatch.rosterId1"),
                            a = this.get("localPlayer.nextMatch.rosterId2"),
                            s = this.get("tournamentStateInfo.nextStateChangeTime"),
                            i = e > 0 && a > 0 && s > 0;
                        t = i ? "scouting" : "scouting_waiting", n = i ? d : m, this._closeContextualNotification(this.get("_lockinTutorialStepTooltip"))
                    } else e === i.default.Tournament.IN_GAME && (t = "in_queue", n = u, this._closeContextualNotification(this.get("_inviteTutorialStepTooltip")));
                    this.get("viewTeamOnly") && o && (t = "view_team");
                    const _ = this.get("tournament.status"),
                        b = e === i.default.Tournament.LOCK_IN && r,
                        x = e === i.default.Tournament.SCOUTING || e === i.default.Tournament.IN_GAME;
                    return (b || x) && (_ === s.TournamentStatus.PAUSED ? (n = b ? p : h, t = "paused") : _ === s.TournamentStatus.PRERESUME && (n = b ? g : f, t = "resuming")), t && n ? {
                        actionDef: t,
                        timelinesDef: n
                    } : (a.logger.error("action-timeline -- missing timelines or action definitions?!"), null)
                })),
                timelinesData: a.Ember.computed("_actionTimelinesDef", "_actionTimelinesDef.actionDef", "_actionTimelinesDef.timelinesDef", (function() {
                    let e = null;
                    const t = this.get("_actionTimelinesDef");
                    if (t && t.timelinesDef) {
                        e = [];
                        for (const a of t.timelinesDef) e.push(n(375)(`./${a}`).create({
                            root: this
                        }))
                    }
                    return e
                })),
                actionData: a.Ember.computed("_actionTimelinesDef", "_actionTimelinesDef.actionDef", "_actionTimelinesDef.timelinesDef", (function() {
                    let e = null;
                    const t = this.get("_actionTimelinesDef");
                    return t && t.actionDef && (e = n(387)(`./${t.actionDef}`).create({
                        root: this
                    }), this.set("previousActionData", e)), e
                })),
                tutorialFlowName: a.Ember.computed("currentRoster", (function() {
                    if (!this.get("currentRoster")) return;
                    return this.get("currentRoster.captain.isLocalPlayer") ? "captainTutorialFlow" : "memberTutorialFlow"
                })),
                tutorialObserver: a.Ember.computed("tutorialService.memberTutorialFlow.name", "tutorialService.captainTutorialFlow.name", "tutorialFlowName", (function() {
                    const e = this.get("tutorialFlowName"),
                        t = this.get(`tutorialService.${e}`);
                    t && ("memberLockinStep" !== t.name && "captainLockinStep" !== t.name || a.Util.waitForElement(this.element, ".action-button-container").then((() => {
                        const e = this.$(".action-button-container");
                        e && this._createTutorialTooltip(e, t, "_lockinTutorialStepTooltip")
                    })))
                })),
                _createTutorialTooltip(e, t, n) {
                    if (this.get(n)) return;
                    const a = this.get("tutorialService").createContextualNotificationBlockElement(this.get("tra"), t),
                        s = _.add(a, {
                            target: {
                                domNode: e,
                                anchor: {
                                    x: "center",
                                    y: "top"
                                }
                            },
                            offset: {
                                x: 0,
                                y: -255
                            },
                            anchor: {
                                x: "center",
                                y: "top"
                            },
                            orientation: "top",
                            dismissOnTargetHide: !0
                        });
                    return s.onRemove.then((() => {
                        this.get("tutorialService").completeTutorialStep(this.get("tutorialFlowName"), t.name), this.set(n, null)
                    })), this.set(n, s), s
                },
                _closeContextualNotification(e) {
                    e && _.remove(e)
                },
                actions: {
                    forwardClick() {
                        this.get("actionData") && this.get("actionData").onForwardClick()
                    },
                    secondaryClick() {
                        this.get("actionData") && this.get("actionData").onSecondaryClick()
                    },
                    backClick() {
                        this.get("actionData") && this.get("actionData").onBackClick()
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "ltC/V1t8",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\action-timeline\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\action-timeline\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\action-timeline\\\\index.js\\" "],["text","\\n"],["append",["unknown",["tutorialObserver"]],false],["text","\\n"],["block",["unless"],[["get",["isParticipationForbidden"]]],null,23,9],["text","\\n"],["block",["if"],[["get",["actionData","isButtonContainerVisible"]]],null,8],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n            "],["open-element","p",[]],["flush-element"],["text","\\n              "],["append",["unknown",["actionData","secondaryTooltipText"]],false],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition"],["top"]],0]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["action-button-flat-container ",["helper",["if"],[["get",["actionData","hideButton"]],"fade-out"],null]]]],["flush-element"],["text","\\n      "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","action-button-flat"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"secondaryClick"],null],null],["dynamic-attr","disabled",["unknown",["actionData","isSecondaryButtonDisabled"]],null],["dynamic-attr","hover-sfx-src",["unknown",["actionData","forwardHoverSound"]],null],["dynamic-attr","click-sfx-src",["unknown",["actionData","forwardClickSound"]],null],["dynamic-attr","type",["unknown",["actionData","secondaryButtonType"]],null],["flush-element"],["text","\\n        "],["append",["unknown",["actionData","secondaryButtonText"]],false],["text","\\n      "],["close-element"],["text","\\n"],["block",["if"],[["get",["actionData","showSecondaryTooltip"]]],null,1],["text","    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n              "],["open-element","p",[]],["flush-element"],["text","\\n                "],["append",["unknown",["actionData","forwardTooltipText"]],false],["text","\\n              "],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition"],["top"]],3]],"locals":[]},{"statements":[["text","    "],["comment"," display only the forward button\\n         the lol-uikit-flat-button is only a single button "],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["action-button-flat-container ",["helper",["if"],[["get",["actionData","hideButton"]],"fade-out"],null]]]],["flush-element"],["text","\\n      "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","action-button-flat"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"forwardClick"],null],null],["dynamic-attr","disabled",["unknown",["actionData","isForwardButtonDisabled"]],null],["dynamic-attr","hover-sfx-src",["unknown",["actionData","forwardHoverSound"]],null],["dynamic-attr","click-sfx-src",["unknown",["actionData","forwardClickSound"]],null],["dynamic-attr","type",["unknown",["actionData","forwardButtonType"]],null],["flush-element"],["text","\\n        "],["append",["unknown",["actionData","buttonText"]],false],["text","\\n      "],["close-element"],["text","\\n"],["block",["if"],[["get",["actionData","showForwardTooltip"]]],null,4],["text","    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["comment"," display both the forward button and a close button\\n         the arrow-footer is a dual button component "],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["action-button-arrow-container ",["helper",["if"],[["get",["actionData","hideButton"]],"fade-out"],null]]]],["flush-element"],["text","\\n      "],["append",["helper",["arrow-footer"],null,[["confirmButtonDisabled","confirmButtonText","confirmButtonShowTooltip","confirmButtonTooltipText","confirmButtonTooltipType","confirmButtonHoverSound","confirmButtonClickSound","closeButtonDisabled","closeButtonText","closeButtonShowTooltip","closeButtonTooltipText","closeButtonTooltipType","closeButtonHoverSound","closeButtonClickSound","closeButtonType","useCompletedDisabledState","confirmButtonClicked","closeButtonClicked"],[["get",["actionData","isForwardButtonDisabled"]],["get",["actionData","buttonText"]],["get",["actionData","showForwardTooltip"]],["get",["actionData","forwardTooltipText"]],"tooltip-large",["get",["actionData","forwardHoverSound"]],["get",["actionData","forwardClickSound"]],["get",["actionData","isBackButtonDisabled"]],"",["get",["actionData","showBackTooltip"]],["get",["actionData","backTooltipText"]],"tooltip-small","/fe/lol-clash/assets/audio/sfx-clash-button-circlegold-hover.ogg","/fe/lol-clash/assets/audio/sfx-clash-button-circlegold-click.ogg",["get",["actionData","closeButtonType"]],["get",["actionData","useCompletedDisabledState"]],"forwardClick","backClick"]]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","action-button-container-content"],["flush-element"],["text","\\n      "],["append",["helper",["sanitize"],[["get",["actionData","buttonContainerContent"]]],null],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["open-element","div",[]],["static-attr","class","action-button-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","action-button-wing-left"],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["actionData","buttonContainerContent"]]],null,7],["block",["if"],[["get",["actionData","useCloseButton"]]],null,6,5],["block",["if"],[["get",["actionData","hasSecondaryButton"]]],null,2],["text","  "],["open-element","div",[]],["static-attr","class","action-button-wing-right"],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-action-flow-action-disabled"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","action-disabled-lock"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","arrow-right"],["flush-element"],["text","\\n        "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/arrow-right.png"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["dynamic-attr","class",["concat",["name ",["helper",["if"],[["get",["iterTimelineData","isInQueue"]],"in-queue"],null]]]],["flush-element"],["text","\\n          "],["append",["helper",["shuffle-text"],null,[["locName","isEnabled"],[["get",["iterTimelineData","locName"]],["get",["iterTimelineData","shuffleText"]]]]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n                "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_action_timeline_timestamp_tooltip"]],false],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["comment"," static info title, typically a timestamp or duration  "],["text","\\n          "],["open-element","div",[]],["dynamic-attr","class",["concat",["infoTitle\\n          ",["helper",["if"],[["get",["iterTimelineData","isNow"]],"active"],null],"\\n          ",["helper",["if"],[["get",["iterTimelineData","hasInfoTitleEmphasis"]],"emphasis"],null]]]],["flush-element"],["text","\\n            "],["append",["unknown",["iterTimelineData","infoTitleText"]],false],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],12],["text","          "],["close-element"],["text","\\n        "]],"locals":[]},{"statements":[["text","                "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n                  "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_action_timeline_timestamp_tooltip"]],false],["close-element"],["text","\\n                "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],14]],"locals":[]},{"statements":[["text","                  "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n                    "],["open-element","p",[]],["static-attr","style","width:400px;white-space:normal"],["flush-element"],["append",["unknown",["iterTimelineData","headlineTitleTooltip"]],false],["close-element"],["text","\\n                  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],16]],"locals":[]},{"statements":[["block",["if"],[["get",["iterTimelineData","headlineTitleTooltip"]]],null,17]],"locals":[]},{"statements":[["text","          "],["comment"," static headline title, typically an in-between or wait period "],["text","\\n          "],["open-element","div",[]],["dynamic-attr","class",["concat",["headlineTitle ",["helper",["if"],[["get",["iterTimelineData","titleWrap"]],"wrap"],null]]]],["flush-element"],["text","\\n            "],["append",["helper",["sanitize"],[["get",["iterTimelineData","headlineTitleText"]]],null],false],["text","\\n"],["block",["if"],[["get",["iterTimelineData","isNow"]]],null,18,15],["text","          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["iterTimelineData","headlineTitleText"]]],null,19,13]],"locals":[]},{"statements":[["text","          "],["comment"," dynamic timer (counts down or up) "],["text","\\n          "],["append",["helper",["state-countdown"],null,[["tournament","usePaddedZeros","displayTimerDescriptionTxt","showMinutesBelow60s","injectNumberStyling","showSpinnerOnTimeup","customTag"],[["get",["tournament"]],false,false,false,true,true,"action-timeline"]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["action ",["helper",["if"],[["get",["iterTimelineData","isNow"]],"centered"],null]," ",["helper",["if"],[["get",["iterTimelineData","showActiveGlow"]],"active"],null]," ",["helper",["if"],[["get",["iterTimelineData","headlineTitleTooltip"]],"has-tooltip"],null]]]],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","countdown"],["flush-element"],["text","\\n"],["block",["if"],[["get",["iterTimelineData","shouldShowTimer"]]],null,21,20],["text","      "],["close-element"],["text","\\n\\n"],["block",["unless"],[["get",["iterTimelineData","headlineTitleText"]]],null,11],["text","    "],["close-element"],["text","\\n\\n"],["block",["unless"],[["helper",["is-last"],[["get",["timelinesData"]],["get",["iterTimelineData"]]],null]],null,10],["text","\\n"]],"locals":["iterTimelineData"]},{"statements":[["open-element","div",[]],["static-attr","class","action-flow-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","centering-padding"],["flush-element"],["close-element"],["text","\\n"],["block",["each"],[["get",["timelinesData"]]],[["key"],["name"]],22],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            var a = {
                "./_base_timeline": 376,
                "./_base_timeline.js": 376,
                "./in_queue": 377,
                "./in_queue.js": 377,
                "./in_queue_future": 378,
                "./in_queue_future.js": 378,
                "./lockin": 379,
                "./lockin.js": 379,
                "./matchmaking": 380,
                "./matchmaking.js": 380,
                "./matchmaking_future": 381,
                "./matchmaking_future.js": 381,
                "./paused": 382,
                "./paused.js": 382,
                "./resuming": 383,
                "./resuming.js": 383,
                "./scouting": 384,
                "./scouting.js": 384,
                "./scouting_future": 385,
                "./scouting_future.js": 385,
                "./scouting_waiting": 386,
                "./scouting_waiting.js": 386
            };

            function s(e) {
                var t = i(e);
                return n(t)
            }

            function i(e) {
                if (!n.o(a, e)) {
                    var t = new Error("Cannot find module '" + e + "'");
                    throw t.code = "MODULE_NOT_FOUND", t
                }
                return a[e]
            }
            s.keys = function() {
                return Object.keys(a)
            }, s.resolve = i, e.exports = s, s.id = 375
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            e.exports = a.Ember.Object.extend({
                root: null,
                name: "",
                shouldShowTimer: !1,
                headlineTitleText: null,
                headlineTitleTooltip: null,
                titleWrap: !1,
                infoTitleText: null,
                hasInfoTitleEmphasis: !1,
                isNow: !0,
                isActiveGlowEnabled: !0,
                shuffleText: !1,
                tra: a.Ember.computed.alias("root.tra"),
                clashNav: a.Ember.computed.alias("root.clashNav"),
                clashService: a.Ember.computed.alias("root.clashService"),
                localPlayer: a.Ember.computed.alias("root.localPlayer"),
                tournament: a.Ember.computed.alias("root.tournament"),
                currentRoster: a.Ember.computed.alias("root.currentRoster"),
                hasRoster: a.Ember.computed.alias("root.hasRoster"),
                hasNoRoster: a.Ember.computed.alias("root.hasNoRoster"),
                tournamentStateInfo: a.Ember.computed.alias("root.tournamentStateInfo"),
                isInQueue: a.Ember.computed.equal("name", "in_queue"),
                showActiveGlow: a.Ember.computed.and("isNow", "isActiveGlowEnabled"),
                locName: a.Ember.computed("name", (function() {
                    const e = this.get("name");
                    return this._getLocIfExists(`clash_action_timeline_state_name_${e}`)
                })),
                _getLocIfExists(e) {
                    const t = this.get("tra");
                    return t.exists(e) ? t.get(e) : null
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(376)) && a.__esModule ? a : {
                    default: a
                };
            e.exports = i.default.extend({
                name: "in_queue",
                shouldShowTimer: !0,
                isActiveGlowEnabled: !1,
                shuffleText: !0,
                locName: s.Ember.computed("name", (function() {
                    const e = this.get("name");
                    return this._getLocIfExists(`clash_action_timeline_state_name_${e}`)
                }))
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = r(n(376)),
                i = r(n(10)),
                o = n(9);

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = s.default.extend({
                name: "in_queue_future",
                isNow: !1,
                nextMatchStartTime: a.Ember.computed("tournament", "tournament.locale", "localPlayer.nextMatch", "localPlayer.nextMatch.roundStartTime", (function() {
                    const e = this.get("tournament"),
                        t = this.get("localPlayer.nextMatch");
                    if (!e || !t) return "";
                    const n = this.get("localPlayer.nextMatch.roundStartTime");
                    if (!t.get("isBye") && a.Util.isNumberOk(n) && n > 0) {
                        const t = this.get("tournament.locale");
                        return e.convertTimestampToLocalTime(t, n)
                    }
                    return ""
                })),
                locName: a.Ember.computed("name", (function() {
                    if (this.get("tournament.state") === i.default.Tournament.SCOUTING) return this._getLocIfExists("clash_action_timeline_state_name_in_queue_imminent");
                    const e = this.get("name");
                    return this._getLocIfExists(`clash_action_timeline_state_name_${e}`)
                })),
                estimatedBracketFormationWaitTime: a.Ember.computed("currentRoster.tier", "tournament.tierConfig", (function() {
                    const e = this.get("currentRoster.tier") || 1,
                        t = (this.get("tournament.tierConfigs") || []).find((t => String(t.tier) === String(e)));
                    return Math.max(t ? t.estimateTime : 6e4, 6e4)
                })),
                infoTitleText: a.Ember.computed("nextMatchStartTime", "tournament.currentPhaseId", "currentRoster.phaseInfos", "estimatedBracketFormationWaitTime", "tournament.scoutingDurationMs", "tournament.locale", "tournament.state", (function() {
                    const e = this.get("tournament.status");
                    if (e === o.TournamentStatus.PAUSED) return this.get("tra.clash_action_timeline_state_paused");
                    if (e === o.TournamentStatus.PRERESUME) return this.get("tra.clash_action_timeline_state_resuming");
                    if (this.get("tournament.state") === i.default.Tournament.SCOUTING) return this.get("nextMatchStartTime");
                    const t = this.get("tournament"),
                        n = this.get("tournament.currentPhaseId"),
                        a = (this.get("currentRoster.phaseInfos") || []).find((e => String(e.phaseId) === String(n))),
                        s = this.get("estimatedBracketFormationWaitTime"),
                        r = this.get("tournament.scoutingDurationMs");
                    if (!a || !a.checkinTime) return "-";
                    const l = this.get("tournament.locale"),
                        c = a.checkinTime + s + r,
                        d = a.checkinTime + s + 2 * r;
                    return `${t.convertTimestampToLocalTime(l,c)} - ${t.convertTimestampToLocalTime(l,d)}`
                })),
                hasInfoTitleEmphasis: a.Ember.computed("nextMatchStartTime", "hasNoRoster", "tournament.state", (function() {
                    return (!this.get("hasNoRoster") || this.get("tournament.state") !== i.default.Tournament.IDLE) && this.get("nextMatchStartTime")
                }))
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = o(n(376)),
                i = o(n(10));

            function o(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = s.default.extend({
                name: "lockin",
                shouldShowTimer: a.Ember.computed.equal("tournament.state", i.default.Tournament.LOCK_IN),
                infoTitleText: a.Ember.computed("shouldShowTimer", "clashService.locale", "tournamentStateInfo.nextStateChangeTime", (function() {
                    if (this.get("shouldShowTimer")) return null;
                    const e = this.get("tournamentStateInfo.nextStateChangeTime");
                    if (!e) return "";
                    const t = this.get("clashService"),
                        n = this.get("clashService.locale"),
                        a = t.getDateString(n, e, {
                            weekday: "long"
                        }),
                        s = t.getTimeString(n, e, {
                            hour: "numeric",
                            minute: "numeric"
                        });
                    return this.get("tra").formatString("clash_action_timeline_state_lockin_opening", {
                        day: a,
                        time: s
                    })
                }))
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = (a = n(376)) && a.__esModule ? a : {
                default: a
            };
            e.exports = s.default.extend({
                name: "matchmaking",
                shouldShowTimer: !0,
                isActiveGlowEnabled: !1
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = o(n(376)),
                i = (o(n(10)), n(9));

            function o(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = s.default.extend({
                name: "matchmaking_future",
                isNow: !1,
                locName: a.Ember.computed("name", (function() {
                    const e = this.get("name");
                    return this._getLocIfExists(`clash_action_timeline_state_name_${e}`)
                })),
                infoTitleText: a.Ember.computed("tournament", "tournament.tierConfigs", "currentRoster.tier", "tournament.status", (function() {
                    const e = this.get("tournament.status");
                    if (e === i.TournamentStatus.PAUSED) return this.get("tra.clash_action_timeline_state_paused");
                    if (e === i.TournamentStatus.PRERESUME) return this.get("tra.clash_action_timeline_state_resuming");
                    const t = this.get("currentRoster.tier") || 1,
                        n = (this.get("tournament.tierConfigs") || []).find((e => String(e.tier) === String(t))),
                        a = Math.max(n ? n.estimateTime / 6e4 : 1, 1);
                    return this.get("tra").formatString("clash_action_timeline_state_matchmaking_duration", {
                        minutes: a
                    })
                }))
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = i(n(376));
            i(n(10));

            function i(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = s.default.extend({
                name: "paused",
                headlineTitleText: a.Ember.computed("name", (function() {
                    return this.get("tra.clash_action_timeline_state_name_paused")
                })),
                headlineTitleTooltip: a.Ember.computed("name", (function() {
                    return this.get("tra.clash_notification_description_UPDATE_STATUS_paused")
                })),
                isActiveGlowEnabled: !1
            })
        }, (e, t, n) => {
            "use strict";
            n(1);
            var a = s(n(376));
            s(n(10));

            function s(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = a.default.extend({
                name: "resuming",
                shouldShowTimer: !0,
                isActiveGlowEnabled: !1
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = r(n(376)),
                i = r(n(10)),
                o = n(9);

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = s.default.extend({
                name: "scouting",
                useCloseButton: !1,
                isForwardButtonEnabled: a.Ember.computed.equal("tournament.state", i.default.Tournament.SCOUTING),
                shouldShowTimer: !0,
                onForwardClick() {
                    if (!this.get("isForwardButtonEnabled")) return;
                    this.get("clashNav").selectTab(o.ClashTab.BRACKET)
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(376)) && a.__esModule ? a : {
                    default: a
                },
                o = n(9);
            e.exports = i.default.extend({
                name: "scouting_future",
                isNow: !1,
                infoTitleText: s.Ember.computed("tournament", "tournament.scoutingDurationMs", "tournament.status", (function() {
                    const e = this.get("tournament.status");
                    if (e === o.TournamentStatus.PAUSED) return this.get("tra.clash_action_timeline_state_paused");
                    if (e === o.TournamentStatus.PRERESUME) return this.get("tra.clash_action_timeline_state_resuming");
                    const t = this.get("tournament"),
                        n = this.get("tournament.scoutingDurationMs");
                    let a = 0;
                    t && n && (a = Math.floor(n / 6e4));
                    const s = 2 * a;
                    return this.get("tra").formatString("clash_action_timeline_state_scouting_duration", {
                        min: a,
                        max: s
                    })
                }))
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = o(n(376)),
                i = o(n(10));

            function o(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = s.default.extend({
                name: "scouting_waiting",
                localPlayerState: a.Ember.computed.alias("clashService.localPlayer.state"),
                titleWrap: !0,
                headlineTitleText: a.Ember.computed("tournament", "localPlayer.nextMatch.isBye", (function() {
                    if (this.get("localPlayer.nextMatch.isBye")) return this.get("tra.clash_action_timeline_state_title_scouting_bye");
                    return this.get("localPlayerState") === i.default.Player.BRACKET_ROSTER ? this.get("tra.clash_action_timeline_state_title_scouting_waiting") : this.get("tra.clash_action_timeline_state_title_scouting_brackets_forming")
                }))
            })
        }, (e, t, n) => {
            var a = {
                "./_base_action": 388,
                "./_base_action.js": 388,
                "./create_or_find_team": 389,
                "./create_or_find_team.js": 389,
                "./create_team": 390,
                "./create_team.js": 390,
                "./find_team": 391,
                "./find_team.js": 391,
                "./in_queue": 392,
                "./in_queue.js": 392,
                "./lockin": 393,
                "./lockin.js": 393,
                "./matchmaking": 397,
                "./matchmaking.js": 397,
                "./paused": 398,
                "./paused.js": 398,
                "./resuming": 399,
                "./resuming.js": 399,
                "./scouting": 400,
                "./scouting.js": 400,
                "./scouting_waiting": 401,
                "./scouting_waiting.js": 401,
                "./view_team": 402,
                "./view_team.js": 402
            };

            function s(e) {
                var t = i(e);
                return n(t)
            }

            function i(e) {
                if (!n.o(a, e)) {
                    var t = new Error("Cannot find module '" + e + "'");
                    throw t.code = "MODULE_NOT_FOUND", t
                }
                return a[e]
            }
            s.keys = function() {
                return Object.keys(a)
            }, s.resolve = i, e.exports = s, s.id = 387
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            e.exports = a.Ember.Object.extend({
                root: null,
                name: "",
                isForwardButtonEnabled: !1,
                isSecondaryButtonEnabled: !1,
                isBackButtonEnabled: !1,
                forwardButtonType: "",
                closeButtonType: "close",
                useCompletedDisabledState: !1,
                useCloseButton: !0,
                forwardHoverSound: "/fe/lol-uikit/sfx-uikit-button-gold-hover.ogg",
                forwardClickSound: "/fe/lol-uikit/sfx-uikit-button-gold-click.ogg",
                hideButton: !1,
                isButtonContainerVisible: !0,
                buttonContainerContent: null,
                lastDialogModal: null,
                hasSecondaryButton: !1,
                tra: a.Ember.computed.alias("root.tra"),
                clashNav: a.Ember.computed.alias("root.clashNav"),
                clashService: a.Ember.computed.alias("root.clashService"),
                gdsService: a.Ember.computed.alias("root.gdsService"),
                telemetryService: a.Ember.computed.alias("root.telemetryService"),
                localPlayer: a.Ember.computed.alias("root.localPlayer"),
                tournament: a.Ember.computed.alias("root.tournament"),
                currentRoster: a.Ember.computed.alias("root.currentRoster"),
                hasRoster: a.Ember.computed.alias("root.hasRoster"),
                hasNoRoster: a.Ember.computed.alias("root.hasNoRoster"),
                tournamentStateInfo: a.Ember.computed.alias("root.tournamentStateInfo"),
                buttonText: a.Ember.computed("name", (function() {
                    const e = this.get("name");
                    return this._getLocIfExists(`clash_action_timeline_state_fwd_btn_text_${e}`)
                })),
                forwardTooltipText: a.Ember.computed("name", "isForwardButtonEnabled", (function() {
                    const e = this.get("name");
                    return this.get("isForwardButtonEnabled") ? this._getLocIfExists(`clash_action_timeline_state_fwd_btn_tooltip_${e}`) : this._getLocIfExists(`clash_action_timeline_state_fwd_btn_tooltip_${e}_disabled`)
                })),
                secondaryTooltipText: a.Ember.computed("name", "isSecondaryButtonEnabled", (function() {
                    const e = this.get("name");
                    return this.get("isSecondaryButtonEnabled") ? this._getLocIfExists(`clash_action_timeline_state_secondary_btn_tooltip_${e}`) : this._getLocIfExists(`clash_action_timeline_state_secondary_btn_tooltip_${e}_disabled`)
                })),
                backTooltipText: a.Ember.computed("name", "isBackButtonEnabled", (function() {
                    const e = this.get("name");
                    return this.get("isBackButtonEnabled") ? this._getLocIfExists(`clash_action_timeline_state_back_btn_tooltip_${e}`) : this._getLocIfExists(`clash_action_timeline_state_back_btn_tooltip_${e}_disabled`)
                })),
                showForwardTooltip: a.Ember.computed.bool("forwardTooltipText"),
                showSecondaryTooltip: a.Ember.computed.bool("secondaryTooltipText"),
                showBackTooltip: a.Ember.computed.bool("backTooltipText"),
                isForwardButtonDisabled: a.Ember.computed.not("isForwardButtonEnabled"),
                isSecondaryButtonDisabled: a.Ember.computed.not("isSecondaryButtonEnabled"),
                isBackButtonDisabled: a.Ember.computed.not("isBackButtonEnabled"),
                _getLocIfExists(e) {
                    const t = this.get("tra");
                    return t.exists(e) ? t.get(e) : null
                },
                _destroyLastDialogModal() {
                    const e = this.get("lastDialogModal");
                    e && (a.ModalManager.remove(e), this.set("lastDialogModal", null))
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9),
                i = r(n(388)),
                o = r(n(310));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = i.default.extend(o.default, {
                name: "create_team",
                tournamentId: a.Ember.computed.readOnly("tournament.id"),
                isClashBanned: a.Ember.computed.alias("clashService.localPlayer.isClashBanned"),
                isParticipationForbidden: a.Ember.computed.or("isHonorRestricted", "isClashBanned"),
                isParticipationAllowed: a.Ember.computed.not("isParticipationForbidden"),
                useCloseButton: !1,
                forwardButtonType: "",
                hasSecondaryButton: !0,
                secondaryButtonType: "",
                isCallInProgress: !1,
                isNotCallInProgress: a.Ember.computed.not("isCallInProgress"),
                isForwardButtonEnabled: a.Ember.computed.and("isNotCallInProgress", "hasNoRoster", "isParticipationAllowed"),
                showForwardTooltip: a.Ember.computed("isParticipationForbidden", (function() {
                    return this.get("isParticipationForbidden")
                })),
                forwardTooltipText: a.Ember.computed("isClashBanned", "isHonorRestricted", (function() {
                    const e = this.get("tra");
                    if (this.get("isClashBanned")) return e.formatString("clash_ineligible_banned_tooltip");
                    if (this.get("isHonorRestricted")) {
                        const t = this.get("honorLevelRequired");
                        return e.formatString("clash_ineligible_honor_tooltip", {
                            level: t
                        })
                    }
                    return ""
                })),
                isSecondaryButtonEnabled: a.Ember.computed.and("isNotCallInProgress", "hasNoRoster", "isParticipationAllowed"),
                secondaryButtonText: a.Ember.computed("name", (function() {
                    return this._getLocIfExists("clash_action_timeline_state_fwd_btn_text_create_team_secondary")
                })),
                secondaryTooltipText: a.Ember.computed.alias("forwardTooltipText"),
                onForwardClick() {
                    if (!this.get("isForwardButtonEnabled")) return;
                    const e = this.get("clashService"),
                        t = this.get("tournament.id");
                    this.set("isCallInProgress", !0), e.createRoster(t).then((() => {
                        this.set("isCallInProgress", !1);
                        const e = this.get("clashNav");
                        e.enableTab(s.ClashTab.TEAM), e.selectTab(s.ClashTab.TEAM)
                    }), (() => {
                        this.set("isCallInProgress", !1)
                    }))
                },
                onSecondaryClick() {
                    this.get("isSecondaryButtonEnabled") && this.get("clashNav").selectTab(s.ClashTab.TEAM)
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9),
                i = r(n(388)),
                o = r(n(310));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = i.default.extend(o.default, {
                name: "create_team",
                tournamentId: a.Ember.computed.readOnly("tournament.id"),
                isClashBanned: a.Ember.computed.alias("clashService.localPlayer.isClashBanned"),
                isParticipationForbidden: a.Ember.computed.or("isHonorRestricted", "isClashBanned"),
                isParticipationAllowed: a.Ember.computed.not("isParticipationForbidden"),
                useCloseButton: !1,
                forwardButtonType: "",
                isCallInProgress: !1,
                isNotCallInProgress: a.Ember.computed.not("isCallInProgress"),
                isForwardButtonEnabled: a.Ember.computed.and("isNotCallInProgress", "hasNoRoster", "isParticipationAllowed"),
                showForwardTooltip: a.Ember.computed("isParticipationForbidden", (function() {
                    return this.get("isParticipationForbidden")
                })),
                forwardTooltipText: a.Ember.computed("isClashBanned", "isHonorRestricted", (function() {
                    const e = this.get("tra");
                    if (this.get("isClashBanned")) return e.formatString("clash_ineligible_banned_tooltip");
                    if (this.get("isHonorRestricted")) {
                        const t = this.get("honorLevelRequired");
                        return e.formatString("clash_ineligible_honor_tooltip", {
                            level: t
                        })
                    }
                    return ""
                })),
                onForwardClick() {
                    if (!this.get("isForwardButtonEnabled")) return;
                    const e = this.get("clashService"),
                        t = this.get("tournament.id");
                    this.set("isCallInProgress", !0), e.createRoster(t).then((() => {
                        this.set("isCallInProgress", !1);
                        const e = this.get("clashNav");
                        e.enableTab(s.ClashTab.TEAM), e.selectTab(s.ClashTab.TEAM)
                    }), (() => {
                        this.set("isCallInProgress", !1)
                    }))
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = o(n(388)),
                i = o(n(310));

            function o(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = s.default.extend(i.default, {
                name: "find_team",
                tournamentId: a.Ember.computed.readOnly("tournament.id"),
                useCloseButton: !1,
                forwardButtonType: "",
                isCallInProgress: !1,
                isNotCallInProgress: a.Ember.computed.not("isCallInProgress"),
                isForwardButtonEnabled: a.Ember.computed.and("isNotCallInProgress", "hasNoRoster"),
                _openPendingRequestsModal() {
                    let e = this.get("modalComponent");
                    e || (e = a.componentFactory.create("PendingLftRequestsModal", {
                        clashService: this.get("clashService")
                    }), this.set("modalComponent", e)), a.ModalManager.add({
                        type: "DialogAlert",
                        data: {
                            contents: e.domNode,
                            dismissible: !0,
                            dismissibleType: "inside"
                        }
                    })
                },
                onForwardClick() {
                    this.get("isForwardButtonEnabled") && this._openPendingRequestsModal()
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(388)) && a.__esModule ? a : {
                    default: a
                };
            e.exports = i.default.extend({
                name: "in_queue",
                useCloseButton: !1,
                hideButton: !0,
                buttonContainerContent: s.Ember.computed("name", (function() {
                    const e = this.get("name");
                    return this.get(`tra.clash_action_timeline_state_btn_container_content_text_${e}`)
                })),
                shouldShowTimer: !0
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9),
                i = n(74),
                o = d(n(388)),
                r = d(n(292)),
                l = d(n(10)),
                c = d(n(310));

            function d(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const m = (0, a.emberDataBinding)({
                    Ember: a.Ember,
                    websocket: (0, a.getProvider)().getSocket(),
                    boundProperties: {
                        isCheckinAllowed: "/lol-clash/v1/checkin-allowed",
                        gameflowSession: "/lol-gameflow/v1/session",
                        gameflowAvailability: "/lol-gameflow/v1/availability"
                    }
                }),
                u = "abc";
            const p = n(394),
                h = n(395),
                g = n(396);
            e.exports = o.default.extend(c.default, m, {
                name: "lockin",
                isCallInProgress: !1,
                localRosterMember: a.Ember.computed.alias("currentRoster.localPlayerMember"),
                isEliminated: a.Ember.computed.alias("currentRoster.isEliminated"),
                isNotEliminated: a.Ember.computed.not("isEliminated"),
                isRosterLockedIn: a.Ember.computed.alias("currentRoster.isActiveInCurrentPhase"),
                isNotRosterLockedIn: a.Ember.computed.not("isRosterLockedIn"),
                isLockedIn: a.Ember.computed("localRosterMember.isReady", "isRosterLockedIn", "tournament.state", (function() {
                    const e = this.get("localRosterMember.isReady"),
                        t = this.get("isRosterLockedIn"),
                        n = this.get("tournament.state");
                    return (e || t) && n && n !== l.default.Tournament.IDLE
                })),
                isNotLockedIn: a.Ember.computed.not("isLockedIn"),
                isNotCallInProgress: a.Ember.computed.not("isCallInProgress"),
                isNotRosterRegistered: a.Ember.computed.not("currentRoster.isRegistered"),
                canLeaveRoster: a.Ember.computed("currentRoster.isRegistered", "isLockedIn", (function() {
                    const e = this.get("isLockedIn");
                    return !this.get("currentRoster.isRegistered") && !e
                })),
                isClashBanned: a.Ember.computed.alias("clashService.localPlayer.isClashBanned"),
                isParticipationForbidden: a.Ember.computed.or("isHonorRestricted", "isClashBanned"),
                isParticipationAllowed: a.Ember.computed.not("isParticipationForbidden"),
                useCompletedDisabledState: a.Ember.computed.alias("isRosterLockedIn"),
                forwardHoverSound: "/fe/lol-clash/assets/audio/sfx-clash-action-button-forward-hover.ogg",
                forwardClickSound: "/fe/lol-clash/assets/audio/sfx-clash-player-lockin.ogg",
                onWillDestroyElement: a.Ember.on("willDestroyElement", (function() {
                    this._destroyLastDialogModal()
                })),
                isButtonsEnabled: a.Ember.computed.and("isNotCallInProgress", "isNotRosterLockedIn"),
                isForwardButtonEnabled: a.Ember.computed("isButtonsEnabled", "isNotLockedIn", "isCheckinAllowed", "localRosterMember.hasMetTicketRequirement", "tournament.isLockinAvailable", "isParticipationAllowed", "tournament.isCurrentPhaseFull", "currentRoster", (function() {
                    const e = this.get("currentRoster.isRegistered") && !this.get("currentRoster.isEliminated");
                    return this.get("isButtonsEnabled") && this.get("isNotLockedIn") && this.get("isCheckinAllowed") && this.get("localRosterMember.hasMetTicketRequirement") && this.get("tournament.isLockinAvailable") && this.get("isParticipationAllowed") && (!this.get("tournament.isCurrentPhaseFull") || e)
                })),
                isBackButtonEnabled: a.Ember.computed("isButtonsEnabled", "canLeaveRoster", "isLockedIn", (function() {
                    if (!this.get("isButtonsEnabled")) return !1;
                    const e = this.get("isLockedIn"),
                        t = this.get("canLeaveRoster");
                    return e || !e && t
                })),
                buttonText: a.Ember.computed("isLockedIn", (function() {
                    return this.get("isLockedIn") ? this.get("tra.clash_action_timeline_state_fwd_btn_text_lockin_ready") : this.get("tra.clash_action_timeline_state_fwd_btn_text_lockin")
                })),
                closeButtonType: a.Ember.computed("isLockedIn", "isRosterLockedIn", (function() {
                    const e = this.get("isLockedIn"),
                        t = this.get("isRosterLockedIn");
                    return e || t ? "back" : "close"
                })),
                backTooltipText: a.Ember.computed("name", "isBackButtonEnabled", "isLockedIn", (function() {
                    const e = this.get("name");
                    return this.get("isBackButtonEnabled") ? this.get("isLockedIn") ? this._getLocIfExists(`clash_action_timeline_state_back_btn_tooltip_${e}_ready`) : this._getLocIfExists(`clash_action_timeline_state_back_btn_tooltip_${e}`) : this._getLocIfExists(`clash_action_timeline_state_back_btn_tooltip_${e}_disabled`)
                })),
                forwardTooltipText: a.Ember.computed("isCheckinAllowed", "gameflowAvailability", "isLockedIn", "localRosterMember.hasMetTicketRequirement", "isClashBanned", "isHonorRestricted", "honorLevelRequired", "tournament.isCurrentPhaseFull", (function() {
                    const e = this.get("tra");
                    if (this.get("isClashBanned")) return e.formatString("clash_ineligible_banned_tooltip");
                    if (this.get("isHonorRestricted")) {
                        const t = this.get("honorLevelRequired");
                        return e.formatString("clash_ineligible_honor_tooltip", {
                            level: t
                        })
                    }
                    if (!this.get("isCheckinAllowed")) {
                        switch ((this.get("gameflowAvailability") || {}).state) {
                            case "Patching":
                                return e.get("clash_action_timeline_lockin_disallowed_patching");
                            case "PlayerBanned":
                                return e.get("clash_action_timeline_lockin_disallowed_banned");
                            default:
                                return e.get("clash_action_timeline_lockin_disallowed_other")
                        }
                    }
                    if (this.get("isLockedIn")) return e.get("clash_action_timeline_state_fwd_btn_tooltip_lockin_ready");
                    if (this.get("isRosterLockedIn")) return e.get("clash_action_timeline_state_fwd_btn_tooltip_lockin_roster_ready");
                    if (this.get("tournament.isCurrentPhaseFull")) return this._getPhaseFullText(this.get("tournament"));
                    const t = this.get("currentRoster.isActiveInCurrentPhase");
                    if (!this.get("tournament.isLockinAvailable") || t) return e.get("clash_action_timeline_state_fwd_btn_tooltip_lockin_unavailable");
                    if (!this.get("localRosterMember.hasMetTicketRequirement")) {
                        const e = this.get("tournament.entryFee");
                        return this.get("tra").formatString("clash_action_timeline_state_fwd_btn_tooltip_lockin_disabled", {
                            entryFee: e
                        })
                    }
                    return e.get("clash_action_timeline_state_fwd_btn_tooltip_lockin")
                })),
                _tryConfirmLeaveGameflowLobby() {
                    const e = this.get("gameflowSession.phase");
                    if (a.logger.trace("gameflowSession.phase=" + e), a.Util.isInGameflowLobby(e)) {
                        const e = {};
                        return e.title = this.get("tra.clash_leave_gameflow_lobby_title"), e.text = this.get("tra.clash_leave_gameflow_lobby_text"), a.logger.trace("Verifying player wants to leave lobby"), a.ModalManager.add({
                            type: "DialogConfirm",
                            data: {
                                contents: a.Util.createDomNode(p(e)),
                                acceptText: this.get("tra.clash_leave_gameflow_lobby_lock_in"),
                                declineText: this.get("tra.clash_leave_gameflow_lobby_cancel"),
                                closeButton: !1
                            }
                        }).acceptPromise
                    }
                    return a.logger.trace("Player not in a lobby"), Promise.resolve()
                },
                _trySetDefaults() {
                    const e = this.get("currentRoster.localPlayerMember.position");
                    let t = Promise.resolve();
                    if (e === i.POSITIONS.UNSELECTED || e === i.POSITIONS.NONE) {
                        const e = this.get("currentRoster.id");
                        t = this.get("clashService").setPositionRole(e, i.POSITIONS.FILL)
                    }
                    if (!this.get("localRosterMember.isRosterCaptain")) return t;
                    const n = this._selectDefaults();
                    if (!n) return Promise.reject();
                    let s = Promise.resolve();
                    if (n.hasChanges) {
                        n.title = this.get("tra.clash_roster_defaults_title"), n.information = this.get("tra.clash_roster_defaults_information"), n.confirmation = this.get("tra.clash_roster_defaults_confirmation");
                        s = a.ModalManager.add({
                            type: "DialogConfirm",
                            data: {
                                contents: a.Util.createDomNode(g(n)),
                                acceptText: this.get("tra.lib_ui_dialog_confirm_accept"),
                                declineText: this.get("tra.lib_ui_dialog_confirm_decline"),
                                closeButton: !1
                            }
                        }).acceptPromise.then((() => {
                            const e = this.get("clashService"),
                                t = this.get("currentRoster.id");
                            return e.setRosterDetails(t, n.logoId, n.logoColorId, n.name, n.shortName)
                        }))
                    }
                    return Promise.all([t, s])
                },
                _selectDefaults() {
                    const e = {};
                    e.logoId = this.get("currentRoster.logoId"), e.logoColorId = this.get("currentRoster.logoColorId");
                    const t = this.get("currentRoster"),
                        n = this.get("clashService.logoConfig"),
                        i = r.default.getAvailableLogosForRoster(n, t),
                        o = r.default.isLogoAvailable(i, e.logoId);
                    if (e.logoId !== s.INVALID_LOGO_ID && o) r.default.isLogoColorAvailable(n, i, e.logoId, e.logoColorId) && (e.logoColorId = s.DEFAULT_LOGO_COLOR_ID);
                    else {
                        if (!i.length) return a.logger.error("no available or free logos! unable to select defaults"), e;
                        const t = i[Math.floor(Math.random() * i.length)];
                        if (!t.colors || !t.colors.length) return a.logger.error(`logo ${t.id} has no available colors :o`), e;
                        const n = Math.floor(Math.random() * t.colors.length);
                        e.logoId = t.id, e.logoColorId = t.colors[n], e.hasChanges = !0
                    }
                    const l = function(e) {
                        if (u) {
                            const e = Math.floor(3 * Math.random());
                            return u.charAt(e)
                        }
                        return a.logger.warning("unable to get default set for logo id", e), ""
                    }(e.logoId);
                    return l ? (e.name = this.get("currentRoster.name"), e.name || (e.name = function(e, t, n) {
                        const a = (e.get(`clash_roster_default_${t}${n}_name`) || "").toString().replace(/[&<>"'\n]/g, "");
                        return a && a.length > s.ROSTER_NAME_MAX_SIZE ? a.substring(0, s.ROSTER_NAME_MAX_SIZE) : a
                    }(this.get("tra"), e.logoId, l), e.hasChanges = !0, e.name) ? (e.shortName = this.get("currentRoster.shortName"), e.shortName || (e.shortName = (c = this.get("tra"), d = e.logoId, m = l, c.get(`clash_roster_default_${d}${m}_tag`)), e.hasChanges = !0, e.shortName) ? (e.logoPath = this.get("gdsService").getLogoPath(e.logoId, e.logoColorId), e) : (a.logger.error(`no default shortName defined for logoId ${e.logoId}, set ${l}`), !1)) : (a.logger.error(`no default name defined for logoId ${e.logoId}, set ${l}`), !1)) : (a.logger.error("no default sets defined for logo id ", e.logoId), !1);
                    var c, d, m
                },
                onForwardClick() {
                    if (!this.get("isForwardButtonEnabled")) return;
                    a.logger.trace("Trying to lock in");
                    const e = this._trySetDefaults().then((() => {
                        this._tryConfirmLeaveGameflowLobby().then((() => {
                            if (this.get("tournament.status") === s.TournamentStatus.PAUSED) return void this._confirmLockinDuringPause();
                            a.logger.trace("Calling service to lock roster");
                            const e = this.get("clashService"),
                                t = this.get("currentRoster.id");
                            return e.lockin(t)
                        })).catch((() => {
                            a.logger.trace("Party leave rejected")
                        }))
                    })).catch((() => {
                        a.logger.trace("Defaults rejected")
                    }));
                    a.Util.setBoolDuringPromise(e, this, "isCallInProgress")
                },
                onBackClick() {
                    if (!this.get("isBackButtonEnabled")) return;
                    this.get("isLockedIn") ? this._confirmBackOutOfRoster() : this.get("canLeaveRoster") && this._confirmLeaveRoster()
                },
                _confirmBackOutOfRoster() {
                    let e = this.get("confirmBackOutDialog");
                    if (e) return;
                    const t = this.get("clashService"),
                        n = this.get("tra.clash_action_timeline_back_out_roster_title"),
                        s = this.get("tra.clash_action_timeline_back_out_roster");
                    e = a.ModalManager.add({
                        type: "DialogConfirm",
                        data: {
                            contents: a.UIKit.getTemplateHelper().contentBlockDialog(n, s),
                            acceptText: this.get("tra.lib_ui_dialog_alert_ok"),
                            declineText: this.get("tra.clash_button_cancel"),
                            closeButton: !1
                        }
                    }), this.set("confirmBackOutDialog", e), this.set("lastDialogModal", e);
                    const i = e.acceptPromise.then((() => {
                        this._destroyDialog("confirmBackOutDialog");
                        const e = this.get("currentRoster.id");
                        return t.unlockin(e)
                    })).catch((() => {
                        this._destroyDialog("confirmBackOutDialog")
                    }));
                    a.Util.setBoolDuringPromise(i, this, "isCallInProgress")
                },
                _confirmLockinDuringPause() {
                    let e = this.get("lockinDuringPauseDialog");
                    if (e) return;
                    const t = this.get("clashService"),
                        n = {};
                    n.title = this.get("tra.clash_action_lockin_during_pause_title"), n.text = this.get("tra.clash_action_lockin_during_pause_description"), e = a.ModalManager.add({
                        type: "DialogConfirm",
                        data: {
                            contents: a.Util.createDomNode(h(n)),
                            acceptText: this.get("tra.clash_action_lockin_during_pause_confirm"),
                            declineText: this.get("tra.clash_action_lockin_during_pause_cancel"),
                            closeButton: !1
                        }
                    }), this.set("lockinDuringPauseDialog", e), this.set("lastDialogModal", e);
                    const s = e.acceptPromise.then((() => {
                        this._destroyDialog("lockinDuringPauseDialog");
                        const e = this.get("currentRoster.id");
                        return t.lockin(e)
                    })).catch((() => {
                        this._destroyDialog("lockinDuringPauseDialog")
                    }));
                    a.Util.setBoolDuringPromise(s, this, "isCallInProgress")
                },
                _confirmLeaveRoster() {
                    let e = this.get("confirmLeaveDialog");
                    if (e) return;
                    const t = this.get("clashService"),
                        n = this.get("tra.clash_action_timeline_leave_roster_title"),
                        s = this.get("tra.clash_action_timeline_leave_roster");
                    e = a.ModalManager.add({
                        type: "DialogConfirm",
                        data: {
                            contents: a.UIKit.getTemplateHelper().contentBlockDialog(n, s),
                            acceptText: this.get("tra.lib_ui_dialog_confirm_accept"),
                            declineText: this.get("tra.lib_ui_dialog_confirm_decline"),
                            closeButton: !1
                        }
                    }), this.set("confirmLeaveDialog", e), this.set("lastDialogModal", e);
                    const i = e.acceptPromise.then((() => {
                        this._destroyDialog("confirmLeaveDialog");
                        const e = this.get("currentRoster.id");
                        return t.leave(e)
                    })).catch((() => {
                        this._destroyDialog("confirmLeaveDialog")
                    }));
                    a.Util.setBoolDuringPromise(i, this, "isCallInProgress")
                },
                _destroyDialog(e) {
                    const t = this.get(e);
                    t && (a.ModalManager.remove(t), this.set(e, null), t === this.get("lastDialogModal") && this.set("lastDialogModal", null))
                },
                _getPhaseFullText: function(e) {
                    if (!e) return this.get("tra.clash_error_PHASE_FULL_description");
                    const t = e.get("currentPhase"),
                        n = e.get("nextPhase");
                    if (!n) return this.get("tra.clash_error_PHASE_FULL_description");
                    const a = t && t.period !== n.period,
                        i = t && t.limitTiers && t.limitTiers.length && n.limitTiers && n.limitTiers.length,
                        o = e.get("locale"),
                        r = e.getDateString(o, n.lockinStartTime, {
                            weekday: "long"
                        }),
                        l = e.convertTimestampToLocalTime(o, n.lockinStartTime),
                        c = s.ROMAN_NUMERALS[t ? t.getLowestLimitTier() : 0],
                        d = s.ROMAN_NUMERALS[n ? n.getLowestLimitTier() : 0],
                        m = a || !i ? "clash_modal_phase_full_next_day_description" : "clash_modal_phase_full_description";
                    return this.get("tra").formatString(m, {
                        oldTier: c,
                        newTier: d,
                        day: r,
                        time: l
                    })
                }
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<lol-uikit-content-block \r\n  id="clash-leave-gameflow-lobby-dialog" \r\n  class="clash-leave-gameflow-lobby-dialog" \r\n  type="dialog-small">\r\n  <h4>' + c(typeof(i = null != (i = n.title || (null != t ? t.title : t)) ? i : r) === l ? i.call(o, {
                        name: "title",
                        hash: {},
                        data: s
                    }) : i) + "</h4>\r\n  <p>" + c(typeof(i = null != (i = n.text || (null != t ? t.text : t)) ? i : r) === l ? i.call(o, {
                        name: "text",
                        hash: {},
                        data: s
                    }) : i) + "</p>\r\n</lol-uikit-content-block>\r\n"
                },
                useData: !0
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<lol-uikit-content-block \r\n  id="clash-leave-gameflow-lobby-dialog" \r\n  class="clash-leave-gameflow-lobby-dialog" \r\n  type="dialog-large">\r\n  <h4>' + c(typeof(i = null != (i = n.title || (null != t ? t.title : t)) ? i : r) === l ? i.call(o, {
                        name: "title",
                        hash: {},
                        data: s
                    }) : i) + "</h4>\r\n  <p>" + c(typeof(i = null != (i = n.text || (null != t ? t.text : t)) ? i : r) === l ? i.call(o, {
                        name: "text",
                        hash: {},
                        data: s
                    }) : i) + "</p>\r\n</lol-uikit-content-block>\r\n"
                },
                useData: !0
            })
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i, o = null != t ? t : e.nullContext || {},
                        r = n.helperMissing,
                        l = "function",
                        c = e.escapeExpression;
                    return '<lol-uikit-content-block class="clash-defaults-dialog" type="dialog-small">\r\n  <h4>' + c(typeof(i = null != (i = n.title || (null != t ? t.title : t)) ? i : r) === l ? i.call(o, {
                        name: "title",
                        hash: {},
                        data: s
                    }) : i) + "</h4>\r\n  <p>" + c(typeof(i = null != (i = n.information || (null != t ? t.information : t)) ? i : r) === l ? i.call(o, {
                        name: "information",
                        hash: {},
                        data: s
                    }) : i) + '</p>\r\n  <div class="details">\r\n    <div class="icon">\r\n      <img src="' + c(typeof(i = null != (i = n.logoPath || (null != t ? t.logoPath : t)) ? i : r) === l ? i.call(o, {
                        name: "logoPath",
                        hash: {},
                        data: s
                    }) : i) + '">\r\n    </div>\r\n    <h4 class="name">\r\n      ' + c(typeof(i = null != (i = n.name || (null != t ? t.name : t)) ? i : r) === l ? i.call(o, {
                        name: "name",
                        hash: {},
                        data: s
                    }) : i) + '\r\n    </h4>\r\n    <h4 class="tag">\r\n      ' + c(typeof(i = null != (i = n.shortName || (null != t ? t.shortName : t)) ? i : r) === l ? i.call(o, {
                        name: "shortName",
                        hash: {},
                        data: s
                    }) : i) + "\r\n    </h4>\r\n  </div>\r\n  <p>" + c(typeof(i = null != (i = n.confirmation || (null != t ? t.confirmation : t)) ? i : r) === l ? i.call(o, {
                        name: "confirmation",
                        hash: {},
                        data: s
                    }) : i) + "</p>\r\n</lol-uikit-content-block>\r\n"
                },
                useData: !0
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(388)) && a.__esModule ? a : {
                    default: a
                };
            e.exports = i.default.extend({
                name: "matchmaking",
                useCloseButton: !1,
                hideButton: !0,
                buttonContainerContent: s.Ember.computed("name", "estimatedBracketFormationWaitTime", (function() {
                    const e = this.get("estimatedBracketFormationWaitTime"),
                        t = s.Ember.$(document.createElement("div")),
                        n = s.Ember.$(document.createElement("div")),
                        a = s.Ember.$(document.createElement("div")),
                        i = s.Ember.$(document.createElement("img"));
                    return t.addClass("clash-bracket-estimate"), n.addClass("title"), i.addClass("icon"), a.addClass("body"), a.append(i), t.append(n), t.append(a), n.text(this.get("tra.clash_action_timeline_state_matchmaking_title")), a.text(this.get("tra").formatString("clash_action_timeline_state_matchmaking_duration", {
                        minutes: e
                    })), t.get(0).outerHTML
                })),
                estimatedBracketFormationWaitTime: s.Ember.computed("currentRoster.tier", "tournament.tierConfigs", (function() {
                    const e = this.get("currentRoster.tier") || 1,
                        t = (this.get("tournament.tierConfigs") || []).find((t => String(t.tier) === String(e)));
                    return Math.max(t ? t.estimateTime / 6e4 : 1, 1)
                })),
                shouldShowTimer: !0
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(388)) && a.__esModule ? a : {
                    default: a
                };
            e.exports = i.default.extend({
                name: "paused",
                useCloseButton: !1,
                hideButton: !0,
                buttonContainerContent: s.Ember.computed("name", (function() {
                    return this.get("tra.clash_action_timeline_state_paused_tooltip")
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n(1);
            var a, s = (a = n(388)) && a.__esModule ? a : {
                default: a
            };
            e.exports = s.default.extend({
                name: "resuming",
                useCloseButton: !1,
                hideButton: !0,
                shouldShowTimer: !0
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = r(n(388)),
                i = r(n(10)),
                o = n(9);

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = s.default.extend({
                name: "scouting",
                useCloseButton: !1,
                showForwardTooltip: !1,
                isForwardButtonEnabled: a.Ember.computed.equal("tournament.state", i.default.Tournament.SCOUTING),
                onForwardClick() {
                    if (!this.get("isForwardButtonEnabled")) return;
                    this.get("clashNav").selectTab(o.ClashTab.BRACKET);
                    const e = this.get("localPlayer.roster.id"),
                        t = this.get("localPlayer.nextMatch.rosterId1"),
                        n = this.get("localPlayer.nextMatch.rosterId2");
                    let s = null,
                        i = null;
                    if (String(e) === String(t) ? (s = this.get("localPlayer.nextMatch.roster2"), i = n) : (s = this.get("localPlayer.nextMatch.roster1"), i = t), s) {
                        const e = {
                            tournament: this.get("tournament"),
                            roster: s
                        };
                        this.get("telemetryService").sendEvent("ScoutingEntered", {
                            rosterId: i,
                            source: "action-timeline"
                        }), a.PrivateAPI._scoutTeam(e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = r(n(388)),
                i = r(n(10)),
                o = n(9);

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = s.default.extend({
                name: "scouting_waiting",
                useCloseButton: !1,
                isForwardButtonEnabled: a.Ember.computed.equal("tournament.state", i.default.Tournament.SCOUTING),
                localPlayerState: a.Ember.computed.alias("clashService.localPlayer.state"),
                headlineTitleText: a.Ember.computed.alias("tra.clash_action_timeline_state_title_scouting_waiting"),
                isButtonContainerVisible: a.Ember.computed("localPlayerState", (function() {
                    return this.get("localPlayerState") === i.default.Player.BRACKET_ROSTER
                })),
                onForwardClick() {
                    if (!this.get("isForwardButtonEnabled")) return;
                    this.get("clashNav").selectTab(o.ClashTab.BRACKET)
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = (a = n(388)) && a.__esModule ? a : {
                    default: a
                },
                i = n(9);
            e.exports = s.default.extend({
                name: "view_team",
                useCloseButton: !1,
                forwardButtonType: "",
                isForwardButtonEnabled: !0,
                onForwardClick() {
                    this.get("clashNav").selectTab(i.ClashTab.TEAM)
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(404), e.exports = a.Ember.Component.extend({
                classNames: ["clash-tournament-selector"],
                layout: n(405),
                clashService: a.Ember.inject.service("clash"),
                tournamentInfos: a.Ember.computed("clashService.currentTournamentIds.[]", (function() {
                    const e = this.get("clashService.currentTournamentIds");
                    return e.sort(((e, t) => t - e)), a._.map(e, (e => ({
                        id: e,
                        selected: e === this.get("clashService.tournamentId")
                    })))
                })),
                showSelector: a.Ember.computed("tournamentInfos", (function() {
                    const e = this.get("tournamentInfos");
                    return e && e.length > 1
                })),
                actions: {
                    selectTournament(e) {
                        a.logger.trace(`selecting tournamentId [${e}] via tournament-selector`), this.attrs.selectTournament(e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "leCxi0z4",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-selector\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-selector\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-selector\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["showSelector"]]],null,1]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["info","selected"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"selectTournament",["get",["info","id"]]],null],null],["flush-element"],["text","\\n          "],["append",["unknown",["info","id"]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":["info"]},{"statements":[["text","  "],["open-element","lol-uikit-flat-dropdown",[]],["static-attr","class","clash-tournament-selector-dropdown"],["static-attr","direction","upward"],["flush-element"],["text","\\n"],["text","    "],["open-element","lol-uikit-dropdown-optgroup",[]],["static-attr","slot","lol-uikit-dropdown-optgroup"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","lol-uikit-dropdown-optgroup-header"],["static-attr","slot","lol-uikit-dropdown-optgroup-header"],["flush-element"],["text","\\n        "],["append",["unknown",["tra","clash_tournament_selector_title"]],false],["text","\\n      "],["close-element"],["text","\\n"],["block",["each"],[["get",["tournamentInfos"]]],null,0],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(407), e.exports = a.Ember.Component.extend({
                classNames: ["winners-roster-component"],
                layout: n(408),
                clashService: a.Ember.inject.service("clash"),
                gdsService: a.Ember.inject.service("gds"),
                winnerData: null,
                rosterId: a.Ember.computed.alias("winnerData.rosterId"),
                isMine: a.Ember.computed.alias("winnerData.isMine"),
                isFriend: a.Ember.computed.alias("winnerData.isFriend"),
                rosterName: a.Ember.computed("winnerData", (function() {
                    const e = this.get("winnerData");
                    return e ? e.name : ""
                })),
                rosterShortName: a.Ember.computed("winnerData", (function() {
                    const e = this.get("winnerData");
                    return e ? e.shortName : ""
                })),
                logoId: a.Ember.computed("winnerData", (function() {
                    const e = this.get("winnerData");
                    return e ? e.logo : 0
                })),
                logoColorId: a.Ember.computed("winnerData", (function() {
                    const e = this.get("winnerData");
                    return e ? e.logoColor : 0
                })),
                rosterLogoPath: a.Ember.computed("logoId", "logoColorId", "gdsService.ready", (function() {
                    if (!this.get("gdsService.ready")) return "";
                    const e = this.get("logoId"),
                        t = this.get("logoColorId");
                    return this.get("gdsService").getLogoPath(e, t)
                })),
                averageWinDuration: a.Ember.computed("winnerData", (function() {
                    const e = this.get("winnerData");
                    if (e) {
                        let t = e.averageWinDuration / 6e4;
                        const n = a.Util.padZeros(Math.floor(60 * (t - Math.floor(t))));
                        t = a.Util.padZeros(Math.floor(t));
                        const s = this.get("tra").formatString("clash_hall_of_champions_time_mmss", {
                            minutes: t,
                            seconds: n
                        });
                        return this.get("tra").formatString("clash_hall_of_champions_roster_avg_win_duration", {
                            duration: s
                        })
                    }
                    return ""
                })),
                handleRosterStatsSuccess(e) {
                    a.PrivateAPI._tournamentOverview({
                        source: "winners-roster",
                        rosterStats: e
                    })
                },
                handleRosterStatsFail() {},
                actions: {
                    showOverview() {
                        const e = this.get("rosterId");
                        if (e) {
                            this.get("clashService").getRosterStats(e).then(this.handleRosterStatsSuccess.bind(this), this.handleRosterStatsFail.bind(this))
                        }
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "jqapxCiX",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\winners-roster\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\winners-roster\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\winners-roster\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","winners-roster-wrapper"],["modifier",["action"],[["get",[null]],"showOverview"]],["flush-element"],["text","\\n  "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["rosterLogoPath"]]]]],["static-attr","width","70px"],["static-attr","height","70px"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","winners-roster-text-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","winners-roster-name-container"],["flush-element"],["text","\\n      "],["open-element","span",[]],["static-attr","class","winners-roster-short-name"],["flush-element"],["append",["unknown",["rosterShortName"]],false],["close-element"],["text"," "],["append",["unknown",["rosterName"]],false],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","winners-roster-win-container"],["flush-element"],["text","\\n      "],["append",["unknown",["averageWinDuration"]],false],["text","\\n"],["block",["if"],[["get",["isMine"]]],null,2,1],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","winners-roster-friend-icon"],["static-attr","src","/fe/lol-clash/assets/images/winners/roster-friend-icon.svg"],["flush-element"],["close-element"],["text","\\n      "]],"locals":[]},{"statements":[["block",["if"],[["get",["isFriend"]]],null,0]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","winners-roster-friend-icon"],["static-attr","src","/fe/lol-clash/assets/images/winners/roster-me-icon.svg"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(410);
            var s = n(9);
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-capsule-progress"],
                layout: n(411),
                tournament: null,
                localPlayer: null,
                clashService: a.Ember.inject.service("clash"),
                bracketSizeProgression: a.Ember.computed.alias("tournament.bracketSizeProgression"),
                numRemainingPeriods: a.Ember.computed.alias("tournament.numRemainingPeriods"),
                numCompletedPeriods: a.Ember.computed.alias("localPlayer.roster.numCompletedPeriods"),
                currentBracketWins: a.Ember.computed.alias("localPlayer.roster.currentBracketWins"),
                currentRosterPoints: a.Ember.computed.alias("localPlayer.roster.points"),
                currentBuyin: a.Ember.computed.alias("localPlayer.currentBuyin"),
                buyinType: a.Ember.computed.alias("localPlayer.buyinType"),
                previewBuyin: a.Ember.computed.alias("localPlayer.bidPreview"),
                previewTicketType: a.Ember.computed.alias("localPlayer.bidPreviewTicketType"),
                entryFee: a.Ember.computed.alias("tournament.entryFee"),
                currentBracketSize: a.Ember.computed("bracketSizeProgression.[]", "currentRosterPoints", "tournament.phases.@each.cancelled", (function() {
                    const e = this.get("bracketSizeProgression");
                    if (!e || !e.length) return 0;
                    const t = a.Util.getSortedPhases(this.get("tournament.phases")),
                        n = a._.uniqBy(t, (e => e.period)).filter((e => e.cancelled)).length,
                        s = (this.get("currentRosterPoints") || 0) + n;
                    return e[Math.min(s, e.length - 1)]
                })),
                is16Team: a.Ember.computed.equal("currentBracketSize", 16),
                is8Team: a.Ember.computed.equal("currentBracketSize", 8),
                is4Team: a.Ember.computed.equal("currentBracketSize", 4),
                isBuyinZero: a.Ember.computed("currentBuyin", "previewBuyin", (function() {
                    const e = this.get("previewBuyin") || this.get("currentBuyin") || 0;
                    return 0 === Number(e)
                })),
                isBuyinEntry: a.Ember.computed("previewTicketType", "previewBuyin", "buyinType", "currentBuyin", "entryFee", (function() {
                    const e = this.get("previewBuyin") || this.get("currentBuyin") || 0,
                        t = this.get("entryFee") || 1,
                        n = this.get("previewTicketType") || this.get("buyinType");
                    return Number(e) === Number(t) && n !== s.TicketType.PREMIUM
                })),
                isBuyinAboveEntry: a.Ember.computed("previewTicketType", "previewBuyin", "buyinType", "currentBuyin", "entryFee", (function() {
                    const e = this.get("previewBuyin") || this.get("currentBuyin") || 0,
                        t = this.get("entryFee") || 1,
                        n = this.get("previewTicketType") || this.get("buyinType");
                    return Number(e) > Number(t) || n === s.TicketType.PREMIUM
                })),
                carouselItems: a.Ember.computed("bracketSizeProgression.[]", "currentBuyin", "numRemainingPeriods", "currentBracketWins", "numCompletedPeriods", "currentBracketSize", (function() {
                    const e = this.get("bracketSizeProgression");
                    if (!e || !e.length) return [];
                    const t = [],
                        n = this.get("currentBracketWins") || 0,
                        a = this.get("currentBracketSize"),
                        s = (i = a, Math.log2(i));
                    var i;
                    const o = Math.min(n, s);
                    return t.push({
                        title: this.get("tra").formatString("clash_capsule_progress_item_title", {
                            bracketSize: a
                        }),
                        wins: o,
                        maxWins: s,
                        isInitiallySelected: !0,
                        isComplete: !1
                    }), t
                })),
                onBuyinChanged: a.Ember.computed("currentBuyin", (function() {
                    if (this.get("currentBuyin") < this.get("entryFee")) return;
                    const e = this.$(".clash-capsule-progress-change-bid-animation");
                    e && e.length && e.get(0) && e.get(0).play()
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "CURHuBZG",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\capsule-progress\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\capsule-progress\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\capsule-progress\\\\index.js\\" "],["text","\\n"],["append",["unknown",["onBuyinChanged"]],false],["text","\\n"],["block",["clash-carousel"],null,[["itemData","useButtonsOnContent","useButtonsOnNav","wrapStyle"],[["get",["carouselItems"]],false,true,"disable"]],19],["open-element","lol-uikit-video",[]],["static-attr","class","clash-capsule-progress-change-bid-animation"],["static-attr","fade-in","0"],["static-attr","fade-out","0"],["static-attr","src","/fe/lol-clash/assets/animations/videos/roster/prizeUpdateMagic.webm"],["static-attr","preload",""],["flush-element"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","            "],["open-element","h6",[]],["flush-element"],["append",["unknown",["tra","clash_orb_progress_tooltip_title"]],false],["close-element"],["text","\\n            "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_orb_progress_tooltip_description"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","h6",[]],["flush-element"],["append",["unknown",["tra","clash_capsule_progress_tooltip_title"]],false],["close-element"],["text","\\n            "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_capsule_progress_tooltip_description"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isBuyinAboveEntry"]]],null,1,0],["text","        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","clash-capsule-progress-reward orb"],["static-attr","src","/fe/lol-clash/assets/images/capsule-progress/0-bid.png"],["flush-element"],["close-element"],["text","\\n      "]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","clash-capsule-progress-reward orb"],["static-attr","src","/fe/lol-clash/assets/images/capsule-progress/orb_blue.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isBuyinEntry"]]],null,4,3]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","clash-capsule-progress-reward capsule"],["static-attr","src","/fe/lol-clash/assets/images/capsule-progress/capsule_blue.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isBuyinAboveEntry"]]],null,6,5],["text","    "]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","clash-capsule-progress-reward orb"],["static-attr","src","/fe/lol-clash/assets/images/capsule-progress/0-bid.png"],["flush-element"],["close-element"],["text","\\n      "]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","clash-capsule-progress-reward orb"],["static-attr","src","/fe/lol-clash/assets/images/capsule-progress/orb_purple.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isBuyinEntry"]]],null,9,8]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","clash-capsule-progress-reward capsule"],["static-attr","src","/fe/lol-clash/assets/images/capsule-progress/capsule_purple.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isBuyinAboveEntry"]]],null,11,10]],"locals":[]},{"statements":[["block",["if"],[["get",["is8Team"]]],null,12,7]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","clash-capsule-progress-reward orb"],["static-attr","src","/fe/lol-clash/assets/images/capsule-progress/0-bid.png"],["flush-element"],["close-element"],["text","\\n      "]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","clash-capsule-progress-reward orb"],["static-attr","src","/fe/lol-clash/assets/images/capsule-progress/orb_orange.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isBuyinEntry"]]],null,15,14]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","clash-capsule-progress-reward capsule"],["static-attr","src","/fe/lol-clash/assets/images/capsule-progress/capsule_orange.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isBuyinAboveEntry"]]],null,17,16]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-capsule-progress-content"],["flush-element"],["text","\\n"],["text","    "],["open-element","img",[]],["static-attr","class","clash-capsule-progress-progression"],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/images/capsule-progress/Progression_",["unknown",["data","maxWins"]],".",["unknown",["data","wins"]],".png"]]],["flush-element"],["close-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-capsule-progress-background"],["static-attr","src","/fe/lol-clash/assets/images/capsule-progress/reward_frame_capsule.png"],["flush-element"],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["is16Team"]]],null,18,13],["text","    "],["open-element","div",[]],["static-attr","class","clash-capsule-progress-tooltip-container"],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["type","tooltipPosition"],["system","top"]],2],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":["data"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(413), e.exports = a.Ember.Component.extend({
                classNames: ["clash-underlined-selector"],
                layout: n(414),
                title: null,
                options: [],
                elements: [],
                onSelectOption: null,
                actions: {
                    selectOption(e) {
                        const t = this.get("onSelectOption");
                        if (t) {
                            const n = this.get("options");
                            n && e >= 0 && e < n.length && t(n[e])
                        }
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "TJ7BypRa",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\underlined-selector\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\underlined-selector\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\underlined-selector\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["title"]]],null,1],["block",["each"],[["helper",["-each-in"],[["get",["options"]]],null]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-underlined-selector-button"],["flush-element"],["text","\\n    "],["append",["helper",["generic-button"],null,[["text","isEnabled","canBeSelected","triggerSelected","selectionGroup","onSelected","onClickSound"],[["get",["option","name"]],["get",["option","enabled"]],["get",["option","enabled"]],["get",["option","selected"]],"options",["helper",["action"],[["get",[null]],"selectOption",["get",["index"]]],null],"text-click-small"]]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":["index","option"]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-underlined-selector-button clash-underlined-selector-title-button"],["flush-element"],["text","\\n    "],["append",["helper",["generic-button"],null,[["text","isEnabled","canBeSelected"],[["get",["title"]],false,false]]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(2)) && a.__esModule ? a : {
                    default: a
                };
            n(416);
            const o = (0, s.emberDataBinding)({
                Ember: s.Ember,
                websocket: (0, s.getProvider)().getSocket(),
                basePaths: {
                    gameData: "/lol-game-data"
                },
                boundProperties: {
                    bannersGameData: {
                        api: "gameData",
                        path: "/assets/v1/summoner-banners.json",
                        default: {}
                    }
                }
            });
            e.exports = s.Ember.Component.extend(o, {
                classNames: ["clash-vp-progress"],
                layout: n(417),
                clashService: s.Ember.inject.service("clash"),
                tournament: s.Ember.computed.alias("clashService.tournament"),
                localPlayer: s.Ember.computed.alias("clashService.localPlayer"),
                gdsService: s.Ember.inject.service("gds"),
                themeComplete: !1,
                isClashRewardsModalEnabled: s.Ember.computed.alias("clashService.isClashRewardsModalEnabled"),
                themeVpText: s.Ember.computed("themeVp", "themeVpNextOrMax", (function() {
                    const e = this.get("themeVp"),
                        t = this.get("themeVpNextOrMax");
                    return t ? `${Math.min(e,t)}/${t}` : null
                })),
                noMoreRewardProgressAvailable: s.Ember.computed("themeComplete", "rewardsComplete", (function() {
                    return this.get("themeComplete") && !this.get("rewardsComplete")
                })),
                rewardsComplete: s.Ember.computed("previousVpReward", "nextVpReward", (function() {
                    return this.get("previousVpReward") && !this.get("nextVpReward")
                })),
                vpPercent: s.Ember.computed("themeVp", "previousVpReward", "themeVpNextOrMax", (function() {
                    const e = this.get("themeVp"),
                        t = this.get("previousVpReward"),
                        n = this.get("themeVpNextOrMax"),
                        a = t ? t.vp : 0,
                        s = e - a,
                        i = n - a;
                    return i <= 0 ? 100 : Math.max(Math.min(s / i * 100, 100), 0)
                })),
                isFlagReward: s.Ember.computed("rewardToDisplay", (function() {
                    const e = this.get("rewardToDisplay");
                    return e && "FLAG" === e.rewardType
                })),
                isLogoReward: s.Ember.computed("rewardToDisplay", (function() {
                    const e = this.get("rewardToDisplay");
                    return e && "LOGO" === e.rewardType
                })),
                vpRewardImage: s.Ember.computed("bannersGameData.BannerFlags.[]", "rewardToDisplay", "gdsService.ready", (function() {
                    const e = this.get("rewardToDisplay");
                    if (!e) return null;
                    if ("FLAG" === e.rewardType) {
                        const t = this.get("bannersGameData.BannerFlags");
                        if (!t) return null;
                        const n = s._.first(s._.filter(t, {
                            theme: e.theme,
                            level: Number(e.level)
                        }));
                        return n ? n.inventoryIcon : null
                    }
                    return "LOGO" === e.rewardType && this.get("gdsService.ready") ? this.get("gdsService").getLogoPath(e.id, e.colorId) : null
                })),
                themeVp: s.Ember.computed("localPlayer.themeVp.@each.vp", "tournament.themeId", (function() {
                    const e = this.get("localPlayer.themeVp"),
                        t = this.get("tournament.themeId");
                    if (!e || !t) return 0;
                    for (let n = 0; n < e.length; ++n)
                        if (e[n].themeId === t) return e[n].vp;
                    return 0
                })),
                themeVpNextOrMax: s.Ember.computed("nextVpReward", "previousVpReward", (function() {
                    const e = this.get("nextVpReward");
                    if (e) return e.vp;
                    const t = this.get("previousVpReward");
                    return t ? t.vp : 0
                })),
                vpRewards: s.Ember.computed("tournament.themeId", "tournament.rewardConfig.[]", (function() {
                    const e = this.get("tournament.themeId"),
                        t = this.get("tournament.rewardConfig");
                    if (!e || !t) return [];
                    for (let e = 0; e < t.length; ++e) {
                        const n = t[e];
                        if ("VP Payout" === n.name) return this._convertRewardEntriesToVPRewards(n.entries)
                    }
                    return []
                })),
                previousVpReward: s.Ember.computed("themeVp", "vpRewards", (function() {
                    const e = this.get("themeVp") || 0,
                        t = this.get("vpRewards");
                    if (!t) return null;
                    let n = null;
                    for (let a = 0; a < t.length; ++a) {
                        const s = t[a];
                        e >= s.vp && (!n || n.vp < s.vp) && (n = s)
                    }
                    return n
                })),
                rewardToDisplay: s.Ember.computed("nextVpReward", "previousVpReward", (function() {
                    const e = this.get("nextVpReward");
                    return e || this.get("previousVpReward")
                })),
                nextVpReward: s.Ember.computed("themeVp", "vpRewards", (function() {
                    const e = this.get("themeVp") || 0,
                        t = this.get("vpRewards");
                    if (!t) return null;
                    for (let n = 0; n < t.length; ++n) {
                        const a = t[n];
                        if (e < a.vp) return a
                    }
                    return null
                })),
                _convertRewardEntriesToVPRewards(e) {
                    const t = [];
                    for (let n = 0; n < e.length; ++n) {
                        const a = e[n],
                            s = Number(a.key);
                        if (i.default.isNumberOk(s) && a.vals)
                            for (let e = 0; e < a.vals.length; ++e) {
                                const n = a.vals[e] ? a.vals[e].primary : null,
                                    i = a.vals[e] ? a.vals[e].alternative : null;
                                let o = null,
                                    r = null;
                                n && "FLAG" === n.rewardType ? (o = n.rewardSpec, r = n.rewardType) : i && "FLAG" === i.rewardType ? (o = i.rewardSpec, r = i.rewardType) : n && "LOGO" === n.rewardType ? (o = n.rewardSpec, r = n.rewardType) : i && "LOGO" === i.rewardType && (o = i.rewardSpec, r = i.rewardType), o && r && ("FLAG" === r ? t.push(this._makeVpFlagReward(s, r, o.theme, o.seasonId, o.level)) : "LOGO" === r && t.push(this._makeVpLogoReward(s, r, o.name, 1)))
                            }
                    }
                    return t
                },
                _makeVpFlagReward: (e, t, n, a, s) => ({
                    vp: e,
                    rewardType: t,
                    theme: n,
                    seasonId: a,
                    level: s
                }),
                _makeVpLogoReward: (e, t, n, a) => ({
                    vp: e,
                    rewardType: t,
                    id: n,
                    colorId: a
                }),
                actions: {
                    showClashRewardsModal: function() {
                        s.PrivateAPI._forceShowClashRewardsModal()
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "AFqOX2Xf",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\vp-progress\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\vp-progress\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\vp-progress\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["themeVpText"]]],null,11]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","lol-uikit-info-icon",[]],["static-attr","class","rewards-modal-question-mark"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"showClashRewardsModal"],null],null],["flush-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n          "],["open-element","h6",[]],["flush-element"],["append",["unknown",["tra","clash_victory_points_display_tooltip_title"]],false],["close-element"],["text","\\n          "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_victory_points_display_tooltip_description"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","slot","middle"],["static-attr","class","middle vp-progress-item vp-progress-percent"],["flush-element"],["close-element"],["text","\\n      "]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","slot","middle"],["static-attr","class","middle vp-progress-item vp-progress-complete"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["noMoreRewardProgressAvailable"]]],null,3,2]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","slot","middle"],["static-attr","class","middle vp-progress-item vp-progress-complete"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","img",[]],["static-attr","class","vp-reward-complete-black-cover"],["static-attr","src","/fe/lol-clash/assets/images/celebration/black-circle.png"],["flush-element"],["close-element"],["text","\\n          "],["open-element","img",[]],["static-attr","class","vp-reward-complete-image"],["static-attr","src","/fe/lol-clash/assets/images/celebration/reward_complete_checkmark.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","img",[]],["static-attr","class","vp-reward-image-logo"],["dynamic-attr","src",["concat",[["unknown",["vpRewardImage"]]]]],["flush-element"],["close-element"],["text","\\n        "]],"locals":[]},{"statements":[["block",["if"],[["get",["isLogoReward"]]],null,7]],"locals":[]},{"statements":[["text","          "],["open-element","img",[]],["static-attr","class","vp-reward-image-flag"],["static-attr","src","/fe/lol-clash/assets/placeholder/rewards/background.jpg"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","vp-reward-image-flag banner"],["dynamic-attr","style",["concat",["background-image:url(\'",["unknown",["vpRewardImage"]],"\')"]]],["flush-element"],["close-element"],["text","\\n          "],["open-element","img",[]],["static-attr","class","vp-reward-image-flag"],["static-attr","src","/fe/lol-clash/assets/placeholder/rewards/BANNER_FLAG_shadow.png"],["flush-element"],["close-element"],["text","\\n          "],["open-element","img",[]],["static-attr","class","vp-reward-image-flag"],["static-attr","src","/fe/lol-clash/assets/placeholder/rewards/BANNER_FLAG_frame_default.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",["vp-reward-image-container ",["helper",["if"],[["get",["noMoreRewardProgressAvailable"]],"desaturate"],null]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["isFlagReward"]]],null,9,8],["block",["if"],[["get",["rewardsComplete"]]],null,6],["text","      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","vp-progress-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["vpRewardImage"]]],null,10],["text","    "],["open-element","lol-uikit-radial-progress",[]],["static-attr","class","vp-progress-circle"],["static-attr","type","custom"],["static-attr","start-angle","260"],["static-attr","end-angle","-80"],["dynamic-attr","percent",["unknown",["vpPercent"]],null],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","slot","bottom"],["static-attr","class","bottom vp-progress-item vp-progress-background"],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["rewardsComplete"]]],null,5,4],["text","    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-vp-progress-tooltip-container"],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],1],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","text-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","vp-progress-text"],["flush-element"],["text","\\n      "],["append",["unknown",["themeVpText"]],false],["text","\\n"],["block",["if"],[["get",["isClashRewardsModalEnabled"]]],null,0],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(419)) && a.__esModule ? a : {
                    default: a
                };
            n(420), e.exports = s.Ember.Component.extend({
                classNames: ["clash-carousel"],
                layout: n(421),
                itemData: [],
                wrapStyle: i.default.DISABLE,
                useButtonsOnContent: !1,
                useButtonsOnNav: !1,
                selectedItem: null,
                hasItemsLeft: s.Ember.computed("selectedItem._id", (function() {
                    return this.get("selectedItem._id") > 0
                })),
                hasItemsRight: s.Ember.computed("selectedItem._id", "items.[]", (function() {
                    return this.get("selectedItem._id") < this.get("items.length") - 1
                })),
                isWrapStyleHide: s.Ember.computed.equal("wrapStyle", i.default.HIDE),
                isWrapStyleDisable: s.Ember.computed.equal("wrapStyle", i.default.DISABLE),
                isNotWrapStyleHide: s.Ember.computed.not("isWrapStyleHide"),
                isNotWrapStyleDisable: s.Ember.computed.not("isWrapStyleDisable"),
                isLeftButtonEnabled: s.Ember.computed.or("isNotWrapStyleDisable", "hasItemsLeft"),
                isRightButtonEnabled: s.Ember.computed.or("isNotWrapStyleDisable", "hasItemsRight"),
                isLeftButtonVisible: s.Ember.computed.or("isNotWrapStyleHide", "hasItemsLeft"),
                isRightButtonVisible: s.Ember.computed.or("isNotWrapStyleHide", "hasItemsRight"),
                items: s.Ember.computed("itemData", "itemData.[]", "itemData.@each", (function() {
                    const e = [],
                        t = this.get("itemData");
                    let n = 0;
                    for (let a = 0; a < t.length; ++a) {
                        const i = s.Ember.Object.create({
                            data: t[a]
                        });
                        i.data.set && "function" == typeof i.data.set || (i.data = s.Ember.Object.create(i.data)), i.set("_id", a);
                        (i.data.isInitiallySelected || !1) && (n = a), e.push(i)
                    }
                    return s.Ember.run.next((() => this._selectItem(n))), e
                })),
                _selectItem(e) {
                    const t = this.get("items");
                    if (!s.Util.isNumberOk(e) || e < 0 || e >= t.length) return;
                    const n = this.get("selectedItem");
                    n && n.set("_isSelected", !1);
                    const a = t[e];
                    this.set("selectedItem", a), a.set("_isSelected", !0)
                },
                _getSelectedIndex() {
                    return this.get("selectedItem._id")
                },
                actions: {
                    moveLeft() {
                        const e = this._getSelectedIndex();
                        if (e > 0) return void this._selectItem(e - 1);
                        if (this.get("wrapStyle") === i.default.WRAP) {
                            const e = this.get("items.length");
                            this._selectItem(e - 1)
                        }
                    },
                    moveRight() {
                        const e = this._getSelectedIndex();
                        if (e < this.get("items.length") - 1) return void this._selectItem(e + 1);
                        this.get("wrapStyle") === i.default.WRAP && this._selectItem(0)
                    }
                }
            })
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = Object.freeze({
                DISABLE: "disable",
                HIDE: "hide",
                WRAP: "wrap"
            });
            t.default = n
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "AxxB6l5g",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\clash-carousel\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\clash-carousel\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\clash-carousel\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-carousel-content"],["flush-element"],["text","\\n"],["text","  "],["open-element","lol-uikit-section-controller",[]],["static-attr","animation","none"],["dynamic-attr","selected-item",["concat",["carousel-",["unknown",["selectedItem","_id"]]]]],["static-attr","class","clash-carousel-section-controller"],["flush-element"],["text","\\n"],["block",["each"],[["get",["items"]]],[["key"],["_id"]],4],["text","  "],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","clash-carousel-content-buttons"],["flush-element"],["text","\\n"],["block",["if"],[["get",["useButtonsOnContent"]]],null,3],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-carousel-nav ",["helper",["if"],[["get",["useButtonsOnNav"]],"use-buttons-on-nav"],null]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["useButtonsOnNav"]]],null,2],["text","\\n"],["text","  "],["open-element","div",[]],["static-attr","clash","clash-carousel-nav-info-section"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-carousel-nav-item-title"],["flush-element"],["append",["unknown",["selectedItem","data","title"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-carousel-nav-pips-container"],["flush-element"],["text","\\n"],["block",["each"],[["get",["items"]]],[["key"],["_id"]],1],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["useButtonsOnNav"]]],null,0],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":["default"],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-carousel-nav-button"],["flush-element"],["text","\\n      "],["append",["helper",["clash-carousel-button"],null,[["isLeft","isEnabled","isButtonVisible","onClick"],[false,["get",["isRightButtonEnabled"]],["get",["isRightButtonVisible"]],["helper",["action"],[["get",[null]],"moveRight"],null]]]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-carousel-nav-pip ",["helper",["if"],[["get",["item","_isSelected"]],"clash-carousel-nav-pip-selected"],null]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":["item"]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-carousel-nav-button"],["flush-element"],["text","\\n      "],["append",["helper",["clash-carousel-button"],null,[["isLeft","isEnabled","isButtonVisible","onClick"],[true,["get",["isLeftButtonEnabled"]],["get",["isLeftButtonVisible"]],["helper",["action"],[["get",[null]],"moveLeft"],null]]]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["append",["helper",["clash-carousel-button"],null,[["isLeft","isEnabled","isButtonVisible","onClick"],[true,["get",["isLeftButtonEnabled"]],["get",["isLeftButtonVisible"]],["helper",["action"],[["get",[null]],"moveLeft"],null]]]],false],["text","\\n"],["text","      "],["append",["helper",["clash-carousel-button"],null,[["isLeft","isEnabled","isButtonVisible","onClick"],[false,["get",["isRightButtonEnabled"]],["get",["isRightButtonVisible"]],["helper",["action"],[["get",[null]],"moveRight"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-section",[]],["dynamic-attr","section-id",["concat",["carousel-",["unknown",["item","_id"]]]]],["static-attr","class","clash-carousel-item"],["flush-element"],["text","\\n        "],["yield","default",[["get",["item","data"]]]],["text","\\n      "],["close-element"],["text","\\n"]],"locals":["item"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(423), e.exports = a.Ember.Component.extend({
                classNames: ["clash-carousel-button"],
                classNameBindings: ["isButtonVisible:clash-carousel-button-is-visible"],
                layout: n(424),
                isLeft: !0,
                isEnabled: !0,
                isButtonVisible: !0,
                isImgFlippedX: a.Ember.computed.not("isLeft")
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "V882Beei",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\clash-carousel\\\\clash-carousel-button\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\clash-carousel\\\\clash-carousel-button\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\clash-carousel\\\\clash-carousel-button\\\\index.js\\" "],["text","\\n"],["append",["helper",["generic-button"],null,[["onClick","onHoverSound","onClickSound","baseImgPath","overImgPath","downImgPath","disabledImgPath","isEnabled","isImgFlippedX"],[["arg",["onClick"]],"button-circlegold-hover","button-circlegold-click","/fe/lol-clash/assets/images/buttons/button-framedarrow.png","/fe/lol-clash/assets/images/buttons/button-framedarrow-over.png","/fe/lol-clash/assets/images/buttons/button-framedarrow-down.png","/fe/lol-clash/assets/images/buttons/button-framedarrow-disabled.png",["get",["isEnabled"]],["get",["isImgFlippedX"]]]]],false],["text","\\n"]],"locals":[],"named":["onClick"],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9),
                i = r(n(2));
            n(426);
            var o = r(n(89));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-hub-roster"],
                layout: n(427),
                clashNav: a.Ember.inject.service("clash-nav"),
                rosterStats: null,
                roster: null,
                isPending: !1,
                isCurrent: !1,
                tournamentName: a.Ember.computed("rosterStats", "rosterStats.tournamentNameLocKey", (function() {
                    const e = this.get("tra"),
                        t = this.get("rosterStats.tournamentNameLocKey");
                    return o.default.getTournamentLocalizedName(e, t)
                })),
                tournamentDay: a.Ember.computed("rosterStats", "rosterStats.tournamentNameLocKeySecondary", (function() {
                    const e = this.get("tra"),
                        t = this.get("rosterStats.tournamentNameLocKeySecondary");
                    return o.default.getTournamentLocalizedSecondary(e, t)
                })),
                tournamentFullName: a.Ember.computed("tournamentName", "tournamentDay", (function() {
                    const e = this.get("tournamentName"),
                        t = this.get("tournamentDay");
                    return this.get("tra").formatString("clash_tournament_history_tournament_title", {
                        name: e,
                        week: t
                    })
                })),
                tournamentDaysHistorical: a.Ember.computed("rosterStats", (function() {
                    const e = this.get("rosterStats");
                    if (!e || !e.periodStats) return [];
                    const t = [];
                    for (let n = 0; n < e.tournamentPeriods; ++n) {
                        const s = a._.find(e.periodStats, (e => e.period === n));
                        t.push(this._makeDayDataFromPeriodStat(n, s, Boolean(s), !1, !0))
                    }
                    return t
                })),
                tournamentDaysCurrent: a.Ember.computed("rosterStats", "roster.phaseInfos", "roster.phaseInfos.[]", "roster.tournament.phases", "roster.tournament.phases.[]", "roster.tournament.tournamentStateInfo.state", (function() {
                    this.get("roster.tournament.tournamentStateInfo.state");
                    const e = this.get("rosterStats"),
                        t = this.get("roster.phaseInfos"),
                        n = this.get("roster.tournament.phases"),
                        a = i.default.getCurrentTime();
                    let s = -1;
                    for (const e of n) s = Math.max(s, e.period);
                    const o = [];
                    for (let i = 0; i <= s; ++i) {
                        const s = t ? t.find((e => e.period === i)) : null;
                        if (s) {
                            const t = s.isBracketComplete;
                            o.push(this._makeDayDataFromRosterStatsForPeriod(i, e, !0, !1, t))
                        } else {
                            const e = this._getLastPhaseForPeriod(n, i);
                            if (e) {
                                const t = e.scoutingStartTime > a,
                                    n = !t;
                                o.push(this._makeDayData(i, 0, 0, 0, !1, t, n))
                            }
                        }
                    }
                    return o
                })),
                trophyImgId: a.Ember.computed("isPending", "tournamentDaysHistorical", (function() {
                    const e = this.get("isPending"),
                        t = this.get("tournamentDaysHistorical");
                    if (e || !t) return "pending";
                    let n = 0;
                    for (let e = 0; e < t.length; ++e) {
                        const a = t[e];
                        if (a.bracketSize && a.bracketSize > n) {
                            const e = Math.floor(Math.log2(a.bracketSize));
                            0 === a.losses && a.wins >= e && (n = a.bracketSize)
                        }
                    }
                    return n
                })),
                _getLastPhaseForPeriod(e, t) {
                    if (!e) return null;
                    let n = null;
                    for (const a of e) a.period === t && (!n || a.scoutingStartTime > n.scoutingStartTime) && (n = a);
                    return n
                },
                _makeDayDataFromRosterStatsForPeriod(e, t, n, s, i) {
                    if (t && t.periodStats) {
                        const o = a._.find(t.periodStats, (t => t.period === e));
                        return this._makeDayDataFromPeriodStat(e, o, n, s, i)
                    }
                    return this._makeDayDataFromPeriodStat(e, null, n, s, i)
                },
                _makeDayDataFromPeriodStat(e, t, n, a, s) {
                    let i = 0,
                        o = 0,
                        r = 0;
                    if (t) {
                        if (t.matchStats)
                            for (let e = 0; e < t.matchStats.length; ++e) {
                                const n = t.matchStats[e];
                                i += n.win ? 1 : 0, o += n.win ? 0 : 1
                            }
                        r = t.bracketSize
                    }
                    return this._makeDayData(e, i, o, r, n, a, s)
                },
                _makeDayData: (e, t, n, a, s, i, o) => ({
                    day: e + 1,
                    wins: t,
                    losses: n,
                    bracketSize: a,
                    isParticipant: s,
                    isUpcoming: i,
                    isComplete: o
                }),
                click() {
                    const e = this.get("isCurrent"),
                        t = this.get("isPending"),
                        n = this.get("rosterStats");
                    if (e || t) {
                        const e = this.get("clashNav");
                        e.enableTab(s.ClashTab.TEAM), e.selectTab(s.ClashTab.TEAM)
                    } else n && a.PrivateAPI._tournamentOverview({
                        source: "hub-roster",
                        rosterStats: n
                    })
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "1L90NMDz",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-roster\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-roster\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-roster\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["roster"]]],null,5,4],["open-element","div",[]],["static-attr","class","hub-roster-record"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","hub-roster-record-text-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","hub-roster-record-tournament-name"],["flush-element"],["text","\\n      "],["append",["unknown",["tournamentFullName"]],false],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","hub-roster-record-tournament-days"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isCurrent"]]],null,3,1],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","hub-roster-record-trophy"],["flush-element"],["text","\\n    "],["open-element","img",[]],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/images/hub/trophies/trophy_",["unknown",["trophyImgId"]],".png"]]],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["append",["helper",["hub-roster-record-day"],null,[["dayData"],[["get",["day"]]]]],false],["text","\\n"]],"locals":["day"]},{"statements":[["block",["each"],[["get",["tournamentDaysHistorical"]]],null,0]],"locals":[]},{"statements":[["text","          "],["append",["helper",["hub-roster-record-day"],null,[["dayData"],[["get",["day"]]]]],false],["text","\\n"]],"locals":["day"]},{"statements":[["block",["each"],[["get",["tournamentDaysCurrent"]]],null,2]],"locals":[]},{"statements":[["text","  "],["append",["helper",["hub-roster-details"],null,[["name","shortName","logoId","logoColorId","tier","isPending"],[["get",["rosterStats","rosterName"]],["get",["rosterStats","rosterShortName"]],["get",["rosterStats","rosterIconId"]],["get",["rosterStats","rosterIconColorId"]],["get",["rosterStats","tier"]],["get",["isPending"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["append",["helper",["hub-roster-details"],null,[["name","shortName","logoId","logoColorId","tier","isPending"],[["get",["roster","name"]],["get",["roster","shortName"]],["get",["roster","iconId"]],["get",["roster","chromaId"]],["get",["roster","tier"]],["get",["isPending"]]]]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9);
            n(429), e.exports = a.Ember.Component.extend({
                classNames: ["clash-hub-roster-details"],
                layout: n(430),
                name: null,
                shortName: null,
                logoId: s.INVALID_LOGO_ID,
                logoColorId: s.INVALID_LOGO_COLOR_ID,
                tier: null,
                isPending: !1,
                showCaret: !1,
                gdsService: a.Ember.inject.service("gds"),
                hasIcon: a.Ember.computed.gt("logoId", s.INVALID_LOGO_ID),
                iconPath: a.Ember.computed("logoId", "logoColorId", "gdsService.ready", (function() {
                    if (!this.get("gdsService.ready")) return "";
                    const e = this.get("logoId"),
                        t = this.get("logoColorId");
                    return this.get("gdsService").getLogoPath(e, t)
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "mo2imGhI",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-roster\\\\hub-roster-details\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-roster\\\\hub-roster-details\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-roster\\\\hub-roster-details\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["showCaret"]]],null,1],["open-element","div",[]],["dynamic-attr","class",["concat",["hub-roster-details-icon ",["helper",["if"],[["get",["isPending"]],"pending-icon"],null]]]],["flush-element"],["text","\\n  "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["iconPath"]]]]],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","hub-roster-details-name-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["hub-roster-details-name ",["helper",["if"],[["get",["isPending"]],"pending-text"],null]]]],["flush-element"],["text","\\n    "],["append",["helper",["if"],[["get",["name"]],["get",["name"]],["get",["tra","clash_roster_details_placeholder_team_name"]]],null],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","hub-roster-details-name-container-bottom"],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["hub-roster-details-short-name ",["helper",["if"],[["get",["isPending"]],"pending-text"],null]]]],["flush-element"],["text","\\n      "],["append",["helper",["if"],[["get",["shortName"]],["get",["shortName"]],["get",["tra","clash_roster_details_placeholder_team_tag"]]],null],false],["text","\\n    "],["close-element"],["text","\\n"],["block",["if"],[["get",["tier"]]],null,0],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-roster-details-team-tier"],["flush-element"],["append",["helper",["tier-placement"],null,[["rosterTier"],[["get",["tier"]]]]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","hub-roster-details-caret"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/hub/current-caret.png"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(432), e.exports = a.Ember.Component.extend({
                classNames: ["clash-hub-roster-record-day"],
                layout: n(433),
                dayData: null,
                isParticipant: a.Ember.computed.bool("dayData.isParticipant"),
                isUpcoming: a.Ember.computed.bool("dayData.isUpcoming"),
                isComplete: a.Ember.computed.bool("dayData.isComplete"),
                noLosses: a.Ember.computed.equal("dayData.losses", 0),
                dayName: a.Ember.computed("dayData", (function() {
                    const e = this.get("dayData");
                    if (!e) return "";
                    const {
                        day: t
                    } = e;
                    return this.get("tra").formatString("clash_tournament_day", {
                        day: t
                    })
                })),
                dayScore: a.Ember.computed("dayData", (function() {
                    const e = this.get("dayData");
                    if (!e) return "";
                    const {
                        wins: t
                    } = e, {
                        losses: n
                    } = e;
                    return this.get("tra").formatString("clash_tournament_history_day_record", {
                        wins: t,
                        losses: n
                    })
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "7FpYdwvo",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-roster\\\\hub-roster-record-day\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-roster\\\\hub-roster-record-day\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-roster\\\\hub-roster-record-day\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","hub-roster-record-day-name"],["flush-element"],["text","\\n  "],["append",["unknown",["dayName"]],false],["text","\\n"],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["isParticipant"]]],null,7,2]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["comment"," day is over, i missed it "],["text","\\n      -\\n"]],"locals":[]},{"statements":[["text","      "],["comment"," day is still upcoming "],["text","\\n      "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/hub/pending.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","hub-roster-record-day-score"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isUpcoming"]]],null,1,0],["text","  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["comment"," participating, ongoing "],["text","\\n    "],["open-element","div",[]],["static-attr","class","hub-roster-record-day-score"],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/hub/in-progress.png"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["comment"," lost this day "],["text","\\n      "],["open-element","div",[]],["static-attr","class","hub-roster-record-day-score"],["flush-element"],["text","\\n        "],["append",["unknown",["dayScore"]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["comment"," won this day "],["text","\\n      "],["open-element","div",[]],["static-attr","class","hub-roster-record-day-score-win"],["flush-element"],["text","\\n        "],["append",["unknown",["dayScore"]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["noLosses"]]],null,5,4]],"locals":[]},{"statements":[["block",["if"],[["get",["isComplete"]]],null,6,3]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(11)) && a.__esModule ? a : {
                    default: a
                };
            n(435), e.exports = s.Ember.Component.extend({
                classNames: ["clash-day-planner"],
                layout: n(436),
                tournament: null,
                isRosterEliminated: !1,
                warningPhaseId: -1,
                isInteractive: !0,
                sortedPeriods: [],
                sortedPhases: [],
                tournamentId: s.Ember.computed.alias("tournament.id"),
                phases: s.Ember.computed.alias("tournament.phases"),
                state: s.Ember.computed.alias("tournament.state"),
                tournamentObserver: s.Ember.computed("tournament.id", "phases", "phases.[]", "phases.@each.{id,cancelled,lockinStartTime,scoutingStartTime}", (function() {
                    const e = this.get("phases"),
                        t = this.get("tournamentId");
                    if (!e || !e.length || !s.Util.isNumberOk(t)) return;
                    i.default.addTournament(t);
                    const n = i.default.organizePhasesByDay(e);
                    this.set("sortedPeriods", n.sortedPeriods), this.set("sortedPhases", n.sortedPhases)
                })),
                hasRemainingPeriods: s.Ember.computed.bool("tournament.numRemainingPeriods")
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "KP6CCrcl",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\day-planner\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\day-planner\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\day-planner\\\\index.js\\" "],["text","\\n"],["append",["unknown",["tournamentObserver"]],false],["text","\\n"],["block",["each"],[["get",["sortedPeriods"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["append",["helper",["day-planner-node"],null,[["tournament","isRosterEliminated","sortedPeriods","sortedPhases","index","period","warningPhaseId","isInteractive"],[["get",["tournament"]],["get",["isRosterEliminated"]],["get",["sortedPeriods"]],["get",["sortedPhases"]],["get",["index"]],["get",["period"]],["get",["warningPhaseId"]],["get",["isInteractive"]]]]],false],["text","\\n"]],"locals":["period","index"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = r(n(11)),
                i = r(n(10)),
                o = r(n(91));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            n(438);
            const l = n(439);
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-day-planner-node"],
                classNameBindings: ["isActive:active", "isInteractive:interactive"],
                layout: n(440),
                tournament: null,
                isRosterEliminated: !1,
                warningPhaseId: -1,
                isInteractive: !0,
                sortedPeriods: [],
                sortedPhases: [],
                index: 0,
                tournamentId: a.Ember.computed.alias("tournament.id"),
                currentPhaseId: a.Ember.computed.alias("tournament.currentPhaseId"),
                nextPhaseId: a.Ember.computed.alias("tournament.nextPhaseId"),
                state: a.Ember.computed.alias("tournament.state"),
                scoutingDurationMs: a.Ember.computed.alias("tournament.scoutingDurationMs"),
                localPlayer: a.Ember.computed("tournament", (function() {
                    const e = this.get("tournament");
                    return e ? o.default.create({
                        tournament: e
                    }) : null
                })),
                isRosterRegistered: a.Ember.computed.alias("localPlayer.roster.isRegistered"),
                rosterStats: a.Ember.computed("localPlayer", "localPlayer.roster.id", "localPlayer.history.[]", (function() {
                    const e = this.get("localPlayer");
                    return e ? e.getCurrentTournamentRosterStats() : null
                })),
                periodStats: a.Ember.computed.alias("rosterStats.periodStats"),
                currentPeriodHistory: a.Ember.computed("rosterStats", "currentPhase", (function() {
                    const e = this.get("periodStats"),
                        t = this.get("currentPhase");
                    return e && t ? e.find((e => e.period === t.period)) : null
                })),
                currentPhase: a.Ember.computed("sortedPhases", "currentPhaseId", (function() {
                    const e = parseInt(this.get("currentPhaseId")) || -1,
                        t = this.get("sortedPhases");
                    return t && t.length ? t.find((t => t.id === e)) : {}
                })),
                nextPhase: a.Ember.computed("sortedPhases", "nextPhaseId", (function() {
                    const e = parseInt(this.get("nextPhaseId")) || -1,
                        t = this.get("sortedPhases");
                    return t && t.length ? t.find((t => t.id === e)) : {}
                })),
                tooltipObserver: a.Ember.computed("isInteractive", "tournament", "nodePosition", "dayStatus", "state", "periodStats", "sortedPhases.[]", "currentPhase.period", (function() {
                    if (!this.get("isInteractive")) return void this._clearTooltip();
                    const e = this.get("dayStatus"),
                        t = this.get("state"),
                        n = this.get("sortedPhases"),
                        s = this.get("tournament");
                    e && t && n && n.length && s && a.Ember.run.next((() => {
                        const e = this.$();
                        e && e.length && this._updateTooltip(e)
                    }))
                })),
                onWillDestroyElement: a.Ember.on("willDestroyElement", (function() {
                    const e = this.$();
                    a.TooltipManager.unassign(e)
                })),
                day: a.Ember.computed("index", (function() {
                    const e = this.get("index");
                    return a.Util.isNumberOk(e) ? parseInt(e) + 1 : "-"
                })),
                dayTxt: a.Ember.computed("day", (function() {
                    const e = this.get("day");
                    return this.get("tra").formatString("clash_tournament_day", {
                        day: e
                    })
                })),
                nodePosition: a.Ember.computed("index", "sortedPeriods.[]", (function() {
                    const e = this.get("index"),
                        t = this.get("sortedPeriods");
                    return 0 === e ? s.default.NODE_POSITIONS.Left : e >= t.length - 1 ? s.default.NODE_POSITIONS.Right : s.default.NODE_POSITIONS.Center
                })),
                myPhase: a.Ember.computed("tournamentId", "sortedPeriods.[]", "sortedPhases.[]", "index", "currentPhaseId", "nextPhaseId", "state", "sortedPhases.@each.cancelled", (function() {
                    const e = this.get("index"),
                        t = this.get("sortedPeriods"),
                        n = this.get("state"),
                        o = this.get("sortedPhases");
                    if (!o || !o.length) return {};
                    const r = this.get("currentPhase"),
                        l = this.get("nextPhase");
                    let c, d = null;
                    if (e >= 0 && e <= o.length) {
                        const n = t[e];
                        for (const e of o)
                            if (e.period === n) {
                                d = a._.cloneDeep(e);
                                break
                            }
                    }
                    if (d && d.cancelled) c = s.default.DAY_STATUS.Cancelled;
                    else if (n === i.default.Tournament.IDLE && r && l && r.period >= 0 && r.period === l.period) {
                        const e = this.get("isRosterRegistered"),
                            t = this.get("currentPeriodHistory");
                        c = e && t ? s.default.DAY_STATUS.Present : s.default.DAY_STATUS.Future
                    } else {
                        const n = r ? t.indexOf(r.period) : -1;
                        c = n === e ? s.default.DAY_STATUS.Present : n > e ? s.default.DAY_STATUS.Past : s.default.DAY_STATUS.Future
                    }
                    return d ? (d.set("dayStatus", c), d) : {
                        dayStatus: c
                    }
                })),
                dayStatus: a.Ember.computed.alias("myPhase.dayStatus"),
                isPresentDay: a.Ember.computed.equal("dayStatus", s.default.DAY_STATUS.Present),
                hasWarning: a.Ember.computed.gt("warningPhaseId", -1),
                showWarning: a.Ember.computed("hasWarning", "warningPhaseId", "myPhase.id", (function() {
                    const e = this.get("myPhase.id"),
                        t = this.get("hasWarning"),
                        n = this.get("warningPhaseId");
                    return t && e === n
                })),
                isActive: a.Ember.computed("isPresentDay", "hasWarning", "showWarning", (function() {
                    const e = this.get("hasWarning"),
                        t = this.get("showWarning");
                    return e ? t : this.get("isPresentDay")
                })),
                isComplete: a.Ember.computed("dayStatus", "state", (function() {
                    const e = this.get("dayStatus"),
                        t = this.get("state");
                    return e === s.default.DAY_STATUS.Past || e === s.default.DAY_STATUS.Present && t === i.default.Tournament.IDLE
                })),
                isCancelled: a.Ember.computed.equal("dayStatus", s.default.DAY_STATUS.Cancelled),
                hasNoWarning: a.Ember.computed.not("hasWarning"),
                isShowComplete: a.Ember.computed.and("isComplete", "hasNoWarning"),
                _updateTooltip(e) {
                    const t = this.get("sortedPeriods"),
                        n = this.get("sortedPhases"),
                        i = this.get("nodePosition"),
                        o = this.get("dayStatus"),
                        r = this.get("state"),
                        c = this.get("index"),
                        d = this.get("isRosterEliminated"),
                        m = this.get("tournament.scoutingDurationMs") || 0,
                        u = this.get("tournament"),
                        p = this.get("tournament.locale"),
                        h = this.get("periodStats");
                    let g = this.get("currentPhaseId") || -1;
                    g = parseInt(g);
                    let f = this.get("nextPhaseId") || -1;
                    f = parseInt(f);
                    const _ = s.default.getLocParams(c, t, n, g, f, m, u, p),
                        b = s.default.getLocKey(c, o, r, t, n, f, d, h),
                        x = s.default.DAY_PLANNER_LOC_KEY_MAPPING[b];
                    if (!x) return;
                    const y = this.get("tra").formatString("clash_tournament_day", _),
                        k = this.get("tra").formatString(`clash_day_planner_${x}`, _),
                        v = a.Util.createDomNode(l({}));
                    this.$(v).find("#title").html(y), this.$(v).find("#body").html(k), a.TooltipManager.unassign(e), a.TooltipManager.assign(e, v, {}, s.default.TOOLTIP_POSITION[i]), this.get("isActive") && this._autoShowPopup(e, b)
                },
                _clearTooltip() {
                    const e = this.$();
                    a.TooltipManager.unassign(e)
                },
                _autoShowPopup(e, t) {
                    const n = this.get("tournamentId");
                    s.default.hasAutoShown(n, t) || (s.default.isPopupEnabled() ? (s.default.setAutoShown(n, t), s.default.startAutoShowTooltip(a.TooltipManager, e), a.Ember.run.later((() => {
                        s.default.stopAutoShowTooltip()
                    }), 7500)) : s.default.addOneTimeEnabledCallback(this._autoShowPopup.bind(this, e, t)))
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            var a = n(17);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    return '<lol-uikit-tooltip>\r\n  <lol-uikit-content-block type="dialog-small" style="padding:18px">\r\n    <h6 style="text-align:left" id="title"></h6>\r\n    <p style="text-align:left;margin-top:5px" id="body"></p>\r\n  </lol-uikit-content-block>\r\n</lol-uikit-tooltip>'
                },
                useData: !0
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "vV0UCJfn",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\day-planner\\\\day-planner-node\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\day-planner\\\\day-planner-node\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\day-planner\\\\day-planner-node\\\\index.js\\" "],["text","\\n"],["append",["unknown",["tooltipObserver"]],false],["text","\\n"],["block",["if"],[["get",["isCancelled"]]],null,5,4]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-day-planner-node-text"],["flush-element"],["append",["unknown",["dayTxt"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-day-planner-node-complete"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isShowComplete"]]],null,1,0]],"locals":[]},{"statements":[["text","  "],["open-element","img",[]],["static-attr","class","clash-day-planner-node-warning"],["static-attr","src","/fe/lol-clash/assets/images/AlertIcon.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["showWarning"]]],null,3,2]],"locals":[]},{"statements":[["text","  "],["open-element","img",[]],["static-attr","class","clash-day-planner-node-warning"],["static-attr","src","/fe/lol-clash/assets/images/xmark.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9);
            n(442), e.exports = a.Ember.Component.extend({
                classNames: ["clash-hub-roster-current"],
                layout: n(443),
                clashService: a.Ember.inject.service("clash"),
                clashNav: a.Ember.inject.service("clash-nav"),
                roster: null,
                rosterMembers: a.Ember.computed.alias("roster.members"),
                localPlayerSummonerId: a.Ember.computed.alias("clashService.localPlayer.summonerId"),
                click() {
                    if (this.get("roster")) {
                        const e = this.get("clashNav");
                        e.enableTab(s.ClashTab.TEAM), e.selectTab(s.ClashTab.TEAM)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "rr4GRaV0",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-roster-current\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-roster-current\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-roster-current\\\\index.js\\" "],["text","\\n"],["open-element","video",[]],["static-attr","id","hub-roster-current-background-animation"],["static-attr","autoplay",""],["static-attr","preload","auto"],["static-attr","loop",""],["flush-element"],["text","\\n  "],["open-element","source",[]],["static-attr","src","/fe/lol-clash/assets/animations/videos/hub/active_tournament_loop.webm"],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["append",["helper",["hub-roster-details"],null,[["name","shortName","logoId","logoColorId","tier","isPending","showCaret"],[["get",["roster","name"]],["get",["roster","shortName"]],["get",["roster","iconId"]],["get",["roster","chromaId"]],["get",["roster","tier"]],["get",["isPending"]],true]]],false],["text","\\n"],["open-element","div",[]],["static-attr","class","hub-roster-current-icons"],["flush-element"],["text","\\n"],["block",["each"],[["get",["rosterMembers"]]],null,2],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","hub-roster-current-icon"],["flush-element"],["text","\\n        "],["append",["helper",["member-summoner"],null,[["summonerId","localPlayerSummonerId","allowLeftClick"],[["get",["member","summonerId"]],["get",["localPlayerSummonerId"]],false]]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[],"locals":[]},{"statements":[["block",["if"],[["get",["member","isPending"]]],null,1,0]],"locals":["member","index"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(445);
            const s = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                boundProperties: {
                    playerRewards: {
                        path: "/lol-clash/v1/rewards",
                        default: {
                            earnedRewards: [],
                            seasonRewards: [],
                            seasonVp: 0,
                            themeVp: {}
                        }
                    }
                }
            });
            e.exports = a.Ember.Component.extend(s, {
                classNames: ["clash-season-vp-display"],
                layout: n(446),
                clashService: a.Ember.inject.service("clash"),
                isClashRewardsModalEnabled: a.Ember.computed.alias("clashService.isClashRewardsModalEnabled"),
                seasonVp: a.Ember.computed.alias("playerRewards.seasonVp"),
                actions: {
                    showClashRewardsModal: function() {
                        a.PrivateAPI._forceShowClashRewardsModal()
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "q6oxP6J+",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\season-vp-display\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\season-vp-display\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\season-vp-display\\\\index.js\\" "],["text","\\n"],["open-element","img",[]],["static-attr","class","clash-season-vp-display-header"],["static-attr","src","/fe/lol-clash/assets/images/login-modal/wordmark-01.svg"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-season-vp-display-vp-images"],["flush-element"],["text","\\n  "],["open-element","img",[]],["static-attr","class","clash-season-vp-display-vp-img-frame"],["static-attr","src","/fe/lol-clash/assets/images/HUB_Framing.png"],["flush-element"],["close-element"],["text","\\n  "],["open-element","img",[]],["static-attr","class","clash-season-vp-display-vp-img-logo"],["static-attr","src","/fe/lol-clash/assets/images/clash_logo_large-01.svg"],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-season-vp-display-vp-amount"],["flush-element"],["append",["unknown",["seasonVp"]],false],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-season-vp-display-vp-text"],["flush-element"],["append",["unknown",["tra","clash_hub_player_rewards_season_vp"]],false],["text","\\n"],["block",["if"],[["get",["isClashRewardsModalEnabled"]]],null,0],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-season-vp-display-my-tickets"],["flush-element"],["append",["unknown",["my-tickets-container"]],false],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","lol-uikit-info-icon",[]],["static-attr","class","rewards-modal-question-mark"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"showClashRewardsModal"],null],null],["flush-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(448);
            var s = n(9);
            const i = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                boundProperties: {
                    playerData: {
                        path: "/lol-clash/v1/player",
                        default: {
                            tickets: 0
                        }
                    },
                    storePageLink: {
                        path: "/lol-platform-config/v1/namespaces/ClashConfig/StorePageLink",
                        default: "tickets"
                    },
                    areTicketPurchasesDisabled: {
                        path: "/lol-platform-config/v1/namespaces/ClashConfig/AreTicketPurchasesDisabled",
                        default: !1
                    }
                }
            });
            e.exports = a.Ember.Component.extend(i, {
                classNames: ["clash-my-tickets-container"],
                layout: n(449),
                telemetryService: a.Ember.inject.service("telemetry"),
                isTicketPurchaseButtonEnabled: a.Ember.computed.not("areTicketPurchasesDisabled"),
                tickets: a.Ember.computed.alias("playerData.tickets"),
                ticketTypes: [s.TicketType.BASIC, s.TicketType.PREMIUM],
                ticketsInfo: a.Ember.computed("tickets", "tickets.BASIC", "tickets.PREMIUM", "ticketTypes", (function() {
                    const e = this.get("tickets");
                    return this.get("ticketTypes").map((t => ({
                        type: t,
                        count: e[t],
                        tooltipHeader: this.get("tra.clash_tournament_info_ticket_button_tooltip_header_" + t)
                    })))
                })),
                actions: {
                    purchaseTicket() {
                        const e = this.get("storePageLink");
                        a.Router.navigateTo("rcp-fe-lol-store", {
                            page: e
                        }), this.get("telemetryService").sendEvent("TicketsButtonClicked")
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "WfM6Hcea",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\my-tickets-container\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\my-tickets-container\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\my-tickets-container\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","my-tickets-button"],["flush-element"],["text","\\n"],["append",["helper",["generic-button"],null,[["baseImgPath","overImgPath","downImgPath","disabledImgPath","isEnabled","onClick","onHoverSound","onClickSound","onClickReleaseSound"],["/fe/lol-clash/assets/images/buttons/button-add-ticket.png","/fe/lol-clash/assets/images/buttons/button-add-ticket-hover.png","/fe/lol-clash/assets/images/buttons/button-add-ticket-click.png","/fe/lol-clash/assets/images/buttons/button-add-ticket-click.png",["get",["isTicketPurchaseButtonEnabled"]],["helper",["action"],[["get",[null]],"purchaseTicket"],null],"grid-hover","purchase-click","grid-click-release"]]],false],["text","\\n"],["close-element"],["text","\\n"],["block",["each"],[["get",["ticketsInfo"]]],null,1]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","my-tickets-ticket-tooltip"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","my-tickets-ticket-tooltip-header"],["flush-element"],["text","\\n              "],["append",["unknown",["ticketInfo","tooltipHeader"]],false],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","clash_tournament_info_ticket_button_tooltip_description_premium"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","my-tickets-ticket-display"],["flush-element"],["text","\\n    "],["open-element","img",[]],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/images/tickets/ticket-mini-",["unknown",["ticketInfo","type"]],"-default.png"]]],["static-attr","class","my-tickets-ticket-icon"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","my-tickets-ticket-counter"],["flush-element"],["text","\\n      "],["append",["unknown",["ticketInfo","count"]],false],["text","\\n    "],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],0],["text","  "],["close-element"],["text","\\n"]],"locals":["ticketInfo"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(10)) && a.__esModule ? a : {
                    default: a
                },
                o = n(9);
            n(451), e.exports = s.Ember.Component.extend({
                classNames: ["clash-capacity-indicator"],
                layout: n(452),
                tournament: null,
                roster: null,
                showCapacityIndicator: s.Ember.computed("tournament.currentPhase", "tournament.state", "roster.isActiveInCurrentPhase", (function() {
                    const e = this.get("tournament.state"),
                        t = this.get("tournament.currentPhase"),
                        n = this.get("roster.isActiveInCurrentPhase");
                    return t && e === i.default.Tournament.LOCK_IN && !n
                })),
                capacityStatus: s.Ember.computed("tournament.currentPhase", "tournament.currentPhase.id", "tournament.currentPhase.capacityStatus", (function() {
                    return (this.get("tournament.currentPhase.capacityStatus") || o.CapacityStatus.LOW).toLowerCase()
                })),
                capacityStatusText: s.Ember.computed("capacityStatus", (function() {
                    const e = this.get("capacityStatus");
                    return this.get(`tra.clash_capacity_${e}`)
                })),
                capacityStatusImage: s.Ember.computed("capacityStatus", (function() {
                    return `/fe/lol-clash/assets/images/capacity/capacity-${this.get("capacityStatus")}.png`
                })),
                tooltipText: s.Ember.computed("showCapacityIndicator", (function() {
                    return this.get("tra").formatString("clash_capacity_indicator_tooltip", {})
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "o7dXTH+W",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\capacity-indicator\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\capacity-indicator\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\capacity-indicator\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["showCapacityIndicator"]]],null,1]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n      "],["open-element","h5",[]],["flush-element"],["append",["unknown",["tra","clash_capacity_indicator_tooltip_title"]],false],["close-element"],["text","\\n      "],["open-element","p",[]],["static-attr","style","margin-top:10px"],["flush-element"],["append",["helper",["sanitize"],[["get",["tooltipText"]]],null],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["capacity-indicator ",["unknown",["capacityStatus"]]]]],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","capacity-indicator-image"],["dynamic-attr","src",["concat",[["unknown",["capacityStatusImage"]]]]],["flush-element"],["close-element"],["text"," "],["append",["unknown",["capacityStatusText"]],false],["text","\\n  "],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],0]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(454), e.exports = a.Ember.Component.extend({
                classNames: ["clash-shuffle-text"],
                layout: n(455),
                locName: "",
                locPrefix: "in-queue",
                isEnabled: !1,
                shuffleCount: 12,
                shuffleFrequencyMs: 5e3,
                didInsertElement() {
                    this._super(...arguments), this.get("isEnabled") && this.startShuffle()
                },
                willDestroyElement() {
                    this.stopShuffle(), this._super(...arguments)
                },
                startShuffle() {
                    const e = [],
                        t = this.get("shuffleCount") || 1;
                    for (let n = 1; n < t; n++) e.push(n);
                    e.sort((() => Math.random() - .5));
                    const n = this.get("shuffleFrequencyMs") || 5e3;
                    this._nameList = e, this._index = 0, this._timer = setInterval((() => this._shuffleLocName()), n)
                },
                stopShuffle() {
                    clearInterval(this._timer)
                },
                _shuffleLocName() {
                    const e = this._nameList;
                    let t = this._index || 0;
                    if (!e) return;
                    t >= e.length && (t = 0);
                    const n = this.get("locPrefix"),
                        a = this.get(`tra.clash_loading_flavor_text_${n}_${e[t]}`);
                    this.set("locName", a), this._index = t + 1
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "ew6wyZle",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\shuffle-text\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\shuffle-text\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\shuffle-text\\\\index.js\\" "],["text","\\n"],["append",["unknown",["locName"]],false]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9),
                i = l(n(10)),
                o = l(n(310));
            l(n(89));
            n(457);
            var r = l(n(87));

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const c = (0, a.emberDataBinding)({
                    Ember: a.Ember,
                    websocket: (0, a.getProvider)().getSocket(),
                    basePaths: {
                        clash: "/lol-clash"
                    }
                }),
                d = "schedule",
                m = "history",
                u = [{
                    locKey: "clash_hub_tab_upcoming",
                    value: d
                }, {
                    locKey: "clash_hub_tab_history",
                    value: m
                }];
            e.exports = a.Ember.Component.extend(c, o.default, r.default, {
                classNames: ["clash-hub-content"],
                layout: n(458),
                appData: null,
                history: [],
                clashService: a.Ember.inject.service("clash"),
                clashNav: a.Ember.inject.service("clash-nav"),
                allTournaments: a.Ember.computed.alias("clashService.allTournaments"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                roster: a.Ember.computed.alias("clashService.localPlayer.roster"),
                locale: a.Ember.computed.alias("tournament.locale"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                playerTier: a.Ember.computed.alias("localPlayer.playerData.tier"),
                showScheduleModal: !1,
                selectedTab: d,
                availableTabs: a.Ember.computed("history", "selectedTab", (function() {
                    const e = this.get("selectedTab"),
                        t = [];
                    return u.forEach((n => {
                        t.push(this._createTabElement(this.get(`tra.${n.locKey}`), n.value, e))
                    })), t
                })),
                isScheduleTabSelected: a.Ember.computed.equal("selectedTab", d),
                isHistoryTabSelected: a.Ember.computed.equal("selectedTab", m),
                currentTournamentSummary: a.Ember.computed.alias("appData.currentTournamentSummary"),
                hasRoster: a.Ember.computed("currentTournamentSummary.rosterId", "roster", (function() {
                    const e = this.get("roster"),
                        t = this.get("currentTournamentSummary.rosterId");
                    return e && t && t !== s.INVALID_ROSTER_ID
                })),
                hasNoRoster: a.Ember.computed.not("hasRoster"),
                isClashBanned: a.Ember.computed.alias("clashService.localPlayer.isClashBanned"),
                isParticipationForbidden: a.Ember.computed.or("isHonorRestricted", "isClashBanned"),
                isRosterPending: a.Ember.computed.alias("roster.isNotRegistered"),
                isRosterCurrent: a.Ember.computed("roster", "hasNoRoster", "isRosterPending", "roster.tournamentId", "tournament.id", "tournament.allowRosterCreation", "tournament.state", (function() {
                    if (this.get("hasNoRoster")) return !1;
                    if (this.get("roster.tournamentId") !== this.get("tournament.id")) return !1;
                    return this.get("isRosterPending") ? this.get("tournament.allowRosterCreation") : this.get("tournament.state") !== i.default.Tournament.RESULTS
                })),
                allowRosterCreation: a.Ember.computed("roster", "hasNoRoster", "tournament.allowRosterCreation", "isParticipationForbidden", (function() {
                    const e = this.get("hasNoRoster"),
                        t = this.get("tournament.allowRosterCreation"),
                        n = this.get("isParticipationForbidden");
                    return t && e && !n
                })),
                currentTournamentDescription: a.Ember.computed("tournament.startDate", "tournament.endDate", "tournament.tierConfigs", "playerTier", (function() {
                    const e = this.get("tournament.startDate"),
                        t = this.get("tournament.endDate");
                    if (!e || !t) return "";
                    let n = "clash_tournament_create_team_description";
                    const a = this.get("tournament.currentPhase"),
                        s = this.get("tournament.nextPhase"),
                        i = this.get("tournament.locale");
                    let o;
                    e === t && (n += "_same_day");
                    const r = a || s;
                    if (r) {
                        const e = this.get("tournament.tierConfigs") || [],
                            t = this.get("playerTier"),
                            a = e && t ? e.find((e => String(e.tier) === String(t))) : {},
                            s = a ? a.delayTime : 0;
                        o = this.get("tournament").convertTimestampToLocalTime(i, r.lockinStartTime + s), n += "_with_time"
                    }
                    return this.get("tra").formatString(n, {
                        startDate: e,
                        endDate: t,
                        time: o
                    })
                })),
                currentTournamentRosterStats: a.Ember.computed("roster.id", "isRosterCurrent", "history", "history.[]", (function() {
                    if (!this.get("isRosterCurrent")) return null;
                    const e = this.get("roster.id");
                    if (!e) return null;
                    const t = this.get("history");
                    for (let n = 0; n < t.length; ++n)
                        if (t[n].rosterId === Number(e)) return t[n];
                    return null
                })),
                historyExceptCurrent: a.Ember.computed("currentTournamentRosterStats", "history", "history.[]", (function() {
                    const e = this.get("currentTournamentRosterStats"),
                        t = e ? e.rosterId : 0;
                    return a._.sortBy(a._.filter(this.get("history"), (e => e.tournamentPeriods > 0 && e.rosterId !== t)), (e => e.endTimeMs)).reverse()
                })),
                _createTabElement(e, t, n) {
                    let a = !0;
                    if (t === m) {
                        const e = this.get("historyExceptCurrent");
                        a = e && e.length
                    }
                    return {
                        name: e,
                        value: t,
                        enabled: a,
                        selected: t === n
                    }
                },
                _createRoster() {
                    const e = this.get("clashService"),
                        t = this.get("tournament.id"),
                        n = e.createRoster(t).then((() => {
                            const e = this.get("clashNav");
                            e.enableTab(s.ClashTab.TEAM), e.selectTab(s.ClashTab.TEAM)
                        }));
                    a.Util.setBoolDuringPromise(n, this, "isCallInProgress")
                },
                actions: {
                    createRoster() {
                        const e = this.get("hasNoRoster"),
                            t = this.get("isCallInProgress");
                        e && !t && this._createRoster()
                    },
                    handleTabSelected(e) {
                        e && e.value && this.get("selectedTab") !== e.value && this.set("selectedTab", e.value)
                    },
                    viewSchedule(e) {
                        this.set("showScheduleModal", !0), this.set("viewScheduleTournament", e)
                    },
                    handleCloseScheduleModal() {
                        this.set("showScheduleModal", !1)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "uUKO5c2x",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-content\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-content\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-content\\\\index.js\\" "],["text","\\n"],["append",["unknown",["nextUpcomingTournamentObserver"]],false],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","tabs"],["flush-element"],["text","\\n  "],["append",["helper",["underlined-selector"],null,[["title","options","onSelectOption"],["",["get",["availableTabs"]],["helper",["action"],[["get",[null]],"handleTabSelected"],null]]]],false],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","content-container"],["flush-element"],["text","\\n\\n"],["block",["if"],[["get",["isScheduleTabSelected"]]],null,2,1],["text","\\n"],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["showScheduleModal"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","lol-uikit-dialog-frame",[]],["static-attr","class","clash-schedule-modal"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-schedule-modal-x-button"],["flush-element"],["text","\\n      "],["append",["helper",["generic-button"],null,[["onClick","baseImgPath","overImgPath","downImgPath","downImgPath","onClickSound","onHoverSound"],[["helper",["action"],[["get",[null]],"handleCloseScheduleModal"],null],"/fe/lol-clash/assets/images/buttons/icon-x.png","/fe/lol-clash/assets/images/buttons/icon-x-over.png","/fe/lol-clash/assets/images/buttons/icon-x-down.png","/fe/lol-clash/assets/images/buttons/icon-x-disabled.png","button-circlegold-click","button-circlegold-hover"]]],false],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-schedule-modal-container"],["flush-element"],["text","\\n      "],["append",["helper",["schedule-graph"],null,[["tournament","showTournamentName"],[["get",["viewScheduleTournament"]],true]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\n    "],["append",["helper",["history-view"],null,[["appData","history"],[["get",["appData"]],["get",["history"]]]]],false],["text","\\n\\n"]],"locals":[]},{"statements":[["text","\\n    "],["append",["helper",["schedule-view"],null,[["appData","history","isRosterCurrent","isRosterPending","isCallInProgress","viewSchedule","createRoster"],[["get",["appData"]],["get",["history"]],["get",["isRosterCurrent"]],["get",["isRosterPending"]],["get",["isCallInProgress"]],["helper",["action"],[["get",[null]],"viewSchedule"],null],["helper",["action"],[["get",[null]],"createRoster"],null]]]],false],["text","\\n\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9),
                i = c(n(310));
            n(460);
            var o = c(n(87)),
                r = c(n(88)),
                l = c(n(10));

            function c(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = a.Ember.Component.extend(i.default, o.default, {
                classNames: ["clash-schedule-view"],
                layout: n(461),
                appData: null,
                history: [],
                isRosterCurrent: !1,
                clashService: a.Ember.inject.service("clash"),
                clashNav: a.Ember.inject.service("clash-nav"),
                allTournaments: a.Ember.computed.alias("clashService.allTournaments"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                roster: a.Ember.computed.alias("clashService.localPlayer.roster"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                playerTier: a.Ember.computed.alias("localPlayer.playerData.tier"),
                hasCurrentOrUpcomingTournament: a.Ember.computed("tournament", "tournament.state", "nextUpcomingTournament", (function() {
                    return this.get("tournament") && this.get("tournament.state") !== l.default.Tournament.RESULTS || this.get("hasUpcomingTournaments")
                })),
                currentTournamentSummary: a.Ember.computed.alias("appData.currentTournamentSummary"),
                hasRoster: a.Ember.computed("currentTournamentSummary.rosterId", "roster", (function() {
                    const e = this.get("roster"),
                        t = this.get("currentTournamentSummary.rosterId");
                    return e && t && t !== s.INVALID_ROSTER_ID
                })),
                hasNoRoster: a.Ember.computed.not("hasRoster"),
                isClashBanned: a.Ember.computed.alias("clashService.localPlayer.isClashBanned"),
                isParticipationForbidden: a.Ember.computed.or("isHonorRestricted", "isClashBanned"),
                allowRosterCreation: a.Ember.computed("roster", "hasNoRoster", "tournament.allowRosterCreation", "isParticipationForbidden", (function() {
                    const e = this.get("hasNoRoster"),
                        t = this.get("tournament.allowRosterCreation"),
                        n = this.get("isParticipationForbidden");
                    return t && e && !n
                })),
                currentTournamentName: a.Ember.computed("tournament.nameLocKey", (function() {
                    const e = this.get("tra"),
                        t = this.get("tournament");
                    if (!this.get("tournament.nameLocKey") || !t || !e) return "";
                    const n = t.getLocalizedName(e),
                        a = t.getLocalizedSecondaryName(e);
                    return this.get("tra").formatString("clash_tournament_history_tournament_title", {
                        name: n,
                        week: a
                    })
                })),
                currentTournamentDescription: a.Ember.computed("tournament.startDate", "tournament.endDate", "tournament.tierConfigs", "playerTier", "tournament.currentPhase", "tournament.nextPhase", "tournament.locale", (function() {
                    const e = this.get("tournament.currentPhase"),
                        t = this.get("tournament.nextPhase"),
                        n = this.get("tournament.endDate"),
                        a = this.get("tournament.locale"),
                        s = e || t;
                    let i = "clash_tournament_create_team_description";
                    if (!s) return "";
                    const o = this.get("tournament.tierConfigs") || [],
                        r = this.get("playerTier"),
                        l = o && r ? o.find((e => String(e.tier) === String(r))) : {},
                        c = l ? l.delayTime : 0,
                        d = this.get("tournament").getMonthDayDate(a, s.lockinStartTime + c);
                    d === n && (i += "_same_day");
                    const m = this.get("tournament").convertTimestampToLocalTime(a, s.lockinStartTime + c);
                    return i += "_with_time", this.get("tra").formatString(i, {
                        startDate: d,
                        endDate: n,
                        time: m
                    })
                })),
                upcomingTournaments: a.Ember.computed("allTournaments", "allTournaments.[]", "allTournaments.@each.state", (function() {
                    const e = this.get("allTournaments") || [],
                        t = Date.now(),
                        n = [];
                    return e.forEach((e => {
                        e.scheduleTime > t && n.push({
                            startTime: e.scheduleTime,
                            tournament: r.default.create({
                                id: e.id
                            })
                        })
                    })), n.sort(((e, t) => e.startTime - t.startTime)), n
                })),
                hasUpcomingTournaments: a.Ember.computed.gt("upcomingTournaments.length", 0),
                actions: {
                    createRoster() {
                        this.sendAction("createRoster")
                    },
                    viewSchedule(e) {
                        this.sendAction("viewSchedule", e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "ch1o6Imw",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-content\\\\schedule-view\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-content\\\\schedule-view\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-content\\\\schedule-view\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["hasCurrentOrUpcomingTournament"]]],null,7,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-schedule-tab-no-tournaments"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-schedule-tab-no-tournaments-img"],["static-attr","src","/fe/lol-clash/assets/images/hub/voice-poro.png"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-schedule-tab-no-tournaments-text"],["flush-element"],["text","\\n      "],["append",["unknown",["tra","clash_no_tournaments_scheduled_text"]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["append",["helper",["upcoming-tournament-entry"],null,[["tournament","viewSchedule"],[["get",["upcomingTournament","tournament"]],["helper",["action"],[["get",[null]],"viewSchedule"],null]]]],false],["text","\\n"]],"locals":["upcomingTournament"]},{"statements":[["text","        "],["open-element","hr",[]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["allowRosterCreation"]]],null,2],["text","      "],["open-element","div",[]],["static-attr","class","heading"],["flush-element"],["append",["unknown",["tra","clash_history_upcoming_tournaments"]],false],["close-element"],["text","\\n"],["block",["each"],[["get",["upcomingTournaments"]]],null,1]],"locals":[]},{"statements":[["text","      "],["comment"," if we don\'t have a current roster, let the player create one from here "],["text","\\n      "],["open-element","div",[]],["static-attr","class","heading"],["flush-element"],["append",["unknown",["tra","clash_history_current_tournament"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["create-team ",["helper",["if"],[["get",["isCallInProgress"]],"call-in-progress"],null]]]],["modifier",["action"],[["get",[null]],"createRoster"]],["flush-element"],["text","\\n        "],["open-element","video",[]],["static-attr","id","create-team-background-animation"],["static-attr","autoplay",""],["static-attr","preload","auto"],["static-attr","loop",""],["flush-element"],["text","\\n          "],["open-element","source",[]],["static-attr","src","/fe/lol-clash/assets/animations/videos/hub/active_tournament_loop.webm"],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","create-team-caret"],["flush-element"],["text","\\n          "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/hub/current-caret.png"],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","create-team-left"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","plus-button"],["flush-element"],["text","\\n            "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/buttons/button-add.png"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","create-team-button-text"],["flush-element"],["text","\\n            "],["append",["unknown",["tra","clash_button_create_team"]],false],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","create-team-right"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","create-team-tournament-name"],["flush-element"],["text","\\n            "],["append",["unknown",["currentTournamentName"]],false],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","create-team-tournament-description"],["flush-element"],["text","\\n            "],["append",["unknown",["currentTournamentDescription"]],false],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "]],"locals":[]},{"statements":[["block",["if"],[["get",["allowRosterCreation"]]],null,4]],"locals":[]},{"statements":[["text","      "],["comment"," if we have a current roster, display it at the top in a separate heading "],["text","\\n      "],["open-element","div",[]],["static-attr","class","heading"],["flush-element"],["append",["unknown",["tra","clash_history_current_tournament"]],false],["close-element"],["text","\\n      "],["append",["helper",["hub-roster-current"],null,[["roster","isPending"],[["get",["roster"]],["get",["isRosterPending"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","lol-uikit-scrollable",[]],["static-attr","class","hub-content-scroll-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isRosterCurrent"]]],null,6,5],["text","\\n"],["block",["if"],[["get",["hasUpcomingTournaments"]]],null,3],["text","  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = n(9),
                o = (a = n(10)) && a.__esModule ? a : {
                    default: a
                };
            n(463), e.exports = s.Ember.Component.extend({
                classNames: ["clash-history-view"],
                layout: n(464),
                appData: null,
                history: [],
                clashService: s.Ember.inject.service("clash"),
                clashNav: s.Ember.inject.service("clash-nav"),
                tournament: s.Ember.computed.alias("clashService.tournament"),
                roster: s.Ember.computed.alias("clashService.localPlayer.roster"),
                localPlayer: s.Ember.computed.alias("clashService.localPlayer"),
                currentTournamentSummary: s.Ember.computed.alias("appData.currentTournamentSummary"),
                hasRoster: s.Ember.computed("currentTournamentSummary.rosterId", "roster", (function() {
                    const e = this.get("roster"),
                        t = this.get("currentTournamentSummary.rosterId");
                    return e && t && t !== i.INVALID_ROSTER_ID
                })),
                hasNoRoster: s.Ember.computed.not("hasRoster"),
                isRosterPending: s.Ember.computed.alias("roster.isNotRegistered"),
                isRosterCurrent: s.Ember.computed("roster", "hasNoRoster", "isRosterPending", "roster.tournamentId", "tournament.id", "tournament.allowRosterCreation", "tournament.state", (function() {
                    if (this.get("hasNoRoster")) return !1;
                    if (this.get("roster.tournamentId") !== this.get("tournament.id")) return !1;
                    return this.get("isRosterPending") ? this.get("tournament.allowRosterCreation") : this.get("tournament.state") !== o.default.Tournament.RESULTS
                })),
                currentTournamentRosterStats: s.Ember.computed("roster.id", "isRosterCurrent", "history", "history.[]", (function() {
                    if (!this.get("isRosterCurrent")) return null;
                    const e = this.get("roster.id");
                    if (!e) return null;
                    const t = this.get("history");
                    for (let n = 0; n < t.length; ++n)
                        if (t[n].rosterId === Number(e)) return t[n];
                    return null
                })),
                historyExceptCurrent: s.Ember.computed("currentTournamentRosterStats", "history", "history.[]", (function() {
                    const e = this.get("currentTournamentRosterStats"),
                        t = e ? e.rosterId : 0;
                    return s._.sortBy(s._.filter(this.get("history"), (e => e.tournamentPeriods > 0 && e.rosterId !== t)), (e => e.endTimeMs)).reverse()
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "eYlGkdnG",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-content\\\\history-view\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-content\\\\history-view\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-content\\\\history-view\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["historyExceptCurrent"]]],null,1]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["helper",["hub-roster"],null,[["rosterStats"],[["get",["rosterStats"]]]]],false],["text","\\n"]],"locals":["rosterStats"]},{"statements":[["text","  "],["comment"," if we have a roster history, show stats for all rosters except the current one "],["text","\\n  "],["open-element","lol-uikit-scrollable",[]],["static-attr","class","roster-stats-list"],["flush-element"],["text","\\n"],["block",["each"],[["get",["historyExceptCurrent"]]],null,0],["text","  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = o(n(89));
            n(466);
            var i = o(n(87));

            function o(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = a.Ember.Component.extend(i.default, {
                classNames: ["clash-upcoming-tournament-entry"],
                layout: n(467),
                tournament: null,
                tournamentName: a.Ember.computed("tournament", "tournament.nameLocKey", (function() {
                    const e = this.get("tra"),
                        t = this.get("tournament"),
                        n = this.get("tournament.nameLocKey"),
                        a = this.get("tournament.nameLocKeySecondary");
                    if (!n || !t || !e) return "";
                    const i = s.default.getTournamentLocalizedName(e, n),
                        o = s.default.getTournamentLocalizedSecondary(e, a);
                    return this.get("tra").formatString("clash_tournament_history_tournament_title", {
                        name: i,
                        week: o
                    })
                })),
                tournamentDate: a.Ember.computed("tournament", "tournament.phases.[]", (function() {
                    const e = this.get("tra"),
                        t = this.get("tournament.locale"),
                        n = this.get("tournament.phases");
                    if (!t || !e) return "";
                    const s = a.Util.getSortedPhases(n);
                    if (!s || !s.length) return "";
                    return `${this.getDateString(t,s[0].lockinStartTime,{month:"long",day:"numeric"})} ◇ ${this.getTimeString(t,s[0].lockinStartTime,{hour:"numeric",minute:"numeric"})} - ${this.getTimeString(t,s[0].scoutingStartTime,{hour:"numeric",minute:"numeric"})}`
                })),
                actions: {
                    viewSchedule(e) {
                        this.sendAction("viewSchedule", e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "Y2lBPHzy",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-content\\\\upcoming-tournament-entry\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-content\\\\upcoming-tournament-entry\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\hub-content\\\\upcoming-tournament-entry\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","upcoming-tournament-entry"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","upcoming-tournament-icon"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/trophy.png"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","upcoming-tournament-details-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tournament-name"],["flush-element"],["append",["unknown",["tournamentName"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tournament-date"],["flush-element"],["append",["unknown",["tournamentDate"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","view-schedule-button-container"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","action-button-flat"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"viewSchedule",["get",["tournament"]]],null],null],["flush-element"],["text","\\n      "],["append",["unknown",["tra","clash_hub_button_view_schedule"]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9);
            n(469);
            var i = r(n(89)),
                o = r(n(87));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = a.Ember.Component.extend(o.default, {
                classNames: ["clash-schedule-graph"],
                layout: n(470),
                clashService: a.Ember.inject.service("clash"),
                tournament: null,
                showTournamentName: !1,
                locale: a.Ember.computed.alias("tournament.locale"),
                didInsertElement() {
                    this._super(...arguments), a.Ember.run.next((() => {
                        const e = this.get("tournament"),
                            t = this.get("tournament.tierConfigs"),
                            n = this.get("tournament.currentPhase") || this.get("tournament.nextPhase"),
                            a = this.get("tournament.locale"),
                            s = this.get("tra");
                        this._createGraph(e, t, n, a, s)
                    }))
                },
                tournamentNameTxt: a.Ember.computed("tournament", "tournament.nameLocKey", (function() {
                    const e = this.get("tra"),
                        t = this.get("tournament"),
                        n = this.get("tournament.nameLocKey"),
                        a = this.get("tournament.nameLocKeySecondary");
                    if (!n || !t || !e) return "";
                    const s = i.default.getTournamentLocalizedName(e, n),
                        o = i.default.getTournamentLocalizedSecondary(e, a);
                    return this.get("tra").formatString("clash_tournament_history_tournament_title", {
                        name: s,
                        week: o
                    })
                })),
                tournamentDateTxt: a.Ember.computed("tournament", (function() {
                    const e = this.get("tra"),
                        t = this.get("locale"),
                        n = this.get("tournament"),
                        s = this.get("tournament.phases");
                    if (!t || !n || !e) return "";
                    const i = a.Util.getSortedPhases(s);
                    if (!i || !i.length) return "";
                    return `${this.getDateString(t,i[0].lockinStartTime,{month:"long",day:"numeric"})} ◇ ${this.getTimeString(t,i[0].lockinStartTime,{hour:"numeric",minute:"numeric"})} - ${this.getTimeString(t,i[0].scoutingStartTime,{hour:"numeric",minute:"numeric"})}`
                })),
                graphTitle: a.Ember.computed("tournament", "tournament.locale", "tournament.phases.@each.id", "tournament.currentPhase.id", "tournament.nextPhase.id", (function() {
                    const e = this.get("tournament"),
                        t = this.get("tournament.locale"),
                        n = this.get("tournament.currentPhase") || this.get("tournament.nextPhase");
                    if (!n) return "";
                    const a = e.getDateString(t, n.lockinStartTime, {
                        weekday: "long"
                    });
                    return this.get("tra").formatString("clash_lockin_graph_title", {
                        day: a
                    })
                })),
                graphDisclaimer: a.Ember.computed("tournament", "tournament.locale", (function() {
                    let e = this.get("tournament.locale");
                    e = "ar-AE" === e ? "ar-TN" : e;
                    const t = new Date,
                        n = (t.toLocaleTimeString(e, {
                            timeZoneName: "short"
                        }) || "").split(" ");
                    let a = n[n.length - 1] || "-",
                        s = t.getTimezoneOffset() / 60 * -1;
                    "BRST" === a && (a = "BRT", s = -3);
                    const i = "GMT" + (s >= 0 ? "+" : "") + s;
                    return this.get("tra").formatString("clash_lockin_graph_disclaimer", {
                        timezone: a,
                        offset: i
                    })
                })),
                _createGraph(e, t, n, i, o) {
                    const r = this.$("#clash-graph-container");
                    if (r && r.empty(), !t || !t.length || !n) return;
                    const l = (n.scoutingStartTime - n.lockinStartTime) / 6e4,
                        c = [];
                    t.forEach((e => {
                        const t = e.tier || 0;
                        c.push({
                            tier: t,
                            minutes: l - e.delayTime / 6e4
                        })
                    })), c.sort(((e, t) => e.tier && t.tier ? e.tier < t.tier ? 1 : e.tier > t.tier ? -1 : 0 : 0));
                    const d = [];
                    for (let e = 0; e <= l; e += 30) d.push(e);
                    l % 30 != 0 && d.push(l);
                    const m = 15,
                        u = 30,
                        p = 25,
                        h = 30,
                        g = 500 - h - u,
                        f = 120 - m - p,
                        _ = a.d3.scale.linear().domain([0, l]).range([g, 0]),
                        b = a.d3.scale.ordinal().rangeRoundBands([f, 0], .1).domain(c.map((function(e) {
                            return e.tier
                        }))),
                        x = a.d3.select("#clash-graph-container").append("svg").attr("width", g + h + u).attr("height", f + m + p).append("g").attr("transform", "translate(" + h + "," + m + ")"),
                        y = a.d3.svg.axis().scale(_).orient("bottom").tickValues(d).tickFormat((function(t) {
                            const a = n.lockinStartTime + 6e4 * (l - t);
                            return e.getTimeString(i, a, {
                                hour: "numeric",
                                minute: "numeric"
                            })
                        }));
                    x.append("g").attr("class", "x axis").attr("transform", "translate(0," + f + ")").call(y);
                    const k = x.selectAll(".bar").data(c).enter().append("g");
                    k.append("rect").attr("class", (function(e) {
                        return `tier-${e.tier}`
                    })).attr("y", (function(e) {
                        return b(e.tier)
                    })).attr("height", b.rangeBand()).attr("x", (function(e) {
                        return _(e.minutes)
                    })).attr("width", (function(e) {
                        return g - _(e.minutes)
                    })), k.append("text").attr("class", "label").attr("y", (function(e) {
                        return b(e.tier) + b.rangeBand() / 2 + 4
                    })).attr("x", (function(e) {
                        return g - 5
                    })).text((e => {
                        const t = s.ROMAN_NUMERALS[e.tier];
                        return o.formatString("clash_roster_tier_display", {
                            tier: t
                        })
                    }))
                },
                actions: {
                    createRoster() {
                        this.get("localPlayer.roster") || this._createRoster()
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "zsLJ5xim",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\schedule-graph\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\schedule-graph\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\schedule-graph\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["showTournamentName"]]],null,0],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-schedule-graph-title"],["flush-element"],["append",["unknown",["graphTitle"]],false],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-lockin-time-graph"],["static-attr","id","clash-graph-container"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-schedule-graph-disclaimer"],["flush-element"],["append",["unknown",["graphDisclaimer"]],false],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-schedule-tournament-name-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-schedule-tournament-name"],["flush-element"],["append",["unknown",["tournamentNameTxt"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-schedule-tournament-date"],["flush-element"],["append",["unknown",["tournamentDateTxt"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = p(n(472)),
                i = n(9),
                o = n(492),
                r = n(500),
                l = n(505),
                c = n(477),
                d = n(474),
                m = p(n(481)),
                u = n(499);

            function p(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const h = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                basePaths: {
                    gameData: "/lol-game-data",
                    inventory: "/lol-inventory"
                },
                boundProperties: {
                    trophiesData: {
                        api: "gameData",
                        path: "/assets/v1/summoner-trophies.json",
                        default: {}
                    },
                    bannersData: {
                        api: "gameData",
                        path: "/assets/v1/summoner-banners.json",
                        default: {}
                    },
                    regionLocale: "/riotclient/region-locale"
                }
            });
            e.exports = s.default.extend(h, {
                classNames: ["clash-awards-root"],
                layout: n(513),
                style: n(514),
                clashService: a.Ember.inject.service("clash"),
                logoConfig: a.Ember.computed.alias("clashService.logoConfig"),
                gdsService: a.Ember.inject.service("gds"),
                ownedLogos: null,
                ownedTrophies: null,
                ownedBanners: null,
                tooltipComponentName: "ClashAwardsTooltip",
                collectibleNameLocKey: "clash_awards",
                collectibles: a.Ember.computed("decoratedAggregatedAwards", (function() {
                    const e = this.get("decoratedAggregatedAwards");
                    return null !== e ? e : []
                })),
                unavailableFilter: !1,
                unownedFilter: !1,
                controlPanelGroupingOptions: l.AWARDS_DROPDOWN_GROUP_OPTIONS,
                defaultControlPanelGroupingOption: l.DEFAULT_PANEL_DROPDOWN_OPTION,
                defaultControlPanelSortingOption: l.DEFAULT_PANEL_SORTING,
                startCollectingGroupingConfig: l.START_COLLECTING_GROUPING_CONFIG,
                startCollectingSortingConfig: l.START_COLLECTING_SORTING_CONFIG,
                init() {
                    this._super(...arguments), this.set("bannerTrophyClickHandler", this._bannerTrophyClickHandler.bind(this)), this.get("api.inventory").get("/v2/inventory/TOURNAMENT_TROPHY", {
                        skipCache: !0
                    }).then((e => {
                        this.set("ownedTrophies", e || null)
                    })), this.get("api.inventory").get("/v2/inventory/TOURNAMENT_FLAG", {
                        skipCache: !0
                    }).then((e => {
                        this.set("ownedBanners", e || null)
                    })), this.get("api.inventory").get("/v2/inventory/TOURNAMENT_LOGO", {
                        skipCache: !0
                    }).then((e => {
                        this.set("ownedLogos", e || null)
                    }))
                },
                awardsDataObserver: a.Ember.observer("aggregatedAwards.[]", (function() {
                    const e = this.get("aggregatedAwards");
                    if (null === e) return;
                    const t = [];
                    e.forEach((e => {
                        e && e.uuid && t.push(e.uuid)
                    }));
                    this.get("clashService").getEventDataBatch(t).then((e => {
                        if (!e || !e.length) return;
                        const t = Object.assign({}, ...e);
                        this.set("awardsData", t)
                    }))
                })),
                decoratedAggregatedAwards: a.Ember.computed("tra", "awardsData", "aggregatedAwards", "gdsService.ready", (function() {
                    const e = this.get("awardsData"),
                        t = this.get("aggregatedAwards");
                    return this.get("gdsService.ready") && null !== t && this.get("tra") ? e ? (this._decorateAwards(e, t, this.get("tra")), t) : t : null
                })),
                aggregatedAwards: a.Ember.computed("logos", "banners", "trophies", (function() {
                    const e = this.get("logos"),
                        t = this.get("banners"),
                        n = this.get("trophies");
                    return null === e || null === t || null === n ? null : e.concat(t.concat(n))
                })),
                logos: a.Ember.computed("tra", "logoConfig.logos.[]", "gdsService.ready", "ownedLogos.[]", (function() {
                    const e = [],
                        t = this.get("logoConfig.logos"),
                        n = this.get("ownedLogos");
                    return this.get("gdsService.ready") && t && null !== n && this.get("tra") ? (t.forEach((n => {
                        n.free && e.push(this._getLogoInfo(n.id, t))
                    })), n.forEach((n => {
                        n && n.itemId && n.payload && e.push(this._getLogoInfo(n.itemId, t))
                    })), e) : null
                })),
                banners: a.Ember.computed("bannersData.BannerFlags", "ownedBanners.[]", (function() {
                    const e = this.get("bannersData.BannerFlags"),
                        t = this.get("ownedBanners");
                    if (!e || null === t) return null;
                    const n = t => {
                            const n = t && t.payload && t.payload.rewardSpec ? t.payload.rewardSpec.theme : null,
                                a = t && t.payload && t.payload.rewardSpec ? t.payload.rewardSpec.level : null;
                            return n && a ? e.find((e => parseInt(e.level) === parseInt(a) && e.theme === n)) : null
                        },
                        a = [];
                    return t.forEach(((e, t) => {
                        const s = n(e),
                            i = e && e.payload ? e.payload.eventId : null;
                        s && a.push({
                            id: i,
                            uuid: i,
                            awardType: u.CLASH_AWARDS_ROW_CONFIG.BANNER.id,
                            imgPath: s.inventoryIcon,
                            ownership: {
                                owned: !0
                            },
                            rarity: 0
                        })
                    })), a
                })),
                trophies: a.Ember.computed("trophiesData.Trophies", "ownedTrophies.[]", (function() {
                    const e = this.get("trophiesData.Trophies"),
                        t = this.get("ownedTrophies");
                    if (!e || null === t) return null;
                    const n = t => {
                            const n = t && t.payload && t.payload.rewardSpec ? t.payload.rewardSpec.cup : null,
                                a = t && t.payload && t.payload.rewardSpec ? t.payload.rewardSpec.bracket : null;
                            return n && a ? e.find((e => parseInt(e.bracket) === parseInt(a) && e.theme === n)) : null
                        },
                        a = [];
                    return t.forEach((e => {
                        const t = n(e),
                            s = e && e.payload ? e.payload.eventId : null;
                        t && a.push({
                            id: s,
                            uuid: s,
                            awardType: u.CLASH_AWARDS_ROW_CONFIG.TROPHY.id,
                            imgPath: t.profileIcon,
                            ownership: {
                                owned: !0
                            },
                            rarity: 0
                        })
                    })), a
                })),
                _decorateAwards(e, t, n) {
                    t.forEach((t => {
                        if (t && t.uuid && e[t.uuid]) {
                            const a = e[t.uuid];
                            switch (t.awardType) {
                                case u.CLASH_AWARDS_ROW_CONFIG.BANNER.id:
                                    t.name = this._getBannerName(a), t.earnedDateTimestamp = new Date(a.earnedDate).getTime(), t.data = a, t.data.logoPath = this.get("gdsService").getLogoPath(a.teamLogoName, a.teamLogoChromaId);
                                    break;
                                case u.CLASH_AWARDS_ROW_CONFIG.TROPHY.id:
                                    t.name = n.get(`clash_tournament_name_${(a.theme||"").toLowerCase()}`), t.earnedDateTimestamp = new Date(a.earnedDate).getTime(), t.data = a, t.data.logoPath = this.get("gdsService").getLogoPath(a.teamLogoName, a.teamLogoChromaId)
                            }
                        }
                    }))
                },
                _getLogoInfo(e, t) {
                    const n = t[e - 1];
                    if (!n) return null;
                    let a = u.CLASH_LOGO_SOURCE.LOOT;
                    return n.free ? a = u.CLASH_LOGO_SOURCE.DEFAULT : n.isVPReward && (a = u.CLASH_LOGO_SOURCE.VP), {
                        id: `${u.CLASH_AWARDS_ROW_CONFIG.LOGO.id}-${e}`,
                        name: this.get("tra").formatString("clash_awards_name_logo", {
                            name: this.get(`tra.clash_roster_logo_name_${e}`)
                        }),
                        awardType: u.CLASH_AWARDS_ROW_CONFIG.LOGO.id,
                        sourceType: a,
                        imgPath: this.get("gdsService").getLogoPath(n.id, i.DEFAULT_LOGO_COLOR_ID),
                        ownership: {
                            owned: !0
                        },
                        rarity: 0
                    }
                },
                _getBannerName(e) {
                    const t = e.theme && "None" !== e.theme ? e.theme : e.rewardSpec && e.rewardSpec.theme,
                        n = this.get(`tra.clash_tournament_simplename_${(t||"").toLowerCase()}`);
                    let a;
                    if (i.THEMES_EOS.includes(t)) {
                        const t = e.rewardSpec && e.rewardSpec.level ? e.rewardSpec.level : 1;
                        a = this.get("tra").formatString("clash_awards_name_banner_eos", {
                            name: n,
                            tier: this.get("tra").formatString("clash_eos_tier_" + (Number(t) - 1))
                        })
                    } else a = this.get("tra").formatString("clash_awards_name_banner", {
                        name: n,
                        tier: i.ROMAN_NUMERALS[e.rewardSpec && e.rewardSpec.level ? e.rewardSpec.level : 0]
                    });
                    return a
                },
                _bannerTrophyClickHandler(e) {
                    e.preventDefault();
                    const t = this.get("decoratedAggregatedAwards");
                    if (!t) return;
                    const n = e && e.target && e.target.dataset ? e.target.dataset.uuid : null,
                        s = t.find((e => String(e.uuid) === n));
                    if (!s) return;
                    const i = s.data.rosterId;
                    if (i) {
                        this.get("clashService").getRosterStats(i).then((e => {
                            a.PrivateAPI._tournamentOverview({
                                source: "awards-tab",
                                rosterStats: e
                            })
                        }))
                    }
                },
                collectibleCountByRarity: 0,
                collectiblesFilter: a.Ember.computed("nameFilter", "unownedFilter", "groupingConfig", (function() {
                    const e = [],
                        t = this.get("nameFilter");
                    if (t && t.length > 0) {
                        const n = this._getNameFilter(t);
                        n && e.push(n)
                    }
                    const n = this.get("groupingConfig");
                    return this.get("unownedFilter") === c.COLLECTION_GRID_OWNERSHIP_FILTERS.OWNED && e.push(d.OWNED_COLLECTIBLES_FILTER), n.filters && e.push(...n.filters), new m.default(e)
                })),
                _tooltipConfig: {
                    targetAnchor: {
                        x: "center",
                        y: "bottom"
                    },
                    tooltipAnchor: {
                        x: "center",
                        y: "top"
                    },
                    offset: {
                        x: 0,
                        y: -6
                    }
                },
                _createTooltipDataObject: () => a.Ember.Object.create({
                    collectibleItem: null,
                    regionLocale: null
                }),
                updateTooltipContent(e) {
                    const t = e.currentTarget.dataset.id;
                    this._updateTooltip(t)
                },
                _updateTooltip(e) {
                    if (this.get("_tooltipData.collectibleItem.id") === e) return;
                    const t = this.get("decoratedAggregatedAwards").find((t => t && String(t.id) === e));
                    this.set("_tooltipData.collectibleItem", t), this.set("_tooltipData.regionLocale", this.get("regionLocale.locale"))
                },
                _cleanTooltipDataObject(e) {
                    e.set("collectibleItem", null), e.set("regionLocale", null)
                },
                _generateRowDataFromGroupingResult(e) {
                    return (0, r.generateRowDataFromGroupingResult)(e, this.get("tra"))
                },
                _getRowRenderer(e) {
                    return (0, o.getRowRenderer)(this.get("rowRendererMap"), e, this)
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(473),
                s = n(474),
                i = n(475),
                o = n(1),
                r = n(478),
                l = n(476),
                c = n(477),
                d = _(n(481)),
                m = function(e, t) {
                    if (!t && e && e.__esModule) return e;
                    if (null === e || "object" != typeof e && "function" != typeof e) return {
                        default: e
                    };
                    var n = f(t);
                    if (n && n.has(e)) return n.get(e);
                    var a = {},
                        s = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var i in e)
                        if ("default" !== i && Object.prototype.hasOwnProperty.call(e, i)) {
                            var o = s ? Object.getOwnPropertyDescriptor(e, i) : null;
                            o && (o.get || o.set) ? Object.defineProperty(a, i, o) : a[i] = e[i]
                        } a.default = e, n && n.set(e, a);
                    return a
                }(n(482)),
                u = _(n(486)),
                p = _(n(485)),
                h = _(n(487)),
                g = _(n(490));

            function f(e) {
                if ("function" != typeof WeakMap) return null;
                var t = new WeakMap,
                    n = new WeakMap;
                return (f = function(e) {
                    return e ? n : t
                })(e)
            }

            function _(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const {
                computed: b,
                Component: x,
                get: y,
                set: k,
                run: v
            } = o.Ember, E = o.Ember.Object, S = o.dataBinding.bindTo((0, o.getProvider)().getSocket()), T = o.Ember.Object.extend({
                grouping: void 0,
                groupSortOrder: void 0,
                groupContentSortOrder: void 0,
                nameFilter: ""
            }), w = (0, o.emberDataBinding)({
                Ember: o.Ember,
                websocket: (0, o.getProvider)().getSocket(),
                basePaths: {
                    login: "/lol-login",
                    riotclient: "/riotclient",
                    settings: "/lol-settings",
                    summoner: "/lol-summoner"
                },
                boundProperties: {
                    locale: {
                        api: "riotclient",
                        path: "/region-locale"
                    },
                    session: {
                        api: "login",
                        path: "/v1/session"
                    },
                    summoner: {
                        api: "summoner",
                        path: "/v1/current-summoner"
                    },
                    userExperience: {
                        api: "settings",
                        path: "/v2/local/lol-user-experience"
                    }
                }
            });
            e.exports = x.extend(w, {
                classNames: ["collectibles-root"],
                storeCatalogManager: null,
                lootItemManager: null,
                unavailableFilter: !0,
                recentAcquiredSectionEnabled: !0,
                secondaryEnabled: !0,
                firstVisit: !0,
                tooltipRestructureCount: 0,
                collectibles: [],
                requiredStoreCatalogTypes: null,
                settingsReady: !1,
                totalSummaryNum: o.Ember.computed.alias("totalOwnedCollectibles"),
                totalSecondSummaryNum: o.Ember.computed.alias("totalSummaryNum"),
                secondaryLoaded: !1,
                collectibleNameLocKey: "collectible",
                collectibleNameLoc: b("collectibleNameLocKey", (function() {
                    return y(this, `tra.collectibles_name_${y(this,"collectibleNameLocKey")}`)
                })),
                isLoading: b("collectibles", "settingsReady", (function() {
                    const e = y(this, "collectibles"),
                        t = y(this, "settingsReady");
                    return !e || 0 === e.length || !t
                })),
                controlPanelGroupingOptions: i.CONTROL_PANEL_DROPDOWN_GROUP_OPTIONS_PLACEHOLDER,
                defaultControlPanelGroupingOption: i.BASE_COLLECTIBLES_DEFAULT_GROUPING_OPTION,
                defaultControlPanelSortingOption: i.BASE_COLLECTIBLES_DEFAULT_SORTING_OPTION,
                startCollectingGroupingConfig: i.BASE_COLLECTIBLES_DEFAULT_GROUPING_OPTION,
                startCollectingSortingConfig: i.BASE_COLLECTIBLES_DEFAULT_SORTING_OPTION,
                groupingSortingState: T.create(),
                showUnownedCheckboxChecked: !0,
                showUnavailableCheckboxChecked: !1,
                tooltipComponentName: "CollectiblesGridTooltip",
                tooltipTargets: o.Ember.A(),
                isPotatoModeEnabled: b.bool("userExperience.data.potatoModeEnabled"),
                currentRegion: b.alias("locale.region"),
                isTencentRegion: b.equal("currentRegion", c.TENCENT_REGION_NAME),
                shouldShowLegacyInfo: b.not("isTencentRegion"),
                ownedCollectibles: b("collectibles", (function() {
                    return y(this, "collectibles").filter((e => e && e.ownership && e.ownership.owned))
                })),
                totalOwnedCollectibles: b("ownedCollectibles", (function() {
                    const e = y(this, "ownedCollectibles");
                    return e ? e.length : 0
                })),
                currentLocale: b("tra.metadata.locale.id", (function() {
                    const e = this.get("tra.metadata.locale.id");
                    return e ? e.substr(0, 2).toLowerCase() : "en"
                })),
                collectiblesFilter: b("nameFilter", "unownedFilter", "groupingConfig", "unavailableFilter", (function() {
                    const e = [],
                        t = y(this, "nameFilter");
                    if (t && t.length > 0) {
                        const n = this._getNameFilter(t);
                        n && e.push(n)
                    }
                    const n = y(this, "groupingConfig");
                    y(this, "unownedFilter") === c.COLLECTION_GRID_OWNERSHIP_FILTERS.OWNED && e.push(s.OWNED_COLLECTIBLES_FILTER);
                    return y(this, "unavailableFilter") && e.push(s.AVAILABLE_COLLECTIBLES_FILTER), n.filters && e.push(...n.filters), new d.default(e)
                })),
                groupedCollectibles: b("groupingConfig", "collectibles", "currentLocale", (function() {
                    const e = y(this, "groupingConfig"),
                        t = y(this, "collectibles"),
                        n = this._getGroupingAndSortingRefData();
                    return m.group(e, t, n)
                })),
                sortedCollectibles: b("sortingConfig", "groupedCollectibles", (function() {
                    const e = y(this, "sortingConfig"),
                        t = y(this, "groupedCollectibles"),
                        n = this._getGroupingAndSortingRefData();
                    return m.sortGroupResult(e, t, n), t
                })),
                filteredCollectibles: b("collectiblesFilter", "sortedCollectibles", (function() {
                    const e = y(this, "sortedCollectibles"),
                        t = y(this, "collectiblesFilter");
                    let n = e;
                    if (this._filterGroupingResult(e, t), y(this, "shouldShowRecentAcquisitionSection")) {
                        const t = this._getRecentAcquiredGroupingResult();
                        t && (n = this._combineGroupingResult(t, e))
                    }
                    return E.create(n)
                })),
                shouldShowRecentAcquisitionSection: b("isLoading", "ownedCollectibles", "settingsManager", "firstVisit", "recentAcquiredSectionEnabled", (function() {
                    if (y(this, "firstVisit") && !y(this, "isLoading") && y(this, "recentAcquiredSectionEnabled")) {
                        const e = y(this, "ownedCollectibles"),
                            t = y(this, "settingsManager");
                        if (t) {
                            const n = t.getLastLocalVisitTime();
                            return void 0 !== e.find((e => e.ownership.rental.purchaseDate > n))
                        }
                    }
                    return !1
                })),
                init(...e) {
                    this._super(...e), k(this, "firstVisit", !0), k(this, "_tooltipData", this._createTooltipDataObject()), k(this, "tooltipTargets", o.Ember.A()), k(this, "groupingSortingState", T.create()), k(this, "rowRendererMap", new Map), this._tooltipUpdateCallback = this._tooltipUpdateHandler.bind(this), this._tooltipRestructureCallback = this._tooltipRestructureHandler.bind(this), this._setDefaultGroupingAndSorting(), this._initLootItemManager(), this._initStoreCatalogManager(), this._initSettingsManager()
                },
                willDestroy(...e) {
                    this._super(...e), this._cleanupTooltip(), this._updateLastLeaveTime();
                    const t = y(this, "settingsManager");
                    t && t.removeReadyStateListener(y(this, "settingsReadyCallback")), k(this, "firstVisit", !0)
                },
                actions: {
                    setNameFilter(e) {
                        this._hideRecentAcquisitionSection();
                        this.get("nameFilter") !== e && k(this, "nameFilter", e)
                    },
                    setGroupingAndSorting(e, t, n = !0) {
                        this._hideRecentAcquisitionSection(), this._updateGroupingAndSortingConfig(e, t, n)
                    },
                    generateRowDataFromGroupingResult(e) {
                        return this._generateRowDataFromGroupingResult(e)
                    },
                    getRowRenderer(e) {
                        return this._getRowRenderer(e)
                    },
                    setShowUnownedCheckboxChecked(e) {
                        this._hideRecentAcquisitionSection();
                        const t = e ? c.COLLECTION_GRID_OWNERSHIP_FILTERS.ALL : c.COLLECTION_GRID_OWNERSHIP_FILTERS.OWNED;
                        this._setUnownedFilter(t)
                    },
                    setShowUnavailableCheckboxChecked(e) {
                        this._hideRecentAcquisitionSection(), this._setUnavailableFilter(!e)
                    },
                    setFocusOnRowId(e, t) {
                        k(this, "focusedRowId", E.create({
                            groupingType: e,
                            groupId: t
                        }))
                    },
                    startCollecting() {
                        this._updateControlPanelGroupingAndSortingOption(y(this, "startCollectingGroupingConfig"), y(this, "startCollectingSortingConfig"))
                    },
                    clearLastPurchaseCollectibleItemId() {
                        k(this, "lastPurchasedCollectibleId", null)
                    }
                },
                _tooltipConfig: {
                    targetAnchor: {
                        x: "center",
                        y: "top"
                    },
                    tooltipAnchor: {
                        x: "center",
                        y: "bottom"
                    },
                    offset: {
                        x: 0,
                        y: -2
                    }
                },
                assignTooltip(e) {
                    if (!e.hasTooltipDataUpdateEventListener) {
                        y(this, "tooltipTargets").pushObject(e);
                        const t = this._getTooltipDomNode();
                        o.TooltipManager.assign(e, t, {}, y(this, "_tooltipConfig")), e.addEventListener("tooltip:beforeDisplay", this._tooltipUpdateCallback), e.addEventListener("tooltip:afterHide", this._tooltipRestructureCallback), e.hasTooltipDataUpdateEventListener = !0
                    }
                },
                unassignTooltip(e) {
                    e && e.hasTooltipDataUpdateEventListener && (o.TooltipManager.unassign(e), e.removeEventListener("tooltip:beforeDisplay", this._tooltipUpdateCallback), e.removeEventListener("tooltip:afterHide", this._tooltipRestructureCallback), e.hasTooltipDataUpdateEventListener = !1)
                },
                getRegionalRarity(e, t, n = a.DEFAULT_REGION_NAME) {
                    const s = y(this, "currentRegion");
                    let i = t.default.order;
                    if (e.rarities) {
                        let t = e.rarities.find((e => e.region === s));
                        t ? i = t.rarity : (t = e.rarities.find((e => e.region === n)), t && (i = t.rarity))
                    }
                    let o = t[i];
                    return o || (o = t.default), o
                },
                getRegionalDescription(e, t = a.DEFAULT_REGION_NAME) {
                    const n = y(this, "currentRegion");
                    let s = "";
                    if (e) {
                        const a = e.regionalDescriptions || e.descriptions;
                        if (a) {
                            let i = a.find((e => e.region === n));
                            i || (i = a.find((e => e.region === t))), s = i ? i.description : e.description
                        } else s = e.description
                    }
                    return s
                },
                _filterGroupingResult(e, t) {
                    e.groupNodes.forEach((e => {
                        this._filterGroupNode(e, t)
                    }))
                },
                _filterGroupNode(e, t) {
                    e.filteredGroupMembers = t.applyFilters(e.groupMembers), e.subGroups.forEach((e => {
                        this._filterGroupingResult(e, t)
                    }))
                },
                _getRecentAcquiredGroupingResult() {
                    const e = y(this, "ownedCollectibles"),
                        t = this._getGroupingAndSortingRefData(),
                        n = y(this, "settingsManager");
                    if (n) {
                        const a = n.getLastLocalVisitTime(),
                            s = e.filter((e => e.ownership.rental.purchaseDate > a)),
                            i = m.group(y(this, "recentAcquiredGroupingConfig"), s, t);
                        return m.sortGroupResult(y(this, "recentAcquiredGroupSortingConfig"), i, t), i
                    }
                    return null
                },
                _hideRecentAcquisitionSection() {
                    k(this, "firstVisit", !1)
                },
                _combineGroupingResult(...e) {
                    const t = new u.default(l.GROUPING_TYPES.EMPTY_GROUPING),
                        n = new p.default(l.GROUPING_TYPES.EMPTY_GROUPING, null, {}, y(this, "collectibles"));
                    return n.subGroups.push(...e), t.appendGroupNode(n), t
                },
                _updateControlPanelGroupingAndSortingOption(e, t, n = !0) {
                    k(this, "groupingSortingState.grouping", e), k(this, "groupingSortingState.groupSortOrder", t.name), this._updateGroupingAndSortingConfig(t.groupingConfig, t.sortingConfig, n)
                },
                _updateGroupingAndSortingConfig(e, t, n = !0) {
                    y(this, "groupingConfig") !== e && this._setUnownedFilter(e.ownershipFilter, n), k(this, "groupingConfig", e), k(this, "sortingConfig", t), n && this._saveGroupingAndSortingConfig()
                },
                _updateLastVisitTime() {
                    this._updateLastLeaveTime(!1)
                },
                _updateLastLeaveTime(e = !0) {
                    const t = y(this, "settingsManager");
                    t && t.updateLastVisitTime(Date.now(), e)
                },
                _saveGroupingAndSortingConfig() {
                    const e = y(this, "settingsManager");
                    e && e.updateLastGroupingSorting(y(this, "groupingSortingState.grouping.key"), y(this, "groupingSortingState.groupSortOrder"))
                },
                _setUnownedFilter(e, t = !0) {
                    this.get("unownedFilter") !== e && (k(this, "unownedFilter", e), k(this, "showUnownedCheckboxChecked", e === c.COLLECTION_GRID_OWNERSHIP_FILTERS.ALL), e === c.COLLECTION_GRID_OWNERSHIP_FILTERS.OWNED && this._setUnavailableFilter(!0, t), t && this._saveUnownedFilter())
                },
                _setUnavailableFilter(e, t = !0) {
                    this.get("unavailableFilter") !== e && (k(this, "unavailableFilter", e), k(this, "showUnavailableCheckboxChecked", !e), t && this._saveUnavailableFilter())
                },
                _setDefaultGroupingAndSorting() {
                    this._updateControlPanelGroupingAndSortingOption(y(this, "defaultControlPanelGroupingOption"), y(this, "defaultControlPanelSortingOption"), !1)
                },
                _getNameFilter(e) {
                    return (0, r.getSimpleNameFilter)(e, y(this, "currentLocale"))
                },
                _generateRowDataFromGroupingResult: () => [],
                _getRowRenderer: () => null,
                _getGroupingAndSortingRefData() {
                    return {
                        locale: y(this, "currentLocale")
                    }
                },
                _tooltipUpdateHandler(e) {
                    y(this, "_tooltipData").set("shouldShowLegacyInfo", y(this, "shouldShowLegacyInfo")), this.updateTooltipContent(e)
                },
                updateTooltipContent() {},
                _tooltipRestructureHandler(e) {
                    let t = this.get("tooltipRestructureCount");
                    this.set("tooltipRestructureCount", ++t), 1 === this.get("tooltipRestructureCount") ? (this.unassignTooltip(e.target), this.assignTooltip(e.target)) : 2 === this.get("tooltipRestructureCount") && this.set("tooltipRestructureCount", 0)
                },
                _createTooltipDataObject: () => o.Ember.Object.create({
                    collectibleItem: null,
                    shouldShowLegacyInfo: !0
                }),
                _getTooltipDomNode() {
                    if (!y(this, "tooltipDomNode")) {
                        const e = o.componentFactory.create(y(this, "tooltipComponentName"), y(this, "_tooltipData"));
                        k(this, "tooltipComponent", e);
                        const t = o.componentFactory.getDOMNode(e);
                        k(this, "tooltipDomNode", t)
                    }
                    return y(this, "tooltipDomNode")
                },
                _cleanupTooltip() {
                    const e = y(this, "tooltipTargets");
                    e.forEach((e => this.unassignTooltip(e))), e.clear();
                    const t = y(this, "_tooltipData");
                    t && (t.isDestroyed || t.isDestroying || this._cleanTooltipDataObject(t));
                    const n = y(this, "tooltipComponent");
                    n && (n.componentPromise.then((e => v((() => e.app.destroy())))), k(this, "tooltipComponent", null), k(this, "tooltipDomNode", null))
                },
                _cleanTooltipDataObject(e) {
                    k(e, "collectibleItem", null)
                },
                _initLootItemManager() {
                    S.get("/lol-loot/v1/loot-items").then(this._handleLootItemsSuccess.bind(this)).catch(this._handleLootItemsFail.bind(this))
                },
                _handleLootItemsSuccess(e) {
                    this._createLootItemManager(e)
                },
                _handleLootItemsFail(e) {
                    this._createLootItemManager([])
                },
                _createLootItemManager(e) {
                    e = e || [];
                    const t = new g.default(e);
                    k(this, "lootItemManager", t)
                },
                _initStoreCatalogManager() {
                    let e = "/lol-store/v1/catalog";
                    const t = y(this, "requiredStoreCatalogTypes");
                    t ? (e = `${e}?inventoryType=${JSON.stringify(t)}`, S.get(e).then(this._handleStoreCatalogSuccess.bind(this)).catch(this._handleStoreCatalogFail.bind(this))) : this._handleStoreCatalogSuccess([])
                },
                _handleStoreCatalogSuccess(e) {
                    e = e || [];
                    const t = new h.default(e);
                    k(this, "storeCatalogManager", t)
                },
                _handleStoreCatalogFail(e) {
                    const t = new h.default(null);
                    k(this, "storeCatalogManager", t)
                },
                _initSettingsManager() {
                    const e = y(this, "settingsManager");
                    if (e) {
                        e.setGroupingAndSortingConfig({
                            groupingOptions: y(this, "controlPanelGroupingOptions"),
                            defaultGroupingOption: y(this, "defaultControlPanelGroupingOption"),
                            defaultSortingOption: y(this, "defaultControlPanelSortingOption")
                        });
                        const t = this._settingsReadyHandler.bind(this);
                        k(this, "settingsReadyCallback", t), e.addReadyStateListener(t)
                    } else this._settingsReadyHandler()
                },
                _settingsReadyHandler() {
                    this._loadGroupingAndSortingConfig(), k(this, "settingsReady", !0), this._updateLastVisitTime()
                },
                _loadGroupingAndSortingConfig() {
                    const e = y(this, "settingsManager");
                    e && (this._updateControlPanelGroupingAndSortingOption(e.getGroupingDropdownOption(), e.getSortingDropdown(), !1), this._setUnownedFilter(e.getUnownedFilter(), !1), this._setUnavailableFilter(e.getUnavailableFilter(), !1))
                },
                _saveUnownedFilter() {
                    const e = y(this, "settingsManager");
                    e && e.updateLastUnownedFilter(y(this, "unownedFilter"))
                },
                _saveUnavailableFilter() {
                    const e = y(this, "settingsManager");
                    e && e.updateLastUnavailableFilter(y(this, "unavailableFilter"))
                }
            })
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.DEFAULT_REGION_NAME = t.DEFAULT_LOCALE = void 0;
            t.DEFAULT_LOCALE = "en";
            t.DEFAULT_REGION_NAME = "riot"
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.OWNED_COLLECTIBLES_FILTER = t.AVAILABLE_COLLECTIBLES_FILTER = void 0;
            t.OWNED_COLLECTIBLES_FILTER = e => Boolean(e && e.ownership && e.ownership.owned);
            t.AVAILABLE_COLLECTIBLES_FILTER = e => Boolean(e && (e.ownership && e.ownership.owned || e.lootable || e.itemCatalog && e.itemCatalog.isPurchasable()))
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.EMPTY_GROUPING_CONFIG = t.CONTROL_PANEL_DROPDOWN_GROUP_OPTIONS_PLACEHOLDER = t.BASE_COLLECTIBLES_DEFAULT_SORTING_OPTION = t.BASE_COLLECTIBLES_DEFAULT_GROUPING_OPTION = void 0;
            var a = n(476),
                s = n(477);
            const i = {
                    groupingType: a.GROUPING_TYPES.EMPTY_GROUPING,
                    getGroupKeys: () => [1],
                    getGroupMetaData: () => {}
                },
                o = {
                    sort: e => e
                },
                r = {
                    groupSortingStrategy: o,
                    contentSortingStrategy: o
                },
                l = {
                    ownershipFilter: s.COLLECTION_GRID_OWNERSHIP_FILTERS.ALL,
                    filters: [],
                    groupingStrategy: i,
                    supportedSortingConfigs: {
                        noneSorting: r
                    }
                };
            t.EMPTY_GROUPING_CONFIG = l;
            const c = {
                groupByAll: {
                    key: "groupByAll",
                    traKey: "control_panel_grouping_all",
                    showUnownedFilter: !0,
                    sortOptions: {
                        noneSort: {
                            noneSort: {
                                name: "noneSort",
                                traKey: "control_panel_sorting_alphabetical_ascending",
                                groupingConfig: l,
                                sortingConfig: l.supportedSortingConfigs.noneSorting
                            }
                        }.noneSort
                    },
                    defaultSortOptionName: "noneSort"
                }
            };
            t.CONTROL_PANEL_DROPDOWN_GROUP_OPTIONS_PLACEHOLDER = c;
            const d = c.groupByAll;
            t.BASE_COLLECTIBLES_DEFAULT_GROUPING_OPTION = d;
            const m = d.sortOptions[d.defaultSortOptionName];
            t.BASE_COLLECTIBLES_DEFAULT_SORTING_OPTION = m
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.GROUPING_TYPES = void 0;
            t.GROUPING_TYPES = {
                EMPTY_GROUPING: "emptyGrouping",
                GROUP_CHAMPIONS_BY_OWNERSHIP: "groupChampionsByOwnership",
                GROUP_CHAMPIONS_BY_ROLE: "groupChampionsByRole",
                GROUP_CHAMPIONS_BY_LANE: "groupChampionsByLane",
                GROUP_CHAMPIONS_BY_FREE: "groupChampionsByFree",
                GROUP_BY_SUMMONER_ICON_PURCHASE_YEAR: "groupSummonerIconByPurchaseYear",
                GROUP_BY_SUMMONER_ICON_RELEASE_YEAR: "groupSummonerIconByReleaseYear",
                GROUP_BY_SUMMONER_ICON_NAME_FIRST_LETTER: "groupSummonerIconByNameFirstLetter",
                GROUP_BY_SUMMONER_ICON_SET: "groupSummonerIconBySet",
                GROUP_BY_SUMMONER_ICON_TIER: "groupSummonerIconByTier",
                GROUP_BY_SUMMONER_ICON_TEAM_NAME: "groupSummonerIconByEsportTeam",
                GROUP_BY_SUMMONER_ICON_ESPORTS_EVENT: "groupSummonerIconByEsportsEvent",
                GROUP_WARD_SKINS_BY_PURCHASE_YEAR: "groupWarsSkinsByPurchaseYear",
                GROUP_WARD_SKINS_BY_RELEASE_YEAR: "groupWarsSkinsByReleaseYear",
                GROUP_WARD_SKINS_BY_NAME_FIRST_LETTER: "groupWarsSkinsByNameFirstLetter",
                GROUP_WARD_SKINS_BY_SET: "groupWarsSkinsBySet",
                GROUP_WARD_SKINS_BY_TIER: "groupWardSkinsByTier",
                GROUP_CHROMAS_BY_PURCHASE_YEAR: "groupChromasByPurchaseYear",
                GROUP_CHROMAS_BY_RELEASE_YEAR: "groupChromasByReleaseYear",
                GROUP_CHROMAS_BY_NAME_FIRST_LETTER: "groupChromasByNameFirstLetter",
                GROUP_CHROMAS_BY_CHAMPION: "groupChromasByChampion",
                GROUP_CHROMAS_BY_SET: "groupChromasBySet",
                GROUP_CHROMAS_BY_TIER: "groupChromasByTier",
                GROUP_CHROMAS_BY_BASE_SKIN: "groupChromasByBaseSkin",
                GROUP_BY_RECENT_ACQUIRED: "groupByRecentAcquired"
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UNOWNED_SKIN_FILTER = t.THUMBNAIL_PER_ROW = t.TENCENT_REGION_NAME = t.SKIN_WITH_SKINLINE_FILTER = t.SKIN_UNLOCK_TRANSACTION_TYPE = t.SKIN_RARITIES = t.SKIN_BORDER_RARITIES = t.PARSEINT_DEFAULT_RADIX = t.OWNED_SKIN_FILTER = t.NO_SKINLINE_ID = t.GEM_BASE_PATH = t.DEFAULT_LOCALE = t.COLLECTION_GRID_WIDTH = t.COLLECTION_GRID_SEPARATOR_ROW_HEIGHTS = t.COLLECTION_GRID_ROW_TYPES = t.COLLECTION_GRID_OWNERSHIP_FILTERS = t.CN_SKIN_RARITIES = t.CN_RARITY_TRA_KEY_PREFIX = t.ALL_SKINLINE_ID = void 0, t.generateCNSkinRarityObject = p, t.generateSkinRarityObject = r, t.getCNGemIcon = d, t.getCNRarityTooltipTraKey = u, t.getCNRarityTraKey = m, t.getGemIcon = s, t.getRarityTooltipTraKey = o, t.getRarityTraKey = i;
            t.DEFAULT_LOCALE = "en";
            t.THUMBNAIL_PER_ROW = 4;
            t.NO_SKINLINE_ID = 0;
            t.ALL_SKINLINE_ID = -1;
            t.COLLECTION_GRID_WIDTH = 760;
            t.COLLECTION_GRID_OWNERSHIP_FILTERS = {
                ALL: "none",
                OWNED: "owned",
                UNOWNED: "unowned"
            };
            t.COLLECTION_GRID_ROW_TYPES = {
                GROUP: {
                    id: "GROUP",
                    height: 38
                },
                SKINS: {
                    id: "SKINS",
                    height: 216
                },
                SEPARATOR: {
                    id: "SEPARATOR"
                }
            };
            t.OWNED_SKIN_FILTER = e => e.ownership.owned;
            t.UNOWNED_SKIN_FILTER = e => !e.ownership.owned;
            t.SKIN_WITH_SKINLINE_FILTER = e => e.skinLineId && 0 !== e.skinLineId;
            const n = {
                ULTIMATE: "ultimate",
                MYTHIC: "mythic",
                LEGENDARY: "legendary",
                EPIC: "epic",
                OTHER: "other"
            };
            t.SKIN_BORDER_RARITIES = n;
            const a = "/lol-game-data/assets/v1/rarity-gem-icons";

            function s(e) {
                return `${a}/${e}.png`
            }

            function i(e) {
                return `skin_grid_rarity_${e}`
            }

            function o(e) {
                return e
            }

            function r(e, t, a = !0) {
                return {
                    order: e,
                    gemIcon: a ? s(t) : null,
                    borderRarity: n[t.toUpperCase()],
                    traKey: i(t),
                    tooltipType: a ? t : null
                }
            }
            t.GEM_BASE_PATH = a;
            const l = {
                kNoRarity: r(0, "other", !1),
                kEpic: r(1, "epic"),
                kLegendary: r(2, "legendary"),
                kMythic: r(3, "mythic"),
                kUltimate: r(4, "ultimate")
            };
            t.SKIN_RARITIES = l;
            const c = "skin_grid_cn_rarity_";

            function d(e) {
                return `${a}/cn-gem-${e}.png`
            }

            function m(e) {
                return `${c}${e}`
            }

            function u(e) {
                return `cn_rarity_${e}`
            }

            function p(e, t, a = !0) {
                return {
                    order: e,
                    gemIcon: a ? d(e) : null,
                    borderRarity: n[t.toUpperCase()],
                    traKey: m(e),
                    tooltipType: a ? u(e) : null
                }
            }
            t.CN_RARITY_TRA_KEY_PREFIX = c;
            const h = {
                0: p(0, "other", !1),
                1: p(1, "epic"),
                2: p(2, "epic"),
                3: p(3, "epic"),
                4: p(4, "legendary"),
                5: p(5, "legendary"),
                7: p(7, "mythic"),
                8: p(8, "mythic"),
                9: p(9, "ultimate")
            };
            t.CN_SKIN_RARITIES = h;
            t.PARSEINT_DEFAULT_RADIX = 10;
            t.SKIN_UNLOCK_TRANSACTION_TYPE = {
                PURCHASE: {
                    key: "PURCHASE",
                    traKey: "purchase"
                },
                LOOT: {
                    key: "LOOT",
                    traKey: "loot"
                },
                GIFT: {
                    key: "GIFT",
                    traKey: "gift"
                },
                REWARD: {
                    key: "REWARD",
                    traKey: "reward"
                }
            };
            t.COLLECTION_GRID_SEPARATOR_ROW_HEIGHTS = {
                GROUP_SEPARATOR_HEIGHT: 15,
                UNIVERSE_SEPARATOR_HEIGHT: 10,
                UNKNOWN_UNIVERSE_SEPARATOR_HEIGHT: 58
            };
            t.TENCENT_REGION_NAME = "TENCENT"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getSimpleNameFilter = function(e, t, n = !1) {
                return function(a) {
                    const i = a.title || a.name,
                        o = i ? [i.toLocaleLowerCase(t)] : [];
                    return (0, s.default)(e, o, t, n)
                }
            };
            var a, s = (a = n(479)) && a.__esModule ? a : {
                default: a
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(480)) && a.__esModule ? a : {
                default: a
            };
            var i = function(e, t, n, a = !1) {
                if (!e) return !0;
                const i = e.toLocaleLowerCase(n);
                return a ? s.default.filter(i, t).length > 0 : t.filter((e => e.includes(i))).length > 0
            };
            t.default = i
        }, e => {
            var t;
            t = {}, e.exports = t, t.simpleFilter = function(e, n) {
                return n.filter((function(n) {
                    return t.test(e, n)
                }))
            }, t.test = function(e, n) {
                return null !== t.match(e, n)
            }, t.match = function(e, t, n) {
                n = n || {};
                var a, s = 0,
                    i = [],
                    o = t.length,
                    r = 0,
                    l = 0,
                    c = n.pre || "",
                    d = n.post || "",
                    m = n.caseSensitive && t || t.toLowerCase();
                e = n.caseSensitive && e || e.toLowerCase();
                for (var u = 0; u < o; u++) a = t[u], m[u] === e[s] ? (a = c + a + d, s += 1, l += 1 + l) : l = 0, r += l, i[i.length] = a;
                return s === e.length ? (r = m === e ? 1 / 0 : r, {
                    rendered: i.join(""),
                    score: r
                }) : null
            }, t.filter = function(e, n, a) {
                return n && 0 !== n.length ? "string" != typeof e ? n : (a = a || {}, n.reduce((function(n, s, i, o) {
                    var r = s;
                    a.extract && (r = a.extract(s));
                    var l = t.match(e, r, a);
                    return null != l && (n[n.length] = {
                        string: l.rendered,
                        score: l.score,
                        index: i,
                        original: s
                    }), n
                }), []).sort((function(e, t) {
                    var n = t.score - e.score;
                    return n || e.index - t.index
                }))) : []
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = class {
                constructor(e) {
                    this._filters = e
                }
                applyFilters(e) {
                    let t = [];
                    return e && Array.isArray(e) && (t = e, this._filters && this._filters.length > 0 && (t = this._filters.reduce(((e, t) => e.filter(t)), t))), t
                }
            };
            t.default = n
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.group = function e(t, n, o) {
                if (!t) throw new Error("Grouping configuration should not be null");
                if (!n || !Array.isArray(n)) throw new Error("Data for grouping must be an array.");
                const r = function(e, t, n) {
                    if (!e) throw new Error("Grouping strategy is null.");
                    if (!e.groupingType || !e.getGroupKeys || !e.getGroupMetaData) throw new Error(`Invalid grouping strategy. Grouping strategy needs to have valid groupType, getGroupKeys method and getGroupMetaData method. Group type: ${e.groupingType}, getGroupKeys: ${e.getGroupKeys} and getGroupMetaData: ${e.getGroupMetaData}`);
                    const {
                        groupingType: o
                    } = e, r = new i.default(o);
                    if (e === a.EMPTY_GROUPING_STRATEGY) r.appendGroupNode(new s.default(o, 1, {}, t));
                    else {
                        const a = new Map;
                        t.forEach((t => {
                            const s = e.getGroupKeys(t, n);
                            s && Array.isArray(s) && s.forEach((e => {
                                if (a.has(e)) a.get(e).push(t);
                                else {
                                    const n = [t];
                                    a.set(e, n)
                                }
                            }))
                        })), a.forEach(((t, a) => {
                            const i = e.getGroupMetaData(a, t, n);
                            r.appendGroupNode(new s.default(o, a, i, t))
                        }))
                    }
                    return r
                }(t.groupingStrategy, n, o);
                t.subGroupingConfigs && Array.isArray(t.subGroupingConfigs) && r.groupNodes.forEach((n => {
                    t.subGroupingConfigs.forEach((t => {
                        n.subGroups.push(e(t, n.groupMembers, o))
                    }))
                }));
                return r
            }, t.sortGroupResult = function e(t, n, a) {
                if (!t) throw new Error("Sorting configuration could not be null.");
                if (!n) throw new Error("Grouping result is null.");
                t.groupSortingStrategy.sort(n.groupNodes, a), n.groupNodes.forEach((n => {
                    if (n.subGroups && n.subGroups.length > 0) n.subGroups.forEach(((s, i) => {
                        if (i >= t.subGroupSortingConfigs.length) throw new Error(`No sub group sorting strategy for group with type ${n.groupingType}. Sub group index ${i}`);
                        e(t.subGroupSortingConfigs[i], s, a)
                    }));
                    else {
                        if (!t.contentSortingStrategy) throw new Error(`No content sorting strategy for group with type ${n.groupingType} and key ${n.groupKey}`);
                        t.contentSortingStrategy.sort(n.groupMembers, a)
                    }
                }))
            };
            var a = n(483),
                s = o(n(485)),
                i = o(n(486));

            function o(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.EMPTY_GROUPING_STRATEGY = void 0;
            const a = {
                groupingType: n(484).EMPTY_GROUPING_TYPE,
                getGroupKeys: () => [1],
                getGroupMetaData: () => ({})
            };
            t.EMPTY_GROUPING_STRATEGY = a
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.EMPTY_GROUPING_TYPE = void 0;
            t.EMPTY_GROUPING_TYPE = "NONE_GROUPING"
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = class {
                constructor(e, t, n, a) {
                    this.groupingType = e, this.groupKey = t, this.groupMetaData = n, this.groupMembers = a, this.subGroups = []
                }
                get filteredGroupMembers() {
                    return this._filteredGroupMembers ? this._filteredGroupMembers : this.groupMembers
                }
                set filteredGroupMembers(e) {
                    if (!e || !Array.isArray(e)) throw new Error(`FilteredGroupMembers must be an array. Get ${e}`);
                    this._filteredGroupMembers = e
                }
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = class {
                constructor(e) {
                    this.groupingType = e, this.groupNodes = []
                }
                appendGroupNode(e) {
                    this.groupNodes.push(e)
                }
            };
            t.default = n
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = n(488),
                o = (a = n(489)) && a.__esModule ? a : {
                    default: a
                };
            class r {
                static isChroma(e) {
                    return Boolean(e && e.inventoryType === i.STORE_INVENTORY_TYPE.CHAMPION_SKIN && e.subInventoryType === i.STORE_SUB_INVENTORY_TYPE.CHROMA)
                }
                static hasValidPrice(e) {
                    return !!(e && s._.isArray(e) && e.length > 0) && void 0 !== e.find((e => e.cost > 0))
                }
                static hasValidDates(e, t) {
                    return !(!t || !t.releaseDate || e < t.releaseDate) && !(t.inactiveDate && e > t.inactiveDate)
                }
                static isPurchasable(e) {
                    if (e && e.active && e.releaseDate) {
                        const t = Date.now();
                        return !!r.hasValidDates(t, e) && (!!r.isBundle(e) || (!!(e.sale && t >= e.sale.startDate && t < e.sale.endDate && r.hasValidPrice(e.sale.prices)) || r.hasValidPrice(e.prices)))
                    }
                    return !1
                }
                static getCatalogMap(e) {
                    return e ? e.filter(r.isPurchasable).reduce(((e, t) => {
                        r.isBundle(t) && t.bundled && t.bundled.items && t.bundled.items.forEach((n => {
                            const {
                                inventoryType: a,
                                itemId: s
                            } = n;
                            r.getItemCatalog(e, a, s).addCatalog(t)
                        }));
                        const {
                            inventoryType: n,
                            itemId: a
                        } = t;
                        return r.getItemCatalog(e, n, a).addCatalog(t), e
                    }), new Map) : new Map
                }
                static getItemCatalog(e, t, n) {
                    e.has(t) || e.set(t, new Map);
                    const a = e.get(t);
                    return a.has(n) || a.set(n, new o.default(n, t)), a.get(n)
                }
                static isBundle(e) {
                    return Boolean(e && e.inventoryType === i.STORE_INVENTORY_TYPE.BUNDLES)
                }
                constructor(e) {
                    this.catalogMap = r.getCatalogMap(e)
                }
                getSummonerIconItemCatalog(e) {
                    return this._getItemCatalog(i.STORE_INVENTORY_TYPE.SUMMONER_ICON, e)
                }
                getWardSkinItemCatalog(e) {
                    return this._getItemCatalog(i.STORE_INVENTORY_TYPE.WARD_SKIN, e)
                }
                getChromaItemCatalog(e) {
                    return this._getItemCatalog(i.STORE_INVENTORY_TYPE.CHAMPION_SKIN, e)
                }
                getSkinItemCatalog(e) {
                    return this._getItemCatalog(i.STORE_INVENTORY_TYPE.CHAMPION_SKIN, e)
                }
                getChampionItemCatalog(e) {
                    return this._getItemCatalog(i.STORE_INVENTORY_TYPE.CHAMPION, e)
                }
                getAllChromaBundles() {
                    const {
                        catalogMap: e
                    } = this;
                    if (e && e.has(i.STORE_INVENTORY_TYPE.BUNDLES)) {
                        const t = e.get(i.STORE_INVENTORY_TYPE.BUNDLES),
                            n = [];
                        return t.forEach((e => {
                            e.singleCatalog && e.singleCatalog.subInventoryType === i.STORE_SUB_INVENTORY_TYPE.CHROMA_BUNDLE && n.push(e)
                        })), n.filter((e => e.isSinglePurchasable())).map((e => e.singleCatalog))
                    }
                    return []
                }
                getAllSkins() {
                    const {
                        catalogMap: e
                    } = this;
                    if (e && e.has(i.STORE_INVENTORY_TYPE.CHAMPION_SKIN)) {
                        const t = e.get(i.STORE_INVENTORY_TYPE.CHAMPION_SKIN),
                            n = [];
                        return t.forEach((e => n.push(e))), n.filter((e => e.isSinglePurchasable())).map((e => e.singleCatalog))
                    }
                    return []
                }
                _getItemCatalog(e, t) {
                    let n;
                    const a = this.catalogMap.get(e);
                    return a && (n = a.get(t)), n || (n = new o.default(t, e)), n
                }
            }
            var l = r;
            t.default = l
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.STORE_SUB_INVENTORY_TYPE = t.STORE_INVENTORY_TYPE = void 0;
            t.STORE_INVENTORY_TYPE = {
                CHAMPION: "CHAMPION",
                CHAMPION_SKIN: "CHAMPION_SKIN",
                BUNDLES: "BUNDLES",
                SUMMONER_ICON: "SUMMONER_ICON",
                WARD_SKIN: "WARD_SKIN"
            };
            t.STORE_SUB_INVENTORY_TYPE = {
                CHROMA: "RECOLOR",
                CHROMA_BUNDLE: "CHROMA_BUNDLE"
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = class {
                constructor(e, t) {
                    if (null == e || null == t) throw new TypeError("Item id and inventory type are required for ItemCatalog Object.");
                    this._itemId = e, this._inventoryType = t, this.catalogs = [], this._singleCatalog = null
                }
                get itemId() {
                    return this._itemId
                }
                get inventoryType() {
                    return this._inventoryType
                }
                get singleCatalog() {
                    return this._singleCatalog
                }
                addCatalog(e) {
                    e.itemId === this._itemId && e.inventoryType === this._inventoryType && (this._singleCatalog = e), this.catalogs.push(e)
                }
                isSinglePurchasable() {
                    return null !== this._singleCatalog
                }
                isPurchasable() {
                    return this.catalogs.length > 0
                }
                isOnSale() {
                    let e = !1;
                    if (this.isSinglePurchasable() && this._singleCatalog.sale) {
                        const t = new Date(this._singleCatalog.sale.startDate),
                            n = new Date(this._singleCatalog.sale.endDate);
                        n >= t && (e = t.getTime() < Date.now() && Date.now() < n.getTime())
                    }
                    return e
                }
            };
            t.default = n
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(491);
            const s = new Set([a.LOOT_ITEM_TYPES.SKIN, a.LOOT_ITEM_TYPES.SUMMONER_ICON, a.LOOT_ITEM_TYPES.WARD_SKIN]);
            class i {
                static isAvailableLootItem(e) {
                    return !(!e || e.tags && e.tags.includes(a.UNAVAILABLE_LOOT_ITEM_TAG))
                }
                constructor(e) {
                    this._initLootItems(e)
                }
                isLootableSummonerIcon(e) {
                    return this._isLootable(e, a.LOOT_ITEM_TYPES.SUMMONER_ICON)
                }
                isLootableWardSkin(e) {
                    return this._isLootable(e, a.LOOT_ITEM_TYPES.WARD_SKIN)
                }
                isLootableSkin(e) {
                    return this._isLootable(e, a.LOOT_ITEM_TYPES.SKIN)
                }
                isLootableChroma(e) {
                    return this.isLootableSkin(e)
                }
                _initLootItems(e) {
                    e && Array.isArray(e) && e.length > 0 ? this.lootItemsMap = e.filter(i.isAvailableLootItem).reduce(((e, t) => {
                        if (s.has(t.type)) {
                            let n = e.get(t.type);
                            n || (n = new Set, e.set(t.type, n)), n.add(t.storeItemId)
                        }
                        return e
                    }), new Map) : this.lootItemsMap = new Map
                }
                _isLootable(e, t) {
                    const n = this._getLootItemIds(t);
                    return !!n && n.has(e)
                }
                _getLootItemIds(e) {
                    return this.lootItemsMap.get(e)
                }
            }
            var o = i;
            t.default = o
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UNAVAILABLE_LOOT_ITEM_TAG = t.LOOT_ITEM_TYPES = void 0;
            t.LOOT_ITEM_TYPES = {
                SKIN: "SKIN",
                WARD_SKIN: "WARDSKIN",
                SUMMONER_ICON: "SUMMONERICON"
            };
            t.UNAVAILABLE_LOOT_ITEM_TAG = "norerolloutput"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createRowRenderer = d, t.getRowRenderer = function(e, t, n) {
                if (!e.has(t)) {
                    const a = d(t, n);
                    e.set(t, a)
                }
                return e.get(t)
            };
            var a = c(n(493)),
                s = c(n(495)),
                i = c(n(496)),
                o = c(n(497)),
                r = c(n(498)),
                l = n(499);

            function c(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }

            function d(e, t) {
                switch (e) {
                    case "GROUP":
                        return new a.default(t);
                    case l.CLASH_AWARDS_ROW_CONFIG.LOGO.id:
                        return new s.default(t);
                    case l.CLASH_AWARDS_ROW_CONFIG.BANNER.id:
                        return new i.default(t);
                    case l.CLASH_AWARDS_ROW_CONFIG.TROPHY.id:
                        return new o.default(t);
                    case "SEPARATOR":
                        return new r.default;
                    default:
                        throw new Error(`No row renderer registered for row type ${e}`)
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(494)) && a.__esModule ? a : {
                default: a
            };
            class i extends s.default {
                static createGroupTitleElement(e) {
                    const t = document.createElement("div");
                    return t.classList.add("group-title"), t.textContent = e.groupTitle, t
                }
                constructor(e) {
                    if (super(), "object" != typeof e) throw new TypeError("Render context has be an object");
                    this._renderContext = e
                }
                setRenderContext(e) {
                    if ("object" != typeof e) throw new TypeError("Render context has be an object");
                    this._renderContext = e
                }
                createRow(e) {
                    super.createRow(e);
                    const t = e.data,
                        n = document.createElement("div");
                    n.style.position = "absolute", n.dataset.groupId = t.groupId;
                    const a = document.createElement("div");
                    a.classList.add("group-title-wrapper");
                    const s = i.createGroupTitleElement(t);
                    return a.appendChild(s), n.appendChild(a), n
                }
                updateRow(e, t) {
                    super.updateRow(e, t);
                    const n = t.children[0],
                        a = e.data,
                        s = t.querySelector(".group-title-wrapper");
                    a.isSubGroup ? s.classList.add("subtitle") : s.classList.remove("subtitle");
                    const i = n.querySelector(".group-title");
                    i && (i.textContent = a.groupTitle);
                    const o = n.querySelector(".group-subtitle");
                    o && (o.textContent = a.groupSubtitle)
                }
            }
            var o = i;
            t.default = o
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = class {
                createRow() {}
                updateRow() {}
                deleteRow() {}
                resetRow() {}
                setRenderContext() {}
            };
            t.default = n
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(494)) && a.__esModule ? a : {
                default: a
            };
            const i = "clash-award";
            class o extends s.default {
                static resetClashLogo(e) {}
                constructor(e) {
                    super(), this._renderContext = e
                }
                setRenderContext(e) {
                    this._renderContext = e
                }
                createRow(e) {
                    super.createRow();
                    const t = document.createElement("div"),
                        n = document.createElement("div");
                    return n.classList.add("clash-logo-row"), t.appendChild(n), e.data.forEach((e => {
                        const t = this._createClashLogo(e);
                        n.appendChild(t)
                    })), t
                }
                updateRow(e, t) {
                    super.updateRow();
                    const n = t.firstChild;
                    this._balancingThumbnailCount(e, n);
                    Array.from(n.children).forEach(((t, n) => {
                        this._updateClashLogo(t, e.data[n])
                    }))
                }
                deleteRow(e) {
                    super.deleteRow();
                    Array.from(e.querySelectorAll(i)).forEach((e => {
                        this._removeListeners(e)
                    }))
                }
                resetRow(e) {
                    super.resetRow();
                    const t = e.querySelectorAll(i);
                    Array.from(t).forEach((e => {
                        o.resetClashLogo(e)
                    }))
                }
                _getTooltipManager() {
                    return this._renderContext
                }
                _createClashLogo(e) {
                    const t = document.createElement(i);
                    t.classList.add("clash-logo-wrapper"), t.setAttribute("type", "logo"), t.dataset.uuid = e.uuid;
                    const n = document.createElement("img");
                    n.classList.add("clash-logo-img"), n.src = e.imgPath;
                    const a = document.createElement("div");
                    a.classList.add("clash-logo-border-wrapper"), t.appendChild(a);
                    const s = document.createElement("div");
                    return s.classList.add("clash-logo-border"), a.appendChild(s), t.appendChild(n), this._getTooltipManager() && this._getTooltipManager().assignTooltip(t), t
                }
                _updateClashLogo(e, t) {
                    const n = t;
                    e.querySelector(".clash-logo-img").src = n.imgPath, e.dataset.id = n.id
                }
                _balancingThumbnailCount(e, t) {
                    const n = e.data;
                    if (n.length < t.children.length)
                        for (; n.length < t.children.length;) t.removeChild(t.children[n.length]);
                    else if (n.length > t.children.length)
                        for (let e = t.children.length; n.length > e; e += 1) t.appendChild(this._createClashLogo(n[e]))
                }
                _removeListeners(e) {
                    this._getTooltipManager() && this._getTooltipManager().unassignTooltip(e)
                }
            }
            var r = o;
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(494)) && a.__esModule ? a : {
                default: a
            };
            const i = "clash-award";
            class o extends s.default {
                static resetClashBanner(e) {}
                constructor(e) {
                    super(), this._renderContext = e
                }
                setRenderContext(e) {
                    this._renderContext = e
                }
                createRow(e) {
                    super.createRow();
                    const t = document.createElement("div"),
                        n = document.createElement("div");
                    return n.classList.add("clash-banner-row"), t.appendChild(n), e.data.forEach((e => {
                        const t = this._createClashBanner(e);
                        n.appendChild(t)
                    })), t
                }
                updateRow(e, t) {
                    super.updateRow();
                    const n = t.firstChild;
                    this._balancingThumbnailCount(e, n);
                    Array.from(n.children).forEach(((t, n) => {
                        this._updateClashBanner(t, e.data[n])
                    }))
                }
                deleteRow(e) {
                    super.deleteRow();
                    Array.from(e.querySelectorAll(i)).forEach((e => {
                        this._removeListeners(e)
                    }))
                }
                resetRow(e) {
                    super.resetRow();
                    const t = e.querySelectorAll(i);
                    Array.from(t).forEach((e => {
                        o.resetClashBanner(e)
                    }))
                }
                _getTooltipManager() {
                    return this._renderContext
                }
                _createClashBanner(e) {
                    const t = document.createElement(i);
                    t.classList.add("clash-banner-wrapper"), t.setAttribute("type", "banner"), t.dataset.uuid = e.uuid, t.addEventListener("click", this._getBannerTrophyClickHandler());
                    const n = document.createElement("div");
                    n.classList.add("clash-banner-border-wrapper"), t.appendChild(n);
                    const a = document.createElement("div");
                    a.classList.add("clash-banner-background"), n.appendChild(a);
                    const s = document.createElement("div");
                    s.classList.add("clash-banner-border"), n.appendChild(s);
                    const o = document.createElement("div");
                    o.classList.add("clash-banner-border-lock"), n.appendChild(o);
                    const r = document.createElement("img");
                    return r.classList.add("clash-banner-img"), r.src = e.imgPath, t.appendChild(r), this._getTooltipManager() && this._getTooltipManager().assignTooltip(t), t
                }
                _updateClashBanner(e, t) {
                    const n = t,
                        a = e.querySelector(".clash-banner-img"),
                        s = e.querySelector(".clash-banner-border-wrapper"),
                        i = e.querySelector(".clash-banner-border-lock");
                    e.dataset.id = n.id, e.dataset.uuid = n.uuid, a.src = n.imgPath, n.ownership && n.ownership.owned ? (a.classList.remove("dimmed"), s.classList.remove("unowned"), i.classList.add("hidden")) : (a.classList.add("dimmed"), s.classList.add("unowned"), i.classList.remove("hidden"))
                }
                _balancingThumbnailCount(e, t) {
                    const n = e.data;
                    if (n.length < t.children.length)
                        for (; n.length < t.children.length;) t.removeChild(t.children[n.length]);
                    else if (n.length > t.children.length)
                        for (let e = t.children.length; n.length > e; e += 1) t.appendChild(this._createClashBanner(n[e]))
                }
                _getBannerTrophyClickHandler() {
                    return this._renderContext.get("bannerTrophyClickHandler")
                }
                _removeListeners(e) {
                    this._getTooltipManager() && this._getTooltipManager().unassignTooltip(e), e.removeEventListener("click", this._getBannerTrophyClickHandler())
                }
            }
            var r = o;
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(494)) && a.__esModule ? a : {
                default: a
            };
            const i = "clash-award";
            class o extends s.default {
                static resetClashTrophy(e) {}
                constructor(e) {
                    super(), this._renderContext = e
                }
                setRenderContext(e) {
                    this._renderContext = e
                }
                createRow(e) {
                    super.createRow();
                    const t = document.createElement("div"),
                        n = document.createElement("div");
                    return n.classList.add("clash-trophy-row"), t.appendChild(n), e.data.forEach((e => {
                        const t = this._createClashTrophy(e);
                        n.appendChild(t)
                    })), t
                }
                updateRow(e, t) {
                    super.updateRow();
                    const n = t.firstChild;
                    this._balancingThumbnailCount(e, n);
                    Array.from(n.children).forEach(((t, n) => {
                        this._updateClashTrophy(t, e.data[n])
                    }))
                }
                deleteRow(e) {
                    super.deleteRow();
                    Array.from(e.querySelectorAll(i)).forEach((e => {
                        this._removeListeners(e)
                    }))
                }
                resetRow(e) {
                    super.resetRow();
                    const t = e.querySelectorAll(i);
                    Array.from(t).forEach((e => {
                        o.resetClashTrophy(e)
                    }))
                }
                _getTooltipManager() {
                    return this._renderContext
                }
                _createClashTrophy(e) {
                    const t = document.createElement(i);
                    t.classList.add("clash-trophy-wrapper"), t.setAttribute("type", "logo"), t.dataset.id = e.id, t.dataset.uuid = e.uuid, t.addEventListener("click", this._getBannerTrophyClickHandler());
                    const n = document.createElement("div");
                    n.classList.add("clash-trophy-border-wrapper"), t.appendChild(n);
                    const a = document.createElement("div");
                    a.classList.add("clash-trophy-background"), n.appendChild(a);
                    const s = document.createElement("div");
                    s.classList.add("clash-trophy-border"), n.appendChild(s);
                    const o = document.createElement("div");
                    o.classList.add("clash-trophy-border-lock"), n.appendChild(o);
                    const r = document.createElement("img");
                    return r.classList.add("clash-trophy-img"), r.src = e.imgPath, t.appendChild(r), this._getTooltipManager() && this._getTooltipManager().assignTooltip(t), t
                }
                _updateClashTrophy(e, t) {
                    const n = t,
                        a = e.querySelector(".clash-trophy-img"),
                        s = e.querySelector(".clash-trophy-border-wrapper"),
                        i = e.querySelector(".clash-trophy-border-lock");
                    e.dataset.uuid = n.uuid, a.src = n.imgPath, n.ownership && n.ownership.owned ? (a.classList.remove("dimmed"), s.classList.remove("unowned"), i.classList.add("hidden")) : (a.classList.add("dimmed"), s.classList.add("unowned"), i.classList.remove("hidden"))
                }
                _balancingThumbnailCount(e, t) {
                    const n = e.data;
                    if (n.length < t.children.length)
                        for (; n.length < t.children.length;) t.removeChild(t.children[n.length]);
                    else if (n.length > t.children.length)
                        for (let e = t.children.length; n.length > e; e += 1) t.appendChild(this._createClashTrophy(n[e]))
                }
                _getBannerTrophyClickHandler() {
                    return this._renderContext.get("bannerTrophyClickHandler")
                }
                _removeListeners(e) {
                    this._getTooltipManager() && this._getTooltipManager().unassignTooltip(e), e.removeEventListener("click", this._getBannerTrophyClickHandler())
                }
            }
            var r = o;
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(494)) && a.__esModule ? a : {
                default: a
            };
            class i extends s.default {
                createRow() {
                    super.createRow();
                    const e = document.createElement("div");
                    e.style.position = "absolute";
                    const t = document.createElement("div");
                    return t.classList.add("separator-div"), e.appendChild(t), e
                }
                updateRow(e, t) {
                    super.updateRow(e, t);
                    const n = e.data.separatorClass,
                        a = t.querySelector(".separator-div");
                    a && !a.classList.contains(n) && (a.className = "", a.classList.add("separator-div", n))
                }
            }
            var o = i;
            t.default = o
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.CLASH_LOGO_SOURCE = t.CLASH_AWARDS_ROW_CONFIG = void 0;
            t.CLASH_AWARDS_ROW_CONFIG = {
                LOGO: {
                    id: "LOGO",
                    height: 148,
                    entriesPerRow: 5,
                    order: 3
                },
                TROPHY: {
                    id: "TROPHY",
                    height: 240,
                    entriesPerRow: 5,
                    order: 1
                },
                BANNER: {
                    id: "BANNER",
                    height: 240,
                    entriesPerRow: 5,
                    order: 2
                },
                DEFAULT: {
                    id: "DEFAULT",
                    height: 250,
                    entriesPerRow: 5,
                    order: 0
                }
            };
            t.CLASH_LOGO_SOURCE = {
                VP: "VP",
                LOOT: "LOOT",
                DEFAULT: "DEFAULT"
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.generateRowDataFromGroupingResult = m;
            var a, s = n(501),
                i = n(499),
                o = n(502),
                r = n(504),
                l = (a = n(503)) && a.__esModule ? a : {
                    default: a
                };
            const c = {
                groupTitle: "",
                groupSubtitle: null,
                showGroupCount: !1,
                ownedCollectibleCount: 0,
                availableCollectibleCount: 0,
                totalCollectibleCount: 0,
                showCompleteSet: !1,
                completeSetIcon: null,
                groupingType: null,
                originGroupId: null,
                isSubGroup: !1
            };
            const d = new Map;

            function m(e, t) {
                const n = [];
                return e.groupNodes.forEach((e => {
                    if (e.filteredGroupMembers && e.filteredGroupMembers.length > 0) {
                        const a = function(e, t) {
                            const n = d.get(e.groupingType);
                            if (!n) throw new Error(`No row generator registered for grouping type ${e.groupingType}`);
                            return n(e, t)
                        }(e, t);
                        a && n.push(...a)
                    }
                })), n
            }

            function u(e, t, n) {
                if (!e) throw new Error(`groupTitleObject is null for group node ${t}`);
                const a = [];
                if (t.subGroups.length > 0 ? t.subGroups.forEach((e => {
                        a.push(...m(e, n))
                    })) : a.push(... function(e) {
                        const t = [],
                            n = Array.from(e.filteredGroupMembers),
                            a = e.groupMetaData.awardType;
                        for (; n.length;) {
                            const e = n.splice(0, i.CLASH_AWARDS_ROW_CONFIG[a].entriesPerRow);
                            t.push(new l.default({
                                data: e,
                                height: i.CLASH_AWARDS_ROW_CONFIG[a].height,
                                type: a,
                                groupingType: null,
                                groupId: null
                            }))
                        }
                        return t
                    }(t)), a.length > 0) {
                    const n = function(e, t) {
                        return new l.default({
                            type: s.COLLECTION_GRID_ROW_TYPES.GROUP.id,
                            height: s.COLLECTION_GRID_ROW_TYPES.GROUP.height,
                            data: e,
                            groupingType: t.groupingType,
                            groupId: t.groupMetaData.groupId ? t.groupMetaData.groupId : t.groupKey
                        })
                    }(e, t);
                    a.unshift(n), a.push(o.GROUP_SEPARATOR_ROW_DATA)
                }
                return a
            }
            d.set(r.GROUPING_TYPES.GROUP_BY_CLASH_AWARDS_TYPE, (function(e, t) {
                var n;
                return u((n = {
                    groupTitle: t.get(`clash_awards_row_group_title_${e.groupMetaData.awardType}`)
                }, Object.assign({}, c, n)), e, t)
            })), d.set(r.GROUPING_TYPES.EMPTY_GROUPING, (function(e, t) {
                const n = [];
                return e.subGroups.length > 0 && e.subGroups.forEach((e => {
                    n.push(...m(e, t))
                })), n
            }))
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.VIRTUAL_LIST_ELEMENT_NAME = t.THUMBNAIL_PER_ROW = t.COLLECTION_GRID_WIDTH = t.COLLECTION_GRID_SEPARATOR_ROW_HEIGHTS = t.COLLECTION_GRID_ROW_TYPES = t.COLLECTION_GRID_HEIGHT = void 0;
            t.THUMBNAIL_PER_ROW = 4;
            t.COLLECTION_GRID_HEIGHT = 576;
            t.COLLECTION_GRID_WIDTH = 770;
            t.COLLECTION_GRID_ROW_TYPES = {
                GROUP: {
                    id: "GROUP",
                    height: 38
                },
                SEPARATOR: {
                    id: "SEPARATOR"
                }
            };
            t.COLLECTION_GRID_SEPARATOR_ROW_HEIGHTS = {
                GROUP_SEPARATOR_HEIGHT: 15,
                ESPORT_EVENT_SEPARATOR_HEIGHT: 10
            };
            t.VIRTUAL_LIST_ELEMENT_NAME = "lol-collectibles-libs-virtual-list"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.GROUP_SEPARATOR_ROW_DATA = void 0;
            var a, s = n(501);
            const i = new(((a = n(503)) && a.__esModule ? a : {
                default: a
            }).default)({
                type: s.COLLECTION_GRID_ROW_TYPES.SEPARATOR.id,
                height: s.COLLECTION_GRID_SEPARATOR_ROW_HEIGHTS.GROUP_SEPARATOR_HEIGHT,
                data: {
                    separatorClass: "group-separator"
                }
            });
            t.GROUP_SEPARATOR_ROW_DATA = i
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = class {
                constructor(e) {
                    const {
                        type: t,
                        height: n,
                        data: a,
                        groupingType: s,
                        groupId: i
                    } = e;
                    if (!t || !Number.isFinite(n) || !a) throw new Error(`Grid row data must contains valid type, valid float height and no null data. Get type: ${t}, height ${n} and data ${a}`);
                    this.type = t, this.height = n, this.data = a, this.groupingType = s, this.groupId = i
                }
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.GROUPING_TYPES = void 0;
            t.GROUPING_TYPES = {
                EMPTY_GROUPING: "emptyGrouping",
                GROUP_BY_CLASH_AWARDS_TYPE: "groupClashAwardsByType"
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.START_COLLECTING_SORTING_CONFIG = t.START_COLLECTING_GROUPING_CONFIG = t.DEFAULT_PANEL_SORTING = t.DEFAULT_PANEL_DROPDOWN_OPTION = t.AWARDS_DROPDOWN_GROUP_OPTIONS = void 0;
            const a = n(506).CLASH_AWARDS_GROUPING_CONFIGS,
                s = {
                    groupingByTypeSortByAcquiredDateAscending: {
                        name: "groupingByTypeSortByAcquiredDateAscending",
                        traKey: "clash_awards_sorting_acquired_ascending",
                        groupingConfig: a.BY_TYPE_ALL,
                        sortingConfig: a.BY_TYPE_ALL.supportedSortingConfigs.acquiredAscending
                    },
                    groupingByTypeSortByAcquiredDateDescending: {
                        name: "groupingByTypeSortByAcquiredDateDescending",
                        traKey: "clash_awards_sorting_acquired_descending",
                        groupingConfig: a.BY_TYPE_ALL,
                        sortingConfig: a.BY_TYPE_ALL.supportedSortingConfigs.acquiredDescending
                    },
                    groupingByTypeSortByNameAscending: {
                        name: "groupingByTypeSortByNameAscending",
                        traKey: "clash_awards_sorting_name_ascending",
                        groupingConfig: a.BY_TYPE_ALL,
                        sortingConfig: a.BY_TYPE_ALL.supportedSortingConfigs.nameAscending
                    },
                    groupingByTypeSortByNameDescending: {
                        name: "groupingByTypeSortByNameDescending",
                        traKey: "clash_awards_sorting_name_descending",
                        groupingConfig: a.BY_TYPE_ALL,
                        sortingConfig: a.BY_TYPE_ALL.supportedSortingConfigs.nameDescending
                    },
                    groupingByTypeSortByAcquiredDateAscendingTrophies: {
                        name: "groupingByTypeSortByAcquiredDateAscendingTrophies",
                        traKey: "clash_awards_sorting_acquired_ascending",
                        groupingConfig: a.BY_TYPE_TROPHIES,
                        sortingConfig: a.BY_TYPE_TROPHIES.supportedSortingConfigs.acquiredAscending
                    },
                    groupingByTypeSortByAcquiredDateDescendingTrophies: {
                        name: "groupingByTypeSortByAcquiredDateDescendingTrophies",
                        traKey: "clash_awards_sorting_acquired_descending",
                        groupingConfig: a.BY_TYPE_TROPHIES,
                        sortingConfig: a.BY_TYPE_TROPHIES.supportedSortingConfigs.acquiredDescending
                    },
                    groupingByTypeSortByNameAscendingTrophies: {
                        name: "groupingByTypeSortByNameAscendingTrophies",
                        traKey: "clash_awards_sorting_name_ascending",
                        groupingConfig: a.BY_TYPE_TROPHIES,
                        sortingConfig: a.BY_TYPE_TROPHIES.supportedSortingConfigs.nameAscending
                    },
                    groupingByTypeSortByNameDescendingTrophies: {
                        name: "groupingByTypeSortByNameDescendingTrophies",
                        traKey: "clash_awards_sorting_name_descending",
                        groupingConfig: a.BY_TYPE_TROPHIES,
                        sortingConfig: a.BY_TYPE_TROPHIES.supportedSortingConfigs.nameDescending
                    },
                    groupingByTypeSortByAcquiredDateAscendingBanners: {
                        name: "groupingByTypeSortByAcquiredDateAscendingBanners",
                        traKey: "clash_awards_sorting_acquired_ascending",
                        groupingConfig: a.BY_TYPE_BANNERS,
                        sortingConfig: a.BY_TYPE_BANNERS.supportedSortingConfigs.acquiredAscending
                    },
                    groupingByTypeSortByAcquiredDateDescendingBanners: {
                        name: "groupingByTypeSortByAcquiredDateDescendingBanners",
                        traKey: "clash_awards_sorting_acquired_descending",
                        groupingConfig: a.BY_TYPE_BANNERS,
                        sortingConfig: a.BY_TYPE_BANNERS.supportedSortingConfigs.acquiredDescending
                    },
                    groupingByTypeSortByNameAscendingBanners: {
                        name: "groupingByTypeSortByNameAscendingBanners",
                        traKey: "clash_awards_sorting_name_ascending",
                        groupingConfig: a.BY_TYPE_BANNERS,
                        sortingConfig: a.BY_TYPE_BANNERS.supportedSortingConfigs.nameAscending
                    },
                    groupingByTypeSortByNameDescendingBanners: {
                        name: "groupingByTypeSortByNameDescendingBanners",
                        traKey: "clash_awards_sorting_name_descending",
                        groupingConfig: a.BY_TYPE_BANNERS,
                        sortingConfig: a.BY_TYPE_BANNERS.supportedSortingConfigs.nameDescending
                    },
                    groupingByTypeSortByAcquiredDateAscendingLogos: {
                        name: "groupingByTypeSortByAcquiredDateAscendingLogos",
                        traKey: "clash_awards_sorting_acquired_ascending",
                        groupingConfig: a.BY_TYPE_LOGOS,
                        sortingConfig: a.BY_TYPE_LOGOS.supportedSortingConfigs.acquiredAscending
                    },
                    groupingByTypeSortByAcquiredDateDescendingLogos: {
                        name: "groupingByTypeSortByAcquiredDateDescendingLogos",
                        traKey: "clash_awards_sorting_acquired_descending",
                        groupingConfig: a.BY_TYPE_LOGOS,
                        sortingConfig: a.BY_TYPE_LOGOS.supportedSortingConfigs.acquiredDescending
                    },
                    groupingByTypeSortByNameAscendingLogos: {
                        name: "groupingByTypeSortByNameAscendingLogos",
                        traKey: "clash_awards_sorting_name_ascending",
                        groupingConfig: a.BY_TYPE_LOGOS,
                        sortingConfig: a.BY_TYPE_LOGOS.supportedSortingConfigs.nameAscending
                    },
                    groupingByTypeSortByNameDescendingLogos: {
                        name: "groupingByTypeSortByNameDescendingLogos",
                        traKey: "clash_awards_sorting_name_descending",
                        groupingConfig: a.BY_TYPE_LOGOS,
                        sortingConfig: a.BY_TYPE_LOGOS.supportedSortingConfigs.nameDescending
                    }
                },
                i = {
                    allAwards: {
                        key: "allAwards",
                        traKey: "clash_awards_sort_filter_all",
                        showUnownedFilter: !0,
                        sortOptions: {
                            groupingByTypeSortByAcquiredDateAscending: s.groupingByTypeSortByAcquiredDateAscending,
                            groupingByTypeSortByAcquiredDateDescending: s.groupingByTypeSortByAcquiredDateDescending,
                            groupingByTypeSortByNameAscending: s.groupingByTypeSortByNameAscending,
                            groupingByTypeSortByNameDescending: s.groupingByTypeSortByNameDescending
                        },
                        defaultSortOptionName: "groupingByTypeSortByAcquiredDateAscending"
                    },
                    trophiesAwards: {
                        key: "trophiesAwards",
                        traKey: "clash_awards_sort_filter_trophies",
                        showUnownedFilter: !0,
                        sortOptions: {
                            groupingByTypeSortByAcquiredDateAscendingTrophies: s.groupingByTypeSortByAcquiredDateAscendingTrophies,
                            groupingByTypeSortByAcquiredDateDescendingTrophies: s.groupingByTypeSortByAcquiredDateDescendingTrophies,
                            groupingByTypeSortByNameAscendingTrophies: s.groupingByTypeSortByNameAscendingTrophies,
                            groupingByTypeSortByNameDescendingTrophies: s.groupingByTypeSortByNameDescendingTrophies
                        },
                        defaultSortOptionName: "groupingByTypeSortByAcquiredDateAscendingTrophies"
                    },
                    bannersAwards: {
                        key: "bannersAwards",
                        traKey: "clash_awards_sort_filter_banners",
                        showUnownedFilter: !0,
                        sortOptions: {
                            groupingByTypeSortByAcquiredDateAscendingBanners: s.groupingByTypeSortByAcquiredDateAscendingBanners,
                            groupingByTypeSortByAcquiredDateDescendingBanners: s.groupingByTypeSortByAcquiredDateDescendingBanners,
                            groupingByTypeSortByNameAscendingBanners: s.groupingByTypeSortByNameAscendingBanners,
                            groupingByTypeSortByNameDescendingBanners: s.groupingByTypeSortByNameDescendingBanners
                        },
                        defaultSortOptionName: "groupingByTypeSortByAcquiredDateAscendingBanners"
                    },
                    logosAwards: {
                        key: "logosAwards",
                        traKey: "clash_awards_sort_filter_logos",
                        showUnownedFilter: !0,
                        sortOptions: {
                            groupingByTypeSortByAcquiredDateAscendingLogos: s.groupingByTypeSortByAcquiredDateAscendingLogos,
                            groupingByTypeSortByAcquiredDateDescendingLogos: s.groupingByTypeSortByAcquiredDateDescendingLogos,
                            groupingByTypeSortByNameAscendingLogos: s.groupingByTypeSortByNameAscendingLogos,
                            groupingByTypeSortByNameDescendingLogos: s.groupingByTypeSortByNameDescendingLogos
                        },
                        defaultSortOptionName: "groupingByTypeSortByAcquiredDateAscendingLogos"
                    }
                };
            t.AWARDS_DROPDOWN_GROUP_OPTIONS = i;
            const o = i.allAwards;
            t.DEFAULT_PANEL_DROPDOWN_OPTION = o;
            const r = o.sortOptions[o.defaultSortOptionName];
            t.DEFAULT_PANEL_SORTING = r;
            const l = i.allAwards;
            t.START_COLLECTING_GROUPING_CONFIG = l;
            const c = l.sortOptions[l.defaultSortOptionName];
            t.START_COLLECTING_SORTING_CONFIG = c
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.CLASH_AWARDS_GROUPING_CONFIGS = void 0;
            var a, s = (a = n(507)) && a.__esModule ? a : {
                    default: a
                },
                i = n(508),
                o = n(512),
                r = n(477);
            const {
                CLASH_AWARDS_GROUPING_STRATEGIES: l
            } = s.default, c = {
                BY_TYPE_ALL: {
                    ownershipFilter: r.COLLECTION_GRID_OWNERSHIP_FILTERS.ALL,
                    filters: [],
                    groupingStrategy: l.BY_TYPE,
                    supportedSortingConfigs: {
                        acquiredAscending: i.CLASH_AWARDS_SORTING_CONFIGS.ACQUIRED_ASCENDING,
                        acquiredDescending: i.CLASH_AWARDS_SORTING_CONFIGS.ACQUIRED_DESCENDING,
                        nameAscending: i.CLASH_AWARDS_SORTING_CONFIGS.NAME_ASCENDING,
                        nameDescending: i.CLASH_AWARDS_SORTING_CONFIGS.NAME_DESCENDING
                    }
                },
                BY_TYPE_TROPHIES: {
                    ownershipFilter: r.COLLECTION_GRID_OWNERSHIP_FILTERS.ALL,
                    filters: [o.GROUPING_FILTER_TROPHIES],
                    groupingStrategy: l.BY_TYPE,
                    supportedSortingConfigs: {
                        acquiredAscending: i.CLASH_AWARDS_SORTING_CONFIGS.ACQUIRED_ASCENDING,
                        acquiredDescending: i.CLASH_AWARDS_SORTING_CONFIGS.ACQUIRED_DESCENDING,
                        nameAscending: i.CLASH_AWARDS_SORTING_CONFIGS.NAME_ASCENDING,
                        nameDescending: i.CLASH_AWARDS_SORTING_CONFIGS.NAME_DESCENDING
                    }
                },
                BY_TYPE_BANNERS: {
                    ownershipFilter: r.COLLECTION_GRID_OWNERSHIP_FILTERS.ALL,
                    filters: [o.GROUPING_FILTER_BANNERS],
                    groupingStrategy: l.BY_TYPE,
                    supportedSortingConfigs: {
                        acquiredAscending: i.CLASH_AWARDS_SORTING_CONFIGS.ACQUIRED_ASCENDING,
                        acquiredDescending: i.CLASH_AWARDS_SORTING_CONFIGS.ACQUIRED_DESCENDING,
                        nameAscending: i.CLASH_AWARDS_SORTING_CONFIGS.NAME_ASCENDING,
                        nameDescending: i.CLASH_AWARDS_SORTING_CONFIGS.NAME_DESCENDING
                    }
                },
                BY_TYPE_LOGOS: {
                    ownershipFilter: r.COLLECTION_GRID_OWNERSHIP_FILTERS.ALL,
                    filters: [o.GROUPING_FILTER_LOGOS],
                    groupingStrategy: l.BY_TYPE,
                    supportedSortingConfigs: {
                        acquiredAscending: i.CLASH_AWARDS_SORTING_CONFIGS.ACQUIRED_ASCENDING,
                        acquiredDescending: i.CLASH_AWARDS_SORTING_CONFIGS.ACQUIRED_DESCENDING,
                        nameAscending: i.CLASH_AWARDS_SORTING_CONFIGS.NAME_ASCENDING,
                        nameDescending: i.CLASH_AWARDS_SORTING_CONFIGS.NAME_DESCENDING
                    }
                }
            };
            t.CLASH_AWARDS_GROUPING_CONFIGS = c
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(504),
                s = n(499);
            var i = {
                CLASH_AWARDS_GROUPING_STRATEGIES: {
                    BY_TYPE: {
                        groupingType: a.GROUPING_TYPES.GROUP_BY_CLASH_AWARDS_TYPE,
                        getGroupKeys: e => e && e.awardType ? [e.awardType] : [],
                        getGroupMetaData: e => ({
                            groupId: s.CLASH_AWARDS_ROW_CONFIG[e].order,
                            awardType: e
                        })
                    }
                }
            };
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.CLASH_AWARDS_SORTING_CONFIGS = void 0;
            var a = n(509);
            const s = {
                ACQUIRED_ASCENDING: {
                    groupSortingStrategy: a.CLASH_AWARDS_GROUP_SORTING_STRATEGIES.TYPE_ASCENDING,
                    contentSortingStrategy: a.CLASH_AWARDS_CONTENT_SORTING_STRATEGIES.ACQUIRED_ASCENDING
                },
                ACQUIRED_DESCENDING: {
                    groupSortingStrategy: a.CLASH_AWARDS_GROUP_SORTING_STRATEGIES.TYPE_ASCENDING,
                    contentSortingStrategy: a.CLASH_AWARDS_CONTENT_SORTING_STRATEGIES.ACQUIRED_DESCENDING
                },
                NAME_ASCENDING: {
                    groupSortingStrategy: a.CLASH_AWARDS_GROUP_SORTING_STRATEGIES.TYPE_ASCENDING,
                    contentSortingStrategy: a.CLASH_AWARDS_CONTENT_SORTING_STRATEGIES.NAME_ASCENDING
                },
                NAME_DESCENDING: {
                    groupSortingStrategy: a.CLASH_AWARDS_GROUP_SORTING_STRATEGIES.TYPE_ASCENDING,
                    contentSortingStrategy: a.CLASH_AWARDS_CONTENT_SORTING_STRATEGIES.NAME_DESCENDING
                }
            };
            t.CLASH_AWARDS_SORTING_CONFIGS = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.CLASH_AWARDS_GROUP_SORTING_STRATEGIES = t.CLASH_AWARDS_CONTENT_SORTING_STRATEGIES = void 0;
            var a = n(510);
            const s = {
                TYPE_DESCENDING: (0, a.getPropertiesSortingStrategy)([{
                    property: "groupMetaData.groupId",
                    ascending: !1
                }]),
                TYPE_ASCENDING: (0, a.getPropertiesSortingStrategy)([{
                    property: "groupMetaData.groupId",
                    ascending: !0
                }])
            };
            t.CLASH_AWARDS_GROUP_SORTING_STRATEGIES = s;
            const i = {
                NAME_DESCENDING: (0, a.getPropertiesSortingStrategy)([{
                    property: "name",
                    ascending: !1
                }]),
                NAME_ASCENDING: (0, a.getPropertiesSortingStrategy)([{
                    property: "name",
                    ascending: !0
                }]),
                ACQUIRED_ASCENDING: (0, a.getPropertiesSortingStrategy)([{
                    property: "earnedDateTimestamp",
                    ascending: !0
                }, {
                    property: "name",
                    ascending: !0
                }]),
                ACQUIRED_DESCENDING: (0, a.getPropertiesSortingStrategy)([{
                    property: "earnedDateTimestamp",
                    ascending: !1
                }, {
                    property: "name",
                    ascending: !0
                }])
            };
            t.CLASH_AWARDS_CONTENT_SORTING_STRATEGIES = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.NULL_VALUE_TRAILING = t.NULL_VALUE_LEADING = t.DEFAULT_NULL_SORT_VALUE = void 0, t.compareValue = l, t.getCurrentLocale = d, t.getPropertiesSortingStrategy = function(e) {
                return {
                    sort(t, n) {
                        const a = new Intl.Collator(d(n));
                        c(t, e, a)
                    }
                }
            }, t.smartSort = c;
            var a = n(1),
                s = function(e, t) {
                    if (!t && e && e.__esModule) return e;
                    if (null === e || "object" != typeof e && "function" != typeof e) return {
                        default: e
                    };
                    var n = i(t);
                    if (n && n.has(e)) return n.get(e);
                    var a = {},
                        s = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var o in e)
                        if ("default" !== o && Object.prototype.hasOwnProperty.call(e, o)) {
                            var r = s ? Object.getOwnPropertyDescriptor(e, o) : null;
                            r && (r.get || r.set) ? Object.defineProperty(a, o, r) : a[o] = e[o]
                        } a.default = e, n && n.set(e, a);
                    return a
                }(n(511));

            function i(e) {
                if ("function" != typeof WeakMap) return null;
                var t = new WeakMap,
                    n = new WeakMap;
                return (i = function(e) {
                    return e ? n : t
                })(e)
            }
            const {
                compareData: o
            } = s;
            t.NULL_VALUE_TRAILING = 1;
            t.NULL_VALUE_LEADING = -1;
            const r = 1;

            function l(e, t, n, a = r, s) {
                let i;
                return e === t ? i = 0 : null == e ? i = null == t ? 0 : a : null == t ? i = -a : (i = o(e, t, s), i = !1 === n ? -i : i), i
            }

            function c(e, t, n) {
                if (!e || !t) return e;
                return e.sort(((e, s) => {
                    let i = 0;
                    for (let o = 0; o < t.length; o += 1) {
                        const c = t[o];
                        if (i = l(a._.get(e, c.property), a._.get(s, c.property), c.ascending, c.nullValue ? c.nullValue : r, n), 0 !== i) break
                    }
                    return i
                }))
            }

            function d(e) {
                return e.locale ? e.locale : "en"
            }
            t.DEFAULT_NULL_SORT_VALUE = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.compareBool = s, t.compareData = function(e, t, n) {
                if (a._.isNumber(e)) return e - t;
                if (a._.isBoolean(e)) return s(e, t);
                if (a._.isString(e)) return n.compare(e, t);
                return 0
            };
            var a = n(1);

            function s(e, t) {
                return e === t ? 0 : e ? -1 : 1
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.GROUPING_FILTER_TROPHIES = t.GROUPING_FILTER_LOGOS = t.GROUPING_FILTER_BANNERS = void 0;
            var a = n(499);
            t.GROUPING_FILTER_TROPHIES = e => e && e.awardType === a.CLASH_AWARDS_ROW_CONFIG.TROPHY.id;
            t.GROUPING_FILTER_BANNERS = e => e && e.awardType === a.CLASH_AWARDS_ROW_CONFIG.BANNER.id;
            t.GROUPING_FILTER_LOGOS = e => e && e.awardType === a.CLASH_AWARDS_ROW_CONFIG.LOGO.id
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "9aoftMfh",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\awards\\\\awards-root\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\awards\\\\awards-root\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\awards\\\\awards-root\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-awards-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-awards-control-panel"],["flush-element"],["text","\\n    "],["append",["helper",["clash-awards-control-panel"],null,[["collectibleNameLocKey","totalSummaryNum","totalSecondSummaryNum","groupingSortingState","showUnownedCheckboxChecked","showUnavailableCheckboxChecked","potatoModeEnabled","collectibles","ownedCollectibles","shouldShowLegacyInfo","setNameFilter","setGroupingAndSorting","setShowUnownedCheckboxChecked","setShowUnavailableCheckboxChecked","setFocusOnRowId","secondaryEnabled","secondaryLoaded"],[["get",["collectibleNameLocKey"]],["get",["totalSummaryNum"]],["get",["totalSecondSummaryNum"]],["get",["groupingSortingState"]],["get",["showUnownedCheckboxChecked"]],["get",["showUnavailableCheckboxChecked"]],["get",["isPotatoModeEnabled"]],["get",["collectibles"]],["get",["ownedCollectibles"]],["get",["shouldShowLegacyInfo"]],["helper",["action"],[["get",[null]],"setNameFilter"],null],["helper",["action"],[["get",[null]],"setGroupingAndSorting"],null],["helper",["action"],[["get",[null]],"setShowUnownedCheckboxChecked"],null],["helper",["action"],[["get",[null]],"setShowUnavailableCheckboxChecked"],null],["helper",["action"],[["get",[null]],"setFocusOnRowId"],null],["get",["secondaryEnabled"]],["get",["secondaryLoaded"]]]]],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-awards-grid"],["flush-element"],["text","\\n    "],["append",["helper",["clash-awards-grid"],null,[["collectibleNameLoc","filteredCollectibles","focusedRowId","totalOwnedCollectibles","isPotatoModeEnabled","lastPurchasedCollectibleId","contentRowType","generateRowDataFromGroupingResult","getRowRenderer","startCollecting","clearLastPurchaseCollectibleItemId"],[["get",["collectibleNameLoc"]],["get",["filteredCollectibles"]],["get",["focusedRowId"]],["get",["totalOwnedCollectibles"]],["get",["isPotatoModeEnabled"]],["get",["lastPurchasedCollectibleId"]],["get",["contentRowType"]],["helper",["action"],[["get",[null]],"generateRowDataFromGroupingResult"],null],["helper",["action"],[["get",[null]],"getRowRenderer"],null],["helper",["action"],[["get",[null]],"startCollecting"],null],["helper",["action"],[["get",[null]],"clearLastPurchaseCollectibleItemId"],null]]]],false],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(516)) && a.__esModule ? a : {
                    default: a
                };
            e.exports = i.default.extend({
                classNames: ["clash-awards-grid"],
                layout: n(517),
                style: n(518),
                noMatchedCollectiblesLocText: s.Ember.computed("collectibleNameLoc", (function() {
                    return this.get("tra.clash_awards_no_matching_awards")
                }))
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(501),
                s = n(1);
            const {
                Component: i,
                observer: o,
                computed: r
            } = s.Ember, {
                get: l,
                set: c
            } = s.Ember;
            e.exports = i.extend({
                classNameBindings: ["gridClassName"],
                gridClassName: "collectibles-grid-component",
                wrapperClassName: "collectibles-grid-wrapper",
                isPotatoModeEnabled: !1,
                doNotOwnCollectibles: r.not("doOwnCollectibles"),
                doOwnCollectibles: r.gt("totalOwnedCollectibles", 0),
                shouldDisplayStartCollecting: r.and("doNotOwnCollectibles", "doNotHaveCollectiblesToDisplay"),
                displayNoMatch: r.and("doOwnCollectibles", "doNotHaveCollectiblesToDisplay"),
                doNotDisplayGrid: r.or("shouldDisplayStartCollecting", "displayNoMatch"),
                contentRowType: null,
                noCollectiblesLocText: r("collectibleNameLoc", (function() {
                    return this.get("tra").formatString("collectibles_grid_no_owned_collectibles", {
                        collectibleName: l(this, "collectibleNameLoc")
                    })
                })),
                startToCollectCollectiblesLocText: r("collectibleNameLoc", (function() {
                    return this.get("tra").formatString("collectibles_grid_no_owned_collectibles_start_building", {
                        collectibleName: l(this, "collectibleNameLoc")
                    })
                })),
                noMatchedCollectiblesLocText: r("collectibleNameLoc", (function() {
                    return this.get("tra").formatString("collectibles_grid_no_matching_collectibles", {
                        collectibleName: l(this, "collectibleNameLoc")
                    })
                })),
                doNotHaveCollectiblesToDisplay: r("filteredCollectibles", (function() {
                    const e = l(this, "filteredCollectibles");
                    return !e || !e.groupNodes || !e.groupNodes.find((e => e.filteredGroupMembers.length > 0))
                })),
                onRowsDataChanged: o("groupsAndCollectiblesRows", (function() {
                    this._refreshRows()
                })),
                onPotatoModeChanged: o("isPotatoModeEnabled", (function() {
                    const e = l(this, "virtualList");
                    e && e.refresh()
                })),
                onDisplayingGroupIdChange: o("focusedRowId", (function() {
                    this._scrollToGroup()
                })),
                groupsAndCollectiblesRows: r("filteredCollectibles", (function() {
                    const e = l(this, "filteredCollectibles");
                    return this.generateRowDataFromGroupingResult(e, l(this, "tra"))
                })),
                init(...e) {
                    this._super(...e)
                },
                didInsertElement(...e) {
                    this._super(...e);
                    const t = l(this, "element");
                    this._initElements(t)
                },
                willDestroyElement(...e) {
                    c(this, "gridScrollElement", null), this._super(...e)
                },
                willDestroy(...e) {
                    this._destroyVirtualList(), this._super(...e)
                },
                actions: {
                    displayStartCollecting() {
                        const e = l(this, "startCollecting");
                        e && e()
                    }
                },
                _initElements(e) {
                    if (e) {
                        const t = e.querySelector("." + l(this, "wrapperClassName"));
                        c(this, "gridScrollElement", t);
                        const n = this._createVirtualList(t);
                        c(this, "virtualList", n), this._refreshRows()
                    }
                },
                _refreshRows() {
                    const e = l(this, "groupsAndCollectiblesRows");
                    if (e) {
                        const t = l(this, "gridScrollElement");
                        t && (t.scrollTop = 0);
                        const n = l(this, "virtualList");
                        n && (n.data = e);
                        const a = l(this, "lastPurchasedCollectibleId");
                        if (a) {
                            this._scrollToCollectibleItem(a);
                            const e = l(this, "clearLastPurchaseCollectibleItemId");
                            e && e()
                        }
                    }
                },
                _createVirtualList(e) {
                    let t = e.querySelector(a.VIRTUAL_LIST_ELEMENT_NAME);
                    return t || (t = document.createElement(a.VIRTUAL_LIST_ELEMENT_NAME), t.container = e, t.containerHeightPx = a.COLLECTION_GRID_HEIGHT, t.createElement = this._createRow.bind(this), t.updateElement = this._updateRow.bind(this), t.resetElement = this._resetRow.bind(this), t.deleteElement = this._deleteRow.bind(this), e.appendChild(t)), t
                },
                _createRow(e) {
                    return this.getRowRenderer(e.type).createRow(e)
                },
                _updateRow(e, t) {
                    this.getRowRenderer(t.type).updateRow(t, e)
                },
                _resetRow(e, t) {
                    this.getRowRenderer(t.type).resetRow(e)
                },
                _deleteRow(e, t) {
                    this.getRowRenderer(t).deleteRow(e)
                },
                _scrollToGroup() {
                    const e = l(this, "focusedRowId"),
                        t = l(this, "groupsAndCollectiblesRows");
                    if (e && e.groupingType && t && t.length > 0) {
                        const {
                            groupingType: n,
                            groupId: a
                        } = e;
                        let s = 0,
                            i = !1;
                        for (let e = 0; e < t.length; e += 1) {
                            const o = t[e];
                            if (n === o.groupingType && a === o.groupId) {
                                i = !0;
                                break
                            }
                            s += o.height
                        }
                        i && this._scrollVirtualListToPosition(s)
                    }
                },
                _scrollToCollectibleItem(e) {
                    const t = l(this, "groupsAndCollectiblesRows"),
                        n = l(this, "contentRowType");
                    if (n && t && t.length > 0) {
                        let a = 0,
                            s = !1;
                        for (let i = 0; i < t.length; i += 1) {
                            const o = t[i];
                            if (n === o.type && o.data && Array.isArray(o.data) && o.data.find((t => t.id === e))) {
                                s = !0;
                                break
                            }
                            a += o.height
                        }
                        s && this._scrollVirtualListToPosition(a)
                    }
                },
                _scrollVirtualListToPosition(e) {
                    const t = l(this, "gridScrollElement");
                    t && (t.scrollTop = 0 === e ? e : Math.max(0, e - 8))
                },
                _destroyVirtualList() {
                    const e = l(this, "virtualList");
                    e && (e.destroy(), c(this, "virtualList", null))
                }
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "gf2sfSs+",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\awards\\\\awards-grid\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\awards\\\\awards-grid\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\awards\\\\awards-grid\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["no-owned-collectible ",["helper",["unless"],[["get",["shouldDisplayStartCollecting"]],"hidden"],null]]]],["flush-element"],["text","\\n  "],["open-element","img",[]],["static-attr","class","illustration"],["static-attr","src","/fe/lol-clash/assets/images/awards-case/poro-question.png"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","message-container"],["flush-element"],["text","\\n    "],["open-element","span",[]],["static-attr","class","message"],["flush-element"],["text","No awards"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["no-matching-collectibles ",["helper",["unless"],[["get",["displayNoMatch"]],"hidden"],null]]]],["flush-element"],["text","\\n  "],["open-element","span",[]],["static-attr","class","message"],["flush-element"],["append",["unknown",["noMatchedCollectiblesLocText"]],false],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["page-view-wrapper ",["helper",["if"],[["get",["doNotDisplayGrid"]],"hidden"],null]]]],["flush-element"],["text","\\n  "],["open-element","lol-uikit-scrollable",[]],["dynamic-attr","class",["concat",[["unknown",["wrapperClassName"]]]]],["static-attr","overflow-masks","enabled"],["flush-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(520)) && a.__esModule ? a : {
                    default: a
                },
                o = n(505);
            e.exports = i.default.extend({
                classNames: ["clash-awards-control-panel"],
                layout: n(523),
                style: n(524),
                availableGroupList: o.AWARDS_DROPDOWN_GROUP_OPTIONS,
                totalSummaryNumDesc: s.Ember.computed.alias("tra.clash_awards_control_panel_total_count"),
                showBottomPart: !1,
                showBreakdown: !1,
                showUnownedCheckboxChecked: !1,
                showUnavailableCheckboxChecked: !1,
                showUnownedFilter: !1,
                showUnavailableFilter: !1,
                totalCountingSummaryNum: s.Ember.computed("totalSummaryNum", (function() {
                    const e = this.get("totalSummaryNum");
                    return e <= 1 ? e : (this._startCounter(e, ".clash-awards-collection-total-owned.total-count"), "")
                })),
                totalCountingSecondSummaryNum: s.Ember.computed("totalSecondSummaryNum", (function() {
                    const e = this.get("totalSecondSummaryNum");
                    return e <= 1 ? e : (this._startCounter(e, ".clash-awards-collection-total-owned.eternals-count"), "")
                }))
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(475),
                s = n(1),
                i = n(521);
            const {
                computed: o,
                Component: r,
                observer: l,
                run: c,
                get: d,
                set: m
            } = s.Ember, {
                scheduleOnce: u
            } = c, p = s.Ember.A;
            e.exports = r.extend({
                classNames: ["clash-collectible-control-panel"],
                nameFilter: "",
                potatoModeEnabled: !1,
                collectibleRarities: {},
                isTimeout: !1,
                availableGroupList: a.CONTROL_PANEL_DROPDOWN_GROUP_OPTIONS_PLACEHOLDER,
                totalSummaryNumDesc: "Total Owned Collectibles",
                groupingByTierKey: null,
                groupingTypeByTier: null,
                hasLegacyInfo: !0,
                showLegacyInfo: o.and("shouldShowLegacyInfo", "hasLegacyInfo"),
                showBottomPart: o.alias("showLegacyInfo"),
                showFeatureDescription: !1,
                featureDescription: null,
                isChampions: !1,
                secondaryEnabled: !1,
                isNotChampions: s.Ember.computed.not("isChampions"),
                disabledSorts: [],
                availableCollectibleRarities: o("collectibles", "collectibleRarities", (function() {
                    const e = d(this, "collectibles"),
                        t = d(this, "collectibleRarities");
                    return e && t ? s._.toPairs(t).filter((t => void 0 !== e.find((e => e.rarity.order === t[1].order)))).map((e => e[1])) : []
                })),
                availableGroups: o("groupingSortingState.grouping", (function() {
                    const e = d(this, "groupingSortingState.grouping"),
                        t = d(this, "tra");
                    return s._.toPairs(d(this, "availableGroupList")).map((n => {
                        const a = n[1];
                        return {
                            name: t.get(a.traKey),
                            isSelected: e.key === a.key,
                            groupKey: a.key
                        }
                    }))
                })),
                secondaryTooltipErrorMessage: o.alias("tra.control_panel_default_error_tooltip_message"),
                availableSorts: o("groupingSortingState.{grouping,groupSortOrder}", "disabledSorts", (function() {
                    const e = d(this, "groupingSortingState.grouping"),
                        t = d(this, "groupingSortingState.groupSortOrder"),
                        n = d(this, "disabledSorts");
                    if (e) {
                        const a = d(this, "tra");
                        return s._.toPairs(e.sortOptions).map((e => {
                            const n = e[1];
                            return {
                                name: n.name,
                                label: a.get(n.traKey),
                                selected: t === n.name
                            }
                        })).filter((e => !n.includes(e.name)))
                    }
                    return p()
                })),
                collectibleCountByRarity: o("ownedCollectibles", (function() {
                    const e = d(this, "ownedCollectibles");
                    return e ? e.reduce(((e, t) => {
                        const n = t.rarity.order;
                        return e.has(n) || e.set(n, 0), e.set(n, e.get(n) + 1), e
                    }), new Map) : new Map
                })),
                collectiblesRaritiesAndCount: o("collectibleCountByRarity", "availableCollectibleRarities", (function() {
                    const e = d(this, "availableCollectibleRarities");
                    if (e) {
                        const t = d(this, "collectibleCountByRarity"),
                            n = e.filter((e => e.gemIcon));
                        return n.sort(((e, t) => t.order - e.order)), n.map((e => {
                            const n = e;
                            return {
                                rarity: n,
                                count: t.has(n.order) ? t.get(n.order) : 0
                            }
                        }))
                    }
                    return null
                })),
                showUnownedFilter: o.alias("groupingSortingState.grouping.showUnownedFilter"),
                showUnavailableFilter: o.alias("showUnownedFilter"),
                nameFilterChanged: l("nameFilter", (function() {
                    const e = d(this, "nameFilter");
                    d(this, "setNameFilter")(e)
                })),
                legacyCollectiblesCount: o("ownedCollectibles", (function() {
                    const e = d(this, "ownedCollectibles");
                    let t = 0;
                    return e && (t = e.filter((e => e.isLegacy)).length), t
                })),
                init(...e) {
                    this._super(...e), m(this, "tooltipUpdateHandler", this._updateTooltip.bind(this)), m(this, "tooltipTargets", new Set), d(this, "totalSummaryNum"), d(this, "totalSecondSummaryNum"), d(this, "secondaryLoaded"), s.Ember.run.later((() => {
                        m(this, "isTimeout", !0)
                    }), 4e3)
                },
                didRender() {
                    this._assignBreakdownTooltips(), this._assignSetsTooltips()
                },
                willDestroy(...e) {
                    d(this, "tooltipTargets").forEach((e => {
                        e.removeEventListener("tooltip:beforeDisplay", d(this, "tooltipUpdateHandler")), s.TooltipManager.unassign(e)
                    })), d(this, "tooltipTargets").clear(), m(this, "tooltipTargets", null), m(this, "tooltipDomNode", null), this._super(...e)
                },
                totalCountingSummaryNum: o("totalSummaryNum", "potatoModeEnabled", (function() {
                    const e = d(this, "totalSummaryNum");
                    return d(this, "potatoModeEnabled") || e <= 1 ? e : (this._startCounter(e, ".collectibles-collection-total-owned.total-count"), "")
                })),
                totalCountingSecondSummaryNum: o("totalSecondSummaryNum", "potatoModeEnabled", (function() {
                    const e = d(this, "totalSecondSummaryNum");
                    return d(this, "potatoModeEnabled") || e <= 1 ? e : (this._startCounter(e, ".collectibles-collection-total-owned.eternals-count"), "")
                })),
                actions: {
                    setSortOrder(e) {
                        const t = d(this, "groupingSortingState.grouping").sortOptions[e.name];
                        t && (m(this, "groupingSortingState.groupSortOrder", t.name), this._setGroupingAndSorting(t.groupingConfig, t.sortingConfig))
                    },
                    setGroupingKey(e) {
                        const t = d(this, "availableGroupList")[e];
                        t && this.send("setGrouping", t)
                    },
                    setGrouping(e) {
                        const t = d(this, "groupingSortingState.grouping"),
                            n = d(this, "groupingSortingState.groupSortOrder");
                        if (t === e) return;
                        m(this, "groupingSortingState.grouping", e);
                        const a = e.sortOptions[n] ? e.sortOptions[n] : e.sortOptions[e.defaultSortOptionName],
                            {
                                groupingConfig: s
                            } = a,
                            {
                                sortingConfig: i
                            } = a;
                        m(this, "groupingSortingState.groupSortOrder", a.name), u("afterRender", (() => this._selectSortOption.bind(this)(i.name))), this._setGroupingAndSorting(s, i)
                    },
                    toggleUnownedFilter(e) {
                        e.preventDefault();
                        const t = e.target;
                        if (t) {
                            const e = t.checked;
                            d(this, "setShowUnownedCheckboxChecked")(e)
                        }
                    },
                    toggleUnavailableFilter(e) {
                        e.preventDefault();
                        const t = e.target;
                        if (t) {
                            const e = t.checked;
                            d(this, "setShowUnavailableCheckboxChecked")(e)
                        }
                    },
                    clickOnIcon(e) {
                        const t = d(this, "setFocusOnRowId"),
                            n = d(this, "groupingTypeByTier"),
                            a = d(this, "groupingByTierKey");
                        t && n && a && (this.send("setGroupingKey", a), t(n, e))
                    }
                },
                _setGroupingAndSorting(e, t) {
                    d(this, "setGroupingAndSorting")(e, t)
                },
                _selectSortOption(e) {
                    const t = this.$(`[value='${e}']`);
                    t.length && t[0].setAttribute("selected", !0)
                },
                _getItemIconElements() {
                    return this.$(".collectibles-collection-breakdown .item .icon").toArray()
                },
                _assignBreakdownTooltips() {
                    const e = this._getItemIconElements();
                    e && Array.isArray(e) && e.forEach((e => this._assignToolTip(e, this._getTooltipDomNode())))
                },
                _getSetIconElements() {
                    return this.$(".collectibles-collection-total-sets .set .icon").toArray()
                },
                _assignSetsTooltips() {
                    const e = this._getSetIconElements();
                    e && Array.isArray(e) && e.forEach((e => this._assignToolTip(e, this._getTooltipDomNode())))
                },
                _assignToolTip(e, t) {
                    s.TooltipManager.assign(e, t, {}, {
                        targetAnchor: {
                            x: "center",
                            y: "top"
                        }
                    }), e.addEventListener("tooltip:beforeDisplay", d(this, "tooltipUpdateHandler")), d(this, "tooltipTargets").add(e)
                },
                _getTooltipDomNode() {
                    if (!d(this, "tooltipDomNode")) {
                        const e = this.$('<lol-uikit-content-block type="tooltip-system" padding="small"></lol-uikit-content-block>');
                        e.append('<p class="tooltip-content"></p>');
                        const t = document.createElement("lol-uikit-tooltip");
                        t.appendChild(e[0]), m(this, "tooltipDomNode", t)
                    }
                    return d(this, "tooltipDomNode")
                },
                _updateTooltip(e) {
                    const t = d(this, "collectibleNameLocKey"),
                        n = `control_panel_breakdown_tooltip_${e.target.dataset.tooltipType}_${t}`,
                        a = d(this, `tra.${n}`);
                    this._getTooltipDomNode().querySelector(".tooltip-content").textContent = a
                },
                _startCounter(e, t) {
                    const n = this.element.querySelector(t);
                    n && (0, i.CountingElement)(n, e)
                }
            })
        }, (e, t, n) => {
            "use strict";
            e.exports = {
                CountingElement: n(522)
            }
        }, e => {
            "use strict";
            e.exports = function(e, t, n, a) {
                if (!e) return;
                n = n || 35, a = a || 20;
                let s = 0;
                const i = function() {
                    e.innerText = s
                };
                i();
                const o = Math.max(1, Math.floor(t / n)),
                    r = window.setInterval((function() {
                        s += o, s >= t && (s = t, window.clearInterval(r)), i()
                    }), a)
            }
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "3f/ju/GH",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\awards\\\\awards-control-panel\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\awards\\\\awards-control-panel\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\awards\\\\awards-control-panel\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-awards-collection-details-wrapper"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-top-frame"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-awards-collection-owned-summary-wrapper"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-awards-collection-owned-summary"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-awards-collection-total-owned total-count"],["flush-element"],["append",["unknown",["totalCountingSummaryNum"]],false],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-awards-collection-total-owned-label"],["flush-element"],["text","\\n          "],["append",["unknown",["totalSummaryNumDesc"]],false],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","clash-awards-collection-search-panel"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-awards-collection-text-filter"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-input",[]],["flush-element"],["text","\\n      "],["append",["helper",["input"],null,[["type","maxlength","class","value","placeholder"],["search","50","clash-awards-collection-search-text",["get",["nameFilter"]],["get",["tra","clash_awards_search_placeholder"]]]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-awards-collection-ownership-filter ",["helper",["unless"],[["get",["showUnownedFilter"]],"invisible"],null]]]],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-checkbox",[]],["flush-element"],["text","\\n      "],["open-element","input",[]],["static-attr","slot","input"],["static-attr","id","showUnowned"],["static-attr","type","checkbox"],["dynamic-attr","onchange",["helper",["action"],[["get",[null]],"toggleUnownedFilter"],null],null],["dynamic-attr","checked",["unknown",["showUnownedCheckboxChecked"]],null],["flush-element"],["close-element"],["text","\\n      "],["open-element","label",[]],["static-attr","slot","label"],["static-attr","class","clash-awards-collection-checkbox-label"],["static-attr","for","showUnowned"],["flush-element"],["append",["unknown",["tra","control_panel_show_unowned"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["block",["if"],[["get",["isNotChampions"]]],null,5],["text","\\n  "],["open-element","lol-uikit-framed-dropdown",[]],["static-attr","class","clash-awards-collection-grouping-options"],["flush-element"],["text","\\n"],["block",["each"],[["get",["availableGroups"]]],null,2],["text","  "],["close-element"],["text","\\n  "],["open-element","lol-uikit-framed-dropdown",[]],["static-attr","class","clash-awards-collection-sort-options"],["flush-element"],["text","\\n"],["block",["each"],[["get",["availableSorts"]]],[["key"],["name"]],1],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["block",["if"],[["get",["showFeatureDescription"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-awards-feature-description"],["flush-element"],["text","\\n    "],["append",["helper",["sanitize"],[["get",["featureDescription"]]],null],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["sort","selected"]],null],["dynamic-attr","value",["unknown",["sort","name"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setSortOrder",["get",["sort"]]],null],null],["flush-element"],["append",["unknown",["sort","label"]],false],["close-element"],["text","\\n"]],"locals":["sort"]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setGroupingKey",["get",["group","groupKey"]]],null],null],["dynamic-attr","selected",["unknown",["group","isSelected"]],null],["flush-element"],["append",["unknown",["group","name"]],false],["close-element"],["text","\\n"]],"locals":["group"]},{"statements":[["text","        "],["open-element","lol-uikit-flat-checkbox",[]],["flush-element"],["text","\\n          "],["open-element","input",[]],["static-attr","slot","input"],["static-attr","id","showUnavailable"],["static-attr","disabled",""],["static-attr","type","checkbox"],["dynamic-attr","onchange",["helper",["action"],[["get",[null]],"toggleUnavailableFilter"],null],null],["dynamic-attr","checked",["unknown",["showUnavailableCheckboxChecked"]],null],["flush-element"],["close-element"],["text","\\n          "],["open-element","label",[]],["static-attr","slot","label"],["static-attr","class","clash-awards-collection-checkbox-label"],["static-attr","for","showUnavailable"],["flush-element"],["append",["unknown",["tra","control_panel_show_unavailable"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","lol-uikit-flat-checkbox",[]],["flush-element"],["text","\\n          "],["open-element","input",[]],["static-attr","slot","input"],["static-attr","id","showUnavailable"],["static-attr","type","checkbox"],["dynamic-attr","onchange",["helper",["action"],[["get",[null]],"toggleUnavailableFilter"],null],null],["dynamic-attr","checked",["unknown",["showUnavailableCheckboxChecked"]],null],["flush-element"],["close-element"],["text","\\n          "],["open-element","label",[]],["static-attr","slot","label"],["static-attr","class","clash-awards-collection-checkbox-label"],["static-attr","for","showUnavailable"],["flush-element"],["append",["unknown",["tra","control_panel_show_unavailable"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-awards-collection-availability-filter ",["helper",["unless"],[["get",["showUnavailableFilter"]],"invisible"],null]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["showUnownedCheckboxChecked"]]],null,4,3],["text","    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(526);
            const s = "/v1/lft/team/requests";
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-find-team-view"],
                layout: n(527),
                clashService: a.Ember.inject.service("clash"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                tournamentId: a.Ember.computed.alias("tournament.id"),
                roster: a.Ember.computed.alias("clashService.localPlayer.roster"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                lftPage: 0,
                didInsertElement() {
                    this._super(...arguments), this.fetchPendingRequests(), this.fetchFindTeams(), this._binding = (0, a.dataBinding)("/lol-clash", (0, a.getProvider)().getSocket()), this._binding.addObserver(s, this, (e => {
                        e && this.set("pendingRequestList", e)
                    }))
                },
                willDestroyElement() {
                    this._super(...arguments), this._binding.removeObserver(s, this)
                },
                fetchPendingRequests() {
                    const e = this.get("tournamentId");
                    this.get("clashService").fetchPendingLftRequests(e)
                },
                fetchFindTeams() {
                    const e = this.get("lftPage");
                    this.get("clashService").findTeams(this.get("tournament.id"), e, 4).then((t => {
                        if (this._clearLftTeamList(), t && t.length) {
                            for (let e = 0; e < t.length; e++) this._addToLftTeamList(t[e]);
                            this.set("lftPage", e + 1)
                        } else 0 !== e && (this.set("lftPage", 0), this.fetchFindTeams())
                    }))
                },
                _clearLftTeamList() {
                    this.set("lftTeams", a.Ember.A())
                },
                _addToLftTeamList(e) {
                    this.get("lftTeams").insertAt(0, a.Ember.Object.create(e))
                },
                actions: {
                    fetchFindTeams() {
                        this.fetchFindTeams()
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "EOwoCZuJ",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\find-team-view\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\find-team-view\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\find-team-view\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-find-team-section-left"],["flush-element"],["text","\\n  "],["append",["helper",["tournament-info"],null,[["tournament","localPlayer","showCapsuleProgress","showBorder"],[["get",["tournament"]],["get",["localPlayer"]],false,true]]],false],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-find-team-section-middle"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-find-team-header"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-find-team-title"],["flush-element"],["append",["unknown",["tra","clash_lft_findteam_title"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-find-team-refresh-container"],["flush-element"],["text","\\n      "],["open-element","span",[]],["flush-element"],["append",["unknown",["tra","clash_lft_findteam_see_more"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-find-team-refresh-button"],["flush-element"],["text","\\n        "],["append",["helper",["generic-button"],null,[["onClick","onClickSound","onHoverSound","baseImgPath","overImgPath","downImgPath","disabledImgPath","isEnabled"],[["helper",["action"],[["get",[null]],"fetchFindTeams"],null],"button-cycle-click","button-cycle-hover","/fe/lol-clash/assets/images/buttons/button-refresh.png","/fe/lol-clash/assets/images/buttons/button-refresh-over.png","/fe/lol-clash/assets/images/buttons/button-refresh-down.png","/fe/lol-clash/assets/images/buttons/button-refresh-down.png",true]]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["block",["each"],[["get",["lftTeams"]]],null,0],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["append",["helper",["find-team-entry"],null,[["team","pendingRequestList"],[["get",["team"]],["get",["pendingRequestList"]]]]],false],["text","\\n"]],"locals":["team"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(529);
            var s;
            (s = n(217)) && s.__esModule;
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-find-team-entry"],
                layout: n(530),
                team: {},
                pendingRequestList: [],
                gdsService: a.Ember.inject.service("gds"),
                clashService: a.Ember.inject.service("clash"),
                tournament: a.Ember.computed.alias("clashService.tournament"),
                roster: a.Ember.computed.alias("clashService.localPlayer.roster"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                localPlayerSummonerId: a.Ember.computed.alias("localPlayer.summonerId"),
                logoId: a.Ember.computed.alias("team.logo"),
                logoColorId: a.Ember.computed.alias("team.logoColor"),
                openPositions: a.Ember.computed.alias("team.openPositions"),
                invitationId: a.Ember.computed.alias("team.invitationId"),
                members: a.Ember.computed.alias("team.members"),
                isAramQueue: a.Ember.computed.alias("tournament.isAramQueue"),
                rosterLogoPath: a.Ember.computed("logoId", "logoColorId", "gdsService.ready", (function() {
                    if (!this.get("gdsService.ready")) return "";
                    const e = this.get("logoId"),
                        t = this.get("logoColorId");
                    return this.get("gdsService").getLogoPath(e, t)
                })),
                isAlreadyRequested: a.Ember.computed("pendingRequestList.[]", "invitationId", (function() {
                    const e = this.get("invitationId");
                    return !!(this.get("pendingRequestList") || []).find((t => t.invitationId === e))
                })),
                requestButtonTxt: a.Ember.computed("isAlreadyRequested", (function() {
                    return this.get("isAlreadyRequested") ? this.get("tra.clash_invite_dialog_suggested") : this.get("tra.clash_invite_dialog_suggest")
                })),
                actions: {
                    requestInvite() {
                        if (this.get("isAlreadyRequested")) return;
                        const e = this.get("invitationId");
                        this.get("clashService").requestInvite(e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "nr6aEznn",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\find-team-view\\\\find-team-entry\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\find-team-view\\\\find-team-entry\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\find-team-view\\\\find-team-entry\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-find-team-logo-container"],["flush-element"],["text","\\n  "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["rosterLogoPath"]]]]],["static-attr","class","clash-find-team-logo-image"],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-find-team-tag-tier-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-team-tag"],["flush-element"],["text","\\n    "],["append",["helper",["if"],[["get",["team","shortName"]],["get",["team","shortName"]],["get",["tra","clash_roster_details_placeholder_team_tag"]]],null],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-team-tier"],["flush-element"],["append",["helper",["tier-placement"],null,[["rosterTier"],[["get",["team","tier"]]]]],false],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-find-team-data-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-find-team-name"],["flush-element"],["text","\\n    "],["append",["helper",["if"],[["get",["team","name"]],["get",["team","name"]],["get",["tra","clash_roster_details_placeholder_team_name"]]],null],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-find-team-description"],["flush-element"],["text","\\n"],["block",["unless"],[["get",["isAramQueue"]]],null,2],["text","    "],["open-element","div",[]],["static-attr","class","clash-find-team-members"],["flush-element"],["text","\\n"],["block",["each"],[["get",["members"]]],null,0],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-find-team-request-button-container"],["flush-element"],["text","\\n  "],["open-element","lol-uikit-flat-button-secondary",[]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"requestInvite"],null],null],["dynamic-attr","disabled",["unknown",["isAlreadyRequested"]],null],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-find-team-request-button"],["flush-element"],["append",["unknown",["requestButtonTxt"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","clash-find-team-member"],["flush-element"],["text","\\n          "],["append",["helper",["member-summoner"],null,[["summonerId","localPlayerSummonerId","allowLeftClick","shouldShowFriendIcon"],[["get",["member","playerId"]],["get",["localPlayerSummonerId"]],false,true]]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":["member"]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","position-icon"],["dynamic-attr","data-position",["concat",[["get",["position"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":["position"]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-find-team-needs"],["flush-element"],["text","\\n"],["block",["each"],[["get",["openPositions"]]],null,1],["text","      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-find-team-vertical-separator"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(532);
            const s = "/lol-settings/v2/account/LCUPreferences/lol-clash",
                i = "/lol-platform-config/v1/namespaces/ClashConfig/AramIntroModalEnabled",
                o = "clash-aram2022-modal-shown";
            e.exports = a.Ember.Component.extend({
                layout: n(533),
                classNames: ["clash-aram-intro-modal"],
                tournament: null,
                isEnabled: !1,
                isSettingsReady: !1,
                isNotSeenBefore: !1,
                isApplicableQueueId: a.Ember.computed.alias("tournament.isAramQueue"),
                init() {
                    this._super(...arguments), this._binding = a.dataBinding.bindTo((0, a.getProvider)().getSocket()), this._binding.addObserver("/lol-settings/v2/ready", this, this.handleSettingsReady), this._binding.addObserver(i, this, this.handleModalEnabled)
                },
                willDestroyElement() {
                    this._super(...arguments), this._binding.removeObserver(s, this), this._binding.removeObserver(i, this)
                },
                isModalVisible: a.Ember.computed("isEnabled", "isSettingsReady", "isNotSeenBefore", "isApplicableQueueId", (function() {
                    return this.get("isEnabled") && this.get("isSettingsReady") && this.get("isNotSeenBefore") && this.get("isApplicableQueueId")
                })),
                handleModalEnabled(e) {
                    e && this.set("isEnabled", !!e)
                },
                handleSettingsReady(e) {
                    e = Boolean(e), this.set("isSettingsReady", e), e && this._binding.addObserver(s, this, this.handleClashSettings)
                },
                handleClashSettings(e) {
                    null != e && e.data ? this.set("isNotSeenBefore", !e.data[o]) : this.set("isNotSeenBefore", !1)
                },
                actions: {
                    markModalAsRead() {
                        this._binding.patch(s, {
                            schemaVersion: 1,
                            data: {
                                [o]: !0
                            }
                        })
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "fCEYwg3j",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\aram-intro-modal\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\aram-intro-modal\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\aram-intro-modal\\\\index.js\\" "],["text","\\n"],["open-element","lc-alert-modal",[]],["dynamic-attr","okText",["concat",[["unknown",["tra","clash_aram_intro_modal_button"]]]]],["dynamic-attr","onOk",["helper",["action"],[["get",[null]],"markModalAsRead"],null],null],["dynamic-attr","dismissible",true,null],["static-attr","dismissibleType","inside"],["dynamic-attr","open",["unknown",["isModalVisible"]],null],["flush-element"],["text","\\n  "],["open-element","lc-modal-content",[]],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-aram-intro-modal"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","aram-intro-modal-header"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","aram-intro-modal-title-wrapper"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","aram-intro-modal-line aram-intro-modal-line-left"],["flush-element"],["close-element"],["text","\\n          "],["open-element","img",[]],["static-attr","class","aram-intro-modal-logo"],["static-attr","width","56px"],["static-attr","height","56px"],["static-attr","src","/fe/lol-clash/assets/images/aram-modal/clash-aram-modal-trophy.svg"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","aram-intro-modal-line aram-intro-modal-line-right"],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","aram-intro-modal-title"],["flush-element"],["append",["unknown",["tra","clash_aram_intro_modal_title"]],false],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","aram-intro-modal-description"],["flush-element"],["append",["unknown",["tra","clash_aram_intro_modal_description"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","aram-intro-modal-tiles"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","aram-intro-modal-tile"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","aram-intro-modal-tile-image-container"],["flush-element"],["text","\\n            "],["open-element","img",[]],["static-attr","class","aram-intro-modal-tile-background"],["static-attr","src","/fe/lol-clash/assets/images/aram-modal/clash-aram-modal-img-bg-2.png"],["flush-element"],["close-element"],["text","\\n            "],["open-element","img",[]],["static-attr","class","aram-intro-modal-tile-image image-1"],["static-attr","src","/fe/lol-clash/assets/images/aram-modal/clash-aram-modal-img-1.png"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","aram-intro-modal-tile-title"],["flush-element"],["append",["unknown",["tra","clash_aram_intro_modal_tile_1_title"]],false],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","aram-intro-modal-tile-description"],["flush-element"],["append",["unknown",["tra","clash_aram_intro_modal_tile_1_description"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","aram-intro-modal-tile"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","aram-intro-modal-tile-image-container"],["flush-element"],["text","\\n            "],["open-element","img",[]],["static-attr","class","aram-intro-modal-tile-background"],["static-attr","src","/fe/lol-clash/assets/images/aram-modal/clash-aram-modal-img-bg-1.png"],["flush-element"],["close-element"],["text","\\n            "],["open-element","img",[]],["static-attr","class","aram-intro-modal-tile-image image-2"],["static-attr","src","/fe/lol-clash/assets/images/aram-modal/clash-aram-modal-img-2.png"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","aram-intro-modal-tile-title"],["flush-element"],["append",["unknown",["tra","clash_aram_intro_modal_tile_2_title"]],false],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","aram-intro-modal-tile-description"],["flush-element"],["append",["unknown",["tra","clash_aram_intro_modal_tile_2_description"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","aram-intro-modal-tile"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","aram-intro-modal-tile-image-container"],["flush-element"],["text","\\n            "],["open-element","img",[]],["static-attr","class","aram-intro-modal-tile-background"],["static-attr","src","/fe/lol-clash/assets/images/aram-modal/clash-aram-modal-img-bg-2.png"],["flush-element"],["close-element"],["text","\\n            "],["open-element","img",[]],["static-attr","class","aram-intro-modal-tile-image image-3"],["static-attr","src","/fe/lol-clash/assets/images/aram-modal/clash-aram-modal-img-3.png"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","aram-intro-modal-tile-title"],["flush-element"],["append",["unknown",["tra","clash_aram_intro_modal_tile_3_title"]],false],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","aram-intro-modal-tile-description"],["flush-element"],["append",["unknown",["tra","clash_aram_intro_modal_tile_3_description"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(299)) && a.__esModule ? a : {
                    default: a
                };
            n(535);
            const o = (0, s.emberDataBinding)({
                Ember: s.Ember,
                websocket: (0, s.getProvider)().getSocket(),
                basePaths: {
                    gameData: "/lol-game-data",
                    chat: "/lol-chat"
                },
                boundProperties: {
                    summonerData: {
                        path: "/lol-summoner/v1/summoners/{{summonerId}}",
                        default: {
                            displayName: ""
                        }
                    }
                }
            });
            e.exports = s.Ember.Component.extend(o, {
                classNames: ["clash-member-summoner"],
                layout: n(536),
                shouldShowFriendIcon: !1,
                chatService: s.Ember.inject.service("chat"),
                friends: s.Ember.computed.alias("chatService.friends"),
                clashService: s.Ember.inject.service("clash"),
                telemetryService: s.Ember.inject.service("telemetry"),
                chatParticipants: s.Ember.computed.alias("clashService.localPlayer.chatParticipants"),
                hoverCardOptions: {
                    targetAnchor: {
                        x: "center",
                        y: "bottom"
                    },
                    tooltipAnchor: {
                        x: "center",
                        y: "top"
                    },
                    offset: {
                        x: 0,
                        y: 3
                    },
                    canShow: () => !s.UIKit.getContextMenuManager().isMenuOpen(),
                    hideEvents: ["mouseleave", "dragstart", "click"]
                },
                allowLeftClick: !0,
                onInit: s.Ember.on("init", (function() {
                    this.get("api.gameData").get("/assets/v1/profile-icons.json").then((e => {
                        this.set("profileIconData", e)
                    })), this.get("api.chat").get("/v1/friends").then((() => {}))
                })),
                chatRosterIconId: s.Ember.computed("summonerId", "chatParticipants", "chatParticipants.[]", "chatParticipants.@each.{id,icon}", (function() {
                    const e = this.get("summonerId"),
                        t = this.get("chatParticipants");
                    if (t && t.length) {
                        const n = t.find((t => t.summonerId === e));
                        if (n) return n.icon
                    }
                    return null
                })),
                summonerIconPath: s.Ember.computed("summonerData.profileIconId", "profileIconData", "summonerId", "chatRosterIconId", (function() {
                    let e = this.get("summonerData.profileIconId");
                    const t = this.get("profileIconData"),
                        n = this.get("summonerId");
                    if (!e || !t || !n) return "";
                    const a = this.get("chatRosterIconId");
                    Number.isInteger(a) && -1 !== a && (e = a);
                    const s = this.$(".clash-member-summoner-img")[0];
                    this._attachContextMenu(s);
                    const i = t.find((t => String(t.id) === String(e)));
                    return i ? i.iconPath : ""
                })),
                summonerFriend: s.Ember.computed("summonerId", "friends.[]", (function() {
                    const e = this.get("summonerId"),
                        t = this.get("friends");
                    return e && t && t.length ? t.find((t => t.summonerId === e)) : null
                })),
                isFriend: s.Ember.computed.bool("summonerFriend"),
                isFriendIconVisible: s.Ember.computed.and("isFriend", "shouldShowFriendIcon"),
                memberActionItems: s.Ember.computed("summonerId", "summonerData.displayName", "localPlayerSummonerId", "friends.[]", (function() {
                    const e = this.get("summonerFriend.pid"),
                        t = this.get("summonerId"),
                        n = this.get("summonerData.displayName"),
                        a = this.get("localPlayerSummonerId"),
                        s = this.get("friends");
                    if (!(t && n && a && s)) return [];
                    if (String(a) === String(t)) return [];
                    const o = this.get("tra"),
                        r = this.get("chatService"),
                        l = this.get("telemetryService");
                    return (0, i.default)(e, t, n, o, r, l, {
                        source: "overview-summoner"
                    })
                })),
                _attachContextMenu: function(e) {
                    const t = e;
                    if (!t) return void s.logger.error("unable to find overview element for context menu");
                    const n = e => {
                        if (e && 0 === e.button && !this.get("allowLeftClick")) return;
                        const t = this.get("memberActionItems");
                        if (t && t.length) {
                            const n = s.UIKit.getContextMenuManager();
                            n.setMenuItems(t), n.openAtEvent(e)
                        }
                    };
                    t.addEventListener("click", n), t.addEventListener("contextmenu", n)
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "TqCUegPn",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\member-summoner-icon\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\member-summoner-icon\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\member-summoner-icon\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-member-summoner-img"],["flush-element"],["text","\\n  "],["append",["helper",["hovercard-component"],null,[["options","summonerId"],[["get",["hoverCardOptions"]],["get",["summonerId"]]]]],false],["text","\\n"],["block",["if"],[["get",["summonerIconPath"]]],null,2],["block",["if"],[["get",["isFriendIconVisible"]]],null,0],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","summoner-friend-icon"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["summonerIconPath"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-framed-icon"],null,[["borderwidth"],[2]],1]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = function(e, t) {
                    if (!t && e && e.__esModule) return e;
                    if (null === e || "object" != typeof e && "function" != typeof e) return {
                        default: e
                    };
                    var n = r(t);
                    if (n && n.has(e)) return n.get(e);
                    var a = {},
                        s = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var i in e)
                        if ("default" !== i && Object.prototype.hasOwnProperty.call(e, i)) {
                            var o = s ? Object.getOwnPropertyDescriptor(e, i) : null;
                            o && (o.get || o.set) ? Object.defineProperty(a, i, o) : a[i] = e[i]
                        } a.default = e, n && n.set(e, a);
                    return a
                }(n(9));
            n(538);
            var i, o = (i = n(292)) && i.__esModule ? i : {
                default: i
            };

            function r(e) {
                if ("function" != typeof WeakMap) return null;
                var t = new WeakMap,
                    n = new WeakMap;
                return (r = function(e) {
                    return e ? n : t
                })(e)
            }
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-roster-details-selector"],
                classNameBindings: ["isSaveAllowed:is-save-allowed"],
                layout: n(539),
                sharedData: {},
                isSaveAllowed: !0,
                initialName: "",
                initialTag: "",
                initialLogoId: -1,
                initialLogoColorId: -1,
                logoConfig: a.Ember.computed.alias("sharedData.logoConfig"),
                availableLogos: a.Ember.computed.alias("sharedData.availableLogos"),
                newLogos: a.Ember.computed.alias("sharedData.newLogos"),
                selectedLogoId: a.Ember.computed.alias("sharedData.selectedLogoId"),
                selectedLogoColorId: a.Ember.computed.alias("sharedData.selectedLogoColorId"),
                defaultLogoColorId: s.DEFAULT_LOGO_COLOR_ID,
                logoError: null,
                logoColorErrror: null,
                tutorialService: a.Ember.inject.service("tutorial"),
                gdsService: a.Ember.inject.service("gds"),
                currentNameTxt: "",
                currentTagTxt: "",
                isNameValid: !1,
                isTagValid: !1,
                nameValidationError: null,
                tagValidationError: null,
                minNameLength: s.ROSTER_NAME_MIN_SIZE,
                maxNameLength: s.ROSTER_NAME_MAX_SIZE,
                shortNameLength: s.ROSTER_TAG_CHAR_SIZE,
                currentNameTxtObserver: a.Ember.computed("currentNameTxt", (function() {
                    const e = this.get("currentNameTxt");
                    this.get("sharedData").set("teamName", e)
                })),
                currentTagTxtObserver: a.Ember.computed("currentTagTxt", (function() {
                    const e = this.get("currentTagTxt");
                    this.get("sharedData").set("teamTag", e)
                })),
                availabilityObserver: a.Ember.computed("initialLogoId", "initialLogoColorId", "availableLogos.[]", "availableLogos.@each.id", "availableLogos.@each.colors.[]", (function() {
                    const e = this.get("logoConfig"),
                        t = this.get("initialLogoId"),
                        n = this.get("initialLogoColorId"),
                        a = this.get("availableLogos"),
                        s = o.default.isLogoAvailable(a, t),
                        i = o.default.isLogoColorAvailable(e, a, t, n);
                    this.set("isInitialLogoUnavailable", !s), this.set("isInitialLogoColorUnavailable", !i)
                })),
                isInitialLogoSelected: a.Ember.computed("selectedLogoId", "selectedLogoColorId", "initialLogoId", "initialLogoColorId", (function() {
                    const e = this.get("initialLogoId"),
                        t = this.get("initialLogoColorId"),
                        n = this.get("selectedLogoId"),
                        a = this.get("selectedLogoColorId");
                    return e === n && t === a
                })),
                isInitialLogoOrColorUnavailable: a.Ember.computed.or("isInitialLogoUnavailable", "isInitialLogoColorUnavailable"),
                isInitialLogoSelectedUnavailable: a.Ember.computed.and("isInitialLogoSelected", "isInitialLogoOrColorUnavailable"),
                isAllInputsValidObserver: a.Ember.observer("isSaveAllowed", "isNameValid", "isTagValid", "sharedData.selectedLogoId", "sharedData.selectedLogoColorId", (function() {
                    a.Ember.run.once((() => {
                        const e = this.get("isSaveAllowed"),
                            t = this.get("sharedData"),
                            n = this.get("isTagValid"),
                            a = this.get("isNameValid"),
                            s = t.get("selectedLogoId"),
                            i = t.get("selectedLogoColorId"),
                            r = this.get("logoConfig"),
                            l = this.get("availableLogos"),
                            c = o.default.isLogoAvailable(l, s),
                            d = o.default.isLogoColorAvailable(r, l, s, i);
                        e && n && a && c && d ? t.enableAcceptButton() : t.disableAcceptButton()
                    }))
                })),
                currentRequirementText: a.Ember.computed("isSaveAllowed", "nameValidationError", "tagValidationError", "logoError", "logoColorError", "currentNameTxt", "currentTagTxt", "selectedLogoId", "sharedData", (function() {
                    const e = this.get("tra"),
                        t = this.get("currentNameTxt"),
                        n = this.get("currentTagTxt"),
                        a = this.get("isSaveAllowed") ? null : this.get("tra.clash_roster_details_save_not_allowed"),
                        i = this.get("tagValidationError"),
                        o = this.get("nameValidationError"),
                        r = this.get("logoError"),
                        l = this.get("logoColorError"),
                        c = this.get("selectedLogoId");
                    let d = "",
                        m = null;
                    if (a) d = a;
                    else if (t || n)
                        if (i) d = i, m = "tag";
                        else if (o) d = o, m = "name";
                    else if (c)
                        if (r) d = r, m = "icon";
                        else {
                            if (!l) {
                                const e = Math.floor(Math.random() * s.VALID_MSG_COUNT);
                                return d = this.get("tra.clash_valid_name_tooltip_" + e), this.get("sharedData").setTooltip(d), ""
                            }
                            d = l, m = "chroma"
                        }
                    else d = e.get("clash_roster_icon_picker_initial_tooltip");
                    else d = e.get("clash_roster_icon_picker_initial_tooltip");
                    if (m) {
                        const t = e.get(`clash_roster_details_error_message_type_${m}`),
                            n = d;
                        d = e.formatString("clash_roster_details_error_message", {
                            type: t,
                            description: n
                        })
                    }
                    return this.get("sharedData").setTooltip(d), d
                })),
                logos: a.Ember.computed("logoConfig.logos.[]", "availableLogos.[]", "gdsService.ready", "sharedData", (function() {
                    const e = [],
                        t = this.get("logoConfig.logos"),
                        n = this.get("availableLogos"),
                        a = this.get("newLogos") || [];
                    for (const i of t) {
                        const t = o.default.isLogoAvailable(n, i.id);
                        let r = null;
                        if (!t) {
                            r = this.get("tra.clash_roster_icon_picker_requirement_locked");
                            const e = this.get("sharedData").getRewardConfig(s.ROSTER_LOGO_REWARD_TYPES, i.id);
                            e && ((e.vpNeeded || 0) > 0 ? r = this.get("tra.clash_roster_icon_picker_requirement_vp") : e.lootItem && (r = this.get("tra.clash_roster_icon_picker_requirement_loot")))
                        }
                        const l = this.get("initialLogoId"),
                            c = -1 !== l && i.id === l,
                            d = a.find((e => e.id === i.id));
                        e.push({
                            id: i.id,
                            isAvailable: t,
                            requirementText: r,
                            selected: c,
                            newColorCount: d ? d.colors.length : 0,
                            baseImgPath: this.get("gdsService").getLogoPath(i.id, s.DEFAULT_LOGO_COLOR_ID)
                        })
                    }
                    return e.sort(((e, t) => e.isAvailable === t.isAvailable ? e.id - t.id : e.isAvailable ? -1 : 1)), e
                })),
                logoColors: a.Ember.computed("selectedLogoId", "logoConfig.logos.[]", "logoConfig.byId", "availableLogos.[]", "gdsService.ready", (function() {
                    const e = this.get("newLogos") || [],
                        t = this.get("selectedLogoId"),
                        n = this.get("logoConfig.byId")[t] || {};
                    if (!n.colors) return [];
                    const a = [],
                        s = this.get("logoConfig"),
                        i = this.get("availableLogos");
                    for (const r of Object.keys(n.colors)) {
                        const l = parseInt(r),
                            c = o.default.getLogoColorAvailability(s, i, t, l);
                        let d = null;
                        c.isAvailable || (d = c.ownedCount <= 0 ? this.get("tra.clash_roster_icon_picker_requirement_no_ownership") : this.get("tra").formatString("clash_roster_icon_picker_requirement_partial_ownership", {
                            ownedCount: c.ownedCount,
                            requiredCount: c.requiredCount
                        }));
                        const m = this.get("initialLogoColorId"),
                            u = -1 !== m && l === m,
                            p = e.find((e => e.id === n.id)),
                            h = !!p && !!p.colors.find((e => e === l));
                        a.push({
                            id: l,
                            isAvailable: c.isAvailable,
                            requirementText: d,
                            selected: u,
                            isNew: h,
                            baseImgPath: this.get("gdsService").getLogoPath(t, l)
                        })
                    }
                    return a.sort(((e, t) => e.isAvailable === t.isAvailable ? e.id - t.id : e.isAvailable ? -1 : 1)), a
                })),
                selectedIconPath: a.Ember.computed("selectedLogoId", "selectedLogoColorId", "gdsService.ready", (function() {
                    if (!this.get("gdsService.ready")) return "";
                    const e = this.get("selectedLogoId"),
                        t = this.get("selectedLogoColorId");
                    return this.get("gdsService").getLogoPath(e, t)
                })),
                hasSelectedLogo: a.Ember.computed("selectedLogoId", (function() {
                    const e = this.get("selectedLogoId"),
                        t = this.get("logoConfig.byId");
                    return !!a.Util.isNumberOk(e) && t[e]
                })),
                hasSelectedLogoColor: a.Ember.computed("selectedLogoColorId", (function() {
                    const e = this.get("selectedLogoColorId");
                    return a.Util.isNumberOk(e) && e !== s.INVALID_LOGO_COLOR_ID
                })),
                selectedLogoName: a.Ember.computed("selectedLogoId", (function() {
                    const e = this.get("tra"),
                        t = `clash_roster_logo_name_${this.get("selectedLogoId")}`;
                    return e.exists(t) ? e.get(t) : ""
                })),
                tagAndNameObserver: a.Ember.computed("isTagValid", "isNameValid", "isSaveAllowed", (function() {
                    if (!this.get("isSaveAllowed")) return;
                    const e = this.get("isTagValid"),
                        t = this.get("isNameValid"),
                        n = this.get("tutorialService.captainRosterScreenTutorialFlow");
                    n && "rosterDetailsModalNameTagStep" === n.name && e && t && (this.$("#tutorial-notification-container").remove(), this.get("tutorialService").completeTutorialStep("captainRosterScreenTutorialFlow", "rosterDetailsModalNameTagStep"))
                })),
                tutorialObserver: a.Ember.computed("tutorialService.captainRosterScreenTutorialFlow.name", "isSaveAllowed", (function() {
                    if (!this.get("isSaveAllowed")) return;
                    const e = this.get("tutorialService.captainRosterScreenTutorialFlow");
                    e && ("rosterDetailsModalNameTagStep" === e.name ? this._createTutorialNotification(e, "_nameTagTutorialStepTooltip", 1) : "rosterDetailsModalLogoStep" === e.name && this._createTutorialNotification(e, "_logoTutorialStepTooltip", 185))
                })),
                isTutorialNameTagStep: a.Ember.computed("tutorialService.captainRosterScreenTutorialFlow.name", (function() {
                    return this.get("isSaveAllowed") && "rosterDetailsModalNameTagStep" === this.get("tutorialService.captainRosterScreenTutorialFlow.name")
                })),
                _createTutorialNotification(e, t, n) {
                    a.Ember.run.later((() => {
                        if (this.get(t)) return;
                        const a = this.$(),
                            s = this.get("tutorialService").createIndependentNotificationElement(this.get("tra"), e, n);
                        a.append(s), this.set(t, s)
                    }), 500)
                },
                _selectLogo(e) {
                    this.set("logoError", e.requirementText), this.set("logoColorError", ""), this.get("sharedData").set("selectedLogoId", e.id), this._selectDefaultLogoColor()
                },
                _selectLogoColor(e) {
                    const t = this.get("selectedLogoId");
                    !((this.get("logos") || {})[t] || {}).requirementText || e.requirementText ? this.set("logoColorError", e.requirementText || "") : this.set("logoColorError", ""), this.get("sharedData").set("selectedLogoColorId", e.id)
                },
                _selectDefaultLogoColor() {
                    const e = this.get("logoColors");
                    e && e[0] && (e[0].selected = !0, this._selectLogoColor(e[0]))
                },
                actions: {
                    selectLogo(e) {
                        this._selectLogo(e);
                        const t = this.get("tutorialService.captainRosterScreenTutorialFlow");
                        t && "rosterDetailsModalLogoStep" === t.name && (this.$("#tutorial-notification-container").remove(), this.get("tutorialService").completeTutorialStep("captainRosterScreenTutorialFlow", "rosterDetailsModalLogoStep"))
                    },
                    selectLogoColor(e) {
                        this._selectLogoColor(e)
                    },
                    cancel() {
                        this.get("sharedData").closeDialog()
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "bRefr2aU",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-details\\\\roster-details-selector\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-details\\\\roster-details-selector\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\roster-details\\\\roster-details-selector\\\\index.js\\" "],["text","\\n"],["append",["unknown",["availabilityObserver"]],false],["text","\\n"],["append",["unknown",["currentNameTxtObserver"]],false],["text","\\n"],["append",["unknown",["currentTagTxtObserver"]],false],["text","\\n"],["append",["unknown",["tagAndNameObserver"]],false],["text","\\n"],["append",["unknown",["tutorialObserver"]],false],["text","\\n"],["open-element","span",[]],["dynamic-attr","force-compute",["concat",[["unknown",["currentRequirementText"]]]]],["flush-element"],["close-element"],["text","\\n"],["open-element","lol-uikit-content-block",[]],["static-attr","class","clash-roster-details-selector-dialog"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-roster-details-selector-header"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isSaveAllowed"]]],null,17,16],["text","    "],["open-element","div",[]],["static-attr","class","clash-roster-details-selector-x-button"],["flush-element"],["text","\\n      "],["append",["helper",["generic-button"],null,[["onClick","onClickSound","baseImgPath","overImgPath","downImgPath"],[["helper",["action"],[["get",[null]],"cancel"],null],"generic-click-small","/fe/lol-clash/assets/images/buttons/icon-x.png","/fe/lol-clash/assets/images/buttons/icon-x-over.png","/fe/lol-clash/assets/images/buttons/icon-x-down.png"]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["static-attr","class","clash-roster-details-name-tag-section"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-roster-details-name-tag-section-row"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-roster-details-tag-input"],["flush-element"],["text","\\n        "],["append",["helper",["async-text-field"],null,[["sourceTxt","placeholderTxt","isEnabled","minLength","maxLength","regexPattern","errorInvalidCharacters","errorSanitizer","outIsValid","outCurrentTxt","outErrorTxt","isCometBorderActive"],[["get",["initialTag"]],["get",["tra","clash_roster_details_placeholder_team_tag"]],["get",["isSaveAllowed"]],["get",["shortNameLength"]],["get",["shortNameLength"]],"^[A-Za-z]*$","clash_roster_tag_required_characters","clash_roster_tag_failed_sanitizer",["get",["isTagValid"]],["get",["currentTagTxt"]],["get",["tagValidationError"]],["get",["isTutorialNameTagStep"]]]]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-roster-details-name-input"],["flush-element"],["text","\\n        "],["append",["helper",["async-text-field"],null,[["sourceTxt","placeholderTxt","isEnabled","minLength","maxLength","regexPattern","outIsValid","outCurrentTxt","outErrorTxt","isCometBorderActive"],[["get",["initialName"]],["get",["tra","clash_roster_details_placeholder_team_name"]],["get",["isSaveAllowed"]],["get",["minNameLength"]],["get",["maxNameLength"]],"^[\\\\p{L}0-9\\\\s]*$",["get",["isNameValid"]],["get",["currentNameTxt"]],["get",["nameValidationError"]],["get",["isTutorialNameTagStep"]]]]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-roster-details-name-tag-error"],["flush-element"],["text","\\n      "],["append",["unknown",["currentRequirementText"]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["text","  "],["open-element","div",[]],["static-attr","class","clash-roster-details-selector-icon-section"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-roster-details-selector-icon-container"],["flush-element"],["text","\\n      "],["open-element","lol-uikit-perfect-scrollable",[]],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-roster-details-selector-icon-list"],["flush-element"],["text","\\n"],["block",["each"],[["get",["logos"]]],null,15],["text","        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","clash-roster-details-selector-chroma-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["hasSelectedLogo"]]],null,11,0],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","\\n        "],["open-element","h6",[]],["flush-element"],["append",["unknown",["tra","clash_roster_icon_picker_no_icon_selected"]],false],["close-element"],["text","\\n\\n"]],"locals":[]},{"statements":[["text","                  "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n                    "],["open-element","p",[]],["flush-element"],["append",["unknown",["logoColor","requirementText"]],false],["close-element"],["text","\\n                  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                "],["open-element","img",[]],["static-attr","class","clash-roster-details-selector-chroma-unavailable"],["static-attr","src","/fe/lol-clash/assets/images/roster-logos/unavailable.png"],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["bottom","system"]],1]],"locals":[]},{"statements":[["text","                "],["open-element","div",[]],["static-attr","class","clash-roster-details-selector-color-new-pip"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","clash-roster-details-selector-chroma-button"],["dynamic-attr","debug-chroma-id",["concat",[["unknown",["logoColor","id"]]]]],["flush-element"],["text","\\n              "],["append",["helper",["generic-button"],null,[["canBeSelected","triggerSelected","selectionGroup","onSelected","onHoverSound","onClickSound","onClickReleaseSound","baseImgPath"],[true,["get",["logoColor","selected"]],"roster-details-selector-chroma",["helper",["action"],[["get",[null]],"selectLogoColor",["get",["logoColor"]]],null],"grid-hover","grid-click","grid-click-release",["get",["logoColor","baseImgPath"]]]]],false],["text","\\n"],["block",["if"],[["get",["logoColor","isNew"]]],null,3],["block",["unless"],[["get",["logoColor","isAvailable"]]],null,2],["text","            "],["close-element"],["text","\\n"]],"locals":["logoColor"]},{"statements":[["text","                        "],["append",["unknown",["tra","clash_roster_details_must_pick_new_chroma"]],false],["text","\\n                      "]],"locals":[]},{"statements":[["block",["if"],[["get",["isInitialLogoColorUnavailable"]]],null,5]],"locals":[]},{"statements":[["text","                        "],["append",["unknown",["tra","clash_roster_details_must_pick_new_logo"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","                  "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n                    "],["open-element","p",[]],["flush-element"],["text","\\n"],["block",["if"],[["get",["isInitialLogoUnavailable"]]],null,7,6],["text","                    "],["close-element"],["text","\\n                  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["open-element","div",[]],["static-attr","class","clash-roster-details-selector-invalid-logo"],["flush-element"],["text","\\n                "],["open-element","img",[]],["static-attr","class","clash-roster-details-selector-invalid-logo-icon"],["static-attr","src","/fe/lol-clash/assets/images/AlertIcon.png"],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],8],["text","              "],["close-element"],["text","\\n            "]],"locals":[]},{"statements":[["text","            "],["open-element","img",[]],["static-attr","class","clash-roster-details-selector-full-logo-img"],["dynamic-attr","src",["concat",[["unknown",["selectedIconPath"]]]]],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["isInitialLogoSelectedUnavailable"]]],null,9],["text"," "],["text","\\n"]],"locals":[]},{"statements":[["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-roster-details-selector-title"],["flush-element"],["text","\\n          "],["open-element","h5",[]],["flush-element"],["append",["unknown",["selectedLogoName"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-roster-details-selector-full-logo"],["dynamic-attr","debug-icon-id",["concat",[["unknown",["selectedLogoId"]]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["hasSelectedLogoColor"]]],null,10],["text","        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-roster-details-selector-chroma-list"],["flush-element"],["text","\\n"],["block",["each"],[["get",["logoColors"]]],null,4],["text","        "],["close-element"],["text","\\n\\n"]],"locals":[]},{"statements":[["text","                  "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n                    "],["open-element","p",[]],["flush-element"],["append",["unknown",["logo","requirementText"]],false],["close-element"],["text","\\n                  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                "],["open-element","img",[]],["static-attr","class","clash-roster-details-selector-icon-unavailable"],["static-attr","src","/fe/lol-clash/assets/images/roster-logos/unavailable.png"],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["bottom","system"]],12]],"locals":[]},{"statements":[["open-element","div",[]],["static-attr","class","clash-roster-details-selector-new-logo-pip"],["flush-element"],["close-element"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-roster-details-selector-icon-button ",["helper",["if"],[["get",["logo","isAvailable"]],"","is-icon-unavailable"],null]]]],["dynamic-attr","debug-logo-id",["concat",[["unknown",["logo","id"]]]]],["flush-element"],["text","\\n              "],["append",["helper",["generic-button"],null,[["canBeSelected","triggerSelected","selectionGroup","onSelected","onHoverSound","onClickSound","onClickReleaseSound","baseImgPath"],[true,["get",["logo","selected"]],"roster-details-selector",["helper",["action"],[["get",[null]],"selectLogo",["get",["logo"]]],null],"grid-hover","grid-click","grid-click-release",["get",["logo","baseImgPath"]]]]],false],["text","\\n              "],["block",["if"],[["get",["logo","newColorCount"]]],null,14],["text","\\n"],["block",["unless"],[["get",["logo","isAvailable"]]],null,13],["text","            "],["close-element"],["text","\\n"]],"locals":["logo"]},{"statements":[["text","      "],["open-element","h4",[]],["flush-element"],["append",["unknown",["tra","clash_roster_icon_picker_title_uneditable"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","h4",[]],["flush-element"],["append",["unknown",["tra","clash_roster_icon_picker_title"]],false],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            const s = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                logPrefix: "service:sanitizer",
                basePaths: {
                    sanitizer: "/sanitizer"
                }
            });
            e.exports = a.Ember.Service.extend(s, {
                containsBadWord: function(e) {
                    return this.get("api.sanitizer").post("/v1/containsSanitized", e)
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = n(9),
                o = (a = n(542)) && a.__esModule ? a : {
                    default: a
                };
            n(543), e.exports = s.Ember.Component.extend({
                classNames: ["clash-async-text-field"],
                layout: n(544),
                sanitizerService: s.Ember.inject.service("sanitizer"),
                sourceTxt: "",
                placeholderTxt: "",
                startInEditMode: !1,
                allowEdit: !0,
                asyncEditCall: null,
                displayPrefix: "",
                displayPostfix: "",
                cancelEditTrigger: !1,
                autofocusOnEdit: !1,
                isCometBorderActive: !1,
                minLength: 0,
                maxLength: -1,
                regexPattern: null,
                isEnabled: !0,
                isDisabled: s.Ember.computed.not("isEnabled"),
                displayValidationIndicators: !1,
                errorNotExactLength: "clash_async_text_field_validation_failed_not_exact_length",
                errorTooShort: "clash_async_text_field_validation_failed_too_short",
                errorTooLong: "clash_async_text_field_validation_failed_too_long",
                errorGeneric: "clash_async_text_field_validation_failed_generic",
                errorInvalidCharacters: "clash_async_text_field_validation_failed_invalid_characters",
                errorSanitizer: "clash_async_text_field_validation_failed_sanitizer",
                isEditing: !1,
                isEditCallInProgress: !1,
                currentTxt: "",
                errorTxt: "",
                isSanitizerValid: !1,
                outCurrentTxt: null,
                outIsValid: null,
                outErrorTxt: null,
                isAlwaysInEditMode: s.Ember.computed.not("asyncEditCall"),
                onInit: s.Ember.on("init", (function() {
                    this._resetToSource(), this._updateValidMsg();
                    const e = this.get("startInEditMode"),
                        t = this.get("isAlwaysInEditMode");
                    (e || t) && this.send("beginEdit")
                })),
                isEditingObserver: s.Ember.computed("isEditing", (function() {
                    const e = this.get("isEditing"),
                        t = this.get("autofocusOnEdit");
                    e && t && s.Ember.run.next((() => {
                        this.$(".edit-input input").focus()
                    }))
                })),
                sourceTxtObserver: s.Ember.computed("sourceTxt", (function() {
                    this._resetToSource()
                })),
                currentTxtObserver: s.Ember.computed("currentTxt", (function() {
                    this.set("outCurrentTxt", this.get("currentTxt"))
                })),
                cancelEditTriggerObs: s.Ember.computed("cancelEditTrigger", (function() {
                    this.get("cancelEditTrigger") && this.send("cancelEdit")
                })),
                canEdit: s.Ember.computed("isEditing", "allowEdit", (function() {
                    const e = this.get("isEditing"),
                        t = this.get("allowEdit");
                    return !e && t
                })),
                isValid: s.Ember.computed("isFormatValid", "isSanitizerValid", (function() {
                    const e = this.get("isFormatValid") && this.get("isSanitizerValid");
                    return this.set("outIsValid", e), e
                })),
                isFormatValid: s.Ember.computed("currentTxt", (function() {
                    const e = this.get("currentTxt");
                    if (null == e) return this._setValidationError("errorGeneric"), !1;
                    const t = this.get("minLength"),
                        n = this.get("maxLength");
                    if (t === n) {
                        if (e.replace(/\s/g, "").length !== t) return this._setValidationError("errorNotExactLength", {
                            length: t
                        }), !1
                    } else {
                        if (e.replace(/\s/g, "").length < t) return this._setValidationError("errorTooShort", {
                            minLength: t
                        }), !1;
                        if (n > -1 && e.length > n) return this._setValidationError("errorTooLong", {
                            maxLength: n
                        }), !1
                    }
                    const a = this.get("regexPattern");
                    if (a) {
                        if (!new o.default(a, "g").test(e)) return this._setValidationError("errorInvalidCharacters"), !1
                    }
                    this.set("isSanitizerValid", !1);
                    const i = {
                        level: 2,
                        aggressiveScan: !0,
                        text: e
                    };
                    return this.get("sanitizerService").containsBadWord(i).then((e => {
                        e.contains ? s.Ember.run((() => {
                            this._getValidationError() || this._setValidationError("errorSanitizer"), this.set("isSanitizerValid", !1)
                        })) : s.Ember.run((() => {
                            this.set("isSanitizerValid", !0)
                        }))
                    })), this._setValidationError(null), !0
                })),
                _getValidationError() {
                    return this.get("errorTxt")
                },
                _setValidationError(e, t) {
                    if (e) {
                        const n = this.get(e),
                            a = this.get("tra").formatString(n, t);
                        this.set("errorTxt", a), this.set("outErrorTxt", a)
                    } else this.set("errorTxt", ""), this.set("outErrorTxt", "")
                },
                _resetToSource() {
                    const e = this.get("sourceTxt");
                    this.set("currentTxt", e)
                },
                _updateValidMsg() {
                    const e = Math.floor(Math.random() * i.VALID_MSG_COUNT);
                    this.set("validMsg", this.get("tra.clash_valid_name_tooltip_" + e))
                },
                actions: {
                    beginEdit() {
                        this.set("isEditing", !0)
                    },
                    unfocus(e) {
                        this.get("isValid") ? this.send("confirmEdit", e) : this.send("cancelEdit")
                    },
                    confirmEdit(e) {
                        const t = this.get("asyncEditCall");
                        if (!t) return;
                        const n = this.get("isValid"),
                            a = this.get("isEditing"),
                            s = this.get("isEditCallInProgress");
                        if (!n || !a || s) return;
                        this.get("sourceTxt") !== this.get("currentTxt") ? (this.set("isEditCallInProgress", !0), t(e).then((() => {
                            this.set("isEditCallInProgress", !1), this.set("isEditing", !1)
                        }), (() => {
                            this.set("isEditCallInProgress", !1)
                        }))) : this.set("isEditing", !1)
                    },
                    cancelEdit() {
                        if (this.get("isAlwaysInEditMode")) return;
                        this.get("isEditing") && (this.set("isEditing", !1), this._resetToSource())
                    },
                    onKeyUp(e) {
                        this.get("isEditing") && (this.set("currentTxt", e), this._updateValidMsg())
                    }
                }
            })
        }, e => {
            e.exports = function e(t, n, a) {
                function s(o, r) {
                    if (!n[o]) {
                        if (!t[o]) {
                            if (i) return i(o, !0);
                            var l = new Error("Cannot find module '" + o + "'");
                            throw l.code = "MODULE_NOT_FOUND", l
                        }
                        var c = n[o] = {
                            exports: {}
                        };
                        t[o][0].call(c.exports, (function(e) {
                            var n = t[o][1][e];
                            return s(n || e)
                        }), c, c.exports, e, t, n, a)
                    }
                    return n[o].exports
                }
                for (var i = void 0, o = 0; o < a.length; o++) s(a[o]);
                return s
            }({
                1: [function(e, t, n) {
                    t.exports = function(e) {
                        "use strict";
                        var t = "xregexp",
                            n = /(\()(?!\?)|\\([1-9]\d*)|\\[\s\S]|\[(?:[^\\\]]|\\[\s\S])*\]/g,
                            a = e.union([/\({{([\w$]+)}}\)|{{([\w$]+)}}/, n], "g", {
                                conjunction: "or"
                            });

                        function s(e) {
                            var t = /^(?:\(\?:\))*\^/,
                                n = /\$(?:\(\?:\))*$/;
                            return t.test(e) && n.test(e) && n.test(e.replace(/\\[\s\S]/g, "")) ? e.replace(t, "").replace(n, "") : e
                        }

                        function i(n, a) {
                            var s = a ? "x" : "";
                            return e.isRegExp(n) ? n[t] && n[t].captureNames ? n : e(n.source, s) : e(n, s)
                        }
                        e.build = function(o, r, l) {
                            var c = (l = l || "").indexOf("x") > -1,
                                d = /^\(\?([\w$]+)\)/.exec(o);
                            d && (l = e._clipDuplicates(l + d[1]));
                            var m = {};
                            for (var u in r)
                                if (r.hasOwnProperty(u)) {
                                    var p = i(r[u], c);
                                    m[u] = {
                                        pattern: s(p.source),
                                        names: p[t].captureNames || []
                                    }
                                } var h, g = i(o, c),
                                f = 0,
                                _ = 0,
                                b = [0],
                                x = g[t].captureNames || [],
                                y = g.source.replace(a, (function(e, t, a, s, i) {
                                    var o, r, l, c = t || a;
                                    if (c) {
                                        if (!m.hasOwnProperty(c)) throw new ReferenceError("Undefined property " + e);
                                        return t ? (o = x[_], b[++_] = ++f, r = "(?<" + (o || c) + ">") : r = "(?:", h = f, r + m[c].pattern.replace(n, (function(e, t, n) {
                                            if (t) {
                                                if (o = m[c].names[f - h], ++f, o) return "(?<" + o + ">"
                                            } else if (n) return l = +n - 1, m[c].names[l] ? "\\k<" + m[c].names[l] + ">" : "\\" + (+n + h);
                                            return e
                                        })) + ")"
                                    }
                                    if (s) {
                                        if (o = x[_], b[++_] = ++f, o) return "(?<" + o + ">"
                                    } else if (i) return x[l = +i - 1] ? "\\k<" + x[l] + ">" : "\\" + b[+i];
                                    return e
                                }));
                            return e(y, l)
                        }
                    }
                }, {}],
                2: [function(e, t, n) {
                    t.exports = function(e) {
                        "use strict";

                        function t(e, t, n, a) {
                            return {
                                name: e,
                                value: t,
                                start: n,
                                end: a
                            }
                        }
                        e.matchRecursive = function(n, a, s, i, o) {
                            o = o || {};
                            var r, l, c, d, m, u = (i = i || "").indexOf("g") > -1,
                                p = i.indexOf("y") > -1,
                                h = i.replace(/y/g, ""),
                                g = o.escapeChar,
                                f = o.valueNames,
                                _ = [],
                                b = 0,
                                x = 0,
                                y = 0,
                                k = 0;
                            if (a = e(a, h), s = e(s, h), g) {
                                if (g.length > 1) throw new Error("Cannot use more than one escape character");
                                g = e.escape(g), m = new RegExp("(?:" + g + "[\\S\\s]|(?:(?!" + e.union([a, s], "", {
                                    conjunction: "or"
                                }).source + ")[^" + g + "])+)+", i.replace(/[^imu]+/g, ""))
                            }
                            for (;;) {
                                if (g && (y += (e.exec(n, m, y, "sticky") || [""])[0].length), c = e.exec(n, a, y), d = e.exec(n, s, y), c && d && (c.index <= d.index ? d = null : c = null), c || d) y = (x = (c || d).index) + (c || d)[0].length;
                                else if (!b) break;
                                if (p && !b && x > k) break;
                                if (c) b || (r = x, l = y), ++b;
                                else {
                                    if (!d || !b) throw new Error("Unbalanced delimiter found in string");
                                    if (!--b && (f ? (f[0] && r > k && _.push(t(f[0], n.slice(k, r), k, r)), f[1] && _.push(t(f[1], n.slice(r, l), r, l)), f[2] && _.push(t(f[2], n.slice(l, x), l, x)), f[3] && _.push(t(f[3], n.slice(x, y), x, y))) : _.push(n.slice(l, x)), k = y, !u)) break
                                }
                                x === y && ++y
                            }
                            return u && !p && f && f[0] && n.length > k && _.push(t(f[0], n.slice(k), k, n.length)), _
                        }
                    }
                }, {}],
                3: [function(e, t, n) {
                    t.exports = function(e) {
                        "use strict";
                        var t = {},
                            n = e._dec,
                            a = e._hex,
                            s = e._pad4;

                        function i(e) {
                            return e.replace(/[- _]+/g, "").toLowerCase()
                        }

                        function o(e) {
                            var t = /^\\[xu](.+)/.exec(e);
                            return t ? n(t[1]) : e.charCodeAt("\\" === e.charAt(0) ? 1 : 0)
                        }

                        function r(t) {
                            var n = "",
                                i = -1;
                            return e.forEach(t, /(\\x..|\\u....|\\?[\s\S])(?:-(\\x..|\\u....|\\?[\s\S]))?/, (function(e) {
                                var t = o(e[1]);
                                t > i + 1 && (n += "\\u" + s(a(i + 1)), t > i + 2 && (n += "-\\u" + s(a(t - 1)))), i = o(e[2] || e[1])
                            })), i < 65535 && (n += "\\u" + s(a(i + 1)), i < 65534 && (n += "-\\uFFFF")), n
                        }

                        function l(e) {
                            var n = "b!";
                            return t[e][n] || (t[e][n] = r(t[e].bmp))
                        }

                        function c(e, n) {
                            var a = t[e],
                                s = "";
                            return a.bmp && !a.isBmpLast && (s = "[" + a.bmp + "]" + (a.astral ? "|" : "")), a.astral && (s += a.astral), a.isBmpLast && a.bmp && (s += (a.astral ? "|" : "") + "[" + a.bmp + "]"), n ? "(?:(?!" + s + ")(?:[\ud800-\udbff][\udc00-\udfff]|[\0-￿]))" : "(?:" + s + ")"
                        }

                        function d(e, n) {
                            var a = n ? "a!" : "a=";
                            return t[e][a] || (t[e][a] = c(e, n))
                        }
                        e.addToken(/\\([pP])(?:{(\^?)([^}]*)}|([A-Za-z]))/, (function(e, n, a) {
                            var s = "Invalid double negation ",
                                o = "Unknown Unicode token ",
                                r = "Unicode token missing data ",
                                c = "Astral mode required for Unicode token ",
                                m = "Astral mode does not support Unicode tokens within character classes",
                                u = "P" === e[1] || !!e[2],
                                p = a.indexOf("A") > -1,
                                h = i(e[4] || e[3]),
                                g = t[h];
                            if ("P" === e[1] && e[2]) throw new SyntaxError(s + e[0]);
                            if (!t.hasOwnProperty(h)) throw new SyntaxError(o + e[0]);
                            if (g.inverseOf) {
                                if (h = i(g.inverseOf), !t.hasOwnProperty(h)) throw new ReferenceError(r + e[0] + " -> " + g.inverseOf);
                                g = t[h], u = !u
                            }
                            if (!g.bmp && !p) throw new SyntaxError(c + e[0]);
                            if (p) {
                                if ("class" === n) throw new SyntaxError(m);
                                return d(h, u)
                            }
                            return "class" === n ? u ? l(h) : g.bmp : (u ? "[^" : "[") + g.bmp + "]"
                        }), {
                            scope: "all",
                            optionalFlags: "A",
                            leadChar: "\\"
                        }), e.addUnicodeData = function(n) {
                            for (var a, s = "Unicode token requires name", o = "Unicode token has no character data ", r = 0; r < n.length; ++r) {
                                if (!(a = n[r]).name) throw new Error(s);
                                if (!(a.inverseOf || a.bmp || a.astral)) throw new Error(o + a.name);
                                t[i(a.name)] = a, a.alias && (t[i(a.alias)] = a)
                            }
                            e.cache.flush("patterns")
                        }, e._getUnicodeProperty = function(e) {
                            var n = i(e);
                            return t[n]
                        }
                    }
                }, {}],
                4: [function(e, t, n) {
                    t.exports = function(e) {
                        "use strict";
                        if (!e.addUnicodeData) throw new ReferenceError("Unicode Base must be loaded before Unicode Blocks");
                        e.addUnicodeData([{
                            name: "InAdlam",
                            astral: "\ud83a[\udd00-\udd5f]"
                        }, {
                            name: "InAegean_Numbers",
                            astral: "\ud800[\udd00-\udd3f]"
                        }, {
                            name: "InAhom",
                            astral: "\ud805[\udf00-\udf3f]"
                        }, {
                            name: "InAlchemical_Symbols",
                            astral: "\ud83d[\udf00-\udf7f]"
                        }, {
                            name: "InAlphabetic_Presentation_Forms",
                            bmp: "ﬀ-ﭏ"
                        }, {
                            name: "InAnatolian_Hieroglyphs",
                            astral: "\ud811[\udc00-\ude7f]"
                        }, {
                            name: "InAncient_Greek_Musical_Notation",
                            astral: "\ud834[\ude00-\ude4f]"
                        }, {
                            name: "InAncient_Greek_Numbers",
                            astral: "\ud800[\udd40-\udd8f]"
                        }, {
                            name: "InAncient_Symbols",
                            astral: "\ud800[\udd90-\uddcf]"
                        }, {
                            name: "InArabic",
                            bmp: "؀-ۿ"
                        }, {
                            name: "InArabic_Extended_A",
                            bmp: "ࢠ-ࣿ"
                        }, {
                            name: "InArabic_Mathematical_Alphabetic_Symbols",
                            astral: "\ud83b[\ude00-\udeff]"
                        }, {
                            name: "InArabic_Presentation_Forms_A",
                            bmp: "ﭐ-﷿"
                        }, {
                            name: "InArabic_Presentation_Forms_B",
                            bmp: "ﹰ-\ufeff"
                        }, {
                            name: "InArabic_Supplement",
                            bmp: "ݐ-ݿ"
                        }, {
                            name: "InArmenian",
                            bmp: "԰-֏"
                        }, {
                            name: "InArrows",
                            bmp: "←-⇿"
                        }, {
                            name: "InAvestan",
                            astral: "\ud802[\udf00-\udf3f]"
                        }, {
                            name: "InBalinese",
                            bmp: "ᬀ-᭿"
                        }, {
                            name: "InBamum",
                            bmp: "ꚠ-꛿"
                        }, {
                            name: "InBamum_Supplement",
                            astral: "\ud81a[\udc00-\ude3f]"
                        }, {
                            name: "InBasic_Latin",
                            bmp: "\0-"
                        }, {
                            name: "InBassa_Vah",
                            astral: "\ud81a[\uded0-\udeff]"
                        }, {
                            name: "InBatak",
                            bmp: "ᯀ-᯿"
                        }, {
                            name: "InBengali",
                            bmp: "ঀ-৿"
                        }, {
                            name: "InBhaiksuki",
                            astral: "\ud807[\udc00-\udc6f]"
                        }, {
                            name: "InBlock_Elements",
                            bmp: "▀-▟"
                        }, {
                            name: "InBopomofo",
                            bmp: "㄀-ㄯ"
                        }, {
                            name: "InBopomofo_Extended",
                            bmp: "ㆠ-ㆿ"
                        }, {
                            name: "InBox_Drawing",
                            bmp: "─-╿"
                        }, {
                            name: "InBrahmi",
                            astral: "\ud804[\udc00-\udc7f]"
                        }, {
                            name: "InBraille_Patterns",
                            bmp: "⠀-⣿"
                        }, {
                            name: "InBuginese",
                            bmp: "ᨀ-᨟"
                        }, {
                            name: "InBuhid",
                            bmp: "ᝀ-᝟"
                        }, {
                            name: "InByzantine_Musical_Symbols",
                            astral: "\ud834[\udc00-\udcff]"
                        }, {
                            name: "InCJK_Compatibility",
                            bmp: "㌀-㏿"
                        }, {
                            name: "InCJK_Compatibility_Forms",
                            bmp: "︰-﹏"
                        }, {
                            name: "InCJK_Compatibility_Ideographs",
                            bmp: "豈-﫿"
                        }, {
                            name: "InCJK_Compatibility_Ideographs_Supplement",
                            astral: "\ud87e[\udc00-\ude1f]"
                        }, {
                            name: "InCJK_Radicals_Supplement",
                            bmp: "⺀-⻿"
                        }, {
                            name: "InCJK_Strokes",
                            bmp: "㇀-㇯"
                        }, {
                            name: "InCJK_Symbols_and_Punctuation",
                            bmp: "　-〿"
                        }, {
                            name: "InCJK_Unified_Ideographs",
                            bmp: "一-鿿"
                        }, {
                            name: "InCJK_Unified_Ideographs_Extension_A",
                            bmp: "㐀-䶿"
                        }, {
                            name: "InCJK_Unified_Ideographs_Extension_B",
                            astral: "[\ud840-\ud868][\udc00-\udfff]|\ud869[\udc00-\udedf]"
                        }, {
                            name: "InCJK_Unified_Ideographs_Extension_C",
                            astral: "\ud869[\udf00-\udfff]|[\ud86a-\ud86c][\udc00-\udfff]|\ud86d[\udc00-\udf3f]"
                        }, {
                            name: "InCJK_Unified_Ideographs_Extension_D",
                            astral: "\ud86d[\udf40-\udfff]|\ud86e[\udc00-\udc1f]"
                        }, {
                            name: "InCJK_Unified_Ideographs_Extension_E",
                            astral: "\ud86e[\udc20-\udfff]|[\ud86f-\ud872][\udc00-\udfff]|\ud873[\udc00-\udeaf]"
                        }, {
                            name: "InCarian",
                            astral: "\ud800[\udea0-\udedf]"
                        }, {
                            name: "InCaucasian_Albanian",
                            astral: "\ud801[\udd30-\udd6f]"
                        }, {
                            name: "InChakma",
                            astral: "\ud804[\udd00-\udd4f]"
                        }, {
                            name: "InCham",
                            bmp: "ꨀ-꩟"
                        }, {
                            name: "InCherokee",
                            bmp: "Ꭰ-᏿"
                        }, {
                            name: "InCherokee_Supplement",
                            bmp: "ꭰ-ꮿ"
                        }, {
                            name: "InCombining_Diacritical_Marks",
                            bmp: "̀-ͯ"
                        }, {
                            name: "InCombining_Diacritical_Marks_Extended",
                            bmp: "᪰-᫿"
                        }, {
                            name: "InCombining_Diacritical_Marks_Supplement",
                            bmp: "᷀-᷿"
                        }, {
                            name: "InCombining_Diacritical_Marks_for_Symbols",
                            bmp: "⃐-⃿"
                        }, {
                            name: "InCombining_Half_Marks",
                            bmp: "︠-︯"
                        }, {
                            name: "InCommon_Indic_Number_Forms",
                            bmp: "꠰-꠿"
                        }, {
                            name: "InControl_Pictures",
                            bmp: "␀-␿"
                        }, {
                            name: "InCoptic",
                            bmp: "Ⲁ-⳿"
                        }, {
                            name: "InCoptic_Epact_Numbers",
                            astral: "\ud800[\udee0-\udeff]"
                        }, {
                            name: "InCounting_Rod_Numerals",
                            astral: "\ud834[\udf60-\udf7f]"
                        }, {
                            name: "InCuneiform",
                            astral: "\ud808[\udc00-\udfff]"
                        }, {
                            name: "InCuneiform_Numbers_and_Punctuation",
                            astral: "\ud809[\udc00-\udc7f]"
                        }, {
                            name: "InCurrency_Symbols",
                            bmp: "₠-⃏"
                        }, {
                            name: "InCypriot_Syllabary",
                            astral: "\ud802[\udc00-\udc3f]"
                        }, {
                            name: "InCyrillic",
                            bmp: "Ѐ-ӿ"
                        }, {
                            name: "InCyrillic_Extended_A",
                            bmp: "ⷠ-ⷿ"
                        }, {
                            name: "InCyrillic_Extended_B",
                            bmp: "Ꙁ-ꚟ"
                        }, {
                            name: "InCyrillic_Extended_C",
                            bmp: "ᲀ-᲏"
                        }, {
                            name: "InCyrillic_Supplement",
                            bmp: "Ԁ-ԯ"
                        }, {
                            name: "InDeseret",
                            astral: "\ud801[\udc00-\udc4f]"
                        }, {
                            name: "InDevanagari",
                            bmp: "ऀ-ॿ"
                        }, {
                            name: "InDevanagari_Extended",
                            bmp: "꣠-ꣿ"
                        }, {
                            name: "InDingbats",
                            bmp: "✀-➿"
                        }, {
                            name: "InDomino_Tiles",
                            astral: "\ud83c[\udc30-\udc9f]"
                        }, {
                            name: "InDuployan",
                            astral: "\ud82f[\udc00-\udc9f]"
                        }, {
                            name: "InEarly_Dynastic_Cuneiform",
                            astral: "\ud809[\udc80-\udd4f]"
                        }, {
                            name: "InEgyptian_Hieroglyphs",
                            astral: "\ud80c[\udc00-\udfff]|\ud80d[\udc00-\udc2f]"
                        }, {
                            name: "InElbasan",
                            astral: "\ud801[\udd00-\udd2f]"
                        }, {
                            name: "InEmoticons",
                            astral: "\ud83d[\ude00-\ude4f]"
                        }, {
                            name: "InEnclosed_Alphanumeric_Supplement",
                            astral: "\ud83c[\udd00-\uddff]"
                        }, {
                            name: "InEnclosed_Alphanumerics",
                            bmp: "①-⓿"
                        }, {
                            name: "InEnclosed_CJK_Letters_and_Months",
                            bmp: "㈀-㋿"
                        }, {
                            name: "InEnclosed_Ideographic_Supplement",
                            astral: "\ud83c[\ude00-\udeff]"
                        }, {
                            name: "InEthiopic",
                            bmp: "ሀ-፿"
                        }, {
                            name: "InEthiopic_Extended",
                            bmp: "ⶀ-⷟"
                        }, {
                            name: "InEthiopic_Extended_A",
                            bmp: "꬀-꬯"
                        }, {
                            name: "InEthiopic_Supplement",
                            bmp: "ᎀ-᎟"
                        }, {
                            name: "InGeneral_Punctuation",
                            bmp: " -⁯"
                        }, {
                            name: "InGeometric_Shapes",
                            bmp: "■-◿"
                        }, {
                            name: "InGeometric_Shapes_Extended",
                            astral: "\ud83d[\udf80-\udfff]"
                        }, {
                            name: "InGeorgian",
                            bmp: "Ⴀ-ჿ"
                        }, {
                            name: "InGeorgian_Supplement",
                            bmp: "ⴀ-⴯"
                        }, {
                            name: "InGlagolitic",
                            bmp: "Ⰰ-ⱟ"
                        }, {
                            name: "InGlagolitic_Supplement",
                            astral: "\ud838[\udc00-\udc2f]"
                        }, {
                            name: "InGothic",
                            astral: "\ud800[\udf30-\udf4f]"
                        }, {
                            name: "InGrantha",
                            astral: "\ud804[\udf00-\udf7f]"
                        }, {
                            name: "InGreek_Extended",
                            bmp: "ἀ-῿"
                        }, {
                            name: "InGreek_and_Coptic",
                            bmp: "Ͱ-Ͽ"
                        }, {
                            name: "InGujarati",
                            bmp: "઀-૿"
                        }, {
                            name: "InGurmukhi",
                            bmp: "਀-੿"
                        }, {
                            name: "InHalfwidth_and_Fullwidth_Forms",
                            bmp: "＀-￯"
                        }, {
                            name: "InHangul_Compatibility_Jamo",
                            bmp: "㄰-㆏"
                        }, {
                            name: "InHangul_Jamo",
                            bmp: "ᄀ-ᇿ"
                        }, {
                            name: "InHangul_Jamo_Extended_A",
                            bmp: "ꥠ-꥿"
                        }, {
                            name: "InHangul_Jamo_Extended_B",
                            bmp: "ힰ-퟿"
                        }, {
                            name: "InHangul_Syllables",
                            bmp: "가-힯"
                        }, {
                            name: "InHanunoo",
                            bmp: "ᜠ-᜿"
                        }, {
                            name: "InHatran",
                            astral: "\ud802[\udce0-\udcff]"
                        }, {
                            name: "InHebrew",
                            bmp: "֐-׿"
                        }, {
                            name: "InHigh_Private_Use_Surrogates",
                            bmp: "\udb80-\udbff"
                        }, {
                            name: "InHigh_Surrogates",
                            bmp: "\ud800-\udb7f"
                        }, {
                            name: "InHiragana",
                            bmp: "぀-ゟ"
                        }, {
                            name: "InIPA_Extensions",
                            bmp: "ɐ-ʯ"
                        }, {
                            name: "InIdeographic_Description_Characters",
                            bmp: "⿰-⿿"
                        }, {
                            name: "InIdeographic_Symbols_and_Punctuation",
                            astral: "\ud81b[\udfe0-\udfff]"
                        }, {
                            name: "InImperial_Aramaic",
                            astral: "\ud802[\udc40-\udc5f]"
                        }, {
                            name: "InInscriptional_Pahlavi",
                            astral: "\ud802[\udf60-\udf7f]"
                        }, {
                            name: "InInscriptional_Parthian",
                            astral: "\ud802[\udf40-\udf5f]"
                        }, {
                            name: "InJavanese",
                            bmp: "ꦀ-꧟"
                        }, {
                            name: "InKaithi",
                            astral: "\ud804[\udc80-\udccf]"
                        }, {
                            name: "InKana_Supplement",
                            astral: "\ud82c[\udc00-\udcff]"
                        }, {
                            name: "InKanbun",
                            bmp: "㆐-㆟"
                        }, {
                            name: "InKangxi_Radicals",
                            bmp: "⼀-⿟"
                        }, {
                            name: "InKannada",
                            bmp: "ಀ-೿"
                        }, {
                            name: "InKatakana",
                            bmp: "゠-ヿ"
                        }, {
                            name: "InKatakana_Phonetic_Extensions",
                            bmp: "ㇰ-ㇿ"
                        }, {
                            name: "InKayah_Li",
                            bmp: "꤀-꤯"
                        }, {
                            name: "InKharoshthi",
                            astral: "\ud802[\ude00-\ude5f]"
                        }, {
                            name: "InKhmer",
                            bmp: "ក-៿"
                        }, {
                            name: "InKhmer_Symbols",
                            bmp: "᧠-᧿"
                        }, {
                            name: "InKhojki",
                            astral: "\ud804[\ude00-\ude4f]"
                        }, {
                            name: "InKhudawadi",
                            astral: "\ud804[\udeb0-\udeff]"
                        }, {
                            name: "InLao",
                            bmp: "຀-໿"
                        }, {
                            name: "InLatin_Extended_Additional",
                            bmp: "Ḁ-ỿ"
                        }, {
                            name: "InLatin_Extended_A",
                            bmp: "Ā-ſ"
                        }, {
                            name: "InLatin_Extended_B",
                            bmp: "ƀ-ɏ"
                        }, {
                            name: "InLatin_Extended_C",
                            bmp: "Ⱡ-Ɀ"
                        }, {
                            name: "InLatin_Extended_D",
                            bmp: "꜠-ꟿ"
                        }, {
                            name: "InLatin_Extended_E",
                            bmp: "ꬰ-꭯"
                        }, {
                            name: "InLatin_1_Supplement",
                            bmp: "-ÿ"
                        }, {
                            name: "InLepcha",
                            bmp: "ᰀ-ᱏ"
                        }, {
                            name: "InLetterlike_Symbols",
                            bmp: "℀-⅏"
                        }, {
                            name: "InLimbu",
                            bmp: "ᤀ-᥏"
                        }, {
                            name: "InLinear_A",
                            astral: "\ud801[\ude00-\udf7f]"
                        }, {
                            name: "InLinear_B_Ideograms",
                            astral: "\ud800[\udc80-\udcff]"
                        }, {
                            name: "InLinear_B_Syllabary",
                            astral: "\ud800[\udc00-\udc7f]"
                        }, {
                            name: "InLisu",
                            bmp: "ꓐ-꓿"
                        }, {
                            name: "InLow_Surrogates",
                            bmp: "\udc00-\udfff"
                        }, {
                            name: "InLycian",
                            astral: "\ud800[\ude80-\ude9f]"
                        }, {
                            name: "InLydian",
                            astral: "\ud802[\udd20-\udd3f]"
                        }, {
                            name: "InMahajani",
                            astral: "\ud804[\udd50-\udd7f]"
                        }, {
                            name: "InMahjong_Tiles",
                            astral: "\ud83c[\udc00-\udc2f]"
                        }, {
                            name: "InMalayalam",
                            bmp: "ഀ-ൿ"
                        }, {
                            name: "InMandaic",
                            bmp: "ࡀ-࡟"
                        }, {
                            name: "InManichaean",
                            astral: "\ud802[\udec0-\udeff]"
                        }, {
                            name: "InMarchen",
                            astral: "\ud807[\udc70-\udcbf]"
                        }, {
                            name: "InMathematical_Alphanumeric_Symbols",
                            astral: "\ud835[\udc00-\udfff]"
                        }, {
                            name: "InMathematical_Operators",
                            bmp: "∀-⋿"
                        }, {
                            name: "InMeetei_Mayek",
                            bmp: "ꯀ-꯿"
                        }, {
                            name: "InMeetei_Mayek_Extensions",
                            bmp: "ꫠ-꫿"
                        }, {
                            name: "InMende_Kikakui",
                            astral: "\ud83a[\udc00-\udcdf]"
                        }, {
                            name: "InMeroitic_Cursive",
                            astral: "\ud802[\udda0-\uddff]"
                        }, {
                            name: "InMeroitic_Hieroglyphs",
                            astral: "\ud802[\udd80-\udd9f]"
                        }, {
                            name: "InMiao",
                            astral: "\ud81b[\udf00-\udf9f]"
                        }, {
                            name: "InMiscellaneous_Mathematical_Symbols_A",
                            bmp: "⟀-⟯"
                        }, {
                            name: "InMiscellaneous_Mathematical_Symbols_B",
                            bmp: "⦀-⧿"
                        }, {
                            name: "InMiscellaneous_Symbols",
                            bmp: "☀-⛿"
                        }, {
                            name: "InMiscellaneous_Symbols_and_Arrows",
                            bmp: "⬀-⯿"
                        }, {
                            name: "InMiscellaneous_Symbols_and_Pictographs",
                            astral: "\ud83c[\udf00-\udfff]|\ud83d[\udc00-\uddff]"
                        }, {
                            name: "InMiscellaneous_Technical",
                            bmp: "⌀-⏿"
                        }, {
                            name: "InModi",
                            astral: "\ud805[\ude00-\ude5f]"
                        }, {
                            name: "InModifier_Tone_Letters",
                            bmp: "꜀-ꜟ"
                        }, {
                            name: "InMongolian",
                            bmp: "᠀-᢯"
                        }, {
                            name: "InMongolian_Supplement",
                            astral: "\ud805[\ude60-\ude7f]"
                        }, {
                            name: "InMro",
                            astral: "\ud81a[\ude40-\ude6f]"
                        }, {
                            name: "InMultani",
                            astral: "\ud804[\ude80-\udeaf]"
                        }, {
                            name: "InMusical_Symbols",
                            astral: "\ud834[\udd00-\uddff]"
                        }, {
                            name: "InMyanmar",
                            bmp: "က-႟"
                        }, {
                            name: "InMyanmar_Extended_A",
                            bmp: "ꩠ-ꩿ"
                        }, {
                            name: "InMyanmar_Extended_B",
                            bmp: "ꧠ-꧿"
                        }, {
                            name: "InNKo",
                            bmp: "߀-߿"
                        }, {
                            name: "InNabataean",
                            astral: "\ud802[\udc80-\udcaf]"
                        }, {
                            name: "InNew_Tai_Lue",
                            bmp: "ᦀ-᧟"
                        }, {
                            name: "InNewa",
                            astral: "\ud805[\udc00-\udc7f]"
                        }, {
                            name: "InNumber_Forms",
                            bmp: "⅐-↏"
                        }, {
                            name: "InOgham",
                            bmp: " -᚟"
                        }, {
                            name: "InOl_Chiki",
                            bmp: "᱐-᱿"
                        }, {
                            name: "InOld_Hungarian",
                            astral: "\ud803[\udc80-\udcff]"
                        }, {
                            name: "InOld_Italic",
                            astral: "\ud800[\udf00-\udf2f]"
                        }, {
                            name: "InOld_North_Arabian",
                            astral: "\ud802[\ude80-\ude9f]"
                        }, {
                            name: "InOld_Permic",
                            astral: "\ud800[\udf50-\udf7f]"
                        }, {
                            name: "InOld_Persian",
                            astral: "\ud800[\udfa0-\udfdf]"
                        }, {
                            name: "InOld_South_Arabian",
                            astral: "\ud802[\ude60-\ude7f]"
                        }, {
                            name: "InOld_Turkic",
                            astral: "\ud803[\udc00-\udc4f]"
                        }, {
                            name: "InOptical_Character_Recognition",
                            bmp: "⑀-⑟"
                        }, {
                            name: "InOriya",
                            bmp: "଀-୿"
                        }, {
                            name: "InOrnamental_Dingbats",
                            astral: "\ud83d[\ude50-\ude7f]"
                        }, {
                            name: "InOsage",
                            astral: "\ud801[\udcb0-\udcff]"
                        }, {
                            name: "InOsmanya",
                            astral: "\ud801[\udc80-\udcaf]"
                        }, {
                            name: "InPahawh_Hmong",
                            astral: "\ud81a[\udf00-\udf8f]"
                        }, {
                            name: "InPalmyrene",
                            astral: "\ud802[\udc60-\udc7f]"
                        }, {
                            name: "InPau_Cin_Hau",
                            astral: "\ud806[\udec0-\udeff]"
                        }, {
                            name: "InPhags_pa",
                            bmp: "ꡀ-꡿"
                        }, {
                            name: "InPhaistos_Disc",
                            astral: "\ud800[\uddd0-\uddff]"
                        }, {
                            name: "InPhoenician",
                            astral: "\ud802[\udd00-\udd1f]"
                        }, {
                            name: "InPhonetic_Extensions",
                            bmp: "ᴀ-ᵿ"
                        }, {
                            name: "InPhonetic_Extensions_Supplement",
                            bmp: "ᶀ-ᶿ"
                        }, {
                            name: "InPlaying_Cards",
                            astral: "\ud83c[\udca0-\udcff]"
                        }, {
                            name: "InPrivate_Use_Area",
                            bmp: "-"
                        }, {
                            name: "InPsalter_Pahlavi",
                            astral: "\ud802[\udf80-\udfaf]"
                        }, {
                            name: "InRejang",
                            bmp: "ꤰ-꥟"
                        }, {
                            name: "InRumi_Numeral_Symbols",
                            astral: "\ud803[\ude60-\ude7f]"
                        }, {
                            name: "InRunic",
                            bmp: "ᚠ-᛿"
                        }, {
                            name: "InSamaritan",
                            bmp: "ࠀ-࠿"
                        }, {
                            name: "InSaurashtra",
                            bmp: "ꢀ-꣟"
                        }, {
                            name: "InSharada",
                            astral: "\ud804[\udd80-\udddf]"
                        }, {
                            name: "InShavian",
                            astral: "\ud801[\udc50-\udc7f]"
                        }, {
                            name: "InShorthand_Format_Controls",
                            astral: "\ud82f[\udca0-\udcaf]"
                        }, {
                            name: "InSiddham",
                            astral: "\ud805[\udd80-\uddff]"
                        }, {
                            name: "InSinhala",
                            bmp: "඀-෿"
                        }, {
                            name: "InSinhala_Archaic_Numbers",
                            astral: "\ud804[\udde0-\uddff]"
                        }, {
                            name: "InSmall_Form_Variants",
                            bmp: "﹐-﹯"
                        }, {
                            name: "InSora_Sompeng",
                            astral: "\ud804[\udcd0-\udcff]"
                        }, {
                            name: "InSpacing_Modifier_Letters",
                            bmp: "ʰ-˿"
                        }, {
                            name: "InSpecials",
                            bmp: "￰-￿"
                        }, {
                            name: "InSundanese",
                            bmp: "ᮀ-ᮿ"
                        }, {
                            name: "InSundanese_Supplement",
                            bmp: "᳀-᳏"
                        }, {
                            name: "InSuperscripts_and_Subscripts",
                            bmp: "⁰-₟"
                        }, {
                            name: "InSupplemental_Arrows_A",
                            bmp: "⟰-⟿"
                        }, {
                            name: "InSupplemental_Arrows_B",
                            bmp: "⤀-⥿"
                        }, {
                            name: "InSupplemental_Arrows_C",
                            astral: "\ud83e[\udc00-\udcff]"
                        }, {
                            name: "InSupplemental_Mathematical_Operators",
                            bmp: "⨀-⫿"
                        }, {
                            name: "InSupplemental_Punctuation",
                            bmp: "⸀-⹿"
                        }, {
                            name: "InSupplemental_Symbols_and_Pictographs",
                            astral: "\ud83e[\udd00-\uddff]"
                        }, {
                            name: "InSupplementary_Private_Use_Area_A",
                            astral: "[\udb80-\udbbf][\udc00-\udfff]"
                        }, {
                            name: "InSupplementary_Private_Use_Area_B",
                            astral: "[\udbc0-\udbff][\udc00-\udfff]"
                        }, {
                            name: "InSutton_SignWriting",
                            astral: "\ud836[\udc00-\udeaf]"
                        }, {
                            name: "InSyloti_Nagri",
                            bmp: "ꠀ-꠯"
                        }, {
                            name: "InSyriac",
                            bmp: "܀-ݏ"
                        }, {
                            name: "InTagalog",
                            bmp: "ᜀ-ᜟ"
                        }, {
                            name: "InTagbanwa",
                            bmp: "ᝠ-᝿"
                        }, {
                            name: "InTags",
                            astral: "\udb40[\udc00-\udc7f]"
                        }, {
                            name: "InTai_Le",
                            bmp: "ᥐ-᥿"
                        }, {
                            name: "InTai_Tham",
                            bmp: "ᨠ-᪯"
                        }, {
                            name: "InTai_Viet",
                            bmp: "ꪀ-꫟"
                        }, {
                            name: "InTai_Xuan_Jing_Symbols",
                            astral: "\ud834[\udf00-\udf5f]"
                        }, {
                            name: "InTakri",
                            astral: "\ud805[\ude80-\udecf]"
                        }, {
                            name: "InTamil",
                            bmp: "஀-௿"
                        }, {
                            name: "InTangut",
                            astral: "[\ud81c-\ud821][\udc00-\udfff]"
                        }, {
                            name: "InTangut_Components",
                            astral: "\ud822[\udc00-\udeff]"
                        }, {
                            name: "InTelugu",
                            bmp: "ఀ-౿"
                        }, {
                            name: "InThaana",
                            bmp: "ހ-޿"
                        }, {
                            name: "InThai",
                            bmp: "฀-๿"
                        }, {
                            name: "InTibetan",
                            bmp: "ༀ-࿿"
                        }, {
                            name: "InTifinagh",
                            bmp: "ⴰ-⵿"
                        }, {
                            name: "InTirhuta",
                            astral: "\ud805[\udc80-\udcdf]"
                        }, {
                            name: "InTransport_and_Map_Symbols",
                            astral: "\ud83d[\ude80-\udeff]"
                        }, {
                            name: "InUgaritic",
                            astral: "\ud800[\udf80-\udf9f]"
                        }, {
                            name: "InUnified_Canadian_Aboriginal_Syllabics",
                            bmp: "᐀-ᙿ"
                        }, {
                            name: "InUnified_Canadian_Aboriginal_Syllabics_Extended",
                            bmp: "ᢰ-᣿"
                        }, {
                            name: "InVai",
                            bmp: "ꔀ-꘿"
                        }, {
                            name: "InVariation_Selectors",
                            bmp: "︀-️"
                        }, {
                            name: "InVariation_Selectors_Supplement",
                            astral: "\udb40[\udd00-\uddef]"
                        }, {
                            name: "InVedic_Extensions",
                            bmp: "᳐-᳿"
                        }, {
                            name: "InVertical_Forms",
                            bmp: "︐-︟"
                        }, {
                            name: "InWarang_Citi",
                            astral: "\ud806[\udca0-\udcff]"
                        }, {
                            name: "InYi_Radicals",
                            bmp: "꒐-꓏"
                        }, {
                            name: "InYi_Syllables",
                            bmp: "ꀀ-꒏"
                        }, {
                            name: "InYijing_Hexagram_Symbols",
                            bmp: "䷀-䷿"
                        }])
                    }
                }, {}],
                5: [function(e, t, n) {
                    t.exports = function(e) {
                        "use strict";
                        if (!e.addUnicodeData) throw new ReferenceError("Unicode Base must be loaded before Unicode Categories");
                        e.addUnicodeData([{
                            name: "C",
                            alias: "Other",
                            isBmpLast: !0,
                            bmp: "\0--­͸͹΀-΃΋΍΢԰՗՘ՠֈ֋֌֐׈-׏׫-ׯ׵-؅؜؝۝܎܏݋݌޲-޿߻-߿࠮࠯࠿࡜࡝࡟-࢟ࢵࢾ-࣓࣢঄঍঎঑঒঩঱঳-঵঺঻৅৆৉৊৏-৖৘-৛৞৤৥ৼ-਀਄਋-਎਑਒਩਱਴਷਺਻਽੃-੆੉੊੎-੐੒-੘੝੟-੥੶-઀઄઎઒઩઱઴઺઻૆૊૎૏૑-૟૤૥૲-૸ૺ-଀଄଍଎଑଒଩଱଴଺଻୅୆୉୊୎-୕୘-୛୞୤୥୸-஁஄஋-஍஑஖-஘஛஝஠-஢஥-஧஫-஭஺-஽௃-௅௉௎௏௑-௖௘-௥௻-௿ఄ఍఑఩఺-఼౅౉౎-౔౗౛-౟౤౥౰-౷಄಍಑಩಴಺಻೅೉೎-೔೗-ೝ೟೤೥೰ೳ-ഀഄ഍഑഻഼൅൉൐-൓൤൥඀ඁ඄඗-඙඲඼඾඿෇-෉෋-෎෕෗෠-෥෰෱෵-฀฻-฾๜-຀຃຅ຆຉ຋ຌຎ-ຓຘຠ຤຦ຨຩຬ຺຾຿໅໇໎໏໚໛໠-໿཈཭-཰྘྽࿍࿛-࿿჆჈-჌჎჏቉቎቏቗቙቞቟኉኎኏኱኶኷኿዁዆዇዗጑጖጗፛፜፽-፿᎚-᎟᏶᏷᏾᏿᚝-᚟᛹-᛿ᜍ᜕-ᜟ᜷-᜿᝔-᝟᝭᝱᝴-᝿៞៟៪-៯៺-៿᠎᠏᠚-᠟ᡸ-᡿᢫-᢯᣶-᣿᤟᤬-᤯᤼-᤿᥁-᥃᥮᥯᥵-᥿᦬-᦯᧊-᧏᧛-᧝᨜᨝᩟᩽᩾᪊-᪏᪚-᪟᪮᪯ᪿ-᫿ᭌ-᭏᭽-᭿᯴-᯻᰸-᰺᱊-᱌Ᲊ-Ჿ᳈-᳏᳷ᳺ-᳿᷶-᷺἖἗἞἟὆὇὎὏὘὚὜὞὾὿᾵῅῔῕῜῰῱῵῿​-‏‪-‮⁠-⁯⁲⁳₏₝-₟₿-⃏⃱-⃿↌-↏⏿␧-␿⑋-⑟⭴⭵⮖⮗⮺-⮼⯉⯒-⯫⯰-⯿Ⱟⱟ⳴-⳸⴦⴨-⴬⴮⴯⵨-⵮⵱-⵾⶗-⶟⶧⶯⶷⶿⷇⷏⷗⷟⹅-⹿⺚⻴-⻿⿖-⿯⿼-⿿぀゗゘㄀-㄄ㄮ-㄰㆏ㆻ-ㆿ㇤-㇯㈟㋿䶶-䶿鿖-鿿꒍-꒏꓇-꓏꘬-꘿꛸-꛿ꞯꞸ-ꟶ꠬-꠯꠺-꠿꡸-꡿꣆-꣍꣚-꣟ꣾꣿ꥔-꥞꥽-꥿꧎꧚-꧝꧿꨷-꨿꩎꩏꩚꩛꫃-꫚꫷-꬀꬇꬈꬏꬐꬗-꬟꬧꬯ꭦ-꭯꯮꯯꯺-꯿힤-힯퟇-퟊퟼-﩮﩯﫚-﫿﬇-﬒﬘-﬜﬷﬽﬿﭂﭅﯂-﯒﵀-﵏﶐﶑﷈-﷯﷾﷿︚-︟﹓﹧﹬-﹯﹵﻽-＀﾿-￁￈￉￐￑￘￙￝-￟￧￯-￻￾￿",
                            astral: "\ud800[\udc0c\udc27\udc3b\udc3e\udc4e\udc4f\udc5e-\udc7f\udcfb-\udcff\udd03-\udd06\udd34-\udd36\udd8f\udd9c-\udd9f\udda1-\uddcf\uddfe-\ude7f\ude9d-\ude9f\uded1-\udedf\udefc-\udeff\udf24-\udf2f\udf4b-\udf4f\udf7b-\udf7f\udf9e\udfc4-\udfc7\udfd6-\udfff]|\ud801[\udc9e\udc9f\udcaa-\udcaf\udcd4-\udcd7\udcfc-\udcff\udd28-\udd2f\udd64-\udd6e\udd70-\uddff\udf37-\udf3f\udf56-\udf5f\udf68-\udfff]|\ud802[\udc06\udc07\udc09\udc36\udc39-\udc3b\udc3d\udc3e\udc56\udc9f-\udca6\udcb0-\udcdf\udcf3\udcf6-\udcfa\udd1c-\udd1e\udd3a-\udd3e\udd40-\udd7f\uddb8-\uddbb\uddd0\uddd1\ude04\ude07-\ude0b\ude14\ude18\ude34-\ude37\ude3b-\ude3e\ude48-\ude4f\ude59-\ude5f\udea0-\udebf\udee7-\udeea\udef7-\udeff\udf36-\udf38\udf56\udf57\udf73-\udf77\udf92-\udf98\udf9d-\udfa8\udfb0-\udfff]|\ud803[\udc49-\udc7f\udcb3-\udcbf\udcf3-\udcf9\udd00-\ude5f\ude7f-\udfff]|\ud804[\udc4e-\udc51\udc70-\udc7e\udcbd\udcc2-\udccf\udce9-\udcef\udcfa-\udcff\udd35\udd44-\udd4f\udd77-\udd7f\uddce\uddcf\udde0\uddf5-\uddff\ude12\ude3f-\ude7f\ude87\ude89\ude8e\ude9e\udeaa-\udeaf\udeeb-\udeef\udefa-\udeff\udf04\udf0d\udf0e\udf11\udf12\udf29\udf31\udf34\udf3a\udf3b\udf45\udf46\udf49\udf4a\udf4e\udf4f\udf51-\udf56\udf58-\udf5c\udf64\udf65\udf6d-\udf6f\udf75-\udfff]|\ud805[\udc5a\udc5c\udc5e-\udc7f\udcc8-\udccf\udcda-\udd7f\uddb6\uddb7\uddde-\uddff\ude45-\ude4f\ude5a-\ude5f\ude6d-\ude7f\udeb8-\udebf\udeca-\udeff\udf1a-\udf1c\udf2c-\udf2f\udf40-\udfff]|\ud806[\udc00-\udc9f\udcf3-\udcfe\udd00-\udebf\udef9-\udfff]|\ud807[\udc09\udc37\udc46-\udc4f\udc6d-\udc6f\udc90\udc91\udca8\udcb7-\udfff]|\ud808[\udf9a-\udfff]|\ud809[\udc6f\udc75-\udc7f\udd44-\udfff]|[\ud80a\ud80b\ud80e-\ud810\ud812-\ud819\ud823-\ud82b\ud82d\ud82e\ud830-\ud833\ud837\ud839\ud83f\ud874-\ud87d\ud87f-\udb3f\udb41-\udbff][\udc00-\udfff]|\ud80d[\udc2f-\udfff]|\ud811[\ude47-\udfff]|\ud81a[\ude39-\ude3f\ude5f\ude6a-\ude6d\ude70-\udecf\udeee\udeef\udef6-\udeff\udf46-\udf4f\udf5a\udf62\udf78-\udf7c\udf90-\udfff]|\ud81b[\udc00-\udeff\udf45-\udf4f\udf7f-\udf8e\udfa0-\udfdf\udfe1-\udfff]|\ud821[\udfed-\udfff]|\ud822[\udef3-\udfff]|\ud82c[\udc02-\udfff]|\ud82f[\udc6b-\udc6f\udc7d-\udc7f\udc89-\udc8f\udc9a\udc9b\udca0-\udfff]|\ud834[\udcf6-\udcff\udd27\udd28\udd73-\udd7a\udde9-\uddff\ude46-\udeff\udf57-\udf5f\udf72-\udfff]|\ud835[\udc55\udc9d\udca0\udca1\udca3\udca4\udca7\udca8\udcad\udcba\udcbc\udcc4\udd06\udd0b\udd0c\udd15\udd1d\udd3a\udd3f\udd45\udd47-\udd49\udd51\udea6\udea7\udfcc\udfcd]|\ud836[\ude8c-\ude9a\udea0\udeb0-\udfff]|\ud838[\udc07\udc19\udc1a\udc22\udc25\udc2b-\udfff]|\ud83a[\udcc5\udcc6\udcd7-\udcff\udd4b-\udd4f\udd5a-\udd5d\udd60-\udfff]|\ud83b[\udc00-\uddff\ude04\ude20\ude23\ude25\ude26\ude28\ude33\ude38\ude3a\ude3c-\ude41\ude43-\ude46\ude48\ude4a\ude4c\ude50\ude53\ude55\ude56\ude58\ude5a\ude5c\ude5e\ude60\ude63\ude65\ude66\ude6b\ude73\ude78\ude7d\ude7f\ude8a\ude9c-\udea0\udea4\udeaa\udebc-\udeef\udef2-\udfff]|\ud83c[\udc2c-\udc2f\udc94-\udc9f\udcaf\udcb0\udcc0\udcd0\udcf6-\udcff\udd0d-\udd0f\udd2f\udd6c-\udd6f\uddad-\udde5\ude03-\ude0f\ude3c-\ude3f\ude49-\ude4f\ude52-\udeff]|\ud83d[\uded3-\udedf\udeed-\udeef\udef7-\udeff\udf74-\udf7f\udfd5-\udfff]|\ud83e[\udc0c-\udc0f\udc48-\udc4f\udc5a-\udc5f\udc88-\udc8f\udcae-\udd0f\udd1f\udd28-\udd2f\udd31\udd32\udd3f\udd4c-\udd4f\udd5f-\udd7f\udd92-\uddbf\uddc1-\udfff]|\ud869[\uded7-\udeff]|\ud86d[\udf35-\udf3f]|\ud86e[\udc1e\udc1f]|\ud873[\udea2-\udfff]|\ud87e[\ude1e-\udfff]|\udb40[\udc00-\udcff\uddf0-\udfff]"
                        }, {
                            name: "Cc",
                            alias: "Control",
                            bmp: "\0--"
                        }, {
                            name: "Cf",
                            alias: "Format",
                            bmp: "­؀-؅؜۝܏࣢᠎​-‏‪-‮⁠-⁤⁦-⁯\ufeff￹-￻",
                            astral: "𑂽|\ud82f[\udca0-\udca3]|\ud834[\udd73-\udd7a]|\udb40[\udc01\udc20-\udc7f]"
                        }, {
                            name: "Cn",
                            alias: "Unassigned",
                            bmp: "͸͹΀-΃΋΍΢԰՗՘ՠֈ֋֌֐׈-׏׫-ׯ׵-׿؝܎݋݌޲-޿߻-߿࠮࠯࠿࡜࡝࡟-࢟ࢵࢾ-࣓঄঍঎঑঒঩঱঳-঵঺঻৅৆৉৊৏-৖৘-৛৞৤৥ৼ-਀਄਋-਎਑਒਩਱਴਷਺਻਽੃-੆੉੊੎-੐੒-੘੝੟-੥੶-઀઄઎઒઩઱઴઺઻૆૊૎૏૑-૟૤૥૲-૸ૺ-଀଄଍଎଑଒଩଱଴଺଻୅୆୉୊୎-୕୘-୛୞୤୥୸-஁஄஋-஍஑஖-஘஛஝஠-஢஥-஧஫-஭஺-஽௃-௅௉௎௏௑-௖௘-௥௻-௿ఄ఍఑఩఺-఼౅౉౎-౔౗౛-౟౤౥౰-౷಄಍಑಩಴಺಻೅೉೎-೔೗-ೝ೟೤೥೰ೳ-ഀഄ഍഑഻഼൅൉൐-൓൤൥඀ඁ඄඗-඙඲඼඾඿෇-෉෋-෎෕෗෠-෥෰෱෵-฀฻-฾๜-຀຃຅ຆຉ຋ຌຎ-ຓຘຠ຤຦ຨຩຬ຺຾຿໅໇໎໏໚໛໠-໿཈཭-཰྘྽࿍࿛-࿿჆჈-჌჎჏቉቎቏቗቙቞቟኉኎኏኱኶኷኿዁዆዇዗጑጖጗፛፜፽-፿᎚-᎟᏶᏷᏾᏿᚝-᚟᛹-᛿ᜍ᜕-ᜟ᜷-᜿᝔-᝟᝭᝱᝴-᝿៞៟៪-៯៺-៿᠏᠚-᠟ᡸ-᡿᢫-᢯᣶-᣿᤟᤬-᤯᤼-᤿᥁-᥃᥮᥯᥵-᥿᦬-᦯᧊-᧏᧛-᧝᨜᨝᩟᩽᩾᪊-᪏᪚-᪟᪮᪯ᪿ-᫿ᭌ-᭏᭽-᭿᯴-᯻᰸-᰺᱊-᱌Ᲊ-Ჿ᳈-᳏᳷ᳺ-᳿᷶-᷺἖἗἞἟὆὇὎὏὘὚὜὞὾὿᾵῅῔῕῜῰῱῵῿⁥⁲⁳₏₝-₟₿-⃏⃱-⃿↌-↏⏿␧-␿⑋-⑟⭴⭵⮖⮗⮺-⮼⯉⯒-⯫⯰-⯿Ⱟⱟ⳴-⳸⴦⴨-⴬⴮⴯⵨-⵮⵱-⵾⶗-⶟⶧⶯⶷⶿⷇⷏⷗⷟⹅-⹿⺚⻴-⻿⿖-⿯⿼-⿿぀゗゘㄀-㄄ㄮ-㄰㆏ㆻ-ㆿ㇤-㇯㈟㋿䶶-䶿鿖-鿿꒍-꒏꓇-꓏꘬-꘿꛸-꛿ꞯꞸ-ꟶ꠬-꠯꠺-꠿꡸-꡿꣆-꣍꣚-꣟ꣾꣿ꥔-꥞꥽-꥿꧎꧚-꧝꧿꨷-꨿꩎꩏꩚꩛꫃-꫚꫷-꬀꬇꬈꬏꬐꬗-꬟꬧꬯ꭦ-꭯꯮꯯꯺-꯿힤-힯퟇-퟊퟼-퟿﩮﩯﫚-﫿﬇-﬒﬘-﬜﬷﬽﬿﭂﭅﯂-﯒﵀-﵏﶐﶑﷈-﷯﷾﷿︚-︟﹓﹧﹬-﹯﹵﻽﻾＀﾿-￁￈￉￐￑￘￙￝-￟￧￯-￸￾￿",
                            astral: "\ud800[\udc0c\udc27\udc3b\udc3e\udc4e\udc4f\udc5e-\udc7f\udcfb-\udcff\udd03-\udd06\udd34-\udd36\udd8f\udd9c-\udd9f\udda1-\uddcf\uddfe-\ude7f\ude9d-\ude9f\uded1-\udedf\udefc-\udeff\udf24-\udf2f\udf4b-\udf4f\udf7b-\udf7f\udf9e\udfc4-\udfc7\udfd6-\udfff]|\ud801[\udc9e\udc9f\udcaa-\udcaf\udcd4-\udcd7\udcfc-\udcff\udd28-\udd2f\udd64-\udd6e\udd70-\uddff\udf37-\udf3f\udf56-\udf5f\udf68-\udfff]|\ud802[\udc06\udc07\udc09\udc36\udc39-\udc3b\udc3d\udc3e\udc56\udc9f-\udca6\udcb0-\udcdf\udcf3\udcf6-\udcfa\udd1c-\udd1e\udd3a-\udd3e\udd40-\udd7f\uddb8-\uddbb\uddd0\uddd1\ude04\ude07-\ude0b\ude14\ude18\ude34-\ude37\ude3b-\ude3e\ude48-\ude4f\ude59-\ude5f\udea0-\udebf\udee7-\udeea\udef7-\udeff\udf36-\udf38\udf56\udf57\udf73-\udf77\udf92-\udf98\udf9d-\udfa8\udfb0-\udfff]|\ud803[\udc49-\udc7f\udcb3-\udcbf\udcf3-\udcf9\udd00-\ude5f\ude7f-\udfff]|\ud804[\udc4e-\udc51\udc70-\udc7e\udcc2-\udccf\udce9-\udcef\udcfa-\udcff\udd35\udd44-\udd4f\udd77-\udd7f\uddce\uddcf\udde0\uddf5-\uddff\ude12\ude3f-\ude7f\ude87\ude89\ude8e\ude9e\udeaa-\udeaf\udeeb-\udeef\udefa-\udeff\udf04\udf0d\udf0e\udf11\udf12\udf29\udf31\udf34\udf3a\udf3b\udf45\udf46\udf49\udf4a\udf4e\udf4f\udf51-\udf56\udf58-\udf5c\udf64\udf65\udf6d-\udf6f\udf75-\udfff]|\ud805[\udc5a\udc5c\udc5e-\udc7f\udcc8-\udccf\udcda-\udd7f\uddb6\uddb7\uddde-\uddff\ude45-\ude4f\ude5a-\ude5f\ude6d-\ude7f\udeb8-\udebf\udeca-\udeff\udf1a-\udf1c\udf2c-\udf2f\udf40-\udfff]|\ud806[\udc00-\udc9f\udcf3-\udcfe\udd00-\udebf\udef9-\udfff]|\ud807[\udc09\udc37\udc46-\udc4f\udc6d-\udc6f\udc90\udc91\udca8\udcb7-\udfff]|\ud808[\udf9a-\udfff]|\ud809[\udc6f\udc75-\udc7f\udd44-\udfff]|[\ud80a\ud80b\ud80e-\ud810\ud812-\ud819\ud823-\ud82b\ud82d\ud82e\ud830-\ud833\ud837\ud839\ud83f\ud874-\ud87d\ud87f-\udb3f\udb41-\udb7f][\udc00-\udfff]|\ud80d[\udc2f-\udfff]|\ud811[\ude47-\udfff]|\ud81a[\ude39-\ude3f\ude5f\ude6a-\ude6d\ude70-\udecf\udeee\udeef\udef6-\udeff\udf46-\udf4f\udf5a\udf62\udf78-\udf7c\udf90-\udfff]|\ud81b[\udc00-\udeff\udf45-\udf4f\udf7f-\udf8e\udfa0-\udfdf\udfe1-\udfff]|\ud821[\udfed-\udfff]|\ud822[\udef3-\udfff]|\ud82c[\udc02-\udfff]|\ud82f[\udc6b-\udc6f\udc7d-\udc7f\udc89-\udc8f\udc9a\udc9b\udca4-\udfff]|\ud834[\udcf6-\udcff\udd27\udd28\udde9-\uddff\ude46-\udeff\udf57-\udf5f\udf72-\udfff]|\ud835[\udc55\udc9d\udca0\udca1\udca3\udca4\udca7\udca8\udcad\udcba\udcbc\udcc4\udd06\udd0b\udd0c\udd15\udd1d\udd3a\udd3f\udd45\udd47-\udd49\udd51\udea6\udea7\udfcc\udfcd]|\ud836[\ude8c-\ude9a\udea0\udeb0-\udfff]|\ud838[\udc07\udc19\udc1a\udc22\udc25\udc2b-\udfff]|\ud83a[\udcc5\udcc6\udcd7-\udcff\udd4b-\udd4f\udd5a-\udd5d\udd60-\udfff]|\ud83b[\udc00-\uddff\ude04\ude20\ude23\ude25\ude26\ude28\ude33\ude38\ude3a\ude3c-\ude41\ude43-\ude46\ude48\ude4a\ude4c\ude50\ude53\ude55\ude56\ude58\ude5a\ude5c\ude5e\ude60\ude63\ude65\ude66\ude6b\ude73\ude78\ude7d\ude7f\ude8a\ude9c-\udea0\udea4\udeaa\udebc-\udeef\udef2-\udfff]|\ud83c[\udc2c-\udc2f\udc94-\udc9f\udcaf\udcb0\udcc0\udcd0\udcf6-\udcff\udd0d-\udd0f\udd2f\udd6c-\udd6f\uddad-\udde5\ude03-\ude0f\ude3c-\ude3f\ude49-\ude4f\ude52-\udeff]|\ud83d[\uded3-\udedf\udeed-\udeef\udef7-\udeff\udf74-\udf7f\udfd5-\udfff]|\ud83e[\udc0c-\udc0f\udc48-\udc4f\udc5a-\udc5f\udc88-\udc8f\udcae-\udd0f\udd1f\udd28-\udd2f\udd31\udd32\udd3f\udd4c-\udd4f\udd5f-\udd7f\udd92-\uddbf\uddc1-\udfff]|\ud869[\uded7-\udeff]|\ud86d[\udf35-\udf3f]|\ud86e[\udc1e\udc1f]|\ud873[\udea2-\udfff]|\ud87e[\ude1e-\udfff]|\udb40[\udc00\udc02-\udc1f\udc80-\udcff\uddf0-\udfff]|[\udbbf\udbff][\udffe\udfff]"
                        }, {
                            name: "Co",
                            alias: "Private_Use",
                            bmp: "-",
                            astral: "[\udb80-\udbbe\udbc0-\udbfe][\udc00-\udfff]|[\udbbf\udbff][\udc00-\udffd]"
                        }, {
                            name: "Cs",
                            alias: "Surrogate",
                            bmp: "\ud800-\udfff"
                        }, {
                            name: "L",
                            alias: "Letter",
                            bmp: "A-Za-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛱ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢄᢇ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎↃↄⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々〆〱-〵〻〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿕ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛥꜗ-ꜟꜢ-ꞈꞋ-ꞮꞰ-ꞷꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",
                            astral: "\ud800[\udc00-\udc0b\udc0d-\udc26\udc28-\udc3a\udc3c\udc3d\udc3f-\udc4d\udc50-\udc5d\udc80-\udcfa\ude80-\ude9c\udea0-\uded0\udf00-\udf1f\udf30-\udf40\udf42-\udf49\udf50-\udf75\udf80-\udf9d\udfa0-\udfc3\udfc8-\udfcf]|\ud801[\udc00-\udc9d\udcb0-\udcd3\udcd8-\udcfb\udd00-\udd27\udd30-\udd63\ude00-\udf36\udf40-\udf55\udf60-\udf67]|\ud802[\udc00-\udc05\udc08\udc0a-\udc35\udc37\udc38\udc3c\udc3f-\udc55\udc60-\udc76\udc80-\udc9e\udce0-\udcf2\udcf4\udcf5\udd00-\udd15\udd20-\udd39\udd80-\uddb7\uddbe\uddbf\ude00\ude10-\ude13\ude15-\ude17\ude19-\ude33\ude60-\ude7c\ude80-\ude9c\udec0-\udec7\udec9-\udee4\udf00-\udf35\udf40-\udf55\udf60-\udf72\udf80-\udf91]|\ud803[\udc00-\udc48\udc80-\udcb2\udcc0-\udcf2]|\ud804[\udc03-\udc37\udc83-\udcaf\udcd0-\udce8\udd03-\udd26\udd50-\udd72\udd76\udd83-\uddb2\uddc1-\uddc4\uddda\udddc\ude00-\ude11\ude13-\ude2b\ude80-\ude86\ude88\ude8a-\ude8d\ude8f-\ude9d\ude9f-\udea8\udeb0-\udede\udf05-\udf0c\udf0f\udf10\udf13-\udf28\udf2a-\udf30\udf32\udf33\udf35-\udf39\udf3d\udf50\udf5d-\udf61]|\ud805[\udc00-\udc34\udc47-\udc4a\udc80-\udcaf\udcc4\udcc5\udcc7\udd80-\uddae\uddd8-\udddb\ude00-\ude2f\ude44\ude80-\udeaa\udf00-\udf19]|\ud806[\udca0-\udcdf\udcff\udec0-\udef8]|\ud807[\udc00-\udc08\udc0a-\udc2e\udc40\udc72-\udc8f]|\ud808[\udc00-\udf99]|\ud809[\udc80-\udd43]|[\ud80c\ud81c-\ud820\ud840-\ud868\ud86a-\ud86c\ud86f-\ud872][\udc00-\udfff]|\ud80d[\udc00-\udc2e]|\ud811[\udc00-\ude46]|\ud81a[\udc00-\ude38\ude40-\ude5e\uded0-\udeed\udf00-\udf2f\udf40-\udf43\udf63-\udf77\udf7d-\udf8f]|\ud81b[\udf00-\udf44\udf50\udf93-\udf9f\udfe0]|\ud821[\udc00-\udfec]|\ud822[\udc00-\udef2]|\ud82c[\udc00\udc01]|\ud82f[\udc00-\udc6a\udc70-\udc7c\udc80-\udc88\udc90-\udc99]|\ud835[\udc00-\udc54\udc56-\udc9c\udc9e\udc9f\udca2\udca5\udca6\udca9-\udcac\udcae-\udcb9\udcbb\udcbd-\udcc3\udcc5-\udd05\udd07-\udd0a\udd0d-\udd14\udd16-\udd1c\udd1e-\udd39\udd3b-\udd3e\udd40-\udd44\udd46\udd4a-\udd50\udd52-\udea5\udea8-\udec0\udec2-\udeda\udedc-\udefa\udefc-\udf14\udf16-\udf34\udf36-\udf4e\udf50-\udf6e\udf70-\udf88\udf8a-\udfa8\udfaa-\udfc2\udfc4-\udfcb]|\ud83a[\udc00-\udcc4\udd00-\udd43]|\ud83b[\ude00-\ude03\ude05-\ude1f\ude21\ude22\ude24\ude27\ude29-\ude32\ude34-\ude37\ude39\ude3b\ude42\ude47\ude49\ude4b\ude4d-\ude4f\ude51\ude52\ude54\ude57\ude59\ude5b\ude5d\ude5f\ude61\ude62\ude64\ude67-\ude6a\ude6c-\ude72\ude74-\ude77\ude79-\ude7c\ude7e\ude80-\ude89\ude8b-\ude9b\udea1-\udea3\udea5-\udea9\udeab-\udebb]|\ud869[\udc00-\uded6\udf00-\udfff]|\ud86d[\udc00-\udf34\udf40-\udfff]|\ud86e[\udc00-\udc1d\udc20-\udfff]|\ud873[\udc00-\udea1]|\ud87e[\udc00-\ude1d]"
                        }, {
                            name: "Ll",
                            alias: "Lowercase_Letter",
                            bmp: "a-zµß-öø-ÿāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįıĳĵķĸĺļľŀłńņňŉŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷźżž-ƀƃƅƈƌƍƒƕƙ-ƛƞơƣƥƨƪƫƭưƴƶƹƺƽ-ƿǆǉǌǎǐǒǔǖǘǚǜǝǟǡǣǥǧǩǫǭǯǰǳǵǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟȡȣȥȧȩȫȭȯȱȳ-ȹȼȿɀɂɇɉɋɍɏ-ʓʕ-ʯͱͳͷͻ-ͽΐά-ώϐϑϕ-ϗϙϛϝϟϡϣϥϧϩϫϭϯ-ϳϵϸϻϼа-џѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎӏӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯա-ևᏸ-ᏽᲀ-ᲈᴀ-ᴫᵫ-ᵷᵹ-ᶚḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕ-ẝẟạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿ-ἇἐ-ἕἠ-ἧἰ-ἷὀ-ὅὐ-ὗὠ-ὧὰ-ώᾀ-ᾇᾐ-ᾗᾠ-ᾧᾰ-ᾴᾶᾷιῂ-ῄῆῇῐ-ΐῖῗῠ-ῧῲ-ῴῶῷℊℎℏℓℯℴℹℼℽⅆ-ⅉⅎↄⰰ-ⱞⱡⱥⱦⱨⱪⱬⱱⱳⱴⱶ-ⱻⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣⳤⳬⳮⳳⴀ-ⴥⴧⴭꙁꙃꙅꙇꙉꙋꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛꜣꜥꜧꜩꜫꜭꜯ-ꜱꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯꝱ-ꝸꝺꝼꝿꞁꞃꞅꞇꞌꞎꞑꞓ-ꞕꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩꞵꞷꟺꬰ-ꭚꭠ-ꭥꭰ-ꮿﬀ-ﬆﬓ-ﬗａ-ｚ",
                            astral: "\ud801[\udc28-\udc4f\udcd8-\udcfb]|\ud803[\udcc0-\udcf2]|\ud806[\udcc0-\udcdf]|\ud835[\udc1a-\udc33\udc4e-\udc54\udc56-\udc67\udc82-\udc9b\udcb6-\udcb9\udcbb\udcbd-\udcc3\udcc5-\udccf\udcea-\udd03\udd1e-\udd37\udd52-\udd6b\udd86-\udd9f\uddba-\uddd3\uddee-\ude07\ude22-\ude3b\ude56-\ude6f\ude8a-\udea5\udec2-\udeda\udedc-\udee1\udefc-\udf14\udf16-\udf1b\udf36-\udf4e\udf50-\udf55\udf70-\udf88\udf8a-\udf8f\udfaa-\udfc2\udfc4-\udfc9\udfcb]|\ud83a[\udd22-\udd43]"
                        }, {
                            name: "Lm",
                            alias: "Modifier_Letter",
                            bmp: "ʰ-ˁˆ-ˑˠ-ˤˬˮʹͺՙـۥۦߴߵߺࠚࠤࠨॱๆໆჼៗᡃᪧᱸ-ᱽᴬ-ᵪᵸᶛ-ᶿⁱⁿₐ-ₜⱼⱽⵯⸯ々〱-〵〻ゝゞー-ヾꀕꓸ-ꓽꘌꙿꚜꚝꜗ-ꜟꝰꞈꟸꟹꧏꧦꩰꫝꫳꫴꭜ-ꭟｰﾞﾟ",
                            astral: "\ud81a[\udf40-\udf43]|\ud81b[\udf93-\udf9f\udfe0]"
                        }, {
                            name: "Lo",
                            alias: "Other_Letter",
                            bmp: "ªºƻǀ-ǃʔא-תװ-ײؠ-ؿف-يٮٯٱ-ۓەۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪࠀ-ࠕࡀ-ࡘࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॲ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๅກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎა-ჺჽ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛱ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៜᠠ-ᡂᡄ-ᡷᢀ-ᢄᢇ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱷᳩ-ᳬᳮ-ᳱᳵᳶℵ-ℸⴰ-ⵧⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ〆〼ぁ-ゖゟァ-ヺヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿕ꀀ-ꀔꀖ-ꒌꓐ-ꓷꔀ-ꘋꘐ-ꘟꘪꘫꙮꚠ-ꛥꞏꟷꟻ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧠ-ꧤꧧ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩯꩱ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛꫜꫠ-ꫪꫲꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎יִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼｦ-ｯｱ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",
                            astral: "\ud800[\udc00-\udc0b\udc0d-\udc26\udc28-\udc3a\udc3c\udc3d\udc3f-\udc4d\udc50-\udc5d\udc80-\udcfa\ude80-\ude9c\udea0-\uded0\udf00-\udf1f\udf30-\udf40\udf42-\udf49\udf50-\udf75\udf80-\udf9d\udfa0-\udfc3\udfc8-\udfcf]|\ud801[\udc50-\udc9d\udd00-\udd27\udd30-\udd63\ude00-\udf36\udf40-\udf55\udf60-\udf67]|\ud802[\udc00-\udc05\udc08\udc0a-\udc35\udc37\udc38\udc3c\udc3f-\udc55\udc60-\udc76\udc80-\udc9e\udce0-\udcf2\udcf4\udcf5\udd00-\udd15\udd20-\udd39\udd80-\uddb7\uddbe\uddbf\ude00\ude10-\ude13\ude15-\ude17\ude19-\ude33\ude60-\ude7c\ude80-\ude9c\udec0-\udec7\udec9-\udee4\udf00-\udf35\udf40-\udf55\udf60-\udf72\udf80-\udf91]|\ud803[\udc00-\udc48]|\ud804[\udc03-\udc37\udc83-\udcaf\udcd0-\udce8\udd03-\udd26\udd50-\udd72\udd76\udd83-\uddb2\uddc1-\uddc4\uddda\udddc\ude00-\ude11\ude13-\ude2b\ude80-\ude86\ude88\ude8a-\ude8d\ude8f-\ude9d\ude9f-\udea8\udeb0-\udede\udf05-\udf0c\udf0f\udf10\udf13-\udf28\udf2a-\udf30\udf32\udf33\udf35-\udf39\udf3d\udf50\udf5d-\udf61]|\ud805[\udc00-\udc34\udc47-\udc4a\udc80-\udcaf\udcc4\udcc5\udcc7\udd80-\uddae\uddd8-\udddb\ude00-\ude2f\ude44\ude80-\udeaa\udf00-\udf19]|\ud806[\udcff\udec0-\udef8]|\ud807[\udc00-\udc08\udc0a-\udc2e\udc40\udc72-\udc8f]|\ud808[\udc00-\udf99]|\ud809[\udc80-\udd43]|[\ud80c\ud81c-\ud820\ud840-\ud868\ud86a-\ud86c\ud86f-\ud872][\udc00-\udfff]|\ud80d[\udc00-\udc2e]|\ud811[\udc00-\ude46]|\ud81a[\udc00-\ude38\ude40-\ude5e\uded0-\udeed\udf00-\udf2f\udf63-\udf77\udf7d-\udf8f]|\ud81b[\udf00-\udf44\udf50]|\ud821[\udc00-\udfec]|\ud822[\udc00-\udef2]|\ud82c[\udc00\udc01]|\ud82f[\udc00-\udc6a\udc70-\udc7c\udc80-\udc88\udc90-\udc99]|\ud83a[\udc00-\udcc4]|\ud83b[\ude00-\ude03\ude05-\ude1f\ude21\ude22\ude24\ude27\ude29-\ude32\ude34-\ude37\ude39\ude3b\ude42\ude47\ude49\ude4b\ude4d-\ude4f\ude51\ude52\ude54\ude57\ude59\ude5b\ude5d\ude5f\ude61\ude62\ude64\ude67-\ude6a\ude6c-\ude72\ude74-\ude77\ude79-\ude7c\ude7e\ude80-\ude89\ude8b-\ude9b\udea1-\udea3\udea5-\udea9\udeab-\udebb]|\ud869[\udc00-\uded6\udf00-\udfff]|\ud86d[\udc00-\udf34\udf40-\udfff]|\ud86e[\udc00-\udc1d\udc20-\udfff]|\ud873[\udc00-\udea1]|\ud87e[\udc00-\ude1d]"
                        }, {
                            name: "Lt",
                            alias: "Titlecase_Letter",
                            bmp: "ǅǈǋǲᾈ-ᾏᾘ-ᾟᾨ-ᾯᾼῌῼ"
                        }, {
                            name: "Lu",
                            alias: "Uppercase_Letter",
                            bmp: "A-ZÀ-ÖØ-ÞĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮİĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŸŹŻŽƁƂƄƆƇƉ-ƋƎ-ƑƓƔƖ-ƘƜƝƟƠƢƤƦƧƩƬƮƯƱ-ƳƵƷƸƼǄǇǊǍǏǑǓǕǗǙǛǞǠǢǤǦǨǪǬǮǱǴǶ-ǸǺǼǾȀȂȄȆȈȊȌȎȐȒȔȖȘȚȜȞȠȢȤȦȨȪȬȮȰȲȺȻȽȾɁɃ-ɆɈɊɌɎͰͲͶͿΆΈ-ΊΌΎΏΑ-ΡΣ-ΫϏϒ-ϔϘϚϜϞϠϢϤϦϨϪϬϮϴϷϹϺϽ-ЯѠѢѤѦѨѪѬѮѰѲѴѶѸѺѼѾҀҊҌҎҐҒҔҖҘҚҜҞҠҢҤҦҨҪҬҮҰҲҴҶҸҺҼҾӀӁӃӅӇӉӋӍӐӒӔӖӘӚӜӞӠӢӤӦӨӪӬӮӰӲӴӶӸӺӼӾԀԂԄԆԈԊԌԎԐԒԔԖԘԚԜԞԠԢԤԦԨԪԬԮԱ-ՖႠ-ჅჇჍᎠ-ᏵḀḂḄḆḈḊḌḎḐḒḔḖḘḚḜḞḠḢḤḦḨḪḬḮḰḲḴḶḸḺḼḾṀṂṄṆṈṊṌṎṐṒṔṖṘṚṜṞṠṢṤṦṨṪṬṮṰṲṴṶṸṺṼṾẀẂẄẆẈẊẌẎẐẒẔẞẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼẾỀỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴỶỸỺỼỾἈ-ἏἘ-ἝἨ-ἯἸ-ἿὈ-ὍὙὛὝὟὨ-ὯᾸ-ΆῈ-ΉῘ-ΊῨ-ῬῸ-Ώℂℇℋ-ℍℐ-ℒℕℙ-ℝℤΩℨK-ℭℰ-ℳℾℿⅅↃⰀ-ⰮⱠⱢ-ⱤⱧⱩⱫⱭ-ⱰⱲⱵⱾ-ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⲲⲴⲶⲸⲺⲼⲾⳀⳂⳄⳆⳈⳊⳌⳎⳐⳒⳔⳖⳘⳚⳜⳞⳠⳢⳫⳭⳲꙀꙂꙄꙆꙈꙊꙌꙎꙐꙒꙔꙖꙘꙚꙜꙞꙠꙢꙤꙦꙨꙪꙬꚀꚂꚄꚆꚈꚊꚌꚎꚐꚒꚔꚖꚘꚚꜢꜤꜦꜨꜪꜬꜮꜲꜴꜶꜸꜺꜼꜾꝀꝂꝄꝆꝈꝊꝌꝎꝐꝒꝔꝖꝘꝚꝜꝞꝠꝢꝤꝦꝨꝪꝬꝮꝹꝻꝽꝾꞀꞂꞄꞆꞋꞍꞐꞒꞖꞘꞚꞜꞞꞠꞢꞤꞦꞨꞪ-ꞮꞰ-ꞴꞶＡ-Ｚ",
                            astral: "\ud801[\udc00-\udc27\udcb0-\udcd3]|\ud803[\udc80-\udcb2]|\ud806[\udca0-\udcbf]|\ud835[\udc00-\udc19\udc34-\udc4d\udc68-\udc81\udc9c\udc9e\udc9f\udca2\udca5\udca6\udca9-\udcac\udcae-\udcb5\udcd0-\udce9\udd04\udd05\udd07-\udd0a\udd0d-\udd14\udd16-\udd1c\udd38\udd39\udd3b-\udd3e\udd40-\udd44\udd46\udd4a-\udd50\udd6c-\udd85\udda0-\uddb9\uddd4-\udded\ude08-\ude21\ude3c-\ude55\ude70-\ude89\udea8-\udec0\udee2-\udefa\udf1c-\udf34\udf56-\udf6e\udf90-\udfa8\udfca]|\ud83a[\udd00-\udd21]"
                        }, {
                            name: "M",
                            alias: "Mark",
                            bmp: "̀-ͯ҃-҉֑-ׇֽֿׁׂׅׄؐ-ًؚ-ٰٟۖ-ۜ۟-۪ۤۧۨ-ܑۭܰ-݊ަ-ް߫-߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࣔ-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣঁ-ঃ়া-ৄেৈো-্ৗৢৣਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑੰੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣஂா-ூெ-ைொ-்ௗఀ-ఃా-ౄె-ైొ-్ౕౖౢౣಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣഁ-ഃാ-ൄെ-ൈൊ-്ൗൢൣංඃ්ා-ුූෘ-ෟෲෳัิ-ฺ็-๎ັິ-ູົຼ່-ໍ༹༘༙༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏႚ-ႝ፝-፟ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝᠋-᠍ᢅᢆᢩᤠ-ᤫᤰ-᤻ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼᪰-᪾ᬀ-ᬄ᬴-᭄᭫-᭳ᮀ-ᮂᮡ-ᮭ᯦-᯳ᰤ-᰷᳐-᳔᳒-᳨᳭ᳲ-᳴᳸᳹᷀-᷵᷻-᷿⃐-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꙯-꙲ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-ꣅ꣠-꣱ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀ꧥꨩ-ꨶꩃꩌꩍꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭ﬞ︀-️︠-︯",
                            astral: "\ud800[\uddfd\udee0\udf76-\udf7a]|\ud802[\ude01-\ude03\ude05\ude06\ude0c-\ude0f\ude38-\ude3a\ude3f\udee5\udee6]|\ud804[\udc00-\udc02\udc38-\udc46\udc7f-\udc82\udcb0-\udcba\udd00-\udd02\udd27-\udd34\udd73\udd80-\udd82\uddb3-\uddc0\uddca-\uddcc\ude2c-\ude37\ude3e\udedf-\udeea\udf00-\udf03\udf3c\udf3e-\udf44\udf47\udf48\udf4b-\udf4d\udf57\udf62\udf63\udf66-\udf6c\udf70-\udf74]|\ud805[\udc35-\udc46\udcb0-\udcc3\uddaf-\uddb5\uddb8-\uddc0\udddc\udddd\ude30-\ude40\udeab-\udeb7\udf1d-\udf2b]|\ud807[\udc2f-\udc36\udc38-\udc3f\udc92-\udca7\udca9-\udcb6]|\ud81a[\udef0-\udef4\udf30-\udf36]|\ud81b[\udf51-\udf7e\udf8f-\udf92]|\ud82f[\udc9d\udc9e]|\ud834[\udd65-\udd69\udd6d-\udd72\udd7b-\udd82\udd85-\udd8b\uddaa-\uddad\ude42-\ude44]|\ud836[\ude00-\ude36\ude3b-\ude6c\ude75\ude84\ude9b-\ude9f\udea1-\udeaf]|\ud838[\udc00-\udc06\udc08-\udc18\udc1b-\udc21\udc23\udc24\udc26-\udc2a]|\ud83a[\udcd0-\udcd6\udd44-\udd4a]|\udb40[\udd00-\uddef]"
                        }, {
                            name: "Mc",
                            alias: "Spacing_Mark",
                            bmp: "ःऻा-ीॉ-ौॎॏংঃা-ীেৈোৌৗਃਾ-ੀઃા-ીૉોૌଂଃାୀେୈୋୌୗாிுூெ-ைொ-ௌௗఁ-ఃు-ౄಂಃಾೀ-ೄೇೈೊೋೕೖംഃാ-ീെ-ൈൊ-ൌൗංඃා-ෑෘ-ෟෲෳ༾༿ཿါာေးျြၖၗၢ-ၤၧ-ၭႃႄႇ-ႌႏႚ-ႜាើ-ៅះៈᤣ-ᤦᤩ-ᤫᤰᤱᤳ-ᤸᨙᨚᩕᩗᩡᩣᩤᩭ-ᩲᬄᬵᬻᬽ-ᭁᭃ᭄ᮂᮡᮦᮧ᮪ᯧᯪ-ᯬᯮ᯲᯳ᰤ-ᰫᰴᰵ᳡ᳲᳳ〮〯ꠣꠤꠧꢀꢁꢴ-ꣃꥒ꥓ꦃꦴꦵꦺꦻꦽ-꧀ꨯꨰꨳꨴꩍꩻꩽꫫꫮꫯꫵꯣꯤꯦꯧꯩꯪ꯬",
                            astral: "\ud804[\udc00\udc02\udc82\udcb0-\udcb2\udcb7\udcb8\udd2c\udd82\uddb3-\uddb5\uddbf\uddc0\ude2c-\ude2e\ude32\ude33\ude35\udee0-\udee2\udf02\udf03\udf3e\udf3f\udf41-\udf44\udf47\udf48\udf4b-\udf4d\udf57\udf62\udf63]|\ud805[\udc35-\udc37\udc40\udc41\udc45\udcb0-\udcb2\udcb9\udcbb-\udcbe\udcc1\uddaf-\uddb1\uddb8-\uddbb\uddbe\ude30-\ude32\ude3b\ude3c\ude3e\udeac\udeae\udeaf\udeb6\udf20\udf21\udf26]|\ud807[\udc2f\udc3e\udca9\udcb1\udcb4]|\ud81b[\udf51-\udf7e]|\ud834[\udd65\udd66\udd6d-\udd72]"
                        }, {
                            name: "Me",
                            alias: "Enclosing_Mark",
                            bmp: "҈҉᪾⃝-⃠⃢-⃤꙰-꙲"
                        }, {
                            name: "Mn",
                            alias: "Nonspacing_Mark",
                            bmp: "̀-ͯ҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-ٰٟۖ-ۜ۟-۪ۤۧۨ-ܑۭܰ-݊ަ-ް߫-߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࣔ-ࣣ࣡-ंऺ़ु-ै्॑-ॗॢॣঁ়ু-ৄ্ৢৣਁਂ਼ੁੂੇੈੋ-੍ੑੰੱੵઁં઼ુ-ૅેૈ્ૢૣଁ଼ିୁ-ୄ୍ୖୢୣஂீ்ఀా-ీె-ైొ-్ౕౖౢౣಁ಼ಿೆೌ್ೢೣഁു-ൄ്ൢൣ්ි-ුූัิ-ฺ็-๎ັິ-ູົຼ່-ໍཱ༹༘༙༵༷-ཾྀ-྄྆྇ྍ-ྗྙ-ྼ࿆ိ-ူဲ-့္်ွှၘၙၞ-ၠၱ-ၴႂႅႆႍႝ፝-፟ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴឵ិ-ួំ៉-៓៝᠋-᠍ᢅᢆᢩᤠ-ᤢᤧᤨᤲ᤹-᤻ᨘᨗᨛᩖᩘ-ᩞ᩠ᩢᩥ-ᩬᩳ-᩿᩼᪰-᪽ᬀ-ᬃ᬴ᬶ-ᬺᬼᭂ᭫-᭳ᮀᮁᮢ-ᮥᮨᮩ᮫-ᮭ᯦ᯨᯩᯭᯯ-ᯱᰬ-ᰳᰶ᰷᳐-᳔᳒-᳢᳠-᳨᳭᳴᳸᳹᷀-᷵᷻-᷿⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〭꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠥꠦ꣄ꣅ꣠-꣱ꤦ-꤭ꥇ-ꥑꦀ-ꦂ꦳ꦶ-ꦹꦼꧥꨩ-ꨮꨱꨲꨵꨶꩃꩌꩼꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫬꫭ꫶ꯥꯨ꯭ﬞ︀-️︠-︯",
                            astral: "\ud800[\uddfd\udee0\udf76-\udf7a]|\ud802[\ude01-\ude03\ude05\ude06\ude0c-\ude0f\ude38-\ude3a\ude3f\udee5\udee6]|\ud804[\udc01\udc38-\udc46\udc7f-\udc81\udcb3-\udcb6\udcb9\udcba\udd00-\udd02\udd27-\udd2b\udd2d-\udd34\udd73\udd80\udd81\uddb6-\uddbe\uddca-\uddcc\ude2f-\ude31\ude34\ude36\ude37\ude3e\udedf\udee3-\udeea\udf00\udf01\udf3c\udf40\udf66-\udf6c\udf70-\udf74]|\ud805[\udc38-\udc3f\udc42-\udc44\udc46\udcb3-\udcb8\udcba\udcbf\udcc0\udcc2\udcc3\uddb2-\uddb5\uddbc\uddbd\uddbf\uddc0\udddc\udddd\ude33-\ude3a\ude3d\ude3f\ude40\udeab\udead\udeb0-\udeb5\udeb7\udf1d-\udf1f\udf22-\udf25\udf27-\udf2b]|\ud807[\udc30-\udc36\udc38-\udc3d\udc3f\udc92-\udca7\udcaa-\udcb0\udcb2\udcb3\udcb5\udcb6]|\ud81a[\udef0-\udef4\udf30-\udf36]|\ud81b[\udf8f-\udf92]|\ud82f[\udc9d\udc9e]|\ud834[\udd67-\udd69\udd7b-\udd82\udd85-\udd8b\uddaa-\uddad\ude42-\ude44]|\ud836[\ude00-\ude36\ude3b-\ude6c\ude75\ude84\ude9b-\ude9f\udea1-\udeaf]|\ud838[\udc00-\udc06\udc08-\udc18\udc1b-\udc21\udc23\udc24\udc26-\udc2a]|\ud83a[\udcd0-\udcd6\udd44-\udd4a]|\udb40[\udd00-\uddef]"
                        }, {
                            name: "N",
                            alias: "Number",
                            bmp: "0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൘-൞൦-൸෦-෯๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꧰-꧹꩐-꩙꯰-꯹０-９",
                            astral: "\ud800[\udd07-\udd33\udd40-\udd78\udd8a\udd8b\udee1-\udefb\udf20-\udf23\udf41\udf4a\udfd1-\udfd5]|\ud801[\udca0-\udca9]|\ud802[\udc58-\udc5f\udc79-\udc7f\udca7-\udcaf\udcfb-\udcff\udd16-\udd1b\uddbc\uddbd\uddc0-\uddcf\uddd2-\uddff\ude40-\ude47\ude7d\ude7e\ude9d-\ude9f\udeeb-\udeef\udf58-\udf5f\udf78-\udf7f\udfa9-\udfaf]|\ud803[\udcfa-\udcff\ude60-\ude7e]|\ud804[\udc52-\udc6f\udcf0-\udcf9\udd36-\udd3f\uddd0-\uddd9\udde1-\uddf4\udef0-\udef9]|\ud805[\udc50-\udc59\udcd0-\udcd9\ude50-\ude59\udec0-\udec9\udf30-\udf3b]|\ud806[\udce0-\udcf2]|\ud807[\udc50-\udc6c]|\ud809[\udc00-\udc6e]|\ud81a[\ude60-\ude69\udf50-\udf59\udf5b-\udf61]|\ud834[\udf60-\udf71]|\ud835[\udfce-\udfff]|\ud83a[\udcc7-\udccf\udd50-\udd59]|\ud83c[\udd00-\udd0c]"
                        }, {
                            name: "Nd",
                            alias: "Decimal_Number",
                            bmp: "0-9٠-٩۰-۹߀-߉०-९০-৯੦-੯૦-૯୦-୯௦-௯౦-౯೦-೯൦-൯෦-෯๐-๙໐-໙༠-༩၀-၉႐-႙០-៩᠐-᠙᥆-᥏᧐-᧙᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙꘠-꘩꣐-꣙꤀-꤉꧐-꧙꧰-꧹꩐-꩙꯰-꯹０-９",
                            astral: "\ud801[\udca0-\udca9]|\ud804[\udc66-\udc6f\udcf0-\udcf9\udd36-\udd3f\uddd0-\uddd9\udef0-\udef9]|\ud805[\udc50-\udc59\udcd0-\udcd9\ude50-\ude59\udec0-\udec9\udf30-\udf39]|\ud806[\udce0-\udce9]|\ud807[\udc50-\udc59]|\ud81a[\ude60-\ude69\udf50-\udf59]|\ud835[\udfce-\udfff]|\ud83a[\udd50-\udd59]"
                        }, {
                            name: "Nl",
                            alias: "Letter_Number",
                            bmp: "ᛮ-ᛰⅠ-ↂↅ-ↈ〇〡-〩〸-〺ꛦ-ꛯ",
                            astral: "\ud800[\udd40-\udd74\udf41\udf4a\udfd1-\udfd5]|\ud809[\udc00-\udc6e]"
                        }, {
                            name: "No",
                            alias: "Other_Number",
                            bmp: "²³¹¼-¾৴-৹୲-୷௰-௲౸-౾൘-൞൰-൸༪-༳፩-፼៰-៹᧚⁰⁴-⁹₀-₉⅐-⅟↉①-⒛⓪-⓿❶-➓⳽㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꠰-꠵",
                            astral: "\ud800[\udd07-\udd33\udd75-\udd78\udd8a\udd8b\udee1-\udefb\udf20-\udf23]|\ud802[\udc58-\udc5f\udc79-\udc7f\udca7-\udcaf\udcfb-\udcff\udd16-\udd1b\uddbc\uddbd\uddc0-\uddcf\uddd2-\uddff\ude40-\ude47\ude7d\ude7e\ude9d-\ude9f\udeeb-\udeef\udf58-\udf5f\udf78-\udf7f\udfa9-\udfaf]|\ud803[\udcfa-\udcff\ude60-\ude7e]|\ud804[\udc52-\udc65\udde1-\uddf4]|\ud805[\udf3a\udf3b]|\ud806[\udcea-\udcf2]|\ud807[\udc5a-\udc6c]|\ud81a[\udf5b-\udf61]|\ud834[\udf60-\udf71]|\ud83a[\udcc7-\udccf]|\ud83c[\udd00-\udd0c]"
                        }, {
                            name: "P",
                            alias: "Punctuation",
                            bmp: "!-#%-\\x2A,-/:;\\x3F@\\x5B-\\x5D_\\x7B}¡§«¶·»¿;·՚-՟։֊־׀׃׆׳״؉؊،؍؛؞؟٪-٭۔܀-܍߷-߹࠰-࠾࡞।॥॰૰෴๏๚๛༄-༒༔༺-༽྅࿐-࿔࿙࿚၊-၏჻፠-፨᐀᙭᙮᚛᚜᛫-᛭᜵᜶។-៖៘-៚᠀-᠊᥄᥅᨞᨟᪠-᪦᪨-᪭᭚-᭠᯼-᯿᰻-᰿᱾᱿᳀-᳇᳓‐-‧‰-⁃⁅-⁑⁓-⁞⁽⁾₍₎⌈-⌋〈〉❨-❵⟅⟆⟦-⟯⦃-⦘⧘-⧛⧼⧽⳹-⳼⳾⳿⵰⸀-⸮⸰-⹄、-〃〈-】〔-〟〰〽゠・꓾꓿꘍-꘏꙳꙾꛲-꛷꡴-꡷꣎꣏꣸-꣺꣼꤮꤯꥟꧁-꧍꧞꧟꩜-꩟꫞꫟꫰꫱꯫﴾﴿︐-︙︰-﹒﹔-﹡﹣﹨﹪﹫！-＃％-＊，-／：；？＠［-］＿｛｝｟-･",
                            astral: "\ud800[\udd00-\udd02\udf9f\udfd0]|𐕯|\ud802[\udc57\udd1f\udd3f\ude50-\ude58\ude7f\udef0-\udef6\udf39-\udf3f\udf99-\udf9c]|\ud804[\udc47-\udc4d\udcbb\udcbc\udcbe-\udcc1\udd40-\udd43\udd74\udd75\uddc5-\uddc9\uddcd\udddb\udddd-\udddf\ude38-\ude3d\udea9]|\ud805[\udc4b-\udc4f\udc5b\udc5d\udcc6\uddc1-\uddd7\ude41-\ude43\ude60-\ude6c\udf3c-\udf3e]|\ud807[\udc41-\udc45\udc70\udc71]|\ud809[\udc70-\udc74]|\ud81a[\ude6e\ude6f\udef5\udf37-\udf3b\udf44]|𛲟|\ud836[\ude87-\ude8b]|\ud83a[\udd5e\udd5f]"
                        }, {
                            name: "Pc",
                            alias: "Connector_Punctuation",
                            bmp: "_‿⁀⁔︳︴﹍-﹏＿"
                        }, {
                            name: "Pd",
                            alias: "Dash_Punctuation",
                            bmp: "\\x2D֊־᐀᠆‐-―⸗⸚⸺⸻⹀〜〰゠︱︲﹘﹣－"
                        }, {
                            name: "Pe",
                            alias: "Close_Punctuation",
                            bmp: "\\x29\\x5D}༻༽᚜⁆⁾₎⌉⌋〉❩❫❭❯❱❳❵⟆⟧⟩⟫⟭⟯⦄⦆⦈⦊⦌⦎⦐⦒⦔⦖⦘⧙⧛⧽⸣⸥⸧⸩〉》」』】〕〗〙〛〞〟﴾︘︶︸︺︼︾﹀﹂﹄﹈﹚﹜﹞）］｝｠｣"
                        }, {
                            name: "Pf",
                            alias: "Final_Punctuation",
                            bmp: "»’”›⸃⸅⸊⸍⸝⸡"
                        }, {
                            name: "Pi",
                            alias: "Initial_Punctuation",
                            bmp: "«‘‛“‟‹⸂⸄⸉⸌⸜⸠"
                        }, {
                            name: "Po",
                            alias: "Other_Punctuation",
                            bmp: "!-#%-'\\x2A,\\x2E/:;\\x3F@\\x5C¡§¶·¿;·՚-՟։׀׃׆׳״؉؊،؍؛؞؟٪-٭۔܀-܍߷-߹࠰-࠾࡞।॥॰૰෴๏๚๛༄-༒༔྅࿐-࿔࿙࿚၊-၏჻፠-፨᙭᙮᛫-᛭᜵᜶។-៖៘-៚᠀-᠅᠇-᠊᥄᥅᨞᨟᪠-᪦᪨-᪭᭚-᭠᯼-᯿᰻-᰿᱾᱿᳀-᳇᳓‖‗†-‧‰-‸※-‾⁁-⁃⁇-⁑⁓⁕-⁞⳹-⳼⳾⳿⵰⸀⸁⸆-⸈⸋⸎-⸖⸘⸙⸛⸞⸟⸪-⸮⸰-⸹⸼-⸿⹁⹃⹄、-〃〽・꓾꓿꘍-꘏꙳꙾꛲-꛷꡴-꡷꣎꣏꣸-꣺꣼꤮꤯꥟꧁-꧍꧞꧟꩜-꩟꫞꫟꫰꫱꯫︐-︖︙︰﹅﹆﹉-﹌﹐-﹒﹔-﹗﹟-﹡﹨﹪﹫！-＃％-＇＊，．／：；？＠＼｡､･",
                            astral: "\ud800[\udd00-\udd02\udf9f\udfd0]|𐕯|\ud802[\udc57\udd1f\udd3f\ude50-\ude58\ude7f\udef0-\udef6\udf39-\udf3f\udf99-\udf9c]|\ud804[\udc47-\udc4d\udcbb\udcbc\udcbe-\udcc1\udd40-\udd43\udd74\udd75\uddc5-\uddc9\uddcd\udddb\udddd-\udddf\ude38-\ude3d\udea9]|\ud805[\udc4b-\udc4f\udc5b\udc5d\udcc6\uddc1-\uddd7\ude41-\ude43\ude60-\ude6c\udf3c-\udf3e]|\ud807[\udc41-\udc45\udc70\udc71]|\ud809[\udc70-\udc74]|\ud81a[\ude6e\ude6f\udef5\udf37-\udf3b\udf44]|𛲟|\ud836[\ude87-\ude8b]|\ud83a[\udd5e\udd5f]"
                        }, {
                            name: "Ps",
                            alias: "Open_Punctuation",
                            bmp: "\\x28\\x5B\\x7B༺༼᚛‚„⁅⁽₍⌈⌊〈❨❪❬❮❰❲❴⟅⟦⟨⟪⟬⟮⦃⦅⦇⦉⦋⦍⦏⦑⦓⦕⦗⧘⧚⧼⸢⸤⸦⸨⹂〈《「『【〔〖〘〚〝﴿︗︵︷︹︻︽︿﹁﹃﹇﹙﹛﹝（［｛｟｢"
                        }, {
                            name: "S",
                            alias: "Symbol",
                            bmp: "\\x24\\x2B<->\\x5E`\\x7C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֍-֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൏൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₾℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏↊↋←-⌇⌌-⌨⌫-⏾␀-␦⑀-⑊⒜-ⓩ─-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭳⭶-⮕⮘-⮹⮽-⯈⯊-⯑⯬-⯯⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹꭛﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�",
                            astral: "\ud800[\udd37-\udd3f\udd79-\udd89\udd8c-\udd8e\udd90-\udd9b\udda0\uddd0-\uddfc]|\ud802[\udc77\udc78\udec8]|𑜿|\ud81a[\udf3c-\udf3f\udf45]|𛲜|\ud834[\udc00-\udcf5\udd00-\udd26\udd29-\udd64\udd6a-\udd6c\udd83\udd84\udd8c-\udda9\uddae-\udde8\ude00-\ude41\ude45\udf00-\udf56]|\ud835[\udec1\udedb\udefb\udf15\udf35\udf4f\udf6f\udf89\udfa9\udfc3]|\ud836[\udc00-\uddff\ude37-\ude3a\ude6d-\ude74\ude76-\ude83\ude85\ude86]|\ud83b[\udef0\udef1]|\ud83c[\udc00-\udc2b\udc30-\udc93\udca0-\udcae\udcb1-\udcbf\udcc1-\udccf\udcd1-\udcf5\udd10-\udd2e\udd30-\udd6b\udd70-\uddac\udde6-\ude02\ude10-\ude3b\ude40-\ude48\ude50\ude51\udf00-\udfff]|\ud83d[\udc00-\uded2\udee0-\udeec\udef0-\udef6\udf00-\udf73\udf80-\udfd4]|\ud83e[\udc00-\udc0b\udc10-\udc47\udc50-\udc59\udc60-\udc87\udc90-\udcad\udd10-\udd1e\udd20-\udd27\udd30\udd33-\udd3e\udd40-\udd4b\udd50-\udd5e\udd80-\udd91\uddc0]"
                        }, {
                            name: "Sc",
                            alias: "Currency_Symbol",
                            bmp: "\\x24¢-¥֏؋৲৳৻૱௹฿៛₠-₾꠸﷼﹩＄￠￡￥￦"
                        }, {
                            name: "Sk",
                            alias: "Modifier_Symbol",
                            bmp: "\\x5E`¨¯´¸˂-˅˒-˟˥-˫˭˯-˿͵΄΅᾽᾿-῁῍-῏῝-῟῭-`´῾゛゜꜀-꜖꜠꜡꞉꞊꭛﮲-﯁＾｀￣",
                            astral: "\ud83c[\udffb-\udfff]"
                        }, {
                            name: "Sm",
                            alias: "Math_Symbol",
                            bmp: "\\x2B<->\\x7C~¬±×÷϶؆-؈⁄⁒⁺-⁼₊-₌℘⅀-⅄⅋←-↔↚↛↠↣↦↮⇎⇏⇒⇔⇴-⋿⌠⌡⍼⎛-⎳⏜-⏡▷◁◸-◿♯⟀-⟄⟇-⟥⟰-⟿⤀-⦂⦙-⧗⧜-⧻⧾-⫿⬰-⭄⭇-⭌﬩﹢﹤-﹦＋＜-＞｜～￢￩-￬",
                            astral: "\ud835[\udec1\udedb\udefb\udf15\udf35\udf4f\udf6f\udf89\udfa9\udfc3]|\ud83b[\udef0\udef1]"
                        }, {
                            name: "So",
                            alias: "Other_Symbol",
                            bmp: "¦©®°҂֍֎؎؏۞۩۽۾߶৺୰௳-௸௺౿൏൹༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙᥀᧞-᧿᭡-᭪᭴-᭼℀℁℃-℆℈℉℔№℗℞-℣℥℧℩℮℺℻⅊⅌⅍⅏↊↋↕-↙↜-↟↡↢↤↥↧-↭↯-⇍⇐⇑⇓⇕-⇳⌀-⌇⌌-⌟⌢-⌨⌫-⍻⍽-⎚⎴-⏛⏢-⏾␀-␦⑀-⑊⒜-ⓩ─-▶▸-◀◂-◷☀-♮♰-❧➔-➿⠀-⣿⬀-⬯⭅⭆⭍-⭳⭶-⮕⮘-⮹⮽-⯈⯊-⯑⯬-⯯⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꠨-꠫꠶꠷꠹꩷-꩹﷽￤￨￭￮￼�",
                            astral: "\ud800[\udd37-\udd3f\udd79-\udd89\udd8c-\udd8e\udd90-\udd9b\udda0\uddd0-\uddfc]|\ud802[\udc77\udc78\udec8]|𑜿|\ud81a[\udf3c-\udf3f\udf45]|𛲜|\ud834[\udc00-\udcf5\udd00-\udd26\udd29-\udd64\udd6a-\udd6c\udd83\udd84\udd8c-\udda9\uddae-\udde8\ude00-\ude41\ude45\udf00-\udf56]|\ud836[\udc00-\uddff\ude37-\ude3a\ude6d-\ude74\ude76-\ude83\ude85\ude86]|\ud83c[\udc00-\udc2b\udc30-\udc93\udca0-\udcae\udcb1-\udcbf\udcc1-\udccf\udcd1-\udcf5\udd10-\udd2e\udd30-\udd6b\udd70-\uddac\udde6-\ude02\ude10-\ude3b\ude40-\ude48\ude50\ude51\udf00-\udffa]|\ud83d[\udc00-\uded2\udee0-\udeec\udef0-\udef6\udf00-\udf73\udf80-\udfd4]|\ud83e[\udc00-\udc0b\udc10-\udc47\udc50-\udc59\udc60-\udc87\udc90-\udcad\udd10-\udd1e\udd20-\udd27\udd30\udd33-\udd3e\udd40-\udd4b\udd50-\udd5e\udd80-\udd91\uddc0]"
                        }, {
                            name: "Z",
                            alias: "Separator",
                            bmp: "    - \u2028\u2029  　"
                        }, {
                            name: "Zl",
                            alias: "Line_Separator",
                            bmp: "\u2028"
                        }, {
                            name: "Zp",
                            alias: "Paragraph_Separator",
                            bmp: "\u2029"
                        }, {
                            name: "Zs",
                            alias: "Space_Separator",
                            bmp: "    -   　"
                        }])
                    }
                }, {}],
                6: [function(e, t, n) {
                    t.exports = function(e) {
                        "use strict";
                        if (!e.addUnicodeData) throw new ReferenceError("Unicode Base must be loaded before Unicode Properties");
                        var t = [{
                            name: "ASCII",
                            bmp: "\0-"
                        }, {
                            name: "Alphabetic",
                            bmp: "A-Za-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͅͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙա-ևְ-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-ٗٙ-ٟٮ-ۓە-ۜۡ-ۭۨ-ۯۺ-ۼۿܐ-ܿݍ-ޱߊ-ߪߴߵߺࠀ-ࠗࠚ-ࠬࡀ-ࡘࢠ-ࢴࢶ-ࢽࣔ-ࣣࣟ-ࣰࣩ-ऻऽ-ौॎ-ॐॕ-ॣॱ-ঃঅ-ঌএঐও-নপ-রলশ-হঽ-ৄেৈোৌৎৗড়ঢ়য়-ৣৰৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਾ-ੂੇੈੋੌੑਖ਼-ੜਫ਼ੰ-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽ-ૅે-ૉોૌૐૠ-ૣૹଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽ-ୄେୈୋୌୖୗଡ଼ଢ଼ୟ-ୣୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-ௌௐௗఀ-ఃఅ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-ౌౕౖౘ-ౚౠ-ౣಀ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽ-ೄೆ-ೈೊ-ೌೕೖೞೠ-ೣೱೲഁ-ഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൌൎൔ-ൗൟ-ൣൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆා-ුූෘ-ෟෲෳก-ฺเ-ๆํກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆໍໜ-ໟༀཀ-ཇཉ-ཬཱ-ཱྀྈ-ྗྙ-ྼက-ံးျ-ဿၐ-ၢၥ-ၨၮ-ႆႎႜႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፟ᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜓᜠ-ᜳᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-ឳា-ៈៗៜᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-ᤸᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨛᨠ-ᩞᩡ-ᩴᪧᬀ-ᬳᬵ-ᭃᭅ-ᭋᮀ-ᮩᮬ-ᮯᮺ-ᯥᯧ-ᯱᰀ-ᰵᱍ-ᱏᱚ-ᱽᲀ-ᲈᳩ-ᳬᳮ-ᳳᳵᳶᴀ-ᶿᷧ-ᷴḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⒶ-ⓩⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿕ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙴ-ꙻꙿ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞮꞰ-ꞷꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠧꡀ-ꡳꢀ-ꣃꣅꣲ-ꣷꣻꣽꤊ-ꤪꤰ-ꥒꥠ-ꥼꦀ-ꦲꦴ-ꦿꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨶꩀ-ꩍꩠ-ꩶꩺꩾ-ꪾꫀꫂꫛ-ꫝꫠ-ꫯꫲ-ꫵꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯪ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",
                            astral: "\ud800[\udc00-\udc0b\udc0d-\udc26\udc28-\udc3a\udc3c\udc3d\udc3f-\udc4d\udc50-\udc5d\udc80-\udcfa\udd40-\udd74\ude80-\ude9c\udea0-\uded0\udf00-\udf1f\udf30-\udf4a\udf50-\udf7a\udf80-\udf9d\udfa0-\udfc3\udfc8-\udfcf\udfd1-\udfd5]|\ud801[\udc00-\udc9d\udcb0-\udcd3\udcd8-\udcfb\udd00-\udd27\udd30-\udd63\ude00-\udf36\udf40-\udf55\udf60-\udf67]|\ud802[\udc00-\udc05\udc08\udc0a-\udc35\udc37\udc38\udc3c\udc3f-\udc55\udc60-\udc76\udc80-\udc9e\udce0-\udcf2\udcf4\udcf5\udd00-\udd15\udd20-\udd39\udd80-\uddb7\uddbe\uddbf\ude00-\ude03\ude05\ude06\ude0c-\ude13\ude15-\ude17\ude19-\ude33\ude60-\ude7c\ude80-\ude9c\udec0-\udec7\udec9-\udee4\udf00-\udf35\udf40-\udf55\udf60-\udf72\udf80-\udf91]|\ud803[\udc00-\udc48\udc80-\udcb2\udcc0-\udcf2]|\ud804[\udc00-\udc45\udc82-\udcb8\udcd0-\udce8\udd00-\udd32\udd50-\udd72\udd76\udd80-\uddbf\uddc1-\uddc4\uddda\udddc\ude00-\ude11\ude13-\ude34\ude37\ude3e\ude80-\ude86\ude88\ude8a-\ude8d\ude8f-\ude9d\ude9f-\udea8\udeb0-\udee8\udf00-\udf03\udf05-\udf0c\udf0f\udf10\udf13-\udf28\udf2a-\udf30\udf32\udf33\udf35-\udf39\udf3d-\udf44\udf47\udf48\udf4b\udf4c\udf50\udf57\udf5d-\udf63]|\ud805[\udc00-\udc41\udc43-\udc45\udc47-\udc4a\udc80-\udcc1\udcc4\udcc5\udcc7\udd80-\uddb5\uddb8-\uddbe\uddd8-\udddd\ude00-\ude3e\ude40\ude44\ude80-\udeb5\udf00-\udf19\udf1d-\udf2a]|\ud806[\udca0-\udcdf\udcff\udec0-\udef8]|\ud807[\udc00-\udc08\udc0a-\udc36\udc38-\udc3e\udc40\udc72-\udc8f\udc92-\udca7\udca9-\udcb6]|\ud808[\udc00-\udf99]|\ud809[\udc00-\udc6e\udc80-\udd43]|[\ud80c\ud81c-\ud820\ud840-\ud868\ud86a-\ud86c\ud86f-\ud872][\udc00-\udfff]|\ud80d[\udc00-\udc2e]|\ud811[\udc00-\ude46]|\ud81a[\udc00-\ude38\ude40-\ude5e\uded0-\udeed\udf00-\udf36\udf40-\udf43\udf63-\udf77\udf7d-\udf8f]|\ud81b[\udf00-\udf44\udf50-\udf7e\udf93-\udf9f\udfe0]|\ud821[\udc00-\udfec]|\ud822[\udc00-\udef2]|\ud82c[\udc00\udc01]|\ud82f[\udc00-\udc6a\udc70-\udc7c\udc80-\udc88\udc90-\udc99\udc9e]|\ud835[\udc00-\udc54\udc56-\udc9c\udc9e\udc9f\udca2\udca5\udca6\udca9-\udcac\udcae-\udcb9\udcbb\udcbd-\udcc3\udcc5-\udd05\udd07-\udd0a\udd0d-\udd14\udd16-\udd1c\udd1e-\udd39\udd3b-\udd3e\udd40-\udd44\udd46\udd4a-\udd50\udd52-\udea5\udea8-\udec0\udec2-\udeda\udedc-\udefa\udefc-\udf14\udf16-\udf34\udf36-\udf4e\udf50-\udf6e\udf70-\udf88\udf8a-\udfa8\udfaa-\udfc2\udfc4-\udfcb]|\ud838[\udc00-\udc06\udc08-\udc18\udc1b-\udc21\udc23\udc24\udc26-\udc2a]|\ud83a[\udc00-\udcc4\udd00-\udd43\udd47]|\ud83b[\ude00-\ude03\ude05-\ude1f\ude21\ude22\ude24\ude27\ude29-\ude32\ude34-\ude37\ude39\ude3b\ude42\ude47\ude49\ude4b\ude4d-\ude4f\ude51\ude52\ude54\ude57\ude59\ude5b\ude5d\ude5f\ude61\ude62\ude64\ude67-\ude6a\ude6c-\ude72\ude74-\ude77\ude79-\ude7c\ude7e\ude80-\ude89\ude8b-\ude9b\udea1-\udea3\udea5-\udea9\udeab-\udebb]|\ud83c[\udd30-\udd49\udd50-\udd69\udd70-\udd89]|\ud869[\udc00-\uded6\udf00-\udfff]|\ud86d[\udc00-\udf34\udf40-\udfff]|\ud86e[\udc00-\udc1d\udc20-\udfff]|\ud873[\udc00-\udea1]|\ud87e[\udc00-\ude1d]"
                        }, {
                            name: "Any",
                            isBmpLast: !0,
                            bmp: "\0-￿",
                            astral: "[\ud800-\udbff][\udc00-\udfff]"
                        }, {
                            name: "Default_Ignorable_Code_Point",
                            bmp: "­͏؜ᅟᅠ឴឵᠋-᠎​-‏‪-‮⁠-⁯ㅤ︀-️\ufeffﾠ￰-￸",
                            astral: "\ud82f[\udca0-\udca3]|\ud834[\udd73-\udd7a]|[\udb40-\udb43][\udc00-\udfff]"
                        }, {
                            name: "Lowercase",
                            bmp: "a-zªµºß-öø-ÿāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįıĳĵķĸĺļľŀłńņňŉŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷźżž-ƀƃƅƈƌƍƒƕƙ-ƛƞơƣƥƨƪƫƭưƴƶƹƺƽ-ƿǆǉǌǎǐǒǔǖǘǚǜǝǟǡǣǥǧǩǫǭǯǰǳǵǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟȡȣȥȧȩȫȭȯȱȳ-ȹȼȿɀɂɇɉɋɍɏ-ʓʕ-ʸˀˁˠ-ˤͅͱͳͷͺ-ͽΐά-ώϐϑϕ-ϗϙϛϝϟϡϣϥϧϩϫϭϯ-ϳϵϸϻϼа-џѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎӏӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯա-ևᏸ-ᏽᲀ-ᲈᴀ-ᶿḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕ-ẝẟạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿ-ἇἐ-ἕἠ-ἧἰ-ἷὀ-ὅὐ-ὗὠ-ὧὰ-ώᾀ-ᾇᾐ-ᾗᾠ-ᾧᾰ-ᾴᾶᾷιῂ-ῄῆῇῐ-ΐῖῗῠ-ῧῲ-ῴῶῷⁱⁿₐ-ₜℊℎℏℓℯℴℹℼℽⅆ-ⅉⅎⅰ-ⅿↄⓐ-ⓩⰰ-ⱞⱡⱥⱦⱨⱪⱬⱱⱳⱴⱶ-ⱽⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣⳤⳬⳮⳳⴀ-ⴥⴧⴭꙁꙃꙅꙇꙉꙋꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛ-ꚝꜣꜥꜧꜩꜫꜭꜯ-ꜱꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯ-ꝸꝺꝼꝿꞁꞃꞅꞇꞌꞎꞑꞓ-ꞕꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩꞵꞷꟸ-ꟺꬰ-ꭚꭜ-ꭥꭰ-ꮿﬀ-ﬆﬓ-ﬗａ-ｚ",
                            astral: "\ud801[\udc28-\udc4f\udcd8-\udcfb]|\ud803[\udcc0-\udcf2]|\ud806[\udcc0-\udcdf]|\ud835[\udc1a-\udc33\udc4e-\udc54\udc56-\udc67\udc82-\udc9b\udcb6-\udcb9\udcbb\udcbd-\udcc3\udcc5-\udccf\udcea-\udd03\udd1e-\udd37\udd52-\udd6b\udd86-\udd9f\uddba-\uddd3\uddee-\ude07\ude22-\ude3b\ude56-\ude6f\ude8a-\udea5\udec2-\udeda\udedc-\udee1\udefc-\udf14\udf16-\udf1b\udf36-\udf4e\udf50-\udf55\udf70-\udf88\udf8a-\udf8f\udfaa-\udfc2\udfc4-\udfc9\udfcb]|\ud83a[\udd22-\udd43]"
                        }, {
                            name: "Noncharacter_Code_Point",
                            bmp: "﷐-﷯￾￿",
                            astral: "[\ud83f\ud87f\ud8bf\ud8ff\ud93f\ud97f\ud9bf\ud9ff\uda3f\uda7f\udabf\udaff\udb3f\udb7f\udbbf\udbff][\udffe\udfff]"
                        }, {
                            name: "Uppercase",
                            bmp: "A-ZÀ-ÖØ-ÞĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮİĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŸŹŻŽƁƂƄƆƇƉ-ƋƎ-ƑƓƔƖ-ƘƜƝƟƠƢƤƦƧƩƬƮƯƱ-ƳƵƷƸƼǄǇǊǍǏǑǓǕǗǙǛǞǠǢǤǦǨǪǬǮǱǴǶ-ǸǺǼǾȀȂȄȆȈȊȌȎȐȒȔȖȘȚȜȞȠȢȤȦȨȪȬȮȰȲȺȻȽȾɁɃ-ɆɈɊɌɎͰͲͶͿΆΈ-ΊΌΎΏΑ-ΡΣ-ΫϏϒ-ϔϘϚϜϞϠϢϤϦϨϪϬϮϴϷϹϺϽ-ЯѠѢѤѦѨѪѬѮѰѲѴѶѸѺѼѾҀҊҌҎҐҒҔҖҘҚҜҞҠҢҤҦҨҪҬҮҰҲҴҶҸҺҼҾӀӁӃӅӇӉӋӍӐӒӔӖӘӚӜӞӠӢӤӦӨӪӬӮӰӲӴӶӸӺӼӾԀԂԄԆԈԊԌԎԐԒԔԖԘԚԜԞԠԢԤԦԨԪԬԮԱ-ՖႠ-ჅჇჍᎠ-ᏵḀḂḄḆḈḊḌḎḐḒḔḖḘḚḜḞḠḢḤḦḨḪḬḮḰḲḴḶḸḺḼḾṀṂṄṆṈṊṌṎṐṒṔṖṘṚṜṞṠṢṤṦṨṪṬṮṰṲṴṶṸṺṼṾẀẂẄẆẈẊẌẎẐẒẔẞẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼẾỀỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴỶỸỺỼỾἈ-ἏἘ-ἝἨ-ἯἸ-ἿὈ-ὍὙὛὝὟὨ-ὯᾸ-ΆῈ-ΉῘ-ΊῨ-ῬῸ-Ώℂℇℋ-ℍℐ-ℒℕℙ-ℝℤΩℨK-ℭℰ-ℳℾℿⅅⅠ-ⅯↃⒶ-ⓏⰀ-ⰮⱠⱢ-ⱤⱧⱩⱫⱭ-ⱰⱲⱵⱾ-ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⲲⲴⲶⲸⲺⲼⲾⳀⳂⳄⳆⳈⳊⳌⳎⳐⳒⳔⳖⳘⳚⳜⳞⳠⳢⳫⳭⳲꙀꙂꙄꙆꙈꙊꙌꙎꙐꙒꙔꙖꙘꙚꙜꙞꙠꙢꙤꙦꙨꙪꙬꚀꚂꚄꚆꚈꚊꚌꚎꚐꚒꚔꚖꚘꚚꜢꜤꜦꜨꜪꜬꜮꜲꜴꜶꜸꜺꜼꜾꝀꝂꝄꝆꝈꝊꝌꝎꝐꝒꝔꝖꝘꝚꝜꝞꝠꝢꝤꝦꝨꝪꝬꝮꝹꝻꝽꝾꞀꞂꞄꞆꞋꞍꞐꞒꞖꞘꞚꞜꞞꞠꞢꞤꞦꞨꞪ-ꞮꞰ-ꞴꞶＡ-Ｚ",
                            astral: "\ud801[\udc00-\udc27\udcb0-\udcd3]|\ud803[\udc80-\udcb2]|\ud806[\udca0-\udcbf]|\ud835[\udc00-\udc19\udc34-\udc4d\udc68-\udc81\udc9c\udc9e\udc9f\udca2\udca5\udca6\udca9-\udcac\udcae-\udcb5\udcd0-\udce9\udd04\udd05\udd07-\udd0a\udd0d-\udd14\udd16-\udd1c\udd38\udd39\udd3b-\udd3e\udd40-\udd44\udd46\udd4a-\udd50\udd6c-\udd85\udda0-\uddb9\uddd4-\udded\ude08-\ude21\ude3c-\ude55\ude70-\ude89\udea8-\udec0\udee2-\udefa\udf1c-\udf34\udf56-\udf6e\udf90-\udfa8\udfca]|\ud83a[\udd00-\udd21]|\ud83c[\udd30-\udd49\udd50-\udd69\udd70-\udd89]"
                        }, {
                            name: "White_Space",
                            bmp: "\t-\r    - \u2028\u2029  　"
                        }];
                        t.push({
                            name: "Assigned",
                            inverseOf: "Cn"
                        }), e.addUnicodeData(t)
                    }
                }, {}],
                7: [function(e, t, n) {
                    t.exports = function(e) {
                        "use strict";
                        if (!e.addUnicodeData) throw new ReferenceError("Unicode Base must be loaded before Unicode Scripts");
                        e.addUnicodeData([{
                            name: "Adlam",
                            astral: "\ud83a[\udd00-\udd4a\udd50-\udd59\udd5e\udd5f]"
                        }, {
                            name: "Ahom",
                            astral: "\ud805[\udf00-\udf19\udf1d-\udf2b\udf30-\udf3f]"
                        }, {
                            name: "Anatolian_Hieroglyphs",
                            astral: "\ud811[\udc00-\ude46]"
                        }, {
                            name: "Arabic",
                            bmp: "؀-؄؆-؋؍-ؚ؞ؠ-ؿف-يٖ-ٯٱ-ۜ۞-ۿݐ-ݿࢠ-ࢴࢶ-ࢽࣔ-ࣣ࣡-ࣿﭐ-﯁ﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-﷽ﹰ-ﹴﹶ-ﻼ",
                            astral: "\ud803[\ude60-\ude7e]|\ud83b[\ude00-\ude03\ude05-\ude1f\ude21\ude22\ude24\ude27\ude29-\ude32\ude34-\ude37\ude39\ude3b\ude42\ude47\ude49\ude4b\ude4d-\ude4f\ude51\ude52\ude54\ude57\ude59\ude5b\ude5d\ude5f\ude61\ude62\ude64\ude67-\ude6a\ude6c-\ude72\ude74-\ude77\ude79-\ude7c\ude7e\ude80-\ude89\ude8b-\ude9b\udea1-\udea3\udea5-\udea9\udeab-\udebb\udef0\udef1]"
                        }, {
                            name: "Armenian",
                            bmp: "Ա-Ֆՙ-՟ա-և֊֍-֏ﬓ-ﬗ"
                        }, {
                            name: "Avestan",
                            astral: "\ud802[\udf00-\udf35\udf39-\udf3f]"
                        }, {
                            name: "Balinese",
                            bmp: "ᬀ-ᭋ᭐-᭼"
                        }, {
                            name: "Bamum",
                            bmp: "ꚠ-꛷",
                            astral: "\ud81a[\udc00-\ude38]"
                        }, {
                            name: "Bassa_Vah",
                            astral: "\ud81a[\uded0-\udeed\udef0-\udef5]"
                        }, {
                            name: "Batak",
                            bmp: "ᯀ-᯳᯼-᯿"
                        }, {
                            name: "Bengali",
                            bmp: "ঀ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-৻"
                        }, {
                            name: "Bhaiksuki",
                            astral: "\ud807[\udc00-\udc08\udc0a-\udc36\udc38-\udc45\udc50-\udc6c]"
                        }, {
                            name: "Bopomofo",
                            bmp: "˪˫ㄅ-ㄭㆠ-ㆺ"
                        }, {
                            name: "Brahmi",
                            astral: "\ud804[\udc00-\udc4d\udc52-\udc6f\udc7f]"
                        }, {
                            name: "Braille",
                            bmp: "⠀-⣿"
                        }, {
                            name: "Buginese",
                            bmp: "ᨀ-ᨛ᨞᨟"
                        }, {
                            name: "Buhid",
                            bmp: "ᝀ-ᝓ"
                        }, {
                            name: "Canadian_Aboriginal",
                            bmp: "᐀-ᙿᢰ-ᣵ"
                        }, {
                            name: "Carian",
                            astral: "\ud800[\udea0-\uded0]"
                        }, {
                            name: "Caucasian_Albanian",
                            astral: "\ud801[\udd30-\udd63\udd6f]"
                        }, {
                            name: "Chakma",
                            astral: "\ud804[\udd00-\udd34\udd36-\udd43]"
                        }, {
                            name: "Cham",
                            bmp: "ꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-꩟"
                        }, {
                            name: "Cherokee",
                            bmp: "Ꭰ-Ᏽᏸ-ᏽꭰ-ꮿ"
                        }, {
                            name: "Common",
                            bmp: "\0-@\\x5B-`\\x7B-©«-¹»-¿×÷ʹ-˟˥-˩ˬ-˿ʹ;΅·։؅،؛؜؟ـ۝࣢।॥฿࿕-࿘჻᛫-᛭᜵᜶᠂᠃᠅᳓᳡ᳩ-ᳬᳮ-ᳳᳵᳶ -​‎-⁤⁦-⁰⁴-⁾₀-₎₠-₾℀-℥℧-℩ℬ-ℱℳ-⅍⅏-⅟↉-↋←-⏾␀-␦⑀-⑊①-⟿⤀-⭳⭶-⮕⮘-⮹⮽-⯈⯊-⯑⯬-⯯⸀-⹄⿰-⿻　-〄〆〈-〠〰-〷〼-〿゛゜゠・ー㆐-㆟㇀-㇣㈠-㉟㉿-㋏㍘-㏿䷀-䷿꜀-꜡ꞈ-꞊꠰-꠹꤮ꧏ꭛﴾﴿︐-︙︰-﹒﹔-﹦﹨-﹫\ufeff！-＠［-｀｛-･ｰﾞﾟ￠-￦￨-￮￹-�",
                            astral: "\ud800[\udd00-\udd02\udd07-\udd33\udd37-\udd3f\udd90-\udd9b\uddd0-\uddfc\udee1-\udefb]|\ud82f[\udca0-\udca3]|\ud834[\udc00-\udcf5\udd00-\udd26\udd29-\udd66\udd6a-\udd7a\udd83\udd84\udd8c-\udda9\uddae-\udde8\udf00-\udf56\udf60-\udf71]|\ud835[\udc00-\udc54\udc56-\udc9c\udc9e\udc9f\udca2\udca5\udca6\udca9-\udcac\udcae-\udcb9\udcbb\udcbd-\udcc3\udcc5-\udd05\udd07-\udd0a\udd0d-\udd14\udd16-\udd1c\udd1e-\udd39\udd3b-\udd3e\udd40-\udd44\udd46\udd4a-\udd50\udd52-\udea5\udea8-\udfcb\udfce-\udfff]|\ud83c[\udc00-\udc2b\udc30-\udc93\udca0-\udcae\udcb1-\udcbf\udcc1-\udccf\udcd1-\udcf5\udd00-\udd0c\udd10-\udd2e\udd30-\udd6b\udd70-\uddac\udde6-\uddff\ude01\ude02\ude10-\ude3b\ude40-\ude48\ude50\ude51\udf00-\udfff]|\ud83d[\udc00-\uded2\udee0-\udeec\udef0-\udef6\udf00-\udf73\udf80-\udfd4]|\ud83e[\udc00-\udc0b\udc10-\udc47\udc50-\udc59\udc60-\udc87\udc90-\udcad\udd10-\udd1e\udd20-\udd27\udd30\udd33-\udd3e\udd40-\udd4b\udd50-\udd5e\udd80-\udd91\uddc0]|\udb40[\udc01\udc20-\udc7f]"
                        }, {
                            name: "Coptic",
                            bmp: "Ϣ-ϯⲀ-ⳳ⳹-⳿"
                        }, {
                            name: "Cuneiform",
                            astral: "\ud808[\udc00-\udf99]|\ud809[\udc00-\udc6e\udc70-\udc74\udc80-\udd43]"
                        }, {
                            name: "Cypriot",
                            astral: "\ud802[\udc00-\udc05\udc08\udc0a-\udc35\udc37\udc38\udc3c\udc3f]"
                        }, {
                            name: "Cyrillic",
                            bmp: "Ѐ-҄҇-ԯᲀ-ᲈᴫᵸⷠ-ⷿꙀ-ꚟ︮︯"
                        }, {
                            name: "Deseret",
                            astral: "\ud801[\udc00-\udc4f]"
                        }, {
                            name: "Devanagari",
                            bmp: "ऀ-ॐ॓-ॣ०-ॿ꣠-ꣽ"
                        }, {
                            name: "Duployan",
                            astral: "\ud82f[\udc00-\udc6a\udc70-\udc7c\udc80-\udc88\udc90-\udc99\udc9c-\udc9f]"
                        }, {
                            name: "Egyptian_Hieroglyphs",
                            astral: "\ud80c[\udc00-\udfff]|\ud80d[\udc00-\udc2e]"
                        }, {
                            name: "Elbasan",
                            astral: "\ud801[\udd00-\udd27]"
                        }, {
                            name: "Ethiopic",
                            bmp: "ሀ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙ⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮ"
                        }, {
                            name: "Georgian",
                            bmp: "Ⴀ-ჅჇჍა-ჺჼ-ჿⴀ-ⴥⴧⴭ"
                        }, {
                            name: "Glagolitic",
                            bmp: "Ⰰ-Ⱞⰰ-ⱞ",
                            astral: "\ud838[\udc00-\udc06\udc08-\udc18\udc1b-\udc21\udc23\udc24\udc26-\udc2a]"
                        }, {
                            name: "Gothic",
                            astral: "\ud800[\udf30-\udf4a]"
                        }, {
                            name: "Grantha",
                            astral: "\ud804[\udf00-\udf03\udf05-\udf0c\udf0f\udf10\udf13-\udf28\udf2a-\udf30\udf32\udf33\udf35-\udf39\udf3c-\udf44\udf47\udf48\udf4b-\udf4d\udf50\udf57\udf5d-\udf63\udf66-\udf6c\udf70-\udf74]"
                        }, {
                            name: "Greek",
                            bmp: "Ͱ-ͳ͵-ͷͺ-ͽͿ΄ΆΈ-ΊΌΎ-ΡΣ-ϡϰ-Ͽᴦ-ᴪᵝ-ᵡᵦ-ᵪᶿἀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾Ωꭥ",
                            astral: "\ud800[\udd40-\udd8e\udda0]|\ud834[\ude00-\ude45]"
                        }, {
                            name: "Gujarati",
                            bmp: "ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ"
                        }, {
                            name: "Gurmukhi",
                            bmp: "ਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵ"
                        }, {
                            name: "Han",
                            bmp: "⺀-⺙⺛-⻳⼀-⿕々〇〡-〩〸-〻㐀-䶵一-鿕豈-舘並-龎",
                            astral: "[\ud840-\ud868\ud86a-\ud86c\ud86f-\ud872][\udc00-\udfff]|\ud869[\udc00-\uded6\udf00-\udfff]|\ud86d[\udc00-\udf34\udf40-\udfff]|\ud86e[\udc00-\udc1d\udc20-\udfff]|\ud873[\udc00-\udea1]|\ud87e[\udc00-\ude1d]"
                        }, {
                            name: "Hangul",
                            bmp: "ᄀ-ᇿ〮〯ㄱ-ㆎ㈀-㈞㉠-㉾ꥠ-ꥼ가-힣ힰ-ퟆퟋ-ퟻﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ"
                        }, {
                            name: "Hanunoo",
                            bmp: "ᜠ-᜴"
                        }, {
                            name: "Hatran",
                            astral: "\ud802[\udce0-\udcf2\udcf4\udcf5\udcfb-\udcff]"
                        }, {
                            name: "Hebrew",
                            bmp: "֑-ׇא-תװ-״יִ-זּטּ-לּמּנּסּףּפּצּ-ﭏ"
                        }, {
                            name: "Hiragana",
                            bmp: "ぁ-ゖゝ-ゟ",
                            astral: "𛀁|🈀"
                        }, {
                            name: "Imperial_Aramaic",
                            astral: "\ud802[\udc40-\udc55\udc57-\udc5f]"
                        }, {
                            name: "Inherited",
                            bmp: "̀-ًͯ҅҆-ٰٕ॒॑᪰-᪾᳐-᳔᳒-᳢᳠-᳨᳭᳴᳸᳹᷀-᷵᷻-᷿‌‍⃐-〪⃰-゙゚〭︀-️︠-︭",
                            astral: "\ud800[\uddfd\udee0]|\ud834[\udd67-\udd69\udd7b-\udd82\udd85-\udd8b\uddaa-\uddad]|\udb40[\udd00-\uddef]"
                        }, {
                            name: "Inscriptional_Pahlavi",
                            astral: "\ud802[\udf60-\udf72\udf78-\udf7f]"
                        }, {
                            name: "Inscriptional_Parthian",
                            astral: "\ud802[\udf40-\udf55\udf58-\udf5f]"
                        }, {
                            name: "Javanese",
                            bmp: "ꦀ-꧍꧐-꧙꧞꧟"
                        }, {
                            name: "Kaithi",
                            astral: "\ud804[\udc80-\udcc1]"
                        }, {
                            name: "Kannada",
                            bmp: "ಀ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲ"
                        }, {
                            name: "Katakana",
                            bmp: "ァ-ヺヽ-ヿㇰ-ㇿ㋐-㋾㌀-㍗ｦ-ｯｱ-ﾝ",
                            astral: "𛀀"
                        }, {
                            name: "Kayah_Li",
                            bmp: "꤀-꤭꤯"
                        }, {
                            name: "Kharoshthi",
                            astral: "\ud802[\ude00-\ude03\ude05\ude06\ude0c-\ude13\ude15-\ude17\ude19-\ude33\ude38-\ude3a\ude3f-\ude47\ude50-\ude58]"
                        }, {
                            name: "Khmer",
                            bmp: "ក-៝០-៩៰-៹᧠-᧿"
                        }, {
                            name: "Khojki",
                            astral: "\ud804[\ude00-\ude11\ude13-\ude3e]"
                        }, {
                            name: "Khudawadi",
                            astral: "\ud804[\udeb0-\udeea\udef0-\udef9]"
                        }, {
                            name: "Lao",
                            bmp: "ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟ"
                        }, {
                            name: "Latin",
                            bmp: "A-Za-zªºÀ-ÖØ-öø-ʸˠ-ˤᴀ-ᴥᴬ-ᵜᵢ-ᵥᵫ-ᵷᵹ-ᶾḀ-ỿⁱⁿₐ-ₜKÅℲⅎⅠ-ↈⱠ-ⱿꜢ-ꞇꞋ-ꞮꞰ-ꞷꟷ-ꟿꬰ-ꭚꭜ-ꭤﬀ-ﬆＡ-Ｚａ-ｚ"
                        }, {
                            name: "Lepcha",
                            bmp: "ᰀ-᰷᰻-᱉ᱍ-ᱏ"
                        }, {
                            name: "Limbu",
                            bmp: "ᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-᥏"
                        }, {
                            name: "Linear_A",
                            astral: "\ud801[\ude00-\udf36\udf40-\udf55\udf60-\udf67]"
                        }, {
                            name: "Linear_B",
                            astral: "\ud800[\udc00-\udc0b\udc0d-\udc26\udc28-\udc3a\udc3c\udc3d\udc3f-\udc4d\udc50-\udc5d\udc80-\udcfa]"
                        }, {
                            name: "Lisu",
                            bmp: "ꓐ-꓿"
                        }, {
                            name: "Lycian",
                            astral: "\ud800[\ude80-\ude9c]"
                        }, {
                            name: "Lydian",
                            astral: "\ud802[\udd20-\udd39\udd3f]"
                        }, {
                            name: "Mahajani",
                            astral: "\ud804[\udd50-\udd76]"
                        }, {
                            name: "Malayalam",
                            bmp: "ഁ-ഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿ"
                        }, {
                            name: "Mandaic",
                            bmp: "ࡀ-࡛࡞"
                        }, {
                            name: "Manichaean",
                            astral: "\ud802[\udec0-\udee6\udeeb-\udef6]"
                        }, {
                            name: "Marchen",
                            astral: "\ud807[\udc70-\udc8f\udc92-\udca7\udca9-\udcb6]"
                        }, {
                            name: "Meetei_Mayek",
                            bmp: "ꫠ-꫶ꯀ-꯭꯰-꯹"
                        }, {
                            name: "Mende_Kikakui",
                            astral: "\ud83a[\udc00-\udcc4\udcc7-\udcd6]"
                        }, {
                            name: "Meroitic_Cursive",
                            astral: "\ud802[\udda0-\uddb7\uddbc-\uddcf\uddd2-\uddff]"
                        }, {
                            name: "Meroitic_Hieroglyphs",
                            astral: "\ud802[\udd80-\udd9f]"
                        }, {
                            name: "Miao",
                            astral: "\ud81b[\udf00-\udf44\udf50-\udf7e\udf8f-\udf9f]"
                        }, {
                            name: "Modi",
                            astral: "\ud805[\ude00-\ude44\ude50-\ude59]"
                        }, {
                            name: "Mongolian",
                            bmp: "᠀᠁᠄᠆-᠎᠐-᠙ᠠ-ᡷᢀ-ᢪ",
                            astral: "\ud805[\ude60-\ude6c]"
                        }, {
                            name: "Mro",
                            astral: "\ud81a[\ude40-\ude5e\ude60-\ude69\ude6e\ude6f]"
                        }, {
                            name: "Multani",
                            astral: "\ud804[\ude80-\ude86\ude88\ude8a-\ude8d\ude8f-\ude9d\ude9f-\udea9]"
                        }, {
                            name: "Myanmar",
                            bmp: "က-႟ꧠ-ꧾꩠ-ꩿ"
                        }, {
                            name: "Nabataean",
                            astral: "\ud802[\udc80-\udc9e\udca7-\udcaf]"
                        }, {
                            name: "New_Tai_Lue",
                            bmp: "ᦀ-ᦫᦰ-ᧉ᧐-᧚᧞᧟"
                        }, {
                            name: "Newa",
                            astral: "\ud805[\udc00-\udc59\udc5b\udc5d]"
                        }, {
                            name: "Nko",
                            bmp: "߀-ߺ"
                        }, {
                            name: "Ogham",
                            bmp: " -᚜"
                        }, {
                            name: "Ol_Chiki",
                            bmp: "᱐-᱿"
                        }, {
                            name: "Old_Hungarian",
                            astral: "\ud803[\udc80-\udcb2\udcc0-\udcf2\udcfa-\udcff]"
                        }, {
                            name: "Old_Italic",
                            astral: "\ud800[\udf00-\udf23]"
                        }, {
                            name: "Old_North_Arabian",
                            astral: "\ud802[\ude80-\ude9f]"
                        }, {
                            name: "Old_Permic",
                            astral: "\ud800[\udf50-\udf7a]"
                        }, {
                            name: "Old_Persian",
                            astral: "\ud800[\udfa0-\udfc3\udfc8-\udfd5]"
                        }, {
                            name: "Old_South_Arabian",
                            astral: "\ud802[\ude60-\ude7f]"
                        }, {
                            name: "Old_Turkic",
                            astral: "\ud803[\udc00-\udc48]"
                        }, {
                            name: "Oriya",
                            bmp: "ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୷"
                        }, {
                            name: "Osage",
                            astral: "\ud801[\udcb0-\udcd3\udcd8-\udcfb]"
                        }, {
                            name: "Osmanya",
                            astral: "\ud801[\udc80-\udc9d\udca0-\udca9]"
                        }, {
                            name: "Pahawh_Hmong",
                            astral: "\ud81a[\udf00-\udf45\udf50-\udf59\udf5b-\udf61\udf63-\udf77\udf7d-\udf8f]"
                        }, {
                            name: "Palmyrene",
                            astral: "\ud802[\udc60-\udc7f]"
                        }, {
                            name: "Pau_Cin_Hau",
                            astral: "\ud806[\udec0-\udef8]"
                        }, {
                            name: "Phags_Pa",
                            bmp: "ꡀ-꡷"
                        }, {
                            name: "Phoenician",
                            astral: "\ud802[\udd00-\udd1b\udd1f]"
                        }, {
                            name: "Psalter_Pahlavi",
                            astral: "\ud802[\udf80-\udf91\udf99-\udf9c\udfa9-\udfaf]"
                        }, {
                            name: "Rejang",
                            bmp: "ꤰ-꥓꥟"
                        }, {
                            name: "Runic",
                            bmp: "ᚠ-ᛪᛮ-ᛸ"
                        }, {
                            name: "Samaritan",
                            bmp: "ࠀ-࠭࠰-࠾"
                        }, {
                            name: "Saurashtra",
                            bmp: "ꢀ-ꣅ꣎-꣙"
                        }, {
                            name: "Sharada",
                            astral: "\ud804[\udd80-\uddcd\uddd0-\udddf]"
                        }, {
                            name: "Shavian",
                            astral: "\ud801[\udc50-\udc7f]"
                        }, {
                            name: "Siddham",
                            astral: "\ud805[\udd80-\uddb5\uddb8-\udddd]"
                        }, {
                            name: "SignWriting",
                            astral: "\ud836[\udc00-\ude8b\ude9b-\ude9f\udea1-\udeaf]"
                        }, {
                            name: "Sinhala",
                            bmp: "ංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴",
                            astral: "\ud804[\udde1-\uddf4]"
                        }, {
                            name: "Sora_Sompeng",
                            astral: "\ud804[\udcd0-\udce8\udcf0-\udcf9]"
                        }, {
                            name: "Sundanese",
                            bmp: "ᮀ-ᮿ᳀-᳇"
                        }, {
                            name: "Syloti_Nagri",
                            bmp: "ꠀ-꠫"
                        }, {
                            name: "Syriac",
                            bmp: "܀-܍܏-݊ݍ-ݏ"
                        }, {
                            name: "Tagalog",
                            bmp: "ᜀ-ᜌᜎ-᜔"
                        }, {
                            name: "Tagbanwa",
                            bmp: "ᝠ-ᝬᝮ-ᝰᝲᝳ"
                        }, {
                            name: "Tai_Le",
                            bmp: "ᥐ-ᥭᥰ-ᥴ"
                        }, {
                            name: "Tai_Tham",
                            bmp: "ᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭"
                        }, {
                            name: "Tai_Viet",
                            bmp: "ꪀ-ꫂꫛ-꫟"
                        }, {
                            name: "Takri",
                            astral: "\ud805[\ude80-\udeb7\udec0-\udec9]"
                        }, {
                            name: "Tamil",
                            bmp: "ஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺"
                        }, {
                            name: "Tangut",
                            astral: "𖿠|[\ud81c-\ud820][\udc00-\udfff]|\ud821[\udc00-\udfec]|\ud822[\udc00-\udef2]"
                        }, {
                            name: "Telugu",
                            bmp: "ఀ-ఃఅ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-్ౕౖౘ-ౚౠ-ౣ౦-౯౸-౿"
                        }, {
                            name: "Thaana",
                            bmp: "ހ-ޱ"
                        }, {
                            name: "Thai",
                            bmp: "ก-ฺเ-๛"
                        }, {
                            name: "Tibetan",
                            bmp: "ༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿔࿙࿚"
                        }, {
                            name: "Tifinagh",
                            bmp: "ⴰ-ⵧⵯ⵰⵿"
                        }, {
                            name: "Tirhuta",
                            astral: "\ud805[\udc80-\udcc7\udcd0-\udcd9]"
                        }, {
                            name: "Ugaritic",
                            astral: "\ud800[\udf80-\udf9d\udf9f]"
                        }, {
                            name: "Vai",
                            bmp: "ꔀ-ꘫ"
                        }, {
                            name: "Warang_Citi",
                            astral: "\ud806[\udca0-\udcf2\udcff]"
                        }, {
                            name: "Yi",
                            bmp: "ꀀ-ꒌ꒐-꓆"
                        }])
                    }
                }, {}],
                8: [function(e, t, n) {
                    var a = e("./xregexp");
                    e("./addons/build")(a), e("./addons/matchrecursive")(a), e("./addons/unicode-base")(a), e("./addons/unicode-blocks")(a), e("./addons/unicode-categories")(a), e("./addons/unicode-properties")(a), e("./addons/unicode-scripts")(a), t.exports = a
                }, {
                    "./addons/build": 1,
                    "./addons/matchrecursive": 2,
                    "./addons/unicode-base": 3,
                    "./addons/unicode-blocks": 4,
                    "./addons/unicode-categories": 5,
                    "./addons/unicode-properties": 6,
                    "./addons/unicode-scripts": 7,
                    "./xregexp": 9
                }],
                9: [function(e, t, n) {
                    "use strict";
                    var a = "xregexp",
                        s = {
                            astral: !1,
                            natives: !1
                        },
                        i = {
                            exec: RegExp.prototype.exec,
                            test: RegExp.prototype.test,
                            match: String.prototype.match,
                            replace: String.prototype.replace,
                            split: String.prototype.split
                        },
                        o = {},
                        r = {},
                        l = {},
                        c = [],
                        d = "default",
                        m = "class",
                        u = {
                            default: /\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\d*|x[\dA-Fa-f]{2}|u(?:[\dA-Fa-f]{4}|{[\dA-Fa-f]+})|c[A-Za-z]|[\s\S])|\(\?(?:[:=!]|<[=!])|[?*+]\?|{\d+(?:,\d*)?}\??|[\s\S]/,
                            class: /\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\dA-Fa-f]{2}|u(?:[\dA-Fa-f]{4}|{[\dA-Fa-f]+})|c[A-Za-z]|[\s\S])|[\s\S]/
                        },
                        p = /\$(?:{([\w$]+)}|(\d\d?|[\s\S]))/g,
                        h = void 0 === i.exec.call(/()??/, "")[1],
                        g = void 0 !== /x/.flags,
                        f = {}.toString;

                    function _(e) {
                        var t = !0;
                        try {
                            new RegExp("", e)
                        } catch (e) {
                            t = !1
                        }
                        return t
                    }
                    var b = _("u"),
                        x = _("y"),
                        y = {
                            g: !0,
                            i: !0,
                            m: !0,
                            u: b,
                            y: x
                        };

                    function k(e, t, n, s, i) {
                        var o;
                        if (e[a] = {
                                captureNames: t
                            }, i) return e;
                        if (e.__proto__) e.__proto__ = U.prototype;
                        else
                            for (o in U.prototype) e[o] = U.prototype[o];
                        return e[a].source = n, e[a].flags = s ? s.split("").sort().join("") : s, e
                    }

                    function v(e) {
                        return i.replace.call(e, /([\s\S])(?=[\s\S]*\1)/g, "")
                    }

                    function E(e, t) {
                        if (!U.isRegExp(e)) throw new TypeError("Type RegExp expected");
                        var n = e[a] || {},
                            s = w(e),
                            o = "",
                            r = "",
                            l = null,
                            c = null;
                        return (t = t || {}).removeG && (r += "g"), t.removeY && (r += "y"), r && (s = i.replace.call(s, new RegExp("[" + r + "]+", "g"), "")), t.addG && (o += "g"), t.addY && (o += "y"), o && (s = v(s + o)), t.isInternalOnly || (void 0 !== n.source && (l = n.source), null != n.flags && (c = o ? v(n.flags + o) : n.flags)), e = k(new RegExp(t.source || e.source, s), I(e) ? n.captureNames.slice(0) : null, l, c, t.isInternalOnly)
                    }

                    function S(e) {
                        return parseInt(e, 16)
                    }

                    function T(e, t, n) {
                        return "(" === e.input.charAt(e.index - 1) || ")" === e.input.charAt(e.index + e[0].length) || P(e.input, e.index + e[0].length, n, "[?*+]|{\\d+(?:,\\d*)?}") ? "" : "(?:)"
                    }

                    function w(e) {
                        return g ? e.flags : i.exec.call(/\/([a-z]*)$/i, RegExp.prototype.toString.call(e))[1]
                    }

                    function I(e) {
                        return !(!e[a] || !e[a].captureNames)
                    }

                    function C(e) {
                        return parseInt(e, 10).toString(16)
                    }

                    function R(e, t) {
                        var n, a = e.length;
                        for (n = 0; n < a; ++n)
                            if (e[n] === t) return n;
                        return -1
                    }

                    function P(e, t, n, a) {
                        var s = "\\(\\?#[^)]*\\)",
                            o = "#[^#\\n]*",
                            r = n.indexOf("x") > -1 ? ["\\s", o, s] : [s];
                        return i.test.call(new RegExp("^(?:" + r.join("|") + ")*(?:" + a + ")"), e.slice(t))
                    }

                    function L(e, t) {
                        return f.call(e) === "[object " + t + "]"
                    }

                    function A(e) {
                        for (; e.length < 4;) e = "0" + e;
                        return e
                    }

                    function B(e, t) {
                        var n;
                        if (v(t) !== t) throw new SyntaxError("Invalid duplicate regex flag " + t);
                        for (e = i.replace.call(e, /^\(\?([\w$]+)\)/, (function(e, n) {
                                if (i.test.call(/[gy]/, n)) throw new SyntaxError("Cannot use flag g or y in mode modifier " + e);
                                return t = v(t + n), ""
                            })), n = 0; n < t.length; ++n)
                            if (!y[t.charAt(n)]) throw new SyntaxError("Unknown regex flag " + t.charAt(n));
                        return {
                            pattern: e,
                            flags: t
                        }
                    }

                    function D(e) {
                        var t = {};
                        return L(e, "String") ? (U.forEach(e, /[^\s,]+/, (function(e) {
                            t[e] = !0
                        })), t) : e
                    }

                    function O(e) {
                        if (!/^[\w$]$/.test(e)) throw new Error("Flag must be a single character A-Za-z0-9_$");
                        y[e] = !0
                    }

                    function N(e, t, n, a, s) {
                        for (var i, o, r = c.length, l = e.charAt(n), d = null; r--;)
                            if (!((o = c[r]).leadChar && o.leadChar !== l || o.scope !== a && "all" !== o.scope || o.flag && -1 === t.indexOf(o.flag)) && (i = U.exec(e, o.regex, n, "sticky"))) {
                                d = {
                                    matchLength: i[0].length,
                                    output: o.handler.call(s, i, a, t),
                                    reparse: o.reparse
                                };
                                break
                            } return d
                    }

                    function M(e) {
                        s.astral = e
                    }

                    function G(e) {
                        RegExp.prototype.exec = (e ? o : i).exec, RegExp.prototype.test = (e ? o : i).test, String.prototype.match = (e ? o : i).match, String.prototype.replace = (e ? o : i).replace, String.prototype.split = (e ? o : i).split, s.natives = e
                    }

                    function F(e) {
                        if (null == e) throw new TypeError("Cannot convert null or undefined to object");
                        return e
                    }

                    function U(e, t) {
                        if (U.isRegExp(e)) {
                            if (void 0 !== t) throw new TypeError("Cannot supply flags when copying a RegExp");
                            return E(e)
                        }
                        if (e = void 0 === e ? "" : String(e), t = void 0 === t ? "" : String(t), U.isInstalled("astral") && -1 === t.indexOf("A") && (t += "A"), l[e] || (l[e] = {}), !l[e][t]) {
                            for (var n, a = {
                                    hasNamedCapture: !1,
                                    captureNames: []
                                }, s = d, o = "", r = 0, c = B(e, t), p = c.pattern, h = c.flags; r < p.length;) {
                                do {
                                    (n = N(p, h, r, s, a)) && n.reparse && (p = p.slice(0, r) + n.output + p.slice(r + n.matchLength))
                                } while (n && n.reparse);
                                if (n) o += n.output, r += n.matchLength || 1;
                                else {
                                    var g = U.exec(p, u[s], r, "sticky")[0];
                                    o += g, r += g.length, "[" === g && s === d ? s = m : "]" === g && s === m && (s = d)
                                }
                            }
                            l[e][t] = {
                                pattern: i.replace.call(o, /(?:\(\?:\))+/g, "(?:)"),
                                flags: i.replace.call(h, /[^gimuy]+/g, ""),
                                captures: a.hasNamedCapture ? a.captureNames : null
                            }
                        }
                        var f = l[e][t];
                        return k(new RegExp(f.pattern, f.flags), f.captures, e, t)
                    }
                    U.prototype = new RegExp, U.version = "3.2.0", U._clipDuplicates = v, U._hasNativeFlag = _, U._dec = S, U._hex = C, U._pad4 = A, U.addToken = function(e, t, n) {
                        var a, s = (n = n || {}).optionalFlags;
                        if (n.flag && O(n.flag), s)
                            for (s = i.split.call(s, ""), a = 0; a < s.length; ++a) O(s[a]);
                        c.push({
                            regex: E(e, {
                                addG: !0,
                                addY: x,
                                isInternalOnly: !0
                            }),
                            handler: t,
                            scope: n.scope || d,
                            flag: n.flag,
                            reparse: n.reparse,
                            leadChar: n.leadChar
                        }), U.cache.flush("patterns")
                    }, U.cache = function(e, t) {
                        return r[e] || (r[e] = {}), r[e][t] || (r[e][t] = U(e, t))
                    }, U.cache.flush = function(e) {
                        "patterns" === e ? l = {} : r = {}
                    }, U.escape = function(e) {
                        return i.replace.call(F(e), /[-\[\]{}()*+?.,\\^$|#\s]/g, "\\$&")
                    }, U.exec = function(e, t, n, s) {
                        var i, r, l = "g",
                            c = !1,
                            d = !1;
                        return (c = x && !!(s || t.sticky && !1 !== s)) ? l += "y" : s && (d = !0, l += "FakeY"), t[a] = t[a] || {}, n = n || 0, (r = t[a][l] || (t[a][l] = E(t, {
                            addG: !0,
                            addY: c,
                            source: d ? t.source + "|()" : void 0,
                            removeY: !1 === s,
                            isInternalOnly: !0
                        }))).lastIndex = n, i = o.exec.call(r, e), d && i && "" === i.pop() && (i = null), t.global && (t.lastIndex = i ? r.lastIndex : 0), i
                    }, U.forEach = function(e, t, n) {
                        for (var a, s = 0, i = -1; a = U.exec(e, t, s);) n(a, ++i, e, t), s = a.index + (a[0].length || 1)
                    }, U.globalize = function(e) {
                        return E(e, {
                            addG: !0
                        })
                    }, U.install = function(e) {
                        e = D(e), !s.astral && e.astral && M(!0), !s.natives && e.natives && G(!0)
                    }, U.isInstalled = function(e) {
                        return !!s[e]
                    }, U.isRegExp = function(e) {
                        return "[object RegExp]" === f.call(e)
                    }, U.match = function(e, t, n) {
                        var s, o, r = t.global && "one" !== n || "all" === n,
                            l = (r ? "g" : "") + (t.sticky ? "y" : "") || "noGY";
                        return t[a] = t[a] || {}, o = t[a][l] || (t[a][l] = E(t, {
                            addG: !!r,
                            removeG: "one" === n,
                            isInternalOnly: !0
                        })), s = i.match.call(F(e), o), t.global && (t.lastIndex = "one" === n && s ? s.index + s[0].length : 0), r ? s || [] : s && s[0]
                    }, U.matchChain = function(e, t) {
                        return function e(n, a) {
                            var s = t[a].regex ? t[a] : {
                                    regex: t[a]
                                },
                                i = [];

                            function o(e) {
                                if (s.backref) {
                                    if (!(e.hasOwnProperty(s.backref) || +s.backref < e.length)) throw new ReferenceError("Backreference to undefined group: " + s.backref);
                                    i.push(e[s.backref] || "")
                                } else i.push(e[0])
                            }
                            for (var r = 0; r < n.length; ++r) U.forEach(n[r], s.regex, o);
                            return a !== t.length - 1 && i.length ? e(i, a + 1) : i
                        }([e], 0)
                    }, U.replace = function(e, t, n, s) {
                        var i, r = U.isRegExp(t),
                            l = t.global && "one" !== s || "all" === s,
                            c = (l ? "g" : "") + (t.sticky ? "y" : "") || "noGY",
                            d = t;
                        return r ? (t[a] = t[a] || {}, d = t[a][c] || (t[a][c] = E(t, {
                            addG: !!l,
                            removeG: "one" === s,
                            isInternalOnly: !0
                        }))) : l && (d = new RegExp(U.escape(String(t)), "g")), i = o.replace.call(F(e), d, n), r && t.global && (t.lastIndex = 0), i
                    }, U.replaceEach = function(e, t) {
                        var n, a;
                        for (n = 0; n < t.length; ++n) a = t[n], e = U.replace(e, a[0], a[1], a[2]);
                        return e
                    }, U.split = function(e, t, n) {
                        return o.split.call(F(e), t, n)
                    }, U.test = function(e, t, n, a) {
                        return !!U.exec(e, t, n, a)
                    }, U.uninstall = function(e) {
                        e = D(e), s.astral && e.astral && M(!1), s.natives && e.natives && G(!1)
                    }, U.union = function(e, t, n) {
                        var s, o, r = (n = n || {}).conjunction || "or",
                            l = 0;

                        function c(e, t, n) {
                            var a = o[l - s];
                            if (t) {
                                if (++l, a) return "(?<" + a + ">"
                            } else if (n) return "\\" + (+n + s);
                            return e
                        }
                        if (!L(e, "Array") || !e.length) throw new TypeError("Must provide a nonempty array of patterns to merge");
                        for (var d, m = /(\()(?!\?)|\\([1-9]\d*)|\\[\s\S]|\[(?:[^\\\]]|\\[\s\S])*\]/g, u = [], p = 0; p < e.length; ++p) d = e[p], U.isRegExp(d) ? (s = l, o = d[a] && d[a].captureNames || [], u.push(i.replace.call(U(d.source).source, m, c))) : u.push(U.escape(d));
                        var h = "none" === r ? "" : "|";
                        return U(u.join(h), t)
                    }, o.exec = function(e) {
                        var t, n, s, o = this.lastIndex,
                            r = i.exec.apply(this, arguments);
                        if (r) {
                            if (!h && r.length > 1 && R(r, "") > -1 && (n = E(this, {
                                    removeG: !0,
                                    isInternalOnly: !0
                                }), i.replace.call(String(e).slice(r.index), n, (function() {
                                    var e, t = arguments.length;
                                    for (e = 1; e < t - 2; ++e) void 0 === arguments[e] && (r[e] = void 0)
                                }))), this[a] && this[a].captureNames)
                                for (s = 1; s < r.length; ++s)(t = this[a].captureNames[s - 1]) && (r[t] = r[s]);
                            this.global && !r[0].length && this.lastIndex > r.index && (this.lastIndex = r.index)
                        }
                        return this.global || (this.lastIndex = o), r
                    }, o.test = function(e) {
                        return !!o.exec.call(this, e)
                    }, o.match = function(e) {
                        var t;
                        if (U.isRegExp(e)) {
                            if (e.global) return t = i.match.apply(this, arguments), e.lastIndex = 0, t
                        } else e = new RegExp(e);
                        return o.exec.call(e, F(this))
                    }, o.replace = function(e, t) {
                        var n, s, o, r = U.isRegExp(e);
                        return r ? (e[a] && (s = e[a].captureNames), n = e.lastIndex) : e += "", o = L(t, "Function") ? i.replace.call(String(this), e, (function() {
                            var n, a = arguments;
                            if (s)
                                for (a[0] = new String(a[0]), n = 0; n < s.length; ++n) s[n] && (a[0][s[n]] = a[n + 1]);
                            return r && e.global && (e.lastIndex = a[a.length - 2] + a[0].length), t.apply(void 0, a)
                        })) : i.replace.call(null == this ? this : String(this), e, (function() {
                            var e = arguments;
                            return i.replace.call(String(t), p, (function(t, n, a) {
                                var i;
                                if (n) {
                                    if ((i = +n) <= e.length - 3) return e[i] || "";
                                    if ((i = s ? R(s, n) : -1) < 0) throw new SyntaxError("Backreference to undefined group " + t);
                                    return e[i + 1] || ""
                                }
                                if ("$" === a) return "$";
                                if ("&" === a || 0 == +a) return e[0];
                                if ("`" === a) return e[e.length - 1].slice(0, e[e.length - 2]);
                                if ("'" === a) return e[e.length - 1].slice(e[e.length - 2] + e[0].length);
                                if (a = +a, !isNaN(a)) {
                                    if (a > e.length - 3) throw new SyntaxError("Backreference to undefined group " + t);
                                    return e[a] || ""
                                }
                                throw new SyntaxError("Invalid token " + t)
                            }))
                        })), r && (e.global ? e.lastIndex = 0 : e.lastIndex = n), o
                    }, o.split = function(e, t) {
                        if (!U.isRegExp(e)) return i.split.apply(this, arguments);
                        var n, a = String(this),
                            s = [],
                            o = e.lastIndex,
                            r = 0;
                        return t = (void 0 === t ? -1 : t) >>> 0, U.forEach(a, e, (function(e) {
                            e.index + e[0].length > r && (s.push(a.slice(r, e.index)), e.length > 1 && e.index < a.length && Array.prototype.push.apply(s, e.slice(1)), n = e[0].length, r = e.index + n)
                        })), r === a.length ? i.test.call(e, "") && !n || s.push("") : s.push(a.slice(r)), e.lastIndex = o, s.length > t ? s.slice(0, t) : s
                    }, U.addToken(/\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\dA-Fa-f]{4}|{[\dA-Fa-f]+})|x(?![\dA-Fa-f]{2}))/, (function(e, t) {
                        if ("B" === e[1] && t === d) return e[0];
                        throw new SyntaxError("Invalid escape " + e[0])
                    }), {
                        scope: "all",
                        leadChar: "\\"
                    }), U.addToken(/\\u{([\dA-Fa-f]+)}/, (function(e, t, n) {
                        var a = S(e[1]);
                        if (a > 1114111) throw new SyntaxError("Invalid Unicode code point " + e[0]);
                        if (a <= 65535) return "\\u" + A(C(a));
                        if (b && n.indexOf("u") > -1) return e[0];
                        throw new SyntaxError("Cannot use Unicode code point above \\u{FFFF} without flag u")
                    }), {
                        scope: "all",
                        leadChar: "\\"
                    }), U.addToken(/\[(\^?)\]/, (function(e) {
                        return e[1] ? "[\\s\\S]" : "\\b\\B"
                    }), {
                        leadChar: "["
                    }), U.addToken(/\(\?#[^)]*\)/, T, {
                        leadChar: "("
                    }), U.addToken(/\s+|#[^\n]*\n?/, T, {
                        flag: "x"
                    }), U.addToken(/\./, (function() {
                        return "[\\s\\S]"
                    }), {
                        flag: "s",
                        leadChar: "."
                    }), U.addToken(/\\k<([\w$]+)>/, (function(e) {
                        var t = isNaN(e[1]) ? R(this.captureNames, e[1]) + 1 : +e[1],
                            n = e.index + e[0].length;
                        if (!t || t > this.captureNames.length) throw new SyntaxError("Backreference to undefined group " + e[0]);
                        return "\\" + t + (n === e.input.length || isNaN(e.input.charAt(n)) ? "" : "(?:)")
                    }), {
                        leadChar: "\\"
                    }), U.addToken(/\\(\d+)/, (function(e, t) {
                        if (!(t === d && /^[1-9]/.test(e[1]) && +e[1] <= this.captureNames.length) && "0" !== e[1]) throw new SyntaxError("Cannot use octal escape or backreference to undefined group " + e[0]);
                        return e[0]
                    }), {
                        scope: "all",
                        leadChar: "\\"
                    }), U.addToken(/\(\?P?<([\w$]+)>/, (function(e) {
                        if (!isNaN(e[1])) throw new SyntaxError("Cannot use integer as capture name " + e[0]);
                        if ("length" === e[1] || "__proto__" === e[1]) throw new SyntaxError("Cannot use reserved word as capture name " + e[0]);
                        if (R(this.captureNames, e[1]) > -1) throw new SyntaxError("Cannot use same name for multiple groups " + e[0]);
                        return this.captureNames.push(e[1]), this.hasNamedCapture = !0, "("
                    }), {
                        leadChar: "("
                    }), U.addToken(/\((?!\?)/, (function(e, t, n) {
                        return n.indexOf("n") > -1 ? "(?:" : (this.captureNames.push(null), "(")
                    }), {
                        optionalFlags: "n",
                        leadChar: "("
                    }), t.exports = U
                }, {}]
            }, {}, [8])(8)
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "4HL6bMM3",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\async-text-field\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\async-text-field\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\util-components\\\\async-text-field\\\\index.js\\" "],["text","\\n"],["append",["unknown",["sourceTxtObserver"]],false],["text","\\n"],["append",["unknown",["currentTxtObserver"]],false],["text","\\n"],["append",["unknown",["cancelEditTriggerObs"]],false],["text","\\n\\n"],["append",["unknown",["isEditingObserver"]],false],["text","\\n"],["block",["if"],[["get",["isEditing"]]],null,11,5],["text"," "],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["helper",["uikit-spinner"],null,[["width","height"],["30px","30px"]]],false],["text","\\n    "]],"locals":[]},{"statements":[["text","      "],["append",["unknown",["placeholderTxt"]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["placeholderTxt"]]],null,1,0]],"locals":[]},{"statements":[["text","      "],["append",["helper",["concat"],[["get",["displayPrefix"]],["get",["currentTxt"]],["get",["displayPostfix"]]],null],false],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","begin-edit-btn-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","begin-edit-btn"],["flush-element"],["text","\\n        "],["append",["helper",["generic-button"],null,[["baseImgPath","overImgPath","downImgPath","onClick"],["/fe/lol-clash/assets/images/buttons/button-edit.png","/fe/lol-clash/assets/images/buttons/button-edit-over.png","/fe/lol-clash/assets/images/buttons/button-edit-down.png",["helper",["action"],[["get",[null]],"beginEdit"],null]]]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\n"],["block",["if"],[["get",["canEdit"]]],null,4],["text","\\n  "],["open-element","div",[]],["static-attr","class","display"],["flush-element"],["text","\\n"],["block",["if"],[["get",["currentTxt"]]],null,3,2],["text","  "],["close-element"],["text","\\n\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","loading-spinner"],["flush-element"],["text","\\n      "],["append",["helper",["uikit-spinner"],null,[["width","height"],["30px","30px"]]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n              "],["open-element","p",[]],["flush-element"],["append",["helper",["if"],[["get",["errorTxt"]],["get",["errorTxt"]],["get",["validMsg"]]],null],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["right","system"]],7]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","validation-indicator"],["flush-element"],["text","\\n        "],["open-element","img",[]],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/images/",["helper",["if"],[["get",["isValid"]],"checkmark","xmark"],null],".png"]]],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["currentTxt"]]],null,8],["text","      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-comet-border",[]],["static-attr","class","clash-button-tutorial-animation"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["edit-input ",["helper",["if"],[["get",["currentTxt"]],"has-txt"],null]," ",["helper",["if"],[["get",["isValid"]],"valid","invalid"],null]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["isCometBorderActive"]]],null,10],["text","    "],["open-element","lol-uikit-flat-input",[]],["flush-element"],["text","\\n      "],["append",["helper",["input"],null,[["key-up","insert-newline","focus-out","escape-press","placeholder","disabled","autofocus","value","maxlength","disabled"],["onKeyUp","confirmEdit","unfocus","cancelEdit",["get",["placeholderTxt"]],["get",["isEditCallInProgress"]],true,["helper",["if"],[["get",["currentTxt"]],["get",["currentTxt"]],""],null],["get",["maxLength"]],["get",["isDisabled"]]]]],false],["text","\\n    "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["displayValidationIndicators"]]],null,9],["text","  "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["isEditCallInProgress"]]],null,6],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(546);
            var s = n(9);
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-ticket-select-modal"],
                layout: n(547),
                clashService: a.Ember.inject.service("clash"),
                premiumTicketsEnabled: a.Ember.computed.alias("clashService.premiumTicketsEnabled"),
                currentBuyin: 0,
                buyInOptions: [],
                buyInOptionsPremium: [],
                rosterId: "",
                entryFee: 1,
                availableTickets: {},
                isLockedIn: !1,
                isBuyback: !1,
                isTicketOffer: !1,
                titleText: null,
                descriptionText: null,
                callbacks: {},
                onTicketSelected: null,
                ticketQuantityLeft: null,
                ticketQuantityRight: null,
                ticketTypeLeft: null,
                ticketTypeRight: null,
                selectedQuantity: 0,
                selectedTicketType: null,
                isRightTicketEnabled: !0,
                isTicketQuantityLeftValid: a.Ember.computed("ticketQuantityLeft", (function() {
                    return a.Util.isNumberOk(this.get("ticketQuantityLeft"))
                })),
                isTicketQuantityRightValid: a.Ember.computed("ticketQuantityRight", (function() {
                    return a.Util.isNumberOk(this.get("ticketQuantityRight"))
                })),
                currentBuyinObserver: a.Ember.computed("buyInOptions.[]", "buyInOptionsPremium.[]", "premiumTicketsEnabled", (function() {
                    this._calculateBuyinOptions(this.get("buyInOptions"), this.get("buyInOptionsPremium"))
                })),
                selectedQuantityObserver: a.Ember.computed("entryFee", "selectedQuantity", "callbacks.[]", (function() {
                    const e = this.get("selectedQuantity") >= this.get("entryFee"),
                        t = this.get("callbacks");
                    e && t.enableAcceptButton ? t.enableAcceptButton() : !e && t.disableAcceptButton && t.disableAcceptButton()
                })),
                isTicketSelectionVisible: a.Ember.computed("isBuyback", "isTicketOffer", (function() {
                    const e = this.get("isBuyback");
                    return this.get("isTicketOffer") || e
                })),
                _calculateBuyinOptions(e, t) {
                    const n = this.get("premiumTicketsEnabled");
                    this.get("isTicketOffer") && !n ? this.set("isRightTicketEnabled", !1) : this.set("isRightTicketEnabled", !0);
                    const a = e ? e.filter((e => 0 !== Number(e))) : [],
                        i = t ? t.filter((e => 0 !== Number(e))) : [];
                    this.set("ticketTypeLeft", s.TicketType.BASIC), a.length ? this.set("ticketQuantityLeft", a[0]) : this.set("ticketQuantityLeft", 1), n ? (this.set("ticketTypeRight", s.TicketType.PREMIUM), i.length ? this.set("ticketQuantityRight", i[0]) : this.set("ticketQuantityRight", 1)) : (this.set("ticketTypeRight", s.TicketType.BASIC), a.length <= 1 ? this.set("ticketQuantityRight", 0) : this.set("ticketQuantityRight", a[1]))
                },
                actions: {
                    onClick(e, t) {
                        this.set("selectedQuantity", e), this.set("selectedTicketType", t);
                        const n = this.get("onTicketSelected");
                        n && n(e, t)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "Ia41rUe3",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-select-modal\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-select-modal\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-select-modal\\\\index.js\\" "],["text","\\n"],["append",["unknown",["selectedQuantityObserver"]],false],["text","\\n"],["append",["unknown",["currentBuyinObserver"]],false],["text","\\n"],["open-element","lol-uikit-content-block",[]],["static-attr","class","clash-ticket-select-dialog"],["static-attr","type","dialog-small"],["flush-element"],["text","\\n  "],["open-element","h4",[]],["static-attr","class","clash-ticket-select-title-text"],["flush-element"],["append",["unknown",["titleText"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-ticket-select-description-text"],["flush-element"],["text","\\n    "],["append",["unknown",["descriptionText"]],false],["text","\\n  "],["close-element"],["text","\\n"],["block",["if"],[["get",["isTicketSelectionVisible"]]],null,2],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","            "],["append",["helper",["ticket-select-modal-element"],null,[["textCssClass","ticketQuantity","ticketType","selectedQuantity","selectedTicketType","availableTickets","onClick","isEnabled"],["right",["get",["ticketQuantityRight"]],["get",["ticketTypeRight"]],["get",["selectedQuantity"]],["get",["selectedTicketType"]],["get",["availableTickets"]],["helper",["action"],[["get",[null]],"onClick"],null],["get",["isRightTicketEnabled"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["append",["helper",["ticket-select-modal-element"],null,[["textCssClass","ticketQuantity","ticketType","selectedQuantity","selectedTicketType","availableTickets","onClick"],["left",["get",["ticketQuantityLeft"]],["get",["ticketTypeLeft"]],["get",["selectedQuantity"]],["get",["selectedTicketType"]],["get",["availableTickets"]],["helper",["action"],[["get",[null]],"onClick"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-ticket-selection-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-ticket-selection-title"],["flush-element"],["append",["unknown",["tra","clash_ticket_offer_select_title"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-ticket-selection-contents"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-ticket-element left"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isTicketQuantityLeftValid"]]],null,1],["text","        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-ticket-element right"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isTicketQuantityRightValid"]]],null,0],["text","        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(549);
            var s = n(9);
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-ticket-select-modal-element"],
                layout: n(550),
                ticketQuantity: null,
                ticketType: s.TicketType.BASIC,
                selectedQuantity: null,
                selectedTicketType: null,
                availableTickets: {},
                isEnabled: !0,
                clashService: a.Ember.inject.service("clash"),
                premiumTicketsEnabled: a.Ember.computed.alias("clashService.premiumTicketsEnabled"),
                availableTicketsDisplay: a.Ember.computed("availableTickets", "ticketType", (function() {
                    const e = this.get("ticketType");
                    return (this.get("availableTickets") || {})[e] || 0
                })),
                isSelectable: a.Ember.computed("availableTicketsDisplay", "isEnabled", (function() {
                    return this.get("isEnabled") && this.get("availableTicketsDisplay") > 0
                })),
                ticketTitleTxt: a.Ember.computed("ticketQuantity", "ticketType", "premiumTicketsEnabled", (function() {
                    const e = this.get("ticketQuantity"),
                        t = this.get("ticketType"),
                        n = this.get("premiumTicketsEnabled") ? t : e;
                    return e ? this.get(`tra.clash_tickets_${n}`) : ""
                })),
                isSelected: a.Ember.computed("selectedQuantity", "ticketQuantity", "selectedTicketType", "ticketType", "isSelectable", (function() {
                    const e = this.get("selectedQuantity"),
                        t = this.get("selectedTicketType"),
                        n = this.get("ticketQuantity"),
                        a = this.get("ticketType");
                    return this.get("isSelectable") && String(e) === String(n) && t === a
                })),
                baseBgPath: a.Ember.computed("isSelected", "ticketQuantity", "premiumTicketsEnabled", (function() {
                    const e = this.get("isSelected"),
                        t = this.get("ticketQuantity"),
                        n = this.get("premiumTicketsEnabled"),
                        a = (this.get("ticketType") || "").toLowerCase();
                    let s = t;
                    return n && (s = a), e ? `/fe/lol-clash/assets/images/ticket-selector/clash-ticket-${s}-over.png` : `/fe/lol-clash/assets/images/ticket-selector/clash-ticket-${s}.png`
                })),
                overBgPath: a.Ember.computed("isSelected", "ticketQuantity", "premiumTicketsEnabled", (function() {
                    const e = this.get("isSelected"),
                        t = this.get("ticketQuantity"),
                        n = this.get("premiumTicketsEnabled"),
                        a = (this.get("ticketType") || "").toLowerCase();
                    let s = t;
                    return n && (s = a), e ? `/fe/lol-clash/assets/images/ticket-selector/clash-ticket-${s}.png` : `/fe/lol-clash/assets/images/ticket-selector/clash-ticket-${s}-over.png`
                })),
                downBgPath: a.Ember.computed("isSelected", "ticketQuantity", "premiumTicketsEnabled", (function() {
                    const e = this.get("ticketQuantity"),
                        t = this.get("premiumTicketsEnabled"),
                        n = (this.get("ticketType") || "").toLowerCase();
                    let a = e;
                    return t && (a = n), `/fe/lol-clash/assets/images/ticket-selector/clash-ticket-${a}-down.png`
                })),
                overImgPath: a.Ember.computed("isSelected", "ticketQuantity", (function() {
                    return this.get("isSelected") ? "/fe/lol-clash/assets/images/ticket-selector/icon-return-arrow.png" : ""
                })),
                bottomImgPath: a.Ember.computed("isSelected", (function() {
                    return this.get("isSelected") ? "/fe/lol-clash/assets/images/ticket-selector/checkmark.png" : ""
                })),
                overStyle: a.Ember.computed("isSelected", (function() {
                    return this.get("isSelected") ? "opacity: 0.3" : ""
                })),
                onDidInsertElement: a.Ember.on("didInsertElement", (function() {})),
                actions: {
                    onClick() {
                        this.get("isSelected") ? this.sendAction("onClick", 0, null) : this.sendAction("onClick", this.get("ticketQuantity"), this.get("ticketType"))
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "5e3QSeA1",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-select-modal\\\\ticket-select-modal-element\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-select-modal\\\\ticket-select-modal-element\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-select-modal\\\\ticket-select-modal-element\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-ticket-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-ticket-title"],["flush-element"],["append",["unknown",["ticketTitleTxt"]],false],["close-element"],["text","\\n  "],["append",["helper",["generic-button"],null,[["onClick","baseBgPath","overBgPath","downBgPath","disabledBgPath","overStyle","disabledStyle","iconSizeModifier","onClickSound","onHoverSound","isEnabled","canBeSelected"],[["helper",["action"],[["get",[null]],"onClick"],null],["get",["baseBgPath"]],["get",["overBgPath"]],["get",["downBgPath"]],["get",["baseBgPath"]],["get",["overStyle"]],"-webkit-filter: grayscale(100%);opacity: 0.5",1,"button-circlegold-click","button-circlegold-hover",["get",["isSelectable"]],["get",["isSelectable"]]]]],false],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-ticket-bottom-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["bottomImgPath"]]],null,1,0],["text","  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["unknown",["availableTicketsDisplay"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","img",[]],["static-attr","class","clash-ticket-bottom-image"],["dynamic-attr","src",["concat",[["unknown",["bottomImgPath"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(552);
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-selector-palette"],
                layout: n(553),
                target: null,
                targetOffset: null,
                caretPlacement: .5,
                items: [],
                noPadding: !1,
                elementSelectSound: null,
                widthOverride: null,
                onDidInsertElement: a.Ember.on("didInsertElement", (function() {
                    const e = this.get("target");
                    if (!e) return void a.logger.warning("selector-palette - no target specified");
                    const t = this.$(),
                        n = this.get("styleOverride");
                    t.attr("style", n);
                    const s = e.getBoundingClientRect(),
                        i = t.outerWidth();
                    this.$(".caret").css("margin-left", .5 * i - 13);
                    const o = s.left + .5 * (s.width - i),
                        r = this.get("targetOffset") || {
                            x: 0,
                            y: 0
                        };
                    t.css({
                        left: o + r.x,
                        top: s.bottom + r.y
                    });
                    const l = this.get("items");
                    for (let e = 0; e < l.length; ++e) {
                        const t = l[e];
                        t.isEnabled = !1 !== t.isEnabled, this.get("noPadding") && (t.noPadding = !0), this.$("#option-" + e).append(t.element)
                    }
                })),
                styleOverride: a.Ember.computed("widthOverride", (function() {
                    const e = parseInt(this.get("widthOverride"));
                    return e ? `width: ${e}px;` : null
                })),
                actions: {
                    selectItem(e) {
                        e.isEnabled && (this.get("elementSelectSound") && a.AudioManager.playAudio(this.get("elementSelectSound")), e._internalCallback())
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "Rz/V2p7P",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\selector-palette\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\selector-palette\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\selector-palette\\\\index.js\\" "],["text","\\n"],["open-element","svg",[]],["static-attr","class","caret"],["static-attr","viewBox","0 0 26 16"],["flush-element"],["text","\\n"],["text","  "],["open-element","path",[]],["static-attr","stroke","#463714"],["static-attr","stroke-width","2"],["static-attr","fill","#010a13"],["static-attr","d","M0,16 L13,2 L26,16"],["static-attr","vector-effect","non-scaling-stroke"],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","option-container"],["dynamic-attr","style",["helper",["if"],[["get",["styleOverride"]],["get",["styleOverride"]]],null],null],["flush-element"],["text","\\n"],["block",["each"],[["get",["items"]]],null,0],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["dynamic-attr","id",["concat",["option-",["get",["idx"]]]]],["dynamic-attr","class",["concat",["option ",["helper",["if"],[["get",["item","noPadding"]],"no-padding"],null]," ",["helper",["if"],[["get",["item","isEnabled"]],"enabled"],null]]]],["modifier",["action"],[["get",[null]],"selectItem",["get",["item"]]]],["flush-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":["item","idx"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(555)) && a.__esModule ? a : {
                    default: a
                },
                o = n(556),
                r = n(9);
            n(557), e.exports = s.Ember.Component.extend(i.default, {
                classNames: ["tournament-scouting"],
                layout: n(558),
                clashService: s.Ember.inject.service("clash"),
                telemetryService: s.Ember.inject.service("telemetry"),
                summonerService: s.Ember.inject.service("summoner"),
                scoutingService: s.Ember.inject.service("scouting"),
                tournament: s.Ember.computed.alias("clashService.tournament"),
                localPlayer: s.Ember.computed.alias("clashService.localPlayer"),
                localRoster: s.Ember.computed.alias("localPlayer.roster"),
                championSummary: s.Ember.computed.alias("scoutingService.championSummary"),
                isAramQueue: s.Ember.computed.alias("tournament.isAramQueue"),
                scoutingParamsApplied: !1,
                tournamentId: -1,
                rosterId: -1,
                summonerNames: "",
                scoutingParamsObserver: s.Ember.on("init", s.Ember.observer("scoutingParams", (function() {
                    const e = this.get("scoutingParams");
                    e && (this.get("scoutingParamsApplied") || (this.set("scoutingParamsApplied", !0), e.tournament && e.roster ? this.initializeScoutingForTourneyObjects(e.tournament, e.roster) : s.Util.isNumberOk(e.tournamentId) && s.Util.isNumberOk(e.rosterId) && e.tournamentId > r.INVALID_TOURNAMENT_ID && e.rosterId > r.INVALID_ROSTER_ID && this.initializeScoutingForTourneyIds(e.tournamentId, e.rosterId)))
                }))),
                onDidInsertElement: s.Ember.on("didInsertElement", s.Ember.observer("localPlayer.bracket", "roster", "championSummary", (function() {
                    const e = this.get("scoutingParams");
                    if (!e) return;
                    const t = this.get("localPlayer.bracket");
                    if (!t) return;
                    const n = this.get("roster");
                    if (!n) return;
                    this.get("championSummary") && (this.initializeNavBar(e), this.initializeServiceData(e, t, n))
                }))),
                initializeNavBar: function(e) {
                    const t = (e, t, n, a, i) => s.Ember.Object.create({
                            mode: e,
                            isEnabled: t,
                            displayName: n,
                            tooltipText: a,
                            disabledTooltipText: i
                        }),
                        n = t(o.MODE_RANKED, e.rankedEnabled, this.get("tra.clash_scouting_tab_ranked"), null, this.get("tra.clash_scouting_tab_ranked_tooltip_disabled")),
                        a = t(o.MODE_MASTERY, e.masteryEnabled, this.get("tra.clash_scouting_tab_mastery"), this.get("tra.clash_scouting_tab_mastery_tooltip_enabled"), this.get("tra.clash_scouting_tab_mastery_tooltip_disabled")),
                        i = t(o.MODE_HISTORY, e.historyEnabled, this.get("tra.clash_scouting_tab_history"), null, this.get("tra.clash_scouting_tab_history_tooltip_disabled"));
                    this.set("modeInfos", [n, a, i]), e.rankedEnabled ? this.navigateToTab(o.MODE_RANKED) : e.masteryEnabled ? this.navigateToTab(o.MODE_MASTERY) : e.historyEnabled && this.navigateToTab(o.MODE_HISTORY)
                },
                initializeServiceData: function(e, t, n) {
                    const a = this.get("scoutingService");
                    (e.rankedEnabled || e.masteryEnabled || e.historyEnabled) && a.getAllStats(t, n, this.get("rankedDataProgress"), this.get("masteryDataProgress"), this.get("historyDataProgress"))
                },
                initializeScoutingForTourneyObjects: function(e, t) {
                    this.set("tournament", e);
                    const n = this.get("clashService");
                    n.setSelectedTournamentId(e.id), n.getRoster(t.rosterId).then((e => {
                        e.members && (t.tier = e.tier, t.members = e.members, this.initializeRoster(t).then((() => this.set("roster", t))))
                    }))
                },
                initializeScoutingForTourneyIds: function(e, t) {
                    const n = this.get("clashService");
                    n.setSelectedTournamentId(e), n.getRoster(t).then((e => {
                        e.members && this.initializeRoster(e).then((() => this.set("roster", e)))
                    }))
                },
                initializeRoster: function(e) {
                    this.set("rosterHeaderInfo", {
                        rosterId: e.rosterId,
                        name: e.name,
                        shortName: e.shortName,
                        logoId: e.logo,
                        logoColorId: e.logoColor
                    });
                    const t = this.get("summonerService"),
                        n = s._.map(e.members, (e => e.summonerId));
                    return t.getSummonersByIds(n).then((t => {
                        for (let n = 0; n < e.members.length; n++)
                            for (let a = 0; a < t.length; a++) {
                                const s = e.members[n],
                                    i = t[a];
                                if (s.summonerId === i.summonerId) {
                                    s.puuid = i.puuid, s.summonerName = i.displayName, s.gameName = i.gameName, s.tagLine = i.tagLine;
                                    break
                                }
                            }
                    }))
                },
                tier: s.Ember.computed("localRoster.tier", (function() {
                    return this.get("localRoster.tier")
                })),
                rosterHeaderPickOrder: s.Ember.computed("roster.rosterId", "localPlayer.bracket", "isAramQueue", (function() {
                    const e = this.get("roster.rosterId"),
                        t = this.get("localPlayer.bracket");
                    if (!this.get("isAramQueue") && e && t) {
                        const n = t.matches;
                        for (const t of n)
                            if (t) {
                                if (t.rosterId1 === e) return 1;
                                if (t.rosterId2 === e) return 2
                            }
                    }
                    return 0
                })),
                isModeRanked: s.Ember.computed("scoutingMode", (function() {
                    return this.get("scoutingMode") === o.MODE_RANKED
                })),
                isModeMastery: s.Ember.computed("scoutingMode", (function() {
                    return this.get("scoutingMode") === o.MODE_MASTERY
                })),
                isModeHistory: s.Ember.computed("scoutingMode", (function() {
                    return this.get("scoutingMode") === o.MODE_HISTORY
                })),
                navigateToTab: function(e) {
                    this.get("scoutingParams") && this.get("scoutingMode") !== e && (this.set("scoutingMode", e), this.get("telemetryService").sendEvent("ScoutingTab", {
                        tab: e
                    }))
                },
                actions: {
                    selectMode(e) {
                        this.navigateToTab(e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(556);
            const i = function(e) {
                    e.get("isDataCompleted") || function(e) {
                        const {
                            rosterProgress: t
                        } = e;
                        for (const e in t) {
                            const n = t[e];
                            for (const e in n)
                                if (!n[e].completed) return !1
                        }
                        return !0
                    }(e) ? (e.set("isLoadCompleted", !0), e.set("isDataCompleted", !0)) : e.get("gracePeriodOver") && e.set("isLoadCompleted", !0)
                },
                o = function(e, t, n) {
                    const a = e.get("rosterProgress");
                    let s = a[t];
                    s || (s = {}, a[t] = s);
                    let i = s[n];
                    return i || (i = {}, s[n] = i), i
                },
                r = a.Ember.Object.extend({
                    mode: null,
                    timerInitialized: !1,
                    gracePeriodOver: !1,
                    rosterProgress: null,
                    isLoadCompleted: !1,
                    isDataCompleted: !1,
                    init: function() {
                        this._super(), this.set("rosterProgress", {})
                    },
                    initializeSummonerProgress: function(e, t) {
                        for (let n = 0; n < t.length; n++) {
                            const a = t[n],
                                s = o(this, e, a);
                            s.isInProgress = !1, s.completed = !1
                        }
                    },
                    isStepInProgress: function(e, t) {
                        const n = o(this, e, t);
                        return Boolean(n.isInProgress)
                    },
                    markStepInProgress: function(e, t) {
                        o(this, e, t).isInProgress = !0
                    },
                    markStepCompleted: function(e, t) {
                        const n = o(this, e, t);
                        n.isInProgress = !1, n.completed = !0, i(this)
                    },
                    setGracePeriodOver() {
                        this.set("gracePeriodOver", !0), i(this)
                    }
                }),
                l = function(e) {
                    return r.create({
                        mode: e
                    })
                },
                c = function(e, t) {
                    e !== t.get("mode") || t.get("timerInitialized") || (t.set("timerInitialized", !0), setTimeout((() => t.setGracePeriodOver()), 3e3))
                };
            e.exports = a.Ember.Mixin.create({
                initializationObserver: a.Ember.on("init", a.Ember.observer("roster", "scoutingMode", (function() {
                    this.get("rankedDataProgress") || this.set("rankedDataProgress", l(s.MODE_RANKED)), this.get("masteryDataProgress") || this.set("masteryDataProgress", l(s.MODE_MASTERY)), this.get("historyDataProgress") || this.set("historyDataProgress", l(s.MODE_HISTORY));
                    if (!this.get("roster")) return;
                    const e = this.get("scoutingMode");
                    c(e, this.get("rankedDataProgress")), c(e, this.get("masteryDataProgress")), c(e, this.get("historyDataProgress"))
                }))),
                isLoading: a.Ember.computed("roster", "scoutingMode", "rankedDataProgress.isLoadCompleted", "masteryDataProgress.isLoadCompleted", "historyDataProgress.isLoadCompleted", (function() {
                    if (!this.get("roster")) return !0;
                    const e = this.get("scoutingMode"),
                        t = this.get("rankedDataProgress.isLoadCompleted"),
                        n = this.get("masteryDataProgress.isLoadCompleted"),
                        a = this.get("historyDataProgress.isLoadCompleted");
                    return e === s.MODE_RANKED && !t || (e === s.MODE_MASTERY && !n || e === s.MODE_HISTORY && !a)
                }))
            })
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.MODE_RANKED = t.MODE_MASTERY = t.MODE_HISTORY = t.LEAGUE_QUEUE_TEAM5V5 = t.LEAGUE_QUEUE_TEAM3V3 = t.LEAGUE_QUEUE_SOLO = t.LEAGUE_QUEUE_FLEX = void 0;
            t.MODE_RANKED = "RANKED";
            t.MODE_MASTERY = "MASTERY";
            t.MODE_HISTORY = "HISTORY";
            t.LEAGUE_QUEUE_SOLO = "RANKED_SOLO_5x5";
            t.LEAGUE_QUEUE_FLEX = "RANKED_FLEX_SR";
            t.LEAGUE_QUEUE_TEAM3V3 = "TEAM3V3";
            t.LEAGUE_QUEUE_TEAM5V5 = "TEAM5V5"
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "PcTVADKM",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","tournament-scouting-header"],["flush-element"],["text","\\n\\n  "],["append",["helper",["roster-details-visual"],null,[["name","shortName","logoId","logoColorId","tier","pickOrder"],[["get",["rosterHeaderInfo","name"]],["get",["rosterHeaderInfo","shortName"]],["get",["rosterHeaderInfo","logoId"]],["get",["rosterHeaderInfo","logoColorId"]],["get",["tier"]],["get",["rosterHeaderPickOrder"]]]]],false],["text","\\n\\n  "],["comment"," NAV BAR "],["text","\\n  "],["open-element","div",[]],["static-attr","class","tournament-scouting-nav-container"],["flush-element"],["text","\\n    "],["append",["helper",["scouting-nav"],null,[["modeInfos","selectedMode","selectMode"],[["get",["modeInfos"]],["get",["scoutingMode"]],["helper",["action"],[["get",[null]],"selectMode"],null]]]],false],["text","\\n  "],["close-element"],["text","\\n\\n"],["close-element"],["text","\\n\\n\\n"],["open-element","div",[]],["static-attr","class","tournament-scouting-members"],["flush-element"],["text","\\n"],["block",["each"],[["get",["roster","members"]]],null,5],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["isLoading"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","loading-spinner"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","tournament-scouting-members-separator"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["append",["helper",["scouting-member-history"],null,[["rosterMember","dataProgress"],[["get",["rosterMember"]],["get",["historyDataProgress"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["append",["helper",["scouting-member-mastery"],null,[["rosterMember","dataProgress"],[["get",["rosterMember"]],["get",["masteryDataProgress"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["append",["helper",["scouting-member-ranked"],null,[["rosterMember","dataProgress"],[["get",["rosterMember"]],["get",["rankedDataProgress"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isModeRanked"]]],null,4],["block",["if"],[["get",["isModeMastery"]]],null,3],["block",["if"],[["get",["isModeHistory"]]],null,2],["block",["unless"],[["helper",["is-last"],[["get",["roster","members"]],["get",["rosterMember"]]],null]],null,1]],"locals":["rosterMember"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(560), e.exports = a.Ember.Component.extend({
                classNames: ["tournament-scouting-nav"],
                layout: n(561),
                selectedMode: null,
                modeInfos: [],
                selectedModeObserver: a.Ember.computed("selectedMode", "modeInfos", (function() {
                    const e = this.get("selectedMode");
                    if (!e) return;
                    const t = this.get("modeInfos");
                    if (t)
                        for (let n = 0; n < t.length; n++) {
                            const a = t[n];
                            if (a.mode === e) {
                                a.set("triggerSelect", !0);
                                break
                            }
                        }
                })),
                actions: {
                    selectMode(e) {
                        this.attrs.selectMode && this.attrs.selectMode(e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "zOoDvAuE",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-nav\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-nav\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-nav\\\\index.js\\" "],["text","\\n"],["append",["unknown",["selectedModeObserver"]],false],["text","\\n"],["block",["each"],[["get",["modeInfos"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","tournament-scouting-nav-button"],["flush-element"],["text","\\n    "],["append",["helper",["generic-button"],null,[["text","isEnabled","canBeSelected","tooltipText","disabledTooltipText","triggerSelected","selectionGroup","onSelected","onClickSound"],[["get",["modeInfo","displayName"]],["get",["modeInfo","isEnabled"]],["get",["modeInfo","isEnabled"]],["get",["modeInfo","tooltipText"]],["get",["modeInfo","disabledTooltipText"]],["get",["modeInfo","triggerSelect"]],"scoutingModes",["helper",["action"],[["get",[null]],"selectMode",["get",["modeInfo","mode"]]],null],"text-click-small"]]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":["modeInfo"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(563), e.exports = a.Ember.Component.extend({
                classNames: ["util-tournament-scouting-subitem"],
                layout: n(564)
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "ITyORxXh",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-filler-row\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-filler-row\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-filler-row\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-filler-icon-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-filler-icon"],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-data"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-filler"],["flush-element"],["append",["unknown",["tra","clash_scouting_filler_stat"]],false],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(556),
                i = n(9);
            n(566);
            const o = [s.LEAGUE_QUEUE_SOLO, s.LEAGUE_QUEUE_FLEX];
            e.exports = a.Ember.Component.extend({
                classNames: ["util-tournament-scouting-member"],
                layout: n(567),
                clashService: a.Ember.inject.service("clash"),
                rosterMember: null,
                puuid: a.Ember.computed.alias("rosterMember.puuid"),
                gameName: a.Ember.computed("rosterMember.gameName", (function() {
                    return this.get("rosterMember.gameName") || null
                })),
                tagLine: a.Ember.computed("rosterMember.tagLine", (function() {
                    return this.get("rosterMember.tagLine") || null
                })),
                summonerName: a.Ember.computed("rosterMember.summonerName", (function() {
                    return this.get("rosterMember.summonerName") || null
                })),
                topChampions: a.Ember.computed("rosterMember.summonerId", "rosterMember.topChampions", "dataProgress.isDataCompleted", (function() {
                    if (!this.get("rosterMember.summonerId")) return null;
                    const e = this.get("rosterMember.topChampions");
                    return e || null
                })),
                fillerRows: a.Ember.computed("rosterMember.summonerId", "rosterMember.topChampions", "dataProgress.isDataCompleted", (function() {
                    if (!this.get("rosterMember.summonerId")) return null;
                    const e = this.get("rosterMember.topChampions");
                    if (!e) return null;
                    const t = [];
                    for (; e.length + t.length < 5;) t.push({});
                    return t
                })),
                highestQueue: a.Ember.computed("rosterMember.summonerId", "rosterMember.ranked.achievedTiers", "dataProgress.isDataCompleted", (function() {
                    if (!this.get("rosterMember.summonerId")) return;
                    const e = this.get("rosterMember.ranked.achievedTiers");
                    if (!e || 0 === e.length) return;
                    const t = a.LeagueTierNames.getConstants().TIER_NAME_TO_ORDINAL;
                    let n = [];
                    t && (n = a._.sortBy(e, [e => t[e.tier], e => -e.division]).reverse());
                    let s = null;
                    for (let e = 0; e < n.length; e++) {
                        const t = n[e];
                        if (o.includes(t.queueType)) {
                            s = t;
                            break
                        }
                    }
                    return s
                })),
                tierDivisionLabel: a.Ember.computed("highestQueue", (function() {
                    const e = this.get("highestQueue");
                    return e ? a.LeagueTierNames.getFullTierDivisionName(e.tier, e.division) : ""
                })),
                rankedCrestTooltip: a.Ember.computed("highestQueue", (function() {
                    const e = this.get("highestQueue");
                    if (!e) return "";
                    const t = e.queueType;
                    return a.LeagueTierNames.getRankedQueueName(t)
                })),
                highestQueueTierUppercase: a.Ember.computed("highestQueue.tier", (function() {
                    const e = this.get("highestQueue.tier");
                    return e ? e.toUpperCase() : ""
                })),
                highestQueueDivision: a.Ember.computed("highestQueue.division", (function() {
                    const e = this.get("highestQueue.division") || 0;
                    return i.ROMAN_NUMERALS[e] || "IV"
                })),
                isLoadCompleted: a.Ember.computed("dataProgress.isLoadCompleted", (function() {
                    return Boolean(this.get("dataProgress.isLoadCompleted"))
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "GprqSrdU",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-ranked\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-ranked\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-ranked\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["isLoadCompleted"]]],null,3]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["unknown",["scouting-filler-row"]],false],["text","\\n"]],"locals":["fillerRow"]},{"statements":[["text","      "],["append",["helper",["top-champion"],null,[["champion"],[["get",["topChampion"]]]]],false],["text","\\n"]],"locals":["topChampion"]},{"statements":[["text","      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-tooltip-group"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-tooltip"],["flush-element"],["append",["unknown",["rankedCrestTooltip"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\n  "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-member-summary"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-member-name"],["flush-element"],["text","\\n      "],["append",["helper",["player-name"],null,[["format","puuid","summonerName","gameName","tagLine"],["short",["get",["puuid"]],["get",["summonerName"]],["get",["gameName"]],["get",["tagLine"]]]]],false],["text","\\n    "],["close-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","tournament-scouting-member-ranked-group"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","regalia-crest-container rank-override"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","regalia-crest-sizer"],["flush-element"],["text","\\n          "],["open-element","lol-regalia-emblem-element",[]],["dynamic-attr","ranked-tier",["helper",["if"],[["get",["highestQueueTierUppercase"]],["get",["highestQueueTierUppercase"]],"unranked"],null],null],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","tournament-scouting-member-ranked-rank"],["flush-element"],["append",["unknown",["tierDivisionLabel"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["bottom","system"]],2],["text","\\n    "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-member-summary-separator"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitems"],["flush-element"],["text","\\n"],["block",["each"],[["get",["topChampions"]]],null,1],["block",["each"],[["get",["fillerRows"]]],null,0],["text","  "],["close-element"],["text","\\n\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(569), e.exports = a.Ember.Component.extend({
                classNames: ["util-tournament-scouting-subitem"],
                layout: n(570),
                championInfo: a.Ember.computed("champion.championInfo", (function() {
                    const e = this.get("champion.championInfo");
                    return e || {
                        squarePortraitPath: ""
                    }
                })),
                winPercentage: a.Ember.computed("champion", (function() {
                    const e = this.get("champion");
                    return e ? this.get("tra").formatString("clash_scouting_tooltip_top_ranked_win_percentage", {
                        winPercentage: e.winRate
                    }) : ""
                })),
                totalGamesPlayed: a.Ember.computed("champion", (function() {
                    const e = this.get("champion");
                    return e ? this.get("tra").formatString("clash_scouting_tooltip_top_ranked_total_games_played", {
                        totalGamesPlayed: e.gameCount
                    }) : ""
                })),
                kdaColorer: a.Ember.on("didInsertElement", a.Ember.observer("champion", (function() {
                    const e = this.get("element");
                    if (!e) return;
                    const t = this.get("champion");
                    if (!t) return;
                    const n = e.querySelector(".tournament-scouting-top-champion-stat-kda");
                    switch (t.kdaClassification) {
                        case "LOW":
                            n.classList.add("tournament-scouting-top-champion-stat-kda-low");
                            break;
                        case "AVERAGE":
                            n.classList.add("tournament-scouting-top-champion-stat-kda-average");
                            break;
                        case "HIGH":
                            n.classList.add("tournament-scouting-top-champion-stat-kda-high")
                    }
                })))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "6NuWZ6Cj",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-ranked\\\\top-champion\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-ranked\\\\top-champion\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-ranked\\\\top-champion\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-champion-icon-container"],["flush-element"],["text","\\n  "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["championInfo","squarePortraitPath"]]]]],["static-attr","alt",""],["static-attr","class","util-tournament-scouting-subitem-champion-icon"],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-data"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","tournament-scouting-top-champion-stat-group"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tournament-scouting-top-champion-stat-wins-percentage"],["flush-element"],["append",["unknown",["winPercentage"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tournament-scouting-top-champion-stat-games-played"],["flush-element"],["append",["unknown",["totalGamesPlayed"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","tournament-scouting-top-champion-stat-kda-group"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tournament-scouting-top-champion-stat-kda"],["flush-element"],["append",["unknown",["champion","kda"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tournament-scouting-top-champion-stat-kda-text"],["flush-element"],["append",["unknown",["tra","clash_scouting_ranked_kda_text"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["right","system"]],0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-tooltip-group"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-tooltip"],["flush-element"],["append",["unknown",["tra","clash_scouting_tooltip_top_ranked_wins"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-tooltip"],["flush-element"],["append",["unknown",["tra","clash_scouting_tooltip_top_ranked_kda"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(572), e.exports = a.Ember.Component.extend({
                classNames: ["util-tournament-scouting-member"],
                layout: n(573),
                rosterMember: null,
                puuid: a.Ember.computed.alias("rosterMember.puuid"),
                gameName: a.Ember.computed("rosterMember.gameName", (function() {
                    return this.get("rosterMember.gameName") || null
                })),
                tagLine: a.Ember.computed("rosterMember.tagLine", (function() {
                    return this.get("rosterMember.tagLine") || null
                })),
                summonerName: a.Ember.computed("rosterMember.summonerName", (function() {
                    return this.get("rosterMember.summonerName") || null
                })),
                championMasteries: a.Ember.computed("rosterMember.summonerId", "rosterMember.championMasteries", "dataProgress.isDataCompleted", (function() {
                    if (!this.get("rosterMember.summonerId")) return null;
                    const e = this.get("rosterMember.championMasteries");
                    return e || null
                })),
                totalMasteryScore: a.Ember.computed("championMasteries.score", (function() {
                    const e = this.get("championMasteries.score");
                    return e || 0
                })),
                fillerRows: a.Ember.computed("rosterMember.summonerId", "rosterMember.championMasteries", "dataProgress.isDataCompleted", (function() {
                    if (!this.get("rosterMember.summonerId")) return [{}, {}, {}, {}, {}];
                    const e = this.get("rosterMember.championMasteries");
                    if (!e || !e.masteries) return [{}, {}, {}, {}, {}];
                    const t = [];
                    for (; e.masteries.length + t.length < 5;) t.push({});
                    return t
                })),
                isLoadCompleted: a.Ember.computed("dataProgress.isLoadCompleted", (function() {
                    return Boolean(this.get("dataProgress.isLoadCompleted"))
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "LxweNztI",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-mastery\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-mastery\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-mastery\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["isLoadCompleted"]]],null,2]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["unknown",["scouting-filler-row"]],false],["text","\\n"]],"locals":["fillerRow"]},{"statements":[["text","      "],["append",["helper",["top-mastery"],null,[["mastery"],[["get",["topMastery"]]]]],false],["text","\\n"]],"locals":["topMastery"]},{"statements":[["text","\\n  "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-member-summary"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-member-name"],["flush-element"],["text","\\n      "],["append",["helper",["player-name"],null,[["format","puuid","summonerName","gameName","tagLine"],["short",["get",["puuid"]],["get",["summonerName"]],["get",["gameName"]],["get",["tagLine"]]]]],false],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tournament-scouting-member-mastery-total"],["flush-element"],["append",["unknown",["totalMasteryScore"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tournament-scouting-member-mastery-total-label"],["flush-element"],["append",["unknown",["tra","clash_scouting_mastery_total_mastery"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-member-summary-separator"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitems"],["flush-element"],["text","\\n"],["block",["each"],[["get",["championMasteries","masteries"]]],null,1],["block",["each"],[["get",["fillerRows"]]],null,0],["text","  "],["close-element"],["text","\\n\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(575), e.exports = a.Ember.Component.extend({
                classNames: ["util-tournament-scouting-subitem"],
                layout: n(576),
                championInfo: a.Ember.computed("mastery.championInfo", (function() {
                    const e = this.get("mastery.championInfo");
                    return e || {
                        squarePortraitPath: ""
                    }
                })),
                masteryScore: a.Ember.computed("mastery", "tra.metadata.locale.id", (function() {
                    const e = this.get("mastery");
                    if (!e) return "";
                    let t = e.championPoints;
                    return t >= 1e3 && (t = this.get("tra").numeral(t).format("0[.]0 a")), this.get("tra").formatString("clash_scouting_mastery_score", {
                        masteryScore: t
                    })
                })),
                masteryLevel: a.Ember.computed("mastery", (function() {
                    const e = this.get("mastery");
                    return e ? this.get("tra").formatString("clash_scouting_mastery_level", {
                        masteryLevel: e.championLevel
                    }) : ""
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "Tj7wMU/w",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-mastery\\\\top-mastery\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-mastery\\\\top-mastery\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-mastery\\\\top-mastery\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-champion-icon-container"],["flush-element"],["text","\\n  "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["championInfo","squarePortraitPath"]]]]],["static-attr","alt",""],["static-attr","class","util-tournament-scouting-subitem-champion-icon"],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","tournament-scouting-top-mastery-subitem-data"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","tournament-scouting-top-mastery-stat-rank-points"],["flush-element"],["append",["unknown",["masteryScore"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","tournament-scouting-top-mastery-stat-group"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tournament-scouting-top-mastery-stat-rank-icon"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tournament-scouting-top-mastery-stat-rank"],["flush-element"],["append",["unknown",["masteryLevel"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["comment","\\n  TODO currently debating whether to include this stat or replace it with something else...\\n  <div class=\\"tournament-scouting-top-mastery-stat-group\\">\\n    <div class=\\"tournament-scouting-top-mastery-stat-grade-label\\">{{tra.clash_scouting_mastery_best}}</div>\\n    <div class=\\"tournament-scouting-top-mastery-stat-grade\\">{{mastery.highestGrade}}</div>\\n  </div>\\n  "],["text","\\n"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["right","system"]],0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-tooltip-group"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-tooltip"],["flush-element"],["append",["unknown",["tra","clash_scouting_tooltip_top_mastery_score"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-tooltip"],["flush-element"],["append",["unknown",["tra","clash_scouting_tooltip_top_mastery_rank"]],false],["close-element"],["text","\\n      "],["comment","\\n      TODO currently debating whether to include this stat or replace it with something else...\\n      <div class=\\"util-tournament-scouting-subitem-tooltip\\">{{tra.clash_scouting_tooltip_top_mastery_grade}}</div>\\n      "],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(578);
            var s = n(9);
            e.exports = a.Ember.Component.extend({
                classNames: ["util-tournament-scouting-member"],
                layout: n(579),
                rosterMember: null,
                puuid: a.Ember.computed.alias("rosterMember.puuid"),
                gameName: a.Ember.computed("rosterMember.gameName", (function() {
                    return this.get("rosterMember.gameName") || null
                })),
                tagLine: a.Ember.computed("rosterMember.tagLine", (function() {
                    return this.get("rosterMember.tagLine") || null
                })),
                summonerName: a.Ember.computed("rosterMember.summonerName", (function() {
                    return this.get("rosterMember.summonerName") || null
                })),
                matches: a.Ember.computed("rosterMember.summonerId", "rosterMember.matchHistory", "dataProgress.isDataCompleted", (function() {
                    return this.get("rosterMember.summonerId") && this.get("rosterMember.matchHistory") || []
                })),
                tmntWins: a.Ember.computed("rosterMember.tmntWins", (function() {
                    return this.get("rosterMember.tmntWins") || 0
                })),
                tmntLosses: a.Ember.computed("rosterMember.tmntLosses", (function() {
                    return this.get("rosterMember.tmntLosses") || 0
                })),
                tmntTotal: a.Ember.computed("tmntWins", "tmntLosses", (function() {
                    return this.get("tmntWins") + this.get("tmntLosses")
                })),
                fillerRows: a.Ember.computed("matches", (function() {
                    const e = this.get("matches"),
                        t = [];
                    for (; e.length + t.length < 5;) t.push({});
                    return t
                })),
                memberId: a.Ember.computed("rosterMember.summonerId", (function() {
                    return this.get("rosterMember.summonerId") || s.INVALID_SUMMONER_ID
                })),
                isLoadCompleted: a.Ember.computed("dataProgress.isLoadCompleted", (function() {
                    return Boolean(this.get("dataProgress.isLoadCompleted"))
                })),
                tmntTotalText: a.Ember.computed("tmntTotal", (function() {
                    return this.get("tra").formatString("clash_scouting_history_total_matches", {
                        totalMatches: this.get("tmntTotal")
                    })
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "/trjE7/4",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-history\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-history\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-history\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["isLoadCompleted"]]],null,2]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["unknown",["scouting-filler-row"]],false],["text","\\n"]],"locals":["fillerRow"]},{"statements":[["text","      "],["append",["helper",["last-matches"],null,[["match","summonerId"],[["get",["match"]],["get",["memberId"]]]]],false],["text","\\n"]],"locals":["match"]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-member-summary"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-member-name"],["flush-element"],["text","\\n      "],["append",["helper",["player-name"],null,[["format","puuid","summonerName","gameName","tagLine"],["short",["get",["puuid"]],["get",["summonerName"]],["get",["gameName"]],["get",["tagLine"]]]]],false],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tournament-scouting-wins-losses"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","tournament-scouting-member-history-total-wins"],["flush-element"],["append",["unknown",["tmntWins"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","tournament-scouting-wins-losses-separator"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","tournament-scouting-member-history-total-losses"],["flush-element"],["append",["unknown",["tmntLosses"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tournament-scouting-member-history-total-label"],["flush-element"],["append",["unknown",["tmntTotalText"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-member-summary-separator"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitems"],["flush-element"],["text","\\n"],["block",["each"],[["get",["matches"]]],null,1],["block",["each"],[["get",["fillerRows"]]],null,0],["text","  "],["close-element"],["text","\\n\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(581);
            var s = n(9);
            e.exports = a.Ember.Component.extend({
                classNames: ["tournament-scouting-subitem"],
                layout: n(582),
                onWillDestroyElement: a.Ember.on("willDestroyElement", (function() {
                    (0, a.getProvider)().getOptional("rcp-fe-lol-match-history").then((e => {
                        e.hideMatchDetails()
                    }), (e => a.logger.error("Provider getOptional failure", e)))
                })),
                gameId: a.Ember.computed("match.gameId", (function() {
                    return this.get("match.gameId")
                })),
                championId: a.Ember.computed("match.championId", (function() {
                    return this.get("match.championId") || -1
                })),
                won: a.Ember.computed("match.won", (function() {
                    return this.get("match.won")
                })),
                position: a.Ember.computed("match.position", (function() {
                    const e = this.get("match.position");
                    return e && "UNSELECTED" !== e ? e : "FILL"
                })),
                positionText: a.Ember.computed("match.position", (function() {
                    return this.get("tra").formatString("clash_position_" + this.get("position").toLowerCase())
                })),
                positionIcon: a.Ember.computed("position", (function() {
                    return this.get("position").toLowerCase()
                })),
                goldShare: a.Ember.computed("match.goldShare", (function() {
                    return this.get("match.goldShare")
                })),
                goldShareText: a.Ember.computed("goldShare", (function() {
                    return this.get("tra").formatString("clash_scouting_history_gold_share", {
                        goldShare: this.get("goldShare")
                    })
                })),
                goldShareClass: a.Ember.computed("goldShare", (function() {
                    return this.get("goldShare") > s.NORMAL_GOLD_SHARE_LIMIT ? "high" : "normal"
                })),
                actions: {
                    displayMatchDetails() {
                        (0, a.getProvider)().getOptional("rcp-fe-lol-match-history").then((e => {
                            e.displayMatchDetails({
                                gameId: this.get("gameId"),
                                summonerId: parseInt(this.get("summonerId")),
                                defaultSection: "scoreboard",
                                sections: ["overview", "scoreboard", "stats", "graph", "runes"],
                                dataSource: "legs"
                            })
                        }), (e => a.logger.error("Provider getOptional failure", e)))
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "mb7zu6pv",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-history\\\\last-matches\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-history\\\\last-matches\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\scouting\\\\scouting-member-history\\\\last-matches\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","tournament-scouting-match-container"],["modifier",["action"],[["get",[null]],"displayMatchDetails"]],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","tournament-scouting-subitem-champion-icon-container"],["flush-element"],["text","\\n    "],["open-element","img",[]],["dynamic-attr","src",["concat",["/lol-game-data/assets/v1/champion-icons/",["unknown",["championId"]],".png"]]],["static-attr","alt",""],["static-attr","class","util-tournament-scouting-subitem-champion-icon"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","tournament-scouting-last-matches-subitem-data"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tournament-scouting-last-matches-subitem-data-row"],["flush-element"],["text","\\n"],["block",["if"],[["get",["won"]]],null,2,1],["text","    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tournament-scouting-last-matches-subitem-data-row"],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","tournament-scouting-last-matches-position-icon"],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/images/position-selector/positions/icon-position-",["unknown",["positionIcon"]],".png"]]],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","tournament-scouting-last-matches-position-text"],["flush-element"],["append",["unknown",["positionText"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tournament-scouting-last-matches-subitem-data-row"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","tournament-scouting-last-matches-gold-icon"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["tournament-scouting-last-matches-gold-",["unknown",["goldShareClass"]],"-text"]]],["flush-element"],["append",["unknown",["goldShareText"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","img",[]],["static-attr","class","tournament-scouting-last-matches-subitem-handle"],["static-attr","src","/fe/lol-clash/assets/images/buttons/icon-arrow-yellow.png"],["flush-element"],["close-element"],["text","\\n  \\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["right","system"]],0],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-tooltip-group"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-tooltip"],["flush-element"],["append",["unknown",["tra","clash_scouting_tooltip_match_history_position"]],false],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","util-tournament-scouting-subitem-tooltip"],["flush-element"],["append",["unknown",["tra","clash_scouting_tooltip_match_history"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","tournament-scouting-last-matches-loss"],["flush-element"],["append",["unknown",["tra","clash_scouting_history_defeat"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","tournament-scouting-last-matches-win"],["flush-element"],["append",["unknown",["tra","clash_scouting_history_victory"]],false],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(584)) && a.__esModule ? a : {
                    default: a
                },
                o = n(556);
            const r = "rankedQueuesStep",
                l = "allChampionsStep",
                c = "matchHistory",
                d = function(e, t, n) {
                    let a = !0;
                    for (let n = 0; n < e.members.length; n++) {
                        const s = e.members[n],
                            {
                                summonerId: i
                            } = s;
                        s.ranked ? (t.markStepCompleted(i, r), a = !1) : t.isStepInProgress(i, r) ? a = !1 : t.markStepInProgress(i, r)
                    }
                    a && function(e) {
                        const {
                            api: t,
                            dataProgress: n,
                            roster: a
                        } = e, i = s._.map(a.members, (e => e.summonerId)), l = JSON.stringify(i), c = JSON.stringify([o.LEAGUE_QUEUE_SOLO, o.LEAGUE_QUEUE_FLEX]);
                        t.get(`/v2/tiers?summonerIds=${l}&queueTypes=${c}`, {
                            skipCache: !1
                        }).then((e => {
                            e && e.length || (e = null);
                            for (let t = 0; t < a.members.length; t++) {
                                const s = a.members[t],
                                    i = s.summonerId;
                                let o = null;
                                null !== e && (o = e.find((e => e.summonerId === i))), o && o.achievedTiers && o.achievedTiers.length ? s.ranked = o : s.ranked = null, n.markStepCompleted(i, r)
                            }
                        })).catch((() => {
                            for (let e = 0; e < a.members.length; e++) {
                                const t = a.members[e].summonerId;
                                n.markStepCompleted(t, r)
                            }
                            s.logger.warning("scouting: Error requesting ranked queues")
                        }))
                    }({
                        api: n,
                        dataProgress: t,
                        roster: e
                    })
                },
                m = function(e, t, n, a, i) {
                    let o = !0;
                    for (let a = 0; a < e.members.length; a++) {
                        const s = e.members[a],
                            {
                                summonerId: i
                            } = s;
                        s.topChampions || s.championMasteries ? (t.markStepCompleted(i, l), n.markStepCompleted(i, l), o = !1) : t.isStepInProgress(i, l) || n.isStepInProgress(i, l) ? o = !1 : (t.markStepInProgress(i, l), n.markStepInProgress(i, l))
                    }
                    o && function(e) {
                        const {
                            api: t,
                            rankedDataProgress: n,
                            masteryDataProgress: a,
                            championSummary: i,
                            roster: o
                        } = e, r = s._.map(o.members, (e => e.puuid)), c = JSON.stringify(r);
                        t.get(`/v1/scouting/champions?puuids=${c}`, {
                            skipCache: !1
                        }).then((e => {
                            e && e.length ? function(e, t) {
                                for (let n = 0; n < e.length; n++) {
                                    const a = e[n];
                                    a.topSeasonChampions || (a.topSeasonChampions = []), a.topMasteries || (a.topMasteries = []);
                                    for (const e of a.topSeasonChampions) e.championInfo = t.findBy("id", e.championId);
                                    for (const e of a.topMasteries) e.championInfo = t.findBy("id", e.championId)
                                }
                            }(e, i) : e = null;
                            for (let t = 0; t < o.members.length; t++) {
                                const s = o.members[t],
                                    i = s.summonerId;
                                if (s.topChampions = null, s.championMasteries = null, null !== e) {
                                    const t = e.find((e => e.playerId === i));
                                    t && (s.topChampions = t.topSeasonChampions, s.championMasteries = {
                                        score: t.totalMasteryScore,
                                        masteries: t.topMasteries
                                    })
                                }
                                n.markStepCompleted(i, l), a.markStepCompleted(i, l)
                            }
                        })).catch((() => {
                            for (let e = 0; e < o.members.length; e++) {
                                const t = o.members[e].summonerId;
                                n.markStepCompleted(t, l), a.markStepCompleted(t, l)
                            }
                            s.logger.warning("scouting: Error requesting scouting champions")
                        }))
                    }({
                        api: a,
                        rankedDataProgress: t,
                        masteryDataProgress: n,
                        championSummary: i,
                        roster: e
                    })
                };

            function u(e, t, n) {
                let a = !1;
                for (let n = 0; n < e.members.length; n++) {
                    const s = e.members[n],
                        {
                            summonerId: i
                        } = s;
                    s.matchHistory ? t.markStepCompleted(i, c) : t.isStepInProgress(i, c) || (t.markStepInProgress(i, c), a = !0)
                }
                a && function(e, t, n) {
                    const a = n => {
                            n || (n = {});
                            for (let a = 0; a < e.members.length; a++) {
                                const s = e.members[a],
                                    i = s.summonerId;
                                s.matchHistory = [], s.tmntWins = 0, s.tmntLosses = 0;
                                const o = n[String(i)];
                                o && (s.matchHistory = o.matches, s.tmntWins = o.tmntWins, s.tmntLosses = o.tmntLosses), t.markStepCompleted(i, c)
                            }
                            s.logger.trace("Finished processing match history for " + e.id)
                        },
                        i = s._.map(e.members, (e => e.summonerId)),
                        o = JSON.stringify(i);
                    n.get(`/v1/scouting/matchhistory?summonerIds=${o}`, {
                        skipCache: !1
                    }).then(a).catch((() => {
                        for (let n = 0; n < e.members.length; n++) {
                            const a = e.members[n].summonerId;
                            t.markStepCompleted(a, c)
                        }
                        s.logger.warning("scouting: Error requesting match history")
                    }))
                }(e, t, n)
            }
            const p = (0, s.emberDataBinding)({
                Ember: s.Ember,
                websocket: (0, s.getProvider)().getSocket(),
                basePaths: {
                    ranked: "/lol-ranked",
                    clash: "/lol-clash",
                    clientConfig: "/lol-client-config"
                }
            });
            e.exports = s.Ember.Service.extend(p, i.default, {
                getAllStats: function(e, t, n, a, s) {
                    for (let e = 0; e < t.members.length; e++) {
                        const i = t.members[e];
                        n.initializeSummonerProgress(i.summonerId, [r, l]), a.initializeSummonerProgress(i.summonerId, [l]), s.initializeSummonerProgress(i.summonerId, [c])
                    }
                    const i = this.get("api.ranked"),
                        o = this.get("api.clash"),
                        p = this.get("championSummary"),
                        h = this.get("api.clash");
                    d(t, n, i), m(t, n, a, o, p), u(t, s, h)
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            e.exports = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                basePaths: {
                    gameData: "/lol-game-data"
                },
                boundProperties: {
                    championSummary: {
                        api: "gameData",
                        path: "/assets/v1/champion-summary.json"
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(9),
                i = r(n(11));
            n(586);
            var o = r(n(89));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const l = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                basePaths: {
                    gameData: "/lol-game-data",
                    summoner: "/lol-summoner",
                    riotclient: "/riotclient"
                },
                boundProperties: {
                    regionLocale: {
                        api: "riotclient",
                        path: "/region-locale"
                    }
                }
            });
            e.exports = a.Ember.Component.extend(l, {
                classNames: ["clash-tournament-overview"],
                layout: n(587),
                gdsService: a.Ember.inject.service("gds"),
                rosterStats: a.Ember.computed.alias("overviewParams.rosterStats"),
                tournament: a.Ember.computed.alias("overviewParams.tournament"),
                isActiveTournament: a.Ember.computed.bool("tournament"),
                championSummary: "",
                localPlayerSummonerId: "",
                onInit: a.Ember.on("init", (function() {
                    i.default.stopAutoShowTooltip(), this.get("api.gameData").get("/assets/v1/champion-summary.json").then((e => {
                        this.set("championSummary", e)
                    })), this.get("api.summoner").get("/v1/current-summoner").then((e => {
                        this.set("localPlayerSummonerId", e.summonerId)
                    })), this._initializeOverviewData()
                })),
                _initializeOverviewData() {
                    const e = this.get("rosterStats.periodStats");
                    this.get("isActiveTournament") || e && e.length <= 1 ? this.set("individualMatchStats", this._buildIndividualGamesData()) : this.set("multiplePeriodStats", this._buildMultiplePeriodsData())
                },
                _buildIndividualGamesData() {
                    const e = this.get("rosterStats.periodStats"),
                        t = this.get("isActiveTournament");
                    let n;
                    if (t) {
                        const t = this.get("tournament.currentPhase.period");
                        a.Util.isNumberOk(t) && (n = a._.find(e, (e => e.period === t))), n || (n = e && e.length ? e[0] : {})
                    } else e && 1 === e.length && (n = e[0]);
                    const i = [];
                    for (let e = 1; e <= s.NUM_OVERVIEW_ENTRIES_TO_SHOW; ++e) {
                        const s = a._.find(n.matchStats, (t => String(t.round) === String(e)));
                        s ? i.push(s) : t ? i.push({
                            isUpcoming: !0
                        }) : i.push({})
                    }
                    return i
                },
                _buildMultiplePeriodsData() {
                    const e = this.get("rosterStats.periodStats"),
                        t = this.get("isActiveTournament"),
                        n = this.get("rosterStats.tournamentPeriods"),
                        i = this.get("tournament.phases"),
                        o = [];
                    for (let r = 0; r < s.NUM_OVERVIEW_ENTRIES_TO_SHOW; ++r) {
                        const s = a._.find(e, (e => e.period === r));
                        if (s) o.push({
                            periodStats: s,
                            period: r
                        });
                        else if (t) {
                            const e = [];
                            for (let t = 0; t < i.length; t++) String(i[t].period) === String(r) && e.push(i[t]);
                            o.push({
                                phases: e,
                                period: r
                            })
                        } else r < n ? o.push({
                            periodStats: {},
                            period: r
                        }) : o.push({
                            period: r
                        })
                    }
                    return o
                },
                showIndividualGamesView: a.Ember.computed("individualMatchStats", (function() {
                    return this.get("individualMatchStats")
                })),
                totalGamesPlayed: a.Ember.computed("rosterStats.periodStats.@each.matchStats", (function() {
                    const e = this.get("rosterStats.periodStats");
                    return a._.sumBy(e, (e => a._.sumBy(e.matchStats, (e => e.durationMs > 0 ? 1 : 0))))
                })),
                teamLogoPath: a.Ember.computed("rosterStats.rosterIconId", "rosterStats.rosterIconColorId", "gdsService.ready", (function() {
                    if (!this.get("gdsService.ready")) return "";
                    const e = this.get("rosterStats.rosterIconId"),
                        t = this.get("rosterStats.rosterIconColorId");
                    return this.get("gdsService").getLogoPath(e, t)
                })),
                teamSummonerIds: a.Ember.computed("rosterStats.playerStats", "localPlayerSummonerId", (function() {
                    const e = this.get("rosterStats.playerStats"),
                        t = this.get("localPlayerSummonerId");
                    return !t || !e || e.length <= 0 ? [] : a._.orderBy(a._.keys(e), (e => String(t) === String(e) ? -1 : parseInt(e, 10)), "desc")
                })),
                tournamentName: a.Ember.computed("rosterStats.tournamentNameLocKey", (function() {
                    const e = this.get("tra"),
                        t = this.get("rosterStats.tournamentNameLocKey");
                    return o.default.getTournamentLocalizedName(e, t)
                })),
                tournamentDay: a.Ember.computed("rosterStats.tournamentNameLocKeySecondary", (function() {
                    const e = this.get("tra"),
                        t = this.get("rosterStats.tournamentNameLocKeySecondary");
                    return o.default.getTournamentLocalizedSecondary(e, t)
                })),
                tournamentDurationObserver: a.Ember.computed("rosterStats.startTimeMs", "rosterStats.startEndTimeMs", "tournament.startTimeMs", "tournament.startEndTimeMs", "tournament.locale", (function() {
                    let e, t;
                    if (this.get("isActiveTournament")) e = this.get("tournament.startTimeMs"), t = this.get("tournament.endTimeMs");
                    else if (e = this.get("rosterStats.startTimeMs"), t = this.get("rosterStats.endTimeMs"), !e || !t) return void this.set("tournamentDurationString", "-");
                    const n = this.get("tournament"),
                        a = this.get("tournament.locale");
                    if (!n) return "";
                    const s = n.getDateString(a, e, {
                            month: "long"
                        }),
                        i = n.getDateString(a, t, {
                            month: "long"
                        }),
                        o = n.getDateString(a, e, {
                            day: "numeric"
                        }),
                        r = n.getDateString(a, t, {
                            day: "numeric"
                        }),
                        l = n.getDateString(a, e, {
                            year: "numeric"
                        });
                    s === i ? this.set("tournamentDurationString", this.get("tra").formatString("clash_tournament_duration_same_month", {
                        startMonth: s,
                        startDay: o,
                        endDay: r,
                        year: l
                    })) : this.set("tournamentDurationString", this.get("tra").formatString("clash_tournament_duration_different_month", {
                        startMonth: s,
                        endMonth: i,
                        startDay: o,
                        endDay: r,
                        year: l
                    }))
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "zjx/hAKH",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\index.js\\" "],["text","\\n"],["append",["unknown",["tournamentDurationObserver"]],false],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-tournament-overview-header"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-tournament-overview-team-details"],["flush-element"],["text","\\n    "],["append",["helper",["roster-details-visual"],null,[["name","shortName","logoId","logoColorId","tier"],[["get",["rosterStats","rosterName"]],["get",["rosterStats","rosterShortName"]],["get",["rosterStats","rosterIconId"]],["get",["rosterStats","rosterIconColorId"]],["get",["rosterStats","tier"]]]]],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-tournament-overview-summoners"],["flush-element"],["text","\\n"],["block",["each"],[["get",["teamSummonerIds"]]],null,4],["text","  "],["close-element"],["text","\\n  "],["open-element","img",[]],["static-attr","class","clash-tournament-overview-top-separator"],["static-attr","src","/fe/lol-clash/assets/images/overview/Top_Header_Bar.svg"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-tournament-overview-tournament-info"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-tournament-overview-tournament-name"],["flush-element"],["append",["unknown",["tournamentName"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-tournament-overview-tournament-week"],["flush-element"],["append",["unknown",["tournamentDay"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-tournament-overview-tournament-time"],["flush-element"],["append",["unknown",["tournamentDurationString"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-tournament-overview-periods"],["flush-element"],["text","\\n"],["block",["if"],[["get",["showIndividualGamesView"]]],null,3,1],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-tournament-overview-carousel"],["flush-element"],["text","\\n  "],["append",["helper",["overview-stats-carousel"],null,[["playerStats","totalGamesPlayed","teamLogoPath"],[["get",["rosterStats","playerStats"]],["get",["totalGamesPlayed"]],["get",["teamLogoPath"]]]]],false],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["helper",["overview-period"],null,[["index","periodStats","phases","tournament","rosterStats","championSummary","localPlayerSummonerId","shownPeriodStats"],[["get",["index"]],["get",["entry","periodStats"]],["get",["entry","phases"]],["get",["tournament"]],["get",["rosterStats"]],["get",["championSummary"]],["get",["localPlayerSummonerId"]],["get",["shownPeriodStats"]]]]],false],["text","\\n"]],"locals":["entry","index"]},{"statements":[["block",["each"],[["get",["multiplePeriodStats"]]],null,0]],"locals":[]},{"statements":[["text","      "],["append",["helper",["overview-game"],null,[["index","matchStats","rosterStats","localPlayerSummonerId"],[["get",["index"]],["get",["entry"]],["get",["rosterStats"]],["get",["localPlayerSummonerId"]]]]],false],["text","\\n"]],"locals":["entry","index"]},{"statements":[["block",["each"],[["get",["individualMatchStats"]]],null,2]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-tournament-overview-summoner"],["flush-element"],["text","\\n        "],["append",["helper",["member-summoner"],null,[["summonerId","localPlayerSummonerId"],[["get",["summonerId"]],["get",["localPlayerSummonerId"]]]]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":["summonerId"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(10)) && a.__esModule ? a : {
                    default: a
                };
            n(589);
            const o = (0, s.emberDataBinding)({
                Ember: s.Ember,
                websocket: (0, s.getProvider)().getSocket(),
                basePaths: {
                    gameData: "/lol-game-data"
                }
            });
            e.exports = s.Ember.Component.extend(o, {
                classNames: ["clash-overview-period"],
                layout: n(590),
                index: -1,
                rosterStats: null,
                tournament: null,
                periodStats: null,
                phases: null,
                shownPeriodStats: null,
                localPlayerSummonerId: null,
                isActiveTournament: s.Ember.computed.bool("tournament"),
                showSummary: !0,
                matchStats: s.Ember.computed.alias("periodStats.matchStats"),
                noMatches: s.Ember.computed.or("isMissedPeriod", "isUpcomingPeriod"),
                onDidInsertElement: s.Ember.on("didInsertElement", (function() {
                    s.Ember.run.next((() => {
                        this._initializeAnimations()
                    }))
                })),
                isNotPeriod: s.Ember.computed("phases", "tournament.state", "periodStats", (function() {
                    const e = this.get("phases"),
                        t = this.get("periodStats");
                    return !(e && e.length || t)
                })),
                isMissedPeriod: s.Ember.computed("periodStats", "isActiveTournament", "tournament.state", "phases.[]", (function() {
                    const e = this.get("isActiveTournament"),
                        t = this.get("phases"),
                        n = this.get("periodStats");
                    if (n && n.matchStats && n.matchStats.length) return !1;
                    if (e && t) {
                        const e = this.get("tournament.currentPhase.period"),
                            n = this.get("index"),
                            a = this.get("tournament.state");
                        if (String(e) === String(n) && a !== i.default.Tournament.IDLE) return !1;
                        const o = s.Util.getCurrentTime();
                        for (let e = 0; e < t.length; e++)
                            if (t[e].lockinStartTime > o) return !1
                    }
                    return !0
                })),
                isUpcomingPeriod: s.Ember.computed("isActiveTournament", "tournament.state", "phases.[]", (function() {
                    const e = this.get("isActiveTournament"),
                        t = this.get("phases");
                    if (e && t) {
                        const e = this.get("tournament.currentPhase.period"),
                            n = this.get("index"),
                            a = this.get("tournament.state");
                        if (String(e) === String(n) && a !== i.default.Tournament.IDLE) return !0;
                        const o = s.Util.getCurrentTime();
                        for (let e = 0; e < t.length; e++)
                            if (t[e].lockinStartTime > o) return !0
                    }
                    return !1
                })),
                isNextPeriod: s.Ember.computed("tournament", "tournament.state", "index", (function() {
                    const e = this.get("tournament.nextPhase.period"),
                        t = this.get("index"),
                        n = this.get("tournament.state");
                    return String(e) === String(t) && n === i.default.Tournament.IDLE
                })),
                wonPreviousDay: s.Ember.computed("shownPeriodStats.[]", "index", (function() {
                    const e = this.get("index"),
                        t = this.get("shownPeriodStats");
                    if (!e || !t || t.length < e) return !1;
                    const n = t[e - 1].periodStats;
                    if (!n) return !1;
                    for (let e = 0; e < n.matchStats.length; e++)
                        if (!n.matchStats[e].win) return !1;
                    return !0
                })),
                dayPlannerText: s.Ember.computed("wonPreviousDay", "nextPhaseStartTimeWeekday", (function() {
                    const e = this.get("wonPreviousDay"),
                        t = this.get("nextPhaseStartTimeWeekday");
                    return e ? this.get("tra").formatString("clash_overview_day_planner_undefeated$html", {
                        day: t
                    }) : this.get("tra").formatString("clash_overview_day_planner_defeated$html", {
                        day: t
                    })
                })),
                dayPlannerTitle: s.Ember.computed("nextPhaseStartTimeWeekday", (function() {
                    const e = this.get("nextPhaseStartTimeWeekday");
                    return this.get("tra").formatString("clash_overview_title_return_tomorrow", {
                        day: e
                    })
                })),
                nextPhaseStartTimeWeekday: s.Ember.computed("tournament.nextPhase", "tournament.locale", (function() {
                    const e = this.get("tournament.nextPhase.lockinStartTime");
                    if (!e) return "";
                    const t = this.get("tournament"),
                        n = this.get("tournament.locale");
                    return t.getDateString(n, e, {
                        weekday: "long"
                    })
                })),
                nextPhaseStartTimeLocal: s.Ember.computed("tournament.nextPhase", "tournament.locale", (function() {
                    const e = this.get("tournament.nextPhase.lockinStartTime");
                    if (!e) return "";
                    const t = this.get("tournament"),
                        n = this.get("tournament.locale");
                    return t.getTimeString(n, e, {
                        hour: "numeric",
                        minute: "numeric"
                    })
                })),
                matchStatsObserver: s.Ember.computed("matchStats.[]", (function() {
                    const e = this.get("matchStats");
                    if (!e || !e.length) return;
                    const t = s._.orderBy(e, ["round"]),
                        [n, a] = s._.partition(t, {
                            loserBracket: !1
                        });
                    this.set("winnersBracketMatches", n), this.set("losersBracketMatches", a), this.set("hasLosersBracket", a.length > 0)
                })),
                numWinsLossesTxt: s.Ember.computed("matchStats.[]", (function() {
                    const e = this.get("matchStats"),
                        t = s._.sumBy(e, (e => e.win ? 1 : 0)),
                        n = s._.sumBy(e, (e => e.win ? 0 : 1));
                    return this.get("tra").formatString("clash_overview_num_wins_losses", {
                        numWins: t,
                        numLosses: n
                    })
                })),
                periodName: s.Ember.computed("index", (function() {
                    if (this.get("isNotPeriod")) return "";
                    const e = this.get("index");
                    if (!s.Util.isNumberOk(e)) return "-";
                    const t = 1 + e;
                    return this.get("tra").formatString("clash_overview_period_name", {
                        periodNumber: t
                    })
                })),
                bracketHeader: s.Ember.computed("periodStats.bracketSize", (function() {
                    const e = this.get("periodStats.bracketSize");
                    return this.get("tra").formatString("clash_overview_bracket_type", {
                        bracketSize: e
                    })
                })),
                isNotWinner: s.Ember.computed("matchStats.[]", (function() {
                    const e = this.get("matchStats");
                    return s._.sumBy(e, (e => e.win ? 0 : 1)) > 0
                })),
                localPlayerBuyin: s.Ember.computed("localPlayerSummonerId", "periodStats.playerBids", (function() {
                    const e = this.get("localPlayerSummonerId"),
                        t = this.get("periodStats.playerBids") || {};
                    for (const n of Object.keys(t))
                        if (e === Number(n)) return t[n];
                    return 0
                })),
                rewardImagePath: s.Ember.computed("periodStats.bracketSize", "localPlayerBuyin", (function() {
                    const e = this.get("periodStats.bracketSize");
                    return `/fe/lol-clash/assets/images/overview/loot-${this.get("localPlayerBuyin")>1?"capsule":"orb"}-${e}.png`
                })),
                hasWonTrophy: s.Ember.computed("isNotWinner", (function() {
                    return !this.get("isNotWinner")
                })),
                trophyAnimationObserver: s.Ember.computed("showSummary", "isNotWinner", (function() {
                    const e = this.get("isNotWinner");
                    this.get("showSummary") && !e && s.Ember.run.next((() => {
                        const e = this.$("#clash-overview-trophy-magic-video-state-machine");
                        e && e.length && e.get(0).dispatchEvent(new Event("clash-overview-trophy-magic"))
                    }))
                })),
                _initializeAnimations() {
                    if (this.get("isNotPeriod")) return;
                    s.gsapCustomEase.create("cb17-67", ".17,0,.67,0"), s.gsapCustomEase.create("cb33-1", ".33,0,1,0"), s.gsapCustomEase.create("cb33-67", ".33,0,.67,0"), s.gsapCustomEase.create("cb6-1", ".6,0,1,0"), s.gsapCustomEase.create("cb1", "0,0,1,0"), s.gsapCustomEase.create("cb67", "0,0,.67,0");
                    this.set("motionBlurOpacityMap", {
                        16: .3,
                        8: .25,
                        4: .2
                    }), s.Ember.$.getJSON("/fe/lol-clash/assets/animations/lottie/overview-toggle-button.json", (e => {
                        const t = s.lottie.loadAnimation({
                            container: this.$(".clash-overview-toggle-button-icon-container").get(0),
                            renderer: "svg",
                            loop: !1,
                            autoplay: !1,
                            animationData: e
                        });
                        this.set("toggleButtonAnim", t)
                    }))
                },
                _createTimelineAnimation() {
                    let e = this.get("lastTimelineAnimation");
                    return e && e.isActive() && e.kill(), e = new s.gsap.TimelineMax({
                        paused: !0
                    }), this.set("lastTimelineAnimation", e), e
                },
                _animateMatchesToSummary() {
                    const e = this._getMatchesViewElements(),
                        t = this._getSummaryViewElements(),
                        n = this.$(".clash-overview-matches-container"),
                        a = this._createTimelineAnimation();
                    a.add("start", "+=0");
                    let i = 0,
                        o = -10;
                    for (let t = 0; t < e.length; t++) a.to(e[t], .13, {
                        opacity: 0,
                        ease: s.gsap.Linear.easeNone
                    }, `start+=${i}`), a.to(e[t], .13, {
                        y: o,
                        ease: "cb17-67"
                    }, `start+=${i}`), i += .07, o -= 20;
                    a.to(n, .4, {
                        opacity: 0
                    }, "start"), a.to(t, .23, {
                        opacity: 1,
                        y: 0
                    }, "start"), a.play()
                },
                _animateSummaryToMatches() {
                    const e = this._getMatchesViewElements().reverse(),
                        t = this._getSummaryViewElements(),
                        n = this.$(".clash-overview-matches-container"),
                        a = this._createTimelineAnimation();
                    a.add("start", "+=0");
                    let i = 0;
                    for (let t = 0; t < e.length; t++) a.to(e[t], .13, {
                        opacity: 1,
                        ease: s.gsap.Linear.easeNone
                    }, `start+=${i}`), e[t].className.includes("header") ? a.to(e[t], .13, {
                        y: 0,
                        ease: "cb67"
                    }, `start+=${i}`) : (a.to(e[t], .13, {
                        y: 7,
                        ease: "cb6-1"
                    }, `start+=${i}`), a.to(e[t], .04, {
                        y: 0,
                        ease: "cb1"
                    }, `start+=${i+.14}`)), i += .06;
                    a.to(n, .13, {
                        opacity: 1
                    }, "start"), a.to(t, .23, {
                        opacity: 0
                    }, "start"), a.to(t, .23, {
                        y: 30,
                        ease: "cb33-1"
                    }, "start"), a.play()
                },
                _getMatchesViewElements() {
                    const e = [],
                        t = [this.$("#winners-bracket-header"), this.$(".clash-overview-winners-match-container"), this.$("#losers-bracket-header"), this.$(".clash-overview-losers-match-container")];
                    for (let n = 0; n < t.length; n++) t[n].length && e.push.apply(e, t[n]);
                    return e
                },
                _getSummaryViewElements() {
                    return this.$(".clash-overview-summary-container")
                },
                actions: {
                    toggleContents() {
                        s.AudioManager.playAudio("button-circlegold-click");
                        const e = this.get("showSummary"),
                            t = this.get("toggleButtonAnim");
                        e ? (this._animateSummaryToMatches(), t.playSegments([0, 30], !0)) : (this._animateMatchesToSummary(), t.playSegments([31, 60], !0)), this.set("showSummary", !e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "uZc8OBWe",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\overview-period\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\overview-period\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\overview-period\\\\index.js\\" "],["text","\\n"],["append",["unknown",["matchStatsObserver"]],false],["text","\\n"],["append",["unknown",["trophyAnimationObserver"]],false],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-overview-period-name"],["flush-element"],["append",["unknown",["periodName"]],false],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-overview-period-content"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-overview-period-data"],["flush-element"],["text","\\n"],["block",["if"],[["get",["noMatches"]]],null,16,8],["text","  "],["close-element"],["text","\\n  "],["open-element","img",[]],["dynamic-attr","class",["concat",["clash-overview-period-top-frame ",["helper",["if"],[["get",["noMatches"]],"grey"],null]]]],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/images/overview/Frame_",["helper",["if"],[["get",["noMatches"]],"Grey","Top"],null],".svg"]]],["flush-element"],["close-element"],["text","\\n"],["block",["unless"],[["get",["noMatches"]]],null,0],["text","  "],["open-element","img",[]],["dynamic-attr","class",["concat",["clash-overview-period-bottom-frame ",["helper",["if"],[["get",["noMatches"]],"grey"],null]]]],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/images/overview/Frame_",["helper",["if"],[["get",["noMatches"]],"Grey","Bottom"],null],".svg"]]],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clash-overview-period-button"],["modifier",["action"],[["get",[null]],"toggleContents"]],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-overview-toggle-button-icon-container"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","clash-overview-losers-match-container"],["flush-element"],["text","\\n              "],["append",["helper",["overview-match"],null,[["rosterStats","matchStats","championSummary","localPlayerSummonerId"],[["get",["rosterStats"]],["get",["matchStats"]],["get",["championSummary"]],["get",["localPlayerSummonerId"]]]]],false],["text","\\n            "],["close-element"],["text","\\n"]],"locals":["matchStats"]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","clash-overview-period-bracket-header"],["static-attr","id","losers-bracket-header"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-overview-period-bracket-header-text"],["flush-element"],["append",["unknown",["tra","clash_overview_bracket_type_losers"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"],["block",["each"],[["get",["losersBracketMatches"]]],null,1]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","clash-overview-winners-match-container"],["flush-element"],["text","\\n            "],["append",["helper",["overview-match"],null,[["rosterStats","matchStats","bracketSize","championSummary","localPlayerSummonerId"],[["get",["rosterStats"]],["get",["matchStats"]],["get",["bracketSize"]],["get",["championSummary"]],["get",["localPlayerSummonerId"]]]]],false],["text","\\n          "],["close-element"],["text","\\n"]],"locals":["matchStats","index"]},{"statements":[["text","          "],["open-element","img",[]],["static-attr","class","clash-overview-period-trophy-bkgd"],["static-attr","src","/fe/lol-clash/assets/images/overview/Trophy_Frame_Win.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","img",[]],["static-attr","class","clash-overview-period-trophy no-trophy"],["dynamic-attr","src",["concat",[["unknown",["rewardImagePath"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["append",["helper",["clash-trophy"],null,[["tier","theme","bracketSize"],[["get",["rosterStats","tier"]],["get",["rosterStats","tournamentNameLocKey"]],["get",["periodStats","bracketSize"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","lol-uikit-video-state-machine",[]],["static-attr","id","clash-overview-trophy-magic-video-state-machine"],["flush-element"],["text","\\n            "],["open-element","lol-uikit-video-group",[]],["flush-element"],["text","\\n              "],["open-element","lol-uikit-video-state",[]],["static-attr","state","null"],["static-attr","no-preserve-state",""],["flush-element"],["close-element"],["text","\\n              "],["open-element","lol-uikit-video-state",[]],["static-attr","state","clash-overview-trophy-magic"],["static-attr","no-preserve-state",""],["flush-element"],["text","\\n                "],["open-element","lol-uikit-video",[]],["static-attr","type","idle"],["static-attr","name","trophy-magic-loop"],["static-attr","preload",""],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/animations/videos/overview/trophy-magic-",["unknown",["periodStats","bracketSize"]],".webm"]]],["flush-element"],["close-element"],["text","\\n              "],["close-element"],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-overview-summary-container"],["flush-element"],["text","\\n"],["block",["unless"],[["get",["isNotWinner"]]],null,7],["block",["if"],[["get",["hasWonTrophy"]]],null,6,5],["block",["unless"],[["get",["isNotWinner"]]],null,4],["text","        "],["open-element","div",[]],["static-attr","class","clash-overview-period-wins-losses-container"],["flush-element"],["text","\\n          "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-overview-period-wins-losses-nums ",["helper",["if"],[["get",["isNotWinner"]],"no-trophy","trophy"],null]]]],["flush-element"],["append",["unknown",["numWinsLossesTxt"]],false],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-overview-period-wins-losses-text"],["flush-element"],["append",["unknown",["tra","clash_overview_wins_losses"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n\\n"],["text","      "],["open-element","div",[]],["static-attr","class","clash-overview-matches-container"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-overview-period-bracket-header"],["static-attr","id","winners-bracket-header"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-overview-period-bracket-header-text"],["flush-element"],["append",["unknown",["bracketHeader"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"],["block",["each"],[["get",["winnersBracketMatches"]]],null,3],["block",["if"],[["get",["hasLosersBracket"]]],null,2],["text","      "],["close-element"],["text","\\n\\n"],["text","      "],["open-element","img",[]],["static-attr","class","clash-overview-motion-blur"],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/images/overview/motion-blur-",["unknown",["periodStats","bracketSize"]],".png"]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","clash-overview-period-data-background-upcoming"],["flush-element"],["close-element"],["text","\\n        "]],"locals":[]},{"statements":[["block",["if"],[["get",["isUpcomingPeriod"]]],null,9]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","clash-overview-period-data-background-day-planner"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-overview-day-planner-contents"],["flush-element"],["text","\\n            "],["open-element","img",[]],["static-attr","class","clash-overview-day-planner-header"],["static-attr","src","/fe/lol-clash/assets/images/overview/day-planner-header.png"],["flush-element"],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-overview-day-planner-title"],["flush-element"],["append",["unknown",["dayPlannerTitle"]],false],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-overview-day-planner-return-time-container"],["flush-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","clash-overview-day-planner-return-time-deco"],["flush-element"],["close-element"],["text","\\n              "],["append",["unknown",["nextPhaseStartTimeLocal"]],false],["text","\\n              "],["open-element","div",[]],["static-attr","class","clash-overview-day-planner-return-time-deco"],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-overview-day-planner-description"],["flush-element"],["append",["helper",["sanitize"],[["get",["dayPlannerText"]]],null],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isNextPeriod"]]],null,11,10]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","clash-overview-period-data-background-missed"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-overview-period-wins-losses-container"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-overview-period-wins-losses-nums no-trophy"],["flush-element"],["text","0"],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-overview-period-wins-losses-text"],["flush-element"],["append",["unknown",["tra","clash_overview_matches_played"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isMissedPeriod"]]],null,13,12]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","clash-overview-period-data-background-missed"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-overview-period-wins-losses-container"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-overview-period-wins-losses-nums no-trophy"],["flush-element"],["append",["unknown",["tra","clash_overview_stat_recipient_not_applicable"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-overview-period-data-no-data"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isNotPeriod"]]],null,15,14],["text","      "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(592), e.exports = a.Ember.Component.extend({
                classNames: ["clash-overview-match"],
                layout: n(593),
                rosterStats: null,
                matchStats: null,
                bracketSize: 16,
                gdsService: a.Ember.inject.service("gds"),
                isFinalRound: a.Ember.computed("matchStats.round", "bracketSize", (function() {
                    return String(this.get("matchStats.round")) === String(Math.log2(this.get("bracketSize")))
                })),
                localPlayerChampionId: a.Ember.computed("matchStats.playerChampionIds", "localPlayerSummonerId", (function() {
                    const e = this.get("matchStats.playerChampionIds"),
                        t = this.get("localPlayerSummonerId");
                    return e && t ? e[t] : null
                })),
                localPlayerChampionInfo: a.Ember.computed("localPlayerChampionId", "championSummary", (function() {
                    const e = this.get("localPlayerChampionId"),
                        t = this.get("championSummary");
                    return e && t ? a._.find(t, (t => t.id === e)) : null
                })),
                killCountTxt: a.Ember.computed("matchStats.kills", "matchStats.opponentKills", "matchStats.durationMs", (function() {
                    const e = this.get("matchStats.kills") || 0,
                        t = this.get("matchStats.opponentKills") || 0;
                    return this.get("matchStats.durationMs") ? `${e} - ${t}` : this.get("tra.clash_overview_bye")
                })),
                winLossImage: a.Ember.computed("matchStats.win", "matchStats.durationMs", "matchStats.opponentShortName", "bracketSize", "matchStats.loserBracket", (function() {
                    if (!this.get("matchStats.win")) return "xmark";
                    if (!this.get("matchStats.durationMs")) {
                        if (!this.get("matchStats.opponentShortName")) return "bye-simple"
                    }
                    return this.get("isFinalRound") && !this.get("matchStats.loserBracket") ? "trophy" : "blue-checkmark"
                })),
                rosterLogoPath: a.Ember.computed("matchStats.opponentShortName", "matchStats.opponentIconId", "matchStats.opponentIconColorId", "gdsService.ready", (function() {
                    if (!this.get("gdsService.ready")) return "";
                    if (!this.get("matchStats.opponentShortName")) {
                        const e = this.get("rosterStats.rosterIconId"),
                            t = this.get("rosterStats.rosterIconColorId");
                        return this.get("gdsService").getLogoPath(e, t)
                    }
                    const e = this.get("matchStats.opponentIconId"),
                        t = this.get("matchStats.opponentIconColorId");
                    return this.get("gdsService").getLogoPath(e, t)
                })),
                actions: {
                    showMatchHistory() {
                        const e = this.get("rosterStats.playerStats");
                        if (!e || !Object.keys(e).length) return void a.logger.warning("no player stats in roster history. cannot open match history");
                        let t;
                        Object.keys(e).map((e => {
                            t || (t = e)
                        })), (0, a.getProvider)().getOptional("rcp-fe-lol-match-history").then((e => {
                            e.displayMatchDetails({
                                gameId: this.get("matchStats.gameId"),
                                summonerId: parseInt(t),
                                defaultSection: "scoreboard",
                                sections: ["overview", "scoreboard", "stats", "graph", "runes"],
                                dataSource: "legs"
                            })
                        }), (e => a.logger.error("Provider getOptional failure", e)))
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "vhR9p3P/",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\overview-period\\\\overview-match\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\overview-period\\\\overview-match\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\overview-period\\\\overview-match\\\\index.js\\" "],["text","\\n"],["open-element","img",[]],["static-attr","class","clash-overview-period-details-divider"],["static-attr","src","/fe/lol-clash/assets/images/overview/Dropdown_Divider_Fade.svg"],["flush-element"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","clash-overview-match-round-num"],["flush-element"],["append",["unknown",["matchStats","round"]],false],["close-element"],["text","\\n"],["open-element","img",[]],["static-attr","class","clash-overview-match-opponent-logo"],["dynamic-attr","src",["concat",[["unknown",["rosterLogoPath"]]]]],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["matchStats","opponentShortName"]]],null,2,1],["block",["if"],[["get",["matchStats","gameId"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-overview-match-view-history"],["modifier",["action"],[["get",[null]],"showMatchHistory"]],["flush-element"],["append",["unknown",["tra","clash_overview_view"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-overview-match-no-opponent-tag"],["flush-element"],["append",["unknown",["tra","clash_overview_no_opponent"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-overview-match-opponent-tag"],["flush-element"],["append",["unknown",["matchStats","opponentShortName"]],false],["close-element"],["text","\\n  "],["open-element","img",[]],["static-attr","class","clash-overview-match-win-loss"],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/images/",["unknown",["winLossImage"]],".png"]]],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-overview-match-kills"],["flush-element"],["append",["unknown",["killCountTxt"]],false],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(595), e.exports = a.Ember.Component.extend({
                classNames: ["clash-overview-game"],
                layout: n(596),
                index: -1,
                rosterStats: {},
                matchStats: {},
                localPlayerSummonerId: -1,
                gdsService: a.Ember.inject.service("gds"),
                isUpcoming: a.Ember.computed("matchStats.isUpcoming", (function() {
                    return this.get("matchStats.isUpcoming")
                })),
                isNoOpponent: a.Ember.computed("matchStats.opponentShortName", (function() {
                    return !this.get("matchStats.opponentShortName")
                })),
                isNoGame: a.Ember.computed("matchStats", (function() {
                    return !Object.keys(this.get("matchStats") || {})
                })),
                noMatchData: a.Ember.computed("matchStats", (function() {
                    return this.get("isUpcoming") || this.get("isNoOpponent") || this.get("isNoGame")
                })),
                titleTxt: a.Ember.computed("matchStats", "matchStats.round", "matchStats.opponentShortName", (function() {
                    const e = this.get("matchStats.round") || Number(this.get("index")) + 1,
                        t = this.get("matchStats.opponentShortName");
                    return this.get("tra").formatString("clash_scouting_intro_game_count", {
                        round: e
                    }) + (t ? ` vs. ${t}` : "")
                })),
                victoryDefeatTxt: a.Ember.computed("matchStats.win", (function() {
                    return this.get("matchStats.win") ? this.get("tra.clash_scouting_history_victory") : this.get("tra.clash_scouting_history_defeat")
                })),
                killCountTxt: a.Ember.computed("matchStats.kills", "matchStats.opponentKills", "matchStats.durationMs", (function() {
                    return `${this.get("matchStats.kills")||0} - ${this.get("matchStats.opponentKills")||0}`
                })),
                gameTimeTxt: a.Ember.computed("matchStats.durationMs", (function() {
                    const e = this.get("matchStats.durationMs") || 0,
                        t = Math.floor(e / 6e4),
                        n = (e % 6e4 / 1e3).toFixed(0);
                    return t + ":" + (n < 10 ? "0" : "") + n
                })),
                gameScoreTxt: a.Ember.computed("killCountTxt", "gameTimeTxt", "matchStats.durationMs", (function() {
                    const e = this.get("matchStats.durationMs"),
                        t = this.get("matchStats.opponentShortName");
                    if (!e && !t) return this.get("tra.clash_overview_bye");
                    return `${this.get("killCountTxt")} ◇ ${this.get("gameTimeTxt")}`
                })),
                localPlayerChampionId: a.Ember.computed("matchStats.playerChampionIds", "localPlayerSummonerId", (function() {
                    const e = this.get("matchStats.playerChampionIds"),
                        t = this.get("localPlayerSummonerId");
                    return e && t ? e[t] : null
                })),
                championIdList: a.Ember.computed("matchStats.playerChampionIds", "localPlayerChampionId", "rosterStats.periodStats.playerBids", (function() {
                    const e = [],
                        t = this.get("matchStats.playerChampionIds") || {},
                        n = Object.keys(this.get("rosterStats.periodStats.0.playerBids") || {});
                    return Object.keys(t).forEach((a => {
                        n && !n.includes(a) || e.push({
                            championId: t[a],
                            isLocalPlayer: String(a) === String(this.get("localPlayerChampionId"))
                        })
                    })), e
                })),
                rosterLogoPath: a.Ember.computed("matchStats.opponentShortName", "matchStats.opponentIconId", "matchStats.opponentIconColorId", "gdsService.ready", (function() {
                    if (!this.get("gdsService.ready")) return "";
                    if (!this.get("matchStats.opponentShortName")) {
                        const e = this.get("rosterStats.rosterIconId"),
                            t = this.get("rosterStats.rosterIconColorId");
                        return this.get("gdsService").getLogoPath(e, t)
                    }
                    const e = this.get("matchStats.opponentIconId"),
                        t = this.get("matchStats.opponentIconColorId");
                    return this.get("gdsService").getLogoPath(e, t)
                })),
                actions: {
                    showMatchHistory() {
                        const e = this.get("rosterStats.playerStats");
                        if (!e || !Object.keys(e).length) return void a.logger.warning("no player stats in roster history. cannot open match history");
                        let t;
                        Object.keys(e).map((e => {
                            t || (t = e)
                        })), (0, a.getProvider)().getOptional("rcp-fe-lol-match-history").then((e => {
                            e.displayMatchDetails({
                                gameId: this.get("matchStats.gameId"),
                                summonerId: parseInt(t),
                                defaultSection: "scoreboard",
                                sections: ["overview", "scoreboard", "stats", "graph", "runes"],
                                dataSource: "legs"
                            })
                        }), (e => a.logger.error("Provider getOptional failure", e)))
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "gAJt6Wd8",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\overview-game\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\overview-game\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\overview-game\\\\index.js\\" "],["text","\\n"],["append",["unknown",["matchStatsObserver"]],false],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-overview-game-name"],["flush-element"],["append",["unknown",["titleTxt"]],false],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-overview-game-content"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-overview-game-data"],["flush-element"],["text","\\n"],["block",["if"],[["get",["noMatchData"]]],null,9,3],["text","  "],["close-element"],["text","\\n  "],["open-element","img",[]],["dynamic-attr","class",["concat",["clash-overview-game-top-frame ",["helper",["if"],[["get",["noMatches"]],"grey"],null]]]],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/images/overview/Frame_",["helper",["if"],[["get",["noMatches"]],"Grey","Bottom"],null],".svg"]]],["flush-element"],["close-element"],["text","\\n  "],["open-element","img",[]],["dynamic-attr","class",["concat",["clash-overview-game-bottom-frame ",["helper",["if"],[["get",["noMatches"]],"grey"],null]]]],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/images/overview/Frame_",["helper",["if"],[["get",["noMatches"]],"Grey","Bottom"],null],".svg"]]],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","clash-overview-game-match-history-text"],["modifier",["action"],[["get",[null]],"showMatchHistory"]],["flush-element"],["append",["unknown",["tra","clash_overview_view_match_history"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["open-element","img",[]],["dynamic-attr","src",["concat",["/lol-game-data/assets/v1/champion-icons/",["unknown",["entry","championId"]],".png"]]],["static-attr","alt",""],["static-attr","class","champion-icon"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-framed-icon"],null,[["class","borderwidth"],["champion-icon-frame",2]],1]],"locals":["entry","index"]},{"statements":[["text","      \\n"],["text","      "],["open-element","div",[]],["static-attr","class","clash-overview-summary-container"],["flush-element"],["text","\\n\\n        "],["open-element","div",[]],["static-attr","class","clash-overview-game-victory-defeat-text"],["flush-element"],["append",["unknown",["victoryDefeatTxt"]],false],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-overview-game-score-text"],["flush-element"],["append",["unknown",["gameScoreTxt"]],false],["close-element"],["text","\\n\\n        "],["open-element","div",[]],["static-attr","class","clash-overview-game-champions"],["flush-element"],["text","\\n\\n"],["block",["each"],[["get",["championIdList"]]],null,2],["text","\\n        "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["matchStats","durationMs"]]],null,0],["text","        \\n      "],["close-element"],["text","\\n\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","clash-overview-game-data-background-missed"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-overview-game-text-container"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-overview-game-text"],["flush-element"],["append",["unknown",["tra","clash_overview_no_opponent"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n        "]],"locals":[]},{"statements":[["block",["if"],[["get",["isNoOpponent"]]],null,4]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","clash-overview-game-data-background-missed"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-overview-game-text-container"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clash-overview-game-text"],["flush-element"],["append",["unknown",["tra","clash_overview_stat_recipient_not_applicable"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isNoGame"]]],null,6,5]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","clash-overview-game-data-background-upcoming"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-overview-game-data-no-data"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isUpcoming"]]],null,8,7],["text","      "],["close-element"],["text","\\n      \\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(598);
            var s = n(599);
            const i = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                basePaths: {
                    summoner: "/lol-summoner",
                    gameData: "/lol-game-data"
                },
                boundProperties: {
                    profileIconData: {
                        path: "/lol-game-data/assets/v1/profile-icons.json",
                        default: []
                    }
                }
            });
            e.exports = a.Ember.Component.extend(i, {
                classNames: ["clash-overview-stats-carousel"],
                layout: n(600),
                onInit: a.Ember.on("init", (function() {
                    const e = this.get("playerStats"),
                        t = [{
                            statsPage: [{
                                name: this.get("tra.clash_overview_stat_name_most_kills"),
                                calculated: this.getStatWinner(e, ["CHAMPIONS_KILLED"], "asc", "total", "rawStatsSum")
                            }, {
                                name: this.get("tra.clash_overview_stat_name_fewest_deaths"),
                                calculated: this.getStatWinner(e, ["NUM_DEATHS"], "desc", "total", "rawStatsSum")
                            }, {
                                name: this.get("tra.clash_overview_stat_name_most_assists"),
                                calculated: this.getStatWinner(e, ["ASSISTS"], "asc", "total", "rawStatsSum")
                            }, {
                                name: this.get("tra.clash_overview_stat_name_highest_cs"),
                                calculated: this.getStatWinner(e, ["MINIONS_KILLED", "NEUTRAL_MINIONS_KILLED"], "asc", "avg", "rawStatsSum")
                            }]
                        }, {
                            statsPage: [{
                                name: this.get("tra.clash_overview_stat_name_highest_vision_score"),
                                calculated: this.getStatWinner(e, ["VISION_SCORE"], "asc", "avg", "rawStatsSum")
                            }, {
                                name: this.get("tra.clash_overview_stat_name_most_multi_kills"),
                                calculated: this.getPriorityStatWinner(e, ["PENTA_KILLS", "QUADRA_KILLS, TRIPLE_KILLS", "DOUBLE_KILLS"], "asc", "total", "rawStatsSum", s.MOST_MULTI_KILLS_TRA_MAP)
                            }, {
                                name: this.get("tra.clash_overview_stat_name_largest_killing_spree"),
                                calculated: this.getStatWinner(e, ["LARGEST_KILLING_SPREE"], "asc", "total", "rawStatsMax")
                            }, {
                                name: this.get("tra.clash_overview_stat_name_most_gold_earned"),
                                calculated: this.getStatWinner(e, ["GOLD_EARNED"], "asc", "avg", "rawStatsSum")
                            }]
                        }];
                    this.set("statsCarousel", t)
                })),
                getStatWinner: function(e, t, n, s, i) {
                    let o, r;
                    "desc" === n ? (o = Number.MAX_SAFE_INTEGER, r = (e, t) => e < t) : (o = -1, r = (e, t) => e > t);
                    let l = o,
                        c = [];
                    for (const n in e) {
                        if (!e.hasOwnProperty(n)) continue;
                        const s = e[n][i];
                        let d = o;
                        for (const e of t) {
                            let t = s[e];
                            a.Util.isNumberOk(t) || (t = o), d === o ? d = t : t !== o && (d += t)
                        }
                        if (r(d, l)) l = d, c = [n];
                        else {
                            if (d === o) continue;
                            d === l && c.push(n)
                        }
                    }
                    if (l === o) l = this.get("tra.clash_overview_stat_no_data"), c = [];
                    else if ("avg" === s) {
                        const e = this.get("totalGamesPlayed");
                        l = Math.round(l / e * 10) / 10
                    }
                    return {
                        bestValue: l,
                        winnerSummonerIds: c
                    }
                },
                getPriorityStatWinner(e, t, n, a, s, i) {
                    let o;
                    for (const r of t) {
                        let t = r;
                        Array.isArray(r) || (t = [r]), o = this.getStatWinner(e, t, n, a, s);
                        const l = o.bestValue;
                        if (Number.isInteger(l) && l > 0) {
                            if (i) {
                                const e = i[r];
                                o.bestValue = e ? this.getExpandedStatDislayName(e, l) : this.get("tra.clash_overview_stat_no_data")
                            }
                            break
                        }
                    }
                    return o
                },
                getExpandedStatDislayName(e, t) {
                    return this.get("tra").formatString(e, {
                        stat: t
                    }).toUpperCase()
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.MOST_MULTI_KILLS_TRA_MAP = void 0;
            t.MOST_MULTI_KILLS_TRA_MAP = {
                PENTA_KILLS: "clash_overview_stat_penta_kill_count",
                QUADRA_KILLS: "clash_overview_stat_quadra_kill_count",
                TRIPLE_KILLS: "clash_overview_stat_triple_kill_count",
                DOUBLE_KILLS: "clash_overview_stat_double_kill_count"
            }
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "Z/YwWRY3",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\overview-stats-carousel\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\overview-stats-carousel\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\overview-stats-carousel\\\\index.js\\" "],["text","\\n"],["block",["clash-carousel"],null,[["itemData","useButtonsOnContent","useButtonsOnNav","wrapStyle"],[["get",["statsCarousel"]],true,false,"wrap"]],2]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","clash-overview-stats-carousel-divider"],["static-attr","src","/fe/lol-clash/assets/images/overview/Stat_Divider.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["index"]]],null,0],["text","      "],["append",["helper",["overview-stat"],null,[["stat","teamLogoPath"],[["get",["stat"]],["get",["teamLogoPath"]]]]],false],["text","\\n"]],"locals":["stat","index"]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-overview-stats-carousel-content"],["flush-element"],["text","\\n"],["block",["each"],[["get",["data","statsPage"]]],null,1],["text","  "],["close-element"],["text","\\n"]],"locals":["data"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(602);
            const s = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                basePaths: {
                    gameData: "/lol-game-data"
                },
                boundProperties: {
                    summonerData: {
                        path: "/lol-summoner/v1/summoners/{{summonerId}}",
                        default: {
                            displayName: ""
                        }
                    }
                }
            });
            e.exports = a.Ember.Component.extend(s, {
                classNames: ["clash-overview-stat"],
                layout: n(603),
                clashService: a.Ember.inject.service("clash"),
                chatParticipants: a.Ember.computed.alias("clashService.localPlayer.chatParticipants"),
                showSummoner: !1,
                onInit: a.Ember.on("init", (function() {
                    const e = this.get("stat.calculated.bestValue"),
                        t = this.get("stat.calculated.winnerSummonerIds");
                    if ((a.Util.isNumberOk(e) || /[0-9]/.test(e)) && t && t.length > 0) {
                        this.set("showSummoner", !0);
                        const e = t[0];
                        this.set("summonerId", e), this.get("api.gameData").get("/assets/v1/profile-icons.json").then((e => {
                            this.set("profileIconData", e)
                        }))
                    }
                })),
                puuid: a.Ember.computed.alias("summonerData.puuid"),
                gameName: a.Ember.computed("summonerData.gameName", (function() {
                    return this.get("summonerData.gameName") || null
                })),
                tagLine: a.Ember.computed("summonerData.tagLine", (function() {
                    return this.get("summonerData.tagLine") || null
                })),
                summonerName: a.Ember.computed("summonerData.displayName", (function() {
                    return this.get("summonerData.displayName") || null
                })),
                chatRosterIconId: a.Ember.computed("summonerId", "chatParticipants", "chatParticipants.[]", "chatParticipants.@each.{id,icon}", (function() {
                    const e = this.get("summonerId"),
                        t = this.get("chatParticipants");
                    if (t && t.length) {
                        const n = t.find((t => t.summonerId === e));
                        if (n) return n.icon
                    }
                    return null
                })),
                hoverCardOptions: {
                    targetAnchor: {
                        x: "center",
                        y: "top"
                    },
                    tooltipAnchor: {
                        x: "center",
                        y: "bottom"
                    },
                    offset: {
                        x: 0,
                        y: -3
                    }
                },
                summonerIconPath: a.Ember.computed("summonerData.profileIconId", "profileIconData", "summonerId", "chatRosterIconId", (function() {
                    let e = this.get("summonerData.profileIconId");
                    const t = this.get("profileIconData"),
                        n = this.get("summonerId");
                    if (!e || !t || !n) return "";
                    const a = this.get("chatRosterIconId");
                    Number.isInteger(a) && -1 !== a && (e = a);
                    const s = t.find((t => String(t.id) === String(e)));
                    return s ? s.iconPath : ""
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "WOwFlc3W",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\overview-stats-carousel\\\\overview-stat\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\overview-stats-carousel\\\\overview-stat\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\tournament-overview\\\\overview-stats-carousel\\\\overview-stat\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-overview-stat-name"],["flush-element"],["append",["unknown",["stat","name"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["showSummoner"]]],null,2,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-overview-stat-subtext"],["flush-element"],["append",["unknown",["stat","calculated","bestValue"]],false],["close-element"],["text","\\n  "],["open-element","span",[]],["flush-element"],["text","\\n    "],["append",["helper",["hovercard-component"],null,[["options","summonerId"],[["get",["hoverCardOptions"]],["get",["summonerId"]]]]],false],["text","\\n    "],["open-element","img",[]],["static-attr","class","clash-overview-stat-img"],["static-attr","src","/fe/lol-clash/assets/images/overview/No_Summoner.png"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-overview-stat-na"],["flush-element"],["append",["unknown",["tra","clash_overview_stat_recipient_not_applicable"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["summonerIconPath"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","clash-overview-stat-num"],["flush-element"],["append",["unknown",["stat","calculated","bestValue"]],false],["close-element"],["text","\\n  "],["open-element","span",[]],["flush-element"],["text","\\n    "],["append",["helper",["hovercard-component"],null,[["options","summonerId"],[["get",["hoverCardOptions"]],["get",["summonerId"]]]]],false],["text","\\n"],["block",["uikit-framed-icon"],null,[["borderwidth","class"],[2,"clash-overview-stat-img"]],1],["text","  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-overview-stat-recipient"],["flush-element"],["text","\\n    "],["append",["helper",["player-name"],null,[["format","puuid","gameName","tagLine","summonerName"],["short",["get",["puuid"]],["get",["gameName"]],["get",["tagLine"]],["get",["summonerName"]]]]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(88)) && a.__esModule ? a : {
                    default: a
                };
            n(605), e.exports = s.Ember.Component.extend({
                classNames: ["clash-missed-lockin-modal"],
                layout: n(606),
                tournamentId: null,
                phaseId: null,
                tournament: s.Ember.computed("tournamentId", (function() {
                    const e = this.get("tournamentId");
                    return this._tournament = i.default.create({
                        id: e
                    }), this._tournament
                })),
                phase: s.Ember.computed("tournament.phases.[]", "phaseId", (function() {
                    const e = this.get("phaseId");
                    return this.get("tournament.phases").find((t => t.id === e))
                })),
                nextPhase: s.Ember.computed("tournament.phases.[]", "phaseId", (function() {
                    const e = this.get("phaseId"),
                        t = this.get("tournament.phases");
                    for (let n = 0; n < t.length; ++n)
                        if (t[n].id === e) return t[n + 1]
                })),
                phaseStartTimeStr: s.Ember.computed("tournament", "tournament.locale", "phase.scoutingStartTime", (function() {
                    const e = this.get("phase.scoutingStartTime");
                    return this._phaseStartTimeString(e)
                })),
                nextPhaseStartTimeStr: s.Ember.computed("tournament", "tournament.locale", "nextPhase.scoutingStartTime", (function() {
                    const e = this.get("nextPhase.scoutingStartTime");
                    return this._phaseStartTimeString(e)
                })),
                firstPhaseIdInCurrentPeriod: s.Ember.computed("tournament.phases.[]", "phaseId", (function() {
                    let e = -1,
                        t = -1;
                    const n = this.get("phaseId"),
                        a = this.get("tournament.phases");
                    for (let s = 0; s < a.length; ++s) {
                        const i = a[s];
                        if (-1 !== e && e === i.period || (e = i.period, t = i.id), i.id === n) return t
                    }
                    return n
                })),
                isFinalPhaseInPeriod: s.Ember.computed("phase", "nextPhase", (function() {
                    const e = this.get("phase"),
                        t = this.get("nextPhase"),
                        n = e ? e.period : -1;
                    return !t || n !== t.period
                })),
                isFinalPhaseInTournament: s.Ember.computed("tournament.phases.[]", "phaseId", (function() {
                    const e = this.get("tournament.phases"),
                        t = this.get("phaseId");
                    return 0 === e.length || e[e.length - 1].id === t
                })),
                showNextFlight: s.Ember.computed("isFinalPhaseInPeriod", "isFinalPhaseInTournament", (function() {
                    const e = this.get("isFinalPhaseInTournament"),
                        t = this.get("isFinalPhaseInPeriod");
                    return !e && !t
                })),
                header: s.Ember.computed("isFinalPhaseInPeriod", "tournament.locale", "nextPhaseStartTimeStr", (function() {
                    return this.get("isFinalPhaseInPeriod") ? this.get("tra.clash_missed_lockin_modal_header") : this.get("tra").formatString("clash_missed_flight_modal_header", {
                        time: this.get("nextPhaseStartTimeStr")
                    })
                })),
                description: s.Ember.computed("isFinalPhaseInPeriod", "isFinalPhaseInTournament", "nextPhaseStartTimeStr", (function() {
                    const e = this.get("isFinalPhaseInTournament"),
                        t = this.get("isFinalPhaseInPeriod");
                    return e ? this.get("tra.clash_missed_lockin_modal_description_finalday") : t ? this.get("tra.clash_missed_lockin_modal_description") : this.get("tra").formatString("clash_missed_flight_modal_description", {
                        time: this.get("nextPhaseStartTimeStr")
                    })
                })),
                _phaseStartTimeString(e) {
                    const t = this.get("tournament"),
                        n = this.get("tournament.locale");
                    return t.getTimeString(n, e, {
                        hour: "numeric",
                        minute: "numeric"
                    })
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "16mzIa4p",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\missed-lockin-modal\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\missed-lockin-modal\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\missed-lockin-modal\\\\index.js\\" "],["text","\\n"],["open-element","lol-uikit-content-block",[]],["static-attr","type","dialog-medium"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-missed-lockin-modal-header"],["flush-element"],["append",["unknown",["header"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-missed-lockin-modal-day-planner"],["flush-element"],["text","\\n"],["block",["if"],[["get",["showNextFlight"]]],null,1,0],["text","  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-missed-lockin-modal-description"],["flush-element"],["append",["unknown",["description"]],false],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["helper",["day-planner"],null,[["tournament","warningPhaseId","isInteractive"],[["get",["tournament"]],["get",["firstPhaseIdInCurrentPeriod"]],false]]],false],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-missed-lockin-modal-day-planner-bottom-border"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","clash-missed-lockin-modal-bracket-times-container"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-missed-lockin-modal-bracket-time previous-phase"],["flush-element"],["text","\\n          "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/bracket-icon.png"],["flush-element"],["close-element"],["text","\\n          "],["open-element","h5",[]],["flush-element"],["append",["unknown",["phaseStartTimeStr"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-missed-lockin-modal-bracket-time"],["flush-element"],["text","\\n          "],["open-element","img",[]],["static-attr","src","/fe/lol-clash/assets/images/bracket-icon.png"],["flush-element"],["close-element"],["text","\\n          "],["open-element","h5",[]],["flush-element"],["append",["unknown",["nextPhaseStartTimeStr"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(608);
            var s = n(9);
            const i = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                boundProperties: {
                    storePageLink: {
                        path: "/lol-platform-config/v1/namespaces/ClashConfig/StorePageLink",
                        default: "tickets"
                    }
                }
            });
            e.exports = a.Ember.Component.extend(i, {
                classNames: ["clash-ticket-selector"],
                layout: n(609),
                clashService: a.Ember.inject.service("clash"),
                premiumTicketsEnabled: a.Ember.computed.alias("clashService.premiumTicketsEnabled"),
                tournament: null,
                localPlayer: null,
                onSelectTicket: null,
                onClose: null,
                currentBuyin: a.Ember.computed.alias("localPlayer.currentBuyin"),
                buyinType: a.Ember.computed.alias("localPlayer.buyinType"),
                buyInOptions: a.Ember.computed.alias("tournament.buyInOptions"),
                buyInOptionsPremium: a.Ember.computed.alias("tournament.buyInOptionsPremium"),
                entryFee: a.Ember.computed.alias("tournament.entryFee"),
                availableTickets: a.Ember.computed.alias("localPlayer.availableTickets"),
                ticketQuantityLeft: null,
                ticketQuantityRight: null,
                ticketTypeLeft: null,
                ticketTypeRight: null,
                onDidInsertElement: a.Ember.on("didInsertElement", (function() {
                    a.Ember.run.next((() => {
                        this._animateOpen()
                    }))
                })),
                isTicketQuantityLeftValid: a.Ember.computed("ticketQuantityLeft", (function() {
                    return a.Util.isNumberOk(this.get("ticketQuantityLeft"))
                })),
                isTicketQuantityRightValid: a.Ember.computed("ticketQuantityRight", (function() {
                    return a.Util.isNumberOk(this.get("ticketQuantityRight"))
                })),
                currentBuyinObserver: a.Ember.computed("buyInOptions.[]", "buyInOptionsPremium.[]", "premiumTicketsEnabled", (function() {
                    this._calculateBuyinOptions(this.get("buyInOptions"), this.get("buyInOptionsPremium"))
                })),
                _calculateBuyinOptions(e, t) {
                    const n = this.get("premiumTicketsEnabled"),
                        a = e ? e.filter((e => 0 !== Number(e))) : [],
                        i = t ? t.filter((e => 0 !== Number(e))) : [];
                    if (!a.length) {
                        const e = this.get("entryFee") > 0 ? null : 0,
                            t = i.length ? i[0] : null;
                        return this.set("ticketQuantityLeft", e), this.set("ticketTypeLeft", s.TicketType.BASIC), this.set("ticketQuantityRight", t), void this.set("ticketTypeRight", s.TicketType.PREMIUM)
                    }
                    this.set("ticketTypeLeft", s.TicketType.BASIC), this.set("ticketQuantityLeft", a[0]), n ? (this.set("ticketTypeRight", s.TicketType.PREMIUM), i.length ? this.set("ticketQuantityRight", i[0]) : this.set("ticketQuantityRight", null)) : (this.set("ticketTypeRight", s.TicketType.BASIC), a.length <= 1 ? this.set("ticketQuantityRight", null) : this.set("ticketQuantityRight", a[1]))
                },
                _animateOpen() {
                    const e = this.$(".clash-ticket-element.left"),
                        t = this.$(".clash-ticket-element.right"),
                        n = this.$(".clash-ticket-flyout.left"),
                        a = this.$(".clash-ticket-flyout.right"),
                        s = this.$(".clash-ticket-select-close-button .clash-generic-button-primary-img-container img"),
                        i = this._createTimelineAnimation();
                    i.add("start", "+=0"), i.to(e, .01, {
                        opacity: 1
                    }, "start"), i.to(t, .01, {
                        opacity: 1
                    }, "start"), i.fromTo(e, .12, {
                        x: 55
                    }, {
                        x: 0
                    }, "start"), i.fromTo(t, .12, {
                        x: -55
                    }, {
                        x: 0
                    }, "start"), i.fromTo(s, .25, {
                        rotation: 45
                    }, {
                        rotation: 0
                    }, "start"), i.to(n, .01, {
                        opacity: 1
                    }, "start"), i.to(a, .01, {
                        opacity: 1
                    }, "start"), i.to(n, .01, {
                        opacity: 0
                    }, "start+=0.13"), i.to(a, .01, {
                        opacity: 0
                    }, "start+=0.13"), i.eventCallback("onStart", (() => {
                        n.css("pointer-events", "all"), a.css("pointer-events", "all")
                    })), i.eventCallback("onComplete", (() => {
                        n.css("pointer-events", "none"), a.css("pointer-events", "none")
                    })), i.play()
                },
                _animateClose() {
                    const e = this.$(".clash-ticket-element.left"),
                        t = this.$(".clash-ticket-element.right"),
                        n = this.$(".clash-ticket-flyout.left"),
                        a = this.$(".clash-ticket-flyout.right"),
                        s = this.$(".clash-ticket-selector-backdrop"),
                        i = this.$(".clash-ticket-select-close-button"),
                        o = this._createTimelineAnimation();
                    o.add("start", "+=0"), o.fromTo(e, .12, {
                        x: 0
                    }, {
                        x: 55
                    }, "start+=0.01"), o.fromTo(t, .12, {
                        x: 0
                    }, {
                        x: -55
                    }, "start+=0.01"), o.to(n, .01, {
                        opacity: 1
                    }, "start"), o.to(a, .01, {
                        opacity: 1
                    }, "start"), o.to(n, .01, {
                        opacity: 0
                    }, "start+=0.13"), o.to(a, .01, {
                        opacity: 0
                    }, "start+=0.13"), o.to(s, .12, {
                        opacity: 0
                    }, "start"), o.to(i, .1, {
                        opacity: 0
                    }, "start"), n.css("pointer-events", "all"), a.css("pointer-events", "all");
                    return r = o.play(), new Promise((function(e) {
                        r.eventCallback("onComplete", (() => {
                            e(!0)
                        }))
                    }));
                    var r
                },
                _animateSelect(e) {
                    const t = this.$(".clash-ticket-element.left"),
                        n = this.$(".clash-ticket-element.right"),
                        s = this.$(".clash-ticket-select-close-button"),
                        i = this.$(".clash-ticket-selector-background"),
                        o = this.$(".clash-ticket-flyout.left"),
                        r = this.$(".clash-ticket-flyout.right"),
                        l = this.$(".clash-ticket-selector-backdrop");
                    this.set("isAnimating", !0);
                    const c = this._createTimelineAnimation();
                    c.add("start", "+=0"), c.to(s, .2, {
                        opacity: 0
                    }, "start"), c.to(i, .2, {
                        opacity: 0
                    }, "start"), c.to(l, .2, {
                        opacity: 0
                    }, "start"), t.selector.includes(e) ? c.fromTo(t, .35, {
                        x: 0,
                        ease: a.gsap.Expo.easeOut
                    }, {
                        x: 56
                    }, "start") : (c.fromTo(t, .35, {
                        x: 0
                    }, {
                        x: 55
                    }, "start+=0.01"), c.to(t, .2, {
                        opacity: 0
                    }, "start+=0.01")), n.selector.includes(e) ? c.fromTo(n, .4, {
                        x: 0,
                        ease: a.gsap.Expo.easeOut
                    }, {
                        x: -56
                    }, "start") : (c.fromTo(n, .2, {
                        x: 0
                    }, {
                        x: -55
                    }, "start+=0.01"), c.to(n, .2, {
                        opacity: 0
                    }, "start+=0.01")), o.css("pointer-events", "all"), r.css("pointer-events", "all"), c.eventCallback("onComplete", (() => {
                        this.set("isAnimating", !1)
                    }));
                    return d = c.play(), new Promise((function(e) {
                        d.eventCallback("onComplete", (() => {
                            e(!0)
                        }))
                    }));
                    var d
                },
                _createTimelineAnimation() {
                    let e = this.get("lastTimelineAnimation");
                    return e && e.isActive() && e.kill(), e = new a.gsap.TimelineMax({
                        paused: !0
                    }), this.set("lastTimelineAnimation", e), e
                },
                actions: {
                    onHover(e, t) {
                        this.get("localPlayer").setBidPreview(e, t)
                    },
                    onHoverLeave() {
                        this.get("localPlayer").setBidPreview(0, null)
                    },
                    onClick(e, t, n) {
                        const s = this.get("availableTickets") || [],
                            i = this.get("buyinType") === t ? this.get("currentBuyin") : 0;
                        if (s[t] + i < e) {
                            const e = this.get("storePageLink");
                            return void a.Router.navigateTo("rcp-fe-lol-store", {
                                page: e
                            })
                        }
                        const o = this.get("onSelectTicket");
                        if (o && o(e, t), this.get("localPlayer").setBidPreview(e, t), e) this._animateSelect(n).then((() => {
                            const e = this.get("onClose");
                            e && e()
                        }));
                        else {
                            const e = this.get("onClose");
                            e && e()
                        }
                    },
                    close() {
                        this.get("localPlayer").setBidPreview(0, null), this._animateClose().then((() => {
                            const e = this.get("onClose");
                            e && e()
                        }))
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "pxZBXfaB",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-selector\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-selector\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-selector\\\\index.js\\" "],["text","\\n"],["append",["unknown",["currentBuyinObserver"]],false],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-ticket-selector-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-ticket-selector-backdrop"],["flush-element"],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","clash-ticket-selector-contents"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-ticket-selector-background-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","clash-ticket-selector-background"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-ticket-element left"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isTicketQuantityLeftValid"]]],null,1],["text","    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-ticket-select-close-button"],["flush-element"],["text","\\n      "],["append",["helper",["generic-button"],null,[["onClick","overBgPath","downBgPath","baseBgPath","baseImgPath","overImgPath","downImgPath","iconSizeModifier","onClickSound","onHoverSound"],[["helper",["action"],[["get",[null]],"close"],null],"/fe/lol-clash/assets/images/ticket-selector/button-close.png","/fe/lol-clash/assets/images/ticket-selector/button-close-down.png","/fe/lol-clash/assets/images/ticket-selector/button-close.png","/fe/lol-clash/assets/images/ticket-selector/button-close-icon.png","/fe/lol-clash/assets/images/ticket-selector/button-close-icon-over.png","/fe/lol-clash/assets/images/ticket-selector/button-close-icon-down.png",1,"button-circlegold-click","button-circlegold-hover"]]],false],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-ticket-element right"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isTicketQuantityRightValid"]]],null,0],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["append",["helper",["ticket-selector-element"],null,[["textCssClass","ticketQuantity","ticketType","currentBuyin","buyinType","availableTickets","isAnimating","onClick","onHover","onHoverLeave"],["right",["get",["ticketQuantityRight"]],["get",["ticketTypeRight"]],["get",["currentBuyin"]],["get",["buyinType"]],["get",["availableTickets"]],["get",["isAnimating"]],["helper",["action"],[["get",[null]],"onClick"],null],["helper",["action"],[["get",[null]],"onHover"],null],["helper",["action"],[["get",[null]],"onHoverLeave"],null]]]],false],["text","\\n        "],["open-element","img",[]],["static-attr","class","clash-ticket-flyout left"],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/images/ticket-selector/clash-ticket-",["unknown",["ticketTypeRight"]],"-flyout.png"]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["append",["helper",["ticket-selector-element"],null,[["textCssClass","ticketQuantity","ticketType","currentBuyin","buyinType","availableTickets","isAnimating","onClick","onHover","onHoverLeave"],["left",["get",["ticketQuantityLeft"]],["get",["ticketTypeLeft"]],["get",["currentBuyin"]],["get",["buyinType"]],["get",["availableTickets"]],["get",["isAnimating"]],["helper",["action"],[["get",[null]],"onClick"],null],["helper",["action"],[["get",[null]],"onHover"],null],["helper",["action"],[["get",[null]],"onHoverLeave"],null]]]],false],["text","\\n        "],["open-element","img",[]],["static-attr","class","clash-ticket-flyout left"],["dynamic-attr","src",["concat",["/fe/lol-clash/assets/images/ticket-selector/clash-ticket-",["unknown",["ticketTypeLeft"]],"-flyout.png"]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(611);
            var s = n(9);
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-ticket-selector-element"],
                layout: n(612),
                clashService: a.Ember.inject.service("clash"),
                premiumTicketsEnabled: a.Ember.computed.alias("clashService.premiumTicketsEnabled"),
                ticketQuantity: null,
                ticketType: null,
                currentBuyin: null,
                buyinType: null,
                textCssClass: null,
                availableTickets: null,
                didClick: !1,
                isHovered: !1,
                isNotEnoughTickets: a.Ember.computed("availableTicketCount", "ticketQuantity", (function() {
                    return this.get("availableTicketCount") < this.get("ticketQuantity")
                })),
                hasZeroTickets: a.Ember.computed("availableTicketCount", (function() {
                    return 0 === this.get("availableTicketCount")
                })),
                availableTicketCount: a.Ember.computed("availableTickets.BASIC", "availableTickets.PREMIUM", (function() {
                    const e = this.get("availableTickets"),
                        t = this.get("ticketType");
                    return e && e[t]
                })),
                ticketTitleTxt: a.Ember.computed("ticketQuantity", "ticketType", "premiumTicketsEnabled", (function() {
                    const e = this.get("ticketQuantity"),
                        t = this.get("ticketType"),
                        n = this.get("premiumTicketsEnabled") ? t : e;
                    return e ? this.get(`tra.clash_tickets_${n}`) : ""
                })),
                ticketSubtitleText: a.Ember.computed("hasZeroTickets", "ticketType", (function() {
                    return this.get("hasZeroTickets") ? this.get("tra.clash_tickets_subtitle_purchase") : this.get(`tra.clash_tickets_reward_${this.get("ticketType")}`)
                })),
                isSelected: a.Ember.computed("currentBuyin", "buyinType", "ticketQuantity", "ticketType", (function() {
                    const e = this.get("currentBuyin"),
                        t = this.get("ticketQuantity");
                    return String(e) === String(t) && this.get("buyinType") === this.get("ticketType")
                })),
                baseBgPath: a.Ember.computed("isSelected", "ticketQuantity", "ticketType", "isAnimating", "premiumTicketsEnabled", (function() {
                    const e = this.get("isAnimating"),
                        t = this.get("isSelected"),
                        n = this.get("ticketQuantity"),
                        a = this.get("ticketType");
                    let i = this.get("premiumTicketsEnabled") ? a : n;
                    return 0 === n && a === s.TicketType.BASIC && (i = n), t && !e ? `/fe/lol-clash/assets/images/ticket-selector/clash-ticket-${i}-over.png` : `/fe/lol-clash/assets/images/ticket-selector/clash-ticket-${i}.png`
                })),
                overBgPath: a.Ember.computed("isSelected", "ticketQuantity", "ticketType", "premiumTicketsEnabled", (function() {
                    const e = this.get("isSelected"),
                        t = this.get("ticketQuantity"),
                        n = this.get("ticketType");
                    let a = this.get("premiumTicketsEnabled") ? n : t;
                    return 0 === t && n === s.TicketType.BASIC && (a = t), e ? `/fe/lol-clash/assets/images/ticket-selector/clash-ticket-${a}.png` : `/fe/lol-clash/assets/images/ticket-selector/clash-ticket-${a}-over.png`
                })),
                downBgPath: a.Ember.computed("isSelected", "ticketQuantity", "ticketType", "premiumTicketsEnabled", (function() {
                    const e = this.get("ticketQuantity"),
                        t = this.get("ticketType");
                    let n = this.get("premiumTicketsEnabled") ? t : e;
                    return 0 === e && t === s.TicketType.BASIC && (n = e), `/fe/lol-clash/assets/images/ticket-selector/clash-ticket-${n}-down.png`
                })),
                overImgPath: a.Ember.computed("isSelected", "ticketQuantity", (function() {
                    const e = this.get("isSelected"),
                        t = this.get("ticketQuantity");
                    return e && t ? "/fe/lol-clash/assets/images/ticket-selector/icon-return-arrow.png" : ""
                })),
                bottomImg: a.Ember.computed("isSelected", "isAnimating", "isHovered", (function() {
                    const e = this.get("isSelected"),
                        t = this.get("isAnimating"),
                        n = this.get("isHovered");
                    return !e || n || t ? "" : "/fe/lol-clash/assets/images/ticket-selector/checkmark.png"
                })),
                upStyle: a.Ember.computed("isSelected", "isNotEnoughTickets", (function() {
                    return this.get("isNotEnoughTickets") ? "opacity: 0.3" : ""
                })),
                overStyle: a.Ember.computed("isSelected", (function() {
                    return this.get("isSelected") ? "opacity: 0.3" : ""
                })),
                bottomTxt: a.Ember.computed("isSelected", "isHovered", "ticketQuantity", "isNotEnoughTickets", (function() {
                    const e = this.get("isSelected"),
                        t = this.get("ticketQuantity"),
                        n = this.get("isNotEnoughTickets"),
                        a = this.get("isHovered");
                    return e && t && a ? this.get("tra.clash_tickets_remove") : n ? this.get("tra.clash_tickets_buy") : ""
                })),
                bottomTxtStyleCss: a.Ember.computed("bottomTxt", (function() {
                    return this.get("isNotEnoughTickets") ? "underline" : ""
                })),
                bottomContainerVisibilityCss: a.Ember.computed("isSelected", "bottomTxt", "isHovered", "isNotEnoughTickets", (function() {
                    const e = this.get("isHovered"),
                        t = this.get("isNotEnoughTickets"),
                        n = this.get("bottomTxt"),
                        a = this.get("bottomImg"),
                        s = this.get("isSelected");
                    return (n || a) && (t || s || e) ? "" : "hidden"
                })),
                actions: {
                    onHover() {
                        this.sendAction("onHover", this.get("ticketQuantity"), this.get("ticketType")), this.element.querySelector(".clash-ticket-description-container").classList.remove("hidden"), this.element.querySelector(".clash-ticket-zero-tickets-overlay").classList.add("hidden"), this.set("isHovered", !0)
                    },
                    onHoverLeave() {
                        this.get("didClick") || this.sendAction("onHoverLeave"), this.element.querySelector(".clash-ticket-description-container").classList.add("hidden"), this.get("hasZeroTickets") && this.element.querySelector(".clash-ticket-zero-tickets-overlay").classList.remove("hidden"), this.set("isHovered", !1)
                    },
                    onClick() {
                        this.get("isSelected") ? this.sendAction("onClick", 0, null, this.get("textCssClass")) : this.sendAction("onClick", this.get("ticketQuantity"), this.get("ticketType"), this.get("textCssClass")), this.set("didClick", !0)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "uwvOnlAz",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-selector\\\\ticket-selector-element\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-selector\\\\ticket-selector-element\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\ticket-selector\\\\ticket-selector-element\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-ticket-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-ticket-description-container ",["unknown",["textCssClass"]]," hidden"]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-ticket-title"],["flush-element"],["append",["unknown",["ticketTitleTxt"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-ticket-subtitle"],["flush-element"],["append",["unknown",["ticketSubtitleText"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["append",["helper",["generic-button"],null,[["onClick","onHover","onHoverLeave","baseBgPath","overBgPath","downBgPath","overImgPath","upStyle","overStyle","iconSizeModifier","onClickSound","onHoverSound"],[["helper",["action"],[["get",[null]],"onClick"],null],["helper",["action"],[["get",[null]],"onHover"],null],["helper",["action"],[["get",[null]],"onHoverLeave"],null],["get",["baseBgPath"]],["get",["overBgPath"]],["get",["downBgPath"]],["get",["overImgPath"]],["get",["upStyle"]],["get",["overStyle"]],1,"button-circlegold-click","button-circlegold-hover"]]],false],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-ticket-zero-tickets-overlay ",["helper",["if"],[["get",["hasZeroTickets"]],"","hidden"],null]]]],["flush-element"],["text","0"],["close-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["clash-ticket-bottom-container ",["unknown",["bottomContainerVisibilityCss"]]," ",["unknown",["bottomTxtStyleCss"]]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["bottomTxt"]]],null,2,1],["text","  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","img",[]],["static-attr","class","clash-ticket-bottom-image"],["dynamic-attr","src",["concat",[["unknown",["bottomImg"]]]]],["flush-element"],["close-element"],["text","\\n    "]],"locals":[]},{"statements":[["block",["if"],[["get",["bottomImg"]]],null,0]],"locals":[]},{"statements":[["text","      "],["append",["unknown",["bottomTxt"]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(499),
                i = n(9);
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-awards-tooltip"],
                layout: n(614),
                style: n(615),
                locale: a.Ember.computed("regionLocale", "collectibleItem", (function() {
                    return (this.get("regionLocale") || "en_US").replace("_", "-")
                })),
                collectibleItemName: a.Ember.computed("collectibleItem.name", (function() {
                    return this.get("collectibleItem.name")
                })),
                awardType: a.Ember.computed.alias("collectibleItem.awardType"),
                showTeamContainer: a.Ember.computed("awardType", "collectibleItem.data", "collectibleItem.data.rewardSpec.theme", (function() {
                    const e = this.get("collectibleItem.data.rewardSpec.theme");
                    return !i.THEMES_EOS.includes(e) && ((this.get("awardType") === s.CLASH_AWARDS_ROW_CONFIG.TROPHY.id || this.get("awardType") === s.CLASH_AWARDS_ROW_CONFIG.BANNER.id) && this.get("collectibleItem.data"))
                })),
                isLogo: a.Ember.computed.equal("awardType", s.CLASH_AWARDS_ROW_CONFIG.LOGO.id),
                tier: a.Ember.computed("collectibleItem.data.tier", (function() {
                    return (this.get("collectibleItem.data.tier") || "").replace("tier_", "")
                })),
                description: a.Ember.computed("collectibleItem.data", "awardType", "locale", (function() {
                    const e = this.get("awardType"),
                        t = this.get("collectibleItem"),
                        n = this.get("locale");
                    if (!e || !t) return "";
                    if (e === s.CLASH_AWARDS_ROW_CONFIG.TROPHY.id) {
                        if (!t.data || !t.data.earnedDate) return "";
                        const e = new Date(t.data.earnedDate).toLocaleDateString(n, {
                            year: "numeric",
                            month: "long",
                            day: "numeric"
                        });
                        return this.get("tra").formatString("clash_overview_bracket_type", {
                            bracketSize: t.data.bracket
                        }) + " ⋄ " + e
                    }
                    if (e === s.CLASH_AWARDS_ROW_CONFIG.BANNER.id) {
                        if (!t.data || !t.data.earnedDate) return "";
                        return new Date(t.data.earnedDate).toLocaleDateString(n, {
                            year: "numeric",
                            month: "long",
                            day: "numeric"
                        })
                    }
                    return e === s.CLASH_AWARDS_ROW_CONFIG.LOGO.id ? this.get(`tra.clash_awards_logo_source_${t.sourceType}`) : ""
                }))
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "IncDIbIi",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\awards\\\\awards-tooltip\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\awards\\\\awards-tooltip\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\awards\\\\awards-tooltip\\\\index.js\\" "],["text","\\n"],["open-element","lol-uikit-tooltip",[]],["flush-element"],["text","\\n  "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["static-attr","class","clash-awards-tooltip-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","top-content"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","collectible-name"],["flush-element"],["text","\\n        "],["open-element","div",[]],["dynamic-attr","class",["concat",["name ",["helper",["if"],[["get",["isLogo"]],"logo"],null]]]],["flush-element"],["append",["unknown",["collectibleItemName"]],false],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","description"],["flush-element"],["append",["unknown",["description"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["showTeamContainer"]]],null,1],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","              "],["open-element","div",[]],["static-attr","class","clash-awards-team-tier"],["flush-element"],["append",["helper",["tier-placement-visual"],null,[["tier"],[["get",["tier"]]]]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","team-info-container separator"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-awards-team-logo"],["flush-element"],["text","\\n          "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["collectibleItem","data","logoPath"]]]]],["static-attr","class","clash-awards-team-logo-img"],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-awards-team-tag"],["flush-element"],["text","\\n          "],["append",["helper",["if"],[["get",["collectibleItem","data","teamShortName"]],["get",["collectibleItem","data","teamShortName"]],["get",["tra","clash_roster_details_placeholder_team_tag"]]],null],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-awards-vertical-separator"],["flush-element"],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clash-awards-name-column"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-awards-team-name"],["flush-element"],["text","\\n            "],["append",["helper",["if"],[["get",["collectibleItem","data","teamName"]],["get",["collectibleItem","data","teamName"]],["get",["tra","clash_roster_details_placeholder_team_name"]]],null],false],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clash-awards-tier-row"],["flush-element"],["text","\\n"],["block",["if"],[["get",["tier"]]],null,0],["text","          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(617);
            const s = "/v1/lft/team/requests";
            e.exports = a.Ember.Component.extend({
                classNames: ["clash-pending-lft-requests-modal"],
                layout: n(618),
                clashService: {},
                pendingRequestList: [],
                tournament: a.Ember.computed.alias("clashService.tournament"),
                localPlayer: a.Ember.computed.alias("clashService.localPlayer"),
                localPlayerSummonerId: a.Ember.computed.alias("localPlayer.summonerId"),
                isCallInProgress: !1,
                didInsertElement() {
                    this._super(...arguments), this._binding = (0, a.dataBinding)("/lol-clash", (0, a.getProvider)().getSocket()), this._binding.addObserver(s, this, (e => {
                        e && this.set("pendingRequestList", e)
                    }))
                },
                willDestroyElement() {
                    this._super(...arguments), this._binding.removeObserver(s, this)
                },
                _revokeSuggestion(e) {
                    const t = this.get("localPlayerSummonerId"),
                        n = this.get("tournament.id");
                    return new Promise(((a, s) => {
                        this.get("clashService").revokeSuggestion(e, t).then((() => {
                            this.get("clashService").fetchPendingLftRequests(n).then((() => a())).catch((() => s()))
                        })).catch((() => s()))
                    }))
                },
                actions: {
                    cancelRequest(e) {
                        if (!this.get("isCallInProgress")) {
                            const t = this._revokeSuggestion(e);
                            a.Util.setBoolDuringPromise(t, this, "isCallInProgress")
                        }
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "JOHFnvGE",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\pending-lft-requests-modal\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\pending-lft-requests-modal\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\pending-lft-requests-modal\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-pending-lft-requests-header"],["flush-element"],["append",["unknown",["tra","clash_lft_pending_requests_title"]],false],["close-element"],["text","\\n"],["open-element","lol-uikit-content-block",[]],["static-attr","type","dialog-medium"],["static-attr","class","clash-pending-lft-requests-container"],["flush-element"],["text","\\n  "],["open-element","lol-uikit-scrollable",[]],["static-attr","class","clash-pending-lft-requests-scroll-pane"],["flush-element"],["text","\\n"],["block",["each"],[["get",["pendingRequestList"]]],null,0],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["helper",["pending-lft-requests-entry"],null,[["team","localPlayerSummonerId","cancelRequest"],[["get",["team"]],["get",["localPlayerSummonerId"]],["helper",["action"],[["get",[null]],"cancelRequest"],null]]]],false],["text","\\n"]],"locals":["team"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(620), e.exports = a.Ember.Component.extend({
                classNames: ["clash-pending-lft-requests-entry"],
                layout: n(621),
                team: {},
                gdsService: a.Ember.inject.service("gds"),
                logoId: a.Ember.computed.alias("team.logo"),
                logoColorId: a.Ember.computed.alias("team.logoColor"),
                openPositions: a.Ember.computed.alias("team.openPositions"),
                invitationId: a.Ember.computed.alias("team.invitationId"),
                members: a.Ember.computed.alias("team.members"),
                rosterLogoPath: a.Ember.computed("logoId", "logoColorId", "gdsService.ready", (function() {
                    if (!this.get("gdsService.ready")) return "";
                    const e = this.get("logoId"),
                        t = this.get("logoColorId");
                    return this.get("gdsService").getLogoPath(e, t)
                })),
                actions: {
                    cancelRequest() {
                        const e = this.get("invitationId");
                        return this.attrs.cancelRequest(e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "Fyxcs5IO",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\pending-lft-requests-modal\\\\pending-lft-requests-entry\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\pending-lft-requests-modal\\\\pending-lft-requests-entry\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_13_22\\\\LeagueClientContent_Release\\\\15682\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-clash\\\\src\\\\app\\\\components\\\\pending-lft-requests-modal\\\\pending-lft-requests-entry\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-pending-lft-requests-logo-container"],["flush-element"],["text","\\n  "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["rosterLogoPath"]]]]],["static-attr","class","clash-pending-lft-requests-logo-image"],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-pending-lft-requests-name-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-team-tag-name-wrapper"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-team-tag"],["flush-element"],["text","\\n      "],["append",["helper",["if"],[["get",["team","shortName"]],["get",["team","shortName"]],["get",["tra","clash_roster_details_placeholder_team_tag"]]],null],false],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","clash-team-name"],["flush-element"],["text","\\n      "],["append",["helper",["if"],[["get",["team","name"]],["get",["team","name"]],["get",["tra","clash_roster_details_placeholder_team_name"]]],null],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clash-team-tier"],["flush-element"],["append",["helper",["tier-placement"],null,[["rosterTier"],[["get",["team","tier"]]]]],false],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","clash-pending-lft-requests-cancel-button"],["flush-element"],["text","\\n  "],["append",["helper",["generic-button"],null,[["onClick","baseImgPath","overImgPath","downImgPath","downImgPath","onClickSound","onHoverSound"],[["helper",["action"],[["get",[null]],"cancelRequest"],null],"/fe/lol-clash/assets/images/buttons/icon-x.png","/fe/lol-clash/assets/images/buttons/icon-x-over.png","/fe/lol-clash/assets/images/buttons/icon-x-down.png","/fe/lol-clash/assets/images/buttons/icon-x-disabled.png","button-circlegold-click","button-circlegold-hover"]]],false],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            var s = class {
                constructor() {
                    this._voData = null, this._binding = a.dataBinding.bindTo((0, a.getProvider)().getSocket()), this._binding.addObserver("/lol-game-data/assets/v1/clash-vo.json", (e => {
                        e ? (a.logger.trace("clash-vo -- successfully received clash vo data!", e), this._voData = e) : a.logger.warning("clash-vo -- no vo data found in gamedata")
                    }))
                }
                play(e, t) {
                    if (!this._voData) return void a.logger.warning("clash-vo -- vo not ready");
                    let n = this._voData[e];
                    n || t && (n = this._voData[t]), n ? a.Audio.getChannel("voice").playSound(n || t) : a.logger.warning(`clash-vo -- unknown vo id [${e}], defaultId [${t}]`)
                }
            };
            t.default = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(624)) && a.__esModule ? a : {
                    default: a
                };
            class o extends i.default {
                constructor() {
                    super(), this._fullpageModalCount = 0;
                    const e = s.fullPageModalManager;
                    e.addEventListener("fullPageModalOpen", (() => this._onOpen())), e.addEventListener("fullPageModalClose", (() => this._onClose()))
                }
                hasModal() {
                    return this._fullpageModalCount > 0
                }
                getNoModalPromise() {
                    return this.hasModal() ? s.Util.waitForEvent(this, o.Event.FULL_CLOSE) : Promise.resolve()
                }
                _onOpen() {
                    ++this._fullpageModalCount, s.logger.trace("fullpage-modal-tracker -- count:", this._fullpageModalCount), this.dispatchEvent(o.Event.OPEN)
                }
                _onClose() {
                    --this._fullpageModalCount, s.logger.trace("fullpage-modal-tracker -- count:", this._fullpageModalCount), this.hasModal() ? this.dispatchEvent(o.Event.CLOSE) : this.dispatchEvent(o.Event.FULL_CLOSE)
                }
                static instance() {
                    return this._instance || (this._instance = new o), this._instance
                }
            }
            o.Event = {
                OPEN: "modal-open",
                CLOSE: "modal-close",
                FULL_CLOSE: "full-modal-close"
            };
            var r = o;
            t.default = r
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            t.default = class {
                constructor() {
                    this._listeners = {}, this._isHandlingEvent = !1, this._listenerDeltaDuringDispatch = []
                }
                addEventListener(e, t) {
                    if (e && t)
                        if (this._isHandlingEvent) {
                            const n = !0;
                            this._listenerDeltaDuringDispatch.push({
                                add: n,
                                event: e,
                                callback: t
                            })
                        } else this._listeners[e] = this._listeners[e] || [], this._listeners[e].push(t)
                }
                removeEventListener(e, t) {
                    const n = this._listeners[e];
                    if (e && t && n)
                        if (this._isHandlingEvent) {
                            const n = !0;
                            this._listenerDeltaDuringDispatch.push({
                                remove: n,
                                event: e,
                                callback: t
                            })
                        } else
                            for (let e = 0; e < n.length; ++e)
                                if (n[e] === t) {
                                    n.splice(e, 1);
                                    break
                                }
                }
                dispatchEvent(e) {
                    if (e && this._listeners[e]) {
                        this._isHandlingEvent = !0;
                        for (const t of this._listeners[e]) t && t();
                        this._isHandlingEvent = !1;
                        for (const e of this._listenerDeltaDuringDispatch) e.add ? this.addEventListener(e.event, e.callback) : e.remove && this.removeEventListener(e.event, e.callback);
                        this._listenerDeltaDuringDispatch = []
                    }
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(626)) && a.__esModule ? a : {
                    default: a
                };
            const o = "clash_subsection_none";
            t.default = class {
                constructor() {
                    this._defaultSubsectionId = o, this._isInitialized = !1, this._isEnabled = !1, this._isActive = !1, this._navigationTooltip = document.createElement("div"), this._registerSectionQueue = [], this._apiNavigationFull = {}
                }
                initialize(e) {
                    if (!this._isInitialized) {
                        for (this._apiNavigationFull = (0, i.default)(this._getDefaultSubsection.bind(this), this.renderNavigationTooltip.bind(this)), this._apiNavigationFull.subnavigationApi.addEventListener("screenShown", this._onScreenShown.bind(this)), this._apiNavigationFull.subnavigationApi.addEventListener("screenHidden", this._onScreenHidden.bind(this)); this._registerSectionQueue.length;) this._apiNavigationFull.subnavigationApi.registerSection(this._registerSectionQueue.pop());
                        this._isInitialized = !0, this.setEnabled(e)
                    }
                }
                getNavigation() {
                    return this._apiNavigationFull
                }
                setEnabled(e) {
                    this._isInitialized && (this._isEnabled = e, s.Navigation.setItemEnabled(this._apiNavigationFull.mainNavigationItem, e), e || this.showAlert(!1))
                }
                setActive(e) {
                    this._isInitialized && s.Navigation.setActive(this._apiNavigationFull.mainNavigationItem, e)
                }
                showAlert(e) {
                    this._isInitialized && (!e || !this.isActive() && this.isEnabled()) && s.Navigation.setItemAlert(this._apiNavigationFull.mainNavigationItem, e)
                }
                setDefaultSubsectionId(e) {
                    this._defaultSubsectionId = e
                }
                createTooltip(e) {
                    const t = document.createElement("lol-uikit-tooltip"),
                        n = s.UIKit.getTemplateHelper().contentBlockTooltipSystem(e);
                    return t.appendChild(n), t
                }
                createDisabledTooltipHtml(e) {
                    if (!e) return "";
                    const t = document.createElement("div"),
                        n = this.createTooltip(e);
                    return t.appendChild(n), t.innerHTML
                }
                setDisabledTooltip(e) {
                    this._isInitialized && (this._navigationTooltip.innerHTML = this.createDisabledTooltipHtml(e))
                }
                renderNavigationTooltip() {
                    return this._navigationTooltip
                }
                isInitialized() {
                    return this._isInitialized
                }
                registerSection(e) {
                    this._isInitialized ? this._apiNavigationFull.subnavigationApi.registerSection(e) : this._registerSectionQueue.push(e)
                }
                isActive() {
                    return this._isActive || !1
                }
                isEnabled() {
                    return this._isEnabled || !1
                }
                _getDefaultSubsection() {
                    return this._defaultSubsectionId || o
                }
                _onScreenShown() {
                    this._isActive = !0
                }
                _onScreenHidden() {
                    this._isActive = !1
                }
            }
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(627);
            n(641), e.exports = function(e, t) {
                const n = a.Navigation.getNavBarMenuItemId("CLASH"),
                    i = new s.MainNavigationMediator({
                        Navigation: a.Navigation,
                        Viewport: a.Viewport,
                        screenName: n,
                        displayPriority: 15,
                        displayNameLocKey: "navbar_competitive",
                        defaultSectionIdOnShow: e,
                        tooltipRenderer: t,
                        alignment: "right",
                        iconPath: "/fe/lol-clash/assets/images/trophy.png"
                    }),
                    o = i.getScreenNode(),
                    r = document.createElement("lol-uikit-navigation-bar"),
                    l = document.createElement("lol-uikit-section-controller");
                r.classList.add("rcp-fe-lol-clash-full-sub-nav"), r.setAttribute("type", "nav-bar-secondary"), o.appendChild(l), o.appendChild(r);
                const c = new s.NavigationBarMediator({
                        component: r,
                        TooltipManager: a.TooltipManager,
                        TemplateHelper: a.TemplateHelper
                    }),
                    d = new s.SectionControllerMediator({
                        component: l
                    });
                return {
                    subnavigationApi: new s.SubnavigationApi([i, c, d]),
                    mainNavigationItem: i.getMainNavigationItem(),
                    screenRoot: i.getScreenNode()
                }
            }
        }, (e, t, n) => {
            "use strict";
            var a = c(n(628)),
                s = c(n(634)),
                i = c(n(635)),
                o = c(n(638)),
                r = c(n(639)),
                l = c(n(640));

            function c(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = {
                SubnavigationApi: a.default,
                NavigationBarMediator: s.default,
                SectionControllerMediator: i.default,
                FullPageModalMediator: o.default,
                DialogFrameMediator: r.default,
                MainNavigationMediator: l.default
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var a = function() {
                    function e(e, t) {
                        for (var n = 0; n < t.length; n++) {
                            var a = t[n];
                            a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                        }
                    }
                    return function(t, n, a) {
                        return n && e(t.prototype, n), a && e(t, a), t
                    }
                }(),
                s = c(n(629)),
                i = c(n(630)),
                o = c(n(632)),
                r = n(633),
                l = n(631);

            function c(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            var d = "riotclient-lib-subnavigation",
                m = function(e) {
                    function t(e) {
                        ! function(e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, t);
                        var n = function(e, t) {
                            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return !t || "object" != typeof t && "function" != typeof t ? e : t
                        }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                        return n._mediators = n._validateMediators(e), n._mediators && n._mediators.forEach((function(e) {
                            e.setLibraryReference(n)
                        })), n._showParameters = null, n._screenShown = !1, n._registerEventListeners(), n
                    }
                    return function(e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                        e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                    }(t, e), a(t, [{
                        key: "_registerEventListeners",
                        value: function() {
                            this.addEventListener(l.EVENT_IN_SUBNAVIGATION_SUBSECTION_SELECTED, this._onSpecificSectionSelected.bind(this)), this.addEventListener(l.EVENT_IN_RENDER_SUBSECTION_SELECTED, this._onSpecificSectionSelected.bind(this)), this.addEventListener(l.EVENT_IN_MAIN_NAVIGATION_SELECTED, this._onFirstSectionEnabledSeleced.bind(this)), this.addEventListener(l.EVENT_IN_SECTION_WILL_SHOW, this._onSectionWillShow.bind(this)), this.addEventListener(l.EVENT_IN_SECTION_SHOW, this._onSectionShow.bind(this)), this.addEventListener(l.EVENT_IN_SECTION_WILL_HIDE, this._onSectionWillHide.bind(this)), this.addEventListener(l.EVENT_IN_SECTION_HIDE, this._onSectionHide.bind(this)), this.addEventListener(l.EVENT_IN_SCREEN_SHOWN, this._onScreenShow.bind(this)), this.addEventListener(l.EVENT_IN_SCREEN_HIDDEN, this._onScreenHide.bind(this))
                        }
                    }, {
                        key: "_onSectionWillShow",
                        value: function(e) {
                            this.dispatchEvent(l.EVENT_OUT_SECTION_WILL_SHOW, e, this._showParameters)
                        }
                    }, {
                        key: "_onSectionShow",
                        value: function(e) {
                            this.dispatchEvent(l.EVENT_OUT_SECTION_SHOW, e, this._showParameters)
                        }
                    }, {
                        key: "_onSectionWillHide",
                        value: function(e) {
                            this.dispatchEvent(l.EVENT_OUT_SECTION_WILL_HIDE, e, this._showParameters)
                        }
                    }, {
                        key: "_onSectionHide",
                        value: function(e) {
                            this.dispatchEvent(l.EVENT_OUT_SECTION_HIDE, e, this._showParameters)
                        }
                    }, {
                        key: "_onScreenShow",
                        value: function() {
                            this._screenShown = !0, this.dispatchEvent(l.EVENT_OUT_SCREEN_SHOWN)
                        }
                    }, {
                        key: "_onScreenHide",
                        value: function() {
                            this._screenShown = !1, this.dispatchEvent(l.EVENT_OUT_SCREEN_HIDDEN)
                        }
                    }, {
                        key: "_validateMediators",
                        value: function(e) {
                            if (e) {
                                if (Array.isArray(e)) return e.forEach((function(e) {
                                    if (!(e instanceof i.default)) throw new Error(d + " _validateMediators: Expected mediator to be an instance of Mediator")
                                })), e;
                                if (!(e instanceof i.default)) throw new Error(d + " _validateMediators: Expected mediator to be an instance of Mediator");
                                return [e]
                            }
                        }
                    }, {
                        key: "registerSection",
                        value: function(e) {
                            if (!e) throw new Error(d + " registerSection: properties is mandatory");
                            if (e.hasOwnProperty("id") || (console.warn(d + " registerSection: properties.id is mandatory. Using properties.title in it's place"), e.id = e.title.replace(" ", "_")), !e.hasOwnProperty("title")) throw new Error(d + " registerSection: properties.title is mandatory");
                            if (!e.hasOwnProperty("render")) throw new Error(d + " registerSection: properties.render is mandatory");
                            return e.priority = (0, r.sanitizeInteger)(e.priority, Number.MAX_SAFE_INTEGER), e.enabled = (0, r.sanitizeBoolean)(e.enabled, !0), this.dispatchEvent(l.EVENT_OUT_REGISTER_SUBSECTION, e), new o.default(this, e.id)
                        }
                    }, {
                        key: "setEnabled",
                        value: function(e, t) {
                            e && this.dispatchEvent(l.EVENT_OUT_SET_ENABLE_SUBSECTION, e, t)
                        }
                    }, {
                        key: "setTitle",
                        value: function(e, t) {
                            e && this.dispatchEvent(l.EVENT_OUT_SET_TITLE_SUBSECTION, e, t)
                        }
                    }, {
                        key: "setTooltip",
                        value: function(e, t) {
                            e && this.dispatchEvent(l.EVENT_OUT_SET_TOOLTIP_SUBSECTION, e, t)
                        }
                    }, {
                        key: "setShowAlert",
                        value: function(e, t) {
                            e && this.dispatchEvent(l.EVENT_OUT_SET_SHOW_ALERT_SUBSECTION, e, t)
                        }
                    }, {
                        key: "show",
                        value: function(e, t) {
                            e && (this._screenShown || this.dispatchEvent(l.EVENT_OUT_SCREEN_SHOWN), this._screenShown = !0, this._showParameters = t, this._onSpecificSectionSelected(e))
                        }
                    }, {
                        key: "destroy",
                        value: function() {
                            this._showParameters = null, this._mediators = null, this.dispatchEvent(l.EVENT_OUT_DESTROY), this.clearEventListeners()
                        }
                    }, {
                        key: "_onSpecificSectionSelected",
                        value: function(e) {
                            e && this.dispatchEvent(l.EVENT_OUT_SHOW_SUBSECTION, e, this._showParameters)
                        }
                    }, {
                        key: "_onFirstSectionEnabledSeleced",
                        value: function() {
                            this.dispatchEvent(l.EVENT_OUT_SHOW_FIRST_SUBSECTION_ENABLED)
                        }
                    }]), t
                }(s.default);
            t.default = m
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var a = t[n];
                        a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                    }
                }
                return function(t, n, a) {
                    return n && e(t.prototype, n), a && e(t, a), t
                }
            }();
            var a = function() {
                function e() {
                    ! function(e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this._listeners = new Map
                }
                return n(e, [{
                    key: "addEventListener",
                    value: function(e, t) {
                        this._listeners.has(e) || this._listeners.set(e, []), this._listeners.get(e).push(t)
                    }
                }, {
                    key: "removeEventListener",
                    value: function(e, t) {
                        var n = this._listeners.get(e),
                            a = void 0;
                        return !!(n && n.length && (a = n.indexOf(t)) > -1) && (n.splice(a, 1), this._listeners.set(e, n), !0)
                    }
                }, {
                    key: "clearEventListeners",
                    value: function() {
                        this._listeners.clear()
                    }
                }, {
                    key: "dispatchEvent",
                    value: function(e) {
                        for (var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), a = 1; a < t; a++) n[a - 1] = arguments[a];
                        var s = this._listeners.get(e);
                        return !(!s || !s.length) && (s.forEach((function(e) {
                            e.apply(void 0, n)
                        })), !0)
                    }
                }]), e
            }();
            t.default = a
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var a, s = function() {
                    function e(e, t) {
                        for (var n = 0; n < t.length; n++) {
                            var a = t[n];
                            a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                        }
                    }
                    return function(t, n, a) {
                        return n && e(t.prototype, n), a && e(t, a), t
                    }
                }(),
                i = n(629),
                o = (a = i) && a.__esModule ? a : {
                    default: a
                },
                r = n(631);
            var l = function() {
                function e(t) {
                    if (function(e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, e), t && !(t instanceof Element)) throw new Error("Mediator expects the component to be an instance of Element");
                    this._component = t, this._library = null, this._setComponentListeners()
                }
                return s(e, [{
                    key: "setLibraryReference",
                    value: function(e) {
                        var t = this;
                        if (!(e instanceof o.default)) throw new Error("Mediator expects lib to be an instance of Evented");
                        this._library = e, this._library.addEventListener(r.EVENT_OUT_SHOW_SUBSECTION, (function() {
                            return t._onApiShowSubsection.apply(t, arguments)
                        })), this._library.addEventListener(r.EVENT_OUT_REGISTER_SUBSECTION, (function() {
                            var e = ((arguments.length <= 0 ? void 0 : arguments[0]) || {}).registerWithMediators;
                            Array.isArray(e) && !e.includes(t.constructor.name) || t._onApiRegisterSubsection.apply(t, arguments)
                        })), this._library.addEventListener(r.EVENT_OUT_SET_ENABLE_SUBSECTION, (function() {
                            return t._onApiSetEnableSubsection.apply(t, arguments)
                        })), this._library.addEventListener(r.EVENT_OUT_SET_TITLE_SUBSECTION, (function() {
                            return t._onApiSetTitleSubsection.apply(t, arguments)
                        })), this._library.addEventListener(r.EVENT_OUT_SET_TOOLTIP_SUBSECTION, (function() {
                            return t._onApiSetTooltipSubsection.apply(t, arguments)
                        })), this._library.addEventListener(r.EVENT_OUT_SET_SHOW_ALERT_SUBSECTION, (function() {
                            return t._onApiSetShowAlertSubsection.apply(t, arguments)
                        })), this._library.addEventListener(r.EVENT_OUT_SCREEN_SHOWN, (function() {
                            return t._onApiScreenShow.apply(t, arguments)
                        })), this._library.addEventListener(r.EVENT_OUT_DESTROY, (function() {
                            return t._onDestroy.apply(t, arguments)
                        }))
                    }
                }, {
                    key: "_setComponentListeners",
                    value: function() {}
                }, {
                    key: "_onApiShowSubsection",
                    value: function() {}
                }, {
                    key: "_onApiRegisterSubsection",
                    value: function() {}
                }, {
                    key: "_onApiSetEnableSubsection",
                    value: function() {}
                }, {
                    key: "_onApiSetTitleSubsection",
                    value: function() {}
                }, {
                    key: "_onApiSetTooltipSubsection",
                    value: function() {}
                }, {
                    key: "_onApiSetShowAlertSubsection",
                    value: function() {}
                }, {
                    key: "_onApiScreenShow",
                    value: function() {}
                }, {
                    key: "_onDestroy",
                    value: function() {
                        this._component = null, this._library = null
                    }
                }]), e
            }();
            t.default = l
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            t.EVENT_IN_SUBNAVIGATION_SUBSECTION_SELECTED = "subnavigationSubsectionSelected", t.EVENT_IN_RENDER_SUBSECTION_SELECTED = "renderSubsectionSelected", t.EVENT_IN_MAIN_NAVIGATION_SELECTED = "mainNavigationSelected", t.EVENT_IN_MAIN_NAVIGATION_HIDDEN = "mainNavigationHidden", t.EVENT_IN_SCREEN_HIDDEN = "inScreenHidden", t.EVENT_IN_SCREEN_SHOWN = "inScreenShown", t.EVENT_IN_SECTION_WILL_SHOW = "sectionControllerWillShow", t.EVENT_IN_SECTION_SHOW = "sectionControllerShow", t.EVENT_IN_SECTION_WILL_HIDE = "sectionControllerWillHide", t.EVENT_IN_SECTION_HIDE = "sectionControllerHide", t.EVENT_OUT_SHOW_SUBSECTION = "showSubsection", t.EVENT_OUT_REGISTER_SUBSECTION = "registerSubsection", t.EVENT_OUT_SET_ENABLE_SUBSECTION = "setEnableSubsection", t.EVENT_OUT_SET_TITLE_SUBSECTION = "setTitleSubsection", t.EVENT_OUT_SET_TOOLTIP_SUBSECTION = "setTooltipSubsection", t.EVENT_OUT_SET_SHOW_ALERT_SUBSECTION = "setShowAlertSubsection", t.EVENT_OUT_SECTION_WILL_SHOW = "sectionWillShow", t.EVENT_OUT_SECTION_SHOW = "sectionShow", t.EVENT_OUT_SECTION_WILL_HIDE = "sectionWillHide", t.EVENT_OUT_SECTION_HIDE = "sectionHide", t.EVENT_OUT_SCREEN_HIDDEN = "screenHidden", t.EVENT_OUT_SCREEN_SHOWN = "screenShown", t.EVENT_OUT_DESTROY = "destroy"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var a = function() {
                    function e(e, t) {
                        for (var n = 0; n < t.length; n++) {
                            var a = t[n];
                            a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                        }
                    }
                    return function(t, n, a) {
                        return n && e(t.prototype, n), a && e(t, a), t
                    }
                }(),
                s = r(n(629)),
                i = r(n(628)),
                o = n(631);

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            var l = "riotclient-lib-subnavigation",
                c = function(e) {
                    function t(e, n) {
                        ! function(e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, t);
                        var a = function(e, t) {
                            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return !t || "object" != typeof t && "function" != typeof t ? e : t
                        }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                        if (!e) throw new Error(l + " SubsectionAPI - libRef is mandatory");
                        if (!n) throw new Error(l + " SubsectionAPI - sectionId is mandatory");
                        if (!(e instanceof i.default)) throw new Error(l + " SubsectionAPI - libRef should be an instance of API");
                        return a._libRef = e, a._sectionId = n, a._showing = !1, a._libRef.addEventListener(o.EVENT_OUT_SHOW_SUBSECTION, a._showSubsection.bind(a)), a._libRef.addEventListener(o.EVENT_OUT_SCREEN_HIDDEN, a._deselected.bind(a)), a._libRef.addEventListener(o.EVENT_OUT_SECTION_WILL_SHOW, a._sectionWillShow.bind(a)), a._libRef.addEventListener(o.EVENT_OUT_SECTION_SHOW, a._sectionShow.bind(a)), a._libRef.addEventListener(o.EVENT_OUT_SECTION_WILL_HIDE, a._sectionWillHide.bind(a)), a._libRef.addEventListener(o.EVENT_OUT_SECTION_HIDE, a._sectionHide.bind(a)), a._libRef.addEventListener(o.EVENT_OUT_DESTROY, a._onDestroy.bind(a)), a
                    }
                    return function(e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                        e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                    }(t, e), a(t, [{
                        key: "_onDestroy",
                        value: function() {
                            this.clearEventListeners(), this._libRef = null
                        }
                    }, {
                        key: "_sectionWillShow",
                        value: function(e, t) {
                            this._dispatchMyEvent(e, "willShow", t)
                        }
                    }, {
                        key: "_sectionShow",
                        value: function(e, t) {
                            this._dispatchMyEvent(e, "show", t)
                        }
                    }, {
                        key: "_sectionWillHide",
                        value: function(e, t) {
                            this._dispatchMyEvent(e, "willHide", t)
                        }
                    }, {
                        key: "_sectionHide",
                        value: function(e, t) {
                            this._dispatchMyEvent(e, "hide", t)
                        }
                    }, {
                        key: "_showSubsection",
                        value: function(e, t) {
                            e !== this._sectionId || this._showing ? e !== this._sectionId && this._deselected() : (this._showing = !0, this.dispatchEvent("selected", t))
                        }
                    }, {
                        key: "_deselected",
                        value: function() {
                            this._showing && (this._showing = !1, this.dispatchEvent("deselected"))
                        }
                    }, {
                        key: "_dispatchMyEvent",
                        value: function(e, t, n) {
                            e === this._sectionId && this.dispatchEvent(t, n)
                        }
                    }, {
                        key: "setEnabled",
                        value: function(e) {
                            this._libRef.setEnabled(this._sectionId, e)
                        }
                    }, {
                        key: "setTitle",
                        value: function(e) {
                            this._libRef.setTitle(this._sectionId, e)
                        }
                    }, {
                        key: "setTooltip",
                        value: function(e) {
                            this._libRef.setTooltip(this._sectionId, e)
                        }
                    }, {
                        key: "setShowAlert",
                        value: function(e) {
                            this._libRef.setShowAlert(this._sectionId, e)
                        }
                    }, {
                        key: "show",
                        value: function(e) {
                            this._libRef.show(this._sectionId, e)
                        }
                    }, {
                        key: "set",
                        value: function(e, t) {
                            var n = e[0].toUpperCase() + e.slice(1);
                            console.warn("SubsectionAPI.set(key, value) is deprecated. Please use set" + n + " instead, if supported"), "enabled" === e ? this.setEnabled(t) : "title" === e ? this.setTitle(t) : "tooltip" === e && this.setTooltip(t)
                        }
                    }]), t
                }(s.default);
            t.default = c
        }, (e, t) => {
            "use strict";

            function n(e, t) {
                return e ? isNaN(e) ? t : parseInt(e, 10) : t
            }

            function a(e, t) {
                return null == e ? t : !0 === e
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sanitizeInteger = n, t.sanitizeBoolean = a;
            var s = {
                sanitizeInteger: n,
                sanitizeBoolean: a
            };
            t.default = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.NAVIGATION_BAR_INDEX_ATTR = t.NAVIGATION_ITEM_ATTR_ALERT = t.NAVIGATION_ITEM_ATTR_DISABLED = t.NAVIGATION_ITEM_ATTR_PRIORITY = t.NAVIGATION_ITEM_ATTR_ID = t.EVENT_NAVIGATION_CLICKED = void 0;
            var a, s = function() {
                    function e(e, t) {
                        for (var n = 0; n < t.length; n++) {
                            var a = t[n];
                            a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                        }
                    }
                    return function(t, n, a) {
                        return n && e(t.prototype, n), a && e(t, a), t
                    }
                }(),
                i = function e(t, n, a) {
                    null === t && (t = Function.prototype);
                    var s = Object.getOwnPropertyDescriptor(t, n);
                    if (void 0 === s) {
                        var i = Object.getPrototypeOf(t);
                        return null === i ? void 0 : e(i, n, a)
                    }
                    if ("value" in s) return s.value;
                    var o = s.get;
                    return void 0 !== o ? o.call(a) : void 0
                },
                o = n(630),
                r = (a = o) && a.__esModule ? a : {
                    default: a
                },
                l = n(631),
                c = n(633);
            var d = t.EVENT_NAVIGATION_CLICKED = "lol-uikit-navigation-item-click-event",
                m = t.NAVIGATION_ITEM_ATTR_ID = "item-id",
                u = t.NAVIGATION_ITEM_ATTR_PRIORITY = "priority",
                p = t.NAVIGATION_ITEM_ATTR_DISABLED = "disabled",
                h = t.NAVIGATION_ITEM_ATTR_ALERT = "alert",
                g = t.NAVIGATION_BAR_INDEX_ATTR = "selectedindex",
                f = function(e) {
                    function t() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        ! function(e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, t);
                        var n = e.component;
                        if ("LOL-UIKIT-NAVIGATION-BAR" !== n.tagName) throw new Error("NavigationBarMediator expects the component to be a tag lol-uikit-navigation-bar");
                        var a = function(e, t) {
                            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return !t || "object" != typeof t && "function" != typeof t ? e : t
                        }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, n));
                        return a._options = e, a
                    }
                    return function(e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                        e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                    }(t, e), s(t, [{
                        key: "_onNavigationItemClicked",
                        value: function(e) {
                            var t = e.target.getAttribute(m);
                            t && this._library.dispatchEvent(l.EVENT_IN_SUBNAVIGATION_SUBSECTION_SELECTED, t)
                        }
                    }, {
                        key: "_setComponentListeners",
                        value: function() {
                            var e = this;
                            this._component.addEventListener(d, (function(t) {
                                return e._onNavigationItemClicked(t)
                            }))
                        }
                    }, {
                        key: "_getSectionDataById",
                        value: function(e) {
                            var t = Array.prototype.slice.call(this._component.childNodes);
                            t = t.filter((function(e) {
                                return "LOL-UIKIT-NAVIGATION-ITEM" === e.tagName
                            }));
                            for (var n = 0; n < t.length; n++) {
                                var a = t[n];
                                if (a.getAttribute(m) === e) return {
                                    element: a,
                                    index: n
                                }
                            }
                        }
                    }, {
                        key: "_onApiShowSubsection",
                        value: function(e) {
                            var t = this._getSectionDataById(e);
                            t ? this._component.setAttribute(g, t.index) : this._component.setAttribute(g, -1)
                        }
                    }, {
                        key: "_onApiRegisterSubsection",
                        value: function(e) {
                            var t = document.createElement("lol-uikit-navigation-item");
                            t.setAttribute(m, e.id), t.setAttribute(u, e.priority), t.innerHTML = e.title, !1 === e.enabled && t.setAttribute(p, "");
                            for (var n = this._component.childNodes, a = 0; a < n.length; a++) {
                                var s = n[a];
                                if ("LOL-UIKIT-NAVIGATION-ITEM" === s.tagName)
                                    if ((0, c.sanitizeInteger)(s.getAttribute(u), 1) > e.priority) return void this._component.insertBefore(t, s)
                            }
                            this._component.appendChild(t)
                        }
                    }, {
                        key: "_onApiSetEnableSubsection",
                        value: function(e, t) {
                            var n = this._getSectionDataById(e);
                            n && (t ? n.element.removeAttribute(p) : n.element.setAttribute(p, ""))
                        }
                    }, {
                        key: "_onApiSetTitleSubsection",
                        value: function(e, t) {
                            var n = this._getSectionDataById(e);
                            n && (n.element.innerHTML = t)
                        }
                    }, {
                        key: "_onApiSetTooltipSubsection",
                        value: function(e, t) {
                            var n = this._options,
                                a = n.TooltipManager,
                                s = n.TemplateHelper;
                            if (a && s) {
                                var i = this._getSectionDataById(e);
                                if (i)
                                    if ("string" == typeof t && t.length > 0) {
                                        var o = s.contentBlockTooltipSystem(t),
                                            r = document.createElement("lol-uikit-tooltip");
                                        r.appendChild(o);
                                        a.assign(i.element, r, null, {
                                            type: "system",
                                            targetAnchor: {
                                                x: "center",
                                                y: "bottom"
                                            },
                                            tooltipAnchor: {
                                                x: "center",
                                                y: "top"
                                            }
                                        })
                                    } else a.unassign(i.element)
                            } else console.warn("NavigationBarMediator requires TooltipManager and TemplateHelper dependencies to run setTooltip")
                        }
                    }, {
                        key: "_onApiSetShowAlertSubsection",
                        value: function(e, t) {
                            var n = this._getSectionDataById(e);
                            n && (t ? n.element.setAttribute(h, "") : n.element.removeAttribute(h))
                        }
                    }, {
                        key: "_onDestroy",
                        value: function() {
                            i(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "_onDestroy", this).call(this), this._options = null
                        }
                    }]), t
                }(r.default);
            t.default = f
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SECTION_ATTR_ID = t.SECTION_ATTR_DISABLED = t.SECTION_CONTROLLER_ATTR_SELECTED_ITEM = t.EVENT_SECTION_HIDE = t.EVENT_SECTION_WILL_HIDE = t.EVENT_SECTION_SHOW = t.EVENT_SECTION_WILL_SHOW = void 0;
            var a = function() {
                    function e(e, t) {
                        for (var n = 0; n < t.length; n++) {
                            var a = t[n];
                            a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                        }
                    }
                    return function(t, n, a) {
                        return n && e(t.prototype, n), a && e(t, a), t
                    }
                }(),
                s = function e(t, n, a) {
                    null === t && (t = Function.prototype);
                    var s = Object.getOwnPropertyDescriptor(t, n);
                    if (void 0 === s) {
                        var i = Object.getPrototypeOf(t);
                        return null === i ? void 0 : e(i, n, a)
                    }
                    if ("value" in s) return s.value;
                    var o = s.get;
                    return void 0 !== o ? o.call(a) : void 0
                },
                i = l(n(630)),
                o = l(n(636)),
                r = n(631);

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            var c = t.EVENT_SECTION_WILL_SHOW = "elementWillShow",
                d = t.EVENT_SECTION_SHOW = "elementShow",
                m = t.EVENT_SECTION_WILL_HIDE = "elementWillHide",
                u = t.EVENT_SECTION_HIDE = "elementHide",
                p = t.SECTION_CONTROLLER_ATTR_SELECTED_ITEM = "selected-item",
                h = t.SECTION_ATTR_DISABLED = "disabled",
                g = t.SECTION_ATTR_ID = "section-id",
                f = function(e) {
                    function t() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        ! function(e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, t);
                        var n = e.component;
                        if ("LOL-UIKIT-SECTION-CONTROLLER" !== n.tagName) throw new Error("SectionControllerMediator expected component with tag lol-uikit-section-controller");
                        var a = function(e, t) {
                            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return !t || "object" != typeof t && "function" != typeof t ? e : t
                        }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, n));
                        return a._options = e, a.sectionsRenders = {}, a._currentSectionId = a._component.getAttribute(p), a
                    }
                    return function(e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                        e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                    }(t, e), a(t, [{
                        key: "_getSectionById",
                        value: function(e) {
                            return this._component.querySelector("[section-id='" + e + "']")
                        }
                    }, {
                        key: "_onDestroy",
                        value: function() {
                            s(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "_onDestroy", this).call(this), this._options = null, this._currentSectionId = null, this.sectionsRenders = null
                        }
                    }, {
                        key: "_onSectionWillShow",
                        value: function() {
                            var e = this._component.getAttribute(p);
                            e && (this._currentSectionId = e, this._library.dispatchEvent(r.EVENT_IN_SECTION_WILL_SHOW, e))
                        }
                    }, {
                        key: "_onSectionShow",
                        value: function() {
                            var e = this._component.getAttribute(p);
                            e && (this._currentSectionId = e, this._library.dispatchEvent(r.EVENT_IN_SECTION_SHOW, e))
                        }
                    }, {
                        key: "_onSectionWillHide",
                        value: function() {
                            this._currentSectionId && this._library.dispatchEvent(r.EVENT_IN_SECTION_WILL_HIDE, this._currentSectionId)
                        }
                    }, {
                        key: "_onSectionHide",
                        value: function() {
                            this._currentSectionId && this._library.dispatchEvent(r.EVENT_IN_SECTION_HIDE, this._currentSectionId)
                        }
                    }, {
                        key: "_setComponentListeners",
                        value: function() {
                            this._component.addEventListener(c, this._onSectionWillShow.bind(this)), this._component.addEventListener(d, this._onSectionShow.bind(this)), this._component.addEventListener(m, this._onSectionWillHide.bind(this)), this._component.addEventListener(u, this._onSectionHide.bind(this))
                        }
                    }, {
                        key: "_renderSection",
                        value: function(e, t, n) {
                            for (var a = this.sectionsRenders[t], s = o.default.create(a, n), i = o.default.getDOMNode(s); e.firstChild;) e.removeChild(e.firstChild);
                            e.appendChild(i)
                        }
                    }, {
                        key: "_onApiShowSubsection",
                        value: function(e, t) {
                            if (this._component.getAttribute(p) !== e) {
                                var n = this._getSectionById(e);
                                if (n) this.sectionsRenders.hasOwnProperty(e) && !this._options.preload && this._renderSection(n, e, t), this._component.setAttribute(p, e)
                            }
                        }
                    }, {
                        key: "_onApiRegisterSubsection",
                        value: function(e) {
                            var t = document.createElement("lol-uikit-section");
                            t.setAttribute(g, e.id), e.enabled || t.setAttribute(h, ""), this.sectionsRenders[e.id] = e.render, this._options.preload && this._renderSection(t, e.id, e.params || {}), this._component.appendChild(t)
                        }
                    }, {
                        key: "_onApiSetEnableSubsection",
                        value: function(e, t) {
                            var n = this._getSectionById(e);
                            n && (t ? n.removeAttribute(h) : n.setAttribute(h, ""))
                        }
                    }]), t
                }(i.default);
            t.default = f
        }, (e, t, n) => {
            "use strict";
            const a = n(637);
            e.exports = new a
        }, e => {
            "use strict";
            const t = "use_public_only",
                n = new WeakMap;

            function a(e) {
                return n.has(e) || n.set(e, {}), n.get(e)
            }

            function s(e) {
                return null !== e && "object" == typeof e
            }
            const i = function() {
                this.factories = {}
            };
            i.prototype.setFactory = function(e, t) {
                if (s(e)) {
                    const n = "Component";
                    let a = e.name ? e.name : Object.keys(e)[0];
                    t = e.create ? e.create : e[a], -1 !== a.indexOf(n, a.length - n.length) && (a = a.substring(0, a.length - n.length)), e = a
                } else if ("function" == typeof e) {
                    throw new Error("ComponentFactory.setFactory: type needs to be an object or a string, not a function!")
                }
                this.factories[e] = t
            }, i.prototype.setPrivateFactory = function(e, t) {
                a(this)[e] = t
            }, i.prototype.getFactory = function(e) {
                const t = this.getPublicFactory(e);
                return t || this.getPrivateFactory(e)
            }, i.prototype.getPublicFactory = function(e) {
                e instanceof Object && (e = e.type);
                return this.factories[e]
            }, i.prototype.getPrivateFactory = function(e) {
                e instanceof Object && (e = e.type);
                return a(this)[e]
            }, i.prototype.getFactories = function() {
                return Object.assign({}, this.factories)
            }, i.prototype.setUpstreamComponentFactory = function(e) {
                const t = e.getFactories();
                Object.keys(t).forEach(function(e) {
                    this.setPrivateFactory(e, t[e])
                }.bind(this))
            }, i.prototype.create = function(e, t, n) {
                if ("string" == typeof e) return this.createByName(e, t, n);
                if ("function" == typeof e) return e(t);
                if (s(a = e) && a instanceof HTMLElement && 1 === a.nodeType || e.domNode) return e;
                var a;
                const i = this.create(e.type, t || e.data);
                return e.domNode = this.getDOMNode(i), e.classNames && e.classNames.forEach((function(t) {
                    e.domNode.classList.add(t)
                })), i
            }, i.prototype.createByName = function(e, t, n) {
                const a = this.findFactory(e, n);
                return a ? this.create(a, t) : this.buildDummy(e)
            }, i.prototype.findFactory = function(e, n) {
                return n === t ? this.getPublicFactory(e) : this.getFactory(e)
            }, i.prototype.buildDummy = function(e) {
                let t = document.createElement("div");
                return t.innerHTML = "not found: " + e, 1 === t.children.length && (t = t.children[0]), t
            }, i.prototype.getDOMNode = function(e) {
                if (e) return e instanceof HTMLElement || e instanceof Node ? e : e instanceof Object ? e.domNode : void 0
            }, i.prototype.exportable = function() {
                const e = this;
                return {
                    create: function(n, a) {
                        return e.create(n, a, t)
                    },
                    getFactories: function() {
                        return e.getFactories.apply(e, arguments)
                    }
                }
            }, i.prototype.reset = function() {
                this.factories = {}
            }, e.exports = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var a, s = function() {
                    function e(e, t) {
                        for (var n = 0; n < t.length; n++) {
                            var a = t[n];
                            a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                        }
                    }
                    return function(t, n, a) {
                        return n && e(t.prototype, n), a && e(t, a), t
                    }
                }(),
                i = function e(t, n, a) {
                    null === t && (t = Function.prototype);
                    var s = Object.getOwnPropertyDescriptor(t, n);
                    if (void 0 === s) {
                        var i = Object.getPrototypeOf(t);
                        return null === i ? void 0 : e(i, n, a)
                    }
                    if ("value" in s) return s.value;
                    var o = s.get;
                    return void 0 !== o ? o.call(a) : void 0
                },
                o = n(630),
                r = (a = o) && a.__esModule ? a : {
                    default: a
                },
                l = n(631);
            var c = ["Navigation"],
                d = function(e) {
                    function t() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        ! function(e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, t);
                        var n = function(e, t) {
                            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return !t || "object" != typeof t && "function" != typeof t ? e : t
                        }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, null));
                        return c.forEach((function(t) {
                            if (!e.hasOwnProperty(t)) throw new Error("FullPageModalMediator options[" + t + "] is mandatory")
                        })), n._options = e, n.screenNode = document.createElement("span"), n._fullPageModal = null, n._dispatchScreenHidden = function() {
                            n._library.dispatchEvent(l.EVENT_IN_SCREEN_HIDDEN)
                        }, n
                    }
                    return function(e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                        e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                    }(t, e), s(t, [{
                        key: "getScreenNode",
                        value: function() {
                            return this.screenNode
                        }
                    }, {
                        key: "_onApiScreenShow",
                        value: function() {
                            var e = this._options.Navigation;
                            this._fullPageModal = e.getFullPageModalManager().open({
                                data: {
                                    contents: this.screenNode
                                }
                            }), this._fullPageModal.domNode.addEventListener("close", this._dispatchScreenHidden)
                        }
                    }, {
                        key: "_onDestroy",
                        value: function() {
                            if (i(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "_onDestroy", this).call(this), this._fullPageModal) {
                                var e = this._fullPageModal.domNode;
                                e.removeEventListener("close", this._dispatchScreenHidden), e.dispatchEvent(new Event("close-modal", {
                                    bubbles: !0
                                }))
                            }
                            this._options = null, this.screenNode = null, this._fullPageModal = null, this._dispatchScreenHidden = null
                        }
                    }]), t
                }(r.default);
            t.default = d
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var a, s = function() {
                    function e(e, t) {
                        for (var n = 0; n < t.length; n++) {
                            var a = t[n];
                            a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                        }
                    }
                    return function(t, n, a) {
                        return n && e(t.prototype, n), a && e(t, a), t
                    }
                }(),
                i = function e(t, n, a) {
                    null === t && (t = Function.prototype);
                    var s = Object.getOwnPropertyDescriptor(t, n);
                    if (void 0 === s) {
                        var i = Object.getPrototypeOf(t);
                        return null === i ? void 0 : e(i, n, a)
                    }
                    if ("value" in s) return s.value;
                    var o = s.get;
                    return void 0 !== o ? o.call(a) : void 0
                },
                o = n(630),
                r = (a = o) && a.__esModule ? a : {
                    default: a
                },
                l = n(631);
            var c = ["UIKit"],
                d = function(e) {
                    function t() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        ! function(e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, t);
                        var n = function(e, t) {
                            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return !t || "object" != typeof t && "function" != typeof t ? e : t
                        }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, null));
                        return c.forEach((function(t) {
                            if (!e.hasOwnProperty(t)) throw new Error("DialogFrameMediator options[" + t + "] is mandatory")
                        })), n._options = e, n.dialogFrame = n._buildDialogFrame(), n._dispatchScreenHidden = function() {
                            n._library.dispatchEvent(l.EVENT_IN_SCREEN_HIDDEN)
                        }, n
                    }
                    return function(e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                        e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                    }(t, e), s(t, [{
                        key: "getScreenNode",
                        value: function() {
                            return this.dialogFrame
                        }
                    }, {
                        key: "_onApiScreenShow",
                        value: function() {
                            this._options.UIKit.getLayerManager().addLayer(this.dialogFrame), this.dialogFrame.addEventListener("dialogFrameDismissed", this._dispatchScreenHidden)
                        }
                    }, {
                        key: "_onDestroy",
                        value: function() {
                            i(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "_onDestroy", this).call(this);
                            var e = this._options.UIKit;
                            this.dialogFrame && (e.getLayerManager().removeLayer(this.dialogFrame), this.dialogFrame.removeEventListener("dialogFrameDismissed", this._dispatchScreenHidden)), this._options = null, this.dialogFrame = null, this._dispatchScreenHidden = null
                        }
                    }, {
                        key: "_buildDialogFrame",
                        value: function() {
                            var e = document.createElement("lol-uikit-dialog-frame"),
                                t = this._options.attributes || {};
                            for (var n in t) t.hasOwnProperty(n) && e.setAttribute(n, t[n]);
                            return this._options.dialogFrameClassName && e.classList.add(this._options.dialogFrameClassName), e
                        }
                    }]), t
                }(r.default);
            t.default = d
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var a, s = function() {
                    function e(e, t) {
                        for (var n = 0; n < t.length; n++) {
                            var a = t[n];
                            a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                        }
                    }
                    return function(t, n, a) {
                        return n && e(t.prototype, n), a && e(t, a), t
                    }
                }(),
                i = function e(t, n, a) {
                    null === t && (t = Function.prototype);
                    var s = Object.getOwnPropertyDescriptor(t, n);
                    if (void 0 === s) {
                        var i = Object.getPrototypeOf(t);
                        return null === i ? void 0 : e(i, n, a)
                    }
                    if ("value" in s) return s.value;
                    var o = s.get;
                    return void 0 !== o ? o.call(a) : void 0
                },
                o = n(630),
                r = (a = o) && a.__esModule ? a : {
                    default: a
                },
                l = n(631);
            var c = ["screenName", "displayPriority", "displayNameLocKey", "Viewport", "Navigation"],
                d = function(e) {
                    function t() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        ! function(e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, t);
                        var n = function(e, t) {
                            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return !t || "object" != typeof t && "function" != typeof t ? e : t
                        }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, null));
                        c.forEach((function(t) {
                            if (!e.hasOwnProperty(t)) throw new Error("MainNavigationMediator options[" + t + "] is mandatory")
                        })), n._options = Object.assign({
                            alignment: "left"
                        }, e);
                        var a = e.Viewport,
                            s = e.Navigation;
                        return e.defaultSectionIdOnShow && (n.defaultSectionIdOnShow = e.defaultSectionIdOnShow), n.screenRoot = a.main().getScreenRoot(e.screenName), n.screenNode = n.screenRoot.getElement(), n.navigationItem = s.addItem({
                            show: n._onMainNavigationShow.bind(n),
                            hide: n._onMainNavigationHide.bind(n)
                        }, {
                            id: e.screenName,
                            priority: e.displayPriority,
                            alignment: n._options.alignment,
                            iconPath: n._options.iconPath,
                            iconClickVideo: n._options.iconClickVideo,
                            displayNameLocKey: n._options.displayNameLocKey,
                            disabled: n._options.disabled,
                            tooltipRenderer: n._options.tooltipRenderer
                        }), n.screenRoot.on("willShow", (function() {
                            var e = void 0;
                            n._library && (n.defaultSectionIdOnShow ? (e = n.defaultSectionIdOnShow, "function" == typeof n.defaultSectionIdOnShow && (e = n.defaultSectionIdOnShow())) : n.subsectionToShow && (e = n.subsectionToShow.id), e && (n._library.dispatchEvent(l.EVENT_IN_SCREEN_SHOWN), n._library.dispatchEvent(l.EVENT_IN_SUBNAVIGATION_SUBSECTION_SELECTED, e)))
                        })), n.screenRoot.on("hide", (function() {
                            n._library && n._library.dispatchEvent(l.EVENT_IN_SCREEN_HIDDEN)
                        })), n
                    }
                    return function(e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                        e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                    }(t, e), s(t, [{
                        key: "getScreenNode",
                        value: function() {
                            return this.screenNode
                        }
                    }, {
                        key: "getMainNavigationItem",
                        value: function() {
                            return this.navigationItem
                        }
                    }, {
                        key: "_onMainNavigationShow",
                        value: function() {
                            this.screenRoot.bump()
                        }
                    }, {
                        key: "_onMainNavigationHide",
                        value: function() {
                            this.screenRoot.release()
                        }
                    }, {
                        key: "_onDestroy",
                        value: function() {
                            i(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "_onDestroy", this).call(this), this._options = null, this.screenNode = null, this.screenRoot = null
                        }
                    }, {
                        key: "_onApiRegisterSubsection",
                        value: function(e) {
                            (!this.subsectionToShow || this.subsectionToShow.priority > e.priority) && (this.subsectionToShow = e)
                        }
                    }]), t
                }(r.default);
            t.default = d
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }],
        t = {};

    function n(a) {
        var s = t[a];
        if (void 0 !== s) return s.exports;
        var i = t[a] = {
            id: a,
            exports: {}
        };
        return e[a](i, i.exports, n), i.exports
    }
    n.g = function() {
        if ("object" == typeof globalThis) return globalThis;
        try {
            return this || new Function("return this")()
        } catch (e) {
            if ("object" == typeof window) return window
        }
    }(), n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), n.r = e => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }, (() => {
        "use strict";
        var e, t = (e = n(1)) && e.__esModule ? e : {
            default: e
        };
        const a = "rcp-fe-lol-clash",
            s = document.currentScript.ownerDocument;
        const i = window.getPluginAnnounceEventName(a);
        s.addEventListener(i, (function(e) {
            (0, e.registrationHandler)((function(e) {
                return t.default.init(e, {
                    AccountVerification: e => e.get("rcp-fe-lol-shared-components").getApi_AccountVerification(),
                    Audio: e => e.get("rcp-fe-audio"),
                    componentFactory: e => e.get("rcp-fe-common-libs").getComponentFactory("1"),
                    d3: e => e.get("rcp-fe-common-libs").getD3("3"),
                    dataBinding: e => e.get("rcp-fe-common-libs").getDataBinding("rcp-fe-lol-clash"),
                    Ember: e => e.get("rcp-fe-ember-libs").getEmber(),
                    EmberAddons: e => e.get("rcp-fe-ember-libs").getSharedEmberAddons(),
                    emberl10n: e => e.get("rcp-fe-ember-libs").getEmberL10n(1),
                    fullPageModalManager: e => e.get("rcp-fe-lol-shared-components").getApi_fullPageModalManager(),
                    gsap: e => e.get("rcp-fe-common-libs").getGsap("1"),
                    gsapCustomEase: e => e.get("rcp-fe-common-libs").getGsapCustomEase("1"),
                    HomeRegistry: e => e.get("rcp-fe-lol-shared-components").getApi_HomeRegistry(),
                    LayerManager: e => e.get("rcp-fe-lol-uikit").getLayerManager(),
                    LeagueTierNames: e => e.get("rcp-fe-lol-shared-components").getApi_LeagueTierNames(),
                    l10n: e => e.get("rcp-fe-lol-l10n"),
                    logger: e => e.get("rcp-fe-common-libs").logging.create(a),
                    lottie: e => e.get("rcp-fe-common-libs").getLottie("1"),
                    ModalManager: e => e.get("rcp-fe-lol-uikit").getModalManager(),
                    Navigation: e => e.get("rcp-fe-lol-navigation"),
                    Parties: e => e.get("rcp-fe-lol-parties"),
                    playerNames: e => e.get("rcp-fe-common-libs").playerNames,
                    Postgame: e => e.get("rcp-fe-lol-postgame"),
                    Profiles: e => e.get("rcp-fe-lol-profiles"),
                    Router: e => e.get("rcp-fe-lol-shared-components").getApi_Router(),
                    SharedComponents: e => e.get("rcp-fe-lol-shared-components"),
                    Social: e => e.get("rcp-fe-lol-social"),
                    SummonerIconManager: e => e.get("rcp-fe-lol-uikit").getSummonerIconManager(),
                    TemplateHelper: e => e.get("rcp-fe-lol-uikit").getTemplateHelper(),
                    TooltipManager: e => e.get("rcp-fe-lol-uikit").getTooltipManager(),
                    UIKit: e => e.get("rcp-fe-lol-uikit"),
                    UXSettings: e => e.get("rcp-fe-lol-shared-components").getApi_UXSettings(),
                    Viewport: e => e.get("rcp-fe-lol-shared-components").getApi_Viewport(),
                    webComponents: e => e.get("rcp-fe-common-libs").getWebComponents(s),
                    _: e => e.get("rcp-fe-common-libs").getLodash("4")
                }).then((() => {
                    const e = n(2).default;
                    return t.default.add({
                        emberApplicationFactory: e => e.get("rcp-fe-ember-libs").getEmberApplicationFactory(),
                        emberDataBinding: e => e.get("rcp-fe-ember-libs").getEmberDataBinding("rcp-fe-lol-clash"),
                        Telemetry: e => e.get("rcp-fe-common-libs").getTelemetry(1),
                        Util: () => e
                    })
                })).then((() => {
                    const e = n(4).default,
                        a = n(5).default,
                        s = n(6).default;
                    return t.default.add({
                        AudioManager: () => e,
                        GameDataGeneric: () => new a,
                        LottieAnim: () => s
                    })
                })).then((() => {
                    const e = n(7).default,
                        a = n(8).default,
                        s = n(622).default,
                        i = n(623).default,
                        o = new(0, n(625).default),
                        r = new a(o),
                        l = new e(r);
                    return t.default.add({
                        tra: () => r.getTra(),
                        clashVO: () => new s,
                        FullpageModalTracker: () => i
                    }), t.default.HomeRegistry.resolveClashHandler((function() {
                        o.setActive(!0)
                    })), i.instance(), t.default.add({
                        PrivateAPI: r
                    }), l
                }))
            }))
        }), {
            once: !0
        })
    })()
})();