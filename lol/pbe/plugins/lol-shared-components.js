(() => {
    var e = [, e => {
            "use strict";
            let t;

            function n() {
                return t || (console.error("The `provider` object has not been set, please do so by calling the `init` method."), null)
            }
            const a = {
                init: function(e, n) {
                    return t = e, this.add(n)
                },
                _getValue: function(e, n) {
                    let a;
                    return "function" == typeof n ? (a = n(t), a || console.warn("The function for key " + e + " returned a falsy value: ", a)) : "string" == typeof n ? (a = t.get(n), a || console.warn("The provider `get` invocation for the key " + e + " returned a falsy value: ", a)) : "object" == typeof n && (a = n), a
                },
                add: function(e) {
                    e = e || {};
                    const t = [],
                        n = this;
                    return Object.keys(e).forEach((function(a) {
                        const s = e[a],
                            i = n._getValue(a, s);
                        i && i.then ? (i.then((function(e) {
                            e || console.warn("The promise for the key " + a + " resolved with a falsy value: ", e), n._addValue(a, e)
                        })), t.push(i)) : n._addValue(a, i)
                    })), Promise.all(t)
                },
                _addValue: function(e, t) {
                    this[e] = t
                },
                provider: function() {
                    return console.error("The function `provider` has been deprecated, please use `getProvider`", (new Error).stack), n()
                },
                getProvider: function() {
                    return n()
                }
            };
            e.exports = a
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function() {
                a.webComponents.registerCustomElementV1(s.default), a.webComponents.registerCustomElementV1(i.default), a.webComponents.registerCustomElementV1(r.default)
            };
            var a = n(1),
                s = l(n(3)),
                i = l(n(8)),
                r = l(n(11));

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            class s extends a.webComponents.ShadowElement {
                templateMarkup() {
                    return n(4)
                }
                stylesheetMarkup() {
                    return n(5)
                }
                constructor() {
                    super();
                    this.shadowRoot.querySelector(".lol-uikit-full-page-modal-close-button").addEventListener("click", this.dispatchCloseEvent)
                }
                showFrame(e = !0) {
                    this.shadowRoot.querySelector(".lol-uikit-full-page-modal-frame").style.visibility = e ? "visible" : "hidden"
                }
                setBackgroundColor(e) {
                    this.shadowRoot.querySelector(".lol-uikit-full-page-modal").style.backgroundColor = e || null
                }
                dispatchCloseEvent() {
                    this.dispatchEvent(new Event("close-modal", {
                        bubbles: !0,
                        composed: !0
                    }))
                }
            }
            s.tagName = "lol-uikit-full-page-modal";
            var i = s;
            t.default = i
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <div class="lol-uikit-full-page-modal-container">\r\n    <div class="lol-uikit-full-page-modal-bg">\r\n      <div class="lol-uikit-full-page-modal">\r\n        <slot></slot>\r\n      </div>\r\n      <div class="lol-uikit-full-page-modal-frame">\r\n        <div class="lol-uikit-full-page-modal-frame-left"></div>\r\n        <div class="lol-uikit-full-page-modal-close-button-frame">\r\n          <div class="lol-uikit-full-page-modal-close-button-outer">\r\n              <div class="lol-uikit-full-page-modal-close-button-inner">\r\n                <lol-uikit-close-button class="lol-uikit-full-page-modal-close-button"></lol-uikit-close-button>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        <div class="lol-uikit-full-page-modal-frame-right"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7)(a);
            s.push([e.id, ":host .lol-uikit-full-page-modal-close-button-frame .lol-uikit-full-page-modal-close-button-outer,\n:host .lol-uikit-full-page-modal-close-button-frame .lol-uikit-full-page-modal-close-button-inner {\n  background-color: #010a13;\n  border-color: rgba(70,55,20,0.99); /* Smooths the borders */\n  border-style: solid;\n  border-bottom-left-radius: 50% 100%;\n  border-bottom-right-radius: 50% 100%;\n}\n:host .lol-uikit-full-page-modal-container {\n  position: absolute;\n  left: 0px;\n  top: 77px;\n  width: 1055px;\n  height: 642px;\n  box-sizing: border-box;\n}\n:host .lol-uikit-full-page-modal-bg {\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  top: 0px;\n}\n:host .lol-uikit-full-page-modal {\n  height: 637px;\n  background-color: #010a13;\n  box-sizing: border-box;\n  position: relative;\n  top: 5px;\n}\n:host .lol-uikit-full-page-modal-frame {\n  width: 100%;\n  position: absolute;\n  top: 0;\n}\n:host .lol-uikit-full-page-modal-frame .lol-uikit-full-page-modal-frame-left {\n  position: absolute;\n  right: 54px;\n  top: 0;\n  width: 100%;\n  box-sizing: border-box;\n  height: 5px;\n  background-color: #010a13;\n  border-top: 2px solid #463714;\n  border-bottom: thin solid #463714;\n  border-right: 2px solid #463714;\n}\n:host .lol-uikit-full-page-modal-frame .lol-uikit-full-page-modal-frame-right {\n  position: absolute;\n  top: 4px;\n  right: 0;\n  width: 10px;\n  box-sizing: border-box;\n  height: 1px;\n  border-top: thin solid #463714;\n}\n:host .lol-uikit-full-page-modal-close-button-frame {\n  position: absolute;\n  top: 4px;\n  right: 10px;\n}\n:host .lol-uikit-full-page-modal-close-button-frame .lol-uikit-full-page-modal-close-button-outer {\n  border-width: 1px 2px 2px 2px;\n  height: 19px;\n  width: 42px;\n}\n:host .lol-uikit-full-page-modal-close-button-frame .lol-uikit-full-page-modal-close-button-inner {\n  border-width: 0 1px 1px 1px;\n  height: 16px;\n  width: 34px;\n  margin: -1px auto 0;\n}\n:host .lol-uikit-full-page-modal-close-button-frame .lol-uikit-full-page-modal-close-button {\n  position: relative;\n  top: -16px;\n  left: 3px;\n}\n:host([cover-sidebar]) .lol-uikit-full-page-modal-container {\n  width: 1278px;\n}\n", "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/web-components/full-page-modal/component-style.styl"],
                names: [],
                mappings: "AAAA;;EAEE,yBAAyB;EACzB,iCAAiC,EAAE,wBAAwB;EAC3D,mBAAmB;EACnB,mCAAmC;EACnC,oCAAoC;AACtC;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,SAAS;EACT,aAAa;EACb,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,WAAW;EACX,YAAY;EACZ,sBAAsB;EACtB,QAAQ;AACV;AACA;EACE,aAAa;EACb,yBAAyB;EACzB,sBAAsB;EACtB,kBAAkB;EAClB,QAAQ;AACV;AACA;EACE,WAAW;EACX,kBAAkB;EAClB,MAAM;AACR;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,MAAM;EACN,WAAW;EACX,sBAAsB;EACtB,WAAW;EACX,yBAAyB;EACzB,6BAA6B;EAC7B,iCAAiC;EACjC,+BAA+B;AACjC;AACA;EACE,kBAAkB;EAClB,QAAQ;EACR,QAAQ;EACR,WAAW;EACX,sBAAsB;EACtB,WAAW;EACX,8BAA8B;AAChC;AACA;EACE,kBAAkB;EAClB,QAAQ;EACR,WAAW;AACb;AACA;EACE,6BAA6B;EAC7B,YAAY;EACZ,WAAW;AACb;AACA;EACE,2BAA2B;EAC3B,YAAY;EACZ,WAAW;EACX,mBAAmB;AACrB;AACA;EACE,kBAAkB;EAClB,UAAU;EACV,SAAS;AACX;AACA;EACE,aAAa;AACf",
                sourcesContent: [":host .lol-uikit-full-page-modal-close-button-frame .lol-uikit-full-page-modal-close-button-outer,\n:host .lol-uikit-full-page-modal-close-button-frame .lol-uikit-full-page-modal-close-button-inner {\n  background-color: #010a13;\n  border-color: rgba(70,55,20,0.99); /* Smooths the borders */\n  border-style: solid;\n  border-bottom-left-radius: 50% 100%;\n  border-bottom-right-radius: 50% 100%;\n}\n:host .lol-uikit-full-page-modal-container {\n  position: absolute;\n  left: 0px;\n  top: 77px;\n  width: 1055px;\n  height: 642px;\n  box-sizing: border-box;\n}\n:host .lol-uikit-full-page-modal-bg {\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  top: 0px;\n}\n:host .lol-uikit-full-page-modal {\n  height: 637px;\n  background-color: #010a13;\n  box-sizing: border-box;\n  position: relative;\n  top: 5px;\n}\n:host .lol-uikit-full-page-modal-frame {\n  width: 100%;\n  position: absolute;\n  top: 0;\n}\n:host .lol-uikit-full-page-modal-frame .lol-uikit-full-page-modal-frame-left {\n  position: absolute;\n  right: 54px;\n  top: 0;\n  width: 100%;\n  box-sizing: border-box;\n  height: 5px;\n  background-color: #010a13;\n  border-top: 2px solid #463714;\n  border-bottom: thin solid #463714;\n  border-right: 2px solid #463714;\n}\n:host .lol-uikit-full-page-modal-frame .lol-uikit-full-page-modal-frame-right {\n  position: absolute;\n  top: 4px;\n  right: 0;\n  width: 10px;\n  box-sizing: border-box;\n  height: 1px;\n  border-top: thin solid #463714;\n}\n:host .lol-uikit-full-page-modal-close-button-frame {\n  position: absolute;\n  top: 4px;\n  right: 10px;\n}\n:host .lol-uikit-full-page-modal-close-button-frame .lol-uikit-full-page-modal-close-button-outer {\n  border-width: 1px 2px 2px 2px;\n  height: 19px;\n  width: 42px;\n}\n:host .lol-uikit-full-page-modal-close-button-frame .lol-uikit-full-page-modal-close-button-inner {\n  border-width: 0 1px 1px 1px;\n  height: 16px;\n  width: 34px;\n  margin: -1px auto 0;\n}\n:host .lol-uikit-full-page-modal-close-button-frame .lol-uikit-full-page-modal-close-button {\n  position: relative;\n  top: -16px;\n  left: 3px;\n}\n:host([cover-sidebar]) .lol-uikit-full-page-modal-container {\n  width: 1278px;\n}\n"],
                sourceRoot: ""
            }]), e.exports = s
        }, e => {
            "use strict";
            e.exports = function(e) {
                var t = e[1],
                    n = e[3];
                if (!n) return t;
                if ("function" == typeof btoa) {
                    var a = btoa(unescape(encodeURIComponent(JSON.stringify(n)))),
                        s = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),
                        i = "/*# ".concat(s, " */");
                    return [t].concat([i]).join("\n")
                }
                return [t].join("\n")
            }
        }, e => {
            "use strict";
            e.exports = function(e) {
                var t = [];
                return t.toString = function() {
                    return this.map((function(t) {
                        var n = "",
                            a = void 0 !== t[5];
                        return t[4] && (n += "@supports (".concat(t[4], ") {")), t[2] && (n += "@media ".concat(t[2], " {")), a && (n += "@layer".concat(t[5].length > 0 ? " ".concat(t[5]) : "", " {")), n += e(t), a && (n += "}"), t[2] && (n += "}"), t[4] && (n += "}"), n
                    })).join("")
                }, t.i = function(e, n, a, s, i) {
                    "string" == typeof e && (e = [
                        [null, e, void 0]
                    ]);
                    var r = {};
                    if (a)
                        for (var l = 0; l < this.length; l++) {
                            var o = this[l][0];
                            null != o && (r[o] = !0)
                        }
                    for (var c = 0; c < e.length; c++) {
                        var d = [].concat(e[c]);
                        a && r[d[0]] || (void 0 !== i && (void 0 === d[5] || (d[1] = "@layer".concat(d[5].length > 0 ? " ".concat(d[5]) : "", " {").concat(d[1], "}")), d[5] = i), n && (d[2] ? (d[1] = "@media ".concat(d[2], " {").concat(d[1], "}"), d[2] = n) : d[2] = n), s && (d[4] ? (d[1] = "@supports (".concat(d[4], ") {").concat(d[1], "}"), d[4] = s) : d[4] = "".concat(s)), t.push(d))
                    }
                }, t
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = "availability",
                i = "large",
                r = "offline";
            class l extends a.webComponents.ShadowElement {
                static get observedAttributes() {
                    return [s, i]
                }
                templateMarkup() {
                    return n(9)
                }
                stylesheetMarkup() {
                    return n(10)
                }
                attributeChangedCallback(e, t, n) {
                    switch (e) {
                        case s:
                            this._handleAvailabilityChange(t, n);
                            break;
                        case i:
                            this._makeLarge()
                    }
                }
                processAttributes() {
                    this.hasAttribute(i) && this._makeLarge(), this._handleAvailabilityChange(null, this.getAttribute(s))
                }
                _getIconElement() {
                    return this.shadowRoot.querySelector("#icon")
                }
                _handleAvailabilityChange(e, t) {
                    const n = this._getIconElement();
                    e ? n.classList.remove(e) : n.classList.remove(r), n.classList.add(t || r)
                }
                _makeLarge() {
                    this._getIconElement().classList.add("largeicon")
                }
            }
            l.tagName = "lol-social-avatar-availability";
            var o = l;
            t.default = o
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <div class="availability">\r\n    <div id="icon"></div>\r\n  </div>\r\n</template>\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7)(a);
            s.push([e.id, '#icon {\n  width: 8px;\n  height: 8px;\n  box-sizing: border-box;\n  border-radius: 50%;\n  border: 2px solid transparent;\n  flex-shrink: 0;\n  background: #010a13;\n  box-shadow: 0 0 0 2px #010a13;\n}\n#icon.largeicon {\n  width: 11px;\n  height: 11px;\n}\n#icon.chat,\n#icon.available,\n#icon.online {\n  background-color: #36d987;\n  border-color: #66f8a0;\n}\n#icon.dnd {\n  background-color: #005176;\n  border-color: #0ac5e1;\n}\n#icon.away {\n  border-color: #9c3213;\n}\n#icon.offline {\n  border-color: #9c988a;\n}\n#icon.mobile {\n  width: 7px;\n  height: 11px;\n  margin: 1px;\n  border-radius: 2px;\n  background: #010a13 url("/fe/lol-static-assets/images/status_mobile.png") no-repeat center;\n  background-size: 16px;\n}\n', "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/web-components/social-avatar-availability/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,UAAU;EACV,WAAW;EACX,sBAAsB;EACtB,kBAAkB;EAClB,6BAA6B;EAC7B,cAAc;EACd,mBAAmB;EACnB,6BAA6B;AAC/B;AACA;EACE,WAAW;EACX,YAAY;AACd;AACA;;;EAGE,yBAAyB;EACzB,qBAAqB;AACvB;AACA;EACE,yBAAyB;EACzB,qBAAqB;AACvB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,UAAU;EACV,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,0FAA0F;EAC1F,qBAAqB;AACvB",
                sourcesContent: ['#icon {\n  width: 8px;\n  height: 8px;\n  box-sizing: border-box;\n  border-radius: 50%;\n  border: 2px solid transparent;\n  flex-shrink: 0;\n  background: #010a13;\n  box-shadow: 0 0 0 2px #010a13;\n}\n#icon.largeicon {\n  width: 11px;\n  height: 11px;\n}\n#icon.chat,\n#icon.available,\n#icon.online {\n  background-color: #36d987;\n  border-color: #66f8a0;\n}\n#icon.dnd {\n  background-color: #005176;\n  border-color: #0ac5e1;\n}\n#icon.away {\n  border-color: #9c3213;\n}\n#icon.offline {\n  border-color: #9c988a;\n}\n#icon.mobile {\n  width: 7px;\n  height: 11px;\n  margin: 1px;\n  border-radius: 2px;\n  background: #010a13 url("/fe/lol-static-assets/images/status_mobile.png") no-repeat center;\n  background-size: 16px;\n}\n'],
                sourceRoot: ""
            }]), e.exports = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = a.dataBinding.bindTo(a.socket);
            let i = 0;
            const r = "availability",
                l = "hovercard-disabled",
                o = "hovercard-position",
                c = "show-availability",
                d = "summoner-id",
                u = "icon-id",
                m = "icon-url",
                p = "large",
                h = "no-icon",
                g = "offline",
                f = "lol-social-avatar-availability",
                _ = {
                    offset: {
                        x: -6,
                        y: 0
                    },
                    targetAnchor: {
                        x: "left",
                        y: "center"
                    },
                    tooltipAnchor: {
                        x: "right",
                        y: "center"
                    }
                },
                A = {
                    offset: {
                        x: 6,
                        y: 0
                    },
                    targetAnchor: {
                        x: "right",
                        y: "center"
                    },
                    tooltipAnchor: {
                        x: "left",
                        y: "center"
                    }
                },
                b = {};
            s.get("/lol-game-data/assets/v1/profile-icons.json").then((e => {
                e.forEach((e => {
                    b[e.id] = e.iconPath
                }))
            }));
            class v extends a.webComponents.ShadowElement {
                static get observedAttributes() {
                    return [r, l, o, c, d, u, m, p]
                }
                templateMarkup() {
                    return n(12)
                }
                stylesheetMarkup() {
                    return n(13)
                }
                attributeChangedCallback(e, t, n) {
                    switch (e) {
                        case r:
                            this._handleAvailabilityChange(n);
                            break;
                        case u:
                            this._handleIconChange(n, this.getAttribute(m));
                            break;
                        case m:
                            this._handleIconChange(this.getAttribute(u), n);
                            break;
                        case c:
                            this._setShowAvailability(!0);
                            break;
                        case d:
                            this._handleSummonerIdChange(n);
                            break;
                        case p:
                            this._makeLarge()
                    }
                }
                canShowHovercard() {
                    return !(null !== this.attributes.getNamedItem(l))
                }
                disconnectedCallback() {
                    this._hovercardPacket && window.dispatchEvent(new CustomEvent("lol-hovercard-interop-remove", {
                        detail: {
                            packet: this._hovercardPacket
                        }
                    }))
                }
                processAttributes() {
                    this._getRingElement().classList.add(h), this._setShowAvailability(this.hasAttribute(c)), this.hasAttribute(p) && this._makeLarge(), this._handleAvailabilityChange(this.getAttribute(r)), this._handleIconChange(this.getAttribute(u, m)), this._handleSummonerIdChange(this.getAttribute(d))
                }
                _addAvailabilityIndicator() {
                    let e = this._getAvailabilityElement();
                    e || (e = document.createElement(f), e.classList.add("indicator"), e.setAttribute(r, this.getAttribute(r)), this.hasAttribute(p) && e.setAttribute(p, ""), this._getIconElement().appendChild(e))
                }
                _buildImage(e) {
                    const t = document.createElement("img");
                    return t.src = e, t
                }
                _getAvailabilityElement() {
                    return this.shadowRoot.querySelector(f)
                }
                _getHovercardOptions() {
                    let e = null;
                    switch (this.getAttribute(o) || "left") {
                        case "left":
                        default:
                            e = _;
                            break;
                        case "right":
                            e = A
                    }
                    return a.lodash.merge(e, {
                        canShow: this.canShowHovercard.bind(this)
                    }), e
                }
                _getIconElement() {
                    return this.shadowRoot.querySelector(".icon")
                }
                _getRingElement() {
                    return this.shadowRoot.querySelector(".ring")
                }
                _getSummonerIconUrl(e) {
                    return b[e]
                }
                _handleAvailabilityChange(e) {
                    const t = this._getIconElement();
                    e && "offline" !== e ? t.classList.remove(g) : t.classList.add(g);
                    const n = this._getAvailabilityElement();
                    n && n.setAttribute(r, e)
                }
                _handleIconChange(e, t) {
                    const n = this._getRingElement();
                    if (this._isValidIconId(e)) {
                        n.classList.remove(h);
                        const t = this._getSummonerIconUrl(e);
                        this._updateIconImage(t)
                    } else t ? (n.classList.remove(h), this._updateIconImage(t)) : (this._removeIconImage(), n.classList.add(h))
                }
                _handleSummonerIdChange(e) {
                    this._hovercardPacket && window.dispatchEvent(new CustomEvent("lol-hovercard-interop-remove", {
                        detail: {
                            packet: this._hovercardPacket
                        }
                    })), e && (this._hovercardPacket = {
                        domNode: this._getIconElement(),
                        summonerId: e,
                        options: this._getHovercardOptions(),
                        uuid: ++i
                    }, window.dispatchEvent(new CustomEvent("lol-hovercard-interop-add", {
                        detail: {
                            packet: this._hovercardPacket
                        }
                    })))
                }
                _isValidIconId(e) {
                    return e && "" !== e && "null" !== e && e >= 0
                }
                _removeIconImage() {
                    const e = this._getIconElement(),
                        t = e.querySelector("img");
                    t && e.removeChild(t)
                }
                _setShowAvailability(e) {
                    const t = this._getAvailabilityElement();
                    e ? t || this._addAvailabilityIndicator() : t && this._getIconElement().removeChild(t)
                }
                _makeLarge() {
                    const e = this._getAvailabilityElement();
                    e && e.setAttribute(p, "")
                }
                _updateIconImage(e) {
                    const t = this._getIconElement();
                    let n = t.querySelector("img");
                    n ? n.src = e : (n = this._buildImage(e), t.insertBefore(n, this._getRingElement()))
                }
            }
            v.tagName = "lol-social-avatar-icon";
            var E = v;
            t.default = E
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <div class="icon">\r\n    <div class="ring"></div>\r\n  </div>\r\n</template>\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7)(a);
            s.push([e.id, '.room {\n  font-family: var(--font-display);\n}\n:host {\n  box-sizing: border-box;\n  display: flex;\n  width: 32px;\n  height: 32px;\n}\n:host([large]) {\n  width: 50px;\n  height: 50px;\n}\nlol-social-avatar-icon {\n  flex-shrink: 0;\n  margin: 0 8px;\n}\n.indicator {\n  position: absolute;\n  bottom: 2px;\n  right: -2px;\n}\n:host([large]) .indicator {\n  position: absolute;\n  bottom: 8px;\n  right: -2px;\n}\n.icon {\n  display: inline-flex;\n  box-sizing: border-box;\n  height: 100%;\n  width: 100%;\n  position: relative;\n  flex-shrink: 0;\n  background-size: contain;\n}\n.offline {\n  opacity: 0.5;\n}\n.ring {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: url("/fe/lol-static-assets/images/playerobject_s_sprite.png") no-repeat top;\n  background-size: cover;\n}\n.ring.no-icon {\n  background-position-y: -128px;\n}\n:host([large]) .ring {\n  background: url("/fe/lol-static-assets/images/playerobject_m_sprite.png") no-repeat top;\n  background-size: cover;\n}\n:host([large]) .ring.no-icon {\n  background-position-y: -200px;\n}\n:host-context(.social-avatar-hit:hover) .ring:not(.no-icon),\n:host-context(.context-menu-open) .ring:not(.no-icon) {\n  background-position-y: -32px;\n}\n:host-context(.social-avatar-hit:active):host(:not([disabled])) .ring:not(.no-icon) {\n  background-position-y: -64px;\n}\n:host-context(.social-avatar-hit:hover):host([large]) .ring:not(.no-icon),\n:host-context(.context-menu-open):host([large]) .ring:not(.no-icon) {\n  background-position-y: -50px;\n}\n:host-context(.social-avatar-hit:active):host([large]:not([disabled])) .ring:not(.no-icon) {\n  background-position-y: -100px;\n}\nimg {\n  position: absolute;\n  overflow: hidden;\n  border-radius: 50%;\n  border: 2px solid transparent;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  background-color: #010a13;\n  object-fit: cover;\n}\n:host-context(.social-avatar-hit:active):host(:not([disabled])) img {\n  opacity: 0.5;\n}\n.room {\n  position: absolute;\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  font-size: 13px;\n  color: #cdbe91;\n}\n.person-icon {\n  display: inline-block;\n  -webkit-mask: url("/fe/lol-static-assets/images/person_mask.png") no-repeat center;\n  background-color: #c8aa6e;\n  width: 8px;\n  height: 12px;\n  margin-left: 2px;\n}\n.person-icon.with-number {\n  background-size: 6px 9px;\n  width: 6px;\n  height: 9px;\n}\n:host-context(.social-avatar-hit:hover:not([disabled])) .person-icon,\n:host(:hover:not([disabled])) .person-icon {\n  background-color: #f0e6d2;\n}\n:host-context(.social-avatar-hit:active:not([disabled])) .person-icon,\n:host(:active:not([disabled])) .person-icon {\n  background-color: #463714;\n}\n:host-context(.social-avatar-hit:hover:not([disabled])) .room,\n:host(:hover:not([disabled])) .room {\n  background: url("/fe/lol-static-assets/images/groupicon_hover_bg.png") no-repeat center;\n  color: #f0e6d2;\n}\n:host-context(.social-avatar-hit:active:not([disabled])) .room,\n:host(:active:not([disabled])) .room {\n  background: none;\n  color: #785a28;\n}\n', "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/web-components/social-avatar-icon/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,gCAAgC;AAClC;AACA;EACE,sBAAsB;EACtB,aAAa;EACb,WAAW;EACX,YAAY;AACd;AACA;EACE,WAAW;EACX,YAAY;AACd;AACA;EACE,cAAc;EACd,aAAa;AACf;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,WAAW;AACb;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,WAAW;AACb;AACA;EACE,oBAAoB;EACpB,sBAAsB;EACtB,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,cAAc;EACd,wBAAwB;AAC1B;AACA;EACE,YAAY;AACd;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,uFAAuF;EACvF,sBAAsB;AACxB;AACA;EACE,6BAA6B;AAC/B;AACA;EACE,uFAAuF;EACvF,sBAAsB;AACxB;AACA;EACE,6BAA6B;AAC/B;AACA;;EAEE,4BAA4B;AAC9B;AACA;EACE,4BAA4B;AAC9B;AACA;;EAEE,4BAA4B;AAC9B;AACA;EACE,6BAA6B;AAC/B;AACA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,6BAA6B;EAC7B,sBAAsB;EACtB,WAAW;EACX,YAAY;EACZ,yBAAyB;EACzB,iBAAiB;AACnB;AACA;EACE,YAAY;AACd;AACA;EACE,kBAAkB;EAClB,aAAa;EACb,iBAAiB;EACjB,mBAAmB;EACnB,uBAAuB;EACvB,WAAW;EACX,YAAY;EACZ,eAAe;EACf,cAAc;AAChB;AACA;EACE,qBAAqB;EACrB,kFAAkF;EAClF,yBAAyB;EACzB,UAAU;EACV,YAAY;EACZ,gBAAgB;AAClB;AACA;EACE,wBAAwB;EACxB,UAAU;EACV,WAAW;AACb;AACA;;EAEE,yBAAyB;AAC3B;AACA;;EAEE,yBAAyB;AAC3B;AACA;;EAEE,uFAAuF;EACvF,cAAc;AAChB;AACA;;EAEE,gBAAgB;EAChB,cAAc;AAChB",
                sourcesContent: ['.room {\n  font-family: var(--font-display);\n}\n:host {\n  box-sizing: border-box;\n  display: flex;\n  width: 32px;\n  height: 32px;\n}\n:host([large]) {\n  width: 50px;\n  height: 50px;\n}\nlol-social-avatar-icon {\n  flex-shrink: 0;\n  margin: 0 8px;\n}\n.indicator {\n  position: absolute;\n  bottom: 2px;\n  right: -2px;\n}\n:host([large]) .indicator {\n  position: absolute;\n  bottom: 8px;\n  right: -2px;\n}\n.icon {\n  display: inline-flex;\n  box-sizing: border-box;\n  height: 100%;\n  width: 100%;\n  position: relative;\n  flex-shrink: 0;\n  background-size: contain;\n}\n.offline {\n  opacity: 0.5;\n}\n.ring {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: url("/fe/lol-static-assets/images/playerobject_s_sprite.png") no-repeat top;\n  background-size: cover;\n}\n.ring.no-icon {\n  background-position-y: -128px;\n}\n:host([large]) .ring {\n  background: url("/fe/lol-static-assets/images/playerobject_m_sprite.png") no-repeat top;\n  background-size: cover;\n}\n:host([large]) .ring.no-icon {\n  background-position-y: -200px;\n}\n:host-context(.social-avatar-hit:hover) .ring:not(.no-icon),\n:host-context(.context-menu-open) .ring:not(.no-icon) {\n  background-position-y: -32px;\n}\n:host-context(.social-avatar-hit:active):host(:not([disabled])) .ring:not(.no-icon) {\n  background-position-y: -64px;\n}\n:host-context(.social-avatar-hit:hover):host([large]) .ring:not(.no-icon),\n:host-context(.context-menu-open):host([large]) .ring:not(.no-icon) {\n  background-position-y: -50px;\n}\n:host-context(.social-avatar-hit:active):host([large]:not([disabled])) .ring:not(.no-icon) {\n  background-position-y: -100px;\n}\nimg {\n  position: absolute;\n  overflow: hidden;\n  border-radius: 50%;\n  border: 2px solid transparent;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  background-color: #010a13;\n  object-fit: cover;\n}\n:host-context(.social-avatar-hit:active):host(:not([disabled])) img {\n  opacity: 0.5;\n}\n.room {\n  position: absolute;\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  font-size: 13px;\n  color: #cdbe91;\n}\n.person-icon {\n  display: inline-block;\n  -webkit-mask: url("/fe/lol-static-assets/images/person_mask.png") no-repeat center;\n  background-color: #c8aa6e;\n  width: 8px;\n  height: 12px;\n  margin-left: 2px;\n}\n.person-icon.with-number {\n  background-size: 6px 9px;\n  width: 6px;\n  height: 9px;\n}\n:host-context(.social-avatar-hit:hover:not([disabled])) .person-icon,\n:host(:hover:not([disabled])) .person-icon {\n  background-color: #f0e6d2;\n}\n:host-context(.social-avatar-hit:active:not([disabled])) .person-icon,\n:host(:active:not([disabled])) .person-icon {\n  background-color: #463714;\n}\n:host-context(.social-avatar-hit:hover:not([disabled])) .room,\n:host(:hover:not([disabled])) .room {\n  background: url("/fe/lol-static-assets/images/groupicon_hover_bg.png") no-repeat center;\n  color: #f0e6d2;\n}\n:host-context(.social-avatar-hit:active:not([disabled])) .room,\n:host(:active:not([disabled])) .room {\n  background: none;\n  color: #785a28;\n}\n'],
                sourceRoot: ""
            }]), e.exports = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            const a = {},
                s = {};
            var i = {
                initComponents: async function(e, t) {
                    const i = new(0, n(15).default);
                    await i.initLocalData(), a.getApi_LocalData = () => i, n(16);
                    const r = (0, n(26).default)();
                    a.getApi_LeagueTierNames = () => r, a.getApi_Router = () => n(49).default;
                    const l = (0, n(50).default)(e);
                    a.getApi_Viewport = () => l;
                    const o = new(0, n(62).default)(l);
                    a.getApi_fullPageModalManager = () => o, a.getApi_HomeRegistry = () => n(64).default;
                    const c = n(66);
                    a.getApi_traTemplateHelpers = function() {
                        return {
                            DynamicTra: c.dynamicTra,
                            ConcatTra: c.concatTra
                        }
                    };
                    const d = n(67).default;
                    a.getApi_UXSettings = () => d, a.hovercardInterop = n(71).default, s.GameSettings = n(72).default, a.collectionsPurchaseAndSkinHelpers = n(73);
                    const u = n(74).default.initReplays(e);
                    a.getApi_Replays = () => u;
                    const m = n(77).default;
                    a.getApi_SummonerIconPicker = () => m, s.AliasChangeSuccessModal = n(81).default;
                    const p = n(85).default,
                        {
                            privateRegaliaApi: h,
                            publicRegaliaApi: g
                        } = p(e);
                    s.Regalia = h, a.getApi_Regalia = () => g;
                    const f = (0, n(178).default)(l);
                    a.getApi_AccountVerification = () => f;
                    const _ = (0, n(276).default)(e);
                    a.getApi_Eternals = () => _, a.getSharedEmberComponents = () => n(291).default, a.getRuneSwapAndNotifyMessage = n(427).default, a.getDataBoundEmberService = n(428).default, a.getRewardTrackerEmberComponents = () => n(429).default, a.getMultiPurchaseSliderEmberComponents = () => n(446).default;
                    const A = new(0, n(451).default);
                    a.getApi_SharedChallengesConstants = () => n(562).default, a.getApi_SharedChallengesComponents = () => n(563).default, a.getApi_SharedChallengesApps = () => A;
                    const b = new(0, n(570).default);
                    a.getApi_SharedReportModalApps = () => b;
                    const v = new(0, n(579).default);
                    a.getApi_SharedPlayerBehaviorApps = () => v;
                    const E = (0, n(582).default)();
                    a.getApi_Payments = () => E
                },
                privateApi: s,
                publicApi: a
            };
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            var s = class {
                constructor() {
                    this._dataBinding = a.dataBinding.bindTo(a.socket), this._region = "", this._locale = "", this._rsoPlatformId = ""
                }
                get region() {
                    return this._region
                }
                get locale() {
                    return this._locale
                }
                get rsoPlatformId() {
                    return this._rsoPlatformId
                }
                async initLocalData() {
                    try {
                        const e = await this._dataBinding.get("/riotclient/region-locale");
                        e.region && (this._region = e.region), e.locale && (this._locale = e.locale);
                        const t = await this._dataBinding.get(`/data-store/v1/system-settings/region_data/${this._region}/rso_platform_id`);
                        t && (this._rsoPlatformId = t)
                    } catch (e) {
                        a.logger.error("Failed to initialize local data", e)
                    }
                }
            };
            t.default = s
        }, (e, t, n) => {
            "use strict";
            n(17), n(19), n(20), n(21), n(22), n(23)
        }, (e, t, n) => {
            "use strict";
            var a, s = (a = n(1)) && a.__esModule ? a : {
                    default: a
                },
                i = n(18);
            const r = {
                left: {
                    targetAnchor: {
                        x: "left",
                        y: "center"
                    },
                    tooltipAnchor: {
                        x: "right",
                        y: "center"
                    }
                },
                right: {
                    targetAnchor: {
                        x: "right",
                        y: "center"
                    },
                    tooltipAnchor: {
                        x: "left",
                        y: "center"
                    }
                },
                top: {
                    targetAnchor: {
                        x: "center",
                        y: "top"
                    },
                    tooltipAnchor: {
                        x: "center",
                        y: "bottom"
                    }
                },
                bottom: {
                    targetAnchor: {
                        x: "center",
                        y: "bottom"
                    },
                    tooltipAnchor: {
                        x: "center",
                        y: "top"
                    }
                }
            };
            class l extends HTMLElement {
                connectedCallback() {
                    this.isConnected && this.dispatchEvent(new CustomEvent("flyout-content-rendered", {
                        bubbles: !0
                    }))
                }
            }
            customElements.get("lc-flyout-content") || customElements.define("lc-flyout-content", l);
            class o extends HTMLElement {
                constructor() {
                    super(), this._uiKitOptionOverrides = {}, this._isOpen = !1, this._onHide = () => {}, this._didShow = () => {}, (0, i.configureProperties)(this, "direction", "offsetX", "offsetY", "borderless", "caretless")
                }
                get flyoutManager() {
                    return s.default.UIKit.getFlyoutManager()
                }
                connectedCallback() {
                    this.isConnected && (this._setupTimeout = setTimeout((() => {
                        if (!this.content) throw "This flyout appears to not be set up correctly. Ensure there's a single <lc-flyout-content> rendered unconditionally."
                    }), 1e3), this.attemptSetup() || this.addEventListener("flyout-content-rendered", (() => this.attemptSetup())))
                }
                attemptSetup() {
                    if (this.target = this.parentElement, this.content = this.querySelector("lc-flyout-content"), !this.content) return !1;
                    if (this.children.length > 1) throw "Multiple child nodes found under Flyout. All content for a flyout must be wrapped in a single element of type <lc-flyout-content>";
                    this.removeChild(this.content);
                    const e = Object.assign({
                        showEvent: "show",
                        hideEvent: "hide",
                        animated: !0,
                        backdropCutout: !1,
                        orientation: this.direction,
                        borderless: this.borderless,
                        caretless: this.caretless
                    }, {
                        offset: {
                            x: Number(this.offsetX) || 0,
                            y: Number(this.offsetY) || 0
                        }
                    }, r[this.direction] || {}, this._uiKitOptionOverrides);
                    this.flyoutManager.assignFlyout(this.target, this.content, null, e), this.target.addEventListener("didHide", this._onHide), this.target.addEventListener("didShow", this._didShow)
                }
                set onHide(e) {
                    this._onHide = e
                }
                set didShow(e) {
                    this._didShow = e
                }
                set open(e) {
                    this._isOpen !== e && (this._isOpen = e, e ? this.flyoutManager.sendEvent(this.target, "show") : this.flyoutManager.sendEvent(this.target, "hide"))
                }
                set uiKitOptionOverrides(e) {
                    this._uiKitOptionOverrides = e
                }
                disconnectedCallback() {
                    this.target.removeEventListener("didHide", this._onHide), this.target.removeEventListener("didShow", this._didShow), this.content && this.appendChild(this.content), this.flyoutManager.unassignFlyout(this.target), clearTimeout(this._setupTimeout)
                }
            }
            customElements.get("lc-flyout") || customElements.define("lc-flyout", o)
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.configureProperties = function(e, ...t) {
                t.forEach((t => {
                    Object.defineProperty(e, t, {
                        get() {
                            return this.hasAttribute(t) ? this.getAttribute(t) : this[`_${t}`]
                        },
                        set(e) {
                            this[`_${t}`] = e
                        }
                    })
                }))
            }
        }, (e, t, n) => {
            "use strict";
            var a, s = (a = n(1)) && a.__esModule ? a : {
                    default: a
                },
                i = n(18);
            class r extends HTMLElement {
                connectedCallback() {
                    this.isConnected && this.dispatchEvent(new CustomEvent("modal-content-rendered", {
                        bubbles: !0
                    }))
                }
            }
            customElements.get("lc-modal-content") || customElements.define("lc-modal-content", r);
            class l extends HTMLElement {
                constructor() {
                    super(), this._isOpen = !1, this._didModalContentConnect = !1, this._onHide = () => {}
                }
                get modalManager() {
                    return s.default.UIKit.getModalManager()
                }
                connectedCallback() {
                    this.isConnected && (this._setupTimeout = setTimeout((() => {
                        if (!this._didModalContentConnect) throw "This modal appears to not be set up correctly. Ensure there's either a single <lc-modal-content> rendered unconditionally, or a text property passed."
                    }), 1e3), this.attemptSetup() || this.addEventListener("modal-content-rendered", (function e() {
                        this.attemptSetup(), this.removeEventListener("modal-content-rendered", e)
                    })))
                }
                attemptSetup() {
                    if (this.content = this.querySelector("lc-modal-content"), !this.content) return !1;
                    if (this.children.length > 1) throw "Multiple child nodes found under Flyout. All content for a modal must be wrapped in a single element of type <lc-modal-content>";
                    return this.removeChild(this.content), this.content.addEventListener("dialogFrameDismissed", (() => this._onHide())), this._didModalContentConnect = !0, this.syncState(), !0
                }
                set open(e) {
                    this._isOpen !== e && (this._isOpen = e, this._didModalContentConnect && this.syncState())
                }
                set onHide(e) {
                    this._onHide = e
                }
                get options() {
                    return {
                        domNode: this.content,
                        data: {}
                    }
                }
                syncState() {
                    if (this._isOpen) return this._currentModal = this.modalManager.add(this.options), this._currentModal;
                    this.closeModal()
                }
                closeModal() {
                    this._currentModal && (this._onHide && this._onHide(), this.modalManager.remove(this._currentModal), this._currentModal = null)
                }
                disconnectedCallback() {
                    setTimeout((() => this.closeModal()), 1), this.content && this.appendChild(this.content), clearTimeout(this._setupTimeout)
                }
            }
            customElements.get("lc-modal") || customElements.define("lc-modal", l);
            class o extends l {
                constructor() {
                    super(), this._text = "", (0, i.configureProperties)(this, "okText", "dismissible", "dismissibleType", "onOk")
                }
                syncState() {
                    const e = super.syncState();
                    e && e.okPromise.then((e => {
                        this.onOk && this.onOk(e), this._onHide()
                    }))
                }
                connectedCallback() {
                    if (this.isConnected)
                        if (this._setupTimeout = setTimeout((() => {
                                if (!this._didModalContentConnect) throw "This modal appears to not be set up correctly. Ensure there's either a single <lc-modal-content> rendered unconditionally, or a text property passed."
                            }), 1e3), this.text) {
                            const e = document.createElement("lol-uikit-content-block");
                            e.setAttribute("type", "dialog-small");
                            const t = document.createElement("p");
                            t.textContent = this.text, this.textContentElement = t, e.appendChild(t), this.content = e, this.content.addEventListener("dialogFrameDismissed", (() => this._onHide())), this._didModalContentConnect = !0, this.syncState()
                        } else super.connectedCallback()
                }
                get options() {
                    return {
                        type: "DialogAlert",
                        data: {
                            contents: this.content,
                            okText: this.okText,
                            dismissible: !(!this.dismissible || "false" === this.dismissible),
                            dismissibleType: this.dismissibleType || "outside"
                        }
                    }
                }
                get text() {
                    return this._text
                }
                set text(e) {
                    this._text = e, this.textContentElement && (this.textContentElement.textContent = e)
                }
                disconnectedCallback() {
                    super.disconnectedCallback(), clearTimeout(this._setupTimeout)
                }
            }
            customElements.get("lc-alert-modal") || customElements.define("lc-alert-modal", o);
            class c extends l {
                constructor() {
                    super(), this._text = "", (0, i.configureProperties)(this, "acceptText", "declineText", "closeButton", "dismissibleType", "onYes", "onNo")
                }
                syncState() {
                    const e = super.syncState();
                    e && e.acceptPromise.then((() => {
                        this.onYes && this.onYes(), this._onHide()
                    }), (() => {
                        this.onNo && this.onNo(), this._onHide()
                    }))
                }
                connectedCallback() {
                    if (this.isConnected)
                        if (this._setupTimeout = setTimeout((() => {
                                if (!this._didModalContentConnect) throw "This modal appears to not be set up correctly. Ensure there's either a single <lc-modal-content> rendered unconditionally, or a text property passed."
                            }), 1e3), this.text) {
                            const e = document.createElement("lol-uikit-content-block");
                            e.setAttribute("type", "dialog-small");
                            const t = document.createElement("p");
                            t.textContent = this.text, this.textContentElement = t, e.appendChild(t), this.content = e, this.content.addEventListener("dialogFrameDismissed", (() => this._onHide())), this._didModalContentConnect = !0, this.syncState()
                        } else super.connectedCallback()
                }
                get options() {
                    return {
                        type: "DialogConfirm",
                        data: {
                            contents: this.content,
                            acceptText: this.acceptText,
                            declineText: this.declineText,
                            closeButton: !(!this.closeButton || "false" === this.closeButton),
                            dismissibleType: this.dismissibleType || "outside"
                        }
                    }
                }
                get text() {
                    return this._text
                }
                set text(e) {
                    this._text = e, this.textContentElement && (this.textContentElement.textContent = e)
                }
                disconnectedCallback() {
                    super.disconnectedCallback(), clearTimeout(this._setupTimeout)
                }
            }
            customElements.get("lc-confirm-modal") || customElements.define("lc-confirm-modal", c)
        }, (e, t, n) => {
            "use strict";
            var a, s = (a = n(1)) && a.__esModule ? a : {
                    default: a
                },
                i = n(18);
            const r = {
                left: {
                    targetAnchor: {
                        x: "left",
                        y: "center"
                    },
                    tooltipAnchor: {
                        x: "right",
                        y: "center"
                    }
                },
                right: {
                    targetAnchor: {
                        x: "right",
                        y: "center"
                    },
                    tooltipAnchor: {
                        x: "left",
                        y: "center"
                    }
                },
                top: {
                    targetAnchor: {
                        x: "center",
                        y: "top"
                    },
                    tooltipAnchor: {
                        x: "center",
                        y: "bottom"
                    }
                },
                upperleft: {
                    targetAnchor: {
                        x: "left",
                        y: "top"
                    },
                    tooltipAnchor: {
                        x: "right",
                        y: "center"
                    },
                    offset: {
                        x: -15,
                        y: -5
                    }
                },
                bottom: {
                    targetAnchor: {
                        x: "center",
                        y: "bottom"
                    },
                    tooltipAnchor: {
                        x: "center",
                        y: "top"
                    }
                }
            };
            class l extends HTMLElement {
                connectedCallback() {
                    this.isConnected && this.dispatchEvent(new CustomEvent("tooltip-content-rendered", {
                        bubbles: !0
                    }))
                }
            }
            customElements.get("lc-tooltip-content") || customElements.define("lc-tooltip-content", l);
            class o extends HTMLElement {
                constructor() {
                    super(), this._uiKitOptionOverrides = {}, (0, i.configureProperties)(this, "type", "direction", "restrictArea")
                }
                connectedCallback() {
                    if (!this.isConnected) return;
                    const e = document.createElement("lc-tooltip");
                    ["_uiKitOptionOverrides", "type", "direction", "restrictArea"].forEach((t => {
                        e[t] = this[t]
                    }));
                    const t = document.createElement("lc-tooltip-content");
                    e.appendChild(t), t.textContent = this.text, this.parentElement.appendChild(e), this.tooltipContent = t, this.hasAttribute("text") && (this.text = this.getAttribute("text"))
                }
                get text() {
                    return this._text
                }
                set text(e) {
                    this._text = e, this.tooltipContent && (this.tooltipContent.textContent = e)
                }
                set uiKitOptionOverrides(e) {
                    this._uiKitOptionOverrides = e
                }
            }
            customElements.get("lc-text-tooltip") || customElements.define("lc-text-tooltip", o);
            class c extends HTMLElement {
                constructor() {
                    super(), this._uiKitOptionOverrides = {}, this._onHide = () => {}, (0, i.configureProperties)(this, "type", "direction", "restrictArea")
                }
                get tooltipManager() {
                    return s.default.UIKit.getTooltipManager()
                }
                connectedCallback() {
                    this.isConnected && (this._setupTimeout = setTimeout((() => {
                        if (!this.content) throw "This tooltip appears to not be set up correctly. Ensure there's a single <lc-tooltip-content> rendered unconditionally."
                    }), 1e3), this.attemptSetup() || this.addEventListener("tooltip-content-rendered", (() => this.attemptSetup())))
                }
                attemptSetup() {
                    if (this.target = this.parentElement, this.content = this.querySelector("lc-tooltip-content"), !this.content) return !1;
                    if (this.children.length > 1) throw "Multiple child nodes found under Flyout. All content for a tooltip must be wrapped in a single element of type <lc-tooltip-content>";
                    const e = this.type;
                    this.removeChild(this.content);
                    const t = document.createElement("lol-uikit-tooltip");
                    t.setAttribute("type", e);
                    const n = document.createElement("lol-uikit-content-block");
                    n.style.whiteSpace = "nowrap", n.setAttribute("type", e && "system" !== e ? e : "tooltip-system"), t.appendChild(n);
                    const a = document.createElement("p");
                    n.appendChild(a), a.appendChild(this.content);
                    const s = this.direction || "top",
                        i = this.restrictArea || "whole-window",
                        l = Object.assign({
                            direction: s,
                            restrictArea: i,
                            type: e
                        }, r[s], this._uiKitOptionOverrides);
                    this.tooltipManager.assign(this.target, t, null, l), this.tooltipElement = t
                }
                set tooltipOptions(e) {
                    this._tooltipOptions = e
                }
                disconnectedCallback() {
                    this.tooltipManager.unassign(this.target), this.content && this.appendChild(this.content), clearTimeout(this._setupTimeout)
                }
                set uiKitOptionOverrides(e) {
                    this._uiKitOptionOverrides = e
                }
            }
            customElements.get("lc-tooltip") || customElements.define("lc-tooltip", c)
        }, (e, t, n) => {
            "use strict";
            var a, s = (a = n(1)) && a.__esModule ? a : {
                    default: a
                },
                i = n(18);
            class r extends HTMLElement {
                connectedCallback() {
                    this.isConnected && this.dispatchEvent(new CustomEvent("toast-content-rendered", {
                        bubbles: !0
                    }))
                }
            }
            customElements.get("lc-toast-content") || customElements.define("lc-toast-content", r);
            class l extends HTMLElement {
                constructor() {
                    super(), this._isOpen = !1, this._onHide = () => {}, (0, i.configureProperties)(this, "timing", "position")
                }
                get toastManager() {
                    return s.default.UIKit.getToastManager()
                }
                connectedCallback() {
                    this.isConnected && (this._setupTimeout = setTimeout((() => {
                        if (!this._isMounted) throw "<lc-toast-content> child not found. All content for this toast must be wrapped in a single element of this type"
                    }), 1e3), this.attemptSetup() || this.addEventListener("toast-content-rendered", (() => this.attemptSetup())))
                }
                attemptSetup() {
                    if (this.target = this.parentElement, this.content = this.querySelector("lc-toast-content"), !this.content) return !1;
                    if (this.children.length > 1) throw "Multiple child nodes found under toast. All content for a toast must be wrapped in a single element of type <lc-toast-content>";
                    this.removeChild(this.content), this._isMounted = !0, this.syncState()
                }
                set onHide(e) {
                    this._onHide = e
                }
                set open(e) {
                    this._isOpen !== e && (this._isOpen = e, this._isMounted && this.syncState())
                }
                syncState() {
                    if (this._isOpen) {
                        const e = {
                            type: "DialogToast",
                            data: {
                                contents: this.content
                            },
                            onRemove: this._onHide,
                            timing: this.timing || "slow",
                            position: this.position || ""
                        };
                        this.toastManager.add(e)
                    }
                }
                disconnectedCallback() {
                    clearTimeout(this._setupTimeout), this.content && this.appendChild(this.content), this._isOpen && this._onHide && this._onHide()
                }
            }
            customElements.get("lc-toast") || customElements.define("lc-toast", l)
        }, (e, t, n) => {
            "use strict";
            var a, s = (a = n(1)) && a.__esModule ? a : {
                    default: a
                },
                i = n(18);
            class r extends HTMLElement {
                connectedCallback() {
                    this.isConnected && this.dispatchEvent(new CustomEvent("layer-content-rendered", {
                        bubbles: !0
                    }))
                }
            }
            customElements.get("lc-layer-content") || customElements.define("lc-layer-content", r);
            class l extends HTMLElement {
                constructor() {
                    super(), this._isOpen = !1, this._ready = !1, this._onHide = () => {}, this._didShow = () => {}, (0, i.configureProperties)(this, "index")
                }
                get layerManager() {
                    return s.default.UIKit.getLayerManager()
                }
                connectedCallback() {
                    this.isConnected && (this.style.display = "none", this._setupTimeout = setTimeout((() => {
                        if (!this.content) throw "This layer appears to not be set up correctly. Ensure there's a single <lc-layer-content> rendered unconditionally."
                    }), 1e3), this.attemptSetup() || this.addEventListener("layer-content-rendered", (() => this.attemptSetup())))
                }
                attemptSetup() {
                    if (this.content = this.querySelector("lc-layer-content"), !this.content) return !1;
                    if (this.children.length > 1) throw "Multiple child nodes found under Layer. All content for a layer must be wrapped in a single element of type <lc-layer-content>";
                    this.removeChild(this.content), this._ready = !0, this.sync()
                }
                sync() {
                    this._ready && (this._isOpen ? this.showNow() : this.hideNow())
                }
                showNow() {
                    this.layerManager.insertLayer(this.content, +this.index || 0)
                }
                hideNow() {
                    this.layerManager.removeLayer(this.content), this.appendChild(this.content)
                }
                set onHide(e) {
                    this._onHide = e
                }
                set open(e) {
                    this._isOpen !== e && (this._isOpen = e, this.sync())
                }
                disconnectedCallback() {
                    this._isOpen && this.hideNow(), clearTimeout(this._setupTimeout)
                }
            }
            customElements.get("lc-layer") || customElements.define("lc-layer", l)
        }, (e, t, n) => {
            "use strict";
            var a, s = (a = n(1)) && a.__esModule ? a : {
                    default: a
                },
                i = n(24);
            n(25);
            class r extends HTMLElement {
                connectedCallback() {
                    this.isConnected && this.dispatchEvent(new CustomEvent("layer-window-content-rendered", {
                        bubbles: !0
                    }))
                }
            }
            customElements.get("lc-layer-window-content") || customElements.define("lc-layer-window-content", r);
            class l extends HTMLElement {
                constructor() {
                    super(), this._ready = !1, this._options = null
                }
                get layerWindowManager() {
                    return s.default.UIKit.getLayerWindowManager()
                }
                close() {
                    this.layerWindowManager.close(this._name)
                }
                closeLayer() {
                    this.layerWindowManager.closeLayer(this._name)
                }
                attach() {
                    this.layerWindowManager.attach(this._name)
                }
                toggleLayerOpenClose() {
                    this.layerWindowManager.toggleLayerOpenClose(this._name)
                }
                toggleDetachAttach() {
                    this.layerWindowManager.toggleDetachAttach(this._name)
                }
                minimizeWindow() {
                    this.layerWindowManager.minimizeWindow(this._name)
                }
                flash() {
                    this.layerWindowManager.flash(this._name)
                }
                getWindowRectPromise() {
                    return this.layerWindowManager.getWindowRectPromise(this._name)
                }
                destroy() {
                    this.layerWindowManager.destroy(this._name)
                }
                connectedCallback() {
                    this.isConnected && (this.style.display = "none", this.closeLayer(this._name), this._devHelperTimeout = setTimeout((() => {
                        if (this.children.length > 1) throw "Multiple child nodes found, all content must be wrapped in a single element of type <lc-layer-window-content>";
                        if (!this.content) throw "Incorrect setup. Ensure there's a single <lc-layer-window-content> rendered unconditionally."
                    }), 1e3), this.attemptSetup(), this.content || this.addEventListener("layer-window-content-rendered", (() => this.attemptSetup())))
                }
                attemptSetup() {
                    this._ready || (this.addEventListener("onLayerOpened", (() => {
                        this._onLayerOpened && this._onLayerOpened()
                    })), this.addEventListener("onLayerClosed", (() => {
                        this._onLayerClosed && this._onLayerClosed()
                    })), this.addEventListener("onWindowOpened", (() => {
                        this._onWindowOpened && this._onWindowOpened()
                    })), this.addEventListener("onWindowClosed", (() => {
                        this._onWindowClosed && this._onWindowClosed()
                    })), this.content = this.querySelector("lc-layer-window-content"), this.content && (this._ready = !0, this.sync()))
                }
                sync() {
                    if (this._ready) {
                        if (!this._name) throw "LayerWindow name attribute missing!";
                        if (!this._options) throw "LayerWindow options attribute missing!";
                        this._updateWindowControls(), this.layerWindowManager.registerLayerWindow(this._name, this._options, this, this.content)
                    }
                }
                set name(e) {
                    this._name !== e && (this._name = e, this.sync())
                }
                set options(e) {
                    e && (this._options = Object.assign({
                        resizable: !0,
                        elongating: !0,
                        minimizable: !0,
                        detachable: !0,
                        stylesheets: []
                    }, e), this._options.stylesheets.push("/fe/lol-shared-components/rcp-fe-lol-shared-components.css"), this.sync())
                }
                set onLayerOpened(e) {
                    this._onLayerOpened = e
                }
                set onLayerClosed(e) {
                    this._onLayerClosed = e
                }
                set onLayerElongated(e) {
                    this._onLayerElongated = e
                }
                set onWindowOpened(e) {
                    this._onWindowOpened = e
                }
                set onWindowClosed(e) {
                    this._onWindowClosed = e
                }
                set onWindowResized(e) {
                    this._onWindowResized = e
                }
                disconnectedCallback() {
                    this.closeLayer(this._name), clearTimeout(this._devHelperTimeout)
                }
                _updateWindowControls() {
                    this._updateElongatingHandle(), this._updateMinimizeButton(), this._updateResizingHandle(), this._updateToggleDetachButton(); - 1 !== navigator.appVersion.indexOf("Mac") && this.content.classList.add("is-mac")
                }
                _updateElongatingHandle() {
                    if (this._options.elongating && !this._elementElongatingHandle) {
                        const e = document.createElement("div");
                        e.className = "lc-layer-window-control-elongating-handle";
                        const t = e => {
                            this.layerWindowManager.elongateLayer(this._name, e), this._onLayerElongated && this._onLayerElongated(e)
                        };
                        (0, i.applyHeightDragListener)(e, this.content, document, t.bind(this)), this.content.appendChild(e), this._elementElongatingHandle = e
                    } else !this._options.elongating && this._elementElongatingHandle && (this.content.removeChild(this._elementElongatingHandle), this._elementElongatingHandle = null)
                }
                _updateMinimizeButton() {
                    if (this._options.minimizable && !this._elementMinimizeButton) {
                        const e = document.createElement("div");
                        e.className = "lc-layer-window-control-minimize", e.addEventListener("click", (() => {
                            this.minimizeWindow()
                        })), this.content.appendChild(e), this._elementMinimizeButton = e
                    } else !this._options.minimizable && this._elementMinimizeButton && (this.content.removeChild(this._elementMinimizeButton), this._elementMinimizeButton = null)
                }
                _updateResizingHandle() {
                    if (this._options.resizable && !this._elementResizeHandle) {
                        const e = document.createElement("div");
                        e.className = "lc-layer-window-control-resizing-handle";
                        const t = () => {
                            this._onWindowResized && this._onWindowResized()
                        };
                        (0, i.applyDragListener)(e, document, t.bind(this)), this.content.appendChild(e), this._elementResizeHandle = e
                    } else !this._options.resizable && this._elementResizeHandle && (this.content.removeChild(this._elementResizeHandle), this._elementResizeHandle = null)
                }
                _updateToggleDetachButton() {
                    if (this._options.detachable && !this._elementToggleDetachButton) {
                        const e = document.createElement("div");
                        e.className = "lc-layer-window-control-toggle-attach", e.addEventListener("click", (() => {
                            this.toggleDetachAttach()
                        })), this.content.appendChild(e), this._elementToggleDetachButton = e
                    } else !this._options.detachable && this._elementToggleDetachButton && (this.content.removeChild(this._elementToggleDetachButton), this._elementToggleDetachButton = null)
                }
            }
            customElements.get("lc-layer-window") || customElements.define("lc-layer-window", l)
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.applyDragListener = function(e, t, n) {
                e.addEventListener("mousedown", (() => {
                    const e = () => {
                            n()
                        },
                        a = () => {
                            t.removeEventListener("mouseup", a), t.removeEventListener("mousemove", e)
                        };
                    t.addEventListener("mousemove", e), t.addEventListener("mouseup", a)
                }))
            }, t.applyHeightDragListener = function(e, t, n, a) {
                e.addEventListener("mousedown", (e => {
                    if (0 !== e.button) return;
                    const s = e.y,
                        i = t.offsetHeight,
                        r = n.querySelectorAll("iframe");
                    [].forEach.call(r, (e => {
                        e.previousPointerEvents = e.style.pointerEvents, e.style.pointerEvents = "none"
                    }));
                    const l = e => {
                            const t = s - e.y;
                            a(i + t)
                        },
                        o = () => {
                            n.removeEventListener("mouseup", o), n.removeEventListener("mousemove", l), [].forEach.call(r, (e => {
                                e.style.pointerEvents = e.previousPointerEvents, delete e.previousPointerEvents
                            }))
                        };
                    n.addEventListener("mousemove", l), n.addEventListener("mouseup", o)
                }))
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function() {
                const e = s.dataBinding.bindTo(s.socket);
                return new i.default(e, s.tra)
            };
            var a, s = n(1),
                i = (a = n(27)) && a.__esModule ? a : {
                    default: a
                }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = function(e, t) {
                    if (!t && e && e.__esModule) return e;
                    if (null === e || "object" != typeof e && "function" != typeof e) return {
                        default: e
                    };
                    var n = o(t);
                    if (n && n.has(e)) return n.get(e);
                    var a = {},
                        s = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var i in e)
                        if ("default" !== i && Object.prototype.hasOwnProperty.call(e, i)) {
                            var r = s ? Object.getOwnPropertyDescriptor(e, i) : null;
                            r && (r.get || r.set) ? Object.defineProperty(a, i, r) : a[i] = e[i]
                        } a.default = e, n && n.set(e, a);
                    return a
                }(n(28)),
                r = n(29),
                l = (a = n(48)) && a.__esModule ? a : {
                    default: a
                };

            function o(e) {
                if ("function" != typeof WeakMap) return null;
                var t = new WeakMap,
                    n = new WeakMap;
                return (o = function(e) {
                    return e ? n : t
                })(e)
            }
            var c = class {
                constructor(e, t) {
                    this._tra = new l.default(t), this._outstandingPromiseResolves = [], this._names = null, this._useSpecialLeagueTierNames = null, this._splitsConfig = null, this._dataBinding = e, this._tiersByQueueType = {}, e.get(i.GENERIC_ASSETS_URL).then((e => {
                        this._genericAssets = e
                    })), e.addObserver(i.IS_SPECIAL_SHARD_URL, (e => {
                        if (null === e) return void s.logger.trace("dynamic config for LeagueConfig not set yet");
                        const t = e.UseSpecialLeagueTierNames || !1;
                        t !== this._useSpecialLeagueTierNames && (this._useSpecialLeagueTierNames = t, this._updateNames(), this._resolveOutstandingPromises())
                    })), e.addObserver(i.SPLITS_CONFIG_URL, (e => {
                        this._splitsConfig = e
                    }))
                }
                getTiersForQueue(e) {
                    return this._tiersByQueueType.hasOwnProperty(e) ? Promise.resolve(this._tiersByQueueType[e]) : this._dataBinding.get(`/lol-ranked/v1/eligibleTiers/queueType/${e}`).then((t => (this._tiersByQueueType[e] = t, t)), (() => i.TIERS))
                }
                getConstants() {
                    return i
                }
                getNames() {
                    return null !== this._names ? Promise.resolve(this._names) : new Promise((e => {
                        this._outstandingPromiseResolves.push(e)
                    }))
                }
                getTierName(e) {
                    const t = (0, r.sanitizeTier)(e);
                    return (0, r.translateTier)(this._tra, this._useSpecialLeagueTierNames, t)
                }
                getDivisionName(e) {
                    const t = (0, r.sanitizeDivision)(e);
                    return t ? this._tra.get(`lol_league_division_names_${t}`) : ""
                }
                getLpLoc(e) {
                    const t = (0, r.sanitizeLp)(e);
                    return null !== t ? this._tra.formatString("lol_league_lp", {
                        leaguePoints: t
                    }) : ""
                }
                getCherryRatedRatingLoc(e) {
                    const t = (0, r.sanitizeLp)(e);
                    return null !== t ? this._tra.formatString("lol_cherry_rated_rating", {
                        ratedRating: t
                    }) : ""
                }
                getTierNameToOrdinal() {
                    return i.TIER_NAME_TO_ORDINAL
                }
                getFullTierDivisionName(e, t) {
                    const n = (0, r.sanitizeTier)(e),
                        a = (0, r.translateTier)(this._tra, this._useSpecialLeagueTierNames, n),
                        s = this.getDivisionName(t);
                    return i.TIERS_WITH_NO_DIVISIONS.includes(n) ? a : this._tra.formatString("lol_league_full_tier_division_name", {
                        tier: a,
                        division: s
                    })
                }
                getTierDivisionLpLoc(e, t, n) {
                    const a = this.getFullTierDivisionName(e, t),
                        s = (0, r.sanitizeLp)(n);
                    return a && null !== s ? this._tra.formatString("lol_league_tier_division_lp", {
                        tierDivisionLoc: a,
                        leaguePoints: s
                    }) : ""
                }
                getRankedMiniRegalia(e) {
                    if (!e) return "";
                    const t = (0, r.sanitizeTier)(e);
                    return `${i.RANKED_MINI_CREST_PATH}/${t}.png`.toLowerCase()
                }
                getRankedMiniRegaliaSvg(e) {
                    if (!e) return "";
                    const t = (0, r.sanitizeTier)(e);
                    return `${i.RANKED_MINI_CREST_PATH}/${t}.svg`.toLowerCase()
                }
                getCherryRatedTierNameLoc(e) {
                    if (!e) return "";
                    const t = (0, r.sanitizeCherryRatedTier)(e);
                    return t ? (0, r.translateCherryTier)(this._tra, t) : ""
                }
                getCherryRatedMiniCrest(e) {
                    return e && i.CHERRY_MINI_CREST_PATHS.get(e) || i.CHERRY_MINI_CREST_PATHS.get(i.LOWEST_CHERRY_RATED_TIER)
                }
                getCherryRatedMedallion(e) {
                    return e && i.CHERRY_MEDALLION_PATHS.get(e) || i.CHERRY_MEDALLION_PATHS.get(i.LOWEST_CHERRY_RATED_TIER)
                }
                getTFTRatedMiniBadge(e, t) {
                    if (!e || !t) return "";
                    const n = (0, r.sanitizeTFTRatedTier)(e);
                    let a = "";
                    const s = `tft-rated-mini-badges-${t}`;
                    return n && t && this._genericAssets && this._genericAssets[s] && (a = this._genericAssets[s][n]), a
                }
                getRatedPostgameBadge(e, t) {
                    return e && t ? (0, r.isTftQueueType)(t) ? this.getTFTRatedPostgameBadge(e, t) : this.getCherryRatedMedallion(e) : ""
                }
                getTFTRatedPostgameBadge(e, t) {
                    if (!e || !t) return "";
                    const n = (0, r.sanitizeTFTRatedTier)(e);
                    let a = "";
                    const s = `tft-rated-postgame-badges-${t}`;
                    return n && t && this._genericAssets && this._genericAssets[s] && (a = this._genericAssets[s][n]), a
                }
                getTFTRatedLoadingBadge(e) {
                    return e ? `/fe/lol-static-assets/lottie/tft-rated/Badge_Loading_EOG_${e}.json` : ""
                }
                isUnrated(e) {
                    return !e || e === i.RATED_TIER_NAME_NONE
                }
                getRankedQueueName(e) {
                    return e ? this._tra.get(`lol_league_queue_name_${e}`) : ""
                }
                _updateNames() {
                    this._names = {}, i.ALL_TIERS.forEach((e => {
                        const t = (0, r.translateTier)(this._tra, this._useSpecialLeagueTierNames, e);
                        this._names[e] = t
                    })), Object.freeze(this._names)
                }
                _resolveOutstandingPromises() {
                    this._outstandingPromiseResolves.forEach((e => {
                        e(this._names)
                    })), this._outstandingPromiseResolves = []
                }
                isApexForQueue(e) {
                    return !(!e || !e.tier) && i.APEX_TIERS.includes(e.tier)
                }
                getUpOneDivision(e, t, n) {
                    let a, s;
                    if (t === i.HIGHEST_DIVISION || i.APEX_TIERS.includes(e)) {
                        if (a = this.getUpOneTier(e, n), !a) return null;
                        s = i.APEX_TIERS.includes(a) ? i.HIGHEST_DIVISION : i.LOWEST_DIVISION
                    } else a = e, s = i.DIVISIONS[i.DIVISION_TO_ORDINAL[t] + 1];
                    return {
                        tier: a,
                        division: s
                    }
                }
                getDownOneDivision(e, t, n) {
                    let a, s;
                    if (t === i.LOWEST_DIVISION || i.APEX_TIERS.includes(e)) {
                        if (a = this.getDownOneTier(e, n), !a) return null;
                        s = i.HIGHEST_DIVISION
                    } else a = e, s = i.DIVISIONS[i.DIVISION_TO_ORDINAL[t] - 1];
                    return {
                        tier: a,
                        division: s
                    }
                }
                isLowestTierDivision(e, t, n) {
                    const a = (0, r.sanitizeTier)(e),
                        s = this.getDownOneDivision(a, t, n);
                    return !s || s.tier !== a
                }
                getUpOneTier(e, t) {
                    const n = t.indexOf(e) + 1,
                        a = t[n];
                    return a || null
                }
                getDownOneTier(e, t) {
                    const n = t.indexOf(e) - 1,
                        a = t[n];
                    return a || null
                }
                rankAdd(e, t, n, a, s) {
                    const r = n + a;
                    if (r >= i.LP_PER_DIVISION && !i.APEX_TIERS.includes(e)) {
                        const n = this.getUpOneDivision(e, t, s);
                        return this.rankAdd(n.tier, n.division, 0, r - i.LP_PER_DIVISION, s)
                    }
                    return {
                        tier: e,
                        division: t,
                        lp: r
                    }
                }
                rankSubtract(e, t, n, a, s) {
                    const r = n - a;
                    if (r < 0) {
                        let n, a;
                        if (i.APEX_TIERS.includes(e)) n = i.HIGHEST_TIER, a = i.HIGHEST_DIVISION;
                        else {
                            const i = this.getDownOneDivision(e, t, s);
                            n = i.tier, a = i.division
                        }
                        return this.rankSubtract(n, a, i.LP_PER_DIVISION, -1 * r, s)
                    }
                    return {
                        tier: e,
                        division: t,
                        lp: r
                    }
                }
                compareTierDivision(e, t, n, a, s) {
                    const r = s.indexOf(e) || 0,
                        l = s.indexOf(n) || 0;
                    if (r !== l) return r > l ? 1 : -1;
                    const o = i.DIVISION_TO_ORDINAL[t || i.DIVISIONS[0]],
                        c = i.DIVISION_TO_ORDINAL[a || i.DIVISIONS[0]];
                    return o !== c ? o > c ? 1 : -1 : 0
                }
                asyncGetSplitRewardLocalization(e) {
                    const t = this._splitsConfig,
                        n = this._dataBinding,
                        a = this._tra;
                    return new Promise((function(s) {
                        if (t && t.rewardInfoByRewardId && t.rewardInfoByRewardId[e]) {
                            const r = t.rewardInfoByRewardId[e],
                                l = `lol_league_reward_${r.rewardType}`;
                            if (r.rewardType === i.REWARD_TYPES.CHAMPION_TOKEN) {
                                const t = r.championId || e;
                                n.get(`/lol-game-data/assets/v1/champions/${t}.json`).then((e => {
                                    e && e.name && s(a.formatString(l, {
                                        championName: e.name
                                    }))
                                }))
                            } else if (r.rewardType === i.REWARD_TYPES.ORANGE_ESSENCE) {
                                const e = r.quantity || i.DEFAULT_ORANGE_ESSENCE_QUANTITY;
                                s(a.formatString(l, {
                                    quantity: e
                                }))
                            } else s(a.formatString(l, {
                                number: r.splitId || 1
                            }))
                        } else n.get(`${i.ITEM_KEYS_URL}?instanceIds=%5B%22${e}%22%5D`).then((t => {
                            if (t && t[e] && t[e].inventoryType && t[e].itemId) {
                                const a = t[e].inventoryType,
                                    r = t[e].itemId;
                                n.get(`${i.ITEM_DETAILS_URL}?inventoryType=${a}&itemId=${r}`).then((e => {
                                    e && e.item && e.item.name && s(e.item.name)
                                }))
                            }
                        }))
                    }))
                }
                asyncGetRewardImage(e, t = i.DEFAULT_CHAMPION_SKIN_ASSET_KEY) {
                    const n = this._splitsConfig,
                        a = this._dataBinding;
                    return new Promise((function(s) {
                        if (n && n.rewardInfoByRewardId && n.rewardInfoByRewardId[e]) {
                            const t = n.rewardInfoByRewardId[e].rewardType;
                            if (i.REWARD_ASSET_PATHS && i.REWARD_ASSET_PATHS[t] && i.REWARD_ASSET_PATHS[t].length > 0) s(i.REWARD_ASSET_PATHS[t]);
                            else if (t === i.REWARD_TYPES.CHAMPION_TOKEN) {
                                const t = n.rewardInfoByRewardId[e].championId || e;
                                s(`/lol-game-data/assets/v1/champion-tiles/${t}/${t}000.jpg`)
                            }
                        }
                        a.get(`${i.ITEM_KEYS_URL}?instanceIds=%5B%22${e}%22%5D`).then((n => {
                            if (n && n[e] && n[e].inventoryType && n[e].itemId) {
                                const r = n[e].inventoryType,
                                    l = n[e].itemId;
                                r === i.REWARD_TYPES.CHAMPION && s(`/lol-game-data/assets/v1/champion-tiles/${l}/${l}000.jpg`), a.get(`${i.ITEM_DETAILS_URL}?inventoryType=${r}&itemId=${l}`).then((e => {
                                    e && e.item && (r === i.REWARD_TYPES.CHAMPION_SKIN && !e.item.subInventoryType && e.assets && e.assets[t] ? s(e.assets[t]) : s(e.item.imagePath))
                                }))
                            }
                        }))
                    }))
                }
            };
            t.default = c
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.TIER_NAME_UNRANKED = t.TIER_NAME_TO_ORDINAL = t.TIER_NAME_PROVISIONAL = t.TIER_NAME_NONE = t.TIERS_WITH_NO_DIVISIONS = t.TIERS = t.TFT_RATED_TIERS = t.SPLITS_CONFIG_URL = t.REWARD_TYPES = t.REWARD_ASSET_PATHS = t.REGULAR_TIERS = t.RATED_TIER_NAME_NONE = t.RANKED_MINI_CREST_PATH = t.LP_PER_DIVISION = t.LOWEST_TIER = t.LOWEST_TFT_RATED_TIER = t.LOWEST_DIVISION = t.LOWEST_CHERRY_RATED_TIER = t.ITEM_KEYS_URL = t.ITEM_DETAILS_URL = t.IS_SPECIAL_SHARD_URL = t.HIGHEST_TIER = t.HIGHEST_DIVISION = t.GENERIC_ASSETS_URL = t.DIVISION_TO_ORDINAL = t.DIVISION_TO_NUMERAL = t.DIVISION_NAME_NONE = t.DIVISIONS = t.DEFAULT_ORANGE_ESSENCE_QUANTITY = t.DEFAULT_CHAMPION_SKIN_ASSET_KEY = t.CHERRY_RATED_TIERS = t.CHERRY_MINI_CREST_PATHS = t.CHERRY_MEDALLION_PATHS = t.CHALLENGES_CONFIG_URL = t.ASSET_PATH = t.APEX_TIERS = t.ALL_TIERS = void 0;
            t.IS_SPECIAL_SHARD_URL = "/lol-platform-config/v1/namespaces/LeagueConfig";
            t.SPLITS_CONFIG_URL = "/lol-ranked/v1/splits-config";
            t.ITEM_KEYS_URL = "/lol-store/v1/itemKeysFromInstanceIds";
            t.ITEM_DETAILS_URL = "/lol-catalog/v1/item-details";
            t.GENERIC_ASSETS_URL = "/lol-game-data/assets/v1/generic-assets.json";
            t.CHALLENGES_CONFIG_URL = "/lol-platform-config/v1/namespaces/Challenges";
            const n = "UNRANKED";
            t.TIER_NAME_UNRANKED = n;
            t.TIER_NAME_NONE = "NONE";
            t.TIER_NAME_PROVISIONAL = "PROVISIONAL";
            t.DIVISION_NAME_NONE = "NA";
            t.APEX_TIERS = ["MASTER", "GRANDMASTER", "CHALLENGER"];
            const a = ["IRON", "BRONZE", "SILVER", "GOLD", "PLATINUM", "EMERALD", "DIAMOND"];
            t.REGULAR_TIERS = a;
            const s = ["IRON", "BRONZE", "SILVER", "GOLD", "PLATINUM", "EMERALD", "DIAMOND", "MASTER", "GRANDMASTER", "CHALLENGER"];
            t.TIERS = s;
            const i = [n, "IRON", "BRONZE", "SILVER", "GOLD", "PLATINUM", "EMERALD", "DIAMOND", "MASTER", "GRANDMASTER", "CHALLENGER"];
            t.ALL_TIERS = i;
            const r = [n, "MASTER", "GRANDMASTER", "CHALLENGER"];
            t.TIERS_WITH_NO_DIVISIONS = r;
            const l = a[a.length - 1];
            t.HIGHEST_TIER = l;
            const o = a[0];
            t.LOWEST_TIER = o;
            const c = ["IV", "III", "II", "I"];
            t.DIVISIONS = c;
            const d = c[c.length - 1];
            t.HIGHEST_DIVISION = d;
            const u = c[0];
            t.LOWEST_DIVISION = u;
            t.LP_PER_DIVISION = 100;
            const m = C(s);
            t.TIER_NAME_TO_ORDINAL = m;
            const p = C(c);
            t.DIVISION_TO_ORDINAL = p;
            const h = Object.freeze({
                NA: 0,
                I: 1,
                II: 2,
                III: 3,
                IV: 4
            });
            t.DIVISION_TO_NUMERAL = h;
            const g = ["GRAY", "GREEN", "BLUE", "PURPLE", "ORANGE"];
            t.CHERRY_RATED_TIERS = g;
            const f = g[0];
            t.LOWEST_CHERRY_RATED_TIER = f;
            const _ = ["GRAY", "GREEN", "BLUE", "PURPLE", "ORANGE"];
            t.TFT_RATED_TIERS = _;
            t.RATED_TIER_NAME_NONE = "NONE";
            const A = _[0];
            t.LOWEST_TFT_RATED_TIER = A;
            const b = "/fe/lol-static-assets";
            t.ASSET_PATH = b;
            t.DEFAULT_CHAMPION_SKIN_ASSET_KEY = "tilePath";
            const v = `${b}/images/ranked-mini-crests`;
            t.RANKED_MINI_CREST_PATH = v;
            const E = new Map([
                ["GRAY", "/fe/lol-static-assets/images/cherry-mini-crests/wood-mini-crest.svg"],
                ["GREEN", "/fe/lol-static-assets/images/cherry-mini-crests/bronze-mini-crest.svg"],
                ["BLUE", "/fe/lol-static-assets/images/cherry-mini-crests/silver-mini-crest.svg"],
                ["PURPLE", "/fe/lol-static-assets/images/cherry-mini-crests/gold-mini-crest.svg"],
                ["ORANGE", "/fe/lol-static-assets/images/cherry-mini-crests/gladiator-mini-crest.svg"]
            ]);
            t.CHERRY_MINI_CREST_PATHS = E;
            const y = new Map([
                ["GRAY", "/fe/lol-static-assets/images/cherry-rated-medallions/wood-medallion.png"],
                ["GREEN", "/fe/lol-static-assets/images/cherry-rated-medallions/bronze-medallion.png"],
                ["BLUE", "/fe/lol-static-assets/images/cherry-rated-medallions/silver-medallion.png"],
                ["PURPLE", "/fe/lol-static-assets/images/cherry-rated-medallions/gold-medallion.png"],
                ["ORANGE", "/fe/lol-static-assets/images/cherry-rated-medallions/gladiator-medallion.png"]
            ]);
            t.CHERRY_MEDALLION_PATHS = y;
            t.REWARD_TYPES = {
                ETERNALS_CAPSULE: "ETERNALS_CAPSULE",
                CHAMPION_TOKEN: "CHAMPION_TOKEN",
                CHAMPION: "CHAMPION",
                CHAMPION_SKIN: "CHAMPION_SKIN",
                ORANGE_ESSENCE: "ORANGE_ESSENCE",
                HEXTECH_CHEST: "HEXTECH_CHEST",
                HEXTECH_KEY: "HEXTECH_KEY",
                MASTERWORK_CHEST: "MASTERWORK_CHEST",
                SUMMONER_ICON: "SUMMONER_ICON",
                EMOTE: "EMOTE",
                WARD_SHARD: "WARD_SHARD",
                MYSTERY_EMOTE: "MYSTERY_EMOTE",
                CHAMPION_SKIN_CHROMA: "CHAMPION_SKIN_CHROMA",
                HEXTECH_KEY_FRAGMENT: "HEXTECH_KEY_FRAGMENT"
            };
            t.REWARD_ASSET_PATHS = {
                ETERNALS_CAPSULE: "/lol-game-data/assets/ASSETS/Loot/Eternals/capsule.png",
                ORANGE_ESSENCE: "/fe/lol-loot/assets/loot_item_icons/currency_cosmetic.png",
                HEXTECH_CHEST: "/fe/lol-loot/assets/loot_item_icons/chest.png",
                HEXTECH_KEY: "/fe/lol-loot/assets/loot_item_icons/material_key.png",
                MASTERWORK_CHEST: "/lol-game-data/assets/ASSETS/Loot/Masterwork_chest_224.png",
                WARD_SHARD: "/lol-game-data/assets/ASSETS/Loot/WardSkinIconShard_490x490.png",
                MYSTERY_EMOTE: "/fe/lol-loot/assets/loot_item_icons/chest_187.png",
                HEXTECH_KEY_FRAGMENT: "/fe/lol-loot/assets/loot_item_icons/material_key_fragment.png"
            };

            function C(e) {
                const t = {};
                for (let n = 0; n < e.length; n++) {
                    t[e[n]] = n
                }
                return t
            }
            t.DEFAULT_ORANGE_ESSENCE_QUANTITY = 500
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isTftQueueType = l, t.sanitizeCherryRatedTier = r, t.sanitizeDivision = function(e) {
                const t = e;
                if (Boolean(e) && "string" == typeof t) return i.DIVISION_TO_NUMERAL[t];
                return a.logger.warning("LeagueTierNames received an unrecognized division", e), t
            }, t.sanitizeLp = function(e) {
                if ("string" == typeof e && /[^\d]+/.test(e)) return null;
                const t = parseInt(e);
                if (isNaN(t)) return null;
                return t
            }, t.sanitizeRatedTier = function(e, t) {
                return l(t) ? o(e) : r(e)
            }, t.sanitizeTFTRatedTier = o, t.sanitizeTier = function(e) {
                let t = Boolean(e) && "string" == typeof e ? e.toUpperCase() : i.TIER_NAME_UNRANKED;
                t === i.TIER_NAME_NONE && (t = i.TIER_NAME_UNRANKED);
                if (i.ALL_TIERS.includes(t)) return t;
                return a.logger.warning("LeagueTierNames received an unrecognized tier", e), i.TIER_NAME_UNRANKED
            }, t.translateCherryTier = function(e, t) {
                return e.get(`lol_league_cherry_tier_names_${t.toLowerCase()}`)
            }, t.translateTier = function(e, t, n) {
                return e.get(`lol_league_tier_names_${t?"special_":""}${n}`)
            };
            var a = n(1),
                s = n(30),
                i = n(28);

            function r(e) {
                const t = "string" == typeof e ? e.toUpperCase() : i.TIER_NAME_UNRANKED;
                return i.CHERRY_RATED_TIERS.includes(t) ? t : (a.logger.warning("LeagueTierNames received an unrecognized rated Cherry tier", e), i.LOWEST_CHERRY_RATED_TIER)
            }

            function l(e) {
                return s.QUEUES.RANKED_AND_RATED_TFT_QUEUE_TYPES.includes(e)
            }

            function o(e) {
                const t = "string" == typeof e ? e.toUpperCase() : i.TIER_NAME_UNRANKED;
                return i.TFT_RATED_TIERS.includes(t) ? t : (a.logger.warning("LeagueTierNames received an unrecognized tft rated tier", e), i.LOWEST_TFT_RATED_TIER)
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), Object.defineProperty(t, "PAW", {
                enumerable: !0,
                get: function() {
                    return a.default
                }
            }), Object.defineProperty(t, "PROFILE_PRIVACY", {
                enumerable: !0,
                get: function() {
                    return o.default
                }
            }), Object.defineProperty(t, "QUEUES", {
                enumerable: !0,
                get: function() {
                    return s.default
                }
            }), Object.defineProperty(t, "REWARD_TRACKER", {
                enumerable: !0,
                get: function() {
                    return i.default
                }
            }), Object.defineProperty(t, "SETTINGS", {
                enumerable: !0,
                get: function() {
                    return l.default
                }
            }), Object.defineProperty(t, "SOCIAL", {
                enumerable: !0,
                get: function() {
                    return r.default
                }
            }), Object.defineProperty(t, "TIME", {
                enumerable: !0,
                get: function() {
                    return c.default
                }
            });
            var a = d(n(31)),
                s = d(n(42)),
                i = d(n(43)),
                r = d(n(44)),
                l = d(n(45)),
                o = d(n(46)),
                c = d(n(47));

            function d(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = p(n(32)),
                s = p(n(33)),
                i = p(n(34)),
                r = p(n(35)),
                l = p(n(36)),
                o = p(n(37)),
                c = p(n(38)),
                d = p(n(39)),
                u = p(n(40)),
                m = p(n(41));

            function p(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            var h = {
                COMPONENT_TYPES: a.default,
                CURRENCY_TYPES: s.default,
                INVENTORY_TYPES: i.default,
                MEDIA_TYPES: r.default,
                MEDIA_LOAD_TYPES: l.default,
                MODAL_TYPES: o.default,
                OFFER_PURCHASE_STATES: c.default,
                OFFER_VALIDATION_STATES: d.default,
                SCROLL_LIST_DISPLAY_TYPES: u.default,
                TEMPLATE_TYPES: m.default
            };
            t.default = h
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                TEXT: "TEXT",
                TITLE_SUBTITLE: "TITLE_SUBTITLE",
                PURCHASE: "PURCHASE",
                MEDIA: "MEDIA",
                IMAGE_CAROUSEL: "IMAGE_CAROUSEL",
                SCROLL_LIST: "SCROLL_LIST",
                VERTICAL_LIST: "VERTICAL_LIST"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                RP: "RP",
                IP: "IP",
                BE: "lol_blue_essence"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                CHAMPION: "CHAMPION",
                CHAMPION_SKIN: "CHAMPION_SKIN",
                WARD_SKIN: "WARD_SKIN",
                BATTLE_BOOST: "BATTLE_BOOST",
                GIFT: "GIFT",
                MYSTERY: "MYSTERY",
                BUNDLES: "BUNDLES",
                SUMMONER_ICON: "SUMMONER_ICON",
                STATSTONE: "STATSTONE"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                SVG: "SVG",
                IMAGE: "IMAGE",
                VIDEO: "VIDEO"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                LOCAL_ASSET: "LOCAL_ASSET",
                EXTERNAL_URL: "EXTERNAL_URL",
                GAME_DATA: "GAME_DATA"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                CHAMPION_MODAL: "CHAMPION_MODAL",
                SKIN_VIEWER_MODAL: "SKIN_VIEWER_MODAL",
                MULTIPLE_PURCHASE_MODAL: "MULTIPLE_PURCHASE_MODAL",
                CHROMA_MODAL: "CHROMA_MODAL",
                CHROMA_BUNDLE_MODAL: "CHROMA_BUNDLE_MODAL",
                SUMMONER_ICON_MODAL: "SUMMONER_ICON_MODAL",
                WARD_SKIN_MODAL: "WARD_SKIN_MODAL",
                SKIN_WITH_DEPENDENCY_MODAL: "SKIN_WITH_DEPENDENCY_MODAL",
                PAW_GENERIC_MODAL: "PAW_GENERIC_MODAL"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                NOT_STARTED: "NOT_STARTED",
                IN_PROGRESS: "IN_PROGRESS",
                SUCCESS: "SUCCESS",
                FAIL: "FAIL"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                NOT_STARTED: "NOT_STARTED",
                IN_PROGRESS: "IN_PROGRESS",
                COMPLETED: "COMPLETED"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                EXPANDED: "EXPANDED",
                COMPACT: "COMPACT",
                DETAILED: "DETAILED"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                LARGE_TWO_COLUMN_LANDSCAPE: "LARGE_TWO_COLUMN_LANDSCAPE"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            const n = "RANKED_SOLO_5x5",
                a = "RANKED_FLEX_SR",
                s = "RANKED_FLEX_TT",
                i = "CHERRY",
                r = "RANKED_TFT",
                l = "RANKED_TFT_DOUBLE_UP",
                o = "RANKED_TFT_TURBO",
                c = "RANKED_TFT_PAIRS",
                d = [n, a],
                u = [...d, s],
                m = [i],
                p = [r, l],
                h = [o, c],
                g = [...p, ...h],
                f = [...u, ...p],
                _ = [...h, ...m];
            var A = {
                RANKED_SOLO_5x5_QUEUE_TYPE: n,
                RANKED_FLEX_SR_QUEUE_TYPE: a,
                RANKED_FLEX_TT_QUEUE_TYPE: s,
                RANKED_CHERRY_QUEUE_TYPE: i,
                RANKED_TFT_QUEUE_TYPE: r,
                RANKED_TFT_DOUBLE_UP_QUEUE_TYPE: l,
                RANKED_TFT_TURBO_QUEUE_TYPE: o,
                RANKED_TFT_PAIRS_QUEUE_TYPE: c,
                RANKED_LOL_QUEUE_TYPES: u,
                RANKED_SR_QUEUE_TYPES: d,
                RANKED_TFT_QUEUE_TYPES: p,
                RATED_TFT_QUEUE_TYPES: h,
                RANKED_AND_RATED_TFT_QUEUE_TYPES: g,
                ALL_RANKED_QUEUE_TYPES: f,
                ALL_RATED_QUEUE_TYPES: _,
                ALL_RANKED_AND_RATED_QUEUE_TYPES: [...f, ..._]
            };
            t.default = A
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                REWARD_TAGS: {
                    INSTANT: "Instant",
                    RARE: "Rare",
                    CHOICE: "Choice",
                    MULTIPLE: "Multiple"
                },
                MILESTONE_STAGES: {
                    COMPLETED: "completed",
                    CURRENT: "current",
                    FUTURE: "future",
                    HOVERING_COMPLETED: "future-completed"
                },
                REWARD_STATE: {
                    LOCKED: "Locked",
                    UNLOCKED: "Unlocked",
                    UNSELECTED: "Unselected",
                    SELECTED: "Selected"
                },
                TRACKER_SIZE: {
                    SMALL: "tracker-size-small",
                    MEDIUM: "tracker-size-medium"
                },
                REWARD_OPTION_HEADER_TYPE: {
                    FREE: "FREE",
                    PREMIUM: "PREMIUM",
                    NONE: "NONE"
                }
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                DEFAULT_SUMMONER_ICON_ID: 29
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                AUTO: "auto",
                ALWAYS: "always",
                NEVER: "never"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            const n = {
                    UNKNOWN: "UNKNOWN",
                    ENABLED: "ENABLED",
                    DISABLED: "DISABLED"
                },
                a = {
                    PRIVATE: "PRIVATE",
                    PUBLIC: "PUBLIC"
                };
            var s = {
                ProfilePrivacyEnabledState: n,
                ProfilePrivacySetting: a,
                DEFAULT_PROFILE_PRIVACY: {
                    enabledState: n.UNKNOWN,
                    setting: a.PUBLIC
                }
            };
            t.default = s
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = t.TIME_UNITS = t.TIME_CONVERSIONS = void 0;
            const n = {
                MILLISECONDS: "milliseconds",
                SECONDS: "seconds",
                MINUTES: "minutes",
                HOURS: "hours",
                DAYS: "days",
                WEEKS: "weeks",
                MONTHS: "months",
                YEARS: "years"
            };
            t.TIME_UNITS = n;
            const a = 36e5,
                s = 864e5,
                i = 6048e5,
                r = {
                    MILLISECONDS_IN_A_SECOND: 1e3,
                    MILLISECONDS_IN_A_MINUTE: 6e4,
                    MILLISECONDS_IN_A_HOUR: a,
                    MILLISECONDS_IN_A_DAY: s,
                    MILLISECONDS_IN_A_WEEK: i,
                    MILLISECONDS_IN_A_YEAR: 314496e5
                };
            t.TIME_CONVERSIONS = r;
            var l = {
                TIME_UNITS: n,
                TIME_CONVERSIONS: r
            };
            t.default = l
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            t.default = class {
                constructor(e) {
                    this._tra = e
                }
                get(e) {
                    const t = "string" == typeof e ? e.toLowerCase() : "";
                    return this._tra.get(t)
                }
                formatString(e, t) {
                    const n = "string" == typeof e ? e.toLowerCase() : "";
                    return this._tra.formatString(n, t)
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = {
                    navigateTo: (e, t) => (0, a.getProvider)().getOptional("rcp-fe-lol-navigation").then((n => n.setActive({
                        id: e
                    }, !0, t)), (e => a.logger.error("Provider getOptional failure", e)))
                };
            t.default = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function(e) {
                const t = (0, a.default)(window.document, e),
                    n = t.querySelector(".rcp-fe-viewport-main"),
                    i = t.querySelector(".rcp-fe-viewport-sidebar"),
                    r = t.querySelector(".rcp-fe-viewport-overlay"),
                    l = t.querySelector(".rcp-fe-viewport-full-screen"),
                    o = t.querySelector(".rcp-fe-viewport-persistent");
                "dev" !== document.body.getAttribute("data-env") && window.addEventListener("contextmenu", (e => e.preventDefault()));
                return new s.default(n, i, r, l, o)
            };
            var a = i(n(51)),
                s = i(n(52));

            function i(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            n(61)
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function(e, t) {
                const n = t.getElementById("rcp-fe-viewport-harness-tmpl"),
                    a = e.importNode(n.content, !0),
                    {
                        body: s
                    } = e;
                return s.appendChild(a), s
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = o(n(53)),
                i = o(n(59)),
                r = o(n(60)),
                l = o(n(58));

            function o(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            t.default = class {
                constructor(e, t, n, o, c) {
                    this._parentContainer = e.parentElement, this._mainViewport = new s.default("main", e), this._sidebarViewport = new s.default("sidebar", t), this._overlayViewport = new i.default("overlay", n), this._fullScreenViewport = new s.default("fullscreen", o), this._persistentViewport = new r.default("persistent", c), this._fullScreenViewport.on("push", (() => {
                        if (this._fullScreenViewport.existingViewCount() > 0) return;
                        this._mainViewport.disable();
                        const n = this._mainViewport.getCurrentScreenRoot();
                        n && n.release(), e.remove(), t.remove(), c.style.opacity = 0
                    })), this._fullScreenViewport.on("remove", (() => {
                        if (this._fullScreenViewport.stackLength() > 0) return;
                        const {
                            firstChild: n
                        } = this._parentContainer;
                        this._parentContainer.insertBefore(t, n), this._parentContainer.insertBefore(e, t), this._mainViewport.enable(), this._mainViewport.stackRender(), (0, l.default)(e, !0), (0, l.default)(t, !0), c.style.opacity = 1
                    })), this._mainViewport.on("screenChange", (() => {
                        a.ContextMenuManager.isTargetConnected() || a.ContextMenuManager.close(), this._sidebarViewport.unsetBackgroundGradient()
                    })), this._fullScreenViewport.on("screenChange", (() => {
                        a.ContextMenuManager.close()
                    }))
                }
                main() {
                    return this._mainViewport
                }
                persistent() {
                    return this._persistentViewport
                }
                sidebar() {
                    return this._sidebarViewport
                }
                overlay() {
                    return this._overlayViewport
                }
                fullScreen() {
                    return this._fullScreenViewport
                }
                getApiKey(e) {
                    return Symbol(e)
                }
                _getAllViewports() {
                    return [this.main(), this.fullScreen(), this.overlay(), this.persistent(), this.sidebar()]
                }
                getAllRenderStackNames() {
                    return this._getAllViewports().reduce(((e, t) => (e[t.name()] = t.getRenderStackNames(), e)), {})
                }
                getTopRenderStackNames() {
                    return this._getAllViewports().reduce(((e, t) => (e[t.name()] = t.getTopRenderStackName(), e)), {})
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = i(n(54)),
                s = i(n(58));

            function i(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const r = {
                animate: !0,
                duration: 100
            };
            class l extends a.default {
                constructor(e, t) {
                    super(e, t), this._animationInProgress = null, this._currentScreenRoot = null
                }
                animateView(e, t, n) {
                    return this._animationInProgress = (0, s.default)(e, t, n), this._animationInProgress
                }
                fadeInView(e, t) {
                    return this.animateView(e, !0, t)
                }
                fadeOutView(e, t) {
                    return this.animateView(e, !1, t)
                }
                hasExistingView() {
                    return this.existingViewCount() > 0
                }
                existingViewCount() {
                    const {
                        children: e
                    } = this._viewRoot;
                    return e && e.length
                }
                displayElement(e) {
                    this._viewRoot.appendChild(e)
                }
                hideElement(e) {
                    this._viewRoot.removeChild(e)
                }
                getCurrentScreenRoot() {
                    return this._currentScreenRoot
                }
                setCurrentScreenRoot(e) {
                    return this._currentScreenRoot = e || null, e
                }
                assignDefaultOptions(e) {
                    return Object.assign({}, r, e, {
                        single: !1
                    })
                }
                stackRender(e) {
                    const t = this.getCurrentScreenRoot(),
                        n = this._srController.peekRenderStack();
                    return this._isSameScreenRoot(t, n) && 1 === this._srController.getRenderStack().length ? Promise.resolve(null) : this._stackRender(this.hasExistingView(), e)
                }
                _stackRender(e, t) {
                    t = this.assignDefaultOptions(t);
                    let n = null;
                    return e ? n = this.hideViewRoot(t).catch((e => {
                        if (e._isViewportAnimationCancelledError) throw e;
                        window.console.error(e)
                    })).then((() => this.showViewRoot(t))) : (t.single = !0, n = this.showViewRoot(t)), n.catch((e => {
                        if (e._isViewportAnimationCancelledError) return e;
                        throw e
                    }))
                }
                cancelAnimation() {
                    this._animationInProgress && this._animationInProgress.cancel()
                }
                showViewRoot(e) {
                    if (!this._isEnabled()) return Promise.resolve(null);
                    e = e || {};
                    const t = this._srController.peekRenderStack();
                    if (!t) return Promise.resolve(null);
                    this.cancelAnimation(), e.single && t.trigger("willShow");
                    const n = t.getElement();
                    let a = Promise.resolve();
                    return e.animate ? a = this.fadeInView(n, e.duration) : n.style && Object.assign(n.style, {
                        opacity: null
                    }), this.displayElement(n), this.setCurrentScreenRoot(t), a.then((() => {
                        if (!this._isEnabled()) {
                            const e = new Error("MutexViewport was disabled by Fullscreen.");
                            return Promise.reject(e)
                        }
                        t.trigger("show");
                        const e = t._id.name;
                        return this.trigger("showScreenRoot", e), t
                    }))
                }
                hideViewRoot(e) {
                    let t = this.getCurrentScreenRoot();
                    const n = this._srController.peekRenderStack();
                    this._isSameScreenRoot(t, n) && (t = this._srController.peekSecondToFirstRenderStack()), this.cancelAnimation(), this.triggerWillEvents(t, n);
                    const a = this._viewRoot;
                    return (e.animate ? this.fadeOutView(a.children[0], e.duration) : Promise.resolve()).then((() => {
                        const e = this._srController.peekSecondToFirstRenderStack();
                        if (this.hideCurrentScreenRoot(), this.setCurrentScreenRoot(e), t) return t.trigger("hide"), e
                    }))
                }
                _isSameScreenRoot(e, t) {
                    return e && t && e._id === t._id
                }
                hideCurrentScreenRoot() {
                    this.hideElement(this._viewRoot.children[0])
                }
                triggerWillEvents(e, t) {
                    e && e.trigger("willHide"), t && t.trigger("willShow")
                }
            }
            t.default = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = r(n(55)),
                s = r(n(56)),
                i = r(n(57));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const l = Symbol("global api key for backwards compatibility");
            class o {
                constructor(e, t) {
                    this._name = e, this._type = this.constructor.name, this._viewRoot = t, this.locks = [], this._enabled = !0, Object.assign(this, a.default), this._srController = new i.default, this.testsHelpers = null
                }
                enable() {
                    this._enabled = !0
                }
                disable() {
                    this._enabled = !1
                }
                _isEnabled() {
                    return this._enabled
                }
                name() {
                    return this._name
                }
                getRenderStackNames() {
                    return this._srController.getRenderStack().map((e => e.name))
                }
                getTopRenderStackName() {
                    const e = this.getRenderStackNames();
                    return e[e.length - 1]
                }
                getScreenRoot(e, t) {
                    return "symbol" != typeof e && (t = e, e = l), this._getScreenRoot(e, t)
                }
                _getScreenRoot(e, t) {
                    let n = this._srController.getScreenRoot(e, t);
                    if (!n) {
                        const a = {
                            apiKey: e,
                            name: t
                        };
                        n = new s.default(a, this), this._srController.registerScreenRoot(e, t, n)
                    }
                    return n
                }
                stackRemove(e) {
                    const t = this._srController.getRenderStack();
                    let n = !1;
                    for (let a = 0; a < t.length; a++) t[a] === e._id && (t.splice(a, 1), a--, this.trigger("remove", e._id), n = !0);
                    return n
                }
                stackPush(e) {
                    this.stackRemove(e), this._srController.getRenderStack().push(e._id), this.trigger("push", e._id)
                }
                stackRender() {
                    throw new Error("Viewport#stackRender should be overriden by a subclass.")
                }
                isEmpty() {
                    return 0 === this.stackLength()
                }
                stackLength() {
                    return this._srController.getRenderStack().length
                }
                tryStackRender(e) {
                    if (this.tryStackRenderOptions = e, !this.lockPromise) {
                        if (!this.locks.length) return this.stackRender(this.tryStackRenderOptions);
                        this.lockPromise = this.getLockPromise().then((() => (this.lockPromise = void 0, this.stackRender(this.tryStackRenderOptions))))
                    }
                    return this.lockPromise
                }
                getLockPromise() {
                    return this.locks.length ? this.locks.shift().then((() => this.getLockPromise())) : Promise.resolve()
                }
                isTopScreenOnStack(e) {
                    const t = this._srController.peekRenderStack();
                    return !!t && t._id === e._id
                }
                lock() {
                    let e;
                    return this.locks.push(new Promise((function(t) {
                        e = t
                    }))), e
                }
                setBackgroundGradient(e, t = "#010a13") {
                    this._viewRoot.style.background = "linear-gradient(" + e + "," + t + ")"
                }
                unsetBackgroundGradient() {
                    this.setBackgroundGradient("#010a13"), this.trigger("backgroundUnset")
                }
            }
            class c extends o {
                constructor(e, t) {
                    super(e, t);
                    const n = this;
                    this.testsHelpers = {
                        getFirstNameOnStack: function() {
                            const e = n._srController.getRenderStack()[0];
                            return e ? e.name : null
                        }
                    }
                }
            }
            let d = null;
            d = c;
            var u = d;
            t.default = u
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                events: function() {
                    return this._events || (this._events = new Map), this._events
                },
                on: function(e, t) {
                    this.events().has(e) || this.events().set(e, new Map), this.events().get(e).set(t, !0)
                },
                off: function(e, t) {
                    this.events().has(e) && this.events().get(e).delete(t)
                },
                once: function(e, t) {
                    const n = function() {
                        this.off(e, n), t()
                    }.bind(this);
                    this.on(e, n)
                },
                trigger: function(e, t) {
                    this.events().has(e) && this.events().get(e).forEach(((e, n) => {
                        n(this, t)
                    }))
                },
                purgeEvents: function() {
                    this.events().clear()
                },
                get: function(e) {
                    return this.options && void 0 !== this.options[e] ? this.options[e] : null
                },
                set: function(e, t) {
                    this.options && (this.options[e] = t, this.trigger("changed:" + e))
                }
            };
            t.default = n
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(55)) && a.__esModule ? a : {
                    default: a
                };
            t.default = class {
                constructor(e, t) {
                    this._id = e, this._viewport = t, this._element = function(e) {
                        const t = document.createElement("div");
                        return t.setAttribute("class", "screen-root"), t.setAttribute("data-screen-name", e), t
                    }(this._id.name), Object.assign(this, i.default)
                }
                elem() {
                    return s.logger.warning("method `elem()` has been deprecated, use `getElement()`"), this.getElement()
                }
                getElement() {
                    return this._element
                }
                bump(e) {
                    if (this._viewport.isTopScreenOnStack(this)) return s.logger.trace("screenroot noop bump, it is top screen", {
                        viewportName: this._viewport.name(),
                        idName: this._id.name
                    }), Promise.resolve();
                    this._viewport.stackPush(this);
                    const t = this._viewport.tryStackRender(e);
                    return s.logger.trace("screenroot will bump", {
                        viewportName: this._viewport.name(),
                        idName: this._id.name
                    }), t.then((() => {
                        s.logger.trace("screenroot did bump", {
                            viewportName: this._viewport.name(),
                            idName: this._id.name
                        }), this._viewport.trigger("screenChange")
                    })), t
                }
                release(e) {
                    const t = this._viewport.stackRemove(this),
                        n = this._viewport.name(),
                        a = this._id.name;
                    if (t) {
                        const t = this._viewport.tryStackRender(e);
                        return t.then((() => {
                            s.logger.trace("screenroot did release", {
                                viewportName: n,
                                idName: a
                            }), this._viewport.trigger("screenChange")
                        })), t
                    }
                    return Promise.resolve()
                }
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            t.default = class {
                constructor() {
                    this._apiKeys = new Map, this._viewIdsStack = []
                }
                getRenderStack() {
                    return this._viewIdsStack
                }
                _getScreenRootsMap(e) {
                    let t = this._apiKeys.get(e);
                    return t || (t = new Map, this._apiKeys.set(e, t)), t
                }
                getScreenRoot(e, t) {
                    return this._getScreenRootsMap(e).get(t)
                }
                registerScreenRoot(e, t, n) {
                    this._getScreenRootsMap(e).set(t, n)
                }
                screenRootsGenerator() {
                    const e = [],
                        t = this._apiKeys.entries();
                    let n = t.next().value;
                    for (; n;) {
                        const a = n[1].entries();
                        let s = a.next().value;
                        for (; s;) {
                            const t = s[1];
                            this.isScreenRootInRenderStack(t) && e.push(t), s = a.next().value
                        }
                        n = t.next().value
                    }
                    return e[Symbol.iterator]()
                }
                isScreenRootInRenderStack(e) {
                    const t = e._id;
                    return ~this.getRenderStack().indexOf(t)
                }
                _peekRenderStack() {
                    const e = this.getRenderStack();
                    return e[e.length - 1]
                }
                peekRenderStack() {
                    const e = this._peekRenderStack();
                    if (!e) return null;
                    return this._apiKeys.get(e.apiKey).get(e.name)
                }
                peekSecondToFirstRenderStack() {
                    const e = this.getRenderStack(),
                        t = e[e.length - 2];
                    if (!t) return null;
                    return this._apiKeys.get(t.apiKey).get(t.name)
                }
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.DEFAULT_ANIMATION_DURATION = t.AnimationPromise = void 0, t.default = function(e, t, a) {
                void 0 === a && (a = n);
                const s = t ? r : i;
                let o = null,
                    c = null,
                    d = !1;
                const u = new Promise((function(t, n) {
                    d = !0, o = e.animate(s, {
                        duration: a
                    }), o.onfinish = function() {
                        Object.assign(e.style, s[s.length - 1]), d = !1, t()
                    }, c = n
                }));
                return new l(u, (function() {
                    if (!d) return;
                    o.reverse();
                    const e = new Error("The animation was cancelled.");
                    e._isViewportAnimationCancelledError = !0, c(e)
                }))
            };
            const n = 100;
            t.DEFAULT_ANIMATION_DURATION = n;
            const a = {
                    opacity: 0
                },
                s = {
                    opacity: 1
                },
                i = [s, a],
                r = [a, s];
            class l {
                constructor(e, t) {
                    this.then = e.then.bind(e), this.catch = e.catch.bind(e), this.cancel = t
                }
            }
            t.AnimationPromise = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(54)) && a.__esModule ? a : {
                default: a
            };
            class i extends s.default {
                constructor(e, t) {
                    super(e, t)
                }
                stackRender() {
                    const e = this._viewRoot,
                        t = [],
                        n = this._srController.screenRootsGenerator();
                    for (const a of n) {
                        const n = a.getElement();
                        e.contains(n) || e.appendChild(n), t.push(n)
                    }
                    const a = Array.from(e.childNodes);
                    for (const n of a) t.includes(n) || e.removeChild(n);
                    return Promise.resolve()
                }
            }
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(53)) && a.__esModule ? a : {
                default: a
            };
            const i = "active",
                r = "hidden";
            class l extends s.default {
                displayElement(e) {
                    e.classList.add(i), e.classList.remove(r)
                }
                hideElement() {
                    const e = this.getActiveScreenRoot();
                    e.getElement().classList.add(r), e.getElement().classList.remove(i)
                }
                getCurrentScreenRootName() {
                    return this.getActiveScreenRoot().name
                }
                _getScreenRoot(e, t) {
                    const n = super._getScreenRoot(e, t),
                        a = n.getElement();
                    return a.classList.add(r), this._viewRoot.appendChild(a), n
                }
                getActiveScreenRoot() {
                    return this._currentScreenRoot
                }
                stackRender(e) {
                    return this._stackRender(this.getActiveScreenRoot(), e)
                }
            }
            t.default = l
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(63)) && a.__esModule ? a : {
                default: a
            };
            t.default = class {
                constructor(e) {
                    this.fullPageModalController = new s.default(e)
                }
                open(e) {
                    return this.fullPageModalController.open(e)
                }
                close() {
                    this.fullPageModalController.close()
                }
                addEventListener(e, t) {
                    this.fullPageModalController.addEventListener(e, t)
                }
                removeEventListener(e, t) {
                    this.fullPageModalController.removeEventListener(e, t)
                }
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = t.EVENT_MODAL_OPEN = t.EVENT_MODAL_CLOSE = void 0;
            const n = {
                    bubbles: !0
                },
                a = "fullPageModalClose";
            t.EVENT_MODAL_CLOSE = a;
            const s = "fullPageModalOpen";
            t.EVENT_MODAL_OPEN = s;
            t.default = class {
                constructor(e) {
                    const t = e.getApiKey("rcp-fe-lol-uikit key");
                    this.screenName = "rcp-fe-lol-uikit-full-page-modal-controller", this.screenRoot = e.overlay().getScreenRoot(t, this.screenName), this.screenNode = this.screenRoot.getElement(), this.fullPageModalElement = document.createElement("lol-uikit-full-page-modal"), this.domNode = null, this.listeners = new Map, this.screenNode.appendChild(this.fullPageModalElement);
                    const n = () => this.close();
                    e.main().on("push", n), e.fullScreen().on("push", n), this.fullPageModalElement.addEventListener("close-modal", n)
                }
                addEventListener(e, t) {
                    this.listeners.has(e) || this.listeners.set(e, new Set), this.listeners.get(e).add(t)
                }
                removeEventListener(e, t) {
                    const n = this.listeners.get(e);
                    return !!n && n.delete(t)
                }
                open({
                    data: e
                }) {
                    const {
                        contents: t,
                        showFrame: n = !0,
                        backgroundColor: a
                    } = e;
                    this.clear();
                    const i = document.createElement("span");
                    return i.appendChild(t), this.fullPageModalElement.appendChild(i), this.fullPageModalElement.showFrame(n), this.fullPageModalElement.setBackgroundColor(a), this.domNode = i, this.screenRoot.bump(), this.dispatchEvent(s), {
                        domNode: i
                    }
                }
                clear() {
                    this.domNode && (this.fullPageModalElement.innerHTML = "", this.dispatchCloseEvents())
                }
                close() {
                    const e = null !== this.domNode;
                    this.screenRoot.release(), this.clear(), e && this.dispatchEvent(a)
                }
                dispatchEvent(e, ...t) {
                    const n = this.listeners.get(e);
                    n && n.forEach((e => {
                        e(...t)
                    }))
                }
                dispatchCloseEvents() {
                    this.domNode.dispatchEvent(new Event("close", n)), this.domNode = null
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(65)) && a.__esModule ? a : {
                default: a
            };
            var i = function() {
                const e = new s.default,
                    t = {
                        resolveOpenSettingsHandler: function(t) {
                            e._resolveHandler("showSettingsModal", t)
                        },
                        getOpenSettingsHandler: function() {
                            return e._getHandler("showSettingsModal")
                        },
                        resolveCloseSettingsHandler: function(t) {
                            e._resolveHandler("closeSettingsModal", t)
                        },
                        getCloseSettingsHandler: function() {
                            return e._getHandler("closeSettingsModal")
                        },
                        resolveRunesHandler: function(t) {
                            e._resolveHandler("showRunes", t)
                        },
                        getRunesHandler: function() {
                            return e._getHandler("showRunes")
                        },
                        resolveFreeToPlayHandler: function(t) {
                            e._resolveHandler("freeChampRotation", t)
                        },
                        getFreeToPlayHandler: function() {
                            return e._getHandler("freeChampRotation")
                        },
                        resolveChampCollectionsHandler: function(t) {
                            e._resolveHandler("champCollections", t)
                        },
                        getChampCollectionsHandler: function() {
                            return e._getHandler("champCollections")
                        },
                        resolvePartiesHandler: function(t) {
                            e._resolveHandler("showParties", t)
                        },
                        getPartiesHandler: function() {
                            return e._getHandler("showParties")
                        },
                        resolveMissionsTrackerHandler: function(t) {
                            e._resolveHandler("showMissions", t)
                        },
                        getMissionsTrackerHandler: function() {
                            return e._getHandler("showMissions")
                        },
                        resolveMissionsCelebrateHandler: function(t) {
                            e._resolveHandler("celebrateMissionRewards", t)
                        },
                        getMissionsCelebrateHandler: function() {
                            return e._getHandler("celebrateMissionRewards")
                        },
                        resolveClashHandler: function(t) {
                            return e._resolveHandler("showClash", t)
                        },
                        getClashHandler: function() {
                            return e._getHandler("showClash")
                        },
                        resolveChampionDetailsHandler: function(t) {
                            return e._resolveHandler("showChampionDetails", t)
                        },
                        getChampionDetailsHandler: function() {
                            return e._getHandler("showChampionDetails")
                        }
                    };
                return Object.freeze(t)
            }();
            t.default = i
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            class n {
                constructor() {
                    this.promise = new Promise((e => {
                        this.resolve = e
                    }))
                }
            }
            t.default = class {
                constructor() {
                    this._registeredHandlers = new Map, this._registeredHandlers.set("showSettingsModal", new n), this._registeredHandlers.set("closeSettingsModal", new n), this._registeredHandlers.set("showRunes", new n), this._registeredHandlers.set("showStore", new n), this._registeredHandlers.set("createPAWModal", new n), this._registeredHandlers.set("showParties", new n), this._registeredHandlers.set("freeChampRotation", new n), this._registeredHandlers.set("champCollections", new n), this._registeredHandlers.set("showYourshop", new n), this._registeredHandlers.set("showLoot", new n), this._registeredHandlers.set("showMissions", new n), this._registeredHandlers.set("celebrateMissionRewards", new n), this._registeredHandlers.set("showClash", new n), this._registeredHandlers.set("showNPE", new n), this._registeredHandlers.set("showChampionDetails", new n)
                }
                _resolveHandler(e, t) {
                    if (!this._registeredHandlers.has(e)) throw new Error(`${e} handler is not valid`);
                    this._registeredHandlers.get(e).resolve(t)
                }
                _getHandler(e) {
                    const t = this._registeredHandlers.get(e);
                    if (this._registeredHandlers.has(e)) return t.promise;
                    throw new Error(`No valid handler for ${e}`)
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.dynamicTra = t.concatTra = void 0;
            var a = n(1);
            const s = a.Ember.Helper.extend({
                compute(e) {
                    const [t, n] = e;
                    return this.get("tra").formatString(t, {
                        value: n
                    })
                }
            });
            t.dynamicTra = s;
            const i = a.Ember.Helper.extend({
                compute(e) {
                    const [t, n] = e;
                    return this.get("tra").get(`${t}${n}`)
                }
            });
            t.concatTra = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = o(n(68)),
                i = o(n(70)),
                r = n(69),
                l = n(30);

            function o(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const c = a.dataBinding.bindTo(a.socket);
            var d = new class {
                addObserver(e) {
                    this._observers.has(e) || (this._observers.add(e), this._fireObserverIfInitialDataReceived(e))
                }
                removeObserver(e) {
                    this._observers.delete(e)
                }
                getUXSettingsReadyPromise() {
                    return this._uxSettingsReadyPromise
                }
                getUXSettings() {
                    return this._uxSettings
                }
                getPotatoModeOverrides() {
                    return this._potatoModeOverrides
                }
                constructor() {
                    this._sysInfo = null, this._uxSettings = null, this._jmxConfig = null, this._resolveInitialDataReceived = null, this._uxSettingsReadyPromise = new Promise((e => {
                        this._resolveInitialDataReceived = e
                    })), this._bootstrapUXSettingsPromise = null, this._lastUserExperienceProfile = null, this._observers = new Set, this._potatoModeOverrides = {
                        disabled: !1,
                        defaultToPotato: !1
                    }, c.observe("/lol-settings/v2/ready", this, (e => {
                        e && (c.unobserve("/lol-settings/v2/ready", this), this._bootstrapUXSettings())
                    }))
                }
                _bootstrapUXSettings() {
                    this._bootstrapUXSettingsPromise || (this._bootstrapUXSettingsPromise = Promise.all([c.get("/riotclient/system-info/v1/basic-info"), c.get("/lol-settings/v1/local/lol-user-experience"), c.get("/lol-platform-config/v1/namespaces/LcuUxSettings")]).then((e => {
                        const [t, n, a] = e;
                        this._sysInfo = t, this._uxSettings = n, this._jmxConfig = a, this._currentMachineSpec = this._getCurrentMachineSpec(), this._recommendationBootstrapper = new s.default(this._initUXSettings.bind(this)), this._recommendationBootstrapper.performAudit(t, n ? n.data : {}, this._currentMachineSpec), this._addUxSettingsObservers();
                        const {
                            data: i,
                            schemaVersion: r
                        } = n;
                        this._sendUxTelemetryEvent("user_experience_settings_loaded", {
                            data: i,
                            schemaVersion: r
                        }), this._resolveInitialDataReceived(!0)
                    })), (0, i.default)(this))
                }
                _getCurrentMachineSpec() {
                    let e = r.MACHINE_SPEC_UNRESOLVED;
                    return this._uxSettings && this._uxSettings.data && (e = this._uxSettings.data.lastKnownMachineSpec), this._sysInfo ? (0, r.classifySysInfo)(this._sysInfo) : e
                }
                _sendUxTelemetryEvent(e, t = {}) {
                    const n = Object.assign(t, {
                        plugin: "rcp-fe-lol-settings"
                    });
                    for (const e in n) "string" != typeof n[e] && (n[e] = JSON.stringify(n[e]));
                    c.post(`/telemetry/v1/events/${e}`, n)
                }
                _initUXSettings(e, t) {
                    c.patch("/lol-settings/v1/local/lol-user-experience", {
                        schemaVersion: 3,
                        data: e
                    }), t && this._sendUxTelemetryEvent(t.eventType, t.fields)
                }
                _addUxSettingsObservers() {
                    c.observe("/lol-settings/v1/local/lol-user-experience", this, (e => {
                        e && e.data && (this._uxSettings.data = e.data, this._refreshUxSettings())
                    })), c.observe("/lol-platform-config/v1/namespaces/LcuUxSettings", this, (e => {
                        this._jmxConfig = e, this._refreshUxSettings()
                    }))
                }
                _refreshUxSettings() {
                    if (!this._uxSettings || !this._uxSettings.data) return;
                    this._potatoModeOverrides.disabled = !1, this._jmxConfig && this._jmxConfig.PotatoModeForced ? (this._potatoModeOverrides.disabled = !0, this._uxSettings.data.potatoModeEnabled = !0, this._potatoModeOverrides.defaultToPotato = !0) : this._currentMachineSpec === r.MACHINE_SPEC_LOW && (this._potatoModeOverrides.defaultToPotato = !0);
                    const e = this._getUserExperienceProfile();
                    a.lodash.isEqual(e, this._lastUserExperienceProfile) || (this._fireAllObserversIfInitialDataReceived(e), this._lastUserExperienceProfile = e)
                }
                _getUserExperienceProfile() {
                    const e = {},
                        t = this._uxSettings.data.potatoModeEnabled ? r.PROFILES.low : r.PROFILES.high,
                        n = this._getClientLoadSetting();
                    return Object.assign(e, t), Object.assign(e, n), e
                }
                _getClientLoadSetting() {
                    return this._uxSettings.data.unloadLeagueClientUx === l.SETTINGS.ALWAYS ? r.PROFILES.unload : this._uxSettings.data.unloadLeagueClientUx === l.SETTINGS.AUTO ? r.PROFILES.auto : r.PROFILES.load
                }
                _fireObserverIfInitialDataReceived(e, t) {
                    if (!this._uxSettings || !this._uxSettings.data) return !1;
                    t = t || this._getUserExperienceProfile();
                    try {
                        e(t)
                    } catch (e) {
                        a.logger.error("Error while firing observer:", e)
                    }
                }
                _fireAllObserversIfInitialDataReceived(e) {
                    if (!this._uxSettings || !this._uxSettings.data) return !1;
                    this._observers.forEach((t => {
                        this._fireObserverIfInitialDataReceived(t, e)
                    }))
                }
            };
            t.default = d
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = n(69),
                i = n(30);
            var r = class {
                constructor(e) {
                    this._initialUXSettingsApplier = e
                }
                performAudit(e, t, n) {
                    const a = this._auditSpecification(e, t, n),
                        s = this._handlePotatoModeRecommendedSettings.apply(this, a),
                        i = this._handleUnloadUxSettings.apply(this, a);
                    (s || i) && this._notifyChangesAutomaticallyApplied()
                }
                _auditSpecification(e, t, n) {
                    t = t || {};
                    const i = n !== s.MACHINE_SPEC_UNRESOLVED && n <= s.MACHINE_SPEC_MID,
                        r = t.lastKnownMachineSpec || s.MACHINE_SPEC_UNRESOLVED;
                    n !== r && this._saveNewLastKnownMachineSpec(e, n, r);
                    const l = {
                        spec: (0, s.getMachineSpecString)(n),
                        isLowSpecModeOn: (!!t.potatoModeEnabled).toString()
                    };
                    return a.Telemetry.addAdditionalMetricsInfoCallback((() => l)), [t, i, n]
                }
                _saveNewLastKnownMachineSpec(e, t, n) {
                    this._initialUXSettingsApplier({
                        lastKnownMachineSpec: t || s.MACHINE_SPEC_UNRESOLVED
                    }, {
                        eventType: "machine-spec-updated",
                        fields: {
                            systemInfo: e,
                            lastKnownMachineSpec: (0, s.getMachineSpecString)(n),
                            currentMachineSpec: (0, s.getMachineSpecString)(t)
                        }
                    })
                }
                _handlePotatoModeRecommendedSettings(e, t, n) {
                    if (!e) return a.logger.error("_handlePotatoModeRecommendedSettings currentSettings is not defined"), !1;
                    a.logger.info("Get machine spec", n);
                    const i = e.lastKnownMachineSpec !== n,
                        {
                            bypass: r
                        } = e,
                        l = e.hasBeenPromptedForPotatoMode && !i,
                        o = n === s.MACHINE_SPEC_UNRESOLVED,
                        c = n === s.MACHINE_SPEC_HIGH && !i,
                        d = e.potatoModeEnabled;
                    return !(r || l || o || c || d) && (n === s.MACHINE_SPEC_LOW ? (this._autoEnableLowSpecMode(e, t), !0) : (this._promptToToggleLowSpecMode(e, t), !1))
                }
                _handleUnloadUxSettings(e, t, n) {
                    if (!e) return a.logger.error("_handleUnloadUxSettings currentSettings is not defined"), !1;
                    const r = e.lastKnownMachineSpec !== n,
                        l = e.hasBeenPromptedForUxUnloadMode && !r,
                        o = n === s.MACHINE_SPEC_LOW,
                        c = !e.bypass,
                        d = e.unloadLeagueClientUx === i.SETTINGS.NEVER;
                    return !(l || !o || !c || !d) && (this._autoEnableUnloadUxMode(e), !0)
                }
                _autoEnableLowSpecMode(e, t) {
                    this._initialUXSettingsApplier({
                        potatoModeEnabled: t,
                        hasBeenPromptedForPotatoMode: !0
                    }, {
                        eventType: "auto-enabled-low-spec-mode",
                        fields: {
                            previousSettings: e,
                            recommendedSettings: {
                                potatoModeEnabled: t
                            }
                        }
                    })
                }
                _autoEnableUnloadUxMode(e) {
                    this._initialUXSettingsApplier({
                        unloadLeagueClientUx: i.SETTINGS.ALWAYS,
                        hasBeenPromptedForUxUnloadMode: !0
                    }, {
                        eventType: "auto-enabled-unload-ux-mode",
                        fields: {
                            previousSettings: e
                        }
                    })
                }
                _promptToToggleLowSpecMode(e, t) {
                    return this._notifyNewRecommendedSettings(e, t).then((n => {
                        !0 === n ? this._initialUXSettingsApplier({
                            potatoModeEnabled: t,
                            hasBeenPromptedForPotatoMode: !0
                        }, {
                            eventType: "accepted-recommended-settings",
                            fields: {
                                previousSettings: e,
                                recommendedSettings: {
                                    potatoModeEnabled: t
                                }
                            }
                        }) : !1 === n ? this._initialUXSettingsApplier({
                            hasBeenPromptedForPotatoMode: !0
                        }, {
                            eventType: "declined-recommended-settings",
                            fields: {
                                previousSettings: e,
                                recommendedSettings: {
                                    potatoModeEnabled: t
                                }
                            }
                        }) : this._initialUXSettingsApplier({
                            hasBeenPromptedForPotatoMode: !0
                        }, null)
                    }))
                }
                _notifyChangesAutomaticallyApplied() {
                    const e = a.templateHelper.contentBlockDialog(a.tra.get("ux_settings_force_low_settings_title"), a.tra.get("ux_settings_force_low_settings_message"), "dialog-medium", "rcp-fe-lol-user-experience-settings-auto-enabled-alert");
                    a.ModalManager.add({
                        type: "DialogAlert",
                        data: {
                            dismissable: !0,
                            contents: e,
                            okText: a.tra.get("ux_settings_force_low_settings_accept")
                        }
                    })
                }
                _notifyNewRecommendedSettings(e, t) {
                    const n = e.lastKnownMachineSpec || s.MACHINE_SPEC_UNRESOLVED,
                        i = e.potatoModeEnabled,
                        r = !i && t ? "low" : "high";
                    if (i === t || n === s.MACHINE_SPEC_UNRESOLVED && !t) return Promise.resolve(null);
                    if ("high" === r) return Promise.resolve(null);
                    return a.ModalManager.add({
                        type: "DialogConfirm",
                        data: {
                            contents: this._generateNotificationDialogContents(r),
                            acceptText: a.tra.get(`ux_settings_recommended_${r}_settings_accept`),
                            declineText: a.tra.get(`ux_settings_recommended_${r}_settings_decline`),
                            closeButton: !1
                        }
                    }).acceptPromise.then((() => !0)).catch((() => !1))
                }
                _generateNotificationDialogContents(e) {
                    const t = document.createElement("lol-uikit-content-block");
                    if (t.setAttribute("type", "dialog-small"), a.tra.exists(`ux_settings_recommended_${e}_settings_title`)) {
                        const n = document.createElement("h5");
                        n.textContent = a.tra.get(`ux_settings_recommended_${e}_settings_title`), t.appendChild(n);
                        const s = document.createElement("hr");
                        s.setAttribute("class", "heading-spacer"), t.appendChild(s)
                    }
                    const n = document.createElement("p");
                    return n.textContent = a.tra.get(`ux_settings_recommended_${e}_settings_message`), t.appendChild(n), t
                }
            };
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.PROFILES = t.MACHINE_SPEC_UNRESOLVED = t.MACHINE_SPEC_MID = t.MACHINE_SPEC_LOW = t.MACHINE_SPEC_HIGH = void 0, t.classifySysInfo = function(e) {
                return function(e) {
                    const t = e.operatingSystem || {};
                    return "Windows" === t.platform && c.test(t.versionMajor) || e.physicalMemory && e.physicalMemory < 4194304 || e.physicalProcessorCores && e.physicalProcessorCores < 2 || e.processorSpeed && e.processorSpeed < 2048
                }(e) ? r : function(e) {
                    return e.physicalMemory && e.physicalMemory <= 8388608 && e.physicalProcessorCores && e.physicalProcessorCores <= 3 && e.processorSpeed && e.processorSpeed <= 3584
                }(e) ? l : o
            }, t.getMachineSpecString = function(e) {
                switch (e) {
                    case r:
                        return "low";
                    case l:
                        return "mid";
                    case o:
                        return "high";
                    default:
                        return "unresolved"
                }
            };
            var a = n(30);
            const s = {
                low: {
                    largeAreaAnimationsEnabled: !1,
                    parallelVideoStreamingEnabled: !1
                },
                high: {
                    largeAreaAnimationsEnabled: !0,
                    parallelVideoStreamingEnabled: !0
                },
                unload: {
                    unloadLeagueClientUx: a.SETTINGS.ALWAYS
                },
                auto: {
                    unloadLeagueClientUx: a.SETTINGS.AUTO
                },
                load: {
                    unloadLeagueClientUx: a.SETTINGS.NEVER
                }
            };
            t.PROFILES = s;
            const i = 0;
            t.MACHINE_SPEC_UNRESOLVED = i;
            const r = 1;
            t.MACHINE_SPEC_LOW = r;
            const l = 3;
            t.MACHINE_SPEC_MID = l;
            const o = 5;
            t.MACHINE_SPEC_HIGH = o;
            const c = /^(2000|XP|Vista|Server 2003|Server 2003 R2|Storage Server 2003|Home Server|<Unknown Version [1-5]\.[^>]+>)$/
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = (0, a.getSwitch)();
            var i = function(e) {
                class t extends s {
                    constructor() {
                        super(), this.setMatchNumber(1), this.defaultVisibility = "removed"
                    }
                    connectedCallback() {
                        super.connectedCallback.apply(this, arguments), this.settingsObserver = e => {
                            this._profile = e, this.updateCase()
                        }, e.addObserver(this.settingsObserver), this.addWatchedDOMNode(this)
                    }
                    disconnectedCallback() {
                        super.disconnectedCallback.apply(this, arguments), e.removeObserver(this.settingsObserver), this.removeWatchedDOMNode(this)
                    }
                    matches() {
                        return !0
                    }
                    isVisible(e) {
                        if (!this._profile) return !1;
                        let t = e.getAttribute("perf-flags");
                        if (!t) return !0;
                        t = t.split(","), t = t.map((function(e) {
                            return e.trim()
                        }));
                        return t.every((e => !0 === this._profile[e]))
                    }
                }
                t.tagName = "user-experience-perf-switch";
                try {
                    a.webComponents.registerCustomElementV1(t)
                } catch (e) {
                    a.logger.warning("Failed to register user-experience-perf-switch", e)
                }
                return t
            };
            t.default = i
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                currentHovercards: [],
                addHovercard(e) {
                    this.currentHovercards.push(e), window.dispatchEvent(new CustomEvent("lol-hovercard-interop-add", {
                        detail: {
                            packet: e
                        }
                    }))
                },
                removeHovercard(e) {
                    this.currentHovercards = this.currentHovercards.filter((t => t !== e)), window.dispatchEvent(new CustomEvent("lol-hovercard-interop-remove", {
                        detail: {
                            packet: e
                        }
                    }))
                }
            };
            t.default = n
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = a.dataBinding.bindTo(a.socket);
            var i = new class {
                constructor() {
                    this._loginSession = null, this._gameSettingsReady = !1, this._gameSettingsReset = !1, this._shownResetNotification = !1, s.observe("/lol-login/v1/session", this, (e => {
                        e && e.connected && (this._loginSession = e, s.unobserve("/lol-login/v1/session", this), this._addMiscObservers())
                    }))
                }
                _addMiscObservers() {
                    s.observe("/lol-summoner/v1/current-summoner", this, (e => {
                        !e || e.unnamed || e.nameChangeFlag || (this._namedSummoner = e, s.unobserve("/lol-summoner/v1/current-summoner", this), this._handleInGameSettingsResetAlert())
                    })), s.observe("/lol-game-settings/v1/ready", this, (e => {
                        e && (this._gameSettingsReady = !0, s.unobserve("/lol-game-settings/v1/ready", this), this._handleInGameSettingsResetAlert())
                    })), s.observe("/lol-game-settings/v1/didreset", this, (e => {
                        e && (this._gameSettingsReset = !0, this._handleInGameSettingsResetAlert())
                    }))
                }
                _handleInGameSettingsResetAlert() {
                    if (this._shownResetNotification) return;
                    if (!this._gameSettingsReset || !this._gameSettingsReady) return;
                    if (!this._namedSummoner) return;
                    this._shownResetNotification = !0;
                    a.ModalManager.add({
                        type: "DialogAlert",
                        data: {
                            contents: a.tra.get("LOL_INGAME_SETTINGS_RESET_ALERT_CONTENT"),
                            okText: a.tra.get("LOL_INGAME_SETTINGS_RESET_ALERT_OK_BUTTON"),
                            dismissible: !1
                        }
                    })
                }
            };
            t.default = i
        }, (e, t) => {
            "use strict";

            function n(e) {
                if (!Number.isInteger(e) || e <= 0) throw new TypeError("expected skinId to be a positive number");
                return e % 1e3 == 0
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getInventoryItemPurchaseDates = function(e) {
                const t = [];
                return e.forEach((e => {
                    e && e.ownership && e.ownership.owned && t.push(e.ownership.rental.purchaseDate)
                })), t
            }, t.getLastPurchaseDate = function(e) {
                if (e.length > 0) return e.sort(((e, t) => t - e)), e[0];
                return 0
            }, t.getSkinAndChromaPurchaseDates = function(e) {
                const t = {
                    skinPurchaseDates: [],
                    chromaPurchaseDates: []
                };
                return e.forEach((e => {
                    e.id && e.skins.length && e.skins.forEach((e => {
                        n(e.id) || t.skinPurchaseDates.push(e.ownership.rental.purchaseDate), e.chromas.length && e.chromas.forEach((e => {
                            e.ownership && e.ownership.owned && t.chromaPurchaseDates.push(e.ownership.rental.purchaseDate)
                        }))
                    }))
                })), t
            }, t.isBaseSkin = n
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(75)) && a.__esModule ? a : {
                    default: a
                };
            var r = new class {
                constructor() {
                    this._isGeneralReplaysEnabled = !1, this._isPostgameReplaysEnabled = !1
                }
                initReplays(e) {
                    const t = (0, s.dataBinding)("/lol-replays", s.socket),
                        n = s.dataBinding.bindTo(s.socket);
                    this._registerReplayButtonFactory(e, t, n), this._registerReplayButtonFactoryForEndOfGame(e, t, n), t.addObserver("/v1/configuration", (e => {
                        this._isGeneralReplaysEnabled = e.isReplaysEnabled && e.isReplaysForMatchHistoryEnabled, this._isPostgameReplaysEnabled = e.isReplaysEnabled && e.isReplaysForEndOfGameEnabled
                    }));
                    const a = this._createReplayButton.bind(this);
                    return this._publicApi = {
                        isGeneralReplaysEnabled: () => this._isGeneralReplaysEnabled,
                        isPostgameReplaysEnabled: () => this._isPostgameReplaysEnabled,
                        createReplayButton: e => a(i.default.COMPONENT_TYPE_MATCH_HISTORY, e),
                        createReplayButtonForEndOfGame: e => a(i.default.COMPONENT_TYPE_END_OF_GAME, e)
                    }, this._publicApi
                }
                _registerReplayButtonFactory(e, t, n) {
                    const a = i.default.createMatchHistoryReplayButton(e, t, n);
                    s.ComponentFactory.setFactory(i.default.COMPONENT_TYPE_MATCH_HISTORY, (e => (e.graceful = !1, a.build(e))))
                }
                _registerReplayButtonFactoryForEndOfGame(e, t, n) {
                    const a = i.default.createEndOfGameReplayButton(e, t, n);
                    s.ComponentFactory.setFactory(i.default.COMPONENT_TYPE_END_OF_GAME, (e => (e.tooltips = {
                        checking: s.tra.get("replays_button_eog_tooltip_checking"),
                        download: s.tra.get("replays_button_eog_tooltip_download")
                    }, e.graceful = !0, a.build(e))))
                }
                _createReplayButton(e, t) {
                    if (e === i.default.COMPONENT_TYPE_MATCH_HISTORY && !this._isGeneralReplaysEnabled) return null;
                    if (e === i.default.COMPONENT_TYPE_END_OF_GAME && !this._isPostgameReplaysEnabled) return null;
                    const n = s.ComponentFactory.create(e, {
                            gameId: t.gameId,
                            gameVersion: t.gameVersion,
                            gameType: t.gameType,
                            queueId: t.queueId,
                            gameCreation: t.gameCreation,
                            gameDuration: t.gameDuration
                        }),
                        a = s.ComponentFactory.getDOMNode(n);
                    return a && void 0 !== a ? {
                        component: n,
                        domNode: a,
                        destroy: () => n.destroy()
                    } : null
                }
            };
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = n(30);
            const i = "available",
                r = "patching",
                l = "in tournament",
                o = "playing replay",
                c = "playing game";
            n(76);
            class d {
                static get COMPONENT_TYPE_MATCH_HISTORY() {
                    return d._CLASS_NAME + "_match-history"
                }
                static get COMPONENT_TYPE_END_OF_GAME() {
                    return d._CLASS_NAME + "_end-of-game"
                }
                static createMatchHistoryReplayButton(e, t, n) {
                    return new d(e, t, n, d.COMPONENT_TYPE_MATCH_HISTORY)
                }
                static createEndOfGameReplayButton(e, t, n) {
                    return new d(e, t, n, d.COMPONENT_TYPE_END_OF_GAME)
                }
                constructor(e, t, n, a) {
                    const s = e.getElementById("lol-replays-template-replay-button");
                    this._template = s, this._componentType = a, this._replaysDataBinding = t, this._lcuDataBinding = n
                }
                static get _CLASS_NAME() {
                    return "replay-button"
                }
                static get _BUTTON_STATE_CHECKING() {
                    return "checking"
                }
                static get _BUTTON_STATE_INCOMPATIBLE() {
                    return "incompatible"
                }
                static get _BUTTON_STATE_MISSING_OR_EXPIRED() {
                    return "missingOrExpired"
                }
                static get _BUTTON_STATE_WATCH() {
                    return "watch"
                }
                static get _BUTTON_STATE_DOWNLOAD() {
                    return "download"
                }
                static get _BUTTON_STATE_DOWNLOADING() {
                    return "downloading"
                }
                static get _BUTTON_STATE_RETRY_DOWNLOAD() {
                    return "retryDownload"
                }
                static get _BUTTON_STATE_LOST() {
                    return "lost"
                }
                static get _BUTTON_STATE_ERROR() {
                    return "error"
                }
                static get _BUTTON_STATE_FOUND() {
                    return "found"
                }
                static get _BUTTON_STATE_UNSUPPORTED() {
                    return "unsupported"
                }
                static get _DEFAULT_TOOLTIPS() {
                    return Object.freeze({
                        checking: a.tra.get("replays_button_default_tooltip_checking"),
                        unavailable: a.tra.get("replays_button_default_tooltip_unavailable"),
                        watch: a.tra.get("replays_button_default_tooltip_watch"),
                        download: a.tra.get("replays_button_default_tooltip_download"),
                        downloading: a.tra.get("replays_button_default_tooltip_downloading"),
                        retryDownload: a.tra.get("replays_button_default_tooltip_retry_download"),
                        lost: a.tra.get("replays_button_default_tooltip_lost"),
                        found: a.tra.get("replays_button_default_tooltip_found"),
                        incompatible: a.tra.get("replays_button_default_tooltip_incompatible"),
                        missingOrExpired: a.tra.get("replays_button_default_tooltip_missing_or_expired"),
                        error: a.tra.get("replays_button_default_tooltip_error"),
                        unsupported: a.tra.get("replays_button_default_tooltip_unsupported"),
                        watchDisabledPatching: a.tra.get("replays_button_tooltip_watch_disabled_patching"),
                        watchDisabledInTournament: a.tra.get("replays_button_tooltip_watch_disabled_in_tournament"),
                        watchDisabledPlayingGame: a.tra.get("replays_button_tooltip_watch_disabled_playing_game"),
                        watchDisabledPlayingReplay: a.tra.get("replays_button_tooltip_watch_disabled_playing_replay"),
                        downloadDisabledPatching: a.tra.get("replays_button_tooltip_download_disabled_patching")
                    })
                }
                static _logError(e, t) {
                    a.logger.error("ReplayButton logError", {
                        gameId: e.gameId,
                        state: e._state,
                        message: t
                    })
                }
                static _logAction(e, t) {
                    a.logger.warning("ReplayButton logAction", {
                        gameId: e.gameId,
                        state: e._state,
                        message: t
                    })
                }
                static _logStateChange(e, t) {
                    e._state !== e._previousState && a.logger.trace("ReplayButton logStateChange", {
                        gameId: e.gameId,
                        state: e._state,
                        message: t
                    })
                }
                static _clearStateClasses(e) {
                    e.removeClass("checking incompatible watch watch-disabled download downloading retry-download lost found missing-or-expired error download-disabled unsupported")
                }
                static _unbindClick(e) {
                    e.unbind("click"), e.click((function(e) {
                        e.stopPropagation()
                    }))
                }
                static _setTooltip(e, t) {
                    if (null === t) a.UIKit.getTooltipManager().unassign(e.domNode);
                    else {
                        const n = {};
                        e._componentType === d.COMPONENT_TYPE_END_OF_GAME ? n.targetAnchor = {
                            x: "center",
                            y: "bottom"
                        } : n.targetAnchor = {
                            x: "right",
                            y: "center"
                        }, a.UIKit.getTooltipManager().assign(e.domNode, `<lol-uikit-tooltip type="informational"><lol-uikit-content-block type="tooltip-small"><p>${t}</p></lol-uikit-content-block></lol-uikit-tooltip>`, null, n)
                    }
                }
                static _updateButtonToRetryDownload(e, t) {
                    d._clearStateClasses(e), t._availability === r ? (d._setTooltip(t, a.lodash.get(t, "_tooltips.downloadDisabledPatching", null)), e.addClass("download-disabled"), e.prop("disabled", !0), d._logStateChange(t, "clickDisabled")) : (d._setTooltip(t, a.lodash.get(t, "_tooltips.retryDownload", null)), e.addClass("retry-download"), e.prop("disabled", !1), e.click((n => {
                        n.stopPropagation(), d._unbindClick(e), e.prop("disabled", !0), d._downloadRofl(t)
                    })), d._logStateChange(t, "clickEnabled=DownloadRofl"))
                }
                static _updateButtonToLost(e, t) {
                    d._clearStateClasses(e), e.addClass("lost"), e.prop("disabled", !0), d._setTooltip(t, a.lodash.get(t, "_tooltips.lost", null)), d._unbindClick(e), d._logStateChange(t, "clickDisabled")
                }
                static _updateReplayButtonToDownloading(e, t) {
                    d._clearStateClasses(e), e.addClass("downloading"), t._previousState !== d._BUTTON_STATE_DOWNLOADING && d._setTooltip(t, a.lodash.get(t, "_tooltips.downloading", null)), e.prop("disabled", !0), d._logStateChange(t, "clickDisabled")
                }
                static _updateButtonToDownload(e, t) {
                    if (d._clearStateClasses(e), t._availability === r) return d._setTooltip(t, a.lodash.get(t, "_tooltips.downloadDisabledPatching", null)), e.addClass("download-disabled"), e.prop("disabled", !0), void d._logStateChange(t, "clickDisabled");
                    if (e.addClass("download"), e.prop("disabled", !1), d._setTooltip(t, a.lodash.get(t, "_tooltips.download", null)), e.click((n => {
                            n.stopPropagation(), d._unbindClick(e), e.prop("disabled", !0), d._downloadRofl(t)
                        })), d._logStateChange(t, "clickEnabled=DownloadRofl"), t._componentType === this.COMPONENT_TYPE_END_OF_GAME) {
                        const e = d._getSettingsDontShowEogUsageTip(t),
                            n = d._getSettingUnloadLeagueClientUx(t);
                        a.Bluebird.join(e, n, ((e, n) => {
                            if (!e && n !== s.SETTINGS.NEVER) return a.Bluebird.delay(100).then((() => {
                                if (document.contains(t.domNode)) return d._setTooltip(t, null), d._displayEogFirstTimeTip(t).then((() => (t._state === d._BUTTON_STATE_DOWNLOAD && d._setTooltip(t, a.lodash.get(t, "_tooltips.download", null)), d._updateSettingsDontShowEogUsageTip(t, !0))))
                            }))
                        })).catch((e => {
                            d._logError(t, `Error occurred while displaying usage tip: ${JSON.stringify(e)}`)
                        }))
                    }
                }
                static _updateButtonToWatch(e, t) {
                    if (d._clearStateClasses(e), t._availability === i) e.addClass("watch"), e.prop("disabled", !1), d._setTooltip(t, a.lodash.get(t, "_tooltips.watch", null)), e.click((e => {
                        e.stopPropagation(), d._watchRofl(t)
                    })), d._logStateChange(t, "clickEnabled=Watch");
                    else switch (e.addClass("watch-disabled"), e.prop("disabled", !0), t._availability) {
                        case r:
                            d._setTooltip(t, a.lodash.get(t, "_tooltips.watchDisabledPatching", null));
                            break;
                        case l:
                            d._setTooltip(t, a.lodash.get(t, "_tooltips.watchDisabledInTournament", null));
                            break;
                        case c:
                            d._setTooltip(t, a.lodash.get(t, "_tooltips.watchDisabledPlayingGame", null));
                            break;
                        case o:
                            d._setTooltip(t, a.lodash.get(t, "_tooltips.watchDisabledPlayingReplay", null));
                            break;
                        default:
                            d._setTooltip(t, null), a.logger.warning("ReplayButton unhandled availability state found while updating button to watch state", t._availability)
                    }
                }
                static _updateButtonToIncompatible(e, t) {
                    d._clearStateClasses(e), e.addClass("incompatible"), e.prop("disabled", !0), d._setTooltip(t, a.lodash.get(t, "_tooltips.incompatible", null)), d._unbindClick(e), d._logStateChange(t, "clickDisabled")
                }
                static _updateButtonToUnsupported(e, t) {
                    d._clearStateClasses(e), e.addClass("unsupported"), e.prop("disabled", !0), d._setTooltip(t, a.lodash.get(t, "_tooltips.unsupported", null)), d._unbindClick(e), d._logStateChange(t, "clickDisabled")
                }
                static _updateButtonToChecking(e, t) {
                    d._clearStateClasses(e), e.addClass("checking"), e.prop("disabled", !0), d._setTooltip(t, a.lodash.get(t, "_tooltips.checking", null)), d._unbindClick(e), d._logStateChange(t, "clickDisabled")
                }
                static _updateButtonToFound(e, t) {
                    d._clearStateClasses(e), e.addClass("found"), e.prop("disabled", !0), d._setTooltip(t, a.lodash.get(t, "_tooltips.found", null)), d._unbindClick(e), d._logStateChange(t, "clickDisabled")
                }
                static _updateButtonToMissingOrExpired(e, t) {
                    d._clearStateClasses(e), e.addClass("missing-or-expired"), e.prop("disabled", !0), d._setTooltip(t, a.lodash.get(t, "_tooltips.missingOrExpired", null)), d._unbindClick(e), d._logStateChange(t, "clickDisabled")
                }
                static _updateButtonToError(e, t) {
                    d._clearStateClasses(e), e.addClass("error"), e.prop("disabled", !0), d._setTooltip(t, a.lodash.get(t, "_tooltips.error", null)), d._unbindClick(e), d._logStateChange(t, "clickDisabled")
                }
                static _updateButton(e, t) {
                    if (!t) return;
                    e._previousState = e._state, e._state = t.state, e._gameMetaData = t;
                    const n = e._button;
                    d._unbindClick(n), t.state === d._BUTTON_STATE_DOWNLOAD ? d._updateButtonToDownload(n, e) : t.state === d._BUTTON_STATE_CHECKING ? d._updateButtonToChecking(n, e) : t.state === d._BUTTON_STATE_FOUND ? d._updateButtonToFound(n, e) : t.state === d._BUTTON_STATE_DOWNLOADING ? d._updateReplayButtonToDownloading(n, e) : t.state === d._BUTTON_STATE_WATCH ? d._updateButtonToWatch(n, e) : t.state === d._BUTTON_STATE_INCOMPATIBLE ? d._updateButtonToIncompatible(n, e) : t.state === d._BUTTON_STATE_MISSING_OR_EXPIRED ? d._updateButtonToMissingOrExpired(n, e) : t.state === d._BUTTON_STATE_RETRY_DOWNLOAD ? d._updateButtonToRetryDownload(n, e) : t.state === d._BUTTON_STATE_LOST ? d._updateButtonToLost(n, e) : t.state === d._BUTTON_STATE_ERROR ? d._updateButtonToError(n, e) : t.state === d._BUTTON_STATE_UNSUPPORTED ? d._updateButtonToUnsupported(n, e) : d._logError(e, "the assigned state is invalid!")
                }
                static _updateConfiguration(e, t) {
                    if (!t) return;
                    let n = !1;
                    if (t.isReplaysEnabled) {
                        const a = e._componentType;
                        (!t.isReplaysForEndOfGameEnabled && d.COMPONENT_TYPE_END_OF_GAME === a || !t.isReplaysForMatchHistoryEnabled && d.COMPONENT_TYPE_MATCH_HISTORY === a) && (n = !0, d._removeFromDOM(e))
                    } else n = !0, d._removeFromDOM(e);
                    e._watchDisabled = t.isPatching || t.isInTournament || t.isPlayingGame || t.isPlayingReplay, t.isPatching ? e._availability = r : t.isPlayingGame ? e._availability = c : t.isPlayingReplay ? e._availability = o : t.isInTournament ? e._availability = l : e._availability = i, n || d._updateButton(e, e._gameMetaData)
                }
                static _removeFromDOM(e) {
                    e.domNode && document.contains(e.domNode) && e.domNode.parentElement && e.domNode.parentElement.removeChild(e.domNode), e.destroy()
                }
                build(e) {
                    if (a.lodash.isNil(e.queueId) || a.lodash.isNil(e.gameType) || a.lodash.isNil(e.gameId)) throw new Error("queueId, gameType, and gameId are required fields in data argument for replays button factory");
                    const t = document.createElement("div");
                    t.classList.add(d._CLASS_NAME), t.insertAdjacentHTML("beforeend", this._template.innerHTML);
                    const n = {
                            gameId: e.gameId,
                            domNode: t,
                            destroy: function() {
                                this._dataBinding.removeObserver(`/v1/metadata/${this.gameId}`, this._metadataObserver), this._dataBinding.removeObserver("/v1/configuration", this._configObserver), null !== this._openNotification && (a.UIKit.getContextualNotificationManager().remove(this._openNotification), this._openNotification = null)
                            },
                            _isGraceful: a.lodash.get(e, "graceful", !1),
                            _gameMetaData: null,
                            _button: (0, a.jquery)(t).children("button:first"),
                            _dataBinding: this._replaysDataBinding,
                            _lcuDataBinding: this._lcuDataBinding,
                            _componentType: this._componentType,
                            _tooltips: null !== e.tooltips ? Object.freeze(a.lodash.assign({}, d._DEFAULT_TOOLTIPS, e.tooltips)) : null,
                            _state: d._BUTTON_STATE_CHECKING,
                            _openNotification: null,
                            _availability: i,
                            _metadataObserver: e => {
                                d._updateButton(n, e)
                            }
                        },
                        s = `/v2/metadata/${e.gameId}/create`,
                        r = {
                            gameVersion: a.lodash.get(e, "gameVersion", "unknown_version"),
                            gameType: e.gameType,
                            queueId: e.queueId
                        },
                        l = a.lodash.get(e, "gameCreation", 0),
                        o = a.lodash.get(e, "gameDuration", 0);
                    l > 0 && o > 0 && (r.gameEnd = l + o);
                    const c = `/v1/metadata/${e.gameId}`;
                    return this._replaysDataBinding.post(s, r).then((() => {
                        n._dataBinding.addObserver(c, n._metadataObserver)
                    })).catch((e => {
                        d._logError(n, "an error occurred during button metadata handling: " + e)
                    })), n._configObserver = e => d._updateConfiguration(n, e), this._replaysDataBinding.get("/v1/configuration").then(n._configObserver), this._replaysDataBinding.addObserver("/v1/configuration", n._configObserver), n
                }
                static _downloadRofl(e) {
                    d._logAction(e, `invokeDownload, graceful=${e._isGraceful}`);
                    const t = e._isGraceful ? `/v1/rofls/${e.gameId}/download/graceful` : `/v1/rofls/${e.gameId}/download`,
                        n = {
                            componentType: e._componentType
                        };
                    e._dataBinding.post(t, n)
                }
                static _watchRofl(e) {
                    d._logAction(e, "invokeWatch");
                    const t = {
                        componentType: e._componentType
                    };
                    e._dataBinding.post(`/v1/rofls/${e.gameId}/watch`, t)
                }
                static _displayEogFirstTimeTip(e) {
                    if (null !== e._openNotification) return;
                    const t = a.UIKit.getContextualNotificationManager(),
                        n = document.createElement("div");
                    return n.className = "lol-replays-first-time-tip", n.innerHTML = `<lol-uikit-content-block><p>${a.tra.get("replays_button_eog_first_time_tip")}</p></lol-uikit-content-block>`, e._openNotification = t.add(n, {
                        target: {
                            domNode: e.domNode,
                            anchor: {
                                x: "center",
                                y: "bottom"
                            }
                        },
                        orientation: "bottom",
                        anchor: {
                            x: "center",
                            y: "top"
                        },
                        offset: {
                            x: 0,
                            y: 15
                        }
                    }), e._openNotification.onRemove.then((t => (e._openNotification = null, t)))
                }
                static _updateSettingsDontShowEogUsageTip(e, t) {
                    return e._lcuDataBinding.patch("/lol-settings/v1/local/lol-replays", {
                        data: {
                            dontShowEogUsageTip: t
                        },
                        schemaVersion: 1
                    })
                }
                static _getSettingsDontShowEogUsageTip(e) {
                    return e._lcuDataBinding.get("/lol-settings/v1/local/lol-replays").then((e => a.lodash.get(e, "data.dontShowEogUsageTip", !1)))
                }
                static _getSettingUnloadLeagueClientUx(e) {
                    return e._lcuDataBinding.get("/lol-settings/v1/local/lol-user-experience").then((e => a.lodash.get(e, "data.unloadLeagueClientUx", s.SETTINGS.AUTO)))
                }
            }
            var u = d;
            t.default = u
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            var s = new class {
                constructor() {
                    this._enabled = !0, this._iconPickerInstance = null, this._platformConfigListeners = new Set, this._platformConfigBinding = (0, a.dataBinding)("/lol-platform-config", a.socket), this._platformNamespace = "/v1/namespaces/LcuSummonerIconPicker", this._platformConfigBinding.observe(this._platformNamespace, this._updatePlatformConfig.bind(this)), this._registerIconPickerComponent()
                }
                _updatePlatformConfig(e) {
                    if (e) {
                        const t = Object.assign({}, e);
                        t.Enabled = a.lodash.isNil(e.Enabled) || e.Enabled, this._enabled = t.Enabled;
                        for (const e of this._platformConfigListeners) e(t)
                    }
                }
                _registerIconPickerComponent() {
                    const e = n(78).extend({
                        managerApi: this
                    });
                    a.EmberApplicationFactory.setFactoryDefinition({
                        name: "SummonerIconUpdate",
                        tra: a.traService,
                        SummonerIconUpdateComponent: e,
                        ComponentFactory: a.ComponentFactory
                    })
                }
                _createIconPickerComponent() {
                    return this._componentState = a.Ember.Object.create({
                        visible: !1
                    }), this._iconPickerInstance = a.ComponentFactory.create({
                        type: "SummonerIconUpdate",
                        classNames: ["lol-summoner-icon-picker"],
                        data: this._componentState
                    }), this._iconPickerInstance
                }
                show() {
                    this._enabled && (a.logger.trace("Open summoner icon picker"), this._iconPickerInstance ? (this._componentState.set("visible", !0), a.LayerManager.addLayer(this._iconPickerInstance.domNode)) : this._createIconPickerComponent().renderPromise.then((() => {
                        this._componentState.set("visible", !0), a.LayerManager.addLayer(this._iconPickerInstance.domNode)
                    })))
                }
                hide() {
                    a.logger.trace("Close summoner icon picker"), this._componentState.set("visible", !1), a.LayerManager.removeLayer(this._iconPickerInstance.domNode)
                }
                enabled() {
                    return this._enabled
                }
                addConfigObserver(e) {
                    "function" == typeof e && (this._platformConfigListeners.add(e), e({
                        Enabled: this._enabled
                    }))
                }
                removeConfigObserver(e) {
                    this._platformConfigListeners.delete(e)
                }
            };
            t.default = s
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(79);
            const s = (0, a.emberDataBinding)({
                    Ember: a.Ember,
                    websocket: a.socket,
                    basePaths: {
                        summoner: "/lol-summoner",
                        inventory: "/lol-inventory",
                        gameData: "/lol-game-data",
                        regalia: "/lol-regalia",
                        platformConfig: "/lol-platform-config"
                    },
                    boundProperties: {
                        session: "/lol-login/v1/session",
                        summoner: "/lol-summoner/v1/current-summoner",
                        profileIcons: "/lol-game-data/assets/v1/summoner-icons.json",
                        ownedIcons: {
                            api: "inventory",
                            path: "/v2/inventory/SUMMONER_ICON"
                        },
                        regaliaConfig: "/lol-regalia/v2/config"
                    }
                }),
                i = a.Ember.Component.extend(s, {
                    classNames: ["update-icon-component"],
                    layout: n(80),
                    selectedIconId: null,
                    savedBannerType: null,
                    selectedBannerType: !0,
                    savedCrestType: null,
                    selectedCrestType: null,
                    currentSummonerRegalia: null,
                    rankedBorderHovered: !1,
                    prestigeBorderHovered: !1,
                    isSaving: !1,
                    errorSaving: !1,
                    regaliaSelectionsDisabled: a.Ember.computed.not("regaliaConfig.selectionsEnabled"),
                    bannerCheckboxDisabled: a.Ember.computed.or("regaliaSelectionsDisabled", "isSaving"),
                    rankedBorderSelected: a.Ember.computed.equal("selectedCrestType", "ranked"),
                    prestigeBorderSelected: a.Ember.computed.not("rankedBorderSelected"),
                    rankedSelectedOrHovered: a.Ember.computed.or("rankedBorderSelected", "rankedBorderHovered"),
                    prestigeSelectedOrHovered: a.Ember.computed.or("prestigeBorderSelected", "prestigeBorderHovered"),
                    isRanked: a.Ember.computed("currentSummonerRegalia", (function() {
                        const e = this.get("currentSummonerRegalia");
                        if (!e) return !1;
                        const {
                            highestRankedEntry: t
                        } = e;
                        if (!t) return !1;
                        const {
                            tier: n
                        } = t, {
                            division: a
                        } = t;
                        return !(!n || !a || "NONE" === n)
                    })),
                    determineSubtitleText: function(e, t) {
                        return e ? this.get("tra.summoner_icon_change_state_border_selected") : t ? this.get("tra.summoner_icon_change_action_border_select") : ""
                    },
                    rankedSubtitleText: a.Ember.computed("rankedBorderSelected", "rankedBorderHovered", (function() {
                        const e = this.get("rankedBorderSelected"),
                            t = this.get("rankedBorderHovered");
                        return this.determineSubtitleText(e, t)
                    })),
                    prestigeSubtitleText: a.Ember.computed("prestigeBorderSelected", "prestigeBorderHovered", (function() {
                        const e = this.get("prestigeBorderSelected"),
                            t = this.get("prestigeBorderHovered");
                        return this.determineSubtitleText(e, t)
                    })),
                    profileIconsMap: a.Ember.computed("profileIcons", (function() {
                        return a.lodash.keyBy(this.get("profileIcons"), "id")
                    })),
                    determineProfileIconUrl: function(e, t, n) {
                        return e && null !== t && n && !a.lodash.isEmpty(n) && n[t] ? n[t].imagePath : ""
                    },
                    rankedProfileIconUrl: a.Ember.computed("rankedBorderSelected", "selectedIconId", "profileIconsMap", (function() {
                        const e = this.get("rankedBorderSelected"),
                            t = this.get("selectedIconId"),
                            n = this.get("profileIconsMap");
                        return this.determineProfileIconUrl(e, t, n)
                    })),
                    prestigeProfileIconUrl: a.Ember.computed("prestigeBorderSelected", "selectedIconId", "profileIconsMap", (function() {
                        const e = this.get("prestigeBorderSelected"),
                            t = this.get("selectedIconId"),
                            n = this.get("profileIconsMap");
                        return this.determineProfileIconUrl(e, t, n)
                    })),
                    convertBannerTypeFromStringToBool: function(e) {
                        return "blank" !== e
                    },
                    convertBannerTypeFromBoolToString: function(e) {
                        return e ? "lastSeasonHighestRank" : "blank"
                    },
                    saveDisabled: a.Ember.computed("isSaving", "selectedIconId", "summoner.profileIconId", "selectedBannerType", "savedBannerType", "selectedCrestType", "savedCrestType", (function() {
                        const e = this.get("isSaving"),
                            t = this.get("selectedIconId"),
                            n = this.get("summoner.profileIconId"),
                            a = this.get("selectedBannerType"),
                            s = this.get("savedBannerType"),
                            i = this.get("selectedCrestType"),
                            r = this.get("savedCrestType");
                        return e || (t === n || null === t) && (a === s || null === s) && (i === r || null === r)
                    })),
                    saveButtonText: a.Ember.computed("isSaving", "tra.summoner_icon_change_state_saving", "tra.summoner_icon_change_action_save", (function() {
                        return this.get("isSaving") ? this.get("tra.summoner_icon_change_state_saving") : this.get("tra.summoner_icon_change_action_save")
                    })),
                    resetSelectedIcon: a.Ember.on("init", a.Ember.observer("visible", "summoner.profileIconId", (function() {
                        a.Ember.run.once(this, "shouldResetIconSelections")
                    }))),
                    shouldResetIconSelections() {
                        this.get("visible") && this.get("selectedIconId") || this.set("selectedIconId", this.get("summoner.profileIconId"))
                    },
                    regaliaObserver: a.Ember.on("init", a.Ember.observer("visible", (function() {
                        a.Ember.run.once(this, "updateRegalia")
                    }))),
                    updateRegalia() {
                        this.get("visible") ? this.get("api.regalia").get("/v2/current-summoner/regalia", {
                            skipCache: !0
                        }).then((e => {
                            if (!this.isDestroyed) {
                                this.set("currentSummonerRegalia", e);
                                const t = this.convertBannerTypeFromStringToBool(e.preferredBannerType);
                                this.set("savedBannerType", t), this.set("selectedBannerType", t), this.set("savedCrestType", e.preferredCrestType), this.set("selectedCrestType", e.preferredCrestType)
                            }
                        })) : this.set("errorSaving", !1)
                    },
                    ownedIconsWithBaseSet: a.Ember.computed("ownedIcons.[]", (function() {
                        const e = this.get("ownedIcons");
                        if (!e) return void a.logger.trace("Owned icons not loaded yet");
                        if (void 0 === e.find((e => e.itemId >= 0 && e.itemId <= 28)))
                            for (let t = 0; t <= 28; t++) e.push({
                                itemId: t
                            });
                        return e
                    })),
                    icons: a.Ember.computed("ownedIconsWithBaseSet.[]", "selectedIconId", "profileIconsMap", "summoner.profileIconId", "visible", (function() {
                        const e = this.get("ownedIconsWithBaseSet");
                        let t = this.get("selectedIconId");
                        const n = this.get("profileIconsMap");
                        if (!e || a.lodash.isEmpty(n)) return a.logger.trace("Owned icons or GDS profileIconsMap not loaded yet"), a.Ember.A();
                        null === t && (t = this.get("summoner.profileIconId"));
                        let s = e.map((e => {
                            let s;
                            const i = e.itemId;
                            return n[i] ? s = n[i].imagePath : (a.logger.error(`Can't find image path for icon ${i}`), s = null), {
                                id: i,
                                isSelected: i === t,
                                iconPath: s
                            }
                        }));
                        return s.sort(((e, t) => t.id - e.id)), this.get("visible") || (s = s.slice(0, 32)), a.Ember.A(s)
                    })),
                    actions: {
                        selectIcon(e) {
                            a.logger.trace(`Selected icon with id ${e}`), this.set("selectedIconId", e), a.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-summoner-icons-select.ogg")
                        },
                        onIconHover() {
                            a.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-summoner-icons-grid-hover.ogg")
                        },
                        selectBorder(e) {
                            a.logger.trace(`Selected border ${e}`), this.set("selectedCrestType", e), a.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-summoner-icons-select.ogg")
                        },
                        onBorderHover(e) {
                            a.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-summoner-icons-grid-hover.ogg"), "ranked" === e ? this.set("rankedBorderHovered", !0) : this.set("prestigeBorderHovered", !0)
                        },
                        onBorderHoverLeave(e) {
                            "ranked" === e ? this.set("rankedBorderHovered", !1) : this.set("prestigeBorderHovered", !1)
                        },
                        saveIcon() {
                            const e = [],
                                t = this.get("summoner.profileIconId"),
                                n = this.get("selectedIconId");
                            t !== n && (a.logger.trace(`Saving icon with id ${n}`), e.push(this.get("api.summoner").put("/v1/current-summoner/icon", {
                                profileIconId: n
                            }).then((() => !0)).catch((e => (a.logger.error(`Failed to save icon with id ${n}.`, e), !1)))));
                            const s = this.get("savedBannerType"),
                                i = this.get("selectedBannerType"),
                                r = this.get("savedCrestType"),
                                l = this.get("selectedCrestType");
                            if (s !== i || r !== l) {
                                const t = {
                                    preferredBannerType: this.convertBannerTypeFromBoolToString(i),
                                    preferredCrestType: l
                                };
                                a.logger.trace(`Saving regalia preferences of ${JSON.stringify(t)}`), e.push(this.get("api.regalia").put("/v2/current-summoner/regalia", t).then((() => (this.set("savedBannerType", i), this.set("savedCrestType", l), !0))).catch((e => (a.logger.error(`Failed to save regalia preferences of ${JSON.stringify(t)}.`, e), !1))))
                            }
                            e.length > 0 && (this.set("isSaving", !0), this.set("errorSaving", !1)), Promise.all(e).then((e => {
                                this.set("isSaving", !1);
                                for (const t of e)
                                    if (!t) return void this.set("errorSaving", !0);
                                a.logger.trace("Successfully saved"), this.managerApi.hide()
                            })).catch((e => a.logger.error("Failed to save.", e)))
                        },
                        closeWindow() {
                            a.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-uikit-button-circlegold-click.ogg"), this.managerApi.hide(), this.set("selectedBannerType", this.get("savedBannerType")), this.set("selectedCrestType", this.get("savedCrestType"))
                        }
                    }
                });
            e.exports = i
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "mCScaBVx",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\summoner-icon-picker\\\\addon\\\\templates\\\\components\\\\summoner-icon-update.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\summoner-icon-picker\\\\addon\\\\components\\\\summoner-icon-update.js\\" "],["text","\\n"],["open-element","lol-uikit-full-page-backdrop",[]],["flush-element"],["text","\\n  "],["open-element","lol-uikit-dialog-frame",[]],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","update-icon-component-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","update-icon-close-btn"],["modifier",["action"],[["get",[null]],"closeWindow"]],["flush-element"],["close-element"],["text","\\n\\n      "],["open-element","div",[]],["static-attr","class","update-icon-title"],["flush-element"],["text","\\n        "],["append",["unknown",["tra","summoner_icon_change_title_border"]],false],["text","\\n      "],["close-element"],["text","\\n\\n      "],["open-element","div",[]],["static-attr","class","border-and-icon-container"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","border-list-container"],["flush-element"],["text","\\n\\n          "],["open-element","div",[]],["static-attr","class","border-option"],["modifier",["action"],[["get",[null]],"selectBorder","prestige"]],["modifier",["action"],[["get",[null]],"onBorderHover","prestige"],[["on"],["mouseEnter"]]],["modifier",["action"],[["get",[null]],"onBorderHoverLeave","prestige"],[["on"],["mouseLeave"]]],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","border-option-title"],["flush-element"],["text","\\n              "],["append",["unknown",["tra","summoner_icon_change_border_prestige"]],false],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","border-option-subtitle"],["flush-element"],["text","\\n              "],["append",["unknown",["prestigeSubtitleText"]],false],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","lol-regalia-crest-element",[]],["dynamic-attr","class",["concat",["border-option-crest ",["helper",["if"],[["get",["prestigeSelectedOrHovered"]],"border-full-opacity"],null]]]],["static-attr","animations","false"],["dynamic-attr","crest-by-level",["unknown",["currentSummonerRegalia","summonerLevel"]],null],["dynamic-attr","profile-icon-url",["unknown",["prestigeProfileIconUrl"]],null],["static-attr","crest-sizing","small"],["dynamic-attr","summoner-level",["unknown",["currentSummonerRegalia","summonerLevel"]],null],["static-attr","crest-type","prestige"],["flush-element"],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n\\n          "],["open-element","div",[]],["static-attr","class","border-option crest-ranked"],["modifier",["action"],[["get",[null]],"selectBorder","ranked"]],["modifier",["action"],[["get",[null]],"onBorderHover","ranked"],[["on"],["mouseEnter"]]],["modifier",["action"],[["get",[null]],"onBorderHoverLeave","ranked"],[["on"],["mouseLeave"]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["isRanked"]]],null,6,5],["text","          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n\\n        "],["open-element","div",[]],["static-attr","class","update-icon-list"],["flush-element"],["text","\\n          "],["open-element","lol-uikit-scrollable",[]],["static-attr","overflow-masks","enabled"],["flush-element"],["text","\\n"],["block",["each"],[["get",["icons"]]],null,4],["text","          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["isSaving"]]],null,3],["text","\\n      "],["open-element","div",[]],["static-attr","class","bottom-row-container"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","empty-bottom-row-spacer"],["flush-element"],["close-element"],["text","\\n        "],["open-element","lol-uikit-flat-button-group",[]],["static-attr","type","dialog-frame"],["static-attr","class","update-icon-save-btn"],["flush-element"],["text","\\n"],["block",["if"],[["get",["saveDisabled"]]],null,2,1],["text","        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","empty-bottom-row-spacer"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["errorSaving"]]],null,0],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","update-icon-saving-error-container"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","update-icon-saving-error"],["flush-element"],["text","\\n            "],["append",["unknown",["tra","summoner_icon_change_save_error"]],false],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","inner-save-btn"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"saveIcon"],null],null],["flush-element"],["text","\\n              "],["append",["unknown",["saveButtonText"]],false],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","inner-save-btn"],["static-attr","disabled",""],["flush-element"],["text","\\n              "],["append",["unknown",["saveButtonText"]],false],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","lol-uikit-full-page-backdrop",[]],["flush-element"],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","update-icon-saving-spinner"],["flush-element"],["text","\\n          "],["append",["unknown",["uikit-spinner"]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["open-element","div",[]],["dynamic-attr","class",["concat",["update-icon-list-item  ",["helper",["if"],[["get",["icon","isSelected"]],"selected"],null]]]],["dynamic-attr","data-icon-id",["concat",[["unknown",["icon","id"]]]]],["flush-element"],["text","\\n                "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["icon","iconPath"]]]]],["modifier",["action"],[["get",[null]],"onIconHover"],[["on"],["mouseEnter"]]],["modifier",["action"],[["get",[null]],"selectIcon",["get",["icon","id"]]]],["flush-element"],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":["icon"]},{"statements":[["text","              "],["open-element","div",[]],["static-attr","class","border-option-title border-unavailable"],["flush-element"],["text","\\n                "],["append",["unknown",["tra","summoner_icon_change_border_ranked"]],false],["text","\\n              "],["close-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","border-option-unranked-label"],["flush-element"],["text","\\n                "],["append",["unknown",["tra","summoner_icon_change_state_border_unlock"]],false],["text","\\n              "],["close-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","border-option-subtitle border-unavailable"],["flush-element"],["text","\\n                "],["append",["unknown",["rankedSubtitleText"]],false],["text","\\n              "],["close-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","border-option-ranked-crest-placeholder"],["flush-element"],["close-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","border-option-lock"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["open-element","div",[]],["static-attr","class","border-option-title"],["flush-element"],["text","\\n                "],["append",["unknown",["tra","summoner_icon_change_border_ranked"]],false],["text","\\n              "],["close-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","border-option-subtitle"],["flush-element"],["text","\\n                "],["append",["unknown",["rankedSubtitleText"]],false],["text","\\n              "],["close-element"],["text","\\n              "],["open-element","lol-regalia-crest-v2-element",[]],["dynamic-attr","class",["concat",["border-option-crest crest-ranked ",["helper",["if"],[["get",["rankedSelectedOrHovered"]],"border-full-opacity"],null]]]],["static-attr","animations","false"],["dynamic-attr","profile-icon-url",["unknown",["rankedProfileIconUrl"]],null],["static-attr","crest-sizing","small"],["dynamic-attr","ranked-tier",["unknown",["currentSummonerRegalia","highestRankedEntry","tier"]],null],["dynamic-attr","ranked-division",["unknown",["currentSummonerRegalia","highestRankedEntry","division"]],null],["dynamic-attr","ranked-split-reward",["unknown",["currentSummonerRegalia","highestRankedEntry","splitRewardLevel"]],null],["static-attr","crest-type","ranked"],["flush-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(82)) && a.__esModule ? a : {
                    default: a
                };
            const r = s.dataBinding.bindTo(s.socket),
                l = ["Matchmaking", "ReadyCheck", "ChampSelect", "GameStart", "InProgress", "FailedToLaunch", "Reconnect", "WaitingForStats", "PreEndOfGame", "EndOfGame"];
            var o = new class {
                constructor() {
                    this._registerAliasChangeSuccessModalComponent(), this._addObservers(), this.riotId = "", this.riotTag = "", this.currentPhase = "", this.enableModal = !1
                }
                _addObservers() {
                    r.observe("/lol-client-config/v3/client-config/lol.client_settings.store.show_alias_success_modal", this, (e => {
                        this.enableModal = e
                    })), r.observe("/lol-store/v1/alias-change-notifications", this, (e => {
                        if (!e || !Array.isArray(e) || 0 === e.length) return;
                        const t = e[e.length - 1],
                            n = t?.details?.new_value;
                        if (!n || "string" != typeof n || !n.includes("#")) throw new Error("Latest Alias Change does not provide a new alias value.");
                        const [a, s] = n.split("#");
                        this.riotId = a, this.riotTag = s, !l.includes(this.currentPhase) && this.enableModal && this.showReportModal()
                    })), r.observe("/lol-gameflow/v1/session", this, (e => {
                        this.currentPhase = e.phase
                    }))
                }
                _registerAliasChangeSuccessModalComponent() {
                    const e = {
                        tra: s.traService,
                        AliasChangeSuccessModalComponent: i.default,
                        ComponentFactory: s.ComponentFactory
                    };
                    s.EmberApplicationFactory.setFactoryDefinition("AliasChangeSuccessModal", e)
                }
                showReportModal() {
                    this._identityCustomizerInstance = s.ComponentFactory.create({
                        type: "AliasChangeSuccessModal",
                        data: {
                            riotId: this.riotId,
                            riotTag: this.riotTag,
                            title: s.traService.get("alias_change_success_modal_header"),
                            info: s.traService.get("alias_change_success_modal_info")
                        }
                    });
                    const {
                        domNode: e
                    } = this._identityCustomizerInstance;
                    return s.ModalManager.add({
                        type: "DialogAlert",
                        data: {
                            contents: e,
                            enterEnabled: !1,
                            okText: s.traService.get("alias_change_success_modal_button")
                        }
                    })
                }
            };
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(83)) && a.__esModule ? a : {
                    default: a
                };
            n(84);
            var r = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["alias-change-success-modal"],
                destroyApplication: function() {
                    this.componentFactoryApp.destroy()
                }
            });
            t.default = r
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "Y94lwSs3",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\alias-change-confirmation\\\\addon\\\\templates\\\\alias-change-success-modal.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\alias-change-confirmation\\\\addon\\\\styles\\\\alias-change-success-modal.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","acs-modal"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","acs-modal-info-container"],["flush-element"],["text","\\n    "],["open-element","h3",[]],["static-attr","class","acs-modal-info-header"],["flush-element"],["append",["unknown",["title"]],false],["close-element"],["text","\\n    "],["open-element","p",[]],["static-attr","class","acs-info"],["flush-element"],["append",["unknown",["info"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","acs-riot-id-container"],["flush-element"],["text","\\n    "],["open-element","p",[]],["static-attr","class","acs-riot-id"],["flush-element"],["append",["unknown",["riotId"]],false],["open-element","span",[]],["static-attr","class","acs-riot-tag"],["flush-element"],["text","#"],["append",["unknown",["riotTag"]],false],["close-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function(e) {
                n(91)();
                const t = new s.default(e),
                    a = {
                        setRegaliaRegistration: e => t.setRegaliaRegistration(e),
                        showRegaliaCrestElement: e => t.showRegaliaCrestElement(e),
                        registerProfilesApi: e => t.registerProfilesApi(e)
                    };
                return {
                    privateRegaliaApi: t,
                    publicRegaliaApi: a
                }
            };
            var a, s = (a = n(86)) && a.__esModule ? a : {
                default: a
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = o(n(87)),
                i = o(n(88)),
                r = o(n(89)),
                l = o(n(90));

            function o(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            t.default = class {
                constructor(e) {
                    s.default.set(e), this._postgameObserver = new i.default, this._showProfileCrestPickerAlert = !1, this._sessionData = new r.default, this._profileIcons = new l.default
                }
                getSessionData() {
                    return this._sessionData
                }
                getProfileIcons() {
                    return this._profileIcons
                }
                setRegaliaRegistration() {}
                showRegaliaCrestElement(e) {
                    const t = s.default.get().createElement("lol-regalia-hovercard-element");
                    t.setAttribute("summoner-id", e);
                    a.UIKit.getContextualNotificationManager().add(t).onRemove.then((() => {}))
                }
                registerProfilesApi(e) {
                    this._profilesApi = e
                }
                setShowProfileCrestPickerAlert(e) {
                    this._showProfileCrestPickerAlert = Boolean(e), this._profilesApi ? this._profilesApi.setShowAlert(e) : a.logger.warning("ProfilesAPI was unset, not adding pip to profiles navigation")
                }
                getShowProfileCrestPickerAlert() {
                    return this._showProfileCrestPickerAlert
                }
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = new class {
                constructor() {
                    this.subDoc = document
                }
                set(e) {
                    this.subDoc = e
                }
                get() {
                    return this.subDoc
                }
            };
            t.default = n
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = "/lol-gameflow/v1/session",
                i = "/lol-summoner/v1/current-summoner",
                r = e => `/lol-ranked/v1/ranked-stats/${e}`;
            t.default = class {
                constructor() {
                    this._requirements = {
                        onEndOfGameScreen: !1,
                        wasProvisional: !1,
                        noLongerProvisional: !1
                    }, this._binding = a.dataBinding.bindTo(a.socket), this._binding.addObserver(s, this, this._updateGameflow), this._binding.addObserver(i, this, this._updateSummoner)
                }
                _clearBindings() {
                    this._binding.removeObserver(s, this), this._binding.removeObserver(i, this), this._puuid && (this._binding.removeObserver(r(this._puuid), this), delete this._puuid)
                }
                _updateGameflow(e) {
                    const t = e && "EndOfGame" === e.phase;
                    this._updateRequirements({
                        onEndOfGameScreen: t
                    })
                }
                _updateSummoner(e) {
                    const t = a.lodash.get(e, "puuid");
                    t && t !== this._puuid && (this._puuid && this._binding.removeObserver(r(this._puuid), this), this._puuid = t, this._binding.addObserver(r(t), this, this._updateRanked))
                }
                _updateRanked(e) {
                    if (!e) return void a.logger.warning("Null ranked rankedStats response");
                    const t = a.lodash.get(e, "highestRankedEntry");
                    t && (t.isProvisional ? this._updateRequirements({
                        wasProvisional: !0
                    }) : "NONE" !== t.tier && this._updateRequirements({
                        noLongerProvisional: !0
                    }))
                }
                _updateRequirements(e) {
                    for (const t of Object.keys(e)) a.logger.trace(`regalia-postgame-observer -- requirement [${t}] is now`, e[t]);
                    this._requirements = a.lodash.assign(this._requirements, e), a.logger.trace("regalia-postgame-observer -- requirements:", this._requirements), this._requirements.onEndOfGameScreen && this._requirements.wasProvisional && this._requirements.noLongerProvisional && (this._clearBindings(), this._showToast())
                }
                _showToast() {
                    this._shownThisSession ? a.logger.trace("regalia-postgame-observer -- _showToast has already run once this session, ignoring.") : (this._shownThisSession = !0, a.logger.trace("regalia-postgame-observer -- all requirements met, showing notification..."), this._binding.post("/player-notifications/v1/notifications", {
                        source: "regalia",
                        type: "ranked-armor-unlocked",
                        titleKey: "regalia_ranked_armor_unlocked_title",
                        detailKey: "regalia_ranked_armor_unlocked_message",
                        iconUrl: "/fe/lol-static-assets/images/rank-notification.svg"
                    }), a.SharedComponentsApi_Private.Regalia.setShowProfileCrestPickerAlert(!0))
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            t.default = class {
                constructor() {
                    let e = null;
                    this.sessionPromise = new Promise((t => {
                        e = t
                    })), this._loginBinding = (0, a.dataBinding)("/lol-login", a.socket), this._loginBinding.addObserver("/v1/session", (t => {
                        t && t.summonerId && e(t)
                    }))
                }
                getSessionPromise() {
                    return this.sessionPromise.then((e => e))
                }
                isMePromise(e) {
                    return this.sessionPromise.then((t => String(t.summonerId) === String(e)))
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            t.default = class {
                constructor() {
                    let e = null;
                    this.iconsPromise = new Promise((t => {
                        e = t
                    })), this._gameDataBinding = (0, a.dataBinding)("/lol-game-data", a.socket), this._gameDataBinding.get("assets/v1/profile-icons.json").then((t => {
                        e(t)
                    }))
                }
                _lookupProfileIconPath(e, t) {
                    if (!Number.isInteger(e) || !t) return "";
                    const n = e => t.find((t => t.id === e)),
                        a = n(e) || n(0);
                    return a ? a.iconPath : ""
                }
                getIconUrlPromise(e) {
                    return this.iconsPromise.then((t => this._lookupProfileIconPath(e, t)))
                }
            }
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = v(n(92)),
                i = v(n(105)),
                r = v(n(108)),
                l = v(n(111)),
                o = v(n(117)),
                c = v(n(121)),
                d = v(n(125)),
                u = v(n(130)),
                m = v(n(133)),
                p = v(n(147)),
                h = v(n(154)),
                g = v(n(159)),
                f = v(n(164)),
                _ = v(n(169)),
                A = v(n(172)),
                b = v(n(175));

            function v(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = function() {
                a.webComponents.registerCustomElementV1(s.default), a.webComponents.registerCustomElementV1(r.default), a.webComponents.registerCustomElementV1(l.default), a.webComponents.registerCustomElementV1(o.default), a.webComponents.registerCustomElementV1(c.default), a.webComponents.registerCustomElementV1(d.default), a.webComponents.registerCustomElementV1(u.default), a.webComponents.registerCustomElementV1(m.default), a.webComponents.registerCustomElementV1(p.default), a.webComponents.registerCustomElementV1(i.default), a.webComponents.registerCustomElementV1(h.default), a.webComponents.registerCustomElementV1(g.default), a.webComponents.registerCustomElementV1(f.default), a.webComponents.registerCustomElementV1(_.default), a.webComponents.registerCustomElementV1(b.default), a.webComponents.registerCustomElementV1(A.default)
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = n(93),
                i = o(n(94)),
                r = n(95),
                l = o(n(96));

            function o(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const c = "/fe/lol-static-assets/images/empty-icon.png";
            class d extends a.webComponents.ShadowElement {
                templateMarkup() {
                    return n(100)
                }
                stylesheetMarkup() {
                    return n(101)
                }
                constructor() {
                    super(), this._lowSpecMode = !1, this._voiceIndicatorListener = this._handleVoiceIndicatorUpdate.bind(this), a.SharedComponentsApi.getApi_UXSettings().addObserver((e => {
                        this._lowSpecMode = !e.largeAreaAnimationsEnabled
                    }))
                }
                static get observedAttributes() {
                    return ["crest-sizing", "crest-type", "hide-crest-border", "profile-icon", "profile-icon-url", "summoner-level", "voice-puuid", "animations", "ranked-tier", "ranked-division", "ranked-split-reward", "visor-down", "queue", "crest-by-level"]
                }
                attributeChangedCallback(e, t, n) {
                    switch (super.attributeChangedCallback(e, t, n), e) {
                        case "crest-sizing":
                            this._updateCrestSizing(n);
                            break;
                        case "crest-type":
                            this._updateCrestType(n);
                            break;
                        case "hide-crest-border":
                            this._updateHideCrestBorder(n);
                            break;
                        case "profile-icon":
                            this._updateProfileIcon(n);
                            break;
                        case "profile-icon-url":
                            this._updateProfileIconUrl(n);
                            break;
                        case "summoner-level":
                            this._updateSummonerLevel(n);
                            break;
                        case "crest-by-level":
                            this._updateCrestByLevel(n);
                            break;
                        case "voice-puuid":
                            this._updateVoicePuuid(n, t);
                            break;
                        case "animations":
                        case "ranked-tier":
                        case "ranked-division":
                        case "ranked-split-reward":
                        case "visor-down":
                            this._renderRankedAnimation()
                    }
                }
                _isAnimated() {
                    return (!this.hasAttribute("animations") || (0, s.attributeValueIsTruthy)(this.getAttribute("animations"))) && !this._lowSpecMode
                }
                _updateCrestSizing(e) {
                    (0, s.attributeValueNotSet)(e) ? this._getLevelRingElement().removeAttribute("crest-sizing"): this._getLevelRingElement().setAttribute("crest-sizing", e)
                }
                _updateHideCrestBorder(e) {
                    this._hideCrestBorder = (0, s.attributeValueIsTruthy)(e), this._updateCrestType(this.getAttribute("crest-type"))
                }
                _updateVoicePuuid(e, t) {
                    (0, s.attributeValueIsSet)(t) && i.default.removeIndicatorListener(t, this._voiceIndicatorListener), (0, s.attributeValueNotSet)(e) ? this._getVoiceHaloElement().removeAttribute("puuid") : (this._getVoiceHaloElement().setAttribute("puuid", e), i.default.addIndicatorListener(e, this._voiceIndicatorListener))
                }
                _handleVoiceIndicatorUpdate(e, t) {
                    const n = this.getAttribute("voice-puuid");
                    t && t.puuid !== n ? a.logger.warning(`Received voice indicator update for different player ${t.puuid} -- expected ${n}`) : this._rankedCrestBorder && this._rankedCrestBorder.setVoiceIndicator(e && t.isSpeaking)
                }
                _updateProfileIcon(e) {
                    if ((0, s.attributeValueNotSet)(e)) return void(this._getSummonerIcon().style.backgroundImage = this._url(c));
                    const t = parseInt(e);
                    t >= 0 ? a.SharedComponentsApi_Private.Regalia.getProfileIcons().getIconUrlPromise(t).then((e => {
                        this._getSummonerIcon().style.backgroundImage = this._url(e)
                    })) : this._getSummonerIcon().style.backgroundImage = this._url(c)
                }
                _updateProfileIconUrl(e) {
                    (0, s.attributeValueNotSet)(e) ? this._getSummonerIcon().style.backgroundImage = this._url(c): this._getSummonerIcon().style.backgroundImage = this._url(e)
                }
                _updateCrestType(e) {
                    (0, s.attributeValueNotSet)(e) || (this._hideCrestBorder && (e = "none"), this._getCrestRootElement().setAttribute("data-type", e), this._renderRankedAnimation())
                }
                _updateCrestByLevel(e) {
                    (0, s.attributeValueNotSet)(e) || this._getLevelRingElement().setAttribute("crest-by-level", e)
                }
                _updateSummonerLevel(e) {
                    (0, s.attributeValueNotSet)(e) || (e === r.REGALIA_FALLBACK_SUMMONER_LEVEL ? this._getLevelRingElement().setAttribute("level", "") : this._getLevelRingElement().setAttribute("level", e))
                }
                _renderRankedAnimation() {
                    const e = this.getAttribute("crest-type"),
                        t = this.getAttribute("ranked-tier"),
                        n = this.getAttribute("ranked-division"),
                        a = this.getAttribute("queue"),
                        i = this.hasAttribute("ranked-split-reward") ? this.getAttribute("ranked-split-reward") : "0";
                    e === r.CREST_TYPES.RANKED ? (0, s.attributeValueNotSet)(t) || (0, s.attributeValueNotSet)(n) || (this._rankedCrestBorder || (this._rankedCrestBorder = new l.default(this._getRankedBorderContainerElement(), t, n, i, a), this._didInitialBuildIn = !1, this._visorDown = !1), this._rankedCrestBorder.setRankedData(t, n, i), this._playAnimation()) : this._rankedCrestBorder && (this._rankedCrestBorder.destroy(), delete this._rankedCrestBorder)
                }
                _playAnimation() {
                    const e = this.hasAttribute("visor-down") && (0, s.attributeValueIsTruthy)(this.getAttribute("visor-down")),
                        t = this._isAnimated();
                    this._didInitialBuildIn ? e && !this._visorDown ? (this._rankedCrestBorder.play(r.RANKED_CREST_BORDER_MARKERS.visorDown, t, 200), this._visorDown = !0) : !e && this._visorDown && (this._rankedCrestBorder.play(r.RANKED_CREST_BORDER_MARKERS.visorUp, t), this._visorDown = !1) : (this._rankedCrestBorder.play(e ? r.RANKED_CREST_BORDER_MARKERS.visorDown : r.RANKED_CREST_BORDER_MARKERS.buildIn, t), this._didInitialBuildIn = !0, this._visorDown = e)
                }
                _getCrestRootElement() {
                    return this.shadowRoot.querySelector(".lol-regalia-crest-root")
                }
                _getSummonerIcon() {
                    return this.shadowRoot.querySelector("div.lol-regalia-summoner-icon")
                }
                _getRankedBorderContainerElement() {
                    return this.shadowRoot.querySelector(".lol-regalia-ranked-border-container")
                }
                _getVoiceHaloElement() {
                    return this.shadowRoot.querySelector("lol-parties-comm-halo")
                }
                _getLevelRingElement() {
                    return this.shadowRoot.querySelector("lol-uikit-themed-level-ring")
                }
                _url(e) {
                    return `url(${e})`
                }
            }
            d.tagName = "lol-regalia-crest-element";
            var u = d;
            t.default = u
        }, e => {
            "use strict";
            e.exports = {
                attributeValueIsSet: function(e) {
                    return Boolean(e) && "null" !== e && "undefined" !== e
                },
                attributeValueNotSet: function(e) {
                    return !e || "null" === e || "undefined" === e
                },
                attributeValueIsTruthy: function(e) {
                    return "" === e || "true" === e
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);

            function s(e) {
                if (e) return a.lodash.reduce(e, ((e, t) => (e[t.puuid] = t, e)), {})
            }
            var i = new class {
                constructor() {
                    this._indicatorListeners = {}, this._voiceBinding = (0, a.dataBinding)("/lol-premade-voice", a.socket)
                }
                addIndicatorListener(e, t) {
                    const n = a.lodash.isEmpty(this._indicatorListeners);
                    this._indicatorListeners[e] || (this._indicatorListeners[e] = []), this._indicatorListeners[e].push(t), n ? this._setupIndicatorObserver() : this._voiceBinding.get("/v1/participants").then(s).then((n => {
                        n && e in n ? t(!0, n[e]) : t(!1)
                    }))
                }
                removeIndicatorListener(e, t) {
                    e in this._indicatorListeners || a.logger.warning(`No listener for puuid ${e}`), a.lodash.pull(this._indicatorListeners[e], t), a.lodash.isEmpty(this._indicatorListeners[e]) && delete this._indicatorListeners[e], a.lodash.isEmpty(this._indicatorListeners) && this._removeIndicatorObserver()
                }
                _handleParticipantsUpdate(e) {
                    e = s(e), a.lodash.forEach(this._indicatorListeners, ((t, n) => {
                        e && n in e ? t.forEach((t => t(!0, e[n]))) : t.forEach((e => e(!1)))
                    }))
                }
                _setupIndicatorObserver() {
                    this._voiceBinding.observe("/v1/participants", this, this._handleParticipantsUpdate)
                }
                _removeIndicatorObserver() {
                    this._voiceBinding.removeObserver("/v1/participants", this)
                }
            };
            t.default = i
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.REGALIA_FALLBACK_SUMMONER_LEVEL = t.RANKED_CREST_BORDER_MARKERS = t.MEMBER_TYPES = t.CREST_TYPES = t.BANNER_TYPES = t.BANNER_ID_PAST_RANK = void 0;
            const n = Object.freeze({
                NONE: "none",
                PRESTIGE: "prestige",
                RANKED: "ranked"
            });
            t.CREST_TYPES = n;
            const a = Object.freeze({
                buildIn: 0,
                visorDown: 1,
                visorUp: 2
            });
            t.RANKED_CREST_BORDER_MARKERS = a;
            const s = Object.freeze({
                BLANK: "blank",
                LAST_SEASON_HIGHEST_RANK: "lastSeasonHighestRank"
            });
            t.BANNER_TYPES = s;
            const i = Object.freeze({
                CURRENT_PLAYER: "current-player",
                OTHER_PLAYER: "other-player"
            });
            t.MEMBER_TYPES = i;
            t.BANNER_ID_PAST_RANK = "2";
            t.REGALIA_FALLBACK_SUMMONER_LEVEL = "-1"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = c(n(97)),
                i = c(n(98)),
                r = function(e, t) {
                    if (!t && e && e.__esModule) return e;
                    if (null === e || "object" != typeof e && "function" != typeof e) return {
                        default: e
                    };
                    var n = o(t);
                    if (n && n.has(e)) return n.get(e);
                    var a = {},
                        s = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var i in e)
                        if ("default" !== i && Object.prototype.hasOwnProperty.call(e, i)) {
                            var r = s ? Object.getOwnPropertyDescriptor(e, i) : null;
                            r && (r.get || r.set) ? Object.defineProperty(a, i, r) : a[i] = e[i]
                        } a.default = e, n && n.set(e, a);
                    return a
                }(n(99)),
                l = n(95);

            function o(e) {
                if ("function" != typeof WeakMap) return null;
                var t = new WeakMap,
                    n = new WeakMap;
                return (o = function(e) {
                    return e ? n : t
                })(e)
            }

            function c(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const d = ["Display Reward 1", "Display Reward 2", "Display Reward 3", "Display Division 1", "Display Division 2", "Display Division 3", "Display Division 4", "Display Division Plate", "Display Voice"],
                u = ["Display Reward 1", "Display Reward 2", "Display Reward 3", "Display Division Plate", "Display Voice"],
                m = [0, 1, 2],
                p = [3, 4, 5, 6],
                h = {
                    I: 3,
                    II: 4,
                    III: 5,
                    IV: 6,
                    V: -1,
                    NA: -1
                };
            var g = class {
                constructor(e, t, n, a, s) {
                    this._containerDiv = e, this._animationDelayTimer = null, this.setRankedData(t, n, a, s)
                }
                setRankedData(e, t, n, a) {
                    n = this._sanitizeSplitReward(n), this._rankedTier === e && this._rankedDivision === t && this._splitReward === n && this._queue === a || (this._rankedTier = e, this._rankedDivision = t, this._splitReward = n, this._queue = a, this._render())
                }
                _sanitizeSplitReward(e) {
                    const t = a.lodash.toNumber(e);
                    return a.lodash.inRange(t, m.length + 1) ? t : 0
                }
                _render() {
                    this.destroy(), this._lottiePromise = i.default.crestLobby(this._rankedTier).then((e => s.default.createLottieAnim(this._containerDiv, e.buildin, {}, {}, {}, {
                        insertBefore: !0,
                        editAnimationDataCallback: t => {
                            this._updateAnimationImagePathsFromGds(t, e), this._updateAnimationLayers(t)
                        }
                    }).catch((e => {
                        throw a.logger.error("Error fetching/creating Lottie animation for crest:", e), e
                    })))), this._sfxBuildinPromise = r.crestBuildinPromise(this._rankedTier, this._splitReward), this._promise = Promise.all([this._lottiePromise, this._sfxBuildinPromise, r.crestVisorClosePromise, r.crestVisorOpenPromise]), this._promise.then((() => {
                        void 0 !== this._lastMarker && this.play(this._lastMarker, !1)
                    })), this._fixCrestBlur()
                }
                _updateAnimationImagePathsFromGds(e, t) {
                    for (const n of e.assets) {
                        if (!n.u || !n.p) continue;
                        if (!(n.p in t)) {
                            a.logger.error(`Could not find an asset of the ranked crest animation in GDS: ${n.p}, ranked crest will attempt to render anyway but it will be missing this asset.`);
                            continue
                        }
                        const e = t[n.p],
                            s = e.lastIndexOf("/");
                        n.u = e.substring(0, s + 1), n.p = e.substring(s + 1)
                    }
                }
                _updateAnimationLayers(e) {
                    const t = e.layers[0];
                    this._validateAnimationControlLayer(t);
                    const n = this._hasDivisions(t),
                        a = (e => e ? 7 : 3)(n),
                        s = (e => e ? 8 : 4)(n);
                    if (m.forEach(((e, n) => {
                            this._toggleLayer(t, e, n < this._splitReward ? 1 : 0)
                        })), n) {
                        if (!(this._rankedDivision in h)) throw new Error(`Unexpected division: ${this._rankedDivision}`);
                        const e = h[this._rankedDivision];
                        p.forEach((n => {
                            this._toggleLayer(t, n, n === e ? 1 : 0)
                        }))
                    }
                    this._toggleLayer(t, a, n ? 1 : 0), this._toggleLayer(t, s, this._voiceIndicator ? 1 : 0)
                }
                _updateRunningAnimationLayers() {
                    this._promise && this._promise.then((([e]) => {
                        this._updateAnimationLayers(e.lottie.animationData), e.lottie.renderer.elements.forEach((e => {
                            e.initBaseData(e.data, e.globalData, e.comp), e.initExpressions()
                        }));
                        const t = e.lottie.renderer.renderedFrame;
                        e.lottie.renderer.renderedFrame = -1, e.lottie.renderer.renderFrame(t)
                    }))
                }
                _toggleLayer(e, t, n) {
                    e.ef[t].ef[0].v.k = n
                }
                _validateAnimationControlLayer(e) {
                    if ("Animation Control Layer" !== e.nm) throw new Error(`Expected control layer title to be "Animation Control Layer", actual is: ${e.nm}`);
                    if (e.ef.length !== d.length && e.ef.length !== u.length) throw new Error(`Unexpected control layer effects length: ${e.ef.length}`);
                    const t = this._hasDivisions(e) ? d : u;
                    for (let n = 0; n < e.ef.length; n++) {
                        if (e.ef[n].nm !== t[n]) throw new Error(`Expected control layer effect ${n} to be "${t[n]}" but found "${e.ef[n].nm}"`);
                        const a = e.ef[n];
                        if (7 !== a.ef[0].ty || 1 !== a.ef.length || !a.ef[0].v) throw new Error(`Expected ${a.nm} to have 1 checkbox control effect`)
                    }
                }
                _fixCrestBlur() {
                    this._promise && this._promise.then((() => {
                        const e = this._getLottieDiv();
                        if (e && e.parentNode && e.parentNode.clientWidth > 0) {
                            const t = e.parentNode.clientWidth,
                                n = e.parentNode.clientHeight;
                            e.style.width = Math.round(t) + "px", e.style.height = Math.round(n) + "px"
                        } else setTimeout((() => this._fixCrestBlur()), 1)
                    }))
                }
                _getLottieDiv() {
                    return this._containerDiv.querySelector(".regalia-lottie-animation")
                }
                _hasDivisions(e) {
                    return e.ef.length === d.length
                }
                play(e, t, n) {
                    this._promise && (null !== this._animationDelayTimer && (clearTimeout(this._animationDelayTimer), this._animationDelayTimer = null), t && n > 0 ? this._animationDelayTimer = setTimeout((() => {
                        this._animationDelayTimer = null, this._executeToMarker(e, t)
                    }), n) : this._executeToMarker(e, t))
                }
                _executeToMarker(e, t) {
                    this._promise.then((([n, a, s, i]) => {
                        this._lastMarker = e;
                        const r = n.animationJson.markers[e].tm;
                        let o;
                        o = e === n.animationJson.markers.length - 1 ? n.animationJson.op - 1 : n.animationJson.markers[e + 1].tm - 1, t ? (n.lottie.playSegments([r, o], !0), a.stop().catch((() => {})), s.stop().catch((() => {})), i.stop().catch((() => {})), e === l.RANKED_CREST_BORDER_MARKERS.buildIn ? a.play() : e === l.RANKED_CREST_BORDER_MARKERS.visorDown ? s.play() : e === l.RANKED_CREST_BORDER_MARKERS.visorUp && i.play()) : (n.lottie.resetSegments(!0), n.lottie.goToAndStop(o, !0))
                    }))
                }
                setVoiceIndicator(e) {
                    this._voiceIndicator = e, this._updateRunningAnimationLayers()
                }
                destroy() {
                    null !== this._animationDelayTimer && (clearTimeout(this._animationDelayTimer), this._animationDelayTimer = null), this._lottiePromise && (this._lottiePromise.then((e => e.cleanup())), delete this._lottiePromise), this._sfxBuildinPromise && (this._sfxBuildinPromise.then((e => e.dispose())), delete this._sfxBuildinPromise), delete this._promise
                }
            };
            t.default = g
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = Object.freeze(["t", "d", "k", 0, "s", "t"]);
            class i {
                static createLottieAnim(e, t, n, s, r = {}, l = {}) {
                    if (!t || !t.length) return a.logger.warning("LottieAnim -- invalid jsonPath"), Promise.reject();
                    if (!e) return a.logger.warning("LottieAnim -- cannot play anim on a null target element"), Promise.reject();
                    const o = t.split("/"),
                        c = o.length > 0 ? o[o.length - 1] : t;
                    a.logger.trace(`LottieAnim -- playing '${c}' (path: ${t}) on {target} with {variables} and {values}`, e, n, s);
                    const d = i.createAnimElement(e, l.insertBefore);
                    d.setAttribute("anim-name", c), d.classList.add("regalia-lottie-animation");
                    return i.loadLottieAnim(t, a.lodash.assign({
                        container: d,
                        renderer: "svg",
                        loop: !1,
                        autoplay: !1
                    }, r), (e => {
                        l.editAnimationDataCallback && l.editAnimationDataCallback(e), e && n && s && i.setLottieVariables(e, n, s)
                    })).then((e => (l.playImmediately && e.animation.play(), {
                        name: c,
                        lottie: e.animation,
                        animationJson: e.animationData,
                        container: d,
                        cleanup: () => {
                            e.animation && e.animation.destroy();
                            const {
                                parentNode: t
                            } = d;
                            t && t.removeChild(d)
                        }
                    }))).catch((e => {
                        a.logger.error("LottieAnim -- *** ERROR *** in promise:", e)
                    }))
                }
                static loadLottieAnim(e, t, n) {
                    return new Promise((s => {
                        a.jquery.getJSON(e, (e => {
                            n && n(e), t = a.lodash.assign(t, {
                                animationData: e
                            });
                            const i = a.Lottie.loadAnimation(t);
                            s({
                                animation: i,
                                animationData: e
                            })
                        }))
                    }))
                }
                static createAnimElement(e, t) {
                    const n = document.createElement("div");
                    return t ? e.insertAdjacentElement("afterbegin", n) : e.appendChild(n), n
                }
                static setLottieVariables(e, t, n) {
                    if (t && n)
                        for (const a of Object.keys(n)) i.setLottieVariable(e, t, a, n[a])
                }
                static setLottieVariable(e, t, n, i) {
                    if (!e) return void a.logger.error("LottieAnim.setLottieVariable -- no animationData");
                    const r = t[n];
                    if (!r) return;
                    let l = e;
                    for (let e = 0; e < r.length - 1; ++e) {
                        const t = r[e];
                        l = l[t], l || a.logger.error(`LottieAnim.setLottieVariable -- no step ${t} at ${e+1} levels deep in anim data for ${n}, fullpath = `, r.join("."))
                    }
                    l[r[r.length - 1]] = i, a.lodash.isEqual(s, r.slice(-s.length)) && (l.finalText = i.split(""))
                }
            }
            t.default = i
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            const s = {
                bannerBackgrounds: "regalia-banner-backgrounds",
                bannerPatterns: "regalia-banner-patterns",
                bannerTrims: "regalia-banner-trims",
                bannerSkinsDefault: "regalia-bannerskins-default",
                bannerSkinsPastRank: "regalia-bannerskins-pastrank",
                bannerSkinsEvent: "regalia-bannerskins-event"
            };
            e.exports = new function() {
                this._gameDataBinding = (0, a.dataBinding)("/lol-game-data", a.socket), this._gameDataPromise = this._gameDataBinding.get("assets/v1/generic-assets.json");
                for (const e in s) this[e] = t => {
                    const n = s[e];
                    return this._gameDataPromise.then((e => {
                        if (n in e) return e[n];
                        throw new Error(`No such key in game-data generic-assets: ${n}`)
                    })).then((e => e[t] ?? e))
                };
                this.crestLobby = function(e) {
                    return e = e.toLowerCase(), this._gameDataPromise.then((t => {
                        const n = t[`regalia-ranked-crest-lobby-${e}`];
                        if (!n) throw new Error(`crestLobby for tier ${e} not found`);
                        return n
                    }))
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.crestBuildinPromise = function(e, t) {
                return e = e.toLowerCase(), i(3 === t ? s + `sfx-regalia-lobby-buildin-${e}-split-3.ogg` : s + `sfx-regalia-lobby-buildin-${e}.ogg`)
            }, t.crestVisorOpenPromise = t.crestVisorClosePromise = void 0;
            var a = n(1);
            const s = "/fe/lol-static-assets/sounds/";

            function i(e) {
                return a.Audio.getChannel("sfx-ui").createSound(e).ready()
            }
            const r = i(s + "sfx-regalia-lobby-visor-close.ogg");
            t.crestVisorClosePromise = r;
            const l = i(s + "sfx-regalia-lobby-visor-open.ogg");
            t.crestVisorOpenPromise = l
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <div class="lol-regalia-crest-root" data-type="">\r\n    <div class="lol-regalia-summoner-icon-mask-container">\r\n      <div class="lol-regalia-summoner-icon" xlink:href="/fe/lol-static-assets/images/empty-icon.png"></div>\r\n    </div>\r\n    <lol-parties-comm-halo size="large" class="lol-regalia-comm-halo">\r\n    </lol-parties-comm-halo>\r\n    <div class="lol-regalia-ranked-border-container"></div>\r\n    <lol-uikit-themed-level-ring class="lol-regalia-themed-level-ring" solid>\r\n    </lol-uikit-themed-level-ring>\r\n    <div class="lol-regalia-none-border-container"></div>\r\n  </div>\r\n</template>\r\n\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7),
                i = n(102),
                r = n(103),
                l = n(104),
                o = s(a),
                c = i(r),
                d = i(l);
            o.push([e.id, ":host {\n  --regalia-crest-summoner-icon-animation: none;\n  --regalia-crest-themed-level-ring-animation: none;\n}\n:host {\n  display: inline-block;\n  width: 160px;\n  height: 160px;\n  pointer-events: none;\n}\n:host .lol-regalia-crest-root {\n  width: 100%;\n  height: 100%;\n}\n:host .lol-regalia-summoner-icon-mask-container {\n  position: absolute;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  -webkit-mask-size: 82% 82%;\n  -webkit-mask-clip: content;\n  -webkit-mask-repeat: no-repeat;\n  -webkit-mask-position: 50% 50%;\n  -webkit-mask-image: url(" + c + ");\n}\n:host .lol-regalia-summoner-icon-mask-container .lol-regalia-summoner-icon {\n  animation: var(--regalia-crest-summoner-icon-animation);\n  margin: auto;\n  width: 76%;\n  height: 76%;\n  background-size: cover;\n}\n:host .lol-regalia-none-border-container {\n  display: none;\n  background-image: url(" + d + ');\n  background-size: contain;\n  position: absolute;\n  top: 2.5%;\n  left: 2.5%;\n  width: 95%;\n  height: 95%;\n}\n:host .lol-regalia-themed-level-ring {\n  animation: var(--regalia-crest-themed-level-ring-animation);\n  display: none;\n}\n:host .lol-regalia-themed-level-ring[crest-sizing="huge"] {\n  --themed-level-ring-level-text-line-height: 18px;\n  --themed-level-ring-level-text-top: 85%;\n}\n:host .lol-regalia-themed-level-ring[crest-sizing="large"] {\n  --themed-level-ring-level-text-line-height: 18px;\n  --themed-level-ring-level-text-top: 85%;\n}\n:host .lol-regalia-themed-level-ring[crest-sizing="medium"] {\n  --themed-level-ring-level-text-font-size: 12px;\n  --themed-level-ring-level-text-line-height: 16px;\n  --themed-level-ring-level-text-top: 84.5%;\n}\n:host .lol-regalia-themed-level-ring[crest-sizing="medium"]:lang(ja-jp) {\n  --themed-level-ring-level-text-font-size: 13px;\n}\n:host .lol-regalia-themed-level-ring[crest-sizing="small"] {\n  --themed-level-ring-level-text-font-size: 10px;\n  --themed-level-ring-level-text-top: 85%;\n}\n:host .lol-regalia-ranked-border-container {\n  display: none;\n  position: absolute;\n  width: 188%;\n  height: 188%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n:host .lol-regalia-ranked-border-container > div {\n  width: 100%;\n  height: 100%;\n}\n:host .lol-regalia-ranked-border-container > div > svg {\n  transform: none !important;\n}\n:host .lol-regalia-comm-halo {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  --premade-voice-halo-margin: auto;\n  --premade-voice-halo-width: calc(76% - 8px);\n  --premade-voice-halo-height: calc(76% - 8px);\n  --premade-voice-halobefore-box-shadow: 0 0 0 4px #36d987;\n}\n:host .lol-regalia-crest-root[data-type="none"] .lol-regalia-none-border-container {\n  display: block;\n}\n:host .lol-regalia-crest-root[data-type="prestige"] .lol-regalia-themed-level-ring {\n  display: block;\n}\n:host .lol-regalia-crest-root[data-type="ranked"] .lol-regalia-ranked-border-container {\n  display: block;\n}\n@-moz-keyframes regalia-crest-animation-fadein {\n  0% {\n    opacity: 0;\n  }\n  30% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@-webkit-keyframes regalia-crest-animation-fadein {\n  0% {\n    opacity: 0;\n  }\n  30% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@-o-keyframes regalia-crest-animation-fadein {\n  0% {\n    opacity: 0;\n  }\n  30% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes regalia-crest-animation-fadein {\n  0% {\n    opacity: 0;\n  }\n  30% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n', "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/regalia/addon/elements/crest-element/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,6CAA6C;EAC7C,iDAAiD;AACnD;AACA;EACE,qBAAqB;EACrB,YAAY;EACZ,aAAa;EACb,oBAAoB;AACtB;AACA;EACE,WAAW;EACX,YAAY;AACd;AACA;EACE,kBAAkB;EAClB,aAAa;EACb,WAAW;EACX,YAAY;EACZ,0BAA0B;EAC1B,0BAA0B;EAC1B,8BAA8B;EAC9B,8BAA8B;EAC9B,2DAAkD;AACpD;AACA;EACE,uDAAuD;EACvD,YAAY;EACZ,UAAU;EACV,WAAW;EACX,sBAAsB;AACxB;AACA;EACE,aAAa;EACb,yDAAkD;EAClD,wBAAwB;EACxB,kBAAkB;EAClB,SAAS;EACT,UAAU;EACV,UAAU;EACV,WAAW;AACb;AACA;EACE,2DAA2D;EAC3D,aAAa;AACf;AACA;EACE,gDAAgD;EAChD,uCAAuC;AACzC;AACA;EACE,gDAAgD;EAChD,uCAAuC;AACzC;AACA;EACE,8CAA8C;EAC9C,gDAAgD;EAChD,yCAAyC;AAC3C;AACA;EACE,8CAA8C;AAChD;AACA;EACE,8CAA8C;EAC9C,uCAAuC;AACzC;AACA;EACE,aAAa;EACb,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,QAAQ;EACR,SAAS;EACT,gCAAgC;AAClC;AACA;EACE,WAAW;EACX,YAAY;AACd;AACA;EACE,0BAA0B;AAC5B;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,iCAAiC;EACjC,2CAA2C;EAC3C,4CAA4C;EAC5C,wDAAwD;AAC1D;AACA;EACE,cAAc;AAChB;AACA;EACE,cAAc;AAChB;AACA;EACE,cAAc;AAChB;AACA;EACE;IACE,UAAU;EACZ;EACA;IACE,UAAU;EACZ;EACA;IACE,UAAU;EACZ;AACF;AACA;EACE;IACE,UAAU;EACZ;EACA;IACE,UAAU;EACZ;EACA;IACE,UAAU;EACZ;AACF;AACA;EACE;IACE,UAAU;EACZ;EACA;IACE,UAAU;EACZ;EACA;IACE,UAAU;EACZ;AACF;AACA;EACE;IACE,UAAU;EACZ;EACA;IACE,UAAU;EACZ;EACA;IACE,UAAU;EACZ;AACF",
                sourcesContent: [':host {\n  --regalia-crest-summoner-icon-animation: none;\n  --regalia-crest-themed-level-ring-animation: none;\n}\n:host {\n  display: inline-block;\n  width: 160px;\n  height: 160px;\n  pointer-events: none;\n}\n:host .lol-regalia-crest-root {\n  width: 100%;\n  height: 100%;\n}\n:host .lol-regalia-summoner-icon-mask-container {\n  position: absolute;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  -webkit-mask-size: 82% 82%;\n  -webkit-mask-clip: content;\n  -webkit-mask-repeat: no-repeat;\n  -webkit-mask-position: 50% 50%;\n  -webkit-mask-image: url("images/icon-mask-30.png");\n}\n:host .lol-regalia-summoner-icon-mask-container .lol-regalia-summoner-icon {\n  animation: var(--regalia-crest-summoner-icon-animation);\n  margin: auto;\n  width: 76%;\n  height: 76%;\n  background-size: cover;\n}\n:host .lol-regalia-none-border-container {\n  display: none;\n  background-image: url("images/eog-solid-ring.png");\n  background-size: contain;\n  position: absolute;\n  top: 2.5%;\n  left: 2.5%;\n  width: 95%;\n  height: 95%;\n}\n:host .lol-regalia-themed-level-ring {\n  animation: var(--regalia-crest-themed-level-ring-animation);\n  display: none;\n}\n:host .lol-regalia-themed-level-ring[crest-sizing="huge"] {\n  --themed-level-ring-level-text-line-height: 18px;\n  --themed-level-ring-level-text-top: 85%;\n}\n:host .lol-regalia-themed-level-ring[crest-sizing="large"] {\n  --themed-level-ring-level-text-line-height: 18px;\n  --themed-level-ring-level-text-top: 85%;\n}\n:host .lol-regalia-themed-level-ring[crest-sizing="medium"] {\n  --themed-level-ring-level-text-font-size: 12px;\n  --themed-level-ring-level-text-line-height: 16px;\n  --themed-level-ring-level-text-top: 84.5%;\n}\n:host .lol-regalia-themed-level-ring[crest-sizing="medium"]:lang(ja-jp) {\n  --themed-level-ring-level-text-font-size: 13px;\n}\n:host .lol-regalia-themed-level-ring[crest-sizing="small"] {\n  --themed-level-ring-level-text-font-size: 10px;\n  --themed-level-ring-level-text-top: 85%;\n}\n:host .lol-regalia-ranked-border-container {\n  display: none;\n  position: absolute;\n  width: 188%;\n  height: 188%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n:host .lol-regalia-ranked-border-container > div {\n  width: 100%;\n  height: 100%;\n}\n:host .lol-regalia-ranked-border-container > div > svg {\n  transform: none !important;\n}\n:host .lol-regalia-comm-halo {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  --premade-voice-halo-margin: auto;\n  --premade-voice-halo-width: calc(76% - 8px);\n  --premade-voice-halo-height: calc(76% - 8px);\n  --premade-voice-halobefore-box-shadow: 0 0 0 4px #36d987;\n}\n:host .lol-regalia-crest-root[data-type="none"] .lol-regalia-none-border-container {\n  display: block;\n}\n:host .lol-regalia-crest-root[data-type="prestige"] .lol-regalia-themed-level-ring {\n  display: block;\n}\n:host .lol-regalia-crest-root[data-type="ranked"] .lol-regalia-ranked-border-container {\n  display: block;\n}\n@-moz-keyframes regalia-crest-animation-fadein {\n  0% {\n    opacity: 0;\n  }\n  30% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@-webkit-keyframes regalia-crest-animation-fadein {\n  0% {\n    opacity: 0;\n  }\n  30% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@-o-keyframes regalia-crest-animation-fadein {\n  0% {\n    opacity: 0;\n  }\n  30% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes regalia-crest-animation-fadein {\n  0% {\n    opacity: 0;\n  }\n  30% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n'],
                sourceRoot: ""
            }]), e.exports = o
        }, e => {
            "use strict";
            e.exports = function(e, t) {
                return t || (t = {}), e ? (e = String(e.__esModule ? e.default : e), /^['"].*['"]$/.test(e) && (e = e.slice(1, -1)), t.hash && (e += t.hash), /["'() \t\n]|(%20)/.test(e) || t.needQuotes ? '"'.concat(e.replace(/"/g, '\\"').replace(/\n/g, "\\n"), '"') : e) : e
            }
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "icon-mask-30.png"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "eog-solid-ring.png"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = "crystal-level";
            class i extends a.webComponents.ShadowElement {
                templateMarkup() {
                    return n(106)
                }
                stylesheetMarkup() {
                    return n(107)
                }
                static get observedAttributes() {
                    return [s]
                }
                attributeChangedCallback(e, t, n) {
                    e === s && this._updateCrystal(n)
                }
                _updateCrystal(e) {
                    const t = this.shadowRoot.querySelector(".challenges-crystal");
                    t && (e || (t.className = ""), t.className = `${e.toLowerCase()}-crystal challenges-crystal`)
                }
            }
            i.tagName = "lol-regalia-crystal-element";
            var r = i;
            t.default = r
        }, e => {
            "use strict";
            e.exports = '\x3c!--\r\n  This is the base (wrapper) template for the shadow dom of the element.\r\n--\x3e\r\n<template>\r\n  <div class="challenges-crystal-container">\r\n    <div class="challenges-crystal"/>\r\n  </div>\r\n</template>\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7)(a);
            s.push([e.id, '.challenges-crystal-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n}\n.challenges-crystal-container .challenges-crystal {\n  width: 100%;\n  height: 100%;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n}\n.challenges-crystal-container .challenges-crystal.iron-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_iron.png");\n}\n.challenges-crystal-container .challenges-crystal.bronze-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_bronze.png");\n}\n.challenges-crystal-container .challenges-crystal.silver-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_silver.png");\n}\n.challenges-crystal-container .challenges-crystal.gold-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_gold.png");\n}\n.challenges-crystal-container .challenges-crystal.platinum-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_platinum.png");\n}\n.challenges-crystal-container .challenges-crystal.diamond-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_diamond.png");\n}\n.challenges-crystal-container .challenges-crystal.master-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_master.png");\n}\n.challenges-crystal-container .challenges-crystal.grandmaster-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_grandmaster.png");\n}\n.challenges-crystal-container .challenges-crystal.challenger-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_challenger.png");\n}\n', "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/regalia/addon/elements/v2/crystal-element/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,WAAW;EACX,YAAY;AACd;AACA;EACE,WAAW;EACX,YAAY;EACZ,4BAA4B;EAC5B,2BAA2B;EAC3B,sBAAsB;AACxB;AACA;EACE,wFAAwF;AAC1F;AACA;EACE,0FAA0F;AAC5F;AACA;EACE,0FAA0F;AAC5F;AACA;EACE,wFAAwF;AAC1F;AACA;EACE,4FAA4F;AAC9F;AACA;EACE,2FAA2F;AAC7F;AACA;EACE,0FAA0F;AAC5F;AACA;EACE,+FAA+F;AACjG;AACA;EACE,8FAA8F;AAChG",
                sourcesContent: ['.challenges-crystal-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n}\n.challenges-crystal-container .challenges-crystal {\n  width: 100%;\n  height: 100%;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n}\n.challenges-crystal-container .challenges-crystal.iron-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_iron.png");\n}\n.challenges-crystal-container .challenges-crystal.bronze-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_bronze.png");\n}\n.challenges-crystal-container .challenges-crystal.silver-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_silver.png");\n}\n.challenges-crystal-container .challenges-crystal.gold-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_gold.png");\n}\n.challenges-crystal-container .challenges-crystal.platinum-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_platinum.png");\n}\n.challenges-crystal-container .challenges-crystal.diamond-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_diamond.png");\n}\n.challenges-crystal-container .challenges-crystal.master-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_master.png");\n}\n.challenges-crystal-container .challenges-crystal.grandmaster-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_grandmaster.png");\n}\n.challenges-crystal-container .challenges-crystal.challenger-crystal {\n  background-image: url("/fe/lol-static-assets/images/challenges-shared/crystal_challenger.png");\n}\n'],
                sourceRoot: ""
            }]), e.exports = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = n(93),
                r = (a = n(98)) && a.__esModule ? a : {
                    default: a
                },
                l = n(95);
            class o extends s.webComponents.ShadowElement {
                templateMarkup() {
                    return n(109)
                }
                stylesheetMarkup() {
                    return n(110)
                }
                constructor() {
                    super(!0), this._lowSpecMode = !1, this._overrideDisableAnimations = !1, this._stateMachineParameterChanged = this._onStateMachineParameterChanged.bind(this), this._regaliaUXSettingsUpdated = this._regaliaUXSettingsUpdated.bind(this), this._platformConfigBinding = (0, s.dataBinding)("/lol-platform-config", s.socket)
                }
                connectedCallback() {
                    super.connectedCallback(), this._platformConfigBinding.addObserver("/v1/namespaces/Regalia", this, this._regaliaJmxConfigUpdated), s.SharedComponentsApi.getApi_UXSettings().addObserver(this._regaliaUXSettingsUpdated), this._renderBanner()
                }
                disconnectedCallback() {
                    super.disconnectedCallback(), s.SharedComponentsApi.getApi_UXSettings().removeObserver(this._regaliaUXSettingsUpdated), this._platformConfigBinding.removeObserver(this), this._destroyAudio()
                }
                static get observedAttributes() {
                    return ["summoner-id", "animations", "animation-config", "banner-rank", "banner-type", "intro-sound", "intro-video"]
                }
                attributeChangedCallback(e, t, n) {
                    switch (super.attributeChangedCallback(e, t, n), e) {
                        case "animations":
                        case "animation-config":
                        case "banner-rank":
                        case "banner-type":
                        case "intro-sound":
                        case "intro-video":
                            if (n !== t) {
                                this._renderBanner();
                                break
                            }
                    }
                }
                _regaliaUXSettingsUpdated(e) {
                    this._lowSpecMode !== !e.largeAreaAnimationsEnabled && (this._lowSpecMode = !e.largeAreaAnimationsEnabled, this._renderBanner())
                }
                _regaliaJmxConfigUpdated(e) {
                    e && s.lodash.isBoolean(e.BannerAnimationsEnabled) ? !1 === e.BannerAnimationsEnabled && (this._overrideDisableAnimations = !0, this._renderBanner()) : !0 === this._overrideDisableAnimations && (this._overrideDisableAnimations = !1, this._renderBanner())
                }
                _isAnimated() {
                    if (!0 === this._overrideDisableAnimations) return !1;
                    return (!this.hasAttribute("animations") || (0, i.attributeValueIsTruthy)(this.getAttribute("animations"))) && !this._lowSpecMode
                }
                _showIntro() {
                    const e = this._isAnimated(),
                        t = (0, i.attributeValueIsSet)(this.getAttribute("intro-video"));
                    return e && t
                }
                _getStateMachine() {
                    return this.shadowRoot.querySelector(".regalia-banner-state-machine")
                }
                _getIntroVideo() {
                    return this.shadowRoot.querySelector(".regalia-banner-intro")
                }
                _getBannerStaticBackground() {
                    return this.shadowRoot.querySelector(".regalia-banner-asset-static-background")
                }
                _getBannerStaticTrim() {
                    return this.shadowRoot.querySelector(".regalia-banner-asset-static-trim")
                }
                _renderBanner() {
                    if (!this.hasAttribute("banner-type")) return;
                    if (!this._getStateMachine()) return;
                    if (!this.isConnected) return;
                    this._renderStaticBanner();
                    const e = this._getStateMachine();
                    e.setAttribute("animated", this._isAnimated()), e.unsubscribeParameterChanged(this._stateMachineParameterChanged), e.subscribeParameterChanged(this._stateMachineParameterChanged);
                    const t = this.getAttribute("intro-video");
                    (0, i.attributeValueIsSet)(t) && this._getIntroVideo().setAttribute("src", t);
                    const n = this._showIntro();
                    e.setAttribute("show-intro", n);
                    ("initializing" === e.getAttribute("state") || n) && (s.logger.trace("state machine is initialized, switching to preloading"), e.setAttribute("state", "preloading"))
                }
                _onStateMachineParameterChanged(e, t, n) {
                    if ("state" === e && "intro" === n && t !== n) {
                        const e = this.getAttribute("intro-sound");
                        this._showIntro() && (0, i.attributeValueIsSet)(e) && this._playSound(e)
                    }
                    if ("state" === e && "loop" === n && "intro-overlap" === t) {
                        const e = this.getAttribute("summoner-id");
                        e && this.dispatchEvent(new CustomEvent("banner-intro-played", {
                            detail: {
                                summonerId: e
                            }
                        }))
                    }
                }
                _renderStaticBanner() {
                    const e = this._getBannerStaticBackground();
                    this._getBackgroundContentPromise().then((t => {
                        e.style.backgroundImage = `url(${t})`
                    }));
                    const t = this._getBannerStaticTrim();
                    this._getTrimContentPromise().then((e => {
                        t.style.backgroundImage = `url(${e})`
                    }))
                }
                _getBackgroundContentPromise() {
                    return r.default.bannerBackgrounds("solid-still")
                }
                _getTrimContentPromise() {
                    let e = "default";
                    const t = (0, i.attributeValueIsSet)(this.getAttribute("banner-type")) ? this.getAttribute("banner-type") : "",
                        n = (0, i.attributeValueIsSet)(this.getAttribute("banner-rank")) ? this.getAttribute("banner-rank") : "";
                    return t === l.BANNER_TYPES.LAST_SEASON_HIGHEST_RANK && n && "UNRANKED" !== n && (e = n.toLowerCase()), r.default.bannerTrims(e)
                }
                _getPatternContentPromise() {
                    return r.default.bannerPatterns("blank")
                }
                _getAnimatedBannerAssets() {
                    const e = this._getBackgroundContentPromise(),
                        t = this._getPatternContentPromise(),
                        n = this._getTrimContentPromise();
                    return Promise.all([e, t, n]).then((e => s.lodash.zipObject(["background", "overlay", "rank"], e)))
                }
                _playSound(e) {
                    !1 !== e && (this._destroyAudio(), this._sound = s.Audio.getChannel("sfx-ui").createSound(e), this._sound.play())
                }
                _destroyAudio() {
                    this._sound && (this._sound.dispose(), delete this._sound)
                }
            }
            o.tagName = "lol-regalia-banner-element";
            var c = o;
            t.default = c
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  \x3c!--\r\n    Biggest inspiration for the below was from fe-lol-splash:\r\n    https://gh.riotgames.com/riotclient/rcp-fe-lol-splash/blob/31901b2ecb5ffa3297ca0b32800974267ffc9671/src/index.html#L50\r\n  --\x3e\r\n  <uikit-state-machine class="regalia-banner-state-machine" state="initializing">\r\n    <uikit-states>\r\n      \x3c!-- Initially idle. Once we set up the DOM elements (e.g. set the banner image src) then we will change\r\n           the state to "preloading".\r\n          --\x3e\r\n      <uikit-state name="initializing" synchronous></uikit-state>\r\n\r\n      <uikit-state name="preloading" synchronous> \x3c!-- Preload video --\x3e\r\n        <uikit-transition next-state="static">\r\n          <uikit-condition-parameter name="show-intro" value="false"></uikit-condition-parameter>\r\n        </uikit-transition>\r\n        <uikit-transition next-state="intro">\r\n          <uikit-condition-parameter name="show-intro" value="true"></uikit-condition-parameter>\r\n          <uikit-condition-parameter name="animated" value="true"></uikit-condition-parameter>\r\n          <uikit-condition-media selector=".regalia-banner-intro" can-play></uikit-condition-media>\r\n        </uikit-transition>\r\n        <uikit-behavior-media selector=".regalia-banner-intro" preloading></uikit-behavior-media>\r\n      </uikit-state>\r\n\r\n      <uikit-state name="intro" synchronous>\r\n        <uikit-transition next-state="intro-overlap">\r\n          \x3c!-- Transition to intro-overlap state at 400ms into the intro video --\x3e\r\n          <uikit-condition-delay duration="400"></uikit-condition-delay>\r\n        </uikit-transition>\r\n        <uikit-behavior-media selector=".regalia-banner-intro" playing></uikit-behavior-media>\r\n      </uikit-state>\r\n\r\n      <uikit-state name="intro-overlap" synchronous>\r\n        \x3c!-- The animated banner now appears underneath the video, video plays to completion --\x3e\r\n        <uikit-transition next-state="static">\r\n          \x3c!-- Transition to static state when the video ends; video will be unloaded --\x3e\r\n          <uikit-condition-media selector=".regalia-banner-intro" ended></uikit-condition-media>\r\n        </uikit-transition>\r\n        <uikit-behavior-media selector=".regalia-banner-intro" playing></uikit-behavior-media>\r\n      </uikit-state>\r\n\r\n      <uikit-state name="static" synchronous>\r\n      </uikit-state>\r\n    </uikit-states>\r\n\r\n    \x3c!-- ANIMATED ASSETS --\x3e\r\n    \x3c!-- Intro video plays the unfurling of the banner; it must be after the other elements in the DOM\r\n         so that it is rendered on top. --\x3e\r\n    <uikit-video\r\n        class="regalia-banner-intro"\r\n        visible-state="intro,intro-overlap">\r\n    </uikit-video>\r\n\r\n    \x3c!-- NON-ANIMATED (static) ASSETS --\x3e\r\n    \x3c!-- Static fallback banner image --\x3e\r\n    <div class="regalia-banner-asset-static" visible-state="intro-overlap,static">\r\n      <div class="regalia-banner-asset-static-background"></div>\r\n      <div class="regalia-banner-asset-static-trim"></div>\r\n    </div>\r\n\r\n  </uikit-state-machine>\r\n</template>\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7)(a);
            s.push([e.id, ':host {\n  --regalia-banner-asset-static-top: 0;\n}\n:host .regalia-banner-asset-static {\n  top: var(--regalia-banner-asset-static-top);\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n:host .regalia-banner-asset-static .regalia-banner-asset-static-background {\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: bottom;\n}\n:host .regalia-banner-asset-static .regalia-banner-asset-static-trim {\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: bottom;\n}\n:host .regalia-banner-intro video {\n  position: absolute;\n}\n:host .regalia-banner-intro video {\n  width: 272px;\n  height: 620px;\n}\n:host .regalia-banner-intro video[src$="Banner_Primary.webm"] {\n  top: -5.8%;\n  left: -15.5%;\n}\n:host .regalia-banner-intro video[src$="Banner_Ally.webm"] {\n  top: -7.1%;\n  left: -25%;\n}\n', "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/regalia/addon/elements/banner-element/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,oCAAoC;AACtC;AACA;EACE,2CAA2C;EAC3C,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;AACA;EACE,kBAAkB;EAClB,MAAM;EACN,WAAW;EACX,YAAY;EACZ,sBAAsB;EACtB,4BAA4B;EAC5B,2BAA2B;AAC7B;AACA;EACE,kBAAkB;EAClB,MAAM;EACN,WAAW;EACX,YAAY;EACZ,wBAAwB;EACxB,4BAA4B;EAC5B,2BAA2B;AAC7B;AACA;EACE,kBAAkB;AACpB;AACA;EACE,YAAY;EACZ,aAAa;AACf;AACA;EACE,UAAU;EACV,YAAY;AACd;AACA;EACE,UAAU;EACV,UAAU;AACZ",
                sourcesContent: [':host {\n  --regalia-banner-asset-static-top: 0;\n}\n:host .regalia-banner-asset-static {\n  top: var(--regalia-banner-asset-static-top);\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n:host .regalia-banner-asset-static .regalia-banner-asset-static-background {\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: bottom;\n}\n:host .regalia-banner-asset-static .regalia-banner-asset-static-trim {\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: bottom;\n}\n:host .regalia-banner-intro video {\n  position: absolute;\n}\n:host .regalia-banner-intro video {\n  width: 272px;\n  height: 620px;\n}\n:host .regalia-banner-intro video[src$="Banner_Primary.webm"] {\n  top: -5.8%;\n  left: -15.5%;\n}\n:host .regalia-banner-intro video[src$="Banner_Ally.webm"] {\n  top: -7.1%;\n  left: -25%;\n}\n'],
                sourceRoot: ""
            }]), e.exports = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(112)) && a.__esModule ? a : {
                default: a
            };
            class i extends s.default {
                templateMarkup() {
                    return n(115)
                }
                stylesheetMarkup() {
                    return n(116)
                }
                isHovercard() {
                    return !0
                }
            }
            i.tagName = "lol-regalia-hovercard-element";
            var r = i;
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(113)) && a.__esModule ? a : {
                    default: a
                },
                r = n(93);
            class l extends s.webComponents.ShadowElement {
                getRegaliaCrestElement() {
                    return this.shadowRoot.querySelector("lol-regalia-crest-element")
                }
                getRegaliaBannerElement() {
                    return this.shadowRoot.querySelector("lol-regalia-banner-element")
                }
                handleSummonerChanged(e) {}
                handleCrestChanged(e) {}
                handleBannerChanged(e) {}
                isHovercard() {
                    return !1
                }
                constructor() {
                    super(), this._position = null, this._queue = null, this._summonerId = null, this._regalia = null, this._service = new i.default(this._onSummonerRegaliaCallback.bind(this), this.isHovercard())
                }
                connectedCallback() {
                    super.connectedCallback(), this._service.attach()
                }
                disconnectedCallback() {
                    super.disconnectedCallback(), this._service.detach()
                }
                static get observedAttributes() {
                    return ["position", "queue", "summoner-id"]
                }
                attributeChangedCallback(e, t, n) {
                    switch (super.attributeChangedCallback(e, t, n), e) {
                        case "position":
                            this._updatePosition(n);
                            break;
                        case "queue":
                            this._updateQueue(n);
                            break;
                        case "summoner-id":
                            this._updateSummonerId(n)
                    }
                }
                _updatePosition(e) {
                    this._position = e, this._service.setQueueAndPosition(this._queue, this._position)
                }
                _updateQueue(e) {
                    this._queue = e, this._service.setQueueAndPosition(this._queue, this._position)
                }
                _updateSummonerId(e) {
                    (0, r.attributeValueNotSet)(e) || this._summonerId !== e && (this._hide(), delete this._regalia, delete this._summonerId, this._updateCrestAttributes(), this._updateBannerAttributes(), this._summonerId = e, this._service.setSummonerId(e), this.handleSummonerChanged(e))
                }
                _onSummonerRegaliaCallback(e) {
                    this._regalia = e, this._updateCrestAttributes(), this._updateBannerAttributes(), this._show()
                }
                _hide() {
                    this.style.visibility = "hidden", this.classList.remove("regalia-loaded")
                }
                _show() {
                    this.style.removeProperty("visibility"), this.classList.add("regalia-loaded"), this.dispatchEvent(new CustomEvent("loaded", {
                        detail: this._regalia
                    })), this.dispatchEvent(new CustomEvent("regalia-loaded", {
                        detail: this._regalia,
                        bubbles: !0,
                        composed: !0
                    }))
                }
                _updateCrestAttributes() {
                    if (!this.getRegaliaCrestElement()) return;
                    const e = this.getRegaliaCrestElement();
                    this._regalia ? s.SharedComponentsApi_Private.Regalia.getProfileIcons().getIconUrlPromise(this._regalia.profileIconId).then((t => {
                        e.setAttribute("profile-icon-url", t), e.setAttribute("summoner-level", this._regalia.summonerLevel), e.setAttribute("ranked-tier", s.lodash.get(this._regalia, "highestRankedEntry.tier")), e.setAttribute("ranked-division", s.lodash.get(this._regalia, "highestRankedEntry.division")), e.setAttribute("ranked-split-reward", s.lodash.get(this._regalia, "highestRankedEntry.splitRewardLevel")), e.setAttribute("crest-type", this._regalia.crestType), this.handleCrestChanged(this._regalia), e.classList.add("regalia-crest-loaded")
                    })) : e.classList.remove("regalia-crest-loaded")
                }
                _updateBannerAttributes() {
                    if (!this.getRegaliaBannerElement()) return;
                    const e = this.getRegaliaBannerElement();
                    this._regalia ? (e.setAttribute("banner-rank", this._regalia.lastSeasonHighestRank), e.setAttribute("banner-type", this._regalia.bannerType), this.handleBannerChanged(this._regalia), e.classList.add("regalia-banner-loaded")) : e.classList.remove("regalia-banner-loaded")
                }
            }
            var o = l;
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = n(95),
                i = n(114);
            var r = class {
                constructor(e, t = !1) {
                    this._regalia = this._createFallbackRegalia(), this._preferences = this._createFallbackPreferences(), this._regaliaUpdateCallback = e, this._isHovercard = t, this._queue = null, this._position = null, this._regaliaAsyncObserverEndpoint = null, this._regaliaMd5 = null, this._regaliaBinding = (0, a.dataBinding)("/lol-regalia", a.socket), this._challengesBinding = (0, a.dataBinding)("/lol-challenges", a.socket)
                }
                setSummonerId(e) {
                    this._summonerId !== e && (this._summonerId = e, this._initSummonerRegalia())
                }
                setPuuid(e) {
                    this._puuid !== e && (this._puuid = e, this._initSummonerRegalia(), this._initChallengeCrystal())
                }
                setQueueAndPosition(e, t) {
                    this._queue === e && this._position === t || (this._queue = e, this._position = t, this._getSummonerRegalia())
                }
                attach() {
                    this._resetObservers()
                }
                detach() {
                    this._clearObservers(), this._clearChallengeObservers()
                }
                _resetObservers() {
                    this._clearObservers(), this._clearChallengeObservers(), this._addRegaliaAsyncObserver(), this._addChallengesObserver()
                }
                _addRegaliaAsyncObserver() {
                    const e = this._regaliaAsyncObserverEndpoint;
                    e && this._regaliaBinding.addObserver(e, this, (e => {
                        e && e.md5 !== this._regaliaMd5 && (this._getSummonerRegalia(), this._regaliaMd5 = e.md5)
                    }))
                }
                _addChallengesObserver() {
                    const e = this._summonerId,
                        t = this._puuid,
                        n = this._challengesObserverEndpoint;
                    n && this._challengesBinding.addObserver(n, this, (n => {
                        this._summonerId === e && this._puuid === t ? n && n.overallChallengeLevel ? (this._preferences.crystalLevel = n.overallChallengeLevel, this._preferences.bannerId = n.bannerId, this._regaliaUpdateCallback(this._regalia, this._summonerId, this._preferences)) : this._regaliaUpdateCallback(this._regalia, this._summonerId, this._createFallbackRegalia()) : this._clearChallengeObservers()
                    }))
                }
                _clearObservers() {
                    this._regaliaBinding.removeObserver(this)
                }
                _clearChallengeObservers() {
                    this._challengesBinding.removeObserver(this)
                }
                _initSummonerRegalia() {
                    this._clearObservers();
                    const e = this._summonerId;
                    this._getSummonerRegalia().then((() => {
                        this._summonerId === e && (this._regaliaAsyncObserverEndpoint = `v2/summoners/${e}/regalia/async`, this._addRegaliaAsyncObserver())
                    }))
                }
                _initChallengeCrystal() {
                    this._clearChallengeObservers(), this._challengesObserverEndpoint = `v1/summary-player-data/player/${this._puuid}`, this._addChallengesObserver()
                }
                _getSummonerRegalia() {
                    const e = this._summonerId,
                        t = this._isHovercard,
                        n = this._queue,
                        s = this._position,
                        i = function(e, t, n, a) {
                            if (t) return `v2/summoners/${e}/regalia?hovercard=true`;
                            if (n || a) return `v2/summoners/${e}/queues/${n||"NONE"}/positions/${a||"NONE"}/regalia`;
                            return `v2/summoners/${e}/regalia`
                        }(e, t, n, s),
                        r = a.Telemetry.startTimer("regalia-v2-get");
                    return this._regaliaBinding.get(i, {
                        skipCache: !0
                    }).then((l => {
                        if (this._summonerId === e && this._isHovercard === t && this._queue === n && this._position === s) {
                            if (!l) return a.logger.error(`Recovering from endpoint failure, sumId=${e} get(${i}): null regalia`), void this._regaliaUpdateCallback(this._createFallbackRegalia(), e, this._createFallbackPreferences());
                            a.Telemetry.stopAndRecordTimer(r), this._regalia = l, this._regaliaUpdateCallback(l, e, this._preferences)
                        }
                    })).catch((t => {
                        a.logger.error(`Recovering from endpoint failure, sumId=${e} get(${i}):`, t), this._regaliaUpdateCallback(this._createFallbackRegalia(), e, this._createFallbackPreferences())
                    }))
                }
                _createFallbackRegalia() {
                    return {
                        profileIconId: 0,
                        summonerLevel: s.REGALIA_FALLBACK_SUMMONER_LEVEL,
                        crestType: s.CREST_TYPES.PRESTIGE,
                        bannerType: s.BANNER_TYPES.BLANK,
                        selectedPrestigeCrest: 1
                    }
                }
                _createFallbackPreferences() {
                    return {
                        crystalLevel: i.CHALLENGE_LEVELS.NONE,
                        bannerId: null
                    }
                }
            };
            t.default = r
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SORTED_CHALLENGE_LEVELS = t.SORTED_CHALLENGE_CATEGORIES = t.REKINDLED_MILESTONE_MARKER = t.MS_IN_ONE_DAY = t.MAX_SELECTED_TOKENS = t.LOTTIE_RADIAL_UNITS = t.IMG_BASE_PATH = t.ID_LIST_MAPPING_TYPES = t.DEFAULT_TITLE_CHALLENGE_ID = t.DEFAULT_CHALLENGE_CRYSTAL_LEVEL = t.CREST_ID_PRESTIGE = t.CREST_ID_CURRENT_RANK = t.CHALLENGE_TOKEN_SORT_TYPES = t.CHALLENGE_TITLE_SORT_TYPES = t.CHALLENGE_SORT_TYPES = t.CHALLENGE_SORT_RARITY_TITLE_UNOWNED_KEY = t.CHALLENGE_SORT_RARITY_OTHER_KEY = t.CHALLENGE_SORTING_RETIRED_GROUP_DELIMITER = t.CHALLENGE_REWARD_CATEGORIES = t.CHALLENGE_MINI_CRYSTAL_PATH = t.CHALLENGE_MILESTONE_REWARDS = t.CHALLENGE_LEVEL_TO_ORDINAL = t.CHALLENGE_LEVELS = t.CHALLENGE_FLAG_NAMES = t.CHALLENGE_FLAG_DEFAULTS = t.CHALLENGE_CURRENCY_REWARDS = t.CHALLENGE_CATEGORY_IDS_LIST = t.CHALLENGE_CATEGORY_IDS = t.CHALLENGE_CATEGORIES = t.CHALLENGES_RETIRE_DISPLAY_THRESHOLD_MS = t.CHALLENGES_CLIENT_STATES = t.BANNER_ID_PAST_RANK = t.BANNER_ID_DEFAULT = t.APEX_CHALLENGE_LEVELS = void 0, t.getChallengeMiniCrystal = function(e) {
                if (!e) return g;
                const t = f(e);
                return `${h}/${t}.svg`.toLowerCase()
            }, t.getFlagValueOrDefault = function(e, t) {
                if (!e) return !1;
                return p.isNill(t) ? m[e] : t
            }, t.getNextLevel = function(e) {
                const t = s.indexOf(e);
                if (t < 0) return null;
                const n = t + 1;
                if (n >= s.length) return null;
                return s[n]
            }, t.sanitizeChallengeTier = f;
            const n = {
                NONE: "NONE",
                IRON: "IRON",
                BRONZE: "BRONZE",
                SILVER: "SILVER",
                GOLD: "GOLD",
                PLATINUM: "PLATINUM",
                DIAMOND: "DIAMOND",
                MASTER: "MASTER",
                GRANDMASTER: "GRANDMASTER",
                CHALLENGER: "CHALLENGER"
            };
            t.CHALLENGE_LEVELS = n;
            const a = [n.MASTER, n.GRANDMASTER, n.CHALLENGER];
            t.APEX_CHALLENGE_LEVELS = a;
            const s = [n.NONE, n.IRON, n.BRONZE, n.SILVER, n.GOLD, n.PLATINUM, n.DIAMOND, n.MASTER, n.GRANDMASTER, n.CHALLENGER];
            t.SORTED_CHALLENGE_LEVELS = s;
            t.CHALLENGE_LEVEL_TO_ORDINAL = {
                NONE: 0,
                IRON: 1,
                BRONZE: 2,
                SILVER: 3,
                GOLD: 4,
                PLATINUM: 5,
                DIAMOND: 6,
                MASTER: 7,
                GRANDMASTER: 8,
                CHALLENGER: 9
            };
            const i = {
                TITLE: "TITLE",
                BANNER_ACCENT: "BANNER_ACCENT",
                BATTLE_PASS_XP: "BATTLE_PASS_XP",
                BLUE_ESSENCE: "BLUE_ESSENCE",
                SUMMONER_EXP: "SUMMONER_EXP",
                CHALLENGE_POINTS: "CHALLENGE_POINTS"
            };
            t.CHALLENGE_REWARD_CATEGORIES = i;
            const r = [i.BATTLE_PASS_XP, i.BLUE_ESSENCE, i.SUMMONER_EXP, i.CHALLENGE_POINTS];
            t.CHALLENGE_CURRENCY_REWARDS = r;
            const l = [i.TITLE, i.BANNER_ACCENT];
            t.CHALLENGE_MILESTONE_REWARDS = l;
            t.CHALLENGE_CATEGORIES = {
                EXPERTISE: "EXPERTISE",
                TEAMWORK: "TEAMWORK",
                IMAGINATION: "IMAGINATION",
                VETERANCY: "VETERANCY",
                COLLECTION: "COLLECTION",
                LEGACY: "LEGACY"
            };
            const o = {
                EXPERTISE: 2,
                TEAMWORK: 4,
                IMAGINATION: 1,
                VETERANCY: 3,
                COLLECTION: 5
            };
            t.CHALLENGE_CATEGORY_IDS = o;
            const c = Object.values(o);
            t.CHALLENGE_CATEGORY_IDS_LIST = c;
            t.SORTED_CHALLENGE_CATEGORIES = ["EXPERTISE", "TEAMWORK", "IMAGINATION", "VETERANCY", "COLLECTION", "LEGACY"];
            t.CHALLENGE_TOKEN_SORT_TYPES = {
                RARITY_DESC: "rarity_desc",
                RARITY_ASC: "rarity_asc",
                TIER_DESC: "tier_desc",
                TIER_ASC: "tier_asc",
                TIME_EARNED_DESC: "acquired_desc",
                TIME_EARNED_ASC: "acquired_asc"
            };
            t.CHALLENGE_TITLE_SORT_TYPES = {
                ALPHABETICAL: "ALPHABETICAL",
                RARITY: "RARITY",
                SYSTEM: "SYSTEM",
                LEVEL: "LEVEL",
                ACQUIRED: "ACQUIRED"
            };
            t.CHALLENGE_SORT_TYPES = {
                CAPSTONE: "CAPSTONE",
                RARITY: "RARITY",
                LEVEL: "LEVEL",
                ACQUIRED: "ACQUIRED"
            };
            t.ID_LIST_MAPPING_TYPES = {
                none: "NONE",
                champion: "CHAMPION",
                skin: "CHAMPION_SKIN",
                item: "ITEM"
            };
            t.CHALLENGE_SORT_RARITY_OTHER_KEY = 100;
            t.CHALLENGE_SORT_RARITY_TITLE_UNOWNED_KEY = -1;
            t.IMG_BASE_PATH = "/fe/lol-static-assets/images/challenges-shared";
            t.MAX_SELECTED_TOKENS = 3;
            t.REKINDLED_MILESTONE_MARKER = 5;
            t.LOTTIE_RADIAL_UNITS = 75;
            t.DEFAULT_TITLE_CHALLENGE_ID = 0;
            t.MS_IN_ONE_DAY = 864e5;
            t.BANNER_ID_DEFAULT = "1";
            t.BANNER_ID_PAST_RANK = "2";
            t.CREST_ID_PRESTIGE = "1";
            t.CREST_ID_CURRENT_RANK = "2";
            const d = {
                COLLECTION_ENABLED: "COLLECTION_ENABLED",
                CLIENT_STATE: "CLIENT_STATE",
                POSTGAME_OVERRIDE: "POSTGAME_OVERRIDE",
                LEVEL_UP_CELEBRATION_ENABLED: "LEVEL_UP_CELEBRATION_ENABLED",
                IDENTITY_CUSTOMIZER_BANNERSKINS_ENABLED: "IDENTITY_CUSTOMIZER_BANNERSKINS_ENABLED",
                TOOLTIP_ANIMATIONS_ENABLED: "TOOLTIP_ANIMATIONS_ENABLED",
                BANNERSKINS_ENABLED: "BANNERSKINS_ENABLED"
            };
            t.CHALLENGE_FLAG_NAMES = d;
            const u = {
                HIDDEN: "Hidden",
                DISABLED: "Disabled",
                ENABLED: "Enabled"
            };
            t.CHALLENGES_CLIENT_STATES = u;
            const m = {};
            t.CHALLENGE_FLAG_DEFAULTS = m, m[d.COLLECTION_ENABLED] = !0, m[d.CLIENT_STATE] = u.HIDDEN, m[d.POSTGAME_OVERRIDE] = !0, m[d.LEVEL_UP_CELEBRATION_ENABLED] = !0, m[d.IDENTITY_CUSTOMIZER_BANNERSKINS_ENABLED] = !0, m[d.TOOLTIP_ANIMATIONS_ENABLED] = !1, m[d.BANNERSKINS_ENABLED] = !0;
            const p = {
                isNill: function(e) {
                    return null == e || "" === e
                }
            };
            t.CHALLENGE_SORTING_RETIRED_GROUP_DELIMITER = "_retired";
            t.CHALLENGES_RETIRE_DISPLAY_THRESHOLD_MS = 2592e6;
            const h = "/fe/lol-static-assets/images/challenge-mini-crystal";
            t.CHALLENGE_MINI_CRYSTAL_PATH = h;
            const g = "IRON";

            function f(e) {
                let t = "string" == typeof e ? e.toUpperCase() : g;
                return t === g && (t = g), Object.values(n).includes(t) ? t : g
            }
            t.DEFAULT_CHALLENGE_CRYSTAL_LEVEL = g
        }, e => {
            "use strict";
            e.exports = '<template id="lol-regalia-template-hovercard-element">\r\n  <lol-regalia-crest-element class="regalia-hovercard-crest-element" crest-sizing="small" animations="false">\r\n  </lol-regalia-crest-element>\r\n</template>'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7)(a);
            s.push([e.id, ":host .regalia-hovercard-crest-element {\n  width: 90px;\n  height: 90px;\n}\n", "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/regalia/addon/elements/hovercard-element/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,WAAW;EACX,YAAY;AACd",
                sourcesContent: [":host .regalia-hovercard-crest-element {\n  width: 90px;\n  height: 90px;\n}\n"],
                sourceRoot: ""
            }]), e.exports = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(112)) && a.__esModule ? a : {
                    default: a
                },
                i = n(93),
                r = n(118),
                l = n(95);
            class o extends s.default {
                templateMarkup() {
                    return n(119)
                }
                stylesheetMarkup() {
                    return n(120)
                }
                constructor() {
                    super(), this._bannerType = null, this._partySize = null, this._introSoundUrl = null, this._showIntro = null
                }
                static get observedAttributes() {
                    return ["position", "queue", "summoner-id", "animations", "banner-type", "banner-rank", "hide-banner", "hide-crest-border", "party-size", "puuid", "show-intro", "visor-down"]
                }
                attributeChangedCallback(e, t, n) {
                    switch (super.attributeChangedCallback(e, t, n), e) {
                        case "animations":
                            this._handleAnimationsChanged(n);
                            break;
                        case "banner-type":
                            this._handleBannerTypeChanged(n);
                            break;
                        case "hide-banner":
                            this._handleHideBannerChanged(n);
                            break;
                        case "hide-crest-border":
                            this._handleHideCrestBorderChanged(n);
                            break;
                        case "party-size":
                            this._handlePartySizeChanged(n);
                            break;
                        case "puuid":
                            this._handlePuuidChanged(n);
                            break;
                        case "show-intro":
                            this._handleShowIntroChanged(n);
                            break;
                        case "visor-down":
                            this._handleVisorDown(n);
                            break;
                        case "summoner-id":
                            this._passSummonerIdToBanner(n)
                    }
                }
                _handleAnimationsChanged(e) {
                    e = (0, i.attributeValueIsTruthy)(e), this.getRegaliaBannerElement().setAttribute("animations", e)
                }
                _handleHideBannerChanged(e) {
                    (e = (0, i.attributeValueIsTruthy)(e)) ? this.getRegaliaBannerElement().classList.add("regalia-banner-hidden"): this.getRegaliaBannerElement().classList.remove("regalia-banner-hidden")
                }
                _handleHideCrestBorderChanged(e) {
                    e = (0, i.attributeValueIsTruthy)(e), this.getRegaliaCrestElement().setAttribute("hide-crest-border", e)
                }
                _handleBannerTypeChanged(e) {
                    this._bannerType = e, this._getRegaliaPartiesRoot().setAttribute("data-type", e);
                    const t = e === r.BANNER_TYPES.CURRENT_PLAYER ? "large" : "medium";
                    this.getRegaliaCrestElement().setAttribute("crest-sizing", t), this._updateIntro()
                }
                _handlePartySizeChanged(e) {
                    this._partySize = e, this._updateIntro()
                }
                _handlePuuidChanged(e) {
                    this.getRegaliaCrestElement().setAttribute("voice-puuid", e)
                }
                _handleShowIntroChanged(e) {
                    this._showIntro = (0, i.attributeValueIsTruthy)(e), this._updateIntro()
                }
                _handleVisorDown(e) {
                    this._visorDown = (0, i.attributeValueIsTruthy)(e);
                    this._getRegaliaCrestElement().setAttribute("visor-down", this._visorDown)
                }
                handleSummonerChanged(e) {
                    super.handleSummonerChanged(e), this._updateIntro()
                }
                handleBannerChanged(e) {
                    super.handleBannerChanged(e), this._updateIntro()
                }
                _passSummonerIdToBanner(e) {
                    this.getRegaliaBannerElement().setAttribute("summoner-id", e)
                }
                _updateIntro() {
                    const e = this.getRegaliaBannerElement();
                    if (!this._showIntro) return e.removeAttribute("intro-video"), void e.removeAttribute("intro-sound");
                    let t = null,
                        n = null;
                    if ((0, i.attributeValueIsSet)(this._bannerType)) {
                        n = r.BANNER_INTRO_VIDEOS[this._bannerType];
                        const a = e.getAttribute("banner-type"),
                            s = e.getAttribute("banner-rank"),
                            o = this._bannerType === r.BANNER_TYPES.CURRENT_PLAYER;
                        a === l.BANNER_TYPES.LAST_SEASON_HIGHEST_RANK && (0, i.attributeValueIsSet)(s) ? t = `/fe/lol-static-assets/sounds/sfx-parties-member-banner-intro-${s.toLowerCase()}.ogg` : o ? t = "/fe/lol-static-assets/sounds/sfx-parties-player-banner-intro.ogg" : (0, i.attributeValueIsSet)(this._partySize) && (t = `/fe/lol-static-assets/sounds/sfx-parties-member-banner-intro_0${this._partySize}.ogg`)
                    }
                    this._introSoundUrl !== t && (this._introSoundUrl = t, t ? e.setAttribute("intro-sound", t) : e.removeAttribute("intro-sound")), n ? e.setAttribute("intro-video", n) : e.removeAttribute("intro-video")
                }
                _getRegaliaPartiesRoot() {
                    return this.shadowRoot.querySelector(".regalia-parties-root")
                }
                _getRegaliaCrestElement() {
                    return this.shadowRoot.querySelector(".regalia-parties-crest-element")
                }
            }
            o.tagName = "lol-regalia-parties-element";
            var c = o;
            t.default = c
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BANNER_TYPES = t.BANNER_INTRO_VIDEOS = void 0;
            const n = {
                CURRENT_PLAYER: "current-player",
                OTHER_PLAYER: "other-player"
            };
            t.BANNER_TYPES = n;
            const a = {};
            t.BANNER_INTRO_VIDEOS = a, a[n.CURRENT_PLAYER] = "/fe/lol-static-assets/videos/Banner_Primary.webm", a[n.OTHER_PLAYER] = "/fe/lol-static-assets/videos/Banner_Ally.webm"
        }, e => {
            "use strict";
            e.exports = '\x3c!--\r\n  This is the base (wrapper) template for the shadow dom of the element.\r\n--\x3e\r\n<template>\r\n  <div class="regalia-parties-root" data-type="">\r\n    <lol-regalia-banner-element class="regalia-parties-banner-backdrop"></lol-regalia-banner-element>\r\n    <div class="regalia-parties-element-container">\r\n      <div class="regalia-parties-crest-wrapper">\r\n        <lol-regalia-crest-element class="regalia-parties-crest-element"></lol-regalia-crest-element>\r\n      </div>\r\n      <div class="content-wrapper">\r\n        <slot></slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7)(a);
            s.push([e.id, ':host .regalia-parties-root {\n  position: relative;\n}\n:host .regalia-parties-root[data-type="current-player"] {\n  width: 204px;\n  height: 600px;\n}\n:host .regalia-parties-root[data-type="current-player"] .regalia-parties-crest-element {\n  width: 125px;\n  height: 125px;\n}\n:host .regalia-parties-root[data-type="current-player"] .regalia-parties-banner-backdrop {\n  --regalia-banner-asset-static-top: -8px;\n}\n:host .regalia-parties-root[data-type="other-player"] {\n  width: 178px;\n  height: 550px;\n}\n:host .regalia-parties-root[data-type="other-player"] .regalia-parties-crest-element {\n  width: 107px;\n  height: 107px;\n}\n:host .regalia-parties-root[data-type="other-player"] .regalia-parties-banner-backdrop {\n  --regalia-banner-asset-static-top: -4px;\n}\n:host .regalia-parties-root[data-type="other-player"] .regalia-parties-banner-backdrop.regalia-banner-hidden {\n  display: none;\n}\n:host .regalia-parties-root .regalia-parties-banner-backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n:host .regalia-parties-root .regalia-parties-element-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n}\n:host .regalia-parties-root .regalia-parties-element-container .regalia-parties-crest-wrapper {\n  display: flex;\n  position: relative;\n  width: fit-content;\n  height: fit-content;\n  top: 265px;\n}\n:host .regalia-parties-root .regalia-parties-element-container .regalia-parties-crest-wrapper lol-regalia-crest-element {\n  --regalia-crest-summoner-icon-animation: 1s ease-in-out regalia-crest-animation-fadein;\n  --regalia-crest-themed-level-ring-animation: 1s ease-in-out regalia-crest-animation-fadein;\n}\n:host .regalia-parties-root .regalia-parties-element-container .content-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n', "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/regalia/addon/elements/parties-element/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,kBAAkB;AACpB;AACA;EACE,YAAY;EACZ,aAAa;AACf;AACA;EACE,YAAY;EACZ,aAAa;AACf;AACA;EACE,uCAAuC;AACzC;AACA;EACE,YAAY;EACZ,aAAa;AACf;AACA;EACE,YAAY;EACZ,aAAa;AACf;AACA;EACE,uCAAuC;AACzC;AACA;EACE,aAAa;AACf;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,uBAAuB;AACzB;AACA;EACE,aAAa;EACb,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,UAAU;AACZ;AACA;EACE,sFAAsF;EACtF,0FAA0F;AAC5F;AACA;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;AACX",
                sourcesContent: [':host .regalia-parties-root {\n  position: relative;\n}\n:host .regalia-parties-root[data-type="current-player"] {\n  width: 204px;\n  height: 600px;\n}\n:host .regalia-parties-root[data-type="current-player"] .regalia-parties-crest-element {\n  width: 125px;\n  height: 125px;\n}\n:host .regalia-parties-root[data-type="current-player"] .regalia-parties-banner-backdrop {\n  --regalia-banner-asset-static-top: -8px;\n}\n:host .regalia-parties-root[data-type="other-player"] {\n  width: 178px;\n  height: 550px;\n}\n:host .regalia-parties-root[data-type="other-player"] .regalia-parties-crest-element {\n  width: 107px;\n  height: 107px;\n}\n:host .regalia-parties-root[data-type="other-player"] .regalia-parties-banner-backdrop {\n  --regalia-banner-asset-static-top: -4px;\n}\n:host .regalia-parties-root[data-type="other-player"] .regalia-parties-banner-backdrop.regalia-banner-hidden {\n  display: none;\n}\n:host .regalia-parties-root .regalia-parties-banner-backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n:host .regalia-parties-root .regalia-parties-element-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n}\n:host .regalia-parties-root .regalia-parties-element-container .regalia-parties-crest-wrapper {\n  display: flex;\n  position: relative;\n  width: fit-content;\n  height: fit-content;\n  top: 265px;\n}\n:host .regalia-parties-root .regalia-parties-element-container .regalia-parties-crest-wrapper lol-regalia-crest-element {\n  --regalia-crest-summoner-icon-animation: 1s ease-in-out regalia-crest-animation-fadein;\n  --regalia-crest-themed-level-ring-animation: 1s ease-in-out regalia-crest-animation-fadein;\n}\n:host .regalia-parties-root .regalia-parties-element-container .content-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n'],
                sourceRoot: ""
            }]), e.exports = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            class s extends a.webComponents.ShadowElement {
                templateMarkup() {
                    return n(122)
                }
                stylesheetMarkup() {
                    return n(123)
                }
                constructor() {
                    super(), this.shadowRoot.querySelector(".regalia-postgame-toast-title").innerText = a.tra.get("regalia_ranked_armor_unlocked_title"), this.shadowRoot.querySelector(".regalia-postgame-toast-text").innerText = a.tra.get("regalia_ranked_armor_unlocked_message")
                }
            }
            s.tagName = "lol-regalia-postgame-toast-element";
            var i = s;
            t.default = i
        }, e => {
            "use strict";
            e.exports = '<template id="lol-regalia-template-postgame-toast-element">\r\n  <div class="regalia-postgame-toast">\r\n    <div class="regalia-postgame-toast-img"></div>\r\n    <div class="regalia-postgame-toast-text-container">\r\n      <div class="regalia-postgame-toast-title"></div>\r\n      <div class="regalia-postgame-toast-text"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7),
                i = n(102),
                r = n(124),
                l = s(a),
                o = i(r);
            l.push([e.id, '.regalia-postgame-toast .regalia-postgame-toast-title {\n  font-family: var(--font-display);\n}\n.regalia-postgame-toast .regalia-postgame-toast-text {\n  font-family: var(--font-body);\n}\n.regalia-postgame-toast .regalia-postgame-toast-title,\n.regalia-postgame-toast .regalia-postgame-toast-text {\n  -webkit-user-select: none;\n}\n.regalia-postgame-toast .regalia-postgame-toast-title,\n.regalia-postgame-toast .regalia-postgame-toast-text {\n  font-kerning: normal;\n  -webkit-font-feature-settings: "kern" 1;\n  -webkit-font-smoothing: antialiased;\n}\n.regalia-postgame-toast .regalia-postgame-toast-title {\n  text-transform: uppercase;\n}\n.regalia-postgame-toast .regalia-postgame-toast-title:lang(ko-kr),\n.regalia-postgame-toast .regalia-postgame-toast-title:lang(ja-jp),\n.regalia-postgame-toast .regalia-postgame-toast-title:lang(tr-tr),\n.regalia-postgame-toast .regalia-postgame-toast-title:lang(el-gr),\n.regalia-postgame-toast .regalia-postgame-toast-title:lang(th-th),\n.regalia-postgame-toast .regalia-postgame-toast-title:lang(zh-tw) {\n  text-transform: none;\n}\n.regalia-postgame-toast .regalia-postgame-toast-title {\n  color: #f0e6d2;\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 16px;\n  letter-spacing: 0.075em;\n}\n.regalia-postgame-toast .regalia-postgame-toast-title:lang(ja-jp) {\n  font-size: 13px;\n}\n.regalia-postgame-toast .regalia-postgame-toast-title:lang(ar-ae) {\n  letter-spacing: 0;\n}\n.regalia-postgame-toast .regalia-postgame-toast-text {\n  color: #a09b8c;\n  font-size: 12px;\n  font-weight: normal;\n  line-height: 16px;\n  letter-spacing: 0.025em;\n  -webkit-font-smoothing: subpixel-antialiased;\n}\n.regalia-postgame-toast .regalia-postgame-toast-text:lang(ja-jp) {\n  font-size: 13px;\n}\n.regalia-postgame-toast .regalia-postgame-toast-text:lang(ar-ae) {\n  letter-spacing: 0;\n}\n.regalia-postgame-toast {\n  position: relative;\n  width: 284px;\n  height: 84px;\n  user-select: none;\n  cursor: pointer;\n}\n.regalia-postgame-toast:lang(ar-ae) {\n  direction: rtl;\n}\n.regalia-postgame-toast .regalia-postgame-toast-img {\n  position: absolute;\n  top: -18px;\n  left: -18px;\n  background-image: url(' + o + ");\n  background-size: contain;\n  background-position: right;\n  background-repeat: no-repeat;\n  width: 320px;\n  height: 120px;\n}\n.regalia-postgame-toast .regalia-postgame-toast-img:lang(ar-ae) {\n  transform: scaleX(-1);\n}\n.regalia-postgame-toast .regalia-postgame-toast-text-container {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  height: 100%;\n}\n.regalia-postgame-toast .regalia-postgame-toast-text {\n  padding: 0 95px 0 0;\n}\n.regalia-postgame-toast .regalia-postgame-toast-text:lang(ar-ae) {\n  padding: 0 0 0 95px;\n}\n", "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/regalia/addon/elements/postgame-toast-element/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,gCAAgC;AAClC;AACA;EACE,6BAA6B;AAC/B;AACA;;EAEE,yBAAyB;AAC3B;AACA;;EAEE,oBAAoB;EACpB,uCAAuC;EACvC,mCAAmC;AACrC;AACA;EACE,yBAAyB;AAC3B;AACA;;;;;;EAME,oBAAoB;AACtB;AACA;EACE,cAAc;EACd,eAAe;EACf,gBAAgB;EAChB,iBAAiB;EACjB,uBAAuB;AACzB;AACA;EACE,eAAe;AACjB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,cAAc;EACd,eAAe;EACf,mBAAmB;EACnB,iBAAiB;EACjB,uBAAuB;EACvB,4CAA4C;AAC9C;AACA;EACE,eAAe;AACjB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,kBAAkB;EAClB,YAAY;EACZ,YAAY;EACZ,iBAAiB;EACjB,eAAe;AACjB;AACA;EACE,cAAc;AAChB;AACA;EACE,kBAAkB;EAClB,UAAU;EACV,WAAW;EACX,yDAA+C;EAC/C,wBAAwB;EACxB,0BAA0B;EAC1B,4BAA4B;EAC5B,YAAY;EACZ,aAAa;AACf;AACA;EACE,qBAAqB;AACvB;AACA;EACE,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,6BAA6B;EAC7B,YAAY;AACd;AACA;EACE,mBAAmB;AACrB;AACA;EACE,mBAAmB;AACrB",
                sourcesContent: ['.regalia-postgame-toast .regalia-postgame-toast-title {\n  font-family: var(--font-display);\n}\n.regalia-postgame-toast .regalia-postgame-toast-text {\n  font-family: var(--font-body);\n}\n.regalia-postgame-toast .regalia-postgame-toast-title,\n.regalia-postgame-toast .regalia-postgame-toast-text {\n  -webkit-user-select: none;\n}\n.regalia-postgame-toast .regalia-postgame-toast-title,\n.regalia-postgame-toast .regalia-postgame-toast-text {\n  font-kerning: normal;\n  -webkit-font-feature-settings: "kern" 1;\n  -webkit-font-smoothing: antialiased;\n}\n.regalia-postgame-toast .regalia-postgame-toast-title {\n  text-transform: uppercase;\n}\n.regalia-postgame-toast .regalia-postgame-toast-title:lang(ko-kr),\n.regalia-postgame-toast .regalia-postgame-toast-title:lang(ja-jp),\n.regalia-postgame-toast .regalia-postgame-toast-title:lang(tr-tr),\n.regalia-postgame-toast .regalia-postgame-toast-title:lang(el-gr),\n.regalia-postgame-toast .regalia-postgame-toast-title:lang(th-th),\n.regalia-postgame-toast .regalia-postgame-toast-title:lang(zh-tw) {\n  text-transform: none;\n}\n.regalia-postgame-toast .regalia-postgame-toast-title {\n  color: #f0e6d2;\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 16px;\n  letter-spacing: 0.075em;\n}\n.regalia-postgame-toast .regalia-postgame-toast-title:lang(ja-jp) {\n  font-size: 13px;\n}\n.regalia-postgame-toast .regalia-postgame-toast-title:lang(ar-ae) {\n  letter-spacing: 0;\n}\n.regalia-postgame-toast .regalia-postgame-toast-text {\n  color: #a09b8c;\n  font-size: 12px;\n  font-weight: normal;\n  line-height: 16px;\n  letter-spacing: 0.025em;\n  -webkit-font-smoothing: subpixel-antialiased;\n}\n.regalia-postgame-toast .regalia-postgame-toast-text:lang(ja-jp) {\n  font-size: 13px;\n}\n.regalia-postgame-toast .regalia-postgame-toast-text:lang(ar-ae) {\n  letter-spacing: 0;\n}\n.regalia-postgame-toast {\n  position: relative;\n  width: 284px;\n  height: 84px;\n  user-select: none;\n  cursor: pointer;\n}\n.regalia-postgame-toast:lang(ar-ae) {\n  direction: rtl;\n}\n.regalia-postgame-toast .regalia-postgame-toast-img {\n  position: absolute;\n  top: -18px;\n  left: -18px;\n  background-image: url("images/UnlockToast.png");\n  background-size: contain;\n  background-position: right;\n  background-repeat: no-repeat;\n  width: 320px;\n  height: 120px;\n}\n.regalia-postgame-toast .regalia-postgame-toast-img:lang(ar-ae) {\n  transform: scaleX(-1);\n}\n.regalia-postgame-toast .regalia-postgame-toast-text-container {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  height: 100%;\n}\n.regalia-postgame-toast .regalia-postgame-toast-text {\n  padding: 0 95px 0 0;\n}\n.regalia-postgame-toast .regalia-postgame-toast-text:lang(ar-ae) {\n  padding: 0 0 0 95px;\n}\n'],
                sourceRoot: ""
            }]), e.exports = l
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "UnlockToast.png"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = n(93),
                r = (a = n(112)) && a.__esModule ? a : {
                    default: a
                };
            class l extends r.default {
                templateMarkup() {
                    return n(126)
                }
                stylesheetMarkup() {
                    return n(127)
                }
                static get observedAttributes() {
                    return ["position", "queue", "summoner-id", "is-searched"]
                }
                attributeChangedCallback(e, t, n) {
                    if (super.attributeChangedCallback(e, t, n), "is-searched" === e) this._handleIsSearchedChanged((0, i.attributeValueIsTruthy)(n))
                }
                _handleIsSearchedChanged(e) {
                    e ? this.classList.add("is-searched") : this.classList.remove("is-searched")
                }
                handleSummonerChanged(e) {
                    s.SharedComponentsApi_Private.Regalia.getSessionData().isMePromise(e).then((e => {
                        this._isMe = e, e ? (this._getRegaliaCrestHoverArea().classList.add("picker-enabled"), this._getRegaliaCrestPickerButton().classList.add("picker-enabled")) : (this._getRegaliaCrestHoverArea().classList.remove("picker-enabled"), this._getRegaliaCrestPickerButton().classList.remove("picker-enabled")), this._updateAlertVisibility()
                    }))
                }
                handleBannerChanged() {
                    super.handleBannerChanged(), this.getRegaliaBannerElement().setAttribute("intro-video", "")
                }
                constructor() {
                    super(), this._pickerClickHandler = this._showSummonerIconPicker.bind(this), this._alertHoverHandler = this._hideAlert.bind(this), this._updateAlertVisibility()
                }
                connectedCallback() {
                    super.connectedCallback(), this._getRegaliaCrestPickerButton().addEventListener("click", this._pickerClickHandler), this._getRegaliaCrestHoverArea().addEventListener("mouseover", this._alertHoverHandler)
                }
                disconnectedCallback() {
                    super.disconnectedCallback(), this._getRegaliaCrestPickerButton().removeEventListener("click", this._pickerClickHandler), this._getRegaliaCrestHoverArea().removeEventListener("mouseover", this._alertHoverHandler)
                }
                _hideAlert() {
                    s.SharedComponentsApi_Private.Regalia.setShowProfileCrestPickerAlert(!1), this._updateAlertVisibility()
                }
                _updateAlertVisibility() {
                    const e = this._getRegaliaCrestAlert();
                    if (e) {
                        const t = s.SharedComponentsApi_Private.Regalia.getShowProfileCrestPickerAlert();
                        this._isMe && t ? e.classList.add("alert-visible") : e.classList.remove("alert-visible")
                    }
                }
                _showSummonerIconPicker() {
                    s.lodash.isNil(this._isMe) || this._isMe && (s.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-profile-summoner-big-click.ogg"), s.SharedComponentsApi.getApi_SummonerIconPicker().show(), s.Telemetry.sendCustomData("profile-overview-events", {
                        event: "show-summoner-icon-picker"
                    }))
                }
                _getRegaliaCrestHoverArea() {
                    return this.shadowRoot.querySelector(".regalia-profile-crest-hover-area")
                }
                _getRegaliaCrestPickerButton() {
                    return this.shadowRoot.querySelector(".regalia-crest-picker-button")
                }
                _getRegaliaCrestAlert() {
                    return this.shadowRoot.querySelector(".regalia-crest-alert-icon")
                }
            }
            l.tagName = "lol-regalia-profile-element";
            var o = l;
            t.default = o
        }, e => {
            "use strict";
            e.exports = '\x3c!--\r\n  This is the base (wrapper) template for the shadow dom of the element.\r\n--\x3e\r\n<template id="lol-regalia-template-profile-element">\r\n  <lol-regalia-banner-element class="regalia-profile-banner-backdrop"></lol-regalia-banner-element>\r\n  <div class=\'regalia-profile-element-container\'>\r\n    <div class="regalia-profile-crest-hover-area">\r\n      <div class="regalia-crest-picker-preloader"></div>\r\n      \x3c!-- TODO if we want to show animations, then we need to figure out how to make the crest wait until\r\n            after the loading spinner is done spinning --\x3e\r\n      <lol-regalia-crest-element class="regalia-profile-crest-element" crest-sizing="huge" animations="false">\r\n      </lol-regalia-crest-element>\r\n      <div class="regalia-crest-picker-button"></div>\r\n      <div class="regalia-crest-alert-icon"></div>\r\n    </div>\r\n    <div class="content-wrapper">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7),
                i = n(102),
                r = n(128),
                l = n(129),
                o = s(a),
                c = i(r),
                d = i(l);
            o.push([e.id, ":host .regalia-profile-banner-backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  margin-left: 5px;\n  margin-right: 5px;\n  --regalia-banner-asset-static-top: -110px;\n}\n:host(.is-searched) .regalia-profile-banner-backdrop {\n  --regalia-banner-asset-static-top: -30px;\n}\n:host .regalia-profile-element-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  margin-left: 5px;\n  margin-right: 5px;\n  display: flex;\n  justify-content: center;\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area {\n  display: flex;\n  position: relative;\n  width: fit-content;\n  height: fit-content;\n  top: 280px;\n  pointer-events: none;\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area.picker-enabled {\n  cursor: pointer;\n  pointer-events: auto;\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-picker-preloader {\n  display: none;\n  background-image: url(" + c + "), url(" + d + ");\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-picker-button {\n  width: 192px;\n  height: 192px;\n  border-radius: 50%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  background-size: contain;\n  background-repeat: no-repeat;\n  pointer-events: none;\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-picker-button.picker-enabled {\n  cursor: pointer;\n  pointer-events: auto;\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area:hover .regalia-crest-picker-button {\n  background-image: url(" + c + ");\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area:hover .regalia-crest-picker-button:active {\n  background-image: url(" + d + ");\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-alert-icon {\n  display: none;\n  position: absolute;\n  right: -15px;\n  top: -15px;\n  background-color: #c89b3c;\n  border-radius: 50%;\n  width: 10px;\n  height: 10px;\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-alert-icon.alert-visible {\n  display: block;\n}\n:host .regalia-profile-element-container .regalia-profile-crest-element {\n  width: 140px;\n  height: 140px;\n}\n:host .regalia-profile-element-container .content-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n}\n", "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/regalia/addon/elements/profile-element/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,gBAAgB;EAChB,iBAAiB;EACjB,yCAAyC;AAC3C;AACA;EACE,wCAAwC;AAC1C;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,gBAAgB;EAChB,iBAAiB;EACjB,aAAa;EACb,uBAAuB;AACzB;AACA;EACE,aAAa;EACb,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,UAAU;EACV,oBAAoB;AACtB;AACA;EACE,eAAe;EACf,oBAAoB;AACtB;AACA;EACE,aAAa;EACb,kGAA4F;AAC9F;AACA;EACE,YAAY;EACZ,aAAa;EACb,kBAAkB;EAClB,kBAAkB;EAClB,SAAS;EACT,QAAQ;EACR,gCAAgC;EAChC,wBAAwB;EACxB,4BAA4B;EAC5B,oBAAoB;AACtB;AACA;EACE,eAAe;EACf,oBAAoB;AACtB;AACA;EACE,yDAAsD;AACxD;AACA;EACE,yDAAsD;AACxD;AACA;EACE,aAAa;EACb,kBAAkB;EAClB,YAAY;EACZ,UAAU;EACV,yBAAyB;EACzB,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;AACA;EACE,cAAc;AAChB;AACA;EACE,YAAY;EACZ,aAAa;AACf;AACA;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;EACT,oBAAoB;AACtB",
                sourcesContent: [':host .regalia-profile-banner-backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  margin-left: 5px;\n  margin-right: 5px;\n  --regalia-banner-asset-static-top: -110px;\n}\n:host(.is-searched) .regalia-profile-banner-backdrop {\n  --regalia-banner-asset-static-top: -30px;\n}\n:host .regalia-profile-element-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  margin-left: 5px;\n  margin-right: 5px;\n  display: flex;\n  justify-content: center;\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area {\n  display: flex;\n  position: relative;\n  width: fit-content;\n  height: fit-content;\n  top: 280px;\n  pointer-events: none;\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area.picker-enabled {\n  cursor: pointer;\n  pointer-events: auto;\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-picker-preloader {\n  display: none;\n  background-image: url("images/EditSummoner_Hover.png"), url("images/EditSummoner_Click.png");\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-picker-button {\n  width: 192px;\n  height: 192px;\n  border-radius: 50%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  background-size: contain;\n  background-repeat: no-repeat;\n  pointer-events: none;\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-picker-button.picker-enabled {\n  cursor: pointer;\n  pointer-events: auto;\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area:hover .regalia-crest-picker-button {\n  background-image: url("images/EditSummoner_Hover.png");\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area:hover .regalia-crest-picker-button:active {\n  background-image: url("images/EditSummoner_Click.png");\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-alert-icon {\n  display: none;\n  position: absolute;\n  right: -15px;\n  top: -15px;\n  background-color: #c89b3c;\n  border-radius: 50%;\n  width: 10px;\n  height: 10px;\n}\n:host .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-alert-icon.alert-visible {\n  display: block;\n}\n:host .regalia-profile-element-container .regalia-profile-crest-element {\n  width: 140px;\n  height: 140px;\n}\n:host .regalia-profile-element-container .content-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n}\n'],
                sourceRoot: ""
            }]), e.exports = o
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "EditSummoner_Hover.png"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "EditSummoner_Click.png"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            class s extends a.webComponents.ShadowElement {
                templateMarkup() {
                    return n(131)
                }
                stylesheetMarkup() {
                    return n(132)
                }
                static get observedAttributes() {
                    return ["animations", "banner-rank", "banner-type", "animation-config", "intro-sound", "intro-video"]
                }
                attributeChangedCallback(e, t, n) {
                    switch (super.attributeChangedCallback(e, t, n), e) {
                        case "animations":
                        case "banner-rank":
                        case "banner-type":
                        case "animation-config":
                        case "intro-sound":
                        case "intro-video":
                            this.getRegaliaBannerElement().setAttribute(e, n)
                    }
                }
                getRegaliaBannerElement() {
                    return this.shadowRoot.querySelector("lol-regalia-banner-element")
                }
            }
            s.tagName = "lol-regalia-ranked-banner-element";
            var i = s;
            t.default = i
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <lol-regalia-banner-element></lol-regalia-banner-element>\r\n  <div class="regalia-ranked-banner-content-container">\r\n    <div class="content-wrapper">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7)(a);
            s.push([e.id, ":host {\n  --regalia-ranked-banner-banner-display: block;\n  --regalia-ranked-banner-banner-mask-image: none;\n  --regalia-ranked-banner-banner-opacity: 1;\n}\n:host {\n  position: relative;\n  width: 204px;\n  height: 600px;\n}\n:host lol-regalia-banner-element {\n  --regalia-banner-asset-static-top: -8px;\n  display: var(--regalia-ranked-banner-banner-display);\n  -webkit-mask-image: var(--regalia-ranked-banner-banner-mask-image);\n  opacity: var(--regalia-ranked-banner-banner-opacity);\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n:host .regalia-ranked-banner-content-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n}\n:host .regalia-ranked-banner-content-container .content-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n", "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/regalia/addon/elements/ranked-banner-element/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,6CAA6C;EAC7C,+CAA+C;EAC/C,yCAAyC;AAC3C;AACA;EACE,kBAAkB;EAClB,YAAY;EACZ,aAAa;AACf;AACA;EACE,uCAAuC;EACvC,oDAAoD;EACpD,kEAAkE;EAClE,oDAAoD;EACpD,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,uBAAuB;AACzB;AACA;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;AACX",
                sourcesContent: [":host {\n  --regalia-ranked-banner-banner-display: block;\n  --regalia-ranked-banner-banner-mask-image: none;\n  --regalia-ranked-banner-banner-opacity: 1;\n}\n:host {\n  position: relative;\n  width: 204px;\n  height: 600px;\n}\n:host lol-regalia-banner-element {\n  --regalia-banner-asset-static-top: -8px;\n  display: var(--regalia-ranked-banner-banner-display);\n  -webkit-mask-image: var(--regalia-ranked-banner-banner-mask-image);\n  opacity: var(--regalia-ranked-banner-banner-opacity);\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n:host .regalia-ranked-banner-content-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n}\n:host .regalia-ranked-banner-content-container .content-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n"],
                sourceRoot: ""
            }]), e.exports = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = n(93);
            class i extends a.webComponents.ShadowElement {
                templateMarkup() {
                    return n(134)
                }
                stylesheetMarkup() {
                    return n(135)
                }
                constructor() {
                    super()
                }
                static get observedAttributes() {
                    return ["ranked-tier"]
                }
                attributeChangedCallback(e, t, n) {
                    if (super.attributeChangedCallback(e, t, n), "ranked-tier" === e) this._updateRankedTier(n)
                }
                _updateRankedTier(e) {
                    let t = "unranked";
                    (0, s.attributeValueIsSet)(e) && "string" == typeof e && (t = e.toLowerCase()), this._setRankedTierAttr(t)
                }
                _setRankedTierAttr(e) {
                    const t = this.shadowRoot.querySelector(".regalia-emblem");
                    t && t.setAttribute("ranked-tier", e)
                }
                connectedCallback() {
                    super.connectedCallback()
                }
                disconnectedCallback() {
                    super.disconnectedCallback()
                }
            }
            i.tagName = "lol-regalia-emblem-element";
            var r = i;
            t.default = r
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <div class="regalia-emblem-container">\r\n    <div class="regalia-emblem"></div>\r\n  </div>\r\n</template>\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7),
                i = n(102),
                r = n(136),
                l = n(137),
                o = n(138),
                c = n(139),
                d = n(140),
                u = n(141),
                m = n(142),
                p = n(143),
                h = n(144),
                g = n(145),
                f = n(146),
                _ = s(a),
                A = i(r),
                b = i(l),
                v = i(o),
                E = i(c),
                y = i(d),
                C = i(u),
                k = i(m),
                x = i(p),
                T = i(h),
                w = i(g),
                S = i(f);
            _.push([e.id, ":host {\n  --regalia-emblem-unranked: url(" + A + ");\n  --regalia-emblem-iron: url(" + b + ");\n  --regalia-emblem-bronze: url(" + v + ");\n  --regalia-emblem-silver: url(" + E + ");\n  --regalia-emblem-gold: url(" + y + ");\n  --regalia-emblem-platinum: url(" + C + ");\n  --regalia-emblem-emerald: url(" + k + ");\n  --regalia-emblem-diamond: url(" + x + ");\n  --regalia-emblem-master: url(" + T + ");\n  --regalia-emblem-grandmaster: url(" + w + ");\n  --regalia-emblem-challenger: url(" + S + ');\n}\n:host .regalia-emblem-container {\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n}\n:host .regalia-emblem-container .regalia-emblem {\n  width: 100%;\n  height: 100%;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="unranked"] {\n  background-image: var(--regalia-emblem-unranked);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="iron"] {\n  background-image: var(--regalia-emblem-iron);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="bronze"] {\n  background-image: var(--regalia-emblem-bronze);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="silver"] {\n  background-image: var(--regalia-emblem-silver);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="gold"] {\n  background-image: var(--regalia-emblem-gold);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="platinum"] {\n  background-image: var(--regalia-emblem-platinum);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="emerald"] {\n  background-image: var(--regalia-emblem-emerald);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="diamond"] {\n  background-image: var(--regalia-emblem-diamond);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="master"] {\n  background-image: var(--regalia-emblem-master);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="grandmaster"] {\n  background-image: var(--regalia-emblem-grandmaster);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="challenger"] {\n  background-image: var(--regalia-emblem-challenger);\n}\n', "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/regalia/addon/elements/emblem-element/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,kEAAqD;EACrD,8DAA6C;EAC7C,gEAAiD;EACjD,gEAAiD;EACjD,8DAA6C;EAC7C,kEAAqD;EACrD,iEAAmD;EACnD,iEAAmD;EACnD,gEAAiD;EACjD,qEAA2D;EAC3D,qEAAyD;AAC3D;AACA;EACE,aAAa;EACb,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,uBAAuB;AACzB;AACA;EACE,WAAW;EACX,YAAY;EACZ,wBAAwB;EACxB,4BAA4B;EAC5B,2BAA2B;AAC7B;AACA;EACE,gDAAgD;AAClD;AACA;EACE,4CAA4C;AAC9C;AACA;EACE,8CAA8C;AAChD;AACA;EACE,8CAA8C;AAChD;AACA;EACE,4CAA4C;AAC9C;AACA;EACE,gDAAgD;AAClD;AACA;EACE,+CAA+C;AACjD;AACA;EACE,+CAA+C;AACjD;AACA;EACE,8CAA8C;AAChD;AACA;EACE,mDAAmD;AACrD;AACA;EACE,kDAAkD;AACpD",
                sourcesContent: [':host {\n  --regalia-emblem-unranked: url("images/unranked.png");\n  --regalia-emblem-iron: url("images/iron.png");\n  --regalia-emblem-bronze: url("images/bronze.png");\n  --regalia-emblem-silver: url("images/silver.png");\n  --regalia-emblem-gold: url("images/gold.png");\n  --regalia-emblem-platinum: url("images/platinum.png");\n  --regalia-emblem-emerald: url("images/emerald.png");\n  --regalia-emblem-diamond: url("images/diamond.png");\n  --regalia-emblem-master: url("images/master.png");\n  --regalia-emblem-grandmaster: url("images/grandmaster.png");\n  --regalia-emblem-challenger: url("images/challenger.png");\n}\n:host .regalia-emblem-container {\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n}\n:host .regalia-emblem-container .regalia-emblem {\n  width: 100%;\n  height: 100%;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="unranked"] {\n  background-image: var(--regalia-emblem-unranked);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="iron"] {\n  background-image: var(--regalia-emblem-iron);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="bronze"] {\n  background-image: var(--regalia-emblem-bronze);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="silver"] {\n  background-image: var(--regalia-emblem-silver);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="gold"] {\n  background-image: var(--regalia-emblem-gold);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="platinum"] {\n  background-image: var(--regalia-emblem-platinum);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="emerald"] {\n  background-image: var(--regalia-emblem-emerald);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="diamond"] {\n  background-image: var(--regalia-emblem-diamond);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="master"] {\n  background-image: var(--regalia-emblem-master);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="grandmaster"] {\n  background-image: var(--regalia-emblem-grandmaster);\n}\n:host .regalia-emblem-container .regalia-emblem[ranked-tier="challenger"] {\n  background-image: var(--regalia-emblem-challenger);\n}\n'],
                sourceRoot: ""
            }]), e.exports = _
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "unranked.png"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "iron.png"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "bronze.png"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "silver.png"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "gold.png"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "platinum.png"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "emerald.png"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "diamond.png"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "master.png"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "grandmaster.png"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "challenger.png"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = n(114),
                r = (a = n(148)) && a.__esModule ? a : {
                    default: a
                },
                l = n(93),
                o = n(95),
                c = n(149);
            const d = "/fe/lol-static-assets/images/empty-icon.png",
                u = "/lol-platform-config/v1/namespaces/Challenges/ClientState";
            class m extends s.webComponents.ShadowElement {
                templateMarkup() {
                    return n(150)
                }
                stylesheetMarkup() {
                    return n(151)
                }
                constructor() {
                    super(!0), this._binding = s.dataBinding.bindTo(s.socket), this._hasIntroPlayedBefore = !1, this._hasRankWingAnimationPlayedBefore = !1, this._challengesEnabled = !1, this._lowSpecMode = !1, s.SharedComponentsApi.getApi_UXSettings().addObserver((e => {
                        this._lowSpecMode = !e.largeAreaAnimationsEnabled, this._updateCrestType(this.getAttribute("crest-type"))
                    })), this._leagueTierNames = s.SharedComponentsApi.getApi_LeagueTierNames(), this._stateMachineParameterChanged = this._onStateMachineParameterChanged.bind(this)
                }
                connectedCallback() {
                    super.connectedCallback(), this._binding.addObserver(u, this, this._handleChallengesEnabled.bind(this)), this._renderCrest(!0)
                }
                disconnectedCallback() {
                    super.disconnectedCallback(), this._binding.removeObserver(u, this)
                }
                static get observedAttributes() {
                    return ["crest-sizing", "crest-type", "crystal-level", "hide-crest-border", "hide-crest", "hide-crystal", "profile-icon", "profile-icon-url", "summoner-level", "ranked-tier", "ranked-division", "animations", "hide-wing-intro", "intro-video", "intro-sound", "voice-puuid", "prestige-crest-id"]
                }
                attributeChangedCallback(e, t, n) {
                    switch (super.attributeChangedCallback(e, t, n), e) {
                        case "crest-sizing":
                            this._updateCrestSizing(n), this._updateCrystalSizing(n);
                            break;
                        case "crest-type":
                            this._updateCrestType(n);
                            break;
                        case "crystal-level":
                            this._updateCrystalLevel(n);
                            break;
                        case "hide-crest-border":
                            this._updateHideCrestBorder(n);
                            break;
                        case "hide-crest":
                            this._updateHideCrest(n);
                            break;
                        case "hide-crystal":
                            this._updateHideCrystal(n);
                            break;
                        case "profile-icon":
                            this._updateProfileIcon(n);
                            break;
                        case "profile-icon-url":
                            this._updateProfileIconUrl(n);
                            break;
                        case "summoner-level":
                            this._updateSummonerLevel(n);
                            break;
                        case "prestige-crest-id":
                            this._updatePrestigeCrest(n);
                            break;
                        case "ranked-tier":
                        case "ranked-division":
                            this._updateRankedCrest(n);
                            break;
                        case "hide-wing-intro":
                            this._handleDisableWingIntroAnimation(n);
                            break;
                        case "intro-video":
                            this._updateIntroVideo(n);
                            break;
                        case "intro-sound":
                            this._updateIntroSound(n);
                            break;
                        case "animations":
                            this._renderCrest(!0);
                            break;
                        case "voice-puuid":
                            this._updateVoicePuuid(n)
                    }
                }
                _onStateMachineParameterChanged(e, t, n) {
                    const a = "state" === e && "intro-overlap" === n;
                    if ("state" === e && "intro" === n) {
                        const e = this._introSound;
                        e && this._playSound(e)
                    }
                    a && (this._hasIntroPlayedBefore = !0);
                    const s = "state" === e && "rank-wing-crystal" === n;
                    "state" === e && "rank-wing" === n && this._playRankedWingAnimation(), s && (this._hasRankWingAnimationPlayedBefore = !0)
                }
                _renderCrest(e) {
                    const t = this._getStateMachine();
                    if (!t) return;
                    if (!this.isConnected) return;
                    t.unsubscribeParameterChanged(this._stateMachineParameterChanged), t.subscribeParameterChanged(this._stateMachineParameterChanged);
                    const n = this._isAnimated();
                    t.setAttribute("animated", n);
                    const a = this._showIntro();
                    t.setAttribute("show-intro", a);
                    const s = this._showRankWingAnimation();
                    t.setAttribute("show-wing-intro", s);
                    const i = this._isRanked();
                    t.setAttribute("is-ranked", i), this._updateHideRankedWingCrystal();
                    ("initializing" === t.getAttribute("state") || e || n) && t.setAttribute("state", "preloading")
                }
                _updateIntroVideo(e) {
                    this._getIntroVideoElement().setAttribute("src", e), this._renderCrest(!0)
                }
                _updateIntroSound(e) {
                    this._introSound = e
                }
                _handleDisableWingIntroAnimation(e) {
                    this._getStateMachine().setAttribute("show-wing-intro", !e);
                    const t = this._getRankedWingCrystalVideoElement();
                    t && t.setAttribute("data-type", "")
                }
                _updateHideCrestBorder(e) {
                    this._hideCrestBorder = (0, l.attributeValueIsTruthy)(e), this._updateCrestType(this.getAttribute("crest-type"))
                }
                _updateHideCrystal(e) {
                    const t = this._getCrystalRootElement();
                    t && ((0, l.attributeValueIsTruthy)(e) ? t.classList.add("hidden") : t.classList.remove("hidden"))
                }
                _updateCrystalLevel(e) {
                    const t = this._getCrystalRootElement();
                    t && t.setAttribute("crystal-level", e)
                }
                _updateHideCrest(e) {
                    const t = this._getCrestRootElement();
                    t && ((e = (0, l.attributeValueIsTruthy)(e)) ? t.classList.add("hidden") : t.classList.remove("hidden"))
                }
                _updateRankedWingCrystal() {
                    const e = this._getRankedWingCrystalVideoElement(),
                        t = this.getAttribute("ranked-tier"),
                        n = c.CREST_RANKED_WING_CRYSTAL_VIDEO[t] || "";
                    e && n && e.setAttribute("src", n)
                }
                _updateHideRankedWingCrystal() {
                    const e = this._getRankedWingCrystalVideoElement(),
                        t = this._isAnimated(),
                        n = this._isRanked();
                    e && (n && t ? e.classList.remove("hidden") : e.classList.add("hidden"))
                }
                _updateRankedCrestAnimationPath() {
                    const e = this._isRanked(),
                        t = this._isAnimated(),
                        n = this._getRankedCrestWingElement(),
                        a = this.getAttribute("ranked-tier"),
                        s = c.CREST_RANKED_WING_LOTTIE_ANIMATION_PATH[a] || "";
                    if (e && n && t) {
                        n.getAttribute("src") !== s && n.setAttribute("src", s)
                    }
                }
                _updateRankedCrest() {
                    const e = this.getAttribute("crest-type"),
                        t = this.getAttribute("ranked-tier"),
                        n = this.getAttribute("ranked-division"),
                        a = this._getRankedPlateElement(),
                        s = this._getRankedBorderContainerElement(),
                        i = this._getRankedPlateTextElement();
                    if (this._updateRankedCrestAnimationPath(), this._updateRankedWingCrystal(), a && s && t && i) {
                        if (e === o.CREST_TYPES.RANKED) {
                            const e = c.CREST_RANKED_WING_PLATE_IMAGE[t],
                                r = c.CREST_RANKED_WING_IMAGE[t],
                                l = this._isAnimated() ? e : r;
                            s.style.backgroundImage = this._url(l);
                            const o = c.CREST_RANKED_TIER_IMAGE[t];
                            a.style.backgroundImage = this._url(o), this._leagueTierNames && n && (i.innerHTML = this._leagueTierNames.getDivisionName(n))
                        } else a.style.backgroundImage = "", s.style.backgroundImage = "", i.innerHTML = "";
                        this._renderCrest(!0)
                    }
                }
                _updateProfileIcon(e) {
                    const t = this._getSummonerIcon();
                    if (!t) return;
                    if ((0, l.attributeValueNotSet)(e)) return void(t.style.backgroundImage = this._url(d));
                    const n = parseInt(e);
                    n >= 0 ? s.SharedComponentsApi_Private.Regalia.getProfileIcons().getIconUrlPromise(n).then((e => {
                        t.style.backgroundImage = this._url(e)
                    })) : t.style.backgroundImage = this._url(d)
                }
                _updateProfileIconUrl(e) {
                    const t = this._getSummonerIcon();
                    (0, l.attributeValueNotSet)(e) ? t.style.backgroundImage = this._url(d): t.style.backgroundImage = this._url(e)
                }
                _updateCrestSizing(e) {
                    const t = this._getCrestRootElement(),
                        n = this._getRingV2Element();
                    if ((0, l.attributeValueNotSet)(e) && t) return;
                    const a = "small";
                    e === a && (t.setAttribute("size", a), n.setAttribute("size", a));
                    const s = "medium";
                    e === s && (t.setAttribute("size", s), n.setAttribute("size", s))
                }
                _updateCrystalSizing(e) {
                    const t = "small-crystal",
                        n = "medium-crystal",
                        a = this._getCrystalRootElement();
                    if ((0, l.attributeValueNotSet)(e)) return a.classList.remove(t), void a.classList.remove(n);
                    "small" === e && (a.classList.remove(n), a.classList.add(t));
                    "medium" === e && (a.classList.remove(t), a.classList.add(n))
                }
                _updateCrestType(e) {
                    this._crestType = e;
                    const t = this._getCrestRootElement();
                    (0, l.attributeValueNotSet)(e) || (this._hideCrestBorder && (e = "none"), t.setAttribute("data-type", e), this._updateRankedCrest())
                }
                _updatePrestigeCrest(e) {
                    const t = "prestige-crest-id";
                    (0, l.attributeValueNotSet)(e) && this._setLevelRingAttribute(t, ""), this._setLevelRingAttribute(t, e)
                }
                _updateSummonerLevel(e) {
                    if ((0, l.attributeValueNotSet)(e)) return;
                    const t = "level";
                    e === o.REGALIA_FALLBACK_SUMMONER_LEVEL ? this._setLevelRingAttribute(t, "") : this._setLevelRingAttribute(t, e)
                }
                _updateVoicePuuid(e) {
                    const t = this._getVoiceHaloElement();
                    t && ((0, l.attributeValueNotSet)(e) ? t.removeAttribute("puuid") : t.setAttribute("puuid", e))
                }
                _handleChallengesEnabled(e) {
                    this._challengesEnabled = s.SharedChallengesConstants.getFlagValueOrDefault(s.SharedChallengesConstants.CHALLENGE_FLAG_NAMES.CLIENT_STATE, e) === i.CHALLENGES_CLIENT_STATES.ENABLED;
                    const t = this._getCrystalContainerRootElement();
                    t && (this._challengesEnabled ? t.classList.remove("hidden") : t.classList.add("hidden"));
                    const n = this.shadowRoot.querySelector(".ring-v1"),
                        a = this.shadowRoot.querySelector(".ring-v2");
                    n && a && (this._challengesEnabled ? (n.classList.add("hidden"), a.classList.remove("hidden")) : (n.classList.remove("hidden"), a.classList.add("hidden")))
                }
                _isAnimated() {
                    if (!0 === this._overrideDisableAnimations) return !1;
                    return (0, l.attributeValueIsTruthy)(this.getAttribute("animations")) && !this._lowSpecMode
                }
                _isRanked() {
                    return this.getAttribute("crest-type") === o.CREST_TYPES.RANKED
                }
                _getCrestRootElement() {
                    return this.shadowRoot.querySelector(".lol-regalia-crest-root")
                }
                _getCrystalRootElement() {
                    return this.shadowRoot.querySelector(".regalia-crystal-element")
                }
                _getCrystalContainerRootElement() {
                    return this.shadowRoot.querySelector(".regalia-crystal-element-container")
                }
                _getSummonerIcon() {
                    return this.shadowRoot.querySelector("div.lol-regalia-summoner-icon")
                }
                _getRankedBorderContainerElement() {
                    return this.shadowRoot.querySelector(".lol-regalia-ranked-border-container")
                }
                _getRankedPlateElement() {
                    return this.shadowRoot.querySelector(".lol-regalia-rank-division-container")
                }
                _getRankedCrestWingElement() {
                    return this.shadowRoot.querySelector(".regalia-crest-wing")
                }
                _getRankedPlateTextElement() {
                    return this.shadowRoot.querySelector(".lol-regalia-rank-division-text")
                }
                _getRingV2Element() {
                    return this.shadowRoot.querySelector(".ring-v2")
                }
                _setLevelRingAttribute(e, t) {
                    const n = this.shadowRoot.querySelector(".ring-v1"),
                        a = this.shadowRoot.querySelector(".ring-v2");
                    n && n.setAttribute(e, t), a && a.setAttribute(e, t)
                }
                _getVoiceHaloElement() {
                    return this.shadowRoot.querySelector("lol-parties-comm-halo")
                }
                _getStateMachine() {
                    return this.shadowRoot.querySelector(".regalia-crest-state-machine")
                }
                _getIntroVideoElement() {
                    return this.shadowRoot.querySelector(".regalia-crest-intro")
                }
                _getRankedWingCrystalVideoElement() {
                    return this.shadowRoot.querySelector(".regalia-crest-idle")
                }
                _showIntro() {
                    const e = this._isAnimated(),
                        t = this._hasIntroPlayedBefore,
                        n = (0, l.attributeValueIsSet)(this.getAttribute("intro-video"));
                    return e && n && !t
                }
                _showRankWingAnimation() {
                    const e = this._isAnimated(),
                        t = this._hasRankWingAnimationPlayedBefore,
                        n = (0, l.attributeValueIsSet)(this.getAttribute("hide-wing-intro"));
                    return e && !t && !n
                }
                _url(e) {
                    return `url(${e})`
                }
                _playSound(e) {
                    !1 !== e && r.default.playAudio(e)
                }
                _playRankedWingAnimation() {
                    const e = this._getRankedCrestWingElement();
                    e && e.animation && (e.onAnimationStart = () => {
                        const e = this.getAttribute("ranked-tier"),
                            t = c.CREST_RANKED_WING_SFX[e] || "",
                            n = Object.entries(r.default.soundMap).filter((([e, t]) => !!e.startsWith("/fe/lol-static-assets/sounds/challenges/sfx-mini-wings-") && t.isPlaying()));
                        (!n || n && 0 === n.length) && this._playSound(t)
                    }, e.animation.stop(), e.animation.play())
                }
            }
            m.tagName = "lol-regalia-crest-v2-element";
            var p = m;
            t.default = p
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = {
                uiChannel: n(1).Audio.getChannel("sfx-ui"),
                soundMap: {},
                playAudio(e) {
                    let t = this.soundMap[e];
                    t || (t = this.uiChannel.createSound(e), this.soundMap[e] = t), t.isPlaying() && t.stop(), t.play()
                }
            };
            t.default = a
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.CREST_USER_TYPES = t.CREST_RANKED_WING_SFX = t.CREST_RANKED_WING_PLATE_IMAGE = t.CREST_RANKED_WING_LOTTIE_ANIMATION_PATH = t.CREST_RANKED_WING_IMAGE = t.CREST_RANKED_WING_CRYSTAL_VIDEO = t.CREST_RANKED_TIER_IMAGE = void 0;
            t.CREST_RANKED_WING_CRYSTAL_VIDEO = {
                IRON: "/fe/lol-static-assets/videos/ranked/emblem-wings-magic-iron.webm",
                BRONZE: "/fe/lol-static-assets/videos/ranked/emblem-wings-magic-bronze.webm",
                SILVER: "/fe/lol-static-assets/videos/ranked/emblem-wings-magic-silver.webm",
                GOLD: "/fe/lol-static-assets/videos/ranked/emblem-wings-magic-gold.webm",
                PLATINUM: "/fe/lol-static-assets/videos/ranked/emblem-wings-magic-platinum.webm",
                EMERALD: "/fe/lol-static-assets/videos/ranked/emblem-wings-magic-emerald.webm",
                DIAMOND: "/fe/lol-static-assets/videos/ranked/emblem-wings-magic-diamond.webm",
                MASTER: "/fe/lol-static-assets/videos/ranked/emblem-wings-magic-master.webm",
                GRANDMASTER: "/fe/lol-static-assets/videos/ranked/emblem-wings-magic-grandmaster.webm",
                CHALLENGER: "/fe/lol-static-assets/videos/ranked/emblem-wings-magic-challenger.webm"
            };
            t.CREST_RANKED_WING_IMAGE = {
                IRON: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_iron.png",
                BRONZE: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_bronze.png",
                SILVER: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_silver.png",
                GOLD: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_gold.png",
                PLATINUM: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_platinum.png",
                EMERALD: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_emerald.png",
                DIAMOND: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_diamond.png",
                MASTER: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_master.png",
                GRANDMASTER: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_grandmaster.png",
                CHALLENGER: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_challenger.png"
            };
            t.CREST_RANKED_WING_PLATE_IMAGE = {
                IRON: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_iron_plate.png",
                BRONZE: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_bronze_plate.png",
                SILVER: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_silver_plate.png",
                GOLD: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_gold_plate.png",
                PLATINUM: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_platinum_plate.png",
                EMERALD: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_emerald_plate.png",
                DIAMOND: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_diamond_plate.png",
                MASTER: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_master_plate.png",
                GRANDMASTER: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_grandmaster_plate.png",
                CHALLENGER: "/fe/lol-static-assets/images/ranked-emblem/wings/wings_challenger_plate.png"
            };
            t.CREST_RANKED_TIER_IMAGE = {
                IRON: "/fe/lol-static-assets/images/ranked-emblem/tier/iron-plate.png",
                BRONZE: "/fe/lol-static-assets/images/ranked-emblem/tier/bronze-plate.png",
                SILVER: "/fe/lol-static-assets/images/ranked-emblem/tier/silver-plate.png",
                GOLD: "/fe/lol-static-assets/images/ranked-emblem/tier/gold-plate.png",
                PLATINUM: "/fe/lol-static-assets/images/ranked-emblem/tier/platinum-plate.png",
                EMERALD: "/fe/lol-static-assets/images/ranked-emblem/tier/emerald-plate.png",
                DIAMOND: "/fe/lol-static-assets/images/ranked-emblem/tier/diamond-plate.png"
            };
            t.CREST_RANKED_WING_LOTTIE_ANIMATION_PATH = {
                IRON: "/fe/lol-static-assets/lottie/ranked/ranked-wing-iron.json",
                BRONZE: "/fe/lol-static-assets/lottie/ranked/ranked-wing-bronze.json",
                SILVER: "/fe/lol-static-assets/lottie/ranked/ranked-wing-silver.json",
                GOLD: "/fe/lol-static-assets/lottie/ranked/ranked-wing-gold.json",
                PLATINUM: "/fe/lol-static-assets/lottie/ranked/ranked-wing-platinum.json",
                EMERALD: "/fe/lol-static-assets/lottie/ranked/ranked-wing-emerald.json",
                DIAMOND: "/fe/lol-static-assets/lottie/ranked/ranked-wing-diamond.json",
                MASTER: "/fe/lol-static-assets/lottie/ranked/ranked-wing-master.json",
                GRANDMASTER: "/fe/lol-static-assets/lottie/ranked/ranked-wing-grandmaster.json",
                CHALLENGER: "/fe/lol-static-assets/lottie/ranked/ranked-wing-challenger.json"
            };
            t.CREST_RANKED_WING_SFX = {
                IRON: "/fe/lol-static-assets/sounds/challenges/sfx-mini-wings-iron.ogg",
                BRONZE: "/fe/lol-static-assets/sounds/challenges/sfx-mini-wings-bronze.ogg",
                SILVER: "/fe/lol-static-assets/sounds/challenges/sfx-mini-wings-silver.ogg",
                GOLD: "/fe/lol-static-assets/sounds/challenges/sfx-mini-wings-gold.ogg",
                PLATINUM: "/fe/lol-static-assets/sounds/challenges/sfx-mini-wings-platinum.ogg",
                EMERALD: "/fe/lol-static-assets/sounds/challenges/sfx-mini-wings-emerald.ogg",
                DIAMOND: "/fe/lol-static-assets/sounds/challenges/sfx-mini-wings-diamond.ogg",
                MASTER: "/fe/lol-static-assets/sounds/challenges/sfx-mini-wings-master.ogg",
                GRANDMASTER: "/fe/lol-static-assets/sounds/challenges/sfx-mini-wings-grandmaster.ogg",
                CHALLENGER: "/fe/lol-static-assets/sounds/challenges/sfx-mini-wings-challenger.ogg"
            };
            t.CREST_USER_TYPES = {
                CURRENT_PLAYER: "current-player",
                OTHER_PLAYER: "other-player"
            }
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <div class="lol-regalia-crest-root" data-type="">\r\n    <uikit-state-machine class="regalia-crest-state-machine" state="initializing">\r\n      <uikit-states>\r\n        \x3c!-- Initially idle. Once we set up the DOM elements (e.g. set the banner image src) then we will change\r\n            the state to "preloading".\r\n        --\x3e\r\n        <uikit-state name="initializing" synchronous></uikit-state>\r\n\r\n        <uikit-state name="preloading" synchronous> \x3c!-- Preload video --\x3e\r\n          <uikit-transition next-state="intro">\r\n            <uikit-condition-parameter name="show-intro" value="true"></uikit-condition-parameter>\r\n            <uikit-condition-parameter name="animated" value="true"></uikit-condition-parameter>\r\n          </uikit-transition>\r\n          <uikit-transition next-state="rank-crest-intro">\r\n            <uikit-condition-parameter name="show-wing-intro" value="true"></uikit-condition-parameter>\r\n            <uikit-condition-parameter name="animated" value="true"></uikit-condition-parameter>\r\n            <uikit-condition-parameter name="is-ranked" value="true"></uikit-condition-parameter>\r\n          </uikit-transition>\r\n          <uikit-transition next-state="rank-crest-idle">\r\n            <uikit-condition-parameter name="show-wing-intro" value="false"></uikit-condition-parameter>\r\n            <uikit-condition-parameter name="animated" value="true"></uikit-condition-parameter>\r\n            <uikit-condition-parameter name="is-ranked" value="true"></uikit-condition-parameter>\r\n          </uikit-transition>\r\n          <uikit-transition next-state="static">\r\n            <uikit-condition-parameter name="show-intro" value="false"></uikit-condition-parameter>\r\n            <uikit-condition-parameter name="animated" value="false"></uikit-condition-parameter>\r\n          </uikit-transition>\r\n          <uikit-transition next-state="static">\r\n            <uikit-condition-parameter name="show-intro" value="false"></uikit-condition-parameter>\r\n            <uikit-condition-parameter name="animated" value="true"></uikit-condition-parameter>\r\n            <uikit-condition-parameter name="is-ranked" value="false"></uikit-condition-parameter>\r\n          </uikit-transition>\r\n          <uikit-behavior-media selector=".regalia-crest-intro" preloading></uikit-behavior-media>\r\n          <uikit-behavior-media selector=".regalia-crest-idle" preloading></uikit-behavior-media>\r\n        </uikit-state>\r\n\r\n        <uikit-state name="intro" synchronous>\r\n          <uikit-transition next-state="intro-overlap">\r\n            \x3c!-- Transition to intro-overlap state at 300ms into the intro video --\x3e\r\n            <uikit-condition-delay duration="300"></uikit-condition-delay>\r\n          </uikit-transition>\r\n          <uikit-behavior-media selector=".regalia-crest-intro" playing></uikit-behavior-media>\r\n        </uikit-state>\r\n\r\n        <uikit-state name="intro-overlap" synchronous>\r\n          <uikit-transition next-state="rank-crest-intro">\r\n            <uikit-condition-media selector=".regalia-crest-intro" ended></uikit-condition-media>\r\n            <uikit-condition-parameter name="show-wing-intro" value="true"></uikit-condition-parameter>\r\n          </uikit-transition>\r\n          <uikit-transition next-state="static">\r\n            <uikit-condition-media selector=".regalia-crest-intro" ended></uikit-condition-media>\r\n            <uikit-condition-parameter name="show-wing-intro" value="false"></uikit-condition-parameter>\r\n          </uikit-transition>\r\n          <uikit-behavior-media selector=".regalia-crest-intro" playing></uikit-behavior-media>\r\n        </uikit-state>\r\n\r\n        <uikit-state name="rank-crest-idle" synchronous>\r\n          <uikit-behavior-media selector=".regalia-crest-idle" playing></uikit-behavior-media>\r\n        </uikit-state>\r\n\r\n        <uikit-state name="rank-crest-intro" synchronous>\r\n          <uikit-transition next-state="rank-wing">\r\n            <uikit-condition-delay duration="400"></uikit-condition-delay>\r\n          </uikit-transition>\r\n        </uikit-state>\r\n\r\n        <uikit-state name="rank-wing" synchronous>\r\n          \x3c!-- Manually play rank wing animation --\x3e\r\n          <uikit-transition next-state="rank-wing-crystal">\r\n            <uikit-condition-delay duration="200"></uikit-condition-delay>\r\n          </uikit-transition>\r\n        </uikit-state>\r\n\r\n        <uikit-state name="rank-wing-crystal" synchronous>\r\n          \x3c!-- to set the completed state of the wing animation --\x3e\r\n          <uikit-behavior-media selector=".regalia-crest-idle" playing></uikit-behavior-media>\r\n        </uikit-state>\r\n\r\n        <uikit-state name="static" synchronous>\r\n        </uikit-state>\r\n      </uikit-states>\r\n\r\n      \x3c!-- ANIMATED ASSETS --\x3e\r\n      <uikit-video\r\n        visible-state="rank-crest-idle,rank-wing-crystal"\r\n        class="regalia-crest-idle"\r\n        data-type="animated"\r\n        loop\r\n        preload>\r\n      </uikit-video>\r\n\r\n      <lol-uikit-lottie\r\n        visible-state="rank-wing,rank-wing-crystal,intro,intro-overlap,rank-crest-intro"\r\n        class="regalia-crest-wing"\r\n        autoplay="false"\r\n      ></lol-uikit-lottie>\r\n\r\n      \x3c!-- NON-ANIMATED (static) ASSETS --\x3e\r\n      <div class="lol-regalia-summoner-icon-mask-container" visible-state="intro-overlap,rank-crest-intro,rank-wing,rank-wing-crystal,rank-crest-idle,static">\r\n        <div class="lol-regalia-summoner-icon" xlink:href="/fe/lol-static-assets/images/empty-icon.png"></div>\r\n      </div>\r\n      <lol-parties-comm-halo size="large" class="lol-regalia-comm-halo" visible-state="intro-overlap,rank-crest-intro,rank-wing,rank-wing-crystal,rank-crest-idle,static">\r\n      </lol-parties-comm-halo>\r\n      <div class="lol-regalia-ranked-border-container" visible-state="rank-crest-idle,static"></div>\r\n      <div class="lol-regalia-rank-division-wrapper" visible-state="intro-overlap,rank-crest-intro,rank-wing,rank-wing-crystal,rank-crest-idle,static">\r\n        <div class="lol-regalia-rank-division-container">\r\n          <div class="lol-regalia-rank-division-text"></div>\r\n        </div>\r\n      </div>\r\n      <lol-uikit-themed-level-ring-v2\r\n        class="lol-regalia-themed-level-ring ring-v2 hidden"\r\n        visible-state="intro-overlap,rank-crest-intro,rank-wing,rank-wing-crystal,rank-crest-idle,static"\r\n      ></lol-uikit-themed-level-ring-v2>\r\n      <lol-uikit-themed-level-ring\r\n        class="lol-regalia-themed-level-ring ring-v1"\r\n        visible-state="intro-overlap,rank-crest-intro,rank-wing,rank-wing-crystal,rank-crest-idle,static"\r\n      ></lol-uikit-themed-level-ring>\r\n      <div class="lol-regalia-none-border-container" visible-state="intro-overlap,rank-crest-intro,rank-wing,rank-wing-crystal,rank-crest-idle,static"></div>\r\n      <div class="regalia-crystal-element-container" visible-state="intro-overlap,rank-crest-intro,rank-wing,rank-wing-crystal,rank-crest-idle,static">\r\n        <lol-regalia-crystal-element class="regalia-crystal-element"></lol-regalia-crystal-element>\r\n      </div>\r\n\r\n      \x3c!-- ANIMATED ASSETS --\x3e\r\n      <uikit-video\r\n        class="regalia-crest-intro"\r\n        visible-state="intro,intro-overlap,rank-crest-intro,rank-wing"\r\n        preload>\r\n      </uikit-video>\r\n    </uikit-state-machine>\r\n  </div>\r\n</template>\r\n\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7),
                i = n(102),
                r = n(152),
                l = n(153),
                o = s(a),
                c = i(r),
                d = i(l);
            o.push([e.id, ':host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text {\n  font-family: var(--font-display);\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text {\n  -webkit-user-select: none;\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text {\n  font-kerning: normal;\n  -webkit-font-feature-settings: "kern" 1;\n  -webkit-font-smoothing: antialiased;\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text {\n  text-transform: uppercase;\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text:lang(ko-kr),\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text:lang(ja-jp),\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text:lang(tr-tr),\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text:lang(el-gr),\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text:lang(th-th),\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text:lang(zh-tw) {\n  text-transform: none;\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text {\n  color: #f0e6d2;\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 16px;\n  letter-spacing: 0.075em;\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text:lang(ja-jp) {\n  font-size: 13px;\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text:lang(ar-ae) {\n  letter-spacing: 0;\n}\n:host {\n  display: inline-block;\n  width: 100px;\n  height: 100px;\n  pointer-events: none;\n}\n:host .lol-regalia-crest-root {\n  width: 100%;\n  height: 100%;\n}\n:host .lol-regalia-crest-root.hidden {\n  opacity: 0;\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-wrapper {\n  position: absolute;\n  display: none;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container {\n  width: 30px;\n  height: 18px;\n  background-image: url("/fe/lol-static-assets/images/ranked-emblem/tier/iron-plate.png");\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  margin-left: 1px;\n  color: #f0e6d2;\n}\n:host .lol-regalia-crest-root .lol-regalia-summoner-icon-mask-container {\n  position: absolute;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  -webkit-mask-size: 82% 82%;\n  -webkit-mask-clip: content;\n  -webkit-mask-repeat: no-repeat;\n  -webkit-mask-position: 50% 50%;\n  -webkit-mask-image: url(' + c + ");\n}\n:host .lol-regalia-crest-root .lol-regalia-summoner-icon-mask-container .lol-regalia-summoner-icon {\n  margin: auto;\n  width: 78%;\n  height: 78%;\n  background-size: cover;\n}\n:host .lol-regalia-crest-root .lol-regalia-none-border-container {\n  display: none;\n  background-image: url(" + d + ');\n  background-size: contain;\n  position: absolute;\n  top: 2.5%;\n  left: 2.5%;\n  width: 95%;\n  height: 95%;\n}\n:host .lol-regalia-crest-root .lol-regalia-themed-level-ring {\n  display: none;\n  --themed-level-ring-level-text-top: 83%;\n}\n:host .lol-regalia-crest-root .regalia-crystal-element-container {\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  top: 58px;\n}\n:host .lol-regalia-crest-root .regalia-crystal-element-container.hidden {\n  display: none;\n}\n:host .lol-regalia-crest-root .regalia-crystal-element-container .regalia-crystal-element {\n  display: block;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  width: 70%;\n  height: 70%;\n  margin-left: 1px;\n}\n:host .lol-regalia-crest-root .regalia-crystal-element-container .regalia-crystal-element.small-crystal {\n  top: -2px;\n  width: 80%;\n  height: 80%;\n  margin-left: 0px;\n}\n:host .lol-regalia-crest-root .regalia-crystal-element-container .regalia-crystal-element.medium-crystal {\n  width: 67%;\n  height: 67%;\n  margin-top: -22px;\n  margin-left: 0px;\n}\n:host .lol-regalia-crest-root .lol-regalia-ranked-border-container {\n  display: none;\n  position: absolute;\n  width: 228%;\n  height: 295%;\n  top: 20%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-size: cover;\n}\n:host .lol-regalia-crest-root .lol-regalia-comm-halo {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  --premade-voice-halo-margin: auto;\n  --premade-voice-halo-width: calc(78% - 8px);\n  --premade-voice-halo-height: calc(78% - 8px);\n  --premade-voice-halobefore-box-shadow: 0 0 0 4px #36d987;\n}\n:host .lol-regalia-crest-root .regalia-crest-wing {\n  position: absolute;\n  left: 50%;\n  top: 22%;\n  transform: scale(1.1) translate(-50%, -50%);\n}\n:host .lol-regalia-crest-root .hidden {\n  display: none;\n}\n:host .lol-regalia-crest-root[data-type="none"] .lol-regalia-none-border-container {\n  display: block;\n}\n:host .lol-regalia-crest-root[data-type="prestige"] .lol-regalia-themed-level-ring {\n  display: block;\n}\n:host .lol-regalia-crest-root[data-type="prestige"] .lol-regalia-themed-level-ring.hidden {\n  display: none;\n}\n:host .lol-regalia-crest-root[data-type="ranked"] .lol-regalia-ranked-border-container {\n  display: block;\n}\n:host .lol-regalia-crest-root[data-type="ranked"] .lol-regalia-rank-division-wrapper {\n  display: flex;\n}\n:host .lol-regalia-crest-root[data-type="ranked"][size="medium"] .regalia-crest-wing {\n  transform: scale(0.96) translate(-50%, -50%);\n}\n:host .lol-regalia-crest-root .regalia-crest-intro video {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n:host .lol-regalia-crest-root .regalia-crest-intro video[src$="lobby-crystal-intro-member.webm"] {\n  mix-blend-mode: screen;\n}\n:host .lol-regalia-crest-root .regalia-crest-intro video[src$="lobby-crystal-intro-player.webm"] {\n  top: calc(50% + 82px);\n}\n:host .lol-regalia-crest-root .regalia-crest-idle {\n  position: absolute;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  top: 21%;\n  width: 228%;\n  height: 295%;\n}\n:host .lol-regalia-crest-root .regalia-crest-idle[data-type="animated"] {\n  animation: 0.6s ease-in-out regalia-crest-animation-fadein;\n}\n:host .lol-regalia-crest-root .regalia-crest-idle video {\n  mix-blend-mode: screen;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n:host .lol-regalia-crest-root .regalia-crest-idle.hidden {\n  display: none;\n}\n@-moz-keyframes regalia-crest-animation-fadein {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@-webkit-keyframes regalia-crest-animation-fadein {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@-o-keyframes regalia-crest-animation-fadein {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes regalia-crest-animation-fadein {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n', "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/regalia/addon/elements/v2/crest-v2-element/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,gCAAgC;AAClC;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,oBAAoB;EACpB,uCAAuC;EACvC,mCAAmC;AACrC;AACA;EACE,yBAAyB;AAC3B;AACA;;;;;;EAME,oBAAoB;AACtB;AACA;EACE,cAAc;EACd,eAAe;EACf,gBAAgB;EAChB,iBAAiB;EACjB,uBAAuB;AACzB;AACA;EACE,eAAe;AACjB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,qBAAqB;EACrB,YAAY;EACZ,aAAa;EACb,oBAAoB;AACtB;AACA;EACE,WAAW;EACX,YAAY;AACd;AACA;EACE,UAAU;AACZ;AACA;EACE,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,WAAW;EACX,YAAY;AACd;AACA;EACE,WAAW;EACX,YAAY;EACZ,uFAAuF;AACzF;AACA;EACE,aAAa;EACb,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,uBAAuB;EACvB,gBAAgB;EAChB,cAAc;AAChB;AACA;EACE,kBAAkB;EAClB,aAAa;EACb,WAAW;EACX,YAAY;EACZ,0BAA0B;EAC1B,0BAA0B;EAC1B,8BAA8B;EAC9B,8BAA8B;EAC9B,2DAAkD;AACpD;AACA;EACE,YAAY;EACZ,UAAU;EACV,WAAW;EACX,sBAAsB;AACxB;AACA;EACE,aAAa;EACb,yDAAkD;EAClD,wBAAwB;EACxB,kBAAkB;EAClB,SAAS;EACT,UAAU;EACV,UAAU;EACV,WAAW;AACb;AACA;EACE,aAAa;EACb,uCAAuC;AACzC;AACA;EACE,aAAa;EACb,kBAAkB;EAClB,mBAAmB;EACnB,uBAAuB;EACvB,WAAW;EACX,YAAY;EACZ,SAAS;AACX;AACA;EACE,aAAa;AACf;AACA;EACE,cAAc;EACd,kBAAkB;EAClB,mBAAmB;EACnB,uBAAuB;EACvB,UAAU;EACV,WAAW;EACX,gBAAgB;AAClB;AACA;EACE,SAAS;EACT,UAAU;EACV,WAAW;EACX,gBAAgB;AAClB;AACA;EACE,UAAU;EACV,WAAW;EACX,iBAAiB;EACjB,gBAAgB;AAClB;AACA;EACE,aAAa;EACb,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,sBAAsB;AACxB;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,iCAAiC;EACjC,2CAA2C;EAC3C,4CAA4C;EAC5C,wDAAwD;AAC1D;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,QAAQ;EACR,2CAA2C;AAC7C;AACA;EACE,aAAa;AACf;AACA;EACE,cAAc;AAChB;AACA;EACE,cAAc;AAChB;AACA;EACE,aAAa;AACf;AACA;EACE,cAAc;AAChB;AACA;EACE,aAAa;AACf;AACA;EACE,4CAA4C;AAC9C;AACA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;AAClC;AACA;EACE,sBAAsB;AACxB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,gCAAgC;EAChC,QAAQ;EACR,WAAW;EACX,YAAY;AACd;AACA;EACE,0DAA0D;AAC5D;AACA;EACE,sBAAsB;EACtB,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,QAAQ;EACR,SAAS;EACT,gCAAgC;AAClC;AACA;EACE,aAAa;AACf;AACA;EACE;IACE,UAAU;EACZ;EACA;IACE,UAAU;EACZ;AACF;AACA;EACE;IACE,UAAU;EACZ;EACA;IACE,UAAU;EACZ;AACF;AACA;EACE;IACE,UAAU;EACZ;EACA;IACE,UAAU;EACZ;AACF;AACA;EACE;IACE,UAAU;EACZ;EACA;IACE,UAAU;EACZ;AACF",
                sourcesContent: [':host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text {\n  font-family: var(--font-display);\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text {\n  -webkit-user-select: none;\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text {\n  font-kerning: normal;\n  -webkit-font-feature-settings: "kern" 1;\n  -webkit-font-smoothing: antialiased;\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text {\n  text-transform: uppercase;\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text:lang(ko-kr),\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text:lang(ja-jp),\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text:lang(tr-tr),\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text:lang(el-gr),\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text:lang(th-th),\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text:lang(zh-tw) {\n  text-transform: none;\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text {\n  color: #f0e6d2;\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 16px;\n  letter-spacing: 0.075em;\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text:lang(ja-jp) {\n  font-size: 13px;\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text:lang(ar-ae) {\n  letter-spacing: 0;\n}\n:host {\n  display: inline-block;\n  width: 100px;\n  height: 100px;\n  pointer-events: none;\n}\n:host .lol-regalia-crest-root {\n  width: 100%;\n  height: 100%;\n}\n:host .lol-regalia-crest-root.hidden {\n  opacity: 0;\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-wrapper {\n  position: absolute;\n  display: none;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container {\n  width: 30px;\n  height: 18px;\n  background-image: url("/fe/lol-static-assets/images/ranked-emblem/tier/iron-plate.png");\n}\n:host .lol-regalia-crest-root .lol-regalia-rank-division-container .lol-regalia-rank-division-text {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  margin-left: 1px;\n  color: #f0e6d2;\n}\n:host .lol-regalia-crest-root .lol-regalia-summoner-icon-mask-container {\n  position: absolute;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  -webkit-mask-size: 82% 82%;\n  -webkit-mask-clip: content;\n  -webkit-mask-repeat: no-repeat;\n  -webkit-mask-position: 50% 50%;\n  -webkit-mask-image: url("images/icon-mask-30.png");\n}\n:host .lol-regalia-crest-root .lol-regalia-summoner-icon-mask-container .lol-regalia-summoner-icon {\n  margin: auto;\n  width: 78%;\n  height: 78%;\n  background-size: cover;\n}\n:host .lol-regalia-crest-root .lol-regalia-none-border-container {\n  display: none;\n  background-image: url("images/eog-solid-ring.png");\n  background-size: contain;\n  position: absolute;\n  top: 2.5%;\n  left: 2.5%;\n  width: 95%;\n  height: 95%;\n}\n:host .lol-regalia-crest-root .lol-regalia-themed-level-ring {\n  display: none;\n  --themed-level-ring-level-text-top: 83%;\n}\n:host .lol-regalia-crest-root .regalia-crystal-element-container {\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  top: 58px;\n}\n:host .lol-regalia-crest-root .regalia-crystal-element-container.hidden {\n  display: none;\n}\n:host .lol-regalia-crest-root .regalia-crystal-element-container .regalia-crystal-element {\n  display: block;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  width: 70%;\n  height: 70%;\n  margin-left: 1px;\n}\n:host .lol-regalia-crest-root .regalia-crystal-element-container .regalia-crystal-element.small-crystal {\n  top: -2px;\n  width: 80%;\n  height: 80%;\n  margin-left: 0px;\n}\n:host .lol-regalia-crest-root .regalia-crystal-element-container .regalia-crystal-element.medium-crystal {\n  width: 67%;\n  height: 67%;\n  margin-top: -22px;\n  margin-left: 0px;\n}\n:host .lol-regalia-crest-root .lol-regalia-ranked-border-container {\n  display: none;\n  position: absolute;\n  width: 228%;\n  height: 295%;\n  top: 20%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-size: cover;\n}\n:host .lol-regalia-crest-root .lol-regalia-comm-halo {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  --premade-voice-halo-margin: auto;\n  --premade-voice-halo-width: calc(78% - 8px);\n  --premade-voice-halo-height: calc(78% - 8px);\n  --premade-voice-halobefore-box-shadow: 0 0 0 4px #36d987;\n}\n:host .lol-regalia-crest-root .regalia-crest-wing {\n  position: absolute;\n  left: 50%;\n  top: 22%;\n  transform: scale(1.1) translate(-50%, -50%);\n}\n:host .lol-regalia-crest-root .hidden {\n  display: none;\n}\n:host .lol-regalia-crest-root[data-type="none"] .lol-regalia-none-border-container {\n  display: block;\n}\n:host .lol-regalia-crest-root[data-type="prestige"] .lol-regalia-themed-level-ring {\n  display: block;\n}\n:host .lol-regalia-crest-root[data-type="prestige"] .lol-regalia-themed-level-ring.hidden {\n  display: none;\n}\n:host .lol-regalia-crest-root[data-type="ranked"] .lol-regalia-ranked-border-container {\n  display: block;\n}\n:host .lol-regalia-crest-root[data-type="ranked"] .lol-regalia-rank-division-wrapper {\n  display: flex;\n}\n:host .lol-regalia-crest-root[data-type="ranked"][size="medium"] .regalia-crest-wing {\n  transform: scale(0.96) translate(-50%, -50%);\n}\n:host .lol-regalia-crest-root .regalia-crest-intro video {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n:host .lol-regalia-crest-root .regalia-crest-intro video[src$="lobby-crystal-intro-member.webm"] {\n  mix-blend-mode: screen;\n}\n:host .lol-regalia-crest-root .regalia-crest-intro video[src$="lobby-crystal-intro-player.webm"] {\n  top: calc(50% + 82px);\n}\n:host .lol-regalia-crest-root .regalia-crest-idle {\n  position: absolute;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  top: 21%;\n  width: 228%;\n  height: 295%;\n}\n:host .lol-regalia-crest-root .regalia-crest-idle[data-type="animated"] {\n  animation: 0.6s ease-in-out regalia-crest-animation-fadein;\n}\n:host .lol-regalia-crest-root .regalia-crest-idle video {\n  mix-blend-mode: screen;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n:host .lol-regalia-crest-root .regalia-crest-idle.hidden {\n  display: none;\n}\n@-moz-keyframes regalia-crest-animation-fadein {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@-webkit-keyframes regalia-crest-animation-fadein {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@-o-keyframes regalia-crest-animation-fadein {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes regalia-crest-animation-fadein {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n'],
                sourceRoot: ""
            }]), e.exports = o
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "icon-mask-30.png"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "eog-solid-ring.png"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = n(93),
                i = c(n(148)),
                r = c(n(98)),
                l = c(n(155)),
                o = n(95);

            function c(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            class d extends a.webComponents.ShadowElement {
                templateMarkup() {
                    return n(156)
                }
                stylesheetMarkup() {
                    return n(157)
                }
                constructor() {
                    super(!0), this._binding = a.dataBinding.bindTo(a.socket), this._lowSpecMode = !1, a.SharedComponentsApi.getApi_UXSettings().addObserver((e => {
                        this._lowSpecMode = !e.largeAreaAnimationsEnabled
                    })), this._stateMachineParameterChanged = this._onStateMachineParameterChanged.bind(this), this._bannerskinsEnabled = !0, this.regaliaData = new l.default
                }
                connectedCallback() {
                    super.connectedCallback(), this._binding.addObserver("/lol-platform-config/v1/namespaces/Regalia/BannerSkinsEnabled", this, this._handleBannerskinsEnabled.bind(this)), this._renderBanner()
                }
                static get observedAttributes() {
                    return ["member-type", "banner-id", "banner-type", "banner-rank", "hide-banner", "animations", "intro-sound", "intro-video", "waiting-in-postgame", "show-outro"]
                }
                attributeChangedCallback(e, t, n) {
                    switch (super.attributeChangedCallback(e, t, n), e) {
                        case "member-type":
                            this._handleMemberTypeChanged(n);
                            break;
                        case "banner-id":
                        case "banner-type":
                        case "banner-rank":
                            this._renderStaticBanner();
                            break;
                        case "hide-banner":
                            this._updateHideBanner(n);
                            break;
                        case "waiting-in-postgame":
                        case "show-outro":
                        case "animations":
                            this._renderBannerOnChange(t, n)
                    }
                }
                _handleBannerskinsEnabled(e) {
                    this._bannerskinsEnabled = a.SharedChallengesConstants.getFlagValueOrDefault(a.SharedChallengesConstants.CHALLENGE_FLAG_NAMES.CLIENT_STATE, e), this._renderStaticBanner()
                }
                _renderBanner(e) {
                    if (!this._getStateMachine()) return;
                    if (!this.isConnected) return;
                    this._renderStaticBanner();
                    const t = this._getStateMachine();
                    t.unsubscribeParameterChanged(this._stateMachineParameterChanged), t.subscribeParameterChanged(this._stateMachineParameterChanged);
                    const n = this.getAttribute("intro-video");
                    (0, s.attributeValueIsSet)(n) && (this._memberType === o.MEMBER_TYPES.OTHER_PLAYER ? setTimeout((() => {
                        this._getIntroVideo().setAttribute("src", n)
                    }), 500) : this._getIntroVideo().setAttribute("src", n)), this._setWaiting(), this._setOutro();
                    const a = this._showIntro();
                    t.setAttribute("show-intro", a);
                    const i = this._isAnimated();
                    t.setAttribute("animated", i);
                    ("initializing" === t.getAttribute("state") || i || e) && t.setAttribute("state", "preloading")
                }
                _renderBannerOnChange(e, t) {
                    e !== t && this._renderBanner(!0)
                }
                _onStateMachineParameterChanged(e, t, n) {
                    if ("state" === e && "intro" === n && t !== n) {
                        const e = this.getAttribute("intro-sound");
                        this._isAnimated() && (0, s.attributeValueIsSet)(e) && this._playSound(e)
                    }
                }
                _setOutro() {
                    const e = this.getAttribute("show-outro"),
                        t = this._getStateMachine(),
                        n = this._isAnimated() && (0, s.attributeValueIsTruthy)(e);
                    t.setAttribute("show-outro", n)
                }
                _setWaiting() {
                    const e = this.getAttribute("waiting-in-postgame"),
                        t = this._getStateMachine(),
                        n = (0, s.attributeValueIsTruthy)(e);
                    t.setAttribute("show-waiting", n)
                }
                _updateHideBanner(e) {
                    (e = (0, s.attributeValueIsTruthy)(e)) ? this._getBannerStaticAssetElement().classList.add("hidden"): this._getBannerStaticAssetElement().classList.remove("hidden")
                }
                _isAnimated() {
                    if (!0 === this._overrideDisableAnimations) return !1;
                    return (0, s.attributeValueIsTruthy)(this.getAttribute("animations")) && !this._lowSpecMode
                }
                _handleMemberTypeChanged(e) {
                    this._memberType = e, this._getBannerRootElement().setAttribute("member-type", e)
                }
                _renderStaticBanner() {
                    const e = this._getBannerStaticAssetImageElement(),
                        t = this._bannerskinsEnabled ? this.getAttribute("banner-id") : null,
                        n = this.getAttribute("banner-type"),
                        a = this.getAttribute("banner-rank");
                    this._getBannerSkinAssetPromise(t, n, a).then((a => {
                        t !== this.getAttribute("banner-id") && this._bannerskinsEnabled || n !== this.getAttribute("banner-type") || (e.src = a)
                    }))
                }
                _getBannerSkinAssetPromise(e, t, n) {
                    if (null != e && e.length > 0 && Number(e) >= 0) {
                        const t = e === o.BANNER_ID_PAST_RANK ? n : null;
                        return this.regaliaData.getBannerAssetPath(e, t)
                    }
                    return t === o.BANNER_TYPES.LAST_SEASON_HIGHEST_RANK && n ? r.default.bannerSkinsPastRank(n.toLowerCase()) : r.default.bannerSkinsDefault("default")
                }
                _getBannerStaticAssetElement() {
                    return this.shadowRoot.querySelector(".regalia-banner-asset-static")
                }
                _getBannerStaticAssetImageElement() {
                    return this.shadowRoot.querySelector(".regalia-banner-asset-static-image")
                }
                _getBannerRootElement() {
                    return this.shadowRoot.querySelector(".regalia-banner-v2-root")
                }
                _showIntro() {
                    const e = this._isAnimated(),
                        t = (0, s.attributeValueIsSet)(this.getAttribute("intro-video"));
                    return !(0, s.attributeValueIsTruthy)(this.getAttribute("waiting-in-postgame")) && e && t
                }
                _getStateMachine() {
                    return this.shadowRoot.querySelector(".regalia-banner-state-machine")
                }
                _getIntroVideo() {
                    return this.shadowRoot.querySelector(".regalia-banner-intro")
                }
                _playSound(e) {
                    e && i.default.playAudio(e)
                }
            }
            d.tagName = "lol-regalia-banner-v2-element";
            var u = d;
            t.default = u
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            class s {
                constructor() {
                    if (s.instance) return s.instance;
                    s.instance = this, this._regaliaBinding = (0, a.dataBinding)("/lol-regalia", a.socket), this._bannerDataPromise = this._regaliaBinding.get("v3/inventory/REGALIA_BANNER"), this._crestDataPromise = this._regaliaBinding.get("v3/inventory/REGALIA_CREST")
                }
                getBannerAssetPath(e, t) {
                    return this._bannerDataPromise.then((n => {
                        if (!n || !n[e]) return "";
                        let a;
                        const s = n[e].items || [];
                        return t ? t && s.length && (a = s.find((e => e.idSecondary && String(e.idSecondary) === String(t)))) : a = s.find((e => e.isSelectable)), a ? a.assetPath : ""
                    }))
                }
            }
            s.instance = null;
            var i = s;
            t.default = i
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <div class="regalia-banner-v2-root" member-type="">\r\n    <uikit-state-machine class="regalia-banner-state-machine" state="initializing">\r\n      <uikit-states>\r\n        \x3c!-- Initially idle. Once we set up the DOM elements (e.g. set the banner image src) then we will change\r\n             the state to "preloading".\r\n            --\x3e\r\n        <uikit-state name="initializing" synchronous></uikit-state>\r\n\r\n        <uikit-state name="preloading" synchronous> \x3c!-- Preload video --\x3e\r\n          <uikit-transition next-state="static">\r\n            <uikit-condition-parameter name="animated" value="false"></uikit-condition-parameter>\r\n            <uikit-condition-parameter name="show-waiting" value="false"></uikit-condition-parameter>\r\n          </uikit-transition>\r\n\r\n          <uikit-transition next-state="waiting">\r\n            <uikit-condition-parameter name="show-waiting" value="true"></uikit-condition-parameter>\r\n            <uikit-condition-parameter name="animated" value="true"></uikit-condition-parameter>\r\n            <uikit-condition-media selector=".regalia-banner-waiting" can-play></uikit-condition-media>\r\n          </uikit-transition>\r\n\r\n          <uikit-transition next-state="waiting-static">\r\n            <uikit-condition-parameter name="show-waiting" value="true"></uikit-condition-parameter>\r\n            <uikit-condition-parameter name="animated" value="false"></uikit-condition-parameter>\r\n          </uikit-transition>\r\n\r\n          <uikit-transition next-state="outro">\r\n            <uikit-condition-parameter name="show-outro" value="true"></uikit-condition-parameter>\r\n            <uikit-condition-media selector=".regalia-banner-outro" can-play></uikit-condition-media>\r\n          </uikit-transition>\r\n\r\n          <uikit-transition next-state="intro">\r\n            <uikit-condition-parameter name="show-intro" value="true"></uikit-condition-parameter>\r\n            <uikit-condition-parameter name="animated" value="true"></uikit-condition-parameter>\r\n            <uikit-condition-media selector=".regalia-banner-intro" can-play></uikit-condition-media>\r\n          </uikit-transition>\r\n\r\n          <uikit-behavior-media selector=".regalia-banner-intro" preloading></uikit-behavior-media>\r\n          <uikit-behavior-media selector=".regalia-banner-outro" preloading></uikit-behavior-media>\r\n          <uikit-behavior-media selector=".regalia-banner-waiting" preloading></uikit-behavior-media>\r\n        </uikit-state>\r\n\r\n        <uikit-state name="intro" synchronous>\r\n          <uikit-transition next-state="intro-overlap">\r\n            <uikit-condition-delay duration="200"></uikit-condition-delay>\r\n          </uikit-transition>\r\n          <uikit-behavior-media selector=".regalia-banner-intro" playing></uikit-behavior-media>\r\n        </uikit-state>\r\n\r\n        <uikit-state name="intro-overlap" synchronous>\r\n          \x3c!-- The animated banner now appears underneath the video, video plays to completion --\x3e\r\n          <uikit-transition next-state="static">\r\n            \x3c!-- Transition to static state when the video ends; video will be unloaded --\x3e\r\n            <uikit-condition-media selector=".regalia-banner-intro" ended></uikit-condition-media>\r\n          </uikit-transition>\r\n          <uikit-behavior-media selector=".regalia-banner-intro" playing></uikit-behavior-media>\r\n        </uikit-state>\r\n\r\n        <uikit-state name="waiting" synchronous>\r\n          <uikit-transition next-state="intro">\r\n            <uikit-condition-parameter name="show-waiting" value="false"></uikit-condition-parameter>\r\n          </uikit-transition>\r\n          <uikit-transition next-state="outro">\r\n            <uikit-condition-parameter name="show-outro" value="true"></uikit-condition-parameter>\r\n          </uikit-transition>\r\n          <uikit-behavior-media selector=".regalia-banner-waiting" playing></uikit-behavior-media>\r\n        </uikit-state>\r\n\r\n        <uikit-state name="waiting-static" synchronous>\r\n          <uikit-transition next-state="static">\r\n            <uikit-condition-parameter name="show-waiting" value="false"></uikit-condition-parameter>\r\n          </uikit-transition>\r\n        </uikit-state>\r\n\r\n        <uikit-state name="outro" synchronous>\r\n          <uikit-behavior-media selector=".regalia-banner-outro" playing></uikit-behavior-media>\r\n        </uikit-state>\r\n\r\n        <uikit-state name="static" synchronous>\r\n        </uikit-state>\r\n      </uikit-states>\r\n\r\n      <div class="regalia-banner-asset-static" visible-state="static,intro-overlap">\r\n        <img class="regalia-banner-asset-static-image" />\r\n      </div>\r\n\r\n      <div class="regalia-banner-asset-static" visible-state="waiting-static">\r\n        <div class="regalia-banner-asset-static-background waiting"></div>\r\n      </div>\r\n\r\n      <uikit-video\r\n        class="regalia-banner-intro regalia-banner-video"\r\n        visible-state="intro,intro-overlap">\r\n      </uikit-video>\r\n\r\n      <uikit-video\r\n        class="regalia-banner-waiting regalia-banner-video"\r\n        visible-state="waiting"\r\n        loop\r\n        src="/fe/lol-static-assets/videos/challenges/lobby-banner-v2-waiting.webm"\r\n      >\r\n      </uikit-video>\r\n\r\n      <uikit-video\r\n        class="regalia-banner-outro regalia-banner-video"\r\n        visible-state="outro"\r\n        src="/fe/lol-static-assets/videos/challenges/lobby-banner-v2-waiting-outro.webm"\r\n      >\r\n      </uikit-video>\r\n    </uikit-state-machine>\r\n  </div>\r\n</template>\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7),
                i = n(102),
                r = n(158),
                l = s(a),
                o = i(r);
            l.push([e.id, ":host {\n  --regalia-banner-asset-static-top: 0;\n}\n:host .regalia-banner-v2-root {\n  display: flex;\n  position: relative;\n  height: 100%;\n  width: 100%;\n  justify-content: center;\n}\n:host .regalia-banner-v2-root .regalia-banner-asset-static {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n}\n:host .regalia-banner-v2-root .regalia-banner-asset-static.hidden {\n  opacity: 0;\n}\n:host .regalia-banner-v2-root .regalia-banner-asset-static .regalia-banner-asset-static-image {\n  position: absolute;\n  top: -18%;\n  width: 148%;\n}\n:host .regalia-banner-v2-root .regalia-banner-asset-static .regalia-banner-asset-static-image.waiting {\n  width: 324px;\n  height: 762px;\n  content: url(" + o + ');\n}\n:host .regalia-banner-v2-root .regalia-banner-intro video {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin-top: 24px;\n}\n:host .regalia-banner-v2-root[member-type="other-player"] .regalia-banner-asset-static-background {\n  width: 176px;\n  top: -25px;\n}\n:host .regalia-banner-v2-root[member-type="other-player"] .regalia-banner-asset-static-image {\n  top: -9%;\n  width: 132%;\n}\n:host .regalia-banner-v2-root[member-type="other-player"] .regalia-banner-intro video {\n  margin-top: 28px;\n}\n:host .regalia-banner-v2-root[member-type="other-player"] .regalia-banner-video video {\n  width: 316px;\n}\n', "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/regalia/addon/elements/v2/banner-v2-element/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,oCAAoC;AACtC;AACA;EACE,aAAa;EACb,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,uBAAuB;AACzB;AACA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,uBAAuB;AACzB;AACA;EACE,UAAU;AACZ;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,WAAW;AACb;AACA;EACE,YAAY;EACZ,aAAa;EACb,gDAAyC;AAC3C;AACA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,gBAAgB;AAClB;AACA;EACE,YAAY;EACZ,UAAU;AACZ;AACA;EACE,QAAQ;EACR,WAAW;AACb;AACA;EACE,gBAAgB;AAClB;AACA;EACE,YAAY;AACd",
                sourcesContent: [':host {\n  --regalia-banner-asset-static-top: 0;\n}\n:host .regalia-banner-v2-root {\n  display: flex;\n  position: relative;\n  height: 100%;\n  width: 100%;\n  justify-content: center;\n}\n:host .regalia-banner-v2-root .regalia-banner-asset-static {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n}\n:host .regalia-banner-v2-root .regalia-banner-asset-static.hidden {\n  opacity: 0;\n}\n:host .regalia-banner-v2-root .regalia-banner-asset-static .regalia-banner-asset-static-image {\n  position: absolute;\n  top: -18%;\n  width: 148%;\n}\n:host .regalia-banner-v2-root .regalia-banner-asset-static .regalia-banner-asset-static-image.waiting {\n  width: 324px;\n  height: 762px;\n  content: url("images/banner-waiting.png");\n}\n:host .regalia-banner-v2-root .regalia-banner-intro video {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin-top: 24px;\n}\n:host .regalia-banner-v2-root[member-type="other-player"] .regalia-banner-asset-static-background {\n  width: 176px;\n  top: -25px;\n}\n:host .regalia-banner-v2-root[member-type="other-player"] .regalia-banner-asset-static-image {\n  top: -9%;\n  width: 132%;\n}\n:host .regalia-banner-v2-root[member-type="other-player"] .regalia-banner-intro video {\n  margin-top: 28px;\n}\n:host .regalia-banner-v2-root[member-type="other-player"] .regalia-banner-video video {\n  width: 316px;\n}\n'],
                sourceRoot: ""
            }]), e.exports = l
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "banner-waiting.png"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(160)) && a.__esModule ? a : {
                    default: a
                },
                i = n(93),
                r = n(161);
            class l extends s.default {
                templateMarkup() {
                    return n(162)
                }
                stylesheetMarkup() {
                    return n(163)
                }
                constructor() {
                    super(), this._showIntro = null, this._memberType = null
                }
                static get observedAttributes() {
                    return ["queue", "hide-banner", "hide-crest", "hide-crest-border", "summoner-id", "puuid", "member-type", "show-intro", "waiting-in-postgame", "show-outro", "animations", "is-quick-play"]
                }
                attributeChangedCallback(e, t, n) {
                    switch (super.attributeChangedCallback(e, t, n), e) {
                        case "hide-banner":
                            this._handleHideBannerChanged(n);
                            break;
                        case "hide-crest":
                            this._handleHideCrestChanged(n);
                            break;
                        case "hide-crest-border":
                            this._handleHideCrestBorderChanged(n);
                            break;
                        case "summoner-id":
                            this._passSummonerIdToBanner(n);
                            break;
                        case "puuid":
                            this._handlePuuidChanged(n);
                            break;
                        case "member-type":
                            this._handleMemberTypeChanged(n);
                            break;
                        case "show-intro":
                            this._handleShowIntroChanged(n);
                            break;
                        case "waiting-in-postgame":
                            this._handleWaitingInPostgameChanged(n);
                            break;
                        case "show-outro":
                            this._handlePlayOutroChanged(n);
                            break;
                        case "animations":
                            this._handleAnimationsChanged(n);
                            break;
                        case "is-quick-play":
                            this._handleQuickPlayChanged(n)
                    }
                }
                _updateIntro() {
                    const e = this.getRegaliaCrestElement(),
                        t = this._getRegaliaBannerElement();
                    this._showIntro || (e.removeAttribute("intro-video"), t.removeAttribute("intro-video"));
                    let n = "";
                    (0, i.attributeValueIsSet)(this._memberType) && (n = r.CREST_INTRO_VIDEOS[this._memberType]), n && e.getAttribute("intro-video") !== n ? e.setAttribute("intro-video", n) : n || e.removeAttribute("intro-video");
                    let a = "";
                    (0, i.attributeValueIsSet)(this._memberType) && (a = r.BANNER_INTRO_VIDEOS[this._memberType]), a && t.getAttribute("intro-video") !== a ? t.setAttribute("intro-video", a) : a || t.removeAttribute("intro-video");
                    t.setAttribute("intro-sound", "/fe/lol-static-assets/sounds/sfx-parties-player-banner-intro.ogg")
                }
                _handleShowIntroChanged(e) {
                    this._showIntro = (0, i.attributeValueIsTruthy)(e), this._updateIntro()
                }
                _handleAnimationsChanged(e) {
                    e = (0, i.attributeValueIsTruthy)(e), this.getRegaliaCrestElement().setAttribute("animations", e), this.getRegaliaBannerElement().setAttribute("animations", e)
                }
                _handlePlayOutroChanged(e) {
                    const t = (0, i.attributeValueIsTruthy)(e);
                    this.getRegaliaBannerElement().setAttribute("show-outro", t), t ? this._getRegaliaPartiesContainer().classList.add("fade-out") : this._getRegaliaPartiesContainer().classList.remove("fade-out")
                }
                _handleWaitingInPostgameChanged(e) {
                    const t = (0, i.attributeValueIsTruthy)(e);
                    this.getRegaliaBannerElement().setAttribute("waiting-in-postgame", t), t ? this.getRegaliaCrestElement().classList.add("dim") : this.getRegaliaCrestElement().classList.remove("dim"), this._handleHideCrestBorderChanged(t), this._handleHideCrystal(t)
                }
                _handleMemberTypeChanged(e) {
                    this._memberType = e, this._getRegaliaPartiesRoot().setAttribute("member-type", e), this._passMemberTypeToBanner(e), this._setCrestSizeOnMemberChange(e), this._updateIntro()
                }
                _handleQuickPlayChanged(e) {
                    e = (0, i.attributeValueIsTruthy)(e), this._getRegaliaPartiesRoot().setAttribute("is-quick-play", e)
                }
                _setCrestSizeOnMemberChange(e) {
                    e === r.BANNER_TYPES.OTHER_PLAYER ? this._getRegaliaCrestElement().setAttribute("crest-sizing", "medium") : this._getRegaliaCrestElement().setAttribute("crest-sizing", "")
                }
                _handleHideBannerChanged(e) {
                    e = (0, i.attributeValueIsTruthy)(e), this._getRegaliaBannerElement().setAttribute("hide-banner", e)
                }
                _handleHideCrystal(e) {
                    this._getRegaliaCrestElement().setAttribute("hide-crystal", (0, i.attributeValueIsTruthy)(e))
                }
                _handleHideCrestChanged(e) {
                    e = (0, i.attributeValueIsTruthy)(e), this._getRegaliaCrestElement().setAttribute("hide-crest", e)
                }
                _handleHideCrestBorderChanged(e) {
                    e = (0, i.attributeValueIsTruthy)(e), this._getRegaliaCrestElement().setAttribute("hide-crest-border", e)
                }
                _passMemberTypeToBanner(e) {
                    this.getRegaliaBannerElement().setAttribute("member-type", e)
                }
                _passSummonerIdToBanner(e) {
                    this.getRegaliaBannerElement().setAttribute("summoner-id", e)
                }
                _handlePuuidChanged(e) {
                    this.getRegaliaCrestElement().setAttribute("voice-puuid", e), this.getRegaliaCrestElement().setAttribute("puuid", e)
                }
                _getRegaliaPartiesRoot() {
                    return this.shadowRoot.querySelector(".regalia-parties-v2-root")
                }
                _getRegaliaPartiesContainer() {
                    return this.shadowRoot.querySelector(".regalia-parties-v2-element-container")
                }
                _getRegaliaCrestElement() {
                    return this.shadowRoot.querySelector(".regalia-parties-v2-crest-element")
                }
                _getRegaliaBannerElement() {
                    return this.shadowRoot.querySelector(".regalia-parties-v2-banner-backdrop")
                }
            }
            l.tagName = "lol-regalia-parties-v2-element";
            var o = l;
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(113)) && a.__esModule ? a : {
                    default: a
                },
                r = n(93);
            class l extends s.webComponents.ShadowElement {
                getRegaliaCrestElement() {
                    return this.shadowRoot.querySelector("lol-regalia-crest-v2-element")
                }
                getRegaliaCrystalElement() {
                    return this.shadowRoot.querySelector(".regalia-crystal-element")
                }
                getRegaliaBannerElement() {
                    return this.shadowRoot.querySelector("lol-regalia-banner-v2-element")
                }
                handleSummonerChanged(e) {}
                handleCrestChanged(e) {}
                handleBannerChanged(e) {}
                isHovercard() {
                    return !1
                }
                constructor() {
                    super(), this._position = null, this._queue = null, this._summonerId = null, this._regalia = null, this._preferences = {
                        crystalLevel: null,
                        bannerId: null
                    }, this._service = new i.default(this._onSummonerRegaliaCallback.bind(this), this.isHovercard())
                }
                connectedCallback() {
                    super.connectedCallback(), this._service.attach()
                }
                disconnectedCallback() {
                    super.disconnectedCallback(), this._service.detach()
                }
                static get observedAttributes() {
                    return ["position", "queue", "summoner-id", "puuid"]
                }
                attributeChangedCallback(e, t, n) {
                    switch (super.attributeChangedCallback(e, t, n), e) {
                        case "position":
                            this._updatePosition(n);
                            break;
                        case "queue":
                            this._updateQueue(n);
                            break;
                        case "summoner-id":
                            this._updateSummonerId(n);
                            break;
                        case "puuid":
                            this._updatePuuid(n)
                    }
                }
                _updatePosition(e) {
                    this._position = e, this._service.setQueueAndPosition(this._queue, this._position)
                }
                _updateQueue(e) {
                    this._queue = e, this._service.setQueueAndPosition(this._queue, this._position)
                }
                _updatePuuid(e) {
                    (0, r.attributeValueNotSet)(e) || this._puuid !== e && (this._puuid = e, this._updateCrystalAttributes(), this._service.setPuuid(e))
                }
                _updateSummonerId(e) {
                    (0, r.attributeValueNotSet)(e) || this._summonerId !== e && (this._hide(), delete this._regalia, delete this._summonerId, this._updateCrestAttributes(), this._updateBannerAttributes(), this._summonerId = e, this._service.setSummonerId(e), this.handleSummonerChanged(e))
                }
                _onSummonerRegaliaCallback(e, t, n) {
                    this._regalia = e, this._preferences = n, this._updateCrestAttributes(), this._updateBannerAttributes(), this._show()
                }
                _hide() {
                    this.style.visibility = "hidden", this.classList.remove("regalia-loaded")
                }
                _show() {
                    this.style.removeProperty("visibility"), this.classList.add("regalia-loaded"), this.dispatchEvent(new CustomEvent("loaded", {
                        detail: this._regalia
                    })), this.dispatchEvent(new CustomEvent("regalia-loaded", {
                        detail: this._regalia,
                        bubbles: !0,
                        composed: !0
                    }))
                }
                _updateCrestAttributes() {
                    if (!this.getRegaliaCrestElement()) return;
                    const e = this.getRegaliaCrestElement();
                    this._regalia ? (this._updateCrystalAttributes(), s.SharedComponentsApi_Private.Regalia.getProfileIcons().getIconUrlPromise(this._regalia.profileIconId).then((t => {
                        e.setAttribute("profile-icon-url", t), e.setAttribute("summoner-level", this._regalia.summonerLevel), e.setAttribute("prestige-crest-id", this._regalia.selectedPrestigeCrest), e.setAttribute("ranked-tier", s.lodash.get(this._regalia, "highestRankedEntry.tier")), e.setAttribute("ranked-division", s.lodash.get(this._regalia, "highestRankedEntry.division")), e.setAttribute("ranked-split-reward", s.lodash.get(this._regalia, "highestRankedEntry.splitRewardLevel")), e.setAttribute("crest-type", this._regalia.crestType), this.handleCrestChanged(this._regalia), e.classList.add("regalia-crest-loaded")
                    }))) : e.classList.remove("regalia-crest-loaded")
                }
                _updateBannerAttributes() {
                    if (!this.getRegaliaBannerElement()) return;
                    const e = this.getRegaliaBannerElement();
                    this._regalia ? (e.setAttribute("banner-id", this._preferences.bannerId), e.setAttribute("banner-rank", this._regalia.lastSeasonHighestRank), e.setAttribute("banner-type", this._regalia.bannerType), this.handleBannerChanged(this._regalia), e.classList.add("regalia-banner-loaded")) : e.classList.remove("regalia-banner-loaded")
                }
                _updateCrystalAttributes() {
                    const e = this.getRegaliaCrestElement();
                    e && e.setAttribute("crystal-level", this._preferences.crystalLevel)
                }
            }
            var o = l;
            t.default = o
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.CREST_INTRO_VIDEOS = t.BANNER_TYPES = t.BANNER_INTRO_VIDEOS = void 0;
            const n = {
                CURRENT_PLAYER: "current-player",
                OTHER_PLAYER: "other-player"
            };
            t.BANNER_TYPES = n;
            const a = {};
            t.CREST_INTRO_VIDEOS = a, a[n.CURRENT_PLAYER] = "", a[n.OTHER_PLAYER] = "/fe/lol-static-assets/videos/lobby-crystal-intro-member.webm";
            const s = {
                [n.CURRENT_PLAYER]: "/fe/lol-static-assets/videos/challenges/lobby-banner-intro.webm",
                [n.OTHER_PLAYER]: "/fe/lol-static-assets/videos/challenges/lobby-banner-intro.webm"
            };
            t.BANNER_INTRO_VIDEOS = s
        }, e => {
            "use strict";
            e.exports = '\x3c!--\r\n  This is the base (wrapper) template for the shadow dom of the element.\r\n--\x3e\r\n<template>\r\n  <div class="regalia-parties-v2-root" member-type="">\r\n    <lol-regalia-banner-v2-element class="regalia-parties-v2-banner-backdrop"></lol-regalia-banner-v2-element>\r\n    <div class="regalia-parties-v2-element-container">\r\n      <div class="regalia-parties-v2-crest-wrapper">\r\n        <lol-regalia-crest-v2-element\r\n          class="regalia-parties-v2-crest-element"\r\n          animations="true"\r\n        ></lol-regalia-crest-v2-element>\r\n      </div>\r\n      <div class="content-wrapper">\r\n        <slot></slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7)(a);
            s.push([e.id, ':host .regalia-parties-v2-root {\n  position: relative;\n}\n:host .regalia-parties-v2-root[member-type="current-player"] {\n  height: 592px;\n  width: 196px;\n  opacity: 0.99;\n}\n:host .regalia-parties-v2-root[member-type="current-player"] .regalia-parties-v2-crest-element {\n  width: 100px;\n  height: 100px;\n}\n:host .regalia-parties-v2-root[member-type="current-player"] .regalia-parties-v2-crest-wrapper {\n  top: 240px;\n}\n:host .regalia-parties-v2-root[member-type="other-player"] {\n  height: 592px;\n  width: 196px;\n}\n:host .regalia-parties-v2-root[member-type="other-player"] .regalia-parties-v2-crest-element {\n  width: 88px;\n  height: 88px;\n}\n:host .regalia-parties-v2-root[member-type="other-player"] .regalia-parties-v2-crest-wrapper {\n  top: 244px;\n}\n:host .regalia-parties-v2-root .regalia-parties-v2-banner-backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n:host .regalia-parties-v2-root .regalia-parties-v2-element-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  transition: opacity 0.63s;\n  opacity: 1;\n}\n:host .regalia-parties-v2-root .regalia-parties-v2-element-container .regalia-parties-v2-crest-wrapper {\n  display: flex;\n  position: relative;\n  width: fit-content;\n  height: fit-content;\n  margin-top: 0;\n}\n:host .regalia-parties-v2-root .regalia-parties-v2-element-container .regalia-parties-v2-crest-wrapper .dim {\n  opacity: 0.5;\n}\n:host .regalia-parties-v2-root .regalia-parties-v2-element-container .regalia-parties-v2-crest-wrapper lol-regalia-crest-element {\n  --regalia-crest-summoner-icon-animation: 1s ease-in-out regalia-crest-animation-fadein;\n  --regalia-crest-themed-level-ring-animation: 1s ease-in-out regalia-crest-animation-fadein;\n}\n:host .regalia-parties-v2-root .regalia-parties-v2-element-container.fade-out {\n  opacity: 0;\n  transition-delay: 0.2s;\n}\n:host .regalia-parties-v2-root .regalia-parties-v2-element-container.fade-out .regalia-parties-v2-crest-wrapper {\n  animation-name: regalia-parties-v2-crest-wrapper-animation;\n  animation-timing-function: cubic-bezier(0.17, -Infinity, 0.48, 0);\n  animation-duration: 0.47s;\n  margin-top: -23px;\n  -webkit-filter: grayscale();\n}\n:host .regalia-parties-v2-root .regalia-parties-v2-element-container .content-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n:host .regalia-parties-v2-root[is-quick-play="true"][member-type="current-player"] .regalia-parties-v2-crest-wrapper {\n  top: 215px;\n}\n:host .regalia-parties-v2-root[is-quick-play="true"][member-type="other-player"] .regalia-parties-v2-crest-wrapper {\n  top: 219px;\n}\n@-moz-keyframes regalia-parties-v2-crest-wrapper-animation {\n  0% {\n    -webkit-filter: none;\n    margin-top: 0;\n    animation-timing-function: cubic-bezier(0.26, -Infinity, 0.83, Infinity);\n    animation-duration: 0.23s;\n  }\n  50% {\n    -webkit-filter: grayscale();\n    margin-top: -18px;\n  }\n  100% {\n    -webkit-filter: grayscale();\n    margin-top: -23px;\n  }\n}\n@-webkit-keyframes regalia-parties-v2-crest-wrapper-animation {\n  0% {\n    -webkit-filter: none;\n    margin-top: 0;\n    animation-timing-function: cubic-bezier(0.26, -Infinity, 0.83, Infinity);\n    animation-duration: 0.23s;\n  }\n  50% {\n    -webkit-filter: grayscale();\n    margin-top: -18px;\n  }\n  100% {\n    -webkit-filter: grayscale();\n    margin-top: -23px;\n  }\n}\n@-o-keyframes regalia-parties-v2-crest-wrapper-animation {\n  0% {\n    -webkit-filter: none;\n    margin-top: 0;\n    animation-timing-function: cubic-bezier(0.26, -Infinity, 0.83, Infinity);\n    animation-duration: 0.23s;\n  }\n  50% {\n    -webkit-filter: grayscale();\n    margin-top: -18px;\n  }\n  100% {\n    -webkit-filter: grayscale();\n    margin-top: -23px;\n  }\n}\n@keyframes regalia-parties-v2-crest-wrapper-animation {\n  0% {\n    -webkit-filter: none;\n    margin-top: 0;\n    animation-timing-function: cubic-bezier(0.26, -Infinity, 0.83, Infinity);\n    animation-duration: 0.23s;\n  }\n  50% {\n    -webkit-filter: grayscale();\n    margin-top: -18px;\n  }\n  100% {\n    -webkit-filter: grayscale();\n    margin-top: -23px;\n  }\n}\n', "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/regalia/addon/elements/v2/parties-v2-element/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,kBAAkB;AACpB;AACA;EACE,aAAa;EACb,YAAY;EACZ,aAAa;AACf;AACA;EACE,YAAY;EACZ,aAAa;AACf;AACA;EACE,UAAU;AACZ;AACA;EACE,aAAa;EACb,YAAY;AACd;AACA;EACE,WAAW;EACX,YAAY;AACd;AACA;EACE,UAAU;AACZ;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,yBAAyB;EACzB,UAAU;AACZ;AACA;EACE,aAAa;EACb,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,aAAa;AACf;AACA;EACE,YAAY;AACd;AACA;EACE,sFAAsF;EACtF,0FAA0F;AAC5F;AACA;EACE,UAAU;EACV,sBAAsB;AACxB;AACA;EACE,0DAA0D;EAC1D,iEAAiE;EACjE,yBAAyB;EACzB,iBAAiB;EACjB,2BAA2B;AAC7B;AACA;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;AACX;AACA;EACE,UAAU;AACZ;AACA;EACE,UAAU;AACZ;AACA;EACE;IACE,oBAAoB;IACpB,aAAa;IACb,wEAAwE;IACxE,yBAAyB;EAC3B;EACA;IACE,2BAA2B;IAC3B,iBAAiB;EACnB;EACA;IACE,2BAA2B;IAC3B,iBAAiB;EACnB;AACF;AACA;EACE;IACE,oBAAoB;IACpB,aAAa;IACb,wEAAwE;IACxE,yBAAyB;EAC3B;EACA;IACE,2BAA2B;IAC3B,iBAAiB;EACnB;EACA;IACE,2BAA2B;IAC3B,iBAAiB;EACnB;AACF;AACA;EACE;IACE,oBAAoB;IACpB,aAAa;IACb,wEAAwE;IACxE,yBAAyB;EAC3B;EACA;IACE,2BAA2B;IAC3B,iBAAiB;EACnB;EACA;IACE,2BAA2B;IAC3B,iBAAiB;EACnB;AACF;AACA;EACE;IACE,oBAAoB;IACpB,aAAa;IACb,wEAAwE;IACxE,yBAAyB;EAC3B;EACA;IACE,2BAA2B;IAC3B,iBAAiB;EACnB;EACA;IACE,2BAA2B;IAC3B,iBAAiB;EACnB;AACF",
                sourcesContent: [':host .regalia-parties-v2-root {\n  position: relative;\n}\n:host .regalia-parties-v2-root[member-type="current-player"] {\n  height: 592px;\n  width: 196px;\n  opacity: 0.99;\n}\n:host .regalia-parties-v2-root[member-type="current-player"] .regalia-parties-v2-crest-element {\n  width: 100px;\n  height: 100px;\n}\n:host .regalia-parties-v2-root[member-type="current-player"] .regalia-parties-v2-crest-wrapper {\n  top: 240px;\n}\n:host .regalia-parties-v2-root[member-type="other-player"] {\n  height: 592px;\n  width: 196px;\n}\n:host .regalia-parties-v2-root[member-type="other-player"] .regalia-parties-v2-crest-element {\n  width: 88px;\n  height: 88px;\n}\n:host .regalia-parties-v2-root[member-type="other-player"] .regalia-parties-v2-crest-wrapper {\n  top: 244px;\n}\n:host .regalia-parties-v2-root .regalia-parties-v2-banner-backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n:host .regalia-parties-v2-root .regalia-parties-v2-element-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  transition: opacity 0.63s;\n  opacity: 1;\n}\n:host .regalia-parties-v2-root .regalia-parties-v2-element-container .regalia-parties-v2-crest-wrapper {\n  display: flex;\n  position: relative;\n  width: fit-content;\n  height: fit-content;\n  margin-top: 0;\n}\n:host .regalia-parties-v2-root .regalia-parties-v2-element-container .regalia-parties-v2-crest-wrapper .dim {\n  opacity: 0.5;\n}\n:host .regalia-parties-v2-root .regalia-parties-v2-element-container .regalia-parties-v2-crest-wrapper lol-regalia-crest-element {\n  --regalia-crest-summoner-icon-animation: 1s ease-in-out regalia-crest-animation-fadein;\n  --regalia-crest-themed-level-ring-animation: 1s ease-in-out regalia-crest-animation-fadein;\n}\n:host .regalia-parties-v2-root .regalia-parties-v2-element-container.fade-out {\n  opacity: 0;\n  transition-delay: 0.2s;\n}\n:host .regalia-parties-v2-root .regalia-parties-v2-element-container.fade-out .regalia-parties-v2-crest-wrapper {\n  animation-name: regalia-parties-v2-crest-wrapper-animation;\n  animation-timing-function: cubic-bezier(0.17, -Infinity, 0.48, 0);\n  animation-duration: 0.47s;\n  margin-top: -23px;\n  -webkit-filter: grayscale();\n}\n:host .regalia-parties-v2-root .regalia-parties-v2-element-container .content-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n:host .regalia-parties-v2-root[is-quick-play="true"][member-type="current-player"] .regalia-parties-v2-crest-wrapper {\n  top: 215px;\n}\n:host .regalia-parties-v2-root[is-quick-play="true"][member-type="other-player"] .regalia-parties-v2-crest-wrapper {\n  top: 219px;\n}\n@-moz-keyframes regalia-parties-v2-crest-wrapper-animation {\n  0% {\n    -webkit-filter: none;\n    margin-top: 0;\n    animation-timing-function: cubic-bezier(0.26, -Infinity, 0.83, Infinity);\n    animation-duration: 0.23s;\n  }\n  50% {\n    -webkit-filter: grayscale();\n    margin-top: -18px;\n  }\n  100% {\n    -webkit-filter: grayscale();\n    margin-top: -23px;\n  }\n}\n@-webkit-keyframes regalia-parties-v2-crest-wrapper-animation {\n  0% {\n    -webkit-filter: none;\n    margin-top: 0;\n    animation-timing-function: cubic-bezier(0.26, -Infinity, 0.83, Infinity);\n    animation-duration: 0.23s;\n  }\n  50% {\n    -webkit-filter: grayscale();\n    margin-top: -18px;\n  }\n  100% {\n    -webkit-filter: grayscale();\n    margin-top: -23px;\n  }\n}\n@-o-keyframes regalia-parties-v2-crest-wrapper-animation {\n  0% {\n    -webkit-filter: none;\n    margin-top: 0;\n    animation-timing-function: cubic-bezier(0.26, -Infinity, 0.83, Infinity);\n    animation-duration: 0.23s;\n  }\n  50% {\n    -webkit-filter: grayscale();\n    margin-top: -18px;\n  }\n  100% {\n    -webkit-filter: grayscale();\n    margin-top: -23px;\n  }\n}\n@keyframes regalia-parties-v2-crest-wrapper-animation {\n  0% {\n    -webkit-filter: none;\n    margin-top: 0;\n    animation-timing-function: cubic-bezier(0.26, -Infinity, 0.83, Infinity);\n    animation-duration: 0.23s;\n  }\n  50% {\n    -webkit-filter: grayscale();\n    margin-top: -18px;\n  }\n  100% {\n    -webkit-filter: grayscale();\n    margin-top: -23px;\n  }\n}\n'],
                sourceRoot: ""
            }]), e.exports = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = n(93),
                r = (a = n(160)) && a.__esModule ? a : {
                    default: a
                };
            class l extends r.default {
                templateMarkup() {
                    return n(165)
                }
                stylesheetMarkup() {
                    return n(166)
                }
                static get observedAttributes() {
                    return ["position", "queue", "summoner-id", "is-searched", "puuid"]
                }
                attributeChangedCallback(e, t, n) {
                    if (super.attributeChangedCallback(e, t, n), "is-searched" === e) this._handleIsSearchedChanged((0, i.attributeValueIsTruthy)(n))
                }
                _handleIsSearchedChanged(e) {
                    e ? this.classList.add("is-searched") : this.classList.remove("is-searched")
                }
                handleSummonerChanged(e) {
                    s.SharedComponentsApi_Private.Regalia.getSessionData().isMePromise(e).then((e => {
                        this._isMe = e, e ? (this._getRegaliaCrestHoverArea().classList.add("picker-enabled"), this._getRegaliaCrestPickerButton().classList.add("picker-enabled")) : (this._getRegaliaCrestHoverArea().classList.remove("picker-enabled"), this._getRegaliaCrestPickerButton().classList.remove("picker-enabled")), this._updateAlertVisibility()
                    }))
                }
                handleBannerChanged() {
                    super.handleBannerChanged(), this.getRegaliaBannerElement().setAttribute("intro-video", "")
                }
                constructor() {
                    super(), this._binding = s.dataBinding.bindTo(s.socket), this._pickerClickHandler = this._showSummonerIconPicker.bind(this), this._alertHoverHandler = this._hideAlert.bind(this), this._updateAlertVisibility()
                }
                connectedCallback() {
                    super.connectedCallback(), this._getRegaliaCrestPickerButton().addEventListener("click", this._pickerClickHandler), this._getRegaliaCrestHoverArea().addEventListener("mouseover", this._alertHoverHandler)
                }
                disconnectedCallback() {
                    super.disconnectedCallback(), this._getRegaliaCrestPickerButton().removeEventListener("click", this._pickerClickHandler), this._getRegaliaCrestHoverArea().removeEventListener("mouseover", this._alertHoverHandler)
                }
                _hideAlert() {
                    s.SharedComponentsApi_Private.Regalia.setShowProfileCrestPickerAlert(!1), this._updateAlertVisibility()
                }
                _updateAlertVisibility() {
                    const e = this._getRegaliaCrestAlert();
                    if (e) {
                        const t = s.SharedComponentsApi_Private.Regalia.getShowProfileCrestPickerAlert();
                        this._isMe && t ? e.classList.add("alert-visible") : e.classList.remove("alert-visible")
                    }
                }
                _showSummonerIconPicker() {
                    s.lodash.isNil(this._isMe) || this._isMe && (s.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-profile-summoner-big-click.ogg"), s.SharedComponentsApi.getApi_SharedChallengesApps().showIdentityCustomizer(), s.Telemetry.sendCustomData("profile-overview-events", {
                        event: "show-summoner-icon-picker"
                    }))
                }
                _getRegaliaCrestHoverArea() {
                    return this.shadowRoot.querySelector(".regalia-profile-crest-hover-area")
                }
                _getRegaliaCrestPickerButton() {
                    return this.shadowRoot.querySelector(".regalia-crest-picker-button")
                }
                _getRegaliaCrestAlert() {
                    return this.shadowRoot.querySelector(".regalia-crest-alert-icon")
                }
            }
            l.tagName = "lol-regalia-profile-v2-element";
            var o = l;
            t.default = o
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <div class="regalia-profile-root-element">\r\n    <lol-regalia-banner-v2-element class="regalia-profile-banner-backdrop"></lol-regalia-banner-v2-element>\r\n    <div class=\'regalia-profile-element-container\'>\r\n      <div class="regalia-profile-crest-hover-area">\r\n        <div class="regalia-crest-picker-preloader"></div>\r\n        <lol-regalia-crest-v2-element class="regalia-profile-crest-element" crest-sizing="huge" animations="true">\r\n        </lol-regalia-crest-v2-element>\r\n        <div class="regalia-crest-picker-button"></div>\r\n        <div class="regalia-crest-alert-icon"></div>\r\n      </div>\r\n      <div class="content-wrapper">\r\n        <slot></slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7),
                i = n(102),
                r = n(167),
                l = n(168),
                o = s(a),
                c = i(r),
                d = i(l);
            o.push([e.id, ":host .regalia-profile-root-element {\n  position: relative;\n  height: 100%;\n  width: 100%;\n}\n:host .regalia-profile-root-element .regalia-profile-banner-backdrop {\n  position: absolute;\n  height: 592px;\n  width: 196px;\n}\n:host .regalia-profile-root-element.is-searched .regalia-profile-banner-backdrop {\n  --regalia-banner-asset-static-top: -30px;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area {\n  display: flex;\n  position: relative;\n  width: fit-content;\n  height: fit-content;\n  top: 235px;\n  pointer-events: none;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area.picker-enabled {\n  cursor: pointer;\n  pointer-events: auto;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-picker-preloader {\n  display: none;\n  background-image: url(" + c + "), url(" + d + ");\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-picker-button {\n  width: 192px;\n  height: 192px;\n  border-radius: 50%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  background-size: contain;\n  background-repeat: no-repeat;\n  pointer-events: none;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-picker-button.picker-enabled {\n  cursor: pointer;\n  pointer-events: auto;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area:hover .regalia-crest-picker-button {\n  background-image: url(" + c + ");\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area:hover .regalia-crest-picker-button:active {\n  background-image: url(" + d + ");\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-alert-icon {\n  display: none;\n  position: absolute;\n  right: -15px;\n  top: -15px;\n  background-color: #c89b3c;\n  border-radius: 50%;\n  width: 10px;\n  height: 10px;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-alert-icon.alert-visible {\n  display: block;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-element {\n  width: 100px;\n  height: 100px;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .content-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n}\n", "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/regalia/addon/elements/v2/profile-element/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,kBAAkB;EAClB,YAAY;EACZ,WAAW;AACb;AACA;EACE,kBAAkB;EAClB,aAAa;EACb,YAAY;AACd;AACA;EACE,wCAAwC;AAC1C;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,uBAAuB;AACzB;AACA;EACE,aAAa;EACb,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,UAAU;EACV,oBAAoB;AACtB;AACA;EACE,eAAe;EACf,oBAAoB;AACtB;AACA;EACE,aAAa;EACb,kGAA4F;AAC9F;AACA;EACE,YAAY;EACZ,aAAa;EACb,kBAAkB;EAClB,kBAAkB;EAClB,SAAS;EACT,QAAQ;EACR,gCAAgC;EAChC,wBAAwB;EACxB,4BAA4B;EAC5B,oBAAoB;AACtB;AACA;EACE,eAAe;EACf,oBAAoB;AACtB;AACA;EACE,yDAAsD;AACxD;AACA;EACE,yDAAsD;AACxD;AACA;EACE,aAAa;EACb,kBAAkB;EAClB,YAAY;EACZ,UAAU;EACV,yBAAyB;EACzB,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;AACA;EACE,cAAc;AAChB;AACA;EACE,YAAY;EACZ,aAAa;AACf;AACA;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;EACT,oBAAoB;AACtB",
                sourcesContent: [':host .regalia-profile-root-element {\n  position: relative;\n  height: 100%;\n  width: 100%;\n}\n:host .regalia-profile-root-element .regalia-profile-banner-backdrop {\n  position: absolute;\n  height: 592px;\n  width: 196px;\n}\n:host .regalia-profile-root-element.is-searched .regalia-profile-banner-backdrop {\n  --regalia-banner-asset-static-top: -30px;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area {\n  display: flex;\n  position: relative;\n  width: fit-content;\n  height: fit-content;\n  top: 235px;\n  pointer-events: none;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area.picker-enabled {\n  cursor: pointer;\n  pointer-events: auto;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-picker-preloader {\n  display: none;\n  background-image: url("images/EditSummoner_Hover.png"), url("images/EditSummoner_Click.png");\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-picker-button {\n  width: 192px;\n  height: 192px;\n  border-radius: 50%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  background-size: contain;\n  background-repeat: no-repeat;\n  pointer-events: none;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-picker-button.picker-enabled {\n  cursor: pointer;\n  pointer-events: auto;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area:hover .regalia-crest-picker-button {\n  background-image: url("images/EditSummoner_Hover.png");\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area:hover .regalia-crest-picker-button:active {\n  background-image: url("images/EditSummoner_Click.png");\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-alert-icon {\n  display: none;\n  position: absolute;\n  right: -15px;\n  top: -15px;\n  background-color: #c89b3c;\n  border-radius: 50%;\n  width: 10px;\n  height: 10px;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-hover-area .regalia-crest-alert-icon.alert-visible {\n  display: block;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .regalia-profile-crest-element {\n  width: 100px;\n  height: 100px;\n}\n:host .regalia-profile-root-element .regalia-profile-element-container .content-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n}\n'],
                sourceRoot: ""
            }]), e.exports = o
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "EditSummoner_Hover.png"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "EditSummoner_Click.png"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            class s extends a.webComponents.ShadowElement {
                templateMarkup() {
                    return n(170)
                }
                stylesheetMarkup() {
                    return n(171)
                }
                static get observedAttributes() {
                    return ["animations", "banner-rank", "banner-type", "animation-config", "intro-sound", "intro-video"]
                }
                attributeChangedCallback(e, t, n) {
                    switch (super.attributeChangedCallback(e, t, n), e) {
                        case "animations":
                        case "banner-rank":
                        case "banner-type":
                        case "animation-config":
                        case "intro-sound":
                        case "intro-video":
                            this.getRegaliaBannerElement().setAttribute(e, n)
                    }
                }
                getRegaliaBannerElement() {
                    return this.shadowRoot.querySelector("lol-regalia-banner-v2-element")
                }
            }
            s.tagName = "lol-regalia-ranked-banner-v2-element";
            var i = s;
            t.default = i
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <lol-regalia-banner-v2-element></lol-regalia-banner-v2-element>\r\n  <div class="regalia-ranked-banner-content-container">\r\n    <div class="content-wrapper">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7)(a);
            s.push([e.id, ":host {\n  --regalia-ranked-banner-banner-display: block;\n  --regalia-ranked-banner-banner-mask-image: none;\n  --regalia-ranked-banner-banner-opacity: 1;\n}\n:host {\n  position: relative;\n  width: 204px;\n  height: 600px;\n}\n:host lol-regalia-banner-v2-element {\n  --regalia-banner-asset-static-top: -8px;\n  display: var(--regalia-ranked-banner-banner-display);\n  -webkit-mask-image: var(--regalia-ranked-banner-banner-mask-image);\n  opacity: var(--regalia-ranked-banner-banner-opacity);\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n:host .regalia-ranked-banner-content-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n}\n:host .regalia-ranked-banner-content-container .content-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n", "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/regalia/addon/elements/v2/ranked-banner-element/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,6CAA6C;EAC7C,+CAA+C;EAC/C,yCAAyC;AAC3C;AACA;EACE,kBAAkB;EAClB,YAAY;EACZ,aAAa;AACf;AACA;EACE,uCAAuC;EACvC,oDAAoD;EACpD,kEAAkE;EAClE,oDAAoD;EACpD,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,uBAAuB;AACzB;AACA;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;AACX",
                sourcesContent: [":host {\n  --regalia-ranked-banner-banner-display: block;\n  --regalia-ranked-banner-banner-mask-image: none;\n  --regalia-ranked-banner-banner-opacity: 1;\n}\n:host {\n  position: relative;\n  width: 204px;\n  height: 600px;\n}\n:host lol-regalia-banner-v2-element {\n  --regalia-banner-asset-static-top: -8px;\n  display: var(--regalia-ranked-banner-banner-display);\n  -webkit-mask-image: var(--regalia-ranked-banner-banner-mask-image);\n  opacity: var(--regalia-ranked-banner-banner-opacity);\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n:host .regalia-ranked-banner-content-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n}\n:host .regalia-ranked-banner-content-container .content-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n"],
                sourceRoot: ""
            }]), e.exports = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(160)) && a.__esModule ? a : {
                default: a
            };
            class i extends s.default {
                templateMarkup() {
                    return n(173)
                }
                stylesheetMarkup() {
                    return n(174)
                }
                isHovercard() {
                    return !0
                }
            }
            i.tagName = "lol-regalia-hovercard-v2-element";
            var r = i;
            t.default = r
        }, e => {
            "use strict";
            e.exports = '<template id="lol-regalia-template-hovercard-element">\r\n  <lol-regalia-crest-v2-element\r\n    class="regalia-hovercard-crest-element"\r\n    crest-sizing="small"\r\n    animations="true"\r\n    hide-wing-intro="true"\r\n  >\r\n  </lol-regalia-crest-v2-element>\r\n</template>\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7)(a);
            s.push([e.id, ":host .regalia-hovercard-crest-element {\n  width: 80px;\n  height: 80px;\n}\n", "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/regalia/addon/elements/v2/hovercard-element/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,WAAW;EACX,YAAY;AACd",
                sourcesContent: [":host .regalia-hovercard-crest-element {\n  width: 80px;\n  height: 80px;\n}\n"],
                sourceRoot: ""
            }]), e.exports = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(160)) && a.__esModule ? a : {
                    default: a
                },
                i = n(93);
            class r extends s.default {
                templateMarkup() {
                    return n(176)
                }
                stylesheetMarkup() {
                    return n(177)
                }
                constructor() {
                    super()
                }
                static get observedAttributes() {
                    return ["summoner-id", "profile-icon", "crest-type", "banner-id", "banner-type", "banner-rank", "summoner-level", "ranked-tier", "prestige-crest-id", "ranked-division", "puuid"]
                }
                attributeChangedCallback(e, t, n) {
                    switch (super.attributeChangedCallback(e, t, n), e) {
                        case "summoner-id":
                            this._passSummonerIdToBanner(n);
                            break;
                        case "profile-icon":
                            this._setProfileIcon(n);
                            break;
                        case "crest-type":
                            this._setCrestType(n);
                            break;
                        case "banner-id":
                            this._setBannerId(n);
                            break;
                        case "banner-type":
                            this._setBannerType(n);
                            break;
                        case "banner-rank":
                            this._setBannerRank(n);
                            break;
                        case "summoner-level":
                            this._setSummonerLevel(n);
                            break;
                        case "prestige-crest-id":
                            this._setPrestigeCrestId(n);
                            break;
                        case "ranked-tier":
                            this._setRankedTier(n);
                            break;
                        case "ranked-division":
                            this._setRankedDivision(n);
                            break;
                        case "puuid":
                            this._passPuuidToBanner(n)
                    }
                }
                _passSummonerIdToBanner(e) {
                    this._getRegaliaBannerElement().setAttribute("summoner-id", e)
                }
                _passPuuidToBanner(e) {
                    this._getRegaliaBannerElement().setAttribute("puuid", e)
                }
                _setProfileIcon(e) {
                    (0, i.attributeValueIsSet)(e) && this._getRegaliaCrestElement().setAttribute("profile-icon", e)
                }
                _setRankedDivision(e) {
                    (0, i.attributeValueIsSet)(e) && this._getRegaliaCrestElement().setAttribute("ranked-division", e)
                }
                _setRankedTier(e) {
                    (0, i.attributeValueIsSet)(e) && this._getRegaliaCrestElement().setAttribute("ranked-tier", e)
                }
                _setCrestType(e) {
                    (0, i.attributeValueIsSet)(e) && this._getRegaliaCrestElement().setAttribute("crest-type", e)
                }
                _setBannerId(e) {
                    (0, i.attributeValueIsSet)(e) && this._getRegaliaBannerElement().setAttribute("banner-id", e)
                }
                _setBannerType(e) {
                    (0, i.attributeValueIsSet)(e) && this._getRegaliaBannerElement().setAttribute("banner-type", e)
                }
                _setBannerRank(e) {
                    (0, i.attributeValueIsSet)(e) && this._getRegaliaBannerElement().setAttribute("banner-rank", e)
                }
                _setSummonerLevel(e) {
                    (0, i.attributeValueIsSet)(e) && this._getRegaliaCrestElement().setAttribute("summoner-level", e)
                }
                _setPrestigeCrestId(e) {
                    (0, i.attributeValueIsSet)(e) && this._getRegaliaCrestElement().setAttribute("prestige-crest-id", e)
                }
                _getRegaliaBannerElement() {
                    return this.shadowRoot.querySelector("lol-regalia-banner-v2-element")
                }
                _getRegaliaCrestElement() {
                    return this.shadowRoot.querySelector(".regalia-identity-customizer-crest-element")
                }
            }
            r.tagName = "lol-regalia-identity-customizer-element";
            var l = r;
            t.default = l
        }, e => {
            "use strict";
            e.exports = '\x3c!--\r\n  This is the base (wrapper) template for the shadow dom of the element.\r\n--\x3e\r\n<template>\r\n  <div class="regalia-identity-customizer-root" data-type="">\r\n    <lol-regalia-banner-v2-element class="regalia-identity-customizer-banner-backdrop"></lol-regalia-banner-v2-element>\r\n    <div class="regalia-identity-customizer-element-container">\r\n      <div class="regalia-identity-customizer-crest-wrapper">\r\n        <lol-regalia-crest-v2-element\r\n          class="regalia-identity-customizer-crest-element"\r\n          animations="true"\r\n          hide-wing-intro="true"\r\n        ></lol-regalia-crest-v2-element>\r\n      </div>\r\n      <div class="content-wrapper">\r\n        <slot></slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7)(a);
            s.push([e.id, ":host .regalia-identity-customizer-root {\n  position: relative;\n  height: 100%;\n  width: 100%;\n}\n:host .regalia-identity-customizer-root .regalia-identity-customizer-crest-element {\n  width: 100px;\n  height: 100px;\n}\n:host .regalia-identity-customizer-root .regalia-identity-customizer-banner-backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n:host .regalia-identity-customizer-root .regalia-identity-customizer-element-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n}\n:host .regalia-identity-customizer-root .regalia-identity-customizer-element-container .regalia-identity-customizer-crest-wrapper {\n  display: flex;\n  position: relative;\n  width: fit-content;\n  height: fit-content;\n  top: 230px;\n}\n:host .regalia-identity-customizer-root .regalia-identity-customizer-element-container .regalia-identity-customizer-crest-wrapper lol-regalia-crest-element {\n  --regalia-crest-summoner-icon-animation: 1s ease-in-out regalia-crest-animation-fadein;\n  --regalia-crest-themed-level-ring-animation: 1s ease-in-out regalia-crest-animation-fadein;\n}\n:host .regalia-identity-customizer-root .regalia-identity-customizer-element-container .content-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n", "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/regalia/addon/elements/v2/identity-customizer-element/component-style.styl"],
                names: [],
                mappings: "AAAA;EACE,kBAAkB;EAClB,YAAY;EACZ,WAAW;AACb;AACA;EACE,YAAY;EACZ,aAAa;AACf;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,uBAAuB;AACzB;AACA;EACE,aAAa;EACb,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,UAAU;AACZ;AACA;EACE,sFAAsF;EACtF,0FAA0F;AAC5F;AACA;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;AACX",
                sourcesContent: [":host .regalia-identity-customizer-root {\n  position: relative;\n  height: 100%;\n  width: 100%;\n}\n:host .regalia-identity-customizer-root .regalia-identity-customizer-crest-element {\n  width: 100px;\n  height: 100px;\n}\n:host .regalia-identity-customizer-root .regalia-identity-customizer-banner-backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n:host .regalia-identity-customizer-root .regalia-identity-customizer-element-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n}\n:host .regalia-identity-customizer-root .regalia-identity-customizer-element-container .regalia-identity-customizer-crest-wrapper {\n  display: flex;\n  position: relative;\n  width: fit-content;\n  height: fit-content;\n  top: 230px;\n}\n:host .regalia-identity-customizer-root .regalia-identity-customizer-element-container .regalia-identity-customizer-crest-wrapper lol-regalia-crest-element {\n  --regalia-crest-summoner-icon-animation: 1s ease-in-out regalia-crest-animation-fadein;\n  --regalia-crest-themed-level-ring-animation: 1s ease-in-out regalia-crest-animation-fadein;\n}\n:host .regalia-identity-customizer-root .regalia-identity-customizer-element-container .content-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n"],
                sourceRoot: ""
            }]), e.exports = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function(e) {
                const t = e.getApiKey("rcp-fe-lol-lobby key"),
                    n = e.main().getScreenRoot(t, "rcp-fe-lol-lobby"),
                    i = n.getElement(),
                    r = new s.default(i);
                return new a.default(n, r)
            };
            var a = i(n(179)),
                s = i(n(183));

            function i(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(180)) && a.__esModule ? a : {
                default: a
            };
            t.default = class {
                constructor(e, t) {
                    this._screenRoot = e, this._api = t
                }
                show(e, t) {
                    (0, s.default)().then((() => this._api.checkConfigsThenShow(e, t)))
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function() {
                return r().then(l)
            }, t.featureIsEnabled = l, t.waitForLogin = r;
            var a, s = n(1),
                i = (a = n(181)) && a.__esModule ? a : {
                    default: a
                };

            function r() {
                let e;
                const t = new s.Bluebird((t => {
                    e = t
                }));
                let n = !1;
                const a = (0, s.dataBinding)("/lol-login", s.socket),
                    i = t => {
                        t && "SUCCEEDED" === t.state ? (a.unobserve("/v1/session", i), e(n)) : n = !0
                    };
                return a.observe("/v1/session", i), t
            }

            function l() {
                return i.default.get("Enabled").then((e => {
                    if (!0 !== e) throw new Error("Feature is disabled")
                }))
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = n(182);

            function i() {
                return (0, a.dataBinding)("/lol-platform-config").get("/v1/namespaces/AccountVerification")
            }
            var r = {
                getAll: i,
                get: function(e, t = null) {
                    return i().then((n => (0, s.isSet)(n, e) ? n[e] : t))
                }
            };
            t.default = r
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isSet = function(e, t) {
                return !(!e || !Object.hasOwnProperty.call(e, t) || null === e[t])
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = l(n(181)),
                i = l(n(184)),
                r = l(n(185));

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            t.default = class {
                constructor() {}
                checkConfigsThenShow(e, t) {
                    let n = e;
                    n === i.default.screens.phoneEntry ? s.default.getAll().then((a => {
                        const s = a[i.default.jmxHooks.keyPasswordEnabled],
                            r = a[i.default.jmxHooks.keyKrPhoneDisplayEnabled],
                            l = a[i.default.jmxHooks.keyTencentPhoneDisplayEnabled];
                        s && (n = i.default.screens.passwordEntry), r && (e = i.default.screens.krPhoneDisplay, n = i.default.screens.krPhoneDisplay), l && (e = i.default.screens.tencentPhoneDisplay, n = i.default.screens.tencentPhoneDisplay), this.show(e, t, n)
                    })).catch((e => {
                        n = i.default.screens.unexpectedError, (0, r.default)({
                            event_name: "account_verification_private_api_platform_config_error",
                            screen_id: "private-api",
                            message: e.message
                        })
                    })) : n === i.default.screens.phoneRemove ? this.show(e, t, e) : (a.logger.trace("Account Verification API only works with these two flows: `phone-entry` and `phone-remove`."), (0, r.default)({
                        event_name: "account_verification_private_api_",
                        screen_id: "private-api",
                        message: "Another Plugin tried to call this Plugin with invalid init screen."
                    }))
                }
                show(e, t, n) {
                    return this.tra = a.tra, this.application = this._createEmberApplication(this.tra, e, n), this.application.renderPromise.then((() => this.tra.ready())).then((() => {
                        a.logger.trace("Account Verification is initialised with " + e + " screen.");
                        const n = a.ModalManager.add({
                                type: "DialogConfirm",
                                data: {
                                    contents: this.application.domNode,
                                    acceptText: "Submit",
                                    closeButton: !0,
                                    enterEnabled: !1
                                },
                                owner: t
                            }),
                            s = a.ModalManager.getDOMNode(n);
                        a.Ember.$(s).find("lol-uikit-flat-button-group").not(".step-buttons").remove()
                    })).catch((e => {
                        a.logger.error("Account Verification error in show()", e)
                    }))
                }
                _createEmberApplication(e, t, s) {
                    const i = {
                        name: "rcp-fe-lol-account-verification",
                        tra: a.traService,
                        ComponentFactory: a.ComponentFactory,
                        AccountVerificationRootComponent: n(186),
                        AccountVerificationPasswordEntryComponent: n(190),
                        AccountVerificationPhoneEntryComponent: n(192),
                        AccountVerificationTokenEntryComponent: n(239),
                        AccountVerificationPhoneRemoveComponent: n(262),
                        AccountVerificationLoadingComponent: n(264),
                        AccountVerificationSuccessComponent: n(267),
                        AccountVerificationUnexpectedErrorComponent: n(269),
                        AccountVerificationKrPhoneDisplayComponent: n(272),
                        AccountVerificationTencentPhoneDisplayComponent: n(274)
                    };
                    return a.EmberApplicationFactory.setFactoryDefinition(i), a.ComponentFactory.create(i.name, a.Ember.Object.create({
                        currentScreen: s,
                        initScreen: t
                    }))
                }
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                screens: {
                    passwordEntry: "password-entry",
                    phoneEntry: "phone-entry",
                    tokenEntry: "token-entry",
                    phoneRemove: "phone-remove",
                    loading: "loading",
                    success: "success",
                    unexpectedError: "unexpected-error",
                    krPhoneDisplay: "kr-phone-display",
                    tencentPhoneDisplay: "tencent-phone-display"
                },
                verifyType: "SMS",
                smsTokenExpireDurationInSec: 300,
                telemetryTableName: "rcp-fe-lol-account-verification",
                jmxHooks: {
                    keyEnabled: "Enabled",
                    keySettingsEnabled: "SettingsEnabled",
                    keyPasswordEnabled: "PasswordEnabled",
                    keyKrPhoneDisplayEnabled: "KrPhoneDisplayEnabled",
                    keyTencentPhoneDisplayEnabled: "TencentPhoneDisplayEnabled",
                    keyPhoneValidationEnabled: "PhoneValidationEnabled"
                },
                errorCodeMapping: {
                    PHONE_NUMBER_UNAVAILABLE: 300
                }
            };
            t.default = n
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function(e) {
                s.Telemetry.sendCustomData(i.default.telemetryTableName, e)
            };
            var a, s = n(1),
                i = (a = n(184)) && a.__esModule ? a : {
                    default: a
                }
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = l(n(184)),
                i = l(n(187)),
                r = l(n(185));

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            n(188);
            const o = (0, a.dataBinding)("/lol-account-verification", a.socket),
                c = (0, a.emberDataBinding)({
                    Ember: a.Ember,
                    websocket: (0, a.getProvider)().getSocket(),
                    basePaths: {
                        riotclient: "/riotclient"
                    },
                    boundProperties: {
                        regionLocale: {
                            api: "riotclient",
                            path: "/region-locale"
                        }
                    }
                });
            e.exports = a.Ember.Component.extend(c, {
                classNames: ["account-verification-root"],
                layout: n(189),
                initScreen: null,
                currentScreen: null,
                phoneNumber: "",
                formattedPhoneNumber: "",
                isPasswordEntryActive: !1,
                isPasswordValid: !0,
                isPhoneNumberValid: !0,
                isPhoneNumberValidLive: !0,
                isPhoneNumberNotRegistered: !0,
                isTokenRequestNotInProgress: !0,
                isTokenValid: !0,
                isTokenNotExpired: !0,
                isKrPhoneRegistered: !0,
                isKrSsnRegistered: !0,
                smsTokenExpireDurationInSec: s.default.smsTokenExpireDurationInSec,
                tokenRequestInProgressTimeLeftInSec: "",
                selectedCountry: "",
                selectedCountryIndex: 0,
                countryDropdownOptions: a.Ember.computed("regionLocale.locale", (function() {
                    const e = i.default;
                    let t = "en-US";
                    const n = this.get("regionLocale.locale");
                    n && (t = n.replace("_", "-"));
                    const s = a.lodash.map(e, (e => ({
                        iso2: e.iso2,
                        name: this.get("tra.account_verification_" + e.iso2),
                        prefix: e.prefix,
                        selected: !1
                    }))).sort(((e, n) => e.name.localeCompare(n.name, t)));
                    return s[0].selected = !0, s
                })),
                isPasswordEntryScreen: a.Ember.computed("currentScreen", (function() {
                    return this.get("currentScreen") === s.default.screens.passwordEntry && this.set("isPasswordEntryActive", !0), this.get("currentScreen") === s.default.screens.passwordEntry
                })),
                isPhoneEntryScreen: a.Ember.computed("currentScreen", (function() {
                    return this.get("currentScreen") === s.default.screens.phoneEntry
                })),
                isTencentPhoneDisplay: a.Ember.computed("currentScreen", (function() {
                    return this.get("currentScreen") === s.default.screens.tencentPhoneDisplay
                })),
                isTokenEntryScreen: a.Ember.computed("currentScreen", (function() {
                    return this.get("currentScreen") === s.default.screens.tokenEntry
                })),
                isPhoneRemoveScreen: a.Ember.computed("currentScreen", (function() {
                    return this.get("currentScreen") === s.default.screens.phoneRemove
                })),
                isLoadingScreen: a.Ember.computed("currentScreen", (function() {
                    return this.get("currentScreen") === s.default.screens.loading
                })),
                isSuccessScreen: a.Ember.computed("currentScreen", (function() {
                    return this.get("currentScreen") === s.default.screens.success
                })),
                isUnexpectedErrorScreen: a.Ember.computed("currentScreen", (function() {
                    return this.get("currentScreen") === s.default.screens.unexpectedError
                })),
                isKrPhoneDisplay: a.Ember.computed("currentScreen", (function() {
                    return this.get("currentScreen") === s.default.screens.krPhoneDisplay
                })),
                _observeSendActivationPinResponse(e) {
                    o.addObserver("v1/sendActivationPinResponse", this, (t => {
                        if (t && t.clientMessageId) {
                            if (t.data && t.data.pinExpiresAtEpochMillis > 0) this.send("handleChangeScreen");
                            else if (t.error && t.error.errorCode) {
                                const n = s.default.errorCodeMapping[t.error.errorCode] || 309;
                                this.send("handlePhoneNumberNotValidated", n, 0, e)
                            }
                            o.removeObserver("v1/sendActivationPinResponse", this)
                        }
                    }))
                },
                actions: {
                    changeScreen(e) {
                        this.set("currentScreen", e)
                    },
                    handleChangeScreen() {
                        this.send("changeScreen", s.default.screens.tokenEntry), (0, r.default)({
                            event_name: "account_verification_phone_entry_response",
                            screen_id: s.default.screens.phoneEntry,
                            message: "Player successfully entered a phone number."
                        })
                    },
                    handlePhoneNumberNotValidated(e, t, n) {
                        303 === e ? (this.set("isPhoneNumberValid", !1), n ? this.send("changeScreen", s.default.screens.tencentPhoneDisplay) : this.send("changeScreen", s.default.screens.phoneEntry), (0, r.default)({
                            event_name: "account_verification_phone_entry_response",
                            screen_id: s.default.screens.phoneEntry,
                            message: "Phone Number is not validated by Server."
                        })) : 300 === e ? (this.set("isPhoneNumberNotRegistered", !1), n ? this.send("changeScreen", s.default.screens.tencentPhoneDisplay) : this.send("changeScreen", s.default.screens.phoneEntry), (0, r.default)({
                            event_name: "account_verification_phone_entry_response",
                            screen_id: s.default.screens.phoneEntry,
                            message: "Phone Number is already registered."
                        })) : 307 === e ? (this.set("isTokenRequestNotInProgress", !1), this.set("tokenRequestInProgressTimeLeftInSec", t), n ? this.send("changeScreen", s.default.screens.tencentPhoneDisplay) : this.send("changeScreen", s.default.screens.phoneEntry), (0, r.default)({
                            event_name: "account_verification_phone_entry_response",
                            screen_id: s.default.screens.phoneEntry,
                            message: "Token request is already in progress."
                        })) : this.send("unexpectedError", "Player entered a phone number but Server returned undefined status code.")
                    },
                    postPhoneNumberRequest(e) {
                        this.set("isTokenRequestNotInProgress", !0), this.set("isPhoneNumberValid", !0), this.set("isPhoneNumberNotRegistered", !0), this.send("changeScreen", s.default.screens.loading), (0, r.default)({
                            event_name: "account_verification_phone_entered",
                            screen_id: s.default.screens.phoneEntry,
                            message: "Player clicked Submit button. + phone number is " + this.get("phoneNumber")
                        }), o.post("v1/sendActivationPin", {
                            phoneNumber: "+" + this.get("phoneNumber")
                        }).then((t => {
                            (0, r.default)({
                                event_name: "account_verification_handle_get_data",
                                screen_id: s.default.screens.phoneEntry,
                                message: "There was data from getting activation pin " + t
                            }), this._observeSendActivationPinResponse(e)
                        })).catch((e => {
                            this.send("unexpectedError", e.message)
                        }))
                    },
                    confirmRemovalRequest: function() {
                        this.set("isTokenRequestNotInProgress", !0), this.send("changeScreen", s.default.screens.loading), (0, r.default)({
                            event_name: "account_verification_phone_removed",
                            screen_id: s.default.screens.phoneRemove,
                            message: "Player clicked Submit button."
                        }), o.post("v1/sendDeactivationPin").then((e => {
                            this.send("changeScreen", s.default.screens.tokenEntry), (0, r.default)({
                                event_name: "account_verification_handle_get_data",
                                screen_id: s.default.screens.phoneEntry,
                                message: "There was data from getting activation pin"
                            })
                        })).catch((e => {
                            this.send("unexpectedError", e.message)
                        }))
                    },
                    confirmKrVerifyRequest: function() {
                        this.set("isTokenRequestNotInProgress", !0), this.set("isKrPhoneRegistered", !0), this.set("isKrSsnRegistered", !0), this.send("changeScreen", s.default.screens.loading), (0, r.default)({
                            event_name: "account_verification_kr_phone_display_proceed",
                            screen_id: s.default.screens.krPhoneDisplay,
                            message: "Player clicked Proceed button."
                        }), o.post("v1/verify", {
                            token: "123456",
                            mediator: s.default.verifyType
                        }).then((e => {
                            e.success ? (this.send("changeScreen", s.default.screens.success), (0, r.default)({
                                event_name: "account_verification_kr_phone_display_response",
                                screen_id: s.default.screens.krPhoneDisplay,
                                message: "Player successfully proceed from a Phone Display screen."
                            })) : 413 === e.status ? (this.set("isKrSsnRegistered", !1), this.send("changeScreen", s.default.screens.krPhoneDisplay), (0, r.default)({
                                event_name: "account_verification_kr_phone_display_response",
                                screen_id: s.default.screens.krPhoneDisplay,
                                message: "SSN is already registered."
                            })) : this.send("unexpectedError", "Player proceed on KR Phone Display screen but can not able to get success response.")
                        })).catch((e => {
                            this.send("unexpectedError", e.message)
                        }))
                    },
                    unexpectedError(e) {
                        this.send("changeScreen", s.default.screens.unexpectedError), (0, r.default)({
                            event_name: "account_verification_unexpected_error",
                            screen_id: s.default.screens.unexpectedError,
                            message: e
                        })
                    },
                    restrictField: function(e) {
                        const t = window.event;
                        let n = /[\d+\-\(\)]+/g;
                        e && (n = /[0-9]|\./);
                        const a = String.fromCharCode(t.which);
                        !n.test(a) && t.preventDefault && t.preventDefault()
                    }
                }
            })
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = [{
                iso2: "AF",
                name: "Afghanistan",
                prefix: "93"
            }, {
                iso2: "AL",
                name: "Albania",
                prefix: "355"
            }, {
                iso2: "DZ",
                name: "Algeria",
                prefix: "213"
            }, {
                iso2: "AS",
                name: "American Samoa",
                prefix: "1684"
            }, {
                iso2: "AD",
                name: "Andorra",
                prefix: "376"
            }, {
                iso2: "AO",
                name: "Angola",
                prefix: "244"
            }, {
                iso2: "AI",
                name: "Anguilla",
                prefix: "1"
            }, {
                iso2: "AQ",
                name: "Antarctica",
                prefix: "672"
            }, {
                iso2: "AG",
                name: "Antigua and Barbuda",
                prefix: "1"
            }, {
                iso2: "AR",
                name: "Argentina",
                prefix: "54"
            }, {
                iso2: "AM",
                name: "Armenia",
                prefix: "374"
            }, {
                iso2: "AW",
                name: "Aruba",
                prefix: "297"
            }, {
                iso2: "AU",
                name: "Australia",
                prefix: "61"
            }, {
                iso2: "AT",
                name: "Austria",
                prefix: "43"
            }, {
                iso2: "AZ",
                name: "Azerbaijan",
                prefix: "994"
            }, {
                iso2: "BS",
                name: "Bahamas",
                prefix: "1"
            }, {
                iso2: "BH",
                name: "Bahrain",
                prefix: "973"
            }, {
                iso2: "BD",
                name: "Bangladesh",
                prefix: "880"
            }, {
                iso2: "BB",
                name: "Barbados",
                prefix: "1"
            }, {
                iso2: "BY",
                name: "Belarus",
                prefix: "375"
            }, {
                iso2: "BE",
                name: "Belgium",
                prefix: "32"
            }, {
                iso2: "BZ",
                name: "Belize",
                prefix: "501"
            }, {
                iso2: "BJ",
                name: "Benin",
                prefix: "229"
            }, {
                iso2: "BM",
                name: "Bermuda",
                prefix: "1"
            }, {
                iso2: "BT",
                name: "Bhutan",
                prefix: "975"
            }, {
                iso2: "BO",
                name: "Bolivia, Plurinational State of",
                prefix: "591"
            }, {
                iso2: "BQ",
                name: "Bonaire, Sint Eustatius and Saba",
                prefix: "599"
            }, {
                iso2: "BA",
                name: "Bosnia and Herzegovina",
                prefix: "387"
            }, {
                iso2: "BW",
                name: "Botswana",
                prefix: "267"
            }, {
                iso2: "BR",
                name: "Brazil",
                prefix: "55"
            }, {
                iso2: "IO",
                name: "British Indian Ocean Territory",
                prefix: "246"
            }, {
                iso2: "BN",
                name: "Brunei Darussalam",
                prefix: "673"
            }, {
                iso2: "BG",
                name: "Bulgaria",
                prefix: "359"
            }, {
                iso2: "BF",
                name: "Burkina Faso",
                prefix: "226"
            }, {
                iso2: "BI",
                name: "Burundi",
                prefix: "257"
            }, {
                iso2: "CV",
                name: "Cabo Verde",
                prefix: "238"
            }, {
                iso2: "KH",
                name: "Cambodia",
                prefix: "855"
            }, {
                iso2: "CM",
                name: "Cameroon",
                prefix: "237"
            }, {
                iso2: "CA",
                name: "Canada",
                prefix: "1"
            }, {
                iso2: "KY",
                name: "Cayman Islands",
                prefix: "1"
            }, {
                iso2: "CF",
                name: "Central African Republic",
                prefix: "236"
            }, {
                iso2: "TD",
                name: "Chad",
                prefix: "235"
            }, {
                iso2: "CL",
                name: "Chile",
                prefix: "56"
            }, {
                iso2: "CN",
                name: "China",
                prefix: "86"
            }, {
                iso2: "CO",
                name: "Colombia",
                prefix: "57"
            }, {
                iso2: "KM",
                name: "Comoros",
                prefix: "269"
            }, {
                iso2: "CG",
                name: "Congo",
                prefix: "242"
            }, {
                iso2: "CD",
                name: "Congo, the Democratic Republic of the",
                prefix: "243"
            }, {
                iso2: "CK",
                name: "Cook Islands",
                prefix: "682"
            }, {
                iso2: "CR",
                name: "Costa Rica",
                prefix: "506"
            }, {
                iso2: "CI",
                name: "Cote d`Ivoire",
                prefix: "225"
            }, {
                iso2: "HR",
                name: "Croatia",
                prefix: "385"
            }, {
                iso2: "CU",
                name: "Cuba",
                prefix: "53"
            }, {
                iso2: "CW",
                name: "Curacao",
                prefix: "599"
            }, {
                iso2: "CY",
                name: "Cyprus",
                prefix: "357"
            }, {
                iso2: "CZ",
                name: "Czech Republic",
                prefix: "420"
            }, {
                iso2: "DK",
                name: "Denmark",
                prefix: "45"
            }, {
                iso2: "DJ",
                name: "Djibouti",
                prefix: "253"
            }, {
                iso2: "DM",
                name: "Dominica",
                prefix: "1"
            }, {
                iso2: "DO",
                name: "Dominican Republic",
                prefix: "1"
            }, {
                iso2: "EC",
                name: "Ecuador",
                prefix: "593"
            }, {
                iso2: "EG",
                name: "Egypt",
                prefix: "20"
            }, {
                iso2: "SV",
                name: "El Salvador",
                prefix: "503"
            }, {
                iso2: "GQ",
                name: "Equatorial Guinea",
                prefix: "240"
            }, {
                iso2: "ER",
                name: "Eritrea",
                prefix: "291"
            }, {
                iso2: "EE",
                name: "Estonia",
                prefix: "372"
            }, {
                iso2: "ET",
                name: "Ethiopia",
                prefix: "251"
            }, {
                iso2: "FK",
                name: "Falkland Islands (Malvinas)",
                prefix: "500"
            }, {
                iso2: "FO",
                name: "Faroe Islands",
                prefix: "298"
            }, {
                iso2: "FJ",
                name: "Fiji",
                prefix: "679"
            }, {
                iso2: "FI",
                name: "Finland",
                prefix: "358"
            }, {
                iso2: "FR",
                name: "France",
                prefix: "33"
            }, {
                iso2: "GF",
                name: "French Guiana",
                prefix: "594"
            }, {
                iso2: "PF",
                name: "French Polynesia",
                prefix: "689"
            }, {
                iso2: "GA",
                name: "Gabon",
                prefix: "241"
            }, {
                iso2: "GM",
                name: "Gambia",
                prefix: "220"
            }, {
                iso2: "GE",
                name: "Georgia",
                prefix: "995"
            }, {
                iso2: "DE",
                name: "Germany",
                prefix: "49"
            }, {
                iso2: "GH",
                name: "Ghana",
                prefix: "233"
            }, {
                iso2: "GI",
                name: "Gibraltar",
                prefix: "350"
            }, {
                iso2: "GR",
                name: "Greece",
                prefix: "30"
            }, {
                iso2: "GL",
                name: "Greenland",
                prefix: "299"
            }, {
                iso2: "GD",
                name: "Grenada",
                prefix: "1"
            }, {
                iso2: "GP",
                name: "Guadeloupe",
                prefix: "590"
            }, {
                iso2: "GU",
                name: "Guam",
                prefix: "1"
            }, {
                iso2: "GT",
                name: "Guatemala",
                prefix: "502"
            }, {
                iso2: "GN",
                name: "Guinea",
                prefix: "224"
            }, {
                iso2: "GW",
                name: "Guinea-Bissau",
                prefix: "245"
            }, {
                iso2: "GY",
                name: "Guyana",
                prefix: "592"
            }, {
                iso2: "HT",
                name: "Haiti",
                prefix: "509"
            }, {
                iso2: "VA",
                name: "Holy See (Vatican City State)",
                prefix: "379"
            }, {
                iso2: "HN",
                name: "Honduras",
                prefix: "504"
            }, {
                iso2: "HK",
                name: "Hong Kong",
                prefix: "852"
            }, {
                iso2: "HU",
                name: "Hungary",
                prefix: "36"
            }, {
                iso2: "IS",
                name: "Iceland",
                prefix: "354"
            }, {
                iso2: "IN",
                name: "India",
                prefix: "91"
            }, {
                iso2: "ID",
                name: "Indonesia",
                prefix: "62"
            }, {
                iso2: "IR",
                name: "Iran, Islamic Republic of",
                prefix: "98"
            }, {
                iso2: "IQ",
                name: "Iraq",
                prefix: "964"
            }, {
                iso2: "IE",
                name: "Ireland",
                prefix: "353"
            }, {
                iso2: "IL",
                name: "Israel",
                prefix: "972"
            }, {
                iso2: "IT",
                name: "Italy",
                prefix: "39"
            }, {
                iso2: "JM",
                name: "Jamaica",
                prefix: "1"
            }, {
                iso2: "JP",
                name: "Japan",
                prefix: "81"
            }, {
                iso2: "JO",
                name: "Jordan",
                prefix: "962"
            }, {
                iso2: "KZ",
                name: "Kazakhstan",
                prefix: "7"
            }, {
                iso2: "KE",
                name: "Kenya",
                prefix: "254"
            }, {
                iso2: "KI",
                name: "Kiribati",
                prefix: "686"
            }, {
                iso2: "KP",
                name: "Korea, Democratic People`s Republic of",
                prefix: "850"
            }, {
                iso2: "KR",
                name: "Korea, Republic of",
                prefix: "82"
            }, {
                iso2: "XK",
                name: "Kosovo",
                prefix: "383"
            }, {
                iso2: "KW",
                name: "Kuwait",
                prefix: "965"
            }, {
                iso2: "KG",
                name: "Kyrgyzstan",
                prefix: "996"
            }, {
                iso2: "LA",
                name: "Lao People`s Democratic Republic",
                prefix: "856"
            }, {
                iso2: "LV",
                name: "Latvia",
                prefix: "371"
            }, {
                iso2: "LB",
                name: "Lebanon",
                prefix: "961"
            }, {
                iso2: "LS",
                name: "Lesotho",
                prefix: "266"
            }, {
                iso2: "LR",
                name: "Liberia",
                prefix: "231"
            }, {
                iso2: "LY",
                name: "Libya",
                prefix: "218"
            }, {
                iso2: "LI",
                name: "Liechtenstein",
                prefix: "423"
            }, {
                iso2: "LT",
                name: "Lithuania",
                prefix: "370"
            }, {
                iso2: "LU",
                name: "Luxembourg",
                prefix: "352"
            }, {
                iso2: "MO",
                name: "Macao",
                prefix: "853"
            }, {
                iso2: "MK",
                name: "Macedonia, the former Yugoslav Republic of",
                prefix: "389"
            }, {
                iso2: "MG",
                name: "Madagascar",
                prefix: "261"
            }, {
                iso2: "MW",
                name: "Malawi",
                prefix: "265"
            }, {
                iso2: "MY",
                name: "Malaysia",
                prefix: "60"
            }, {
                iso2: "MV",
                name: "Maldives",
                prefix: "960"
            }, {
                iso2: "ML",
                name: "Mali",
                prefix: "223"
            }, {
                iso2: "MT",
                name: "Malta",
                prefix: "356"
            }, {
                iso2: "MH",
                name: "Marshall Islands",
                prefix: "692"
            }, {
                iso2: "MQ",
                name: "Martinique",
                prefix: "596"
            }, {
                iso2: "MR",
                name: "Mauritania",
                prefix: "222"
            }, {
                iso2: "MU",
                name: "Mauritius",
                prefix: "230"
            }, {
                iso2: "MX",
                name: "Mexico",
                prefix: "52"
            }, {
                iso2: "FM",
                name: "Micronesia, Federated States of",
                prefix: "691"
            }, {
                iso2: "MD",
                name: "Moldova, Republic of",
                prefix: "373"
            }, {
                iso2: "MC",
                name: "Monaco",
                prefix: "377"
            }, {
                iso2: "MN",
                name: "Mongolia",
                prefix: "976"
            }, {
                iso2: "ME",
                name: "Montenegro",
                prefix: "382"
            }, {
                iso2: "MS",
                name: "Montserrat",
                prefix: "1"
            }, {
                iso2: "MA",
                name: "Morocco",
                prefix: "212"
            }, {
                iso2: "MZ",
                name: "Mozambique",
                prefix: "258"
            }, {
                iso2: "MM",
                name: "Myanmar",
                prefix: "95"
            }, {
                iso2: "NA",
                name: "Namibia",
                prefix: "264"
            }, {
                iso2: "NR",
                name: "Nauru",
                prefix: "674"
            }, {
                iso2: "NP",
                name: "Nepal",
                prefix: "977"
            }, {
                iso2: "NL",
                name: "Netherlands",
                prefix: "31"
            }, {
                iso2: "NC",
                name: "New Caledonia",
                prefix: "687"
            }, {
                iso2: "NZ",
                name: "New Zealand",
                prefix: "64"
            }, {
                iso2: "NI",
                name: "Nicaragua",
                prefix: "505"
            }, {
                iso2: "NE",
                name: "Niger",
                prefix: "227"
            }, {
                iso2: "NG",
                name: "Nigeria",
                prefix: "234"
            }, {
                iso2: "NU",
                name: "Niue",
                prefix: "683"
            }, {
                iso2: "NF",
                name: "Norfolk Island",
                prefix: "672"
            }, {
                iso2: "MP",
                name: "Northern Mariana Islands",
                prefix: "1"
            }, {
                iso2: "NO",
                name: "Norway",
                prefix: "47"
            }, {
                iso2: "OM",
                name: "Oman",
                prefix: "968"
            }, {
                iso2: "PK",
                name: "Pakistan",
                prefix: "92"
            }, {
                iso2: "PW",
                name: "Palau",
                prefix: "680"
            }, {
                iso2: "PS",
                name: "Palestine, State of",
                prefix: "970"
            }, {
                iso2: "PA",
                name: "Panama",
                prefix: "507"
            }, {
                iso2: "PG",
                name: "Papua New Guinea",
                prefix: "675"
            }, {
                iso2: "PY",
                name: "Paraguay",
                prefix: "595"
            }, {
                iso2: "PE",
                name: "Peru",
                prefix: "51"
            }, {
                iso2: "PH",
                name: "Philippines",
                prefix: "63"
            }, {
                iso2: "PL",
                name: "Poland",
                prefix: "48"
            }, {
                iso2: "PT",
                name: "Portugal",
                prefix: "351"
            }, {
                iso2: "PR",
                name: "Puerto Rico",
                prefix: "1"
            }, {
                iso2: "QA",
                name: "Qatar",
                prefix: "974"
            }, {
                iso2: "RE",
                name: "Reunion",
                prefix: "262"
            }, {
                iso2: "RO",
                name: "Romania",
                prefix: "40"
            }, {
                iso2: "RU",
                name: "Russian Federation",
                prefix: "7"
            }, {
                iso2: "RW",
                name: "Rwanda",
                prefix: "250"
            }, {
                iso2: "SH",
                name: "Saint Helena, Ascension and Tristan da Cunha",
                prefix: "290"
            }, {
                iso2: "KN",
                name: "Saint Kitts and Nevis",
                prefix: "1"
            }, {
                iso2: "LC",
                name: "Saint Lucia",
                prefix: "1"
            }, {
                iso2: "PM",
                name: "Saint Pierre and Miquelon",
                prefix: "508"
            }, {
                iso2: "VC",
                name: "Saint Vincent and the Grenadines",
                prefix: "1"
            }, {
                iso2: "WS",
                name: "Samoa",
                prefix: "685"
            }, {
                iso2: "SM",
                name: "San Marino",
                prefix: "378"
            }, {
                iso2: "ST",
                name: "Sao Tome and Principe",
                prefix: "239"
            }, {
                iso2: "SA",
                name: "Saudi Arabia",
                prefix: "966"
            }, {
                iso2: "SN",
                name: "Senegal",
                prefix: "221"
            }, {
                iso2: "RS",
                name: "Serbia",
                prefix: "381"
            }, {
                iso2: "SC",
                name: "Seychelles",
                prefix: "248"
            }, {
                iso2: "SL",
                name: "Sierra Leone",
                prefix: "232"
            }, {
                iso2: "SG",
                name: "Singapore",
                prefix: "65"
            }, {
                iso2: "SX",
                name: "Sint Maarten (Dutch part)",
                prefix: "1"
            }, {
                iso2: "SK",
                name: "Slovakia",
                prefix: "421"
            }, {
                iso2: "SI",
                name: "Slovenia",
                prefix: "386"
            }, {
                iso2: "SB",
                name: "Solomon Islands",
                prefix: "677"
            }, {
                iso2: "SO",
                name: "Somalia",
                prefix: "252"
            }, {
                iso2: "ZA",
                name: "South Africa",
                prefix: "27"
            }, {
                iso2: "SS",
                name: "South Sudan",
                prefix: "211"
            }, {
                iso2: "ES",
                name: "Spain",
                prefix: "34"
            }, {
                iso2: "LK",
                name: "Sri Lanka",
                prefix: "94"
            }, {
                iso2: "SD",
                name: "Sudan",
                prefix: "249"
            }, {
                iso2: "SR",
                name: "Suriname",
                prefix: "597"
            }, {
                iso2: "SJ",
                name: "Svalbard and Jan Mayen",
                prefix: "4779"
            }, {
                iso2: "SZ",
                name: "Swaziland",
                prefix: "268"
            }, {
                iso2: "SE",
                name: "Sweden",
                prefix: "46"
            }, {
                iso2: "CH",
                name: "Switzerland",
                prefix: "41"
            }, {
                iso2: "SY",
                name: "Syrian Arab Republic",
                prefix: "963"
            }, {
                iso2: "TW",
                name: "Taiwan, Province of China",
                prefix: "886"
            }, {
                iso2: "TJ",
                name: "Tajikistan",
                prefix: "992"
            }, {
                iso2: "TZ",
                name: "Tanzania, United Republic of",
                prefix: "255"
            }, {
                iso2: "TH",
                name: "Thailand",
                prefix: "66"
            }, {
                iso2: "TL",
                name: "Timor-Leste",
                prefix: "670"
            }, {
                iso2: "TG",
                name: "Togo",
                prefix: "228"
            }, {
                iso2: "TK",
                name: "Tokelau",
                prefix: "690"
            }, {
                iso2: "TO",
                name: "Tonga",
                prefix: "676"
            }, {
                iso2: "TT",
                name: "Trinidad and Tobago",
                prefix: "1"
            }, {
                iso2: "TN",
                name: "Tunisia",
                prefix: "216"
            }, {
                iso2: "TR",
                name: "Turkey",
                prefix: "90"
            }, {
                iso2: "TM",
                name: "Turkmenistan",
                prefix: "993"
            }, {
                iso2: "TC",
                name: "Turks and Caicos Islands",
                prefix: "1"
            }, {
                iso2: "TV",
                name: "Tuvalu",
                prefix: "688"
            }, {
                iso2: "UG",
                name: "Uganda",
                prefix: "256"
            }, {
                iso2: "UA",
                name: "Ukraine",
                prefix: "380"
            }, {
                iso2: "AE",
                name: "United Arab Emirates",
                prefix: "971"
            }, {
                iso2: "GB",
                name: "United Kingdom",
                prefix: "44"
            }, {
                iso2: "US",
                name: "United States",
                prefix: "1"
            }, {
                iso2: "UY",
                name: "Uruguay",
                prefix: "598"
            }, {
                iso2: "UZ",
                name: "Uzbekistan",
                prefix: "998"
            }, {
                iso2: "VU",
                name: "Vanuatu",
                prefix: "678"
            }, {
                iso2: "VE",
                name: "Venezuela, Bolivarian Republic of",
                prefix: "58"
            }, {
                iso2: "VN",
                name: "Viet Nam",
                prefix: "84"
            }, {
                iso2: "VG",
                name: "Virgin Islands, British",
                prefix: "1"
            }, {
                iso2: "VI",
                name: "Virgin Islands, U.S.",
                prefix: "1"
            }, {
                iso2: "WF",
                name: "Wallis and Futuna",
                prefix: "681"
            }, {
                iso2: "YE",
                name: "Yemen",
                prefix: "967"
            }, {
                iso2: "ZM",
                name: "Zambia",
                prefix: "260"
            }, {
                iso2: "ZW",
                name: "Zimbabwe",
                prefix: "263"
            }];
            t.default = n
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "Fe6Mi4od",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\root\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\root\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\root\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","account-verification-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isPasswordEntryScreen"]]],null,16,15],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["append",["helper",["account-verification-kr-phone-display"],null,[["smsTokenExpireDurationInSec","tokenRequestInProgressTimeLeftInSec","isTokenRequestNotInProgress","isKrPhoneRegistered","isKrSsnRegistered","confirmKrVerifyRequest","changeScreen","unexpectedError"],[["get",["smsTokenExpireDurationInSec"]],["get",["tokenRequestInProgressTimeLeftInSec"]],["get",["isTokenRequestNotInProgress"]],["get",["isKrPhoneRegistered"]],["get",["isKrSsnRegistered"]],["helper",["action"],[["get",[null]],"confirmKrVerifyRequest"],null],["helper",["action"],[["get",[null]],"changeScreen"],null],["helper",["action"],[["get",[null]],"unexpectedError"],null]]]],false],["text","\\n  "]],"locals":[]},{"statements":[["block",["if"],[["get",["isKrPhoneDisplay"]]],null,0]],"locals":[]},{"statements":[["text","    "],["append",["helper",["account-verification-unexpected-error"],null,[["changeScreen"],[["helper",["action"],[["get",[null]],"changeScreen"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isUnexpectedErrorScreen"]]],null,2,1]],"locals":[]},{"statements":[["text","    "],["append",["helper",["account-verification-success"],null,[["changeScreen"],[["helper",["action"],[["get",[null]],"changeScreen"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isSuccessScreen"]]],null,4,3]],"locals":[]},{"statements":[["text","    "],["append",["helper",["account-verification-loading"],null,[["changeScreen"],[["helper",["action"],[["get",[null]],"changeScreen"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isLoadingScreen"]]],null,6,5]],"locals":[]},{"statements":[["text","    "],["append",["helper",["account-verification-phone-remove"],null,[["phoneNumber","formattedPhoneNumber","selectedCountry","geoInfo","smsTokenExpireDurationInSec","tokenRequestInProgressTimeLeftInSec","isTokenRequestNotInProgress","confirmRemovalRequest","changeScreen","unexpectedError"],[["get",["phoneNumber"]],["get",["formattedPhoneNumber"]],["get",["selectedCountry"]],["get",["geoInfo"]],["get",["smsTokenExpireDurationInSec"]],["get",["tokenRequestInProgressTimeLeftInSec"]],["get",["isTokenRequestNotInProgress"]],["helper",["action"],[["get",[null]],"confirmRemovalRequest"],null],["helper",["action"],[["get",[null]],"changeScreen"],null],["helper",["action"],[["get",[null]],"unexpectedError"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isPhoneRemoveScreen"]]],null,8,7]],"locals":[]},{"statements":[["text","    "],["append",["helper",["account-verification-token-entry"],null,[["isPasswordEntryActive","initScreen","phoneNumber","formattedPhoneNumber","selectedCountry","geoInfo","smsTokenExpireDurationInSec","isTokenValid","isTokenNotExpired","restrictField","postPhoneNumberRequest","confirmRemovalRequest","confirmKrVerifyRequest","changeScreen","unexpectedError"],[["get",["isPasswordEntryActive"]],["get",["initScreen"]],["get",["phoneNumber"]],["get",["formattedPhoneNumber"]],["get",["selectedCountry"]],["get",["geoInfo"]],["get",["smsTokenExpireDurationInSec"]],["get",["isTokenValid"]],["get",["isTokenNotExpired"]],["helper",["action"],[["get",[null]],"restrictField"],null],["helper",["action"],[["get",[null]],"postPhoneNumberRequest"],null],["helper",["action"],[["get",[null]],"confirmRemovalRequest"],null],["helper",["action"],[["get",[null]],"confirmKrVerifyRequest"],null],["helper",["action"],[["get",[null]],"changeScreen"],null],["helper",["action"],[["get",[null]],"unexpectedError"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isTokenEntryScreen"]]],null,10,9]],"locals":[]},{"statements":[["text","    "],["append",["helper",["account-verification-tencent-phone-display"],null,[["phoneNumber","smsTokenExpireDurationInSec","tokenRequestInProgressTimeLeftInSec","isTokenRequestNotInProgress","isPhoneNumberValid","isPhoneNumberNotRegistered","postPhoneNumberRequest","restrictField","changeScreen"],[["get",["phoneNumber"]],["get",["smsTokenExpireDurationInSec"]],["get",["tokenRequestInProgressTimeLeftInSec"]],["get",["isTokenRequestNotInProgress"]],["get",["isPhoneNumberValid"]],["get",["isPhoneNumberNotRegistered"]],["helper",["action"],[["get",[null]],"postPhoneNumberRequest"],null],["helper",["action"],[["get",[null]],"restrictField"],null],["helper",["action"],[["get",[null]],"changeScreen"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isTencentPhoneDisplay"]]],null,12,11]],"locals":[]},{"statements":[["text","    "],["append",["helper",["account-verification-phone-entry"],null,[["isPasswordEntryActive","phoneNumber","formattedPhoneNumber","selectedCountry","selectedCountryIndex","countryDropdownOptions","smsTokenExpireDurationInSec","tokenRequestInProgressTimeLeftInSec","isTokenRequestNotInProgress","isPhoneNumberValid","isPhoneNumberValidLive","isPhoneNumberNotRegistered","postPhoneNumberRequest","changeScreen"],[["get",["isPasswordEntryActive"]],["get",["phoneNumber"]],["get",["formattedPhoneNumber"]],["get",["selectedCountry"]],["get",["selectedCountryIndex"]],["get",["countryDropdownOptions"]],["get",["smsTokenExpireDurationInSec"]],["get",["tokenRequestInProgressTimeLeftInSec"]],["get",["isTokenRequestNotInProgress"]],["get",["isPhoneNumberValid"]],["get",["isPhoneNumberValidLive"]],["get",["isPhoneNumberNotRegistered"]],["helper",["action"],[["get",[null]],"postPhoneNumberRequest"],null],["helper",["action"],[["get",[null]],"changeScreen"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isPhoneEntryScreen"]]],null,14,13]],"locals":[]},{"statements":[["text","    "],["append",["helper",["account-verification-password-entry"],null,[["isPasswordValid","changeScreen","unexpectedError"],[["get",["isPasswordValid"]],["helper",["action"],[["get",[null]],"changeScreen"],null],["helper",["action"],[["get",[null]],"unexpectedError"],null]]]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = r(n(184)),
                i = r(n(185));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const l = (0, a.dataBinding)("/lol-account-verification", a.socket);
            e.exports = a.Ember.Component.extend({
                layout: n(191),
                classNames: ["account-verification-password-entry"],
                postPassword: function() {
                    this.set("isPasswordValid", !0);
                    const e = this.get("password");
                    this.changeScreen(s.default.screens.loading), (0, i.default)({
                        event_name: "account_verification_password_entered",
                        screen_id: s.default.screens.passwordEntry,
                        message: "Player clicked Submit button."
                    }), l.post("v1/authenticate", {
                        password: e
                    }).then((e => {
                        e.success ? (this.changeScreen(s.default.screens.phoneEntry), (0, i.default)({
                            event_name: "account_verification_password_entry_response",
                            screen_id: s.default.screens.passwordEntry,
                            message: "Player successfully entered the password."
                        })) : 401 === e.status ? (this.set("isPasswordValid", !1), this.changeScreen(s.default.screens.passwordEntry), (0, i.default)({
                            event_name: "account_verification_password_entry_response",
                            screen_id: s.default.screens.passwordEntry,
                            message: "Player entered invalid password."
                        })) : this.unexpectedError("Player entered password but can not be able to get success response from v1/authenticate endpoint.")
                    })).catch((e => {
                        this.unexpectedError(e.message)
                    }))
                },
                actions: {
                    postPassword: function() {
                        this.postPassword()
                    },
                    passwordEntered: function() {
                        this.postPassword()
                    }
                }
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "HV3dZpAo",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\password-entry\\\\layout.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\password-entry\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","step-container"],["flush-element"],["text","\\n  "],["open-element","h2",[]],["static-attr","class","step-heading"],["flush-element"],["text","\\n    "],["append",["unknown",["tra","account_verification_password_entry_heading"]],false],["text","\\n    "],["append",["unknown",["tra","account_verification_step_heading"]],false],["text","\\n    1\\n    "],["append",["unknown",["tra","account_verification_of_heading"]],false],["text","\\n    3\\n  "],["close-element"],["text","\\n\\n  "],["open-element","h3",[]],["static-attr","class","field-title"],["flush-element"],["append",["unknown",["tra","account_verification_password_entry_field_title"]],false],["close-element"],["text","\\n\\n  "],["open-element","lol-uikit-flat-input",[]],["dynamic-attr","class",["concat",[["helper",["if"],[["get",["isPasswordValid"]],"","field-error"],null]]]],["flush-element"],["text","\\n    "],["append",["helper",["input"],null,[["class","value","insert-newline","type","autofocus"],["field wide",["get",["password"]],"passwordEntered","password","autofocus"]]],false],["text","\\n  "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["isPasswordValid"]]],null,1,0],["text","\\n  "],["open-element","lol-uikit-flat-button-group",[]],["static-attr","class","step-buttons"],["static-attr","type","dialog-frame"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-button",[]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"postPassword"],null],null],["flush-element"],["append",["unknown",["tra","account_verification_submit_button"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","p",[]],["static-attr","class","field-desc field-error-text"],["flush-element"],["append",["unknown",["tra","account_verification_password_entry_not_valid_error"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","p",[]],["static-attr","class","field-desc"],["flush-element"],["append",["unknown",["tra","account_verification_password_entry_field_desc"]],false],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(193);
            const i = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                basePaths: {
                    platformConfig: "/lol-platform-config"
                },
                boundProperties: {
                    lcuAccVerConfig: {
                        api: "platformConfig",
                        path: "/v1/namespaces/AccountVerification"
                    }
                }
            });
            e.exports = a.Ember.Component.extend(i, {
                layout: n(238),
                classNames: ["account-verification-phone-entry"],
                accountVerification: a.Ember.inject.service("account-verification"),
                phoneNumberPart1: "",
                phoneNumberPart2: "",
                phoneNumber: "",
                selectedCountryIndex: 0,
                selectedCountry: null,
                isPhoneValidationEnabled: a.Ember.computed.bool("lcuAccVerConfig.PhoneValidationEnabled"),
                countryDropdownOptions: "",
                postPhoneNumber: function() {
                    const e = this.get("countryDropdownOptions")[this.get("selectedCountryIndex")].prefix + this.get("phoneNumberPart2"),
                        t = this.stripPhoneNumber(e);
                    t && t.match(/^\d+$/) && t.length > 3 ? (this.set("isPhoneNumberValid", !0), this.set("phoneNumber", t), this.postPhoneNumberRequest(!1)) : this.set("isPhoneNumberValid", !1)
                },
                stripPhoneNumber: function(e) {
                    return e ? e.replace(/[\+\(\)-\s+]/g, "") : null
                },
                changeSelectedCountry: function(e) {
                    const t = this.get("selectedCountryIndex");
                    if (e !== t) {
                        const n = this.get("countryDropdownOptions");
                        return a.Ember.set(n[t], "selected", !1), a.Ember.set(n[e], "selected", !0), this.set("selectedCountry", n[e].iso2), this.set("selectedCountryIndex", e), !0
                    }
                    return !1
                },
                actions: {
                    postPhoneNumber: function() {
                        this.postPhoneNumber()
                    },
                    phoneNumberEntered: function() {
                        this.get("isPhoneNumberValidLive") && this.postPhoneNumber()
                    },
                    selectCountry: function(e) {
                        this.changeSelectedCountry(e) && this.set("phoneNumberPart2", "")
                    },
                    phoneNumberPart2KeyUp: function() {
                        const e = this.get("selectedCountry"),
                            t = this.get("phoneNumberPart2"),
                            n = this.get("isPhoneValidationEnabled"),
                            a = new s.AsYouType(e).input(t);
                        this.set("phoneNumberPart2", a), this.set("formattedPhoneNumber", a);
                        (n ? (0, s.isValidNumber)(t, e) : t.length > 3) ? (this.set("isPhoneNumberValidLive", !0), this.$(".submit-phone-number-button")[0].removeAttribute("disabled", "")) : (this.set("isPhoneNumberValidLive", !1), this.$(".submit-phone-number-button")[0].setAttribute("disabled", "disabled"))
                    },
                    dropdownKeyPress: function(e) {
                        e.stopPropagation();
                        let t = String.fromCharCode(e.which);
                        const n = this.get("countryDropdownOptions");
                        if (!/^\d+$/.test(t)) {
                            t = t.toUpperCase();
                            for (let a = 0; a < n.length; a += 1)
                                if (n[a].name.charAt(0) === t) {
                                    this.changeSelectedCountry(a) && this.set("phoneNumberPart2", "");
                                    const t = e.currentTarget;
                                    t && setTimeout((function() {
                                        t._scrollToSelectedOption()
                                    }), 0);
                                    break
                                }
                        }
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                AsYouType: () => U,
                AsYouTypeCustom: () => A.default,
                DIGITS: () => C.DIGITS,
                DIGIT_PLACEHOLDER: () => A.DIGIT_PLACEHOLDER,
                Metadata: () => b.default,
                ParseError: () => k.default,
                PhoneNumberMatcher: () => G,
                PhoneNumberSearch: () => O,
                PhoneNumberSearchCustom: () => h.PhoneNumberSearch,
                findNumbers: () => H,
                findPhoneNumbers: () => M,
                findPhoneNumbersCustom: () => p.default,
                format: () => I,
                formatCustom: () => l.default,
                formatIncompletePhoneNumber: () => W,
                formatNumber: () => L,
                formatRFC3966: () => z,
                getCountryCallingCode: () => q,
                getCountryCallingCodeCustom: () => b.getCountryCallingCode,
                getExampleNumber: () => P,
                getExtPrefix: () => Y,
                getNumberType: () => R,
                getNumberTypeCustom: () => o.default,
                getPhoneCode: () => K,
                getPhoneCodeCustom: () => X,
                isPossibleNumber: () => N,
                isSupportedCountry: () => F,
                isValidNumber: () => B,
                isValidNumberCustom: () => u.default,
                isValidNumberForRegion: () => $,
                parse: () => S,
                parseCustom: () => r.default,
                parseDigits: () => C.default,
                parseIncompletePhoneNumber: () => y.default,
                parseNumber: () => w,
                parsePhoneNumber: () => x,
                parsePhoneNumberCharacter: () => y.parsePhoneNumberCharacter,
                parsePhoneNumberFromString: () => T,
                parseRFC3966: () => j,
                searchNumbers: () => V,
                searchPhoneNumbers: () => D,
                searchPhoneNumbersCustom: () => p.searchPhoneNumbers
            });
            var a = n(199),
                s = n(200),
                i = n(214),
                r = n(216),
                l = n(217),
                o = n(218),
                c = n(219),
                d = n(220),
                u = n(221),
                m = n(222),
                p = n(224),
                h = n(225),
                g = n(231),
                f = n(235),
                _ = n(233),
                A = n(236),
                b = n(194),
                v = n(210),
                E = n(237),
                y = n(196),
                C = n(197),
                k = n(198);

            function x() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), s.default.apply(this, e)
            }

            function T() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), i.default.apply(this, e)
            }

            function w() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), r.default.apply(this, e)
            }

            function S() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), r.default.apply(this, e)
            }

            function L() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), l.default.apply(this, e)
            }

            function I() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), l.default.apply(this, e)
            }

            function R() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), o.default.apply(this, e)
            }

            function P() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), c.default.apply(this, e)
            }

            function N() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), d.default.apply(this, e)
            }

            function B() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), u.default.apply(this, e)
            }

            function $() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), m.default.apply(this, e)
            }

            function M() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), p.default.apply(this, e)
            }

            function D() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), p.searchPhoneNumbers.apply(this, e)
            }

            function O(e, t) {
                h.PhoneNumberSearch.call(this, e, t, a)
            }

            function H() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), g.default.apply(this, e)
            }

            function V() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), f.default.apply(this, e)
            }

            function G(e, t) {
                _.default.call(this, e, t, a)
            }

            function U(e) {
                A.default.call(this, e, a)
            }

            function F() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), b.isSupportedCountry.apply(this, e)
            }

            function Y() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), b.getExtPrefix.apply(this, e)
            }

            function j() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), v.parseRFC3966.apply(this, e)
            }

            function z() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), v.formatRFC3966.apply(this, e)
            }

            function W() {
                var e = Array.prototype.slice.call(arguments);
                return e.push(a), E.default.apply(this, e)
            }

            function q(e) {
                return (0, b.getCountryCallingCode)(e, a)
            }

            function K(e) {
                return q(e)
            }

            function X(e, t) {
                return (0, b.getCountryCallingCode)(e, t)
            }
            O.prototype = Object.create(h.PhoneNumberSearch.prototype, {}), O.prototype.constructor = O, G.prototype = Object.create(_.default.prototype, {}), G.prototype.constructor = G, U.prototype = Object.create(A.default.prototype, {}), U.prototype.constructor = U
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => d,
                getCountryCallingCode: () => A,
                getExtPrefix: () => _,
                isSupportedCountry: () => b,
                validateMetadata: () => h
            });
            var a = n(195),
                s = n.n(a),
                i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                } : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                },
                r = function() {
                    function e(e, t) {
                        for (var n = 0; n < t.length; n++) {
                            var a = t[n];
                            a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                        }
                    }
                    return function(t, n, a) {
                        return n && e(t.prototype, n), a && e(t, a), t
                    }
                }();

            function l(e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }
            var o = " ext. ",
                c = function() {
                    function e(t) {
                        l(this, e), h(t), this.metadata = t, this.v1 = !t.version, this.v2 = void 0 !== t.version && -1 === s()(t.version, "1.2.0"), this.v3 = void 0 !== t.version
                    }
                    return r(e, [{
                        key: "hasCountry",
                        value: function(e) {
                            return void 0 !== this.metadata.countries[e]
                        }
                    }, {
                        key: "country",
                        value: function(e) {
                            if (!e) return this._country = void 0, this.country_metadata = void 0, this;
                            if (!this.hasCountry(e)) throw new Error("Unknown country: " + e);
                            return this._country = e, this.country_metadata = this.metadata.countries[e], this
                        }
                    }, {
                        key: "getDefaultCountryMetadataForRegion",
                        value: function() {
                            return this.metadata.countries[this.countryCallingCodes()[this.countryCallingCode()][0]]
                        }
                    }, {
                        key: "countryCallingCode",
                        value: function() {
                            return this.country_metadata[0]
                        }
                    }, {
                        key: "IDDPrefix",
                        value: function() {
                            if (!this.v1 && !this.v2) return this.country_metadata[1]
                        }
                    }, {
                        key: "defaultIDDPrefix",
                        value: function() {
                            if (!this.v1 && !this.v2) return this.country_metadata[12]
                        }
                    }, {
                        key: "nationalNumberPattern",
                        value: function() {
                            return this.v1 || this.v2 ? this.country_metadata[1] : this.country_metadata[2]
                        }
                    }, {
                        key: "possibleLengths",
                        value: function() {
                            if (!this.v1) return this.country_metadata[this.v2 ? 2 : 3]
                        }
                    }, {
                        key: "_getFormats",
                        value: function(e) {
                            return e[this.v1 ? 2 : this.v2 ? 3 : 4]
                        }
                    }, {
                        key: "formats",
                        value: function() {
                            var e = this,
                                t = this._getFormats(this.country_metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || [];
                            return t.map((function(t) {
                                return new u(t, e)
                            }))
                        }
                    }, {
                        key: "nationalPrefix",
                        value: function() {
                            return this.country_metadata[this.v1 ? 3 : this.v2 ? 4 : 5]
                        }
                    }, {
                        key: "_getNationalPrefixFormattingRule",
                        value: function(e) {
                            return e[this.v1 ? 4 : this.v2 ? 5 : 6]
                        }
                    }, {
                        key: "nationalPrefixFormattingRule",
                        value: function() {
                            return this._getNationalPrefixFormattingRule(this.country_metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion())
                        }
                    }, {
                        key: "nationalPrefixForParsing",
                        value: function() {
                            return this.country_metadata[this.v1 ? 5 : this.v2 ? 6 : 7] || this.nationalPrefix()
                        }
                    }, {
                        key: "nationalPrefixTransformRule",
                        value: function() {
                            return this.country_metadata[this.v1 ? 6 : this.v2 ? 7 : 8]
                        }
                    }, {
                        key: "_getNationalPrefixIsOptionalWhenFormatting",
                        value: function() {
                            return !!this.country_metadata[this.v1 ? 7 : this.v2 ? 8 : 9]
                        }
                    }, {
                        key: "nationalPrefixIsOptionalWhenFormatting",
                        value: function() {
                            return this._getNationalPrefixIsOptionalWhenFormatting(this.country_metadata) || this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion())
                        }
                    }, {
                        key: "leadingDigits",
                        value: function() {
                            return this.country_metadata[this.v1 ? 8 : this.v2 ? 9 : 10]
                        }
                    }, {
                        key: "types",
                        value: function() {
                            return this.country_metadata[this.v1 ? 9 : this.v2 ? 10 : 11]
                        }
                    }, {
                        key: "hasTypes",
                        value: function() {
                            return (!this.types() || 0 !== this.types().length) && !!this.types()
                        }
                    }, {
                        key: "type",
                        value: function(e) {
                            if (this.hasTypes() && p(this.types(), e)) return new m(p(this.types(), e), this)
                        }
                    }, {
                        key: "ext",
                        value: function() {
                            return this.v1 || this.v2 ? o : this.country_metadata[13] || o
                        }
                    }, {
                        key: "countryCallingCodes",
                        value: function() {
                            return this.v1 ? this.metadata.country_phone_code_to_countries : this.metadata.country_calling_codes
                        }
                    }, {
                        key: "chooseCountryByCountryCallingCode",
                        value: function(e) {
                            var t = this.countryCallingCodes()[e][0];
                            this.hasCountry(t) && this.country(t)
                        }
                    }, {
                        key: "selectedCountry",
                        value: function() {
                            return this._country
                        }
                    }]), e
                }();
            const d = c;
            var u = function() {
                    function e(t, n) {
                        l(this, e), this._format = t, this.metadata = n
                    }
                    return r(e, [{
                        key: "pattern",
                        value: function() {
                            return this._format[0]
                        }
                    }, {
                        key: "format",
                        value: function() {
                            return this._format[1]
                        }
                    }, {
                        key: "leadingDigitsPatterns",
                        value: function() {
                            return this._format[2] || []
                        }
                    }, {
                        key: "nationalPrefixFormattingRule",
                        value: function() {
                            return this._format[3] || this.metadata.nationalPrefixFormattingRule()
                        }
                    }, {
                        key: "nationalPrefixIsOptionalWhenFormatting",
                        value: function() {
                            return !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormatting()
                        }
                    }, {
                        key: "nationalPrefixIsMandatoryWhenFormatting",
                        value: function() {
                            return this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormatting()
                        }
                    }, {
                        key: "usesNationalPrefix",
                        value: function() {
                            return this.nationalPrefixFormattingRule() && "$1" !== this.nationalPrefixFormattingRule() && /\d/.test(this.nationalPrefixFormattingRule().replace("$1", ""))
                        }
                    }, {
                        key: "internationalFormat",
                        value: function() {
                            return this._format[5] || this.format()
                        }
                    }]), e
                }(),
                m = function() {
                    function e(t, n) {
                        l(this, e), this.type = t, this.metadata = n
                    }
                    return r(e, [{
                        key: "pattern",
                        value: function() {
                            return this.metadata.v1 ? this.type : this.type[0]
                        }
                    }, {
                        key: "possibleLengths",
                        value: function() {
                            if (!this.metadata.v1) return this.type[1] || this.metadata.possibleLengths()
                        }
                    }]), e
                }();

            function p(e, t) {
                switch (t) {
                    case "FIXED_LINE":
                        return e[0];
                    case "MOBILE":
                        return e[1];
                    case "TOLL_FREE":
                        return e[2];
                    case "PREMIUM_RATE":
                        return e[3];
                    case "PERSONAL_NUMBER":
                        return e[4];
                    case "VOICEMAIL":
                        return e[5];
                    case "UAN":
                        return e[6];
                    case "PAGER":
                        return e[7];
                    case "VOIP":
                        return e[8];
                    case "SHARED_COST":
                        return e[9]
                }
            }

            function h(e) {
                if (!e) throw new Error("[libphonenumber-js] `metadata` argument not passed. Check your arguments.");
                if (!g(e) || !g(e.countries) || !g(e.country_calling_codes) && !g(e.country_phone_code_to_countries)) throw new Error("[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` and `.country_calling_codes` child object properties. Got " + (g(e) ? "an object of shape: { " + Object.keys(e).join(", ") + " }" : "a " + f(e) + ": " + e) + ".")
            }
            var g = function(e) {
                    return "object" === (void 0 === e ? "undefined" : i(e))
                },
                f = function(e) {
                    return void 0 === e ? "undefined" : i(e)
                };

            function _(e, t) {
                return (t = new c(t)).hasCountry(e) ? t.country(e).ext() : o
            }

            function A(e, t) {
                if ((t = new c(t)).hasCountry(e)) return t.country(e).countryCallingCode();
                throw new Error("Unknown country: " + e)
            }

            function b(e, t) {
                return void 0 !== t.countries[e]
            }
        }, e => {
            e.exports = function(e, t) {
                for (var n = e.split("."), a = t.split("."), s = 0; s < 3; s++) {
                    var i = Number(n[s]),
                        r = Number(a[s]);
                    if (i > r) return 1;
                    if (r > i) return -1;
                    if (!isNaN(i) && isNaN(r)) return 1;
                    if (isNaN(i) && !isNaN(r)) return -1
                }
                return 0
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => s,
                parsePhoneNumberCharacter: () => i
            });
            var a = n(197);

            function s(e) {
                var t = "",
                    n = e.split(""),
                    a = Array.isArray(n),
                    s = 0;
                for (n = a ? n : n[Symbol.iterator]();;) {
                    var r;
                    if (a) {
                        if (s >= n.length) break;
                        r = n[s++]
                    } else {
                        if ((s = n.next()).done) break;
                        r = s.value
                    }
                    t += i(r, t) || ""
                }
                return t
            }

            function i(e, t) {
                if ("+" === e) {
                    if (t) return;
                    return "+"
                }
                return (0, a.parseDigit)(e)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                DIGITS: () => a,
                default: () => i,
                parseDigit: () => s
            });
            var a = {
                0: "0",
                1: "1",
                2: "2",
                3: "3",
                4: "4",
                5: "5",
                6: "6",
                7: "7",
                8: "8",
                9: "9",
                "０": "0",
                "１": "1",
                "２": "2",
                "３": "3",
                "４": "4",
                "５": "5",
                "６": "6",
                "７": "7",
                "８": "8",
                "９": "9",
                "٠": "0",
                "١": "1",
                "٢": "2",
                "٣": "3",
                "٤": "4",
                "٥": "5",
                "٦": "6",
                "٧": "7",
                "٨": "8",
                "٩": "9",
                "۰": "0",
                "۱": "1",
                "۲": "2",
                "۳": "3",
                "۴": "4",
                "۵": "5",
                "۶": "6",
                "۷": "7",
                "۸": "8",
                "۹": "9"
            };

            function s(e) {
                return a[e]
            }

            function i(e) {
                var t = "",
                    n = e.split(""),
                    a = Array.isArray(n),
                    i = 0;
                for (n = a ? n : n[Symbol.iterator]();;) {
                    var r;
                    if (a) {
                        if (i >= n.length) break;
                        r = n[i++]
                    } else {
                        if ((i = n.next()).done) break;
                        r = i.value
                    }
                    var l = s(r);
                    l && (t += l)
                }
                return t
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => s
            });
            var a = function e(t) {
                ! function(e, t) {
                    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                }(this, e), this.name = this.constructor.name, this.message = t, this.stack = new Error(t).stack
            };
            const s = a;
            (a.prototype = Object.create(Error.prototype)).constructor = a
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"version":"1.7.16","country_calling_codes":{"1":["US","AG","AI","AS","BB","BM","BS","CA","DM","DO","GD","GU","JM","KN","KY","LC","MP","MS","PR","SX","TC","TT","VC","VG","VI"],"7":["RU","KZ"],"20":["EG"],"27":["ZA"],"30":["GR"],"31":["NL"],"32":["BE"],"33":["FR"],"34":["ES"],"36":["HU"],"39":["IT","VA"],"40":["RO"],"41":["CH"],"43":["AT"],"44":["GB","GG","IM","JE"],"45":["DK"],"46":["SE"],"47":["NO","SJ"],"48":["PL"],"49":["DE"],"51":["PE"],"52":["MX"],"53":["CU"],"54":["AR"],"55":["BR"],"56":["CL"],"57":["CO"],"58":["VE"],"60":["MY"],"61":["AU","CC","CX"],"62":["ID"],"63":["PH"],"64":["NZ"],"65":["SG"],"66":["TH"],"81":["JP"],"82":["KR"],"84":["VN"],"86":["CN"],"90":["TR"],"91":["IN"],"92":["PK"],"93":["AF"],"94":["LK"],"95":["MM"],"98":["IR"],"211":["SS"],"212":["MA","EH"],"213":["DZ"],"216":["TN"],"218":["LY"],"220":["GM"],"221":["SN"],"222":["MR"],"223":["ML"],"224":["GN"],"225":["CI"],"226":["BF"],"227":["NE"],"228":["TG"],"229":["BJ"],"230":["MU"],"231":["LR"],"232":["SL"],"233":["GH"],"234":["NG"],"235":["TD"],"236":["CF"],"237":["CM"],"238":["CV"],"239":["ST"],"240":["GQ"],"241":["GA"],"242":["CG"],"243":["CD"],"244":["AO"],"245":["GW"],"246":["IO"],"247":["AC"],"248":["SC"],"249":["SD"],"250":["RW"],"251":["ET"],"252":["SO"],"253":["DJ"],"254":["KE"],"255":["TZ"],"256":["UG"],"257":["BI"],"258":["MZ"],"260":["ZM"],"261":["MG"],"262":["RE","YT"],"263":["ZW"],"264":["NA"],"265":["MW"],"266":["LS"],"267":["BW"],"268":["SZ"],"269":["KM"],"290":["SH","TA"],"291":["ER"],"297":["AW"],"298":["FO"],"299":["GL"],"350":["GI"],"351":["PT"],"352":["LU"],"353":["IE"],"354":["IS"],"355":["AL"],"356":["MT"],"357":["CY"],"358":["FI","AX"],"359":["BG"],"370":["LT"],"371":["LV"],"372":["EE"],"373":["MD"],"374":["AM"],"375":["BY"],"376":["AD"],"377":["MC"],"378":["SM"],"380":["UA"],"381":["RS"],"382":["ME"],"383":["XK"],"385":["HR"],"386":["SI"],"387":["BA"],"389":["MK"],"420":["CZ"],"421":["SK"],"423":["LI"],"500":["FK"],"501":["BZ"],"502":["GT"],"503":["SV"],"504":["HN"],"505":["NI"],"506":["CR"],"507":["PA"],"508":["PM"],"509":["HT"],"590":["GP","BL","MF"],"591":["BO"],"592":["GY"],"593":["EC"],"594":["GF"],"595":["PY"],"596":["MQ"],"597":["SR"],"598":["UY"],"599":["CW","BQ"],"670":["TL"],"672":["NF"],"673":["BN"],"674":["NR"],"675":["PG"],"676":["TO"],"677":["SB"],"678":["VU"],"679":["FJ"],"680":["PW"],"681":["WF"],"682":["CK"],"683":["NU"],"685":["WS"],"686":["KI"],"687":["NC"],"688":["TV"],"689":["PF"],"690":["TK"],"691":["FM"],"692":["MH"],"800":["001"],"808":["001"],"850":["KP"],"852":["HK"],"853":["MO"],"855":["KH"],"856":["LA"],"870":["001"],"878":["001"],"880":["BD"],"881":["001"],"882":["001"],"883":["001"],"886":["TW"],"888":["001"],"960":["MV"],"961":["LB"],"962":["JO"],"963":["SY"],"964":["IQ"],"965":["KW"],"966":["SA"],"967":["YE"],"968":["OM"],"970":["PS"],"971":["AE"],"972":["IL"],"973":["BH"],"974":["QA"],"975":["BT"],"976":["MN"],"977":["NP"],"979":["001"],"992":["TJ"],"993":["TM"],"994":["AZ"],"995":["GE"],"996":["KG"],"998":["UZ"]},"countries":{"AC":["247","00","(?:[01589]\\\\d|[46])\\\\d{4}",[5,6]],"AD":["376","00","(?:1|6\\\\d)\\\\d{7}|[136-9]\\\\d{5}",[6,8,9],[["(\\\\d{3})(\\\\d{3})","$1 $2",["[136-9]"]],["(\\\\d{4})(\\\\d{4})","$1 $2",["1"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["6"]]]],"AE":["971","00","(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}",[5,6,7,8,9,10,11,12],[["(\\\\d{3})(\\\\d{2,9})","$1 $2",["60|8"]],["(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[236]|[479][2-8]"],"0$1"],["(\\\\d{3})(\\\\d)(\\\\d{5})","$1 $2 $3",["[479]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["5"],"0$1"]],"0"],"AF":["93","00","[2-7]\\\\d{8}",[9],[["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[2-7]"],"0$1"]],"0"],"AG":["1","011","(?:268|[58]\\\\d\\\\d|900)\\\\d{7}",[10],0,"1",0,"1|([457]\\\\d{6})$","268$1",0,"268"],"AI":["1","011","(?:264|[58]\\\\d\\\\d|900)\\\\d{7}",[10],0,"1",0,"1|([2457]\\\\d{6})$","264$1",0,"264"],"AL":["355","00","(?:700\\\\d\\\\d|900)\\\\d{3}|8\\\\d{5,7}|(?:[2-5]|6\\\\d)\\\\d{7}",[6,7,8,9],[["(\\\\d{3})(\\\\d{3,4})","$1 $2",["80|9"],"0$1"],["(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["4[2-6]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[2358][2-5]|4"],"0$1"],["(\\\\d{3})(\\\\d{5})","$1 $2",["[23578]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["6"],"0$1"]],"0"],"AM":["374","00","(?:[1-489]\\\\d|55|60|77)\\\\d{6}",[8],[["(\\\\d{3})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["[89]0"],"0 $1"],["(\\\\d{2})(\\\\d{6})","$1 $2",["1|47"],"(0$1)"],["(\\\\d{3})(\\\\d{5})","$1 $2",["[23]"],"(0$1)"],["(\\\\d{2})(\\\\d{6})","$1 $2",["[4-9]"],"0$1"]],"0"],"AO":["244","00","[29]\\\\d{8}",[9],[["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[29]"]]]],"AR":["54","00","11\\\\d{8}|(?:[2368]|9\\\\d)\\\\d{9}",[10,11],[["(\\\\d{4})(\\\\d{2})(\\\\d{4})","$1 $2-$3",["2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])","2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)","2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]","2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5(?:[24-6]|3[2-5]))|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"],"0$1",1],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2-$3",["1"],"0$1",1],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2-$3",["[23]"],"0$1",1],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1-$2-$3",["[68]"],"0$1"],["(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})","$2 15-$3-$4",["9(?:2[2-469]|3[3-578])","9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))","9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)","9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]","9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5(?:[24-6]|3[2-5]))|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"],"0$1",0,"$1 $2 $3-$4"],["(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})","$2 15-$3-$4",["91"],"0$1",0,"$1 $2 $3-$4"],["(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})","$2 15-$3-$4",["9"],"0$1",0,"$1 $2 $3-$4"]],"0",0,"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?","9$1"],"AS":["1","011","(?:[58]\\\\d\\\\d|684|900)\\\\d{7}",[10],0,"1",0,"1|([267]\\\\d{6})$","684$1",0,"684"],"AT":["43","00","1\\\\d{3,12}|2\\\\d{6,12}|43(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7})|5\\\\d{4,12}|8\\\\d{7,12}|9\\\\d{8,12}|(?:[367]\\\\d|4[0-24-9])\\\\d{4,11}",[4,5,6,7,8,9,10,11,12,13],[["(\\\\d)(\\\\d{3,12})","$1 $2",["1(?:11|[2-9])"],"0$1"],["(\\\\d{3})(\\\\d{2})","$1 $2",["517"],"0$1"],["(\\\\d{2})(\\\\d{3,5})","$1 $2",["5[079]"],"0$1"],["(\\\\d{3})(\\\\d{3,10})","$1 $2",["(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]"],"0$1"],["(\\\\d{4})(\\\\d{3,9})","$1 $2",["[2-467]|5[2-6]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["5"],"0$1"],["(\\\\d{2})(\\\\d{4})(\\\\d{4,7})","$1 $2 $3",["5"],"0$1"]],"0"],"AU":["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\\\d{7,8}|8[0-24-9]\\\\d{7})|(?:[2-478]\\\\d\\\\d|550)\\\\d{6}|1\\\\d{4,7}",[5,6,7,8,9,10],[["(\\\\d{2})(\\\\d{3,4})","$1 $2",["16"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{2,4})","$1 $2 $3",["16"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["14|[45]"],"0$1"],["(\\\\d)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["[2378]"],"(0$1)"],["(\\\\d{4})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1(?:30|[89])"]]],"0",0,"0|(183[12])",0,0,0,[["(?:[237]\\\\d{5}|8(?:51(?:0(?:0[03-9]|[1247]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-6])|1(?:1[69]|[23]\\\\d|4[0-4]))|(?:[6-8]\\\\d{3}|9(?:[02-9]\\\\d\\\\d|1(?:[0-57-9]\\\\d|6[0135-9])))\\\\d))\\\\d{3}",[9]],["4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[0-2457-9]|9[017-9])\\\\d{6}",[9]],["180(?:0\\\\d{3}|2)\\\\d{3}",[7,10]],["190[0-26]\\\\d{6}",[10]],0,0,0,["16\\\\d{3,7}",[5,6,7,8,9]],["(?:14(?:5(?:1[0458]|[23][458])|71\\\\d)|550\\\\d\\\\d)\\\\d{4}",[9]],["13(?:00\\\\d{3}|45[0-4])\\\\d{3}|13\\\\d{4}",[6,8,10]]],"0011"],"AW":["297","00","(?:[25-79]\\\\d\\\\d|800)\\\\d{4}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[25-9]"]]]],"AX":["358","00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))","2\\\\d{4,9}|35\\\\d{4,5}|(?:60\\\\d\\\\d|800)\\\\d{4,6}|(?:[147]\\\\d|3[0-46-9]|50)\\\\d{4,8}",[5,6,7,8,9,10],0,"0",0,0,0,0,"18",0,"00"],"AZ":["994","00","(?:365\\\\d{3}|900200)\\\\d{3}|(?:[12457]\\\\d|60|88)\\\\d{7}",[9],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["9"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[12]|365","[12]|365","[12]|365(?:[0-46-9]|5[0-35-9])"],"(0$1)"],["(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[3-8]"],"0$1"]],"0"],"BA":["387","00","6\\\\d{8}|(?:[35689]\\\\d|49|70)\\\\d{6}",[8,9],[["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["6[1-356]|[7-9]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2-$3",["[3-5]"],"0$1"],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3 $4",["6"],"0$1"]],"0"],"BB":["1","011","(?:246|[58]\\\\d\\\\d|900)\\\\d{7}",[10],0,"1",0,"1|([2-9]\\\\d{6})$","246$1",0,"246"],"BD":["880","00","[13469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-7]\\\\d{8}|[2-9]\\\\d{7}|[3-689]\\\\d{6}|[57-9]\\\\d{5}",[6,7,8,9,10],[["(\\\\d{2})(\\\\d{4,6})","$1-$2",["31[5-7]|[459]1"],"0$1"],["(\\\\d{3})(\\\\d{3,7})","$1-$2",["3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:28|4[14]|5)|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]"],"0$1"],["(\\\\d{4})(\\\\d{3,6})","$1-$2",["[13-9]"],"0$1"],["(\\\\d)(\\\\d{7,8})","$1-$2",["2"],"0$1"]],"0"],"BE":["32","00","4\\\\d{8}|[1-9]\\\\d{7}",[8,9],[["(\\\\d{3})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["(?:80|9)0"],"0$1"],["(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[239]|4[23]"],"0$1"],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[15-8]"],"0$1"],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["4"],"0$1"]],"0"],"BF":["226","00","[25-7]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[25-7]"]]]],"BG":["359","00","[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}",[6,7,8,9],[["(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["2"],"0$1"],["(\\\\d{3})(\\\\d{4})","$1 $2",["43[1-6]|70[1-9]"],"0$1"],["(\\\\d)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["2"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{2,3})","$1 $2 $3",["[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"],"0$1"],["(\\\\d{3})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["(?:70|8)0"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{2})","$1 $2 $3",["43[1-7]|7"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[48]|9[08]"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["9"],"0$1"]],"0"],"BH":["973","00","[136-9]\\\\d{7}",[8],[["(\\\\d{4})(\\\\d{4})","$1 $2",["[13679]|8[047]"]]]],"BI":["257","00","(?:[267]\\\\d|31)\\\\d{6}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[2367]"]]]],"BJ":["229","00","[2689]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[2689]"]]]],"BL":["590","00","(?:590|69\\\\d)\\\\d{6}",[9],0,"0",0,0,0,0,0,[["590(?:2[7-9]|5[12]|87)\\\\d{4}"],["69(?:0\\\\d\\\\d|1(?:2[29]|3[0-5]))\\\\d{4}"]]],"BM":["1","011","(?:441|[58]\\\\d\\\\d|900)\\\\d{7}",[10],0,"1",0,"1|([2-8]\\\\d{6})$","441$1",0,"441"],"BN":["673","00","[2-578]\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[2-578]"]]]],"BO":["591","00(?:1\\\\d)?","(?:[2-467]\\\\d{3}|80017)\\\\d{4}",[8,9],[["(\\\\d)(\\\\d{7})","$1 $2",["[23]|4[46]"]],["(\\\\d{8})","$1",["[67]"]],["(\\\\d{3})(\\\\d{2})(\\\\d{4})","$1 $2 $3",["8"]]],"0",0,"0(1\\\\d)?"],"BQ":["599","00","(?:[34]1|7\\\\d)\\\\d{5}",[7],0,0,0,0,0,0,"[347]"],"BR":["55","00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)","(?:[1-46-9]\\\\d\\\\d|5(?:[0-46-9]\\\\d|5[0-24679]))\\\\d{8}|[1-9]\\\\d{9}|[3589]\\\\d{8}|[34]\\\\d{7}",[8,9,10,11],[["(\\\\d{4})(\\\\d{4})","$1-$2",["300|4(?:0[02]|37)","4(?:02|37)0|[34]00"]],["(\\\\d{3})(\\\\d{2,3})(\\\\d{4})","$1 $2 $3",["(?:[358]|90)0"],"0$1"],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2-$3",["(?:[189][1-9]|2[12478])[2-57]|[3-7]"],"($1)"],["(\\\\d{2})(\\\\d{5})(\\\\d{4})","$1 $2-$3",["1[1-9]|[2-9]"],"($1)"]],"0",0,"0(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?","$2"],"BS":["1","011","(?:242|[58]\\\\d\\\\d|900)\\\\d{7}",[10],0,"1",0,"1|([3-8]\\\\d{6})$","242$1",0,"242"],"BT":["975","00","[17]\\\\d{7}|[2-8]\\\\d{6}",[7,8],[["(\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[2-68]|7[246]"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["1[67]|7"]]]],"BW":["267","00","90\\\\d{5}|(?:[2-6]|7\\\\d)\\\\d{6}",[7,8],[["(\\\\d{2})(\\\\d{5})","$1 $2",["90"]],["(\\\\d{3})(\\\\d{4})","$1 $2",["[2-6]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["7"]]]],"BY":["375","810","(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}",[6,7,8,9,10,11],[["(\\\\d{3})(\\\\d{3})","$1 $2",["800"],"8 $1"],["(\\\\d{3})(\\\\d{2})(\\\\d{2,4})","$1 $2 $3",["800"],"8 $1"],["(\\\\d{4})(\\\\d{2})(\\\\d{3})","$1 $2-$3",["1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])","1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])"],"8 0$1"],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2-$3-$4",["1(?:[56]|7[467])|2[1-3]"],"8 0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2-$3-$4",["[1-4]"],"8 0$1"],["(\\\\d{3})(\\\\d{3,4})(\\\\d{4})","$1 $2 $3",["[89]"],"8 $1"]],"8",0,"0|80?",0,0,0,0,"8~10"],"BZ":["501","00","(?:0800\\\\d|[2-8])\\\\d{6}",[7,11],[["(\\\\d{3})(\\\\d{4})","$1-$2",["[2-8]"]],["(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})","$1-$2-$3-$4",["0"]]]],"CA":["1","011","(?:[2-8]\\\\d|90)\\\\d{8}",[10],0,"1",0,0,0,0,0,[["(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:04|13|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}"],[""],["8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}"],["900[2-9]\\\\d{6}"],["(?:5(?:00|2[12]|33|44|66|77|88)|622)[2-9]\\\\d{6}"],0,0,0,["600[2-9]\\\\d{6}"]]],"CC":["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\\\d|8[0-24-9])\\\\d{7}|(?:[148]\\\\d\\\\d|550)\\\\d{6}|1\\\\d{5,7}",[6,7,8,9,10],0,"0",0,"0|([59]\\\\d{7})$","8$1",0,0,[["8(?:51(?:0(?:02|31|60)|118)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}",[9]],["4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[0-2457-9]|9[017-9])\\\\d{6}",[9]],["180(?:0\\\\d{3}|2)\\\\d{3}",[7,10]],["190[0-26]\\\\d{6}",[10]],0,0,0,0,["(?:14(?:5(?:1[0458]|[23][458])|71\\\\d)|550\\\\d\\\\d)\\\\d{4}",[9]],["13(?:00\\\\d{3}|45[0-4])\\\\d{3}|13\\\\d{4}",[6,8,10]]],"0011"],"CD":["243","00","[189]\\\\d{8}|[1-68]\\\\d{6}",[7,9],[["(\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["88"],"0$1"],["(\\\\d{2})(\\\\d{5})","$1 $2",["[1-6]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[89]"],"0$1"]],"0"],"CF":["236","00","(?:[27]\\\\d{3}|8776)\\\\d{4}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[278]"]]]],"CG":["242","00","222\\\\d{6}|(?:0\\\\d|80)\\\\d{7}",[9],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["801"]],["(\\\\d)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["8"]],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[02]"]]]],"CH":["41","00","8\\\\d{11}|[2-9]\\\\d{8}",[9],[["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["8[047]|90"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[2-79]|81"],"0$1"],["(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4 $5",["8"],"0$1"]],"0"],"CI":["225","00","[02-8]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[02-8]"]]]],"CK":["682","00","[2-8]\\\\d{4}",[5],[["(\\\\d{2})(\\\\d{3})","$1 $2",["[2-8]"]]]],"CL":["56","(?:0|1(?:1[0-69]|2[0-57]|5[13-58]|69|7[0167]|8[018]))0","12300\\\\d{6}|6\\\\d{9,10}|[2-9]\\\\d{8}",[9,10,11],[["(\\\\d{5})(\\\\d{4})","$1 $2",["21"],"($1)"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["44"]],["(\\\\d)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["2[23]"],"($1)"],["(\\\\d)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["9[2-9]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])"],"($1)"],["(\\\\d{3})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["60|8"]],["(\\\\d{4})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1"]],["(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})","$1 $2 $3 $4",["60"]]]],"CM":["237","00","(?:[26]\\\\d\\\\d|88)\\\\d{6}",[8,9],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["88"]],["(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4 $5",["[26]"]]]],"CN":["86","00|1(?:[12]\\\\d|79|9[0235-7])\\\\d\\\\d00","1[1279]\\\\d{8,9}|2\\\\d{9}(?:\\\\d{2})?|[12]\\\\d{6,7}|86\\\\d{6}|(?:1[03-68]\\\\d|6)\\\\d{7,9}|(?:[3-579]\\\\d|8[0-57-9])\\\\d{6,9}",[7,8,9,10,11,12],[["(\\\\d{2})(\\\\d{5,6})","$1 $2",["(?:10|2[0-57-9])[19]","(?:10|2[0-57-9])(?:10|9[56])","(?:10|2[0-57-9])(?:100|9[56])"],"0$1"],["(\\\\d{3})(\\\\d{5,6})","$1 $2",["3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]","(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]","85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])","85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["(?:4|80)0"]],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["10|2(?:[02-57-9]|1[1-9])","10|2(?:[02-57-9]|1[1-9])","10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])"],"0$1",1],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]"],"0$1",1],["(\\\\d{3})(\\\\d{7,8})","$1 $2",["9"]],["(\\\\d{4})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["80"],"0$1",1],["(\\\\d{3})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["[3-578]"],"0$1",1],["(\\\\d{3})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["1[3-9]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3 $4",["[12]"],"0$1",1]],"0",0,"0|(1(?:[12]\\\\d|79|9[0235-7])\\\\d\\\\d)",0,0,0,0,"00"],"CO":["57","00(?:4(?:[14]4|56)|[579])","(?:1\\\\d|3)\\\\d{9}|[124-8]\\\\d{7}",[8,10,11],[["(\\\\d)(\\\\d{7})","$1 $2",["1[2-79]|[25-8]|(?:18|4)[2-9]"],"($1)"],["(\\\\d{3})(\\\\d{7})","$1 $2",["3"]],["(\\\\d)(\\\\d{3})(\\\\d{7})","$1-$2-$3",["1(?:80|9)","1(?:800|9)"],"0$1",0,"$1 $2 $3"]],"0",0,"0([3579]|4(?:[14]4|56))?"],"CR":["506","00","(?:8\\\\d|90)\\\\d{8}|[24-8]\\\\d{7}",[8,10],[["(\\\\d{4})(\\\\d{4})","$1 $2",["[24-7]|8[3-9]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1-$2-$3",["[89]"]]],0,0,"(19(?:0[0-2468]|1[09]|20|66|77|99))"],"CU":["53","119","[27]\\\\d{6,7}|[34]\\\\d{5,7}|5\\\\d{7}",[6,7,8],[["(\\\\d{2})(\\\\d{4,6})","$1 $2",["2[1-4]|[34]"],"(0$1)"],["(\\\\d)(\\\\d{6,7})","$1 $2",["7"],"(0$1)"],["(\\\\d)(\\\\d{7})","$1 $2",["5"],"0$1"]],"0"],"CV":["238","0","[2-59]\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3",["[2-59]"]]]],"CW":["599","00","(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}",[7,8],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[3467]"]],["(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["9[4-8]"]]],0,0,0,0,0,"[69]"],"CX":["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\\\d|8[0-24-9])\\\\d{7}|(?:[148]\\\\d\\\\d|550)\\\\d{6}|1\\\\d{5,7}",[6,7,8,9,10],0,"0",0,"0|([59]\\\\d{7})$","8$1",0,0,[["8(?:51(?:0(?:01|30|59)|117)|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}",[9]],["4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[0-2457-9]|9[017-9])\\\\d{6}",[9]],["180(?:0\\\\d{3}|2)\\\\d{3}",[7,10]],["190[0-26]\\\\d{6}",[10]],0,0,0,0,["(?:14(?:5(?:1[0458]|[23][458])|71\\\\d)|550\\\\d\\\\d)\\\\d{4}",[9]],["13(?:00\\\\d{3}|45[0-4])\\\\d{3}|13\\\\d{4}",[6,8,10]]],"0011"],"CY":["357","00","(?:[279]\\\\d|[58]0)\\\\d{6}",[8],[["(\\\\d{2})(\\\\d{6})","$1 $2",["[257-9]"]]]],"CZ":["420","00","(?:[2-578]\\\\d|60)\\\\d{7}|9\\\\d{8,11}",[9],[["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[2-8]|9[015-7]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["9"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["9"]]]],"DE":["49","00","[2579]\\\\d{5,14}|49[67]0\\\\d{1,4}|49(?:[34]0|69|8\\\\d)\\\\d\\\\d?|49(?:37|49|7[89]|9\\\\d)\\\\d{1,3}|49(?:[12]\\\\d|3[1-689]|7[1-7])\\\\d{1,8}|49(?:[05]\\\\d|[46][1-8])\\\\d{1,9}|(?:1|[368]\\\\d|4[0-8])\\\\d{3,13}",[4,5,6,7,8,9,10,11,12,13,14,15],[["(\\\\d{2})(\\\\d{3,13})","$1 $2",["3[02]|40|[68]9"],"0$1"],["(\\\\d{3})(\\\\d{3,12})","$1 $2",["2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1","2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1"],"0$1"],["(\\\\d{4})(\\\\d{2,11})","$1 $2",["[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]","[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]"],"0$1"],["(\\\\d{3})(\\\\d{4})","$1 $2",["138"],"0$1"],["(\\\\d{3})(\\\\d{5,11})","$1 $2",["181"],"0$1"],["(\\\\d{3})(\\\\d)(\\\\d{4,10})","$1 $2 $3",["1(?:3|80)|9"],"0$1"],["(\\\\d{5})(\\\\d{3,10})","$1 $2",["3"],"0$1"],["(\\\\d{3})(\\\\d{7,8})","$1 $2",["1[67]"],"0$1"],["(\\\\d{3})(\\\\d{7,12})","$1 $2",["8"],"0$1"],["(\\\\d{5})(\\\\d{6})","$1 $2",["185","1850","18500"],"0$1"],["(\\\\d{3})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\\\d{4})(\\\\d{7})","$1 $2",["18[68]"],"0$1"],["(\\\\d{5})(\\\\d{6})","$1 $2",["15[0568]"],"0$1"],["(\\\\d{4})(\\\\d{7})","$1 $2",["15[1279]"],"0$1"],["(\\\\d{3})(\\\\d{8})","$1 $2",["18"],"0$1"],["(\\\\d{3})(\\\\d{2})(\\\\d{7,8})","$1 $2 $3",["1(?:6[023]|7)"],"0$1"],["(\\\\d{4})(\\\\d{2})(\\\\d{7})","$1 $2 $3",["15[279]"],"0$1"],["(\\\\d{3})(\\\\d{2})(\\\\d{8})","$1 $2 $3",["15"],"0$1"]],"0"],"DJ":["253","00","(?:2\\\\d|77)\\\\d{6}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[27]"]]]],"DK":["45","00","[2-9]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[2-9]"]]]],"DM":["1","011","(?:[58]\\\\d\\\\d|767|900)\\\\d{7}",[10],0,"1",0,"1|([2-7]\\\\d{6})$","767$1",0,"767"],"DO":["1","011","(?:[58]\\\\d\\\\d|900)\\\\d{7}",[10],0,"1",0,0,0,0,"8[024]9"],"DZ":["213","00","(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}",[8,9],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[1-4]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["9"],"0$1"],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[5-8]"],"0$1"]],"0"],"EC":["593","00","1800\\\\d{6,7}|(?:[2-7]|9\\\\d)\\\\d{7}",[8,9,10,11],[["(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2-$3",["[2-7]"],"(0$1)",0,"$1-$2-$3"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["9"],"0$1"],["(\\\\d{4})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["1"]]],"0"],"EE":["372","00","8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d\\\\d|900)\\\\d{4}",[7,8,10],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]","[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]"]],["(\\\\d{4})(\\\\d{3,4})","$1 $2",["[45]|8(?:00|[1-4])","[45]|8(?:00[1-9]|[1-4])"]],["(\\\\d{2})(\\\\d{2})(\\\\d{4})","$1 $2 $3",["7"]],["(\\\\d{4})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["80"]]]],"EG":["20","00","[189]\\\\d{8,9}|[24-6]\\\\d{8}|[135]\\\\d{7}",[8,9,10],[["(\\\\d)(\\\\d{7,8})","$1 $2",["[23]"],"0$1"],["(\\\\d{2})(\\\\d{6,7})","$1 $2",["1[35]|[4-6]|8[2468]|9[235-7]"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[189]"],"0$1"]],"0"],"EH":["212","00","[5-8]\\\\d{8}",[9],0,"0",0,0,0,0,"528[89]"],"ER":["291","00","[178]\\\\d{6}",[7],[["(\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[178]"],"0$1"]],"0"],"ES":["34","00","(?:51|[6-9]\\\\d)\\\\d{7}",[9],[["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[89]00"]],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[5-9]"]]]],"ET":["251","00","(?:11|[2-59]\\\\d)\\\\d{7}",[9],[["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[1-59]"],"0$1"]],"0"],"FI":["358","00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))","(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}|[1-35689]\\\\d{4}",[5,6,7,8,9,10],[["(\\\\d)(\\\\d{4,9})","$1 $2",["[2568][1-8]|3(?:0[1-9]|[1-9])|9"],"0$1"],["(\\\\d{3})(\\\\d{3,7})","$1 $2",["(?:[12]0|7)0|[368]"],"0$1"],["(\\\\d{2})(\\\\d{4,8})","$1 $2",["[12457]"],"0$1"]],"0",0,0,0,0,"1[03-79]|[2-9]",0,"00"],"FJ":["679","0(?:0|52)","45\\\\d{5}|(?:0800\\\\d|[235-9])\\\\d{6}",[7,11],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[235-9]|45"]],["(\\\\d{4})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["0"]]],0,0,0,0,0,0,0,"00"],"FK":["500","00","[2-7]\\\\d{4}",[5]],"FM":["691","00","[39]\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[39]"]]]],"FO":["298","00","(?:[2-8]\\\\d|90)\\\\d{4}",[6],[["(\\\\d{6})","$1",["[2-9]"]]],0,0,"(10(?:01|[12]0|88))"],"FR":["33","00","[1-9]\\\\d{8}",[9],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["8"],"0 $1"],["(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4 $5",["[1-79]"],"0$1"]],"0"],"GA":["241","00","(?:0\\\\d|[2-7])\\\\d{6}",[7,8],[["(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[2-7]"],"0$1"],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["0"]]]],"GB":["44","00","[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}",[7,9,10],[["(\\\\d{3})(\\\\d{4})","$1 $2",["800","8001","80011","800111","8001111"],"0$1"],["(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3",["845","8454","84546","845464"],"0$1"],["(\\\\d{3})(\\\\d{6})","$1 $2",["800"],"0$1"],["(\\\\d{5})(\\\\d{4,5})","$1 $2",["1(?:38|5[23]|69|76|94)","1(?:(?:38|69)7|5(?:24|39)|768|946)","1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"],"0$1"],["(\\\\d{4})(\\\\d{5,6})","$1 $2",["1(?:[2-69][02-9]|[78])"],"0$1"],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["[25]|7(?:0|6[024-9])","[25]|7(?:0|6(?:[04-9]|2[356]))"],"0$1"],["(\\\\d{4})(\\\\d{6})","$1 $2",["7"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[1389]"],"0$1"]],"0",0,0,0,0,0,[["(?:1(?:1(?:3[0-58]|4[0-5]|5[0-26-9]|6[0-4]|[78][0-49])|2(?:0[024-9]|1[0-7]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)|3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))|2(?:0[01378]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d)\\\\d{6}|1(?:(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d|7(?:(?:26(?:6[13-9]|7[0-7])|442\\\\d|50(?:2[0-3]|[3-68]2|76))\\\\d|6888[2-46-8]))\\\\d\\\\d",[9,10]],["7(?:457[0-57-9]|700[01]|911[028])\\\\d{5}|7(?:[1-3]\\\\d\\\\d|4(?:[0-46-9]\\\\d|5[0-689])|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[024-9]\\\\d|1[02-9]|3[0-689]))\\\\d{6}",[10]],["80[08]\\\\d{7}|800\\\\d{6}|8001111"],["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d",[7,10]],["70\\\\d{8}",[10]],0,["(?:3[0347]|55)\\\\d{8}",[10]],["76(?:0[0-2]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}",[10]],["56\\\\d{8}",[10]]],0," x"],"GD":["1","011","(?:473|[58]\\\\d\\\\d|900)\\\\d{7}",[10],0,"1",0,"1|([2-9]\\\\d{6})$","473$1",0,"473"],"GE":["995","00","(?:[3-57]\\\\d\\\\d|800)\\\\d{6}",[9],[["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["70"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["32"],"0$1"],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[57]"]],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[348]"],"0$1"]],"0"],"GF":["594","00","[56]94\\\\d{6}",[9],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[56]"],"0$1"]],"0"],"GG":["44","00","(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?",[7,9,10],0,"0",0,"0|([25-9]\\\\d{5})$","1481$1",0,0,[["1481[25-9]\\\\d{5}",[10]],["7(?:(?:781|839)\\\\d|911[17])\\\\d{5}",[10]],["80[08]\\\\d{7}|800\\\\d{6}|8001111"],["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d",[7,10]],["70\\\\d{8}",[10]],0,["(?:3[0347]|55)\\\\d{8}",[10]],["76(?:0[0-2]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}",[10]],["56\\\\d{8}",[10]]]],"GH":["233","00","(?:[235]\\\\d{3}|800)\\\\d{5}",[8,9],[["(\\\\d{3})(\\\\d{5})","$1 $2",["8"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[235]"],"0$1"]],"0"],"GI":["350","00","(?:[25]\\\\d\\\\d|629)\\\\d{5}",[8],[["(\\\\d{3})(\\\\d{5})","$1 $2",["2"]]]],"GL":["299","00","(?:19|[2-689]\\\\d)\\\\d{4}",[6],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3",["19|[2-689]"]]]],"GM":["220","00","[2-9]\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[2-9]"]]]],"GN":["224","00","(?:30|6\\\\d\\\\d|722)\\\\d{6}",[8,9],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["3"]],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[67]"]]]],"GP":["590","00","(?:590|69\\\\d)\\\\d{6}",[9],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[56]"],"0$1"]],"0",0,0,0,0,0,[["590(?:0[1-68]|1[0-2]|2[0-68]|3[1289]|4[0-24-9]|5[3-579]|6[0189]|7[08]|8[0-689]|9\\\\d)\\\\d{4}"],["69(?:0\\\\d\\\\d|1(?:2[29]|3[0-5]))\\\\d{4}"]]],"GQ":["240","00","222\\\\d{6}|(?:3\\\\d|55|[89]0)\\\\d{7}",[9],[["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[235]"]],["(\\\\d{3})(\\\\d{6})","$1 $2",["[89]"]]]],"GR":["30","00","(?:[268]\\\\d|[79]0)\\\\d{8}",[10],[["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["21|7"]],["(\\\\d{4})(\\\\d{6})","$1 $2",["2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])"]],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[2689]"]]]],"GT":["502","00","(?:1\\\\d{3}|[2-7])\\\\d{7}",[8,11],[["(\\\\d{4})(\\\\d{4})","$1 $2",["[2-7]"]],["(\\\\d{4})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1"]]]],"GU":["1","011","(?:[58]\\\\d\\\\d|671|900)\\\\d{7}",[10],0,"1",0,"1|([3-9]\\\\d{6})$","671$1",0,"671"],"GW":["245","00","[49]\\\\d{8}|4\\\\d{6}",[7,9],[["(\\\\d{3})(\\\\d{4})","$1 $2",["40"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[49]"]]]],"GY":["592","001","(?:862\\\\d|9008)\\\\d{3}|(?:[2-46]\\\\d|77)\\\\d{5}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[2-46-9]"]]]],"HK":["852","00(?:30|5[09]|[126-9]?)","8[0-46-9]\\\\d{6,7}|9\\\\d{4}(?:\\\\d(?:\\\\d(?:\\\\d{4})?)?)?|(?:[235-79]\\\\d|46)\\\\d{6}",[5,6,7,8,9,11],[["(\\\\d{3})(\\\\d{2,5})","$1 $2",["900","9003"]],["(\\\\d{4})(\\\\d{4})","$1 $2",["[2-7]|8[1-4]|9(?:0[1-9]|[1-8])"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["8"]],["(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["9"]]],0,0,0,0,0,0,0,"00"],"HN":["504","00","[237-9]\\\\d{7}",[8],[["(\\\\d{4})(\\\\d{4})","$1-$2",["[237-9]"]]]],"HR":["385","00","(?:[24-69]\\\\d|3[0-79])\\\\d{7}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{5,6}",[6,7,8,9],[["(\\\\d{2})(\\\\d{2})(\\\\d{2,3})","$1 $2 $3",["6[01]"],"0$1"],["(\\\\d{3})(\\\\d{2})(\\\\d{2,3})","$1 $2 $3",["8"],"0$1"],["(\\\\d)(\\\\d{4})(\\\\d{3})","$1 $2 $3",["1"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[67]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["9"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[2-5]"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["8"],"0$1"]],"0"],"HT":["509","00","[2-489]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{4})","$1 $2 $3",["[2-489]"]]]],"HU":["36","00","[2357]\\\\d{8}|[1-9]\\\\d{7}",[8,9],[["(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1"],"($1)"],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[2-9]"],"($1)"]],"06"],"ID":["62","00[189]","(?:(?:007803|8\\\\d{4})\\\\d|[1-36])\\\\d{6}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}",[7,8,9,10,11,12,13],[["(\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["15"]],["(\\\\d{2})(\\\\d{5,9})","$1 $2",["2[124]|[36]1"],"(0$1)"],["(\\\\d{3})(\\\\d{5,7})","$1 $2",["800"],"0$1"],["(\\\\d{3})(\\\\d{5,8})","$1 $2",["[2-79]"],"(0$1)"],["(\\\\d{3})(\\\\d{3,4})(\\\\d{3})","$1-$2-$3",["8[1-35-9]"],"0$1"],["(\\\\d{3})(\\\\d{6,8})","$1 $2",["1"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["804"],"0$1"],["(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["80"],"0$1"],["(\\\\d{3})(\\\\d{4})(\\\\d{4,5})","$1-$2-$3",["8"],"0$1"]],"0"],"IE":["353","00","(?:1\\\\d|[2569])\\\\d{6,8}|4\\\\d{6,9}|7\\\\d{8}|8\\\\d{8,9}",[7,8,9,10],[["(\\\\d{2})(\\\\d{5})","$1 $2",["2[24-9]|47|58|6[237-9]|9[35-9]"],"(0$1)"],["(\\\\d{3})(\\\\d{5})","$1 $2",["[45]0"],"(0$1)"],["(\\\\d)(\\\\d{3,4})(\\\\d{4})","$1 $2 $3",["1"],"(0$1)"],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[2569]|4[1-69]|7[14]"],"(0$1)"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["70"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["81"],"(0$1)"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[78]"],"0$1"],["(\\\\d{4})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1"]],["(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3 $4",["8"],"0$1"],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["4"],"(0$1)"]],"0"],"IL":["972","0(?:0|1[2-9])","1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}",[7,8,9,10,11,12],[["(\\\\d{4})(\\\\d{3})","$1-$2",["125"]],["(\\\\d{4})(\\\\d{2})(\\\\d{2})","$1-$2-$3",["121"]],["(\\\\d)(\\\\d{3})(\\\\d{4})","$1-$2-$3",["[2-489]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1-$2-$3",["[57]"],"0$1"],["(\\\\d{4})(\\\\d{3})(\\\\d{3})","$1-$2-$3",["12"]],["(\\\\d{4})(\\\\d{6})","$1-$2",["159"]],["(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1-$2-$3-$4",["1[7-9]"]],["(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})","$1-$2 $3-$4",["15"]]],"0"],"IM":["44","00","1624\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}",[10],0,"0",0,"0|([5-8]\\\\d{5})$","1624$1",0,"74576|(?:16|7[56])24"],"IN":["91","00","(?:00800|[2-9]\\\\d\\\\d)\\\\d{7}|1\\\\d{7,12}",[8,9,10,11,12,13],[["(\\\\d{8})","$1",["5(?:0|2[23]|3[03]|[67]1|88)","5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)","5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)"],0,1],["(\\\\d{4})(\\\\d{4,5})","$1 $2",["180","1800"],0,1],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["140"],0,1],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["11|2[02]|33|4[04]|79[1-7]|80[2-46]","11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])","11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])"],"0$1",1],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]","1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|(?:55|61)2|7(?:31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]","1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:1(?:29|60|8[06])|261|552|788[01])[2-7]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])"],"0$1",1],["(\\\\d{4})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|[4-8])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807","1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|[4-8])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]","1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|[4-8])|7(?:1(?:[013-8]|9[6-9])|3179)|807(?:1|9[1-3])|(?:1552|7(?:28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]"],"0$1",1],["(\\\\d{5})(\\\\d{5})","$1 $2",["[6-9]"],"0$1",1],["(\\\\d{4})(\\\\d{2,4})(\\\\d{4})","$1 $2 $3",["1(?:6|8[06])","1(?:6|8[06]0)"],0,1],["(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["18"],0,1]],"0"],"IO":["246","00","3\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2",["3"]]]],"IQ":["964","00","(?:1|7\\\\d\\\\d)\\\\d{7}|[2-6]\\\\d{7,8}",[8,9,10],[["(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[2-6]"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["7"],"0$1"]],"0"],"IR":["98","00","[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}",[4,5,6,7,10],[["(\\\\d{4,5})","$1",["96"],"0$1"],["(\\\\d{2})(\\\\d{4,5})","$1 $2",["(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["9"],"0$1"],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["[1-8]"],"0$1"]],"0"],"IS":["354","00|1(?:0(?:01|[12]0)|100)","(?:38\\\\d|[4-9])\\\\d{6}",[7,9],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[4-9]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["3"]]],0,0,0,0,0,0,0,"00"],"IT":["39","00","0\\\\d{6,10}|55\\\\d{8}|[08]\\\\d{5}|(?:3[0-8]|8)\\\\d{7,9}|(?:1\\\\d|39)\\\\d{7,8}",[6,7,8,9,10,11],[["(\\\\d{2})(\\\\d{4,6})","$1 $2",["0[26]"]],["(\\\\d{3})(\\\\d{3,6})","$1 $2",["0[13-57-9][0159]|8(?:03|4[17]|9[245])","0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))"]],["(\\\\d{4})(\\\\d{2,6})","$1 $2",["0(?:[13-579][2-46-8]|8[236-8])"]],["(\\\\d{4})(\\\\d{4})","$1 $2",["894"]],["(\\\\d{2})(\\\\d{3,4})(\\\\d{4})","$1 $2 $3",["0[26]|5"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["1[4679]|[38]"]],["(\\\\d{3})(\\\\d{3,4})(\\\\d{4})","$1 $2 $3",["0[13-57-9][0159]"]],["(\\\\d{3})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["3"]],["(\\\\d{2})(\\\\d{4})(\\\\d{5})","$1 $2 $3",["0[26]"]],["(\\\\d{4})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["0"]]],0,0,0,0,0,0,[["0669[0-79]\\\\d{1,6}|0(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\\\d|6[0-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7}"],["33\\\\d{9}|3[1-9]\\\\d{8}|3[2-9]\\\\d{7}",[9,10,11]],["80(?:0\\\\d{3}|3)\\\\d{3}",[6,9]],["(?:0878\\\\d\\\\d|89(?:2|4[5-9]\\\\d))\\\\d{3}|89[45][0-4]\\\\d\\\\d|(?:1(?:44|6[346])|89(?:5[5-9]|9))\\\\d{6}",[6,8,9,10]],["1(?:78\\\\d|99)\\\\d{6}",[9,10]],0,0,0,["55\\\\d{8}",[10]],["84(?:[08]\\\\d{3}|[17])\\\\d{3}",[6,9]]]],"JE":["44","00","1534\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}",[10],0,"0",0,"0|([0-24-8]\\\\d{5})$","1534$1",0,0,[["1534[0-24-8]\\\\d{5}"],["7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97[7-9]))\\\\d{5}"],["80(?:07(?:35|81)|8901)\\\\d{4}"],["(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}"],["701511\\\\d{4}"],0,["(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}"],["76(?:0[0-2]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}"],["56\\\\d{8}"]]],"JM":["1","011","(?:[58]\\\\d\\\\d|658|900)\\\\d{7}",[10],0,"1",0,0,0,0,"658|876"],"JO":["962","00","900\\\\d{5}|(?:(?:[268]|7\\\\d)\\\\d|32|53)\\\\d{6}",[8,9],[["(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[2356]|87"],"(0$1)"],["(\\\\d{3})(\\\\d{5,6})","$1 $2",["[89]"],"0$1"],["(\\\\d{2})(\\\\d{7})","$1 $2",["70"],"0$1"],["(\\\\d)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["7"],"0$1"]],"0"],"JP":["81","010","00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}",[8,9,10,11,12,13,14,15,16,17],[["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1-$2-$3",["(?:12|57|99)0"],"0$1"],["(\\\\d{4})(\\\\d)(\\\\d{4})","$1-$2-$3",["1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:49|80|9[16])","1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[78]|96)|477|51[24]|636)|9(?:496|802|9(?:1[23]|69))|1(?:45|58)[67]","1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[78]|96[2457-9])|477|51[24]|636[2-57-9])|9(?:496|802|9(?:1[23]|69))|1(?:45|58)[67]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1-$2-$3",["60"],"0$1"],["(\\\\d)(\\\\d{4})(\\\\d{4})","$1-$2-$3",["[36]|4(?:2[09]|7[01])","[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1-$2-$3",["1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[279]|49|6[0-24-689]|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])","1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[0468][01]|[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|2[01]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9])|5(?:2|3[045]|4[0-369]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|49|6(?:[0-24]|5[0-3589]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:49|55|83)[29]|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:47[59]|59[89]|8(?:6[68]|9))[019]","1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[0468][01]|[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|2[01]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|7(?:[017-9]|6[6-8]))|49|6(?:[0-24]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]","1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[0468][01]|[1-3]|5[0-69]|7[015-9]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17|3[015-9]))|4(?:2(?:[13-79]|2[01]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9(?:[019]|4[1-3]|6(?:[0-47-9]|5[01346-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|6(?:[0-24]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:223|8699)[014-9]|(?:48|829(?:2|66)|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]"],"0$1"],["(\\\\d{3})(\\\\d{2})(\\\\d{4})","$1-$2-$3",["[14]|[29][2-9]|5[3-9]|7[2-4679]|8(?:[246-9]|3[3-8]|5[2-9])","[14]|[29][2-9]|5[3-9]|7[2-4679]|8(?:[246-9]|3(?:[3-6][2-9]|7|8[2-5])|5[2-9])"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1-$2-$3",["800"],"0$1"],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1-$2-$3",["[2579]|80"],"0$1"]],"0"],"KE":["254","000","(?:[17]\\\\d\\\\d|900)\\\\d{6}|(?:2|80)0\\\\d{6,7}|[4-6]\\\\d{6,8}",[7,8,9,10],[["(\\\\d{2})(\\\\d{5,7})","$1 $2",["[24-6]"],"0$1"],["(\\\\d{3})(\\\\d{6})","$1 $2",["[17]"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[89]"],"0$1"]],"0"],"KG":["996","00","(?:[235-7]\\\\d|99)\\\\d{7}|800\\\\d{6,7}",[9,10],[["(\\\\d{4})(\\\\d{5})","$1 $2",["3(?:1[346]|[24-79])"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[235-79]"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})","$1 $2 $3 $4",["8"],"0$1"]],"0"],"KH":["855","00[14-9]","1\\\\d{9}|[1-9]\\\\d{7,8}",[8,9,10],[["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[1-9]"],"0$1"],["(\\\\d{4})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1"]]],"0"],"KI":["686","00","(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}",[5,8],0,"0"],"KM":["269","00","[3478]\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3",["[3478]"]]]],"KN":["1","011","(?:[58]\\\\d\\\\d|900)\\\\d{7}",[10],0,"1",0,"1|([2-7]\\\\d{6})$","869$1",0,"869"],"KP":["850","00|99","85\\\\d{6}|(?:19\\\\d|2)\\\\d{7}",[8,10],[["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["8"],"0$1"],["(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1"],"0$1"]],"0"],"KR":["82","00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))","00[1-9]\\\\d{8,11}|(?:[12]|5\\\\d{3})\\\\d{7}|[13-6]\\\\d{9}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}|(?:00|7)0\\\\d{8}",[5,6,8,9,10,11,12,13,14],[["(\\\\d{2})(\\\\d{3,4})","$1-$2",["(?:3[1-3]|[46][1-4]|5[1-5])1"],"0$1"],["(\\\\d{4})(\\\\d{4})","$1-$2",["1"]],["(\\\\d)(\\\\d{3,4})(\\\\d{4})","$1-$2-$3",["2"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1-$2-$3",["60|8"],"0$1"],["(\\\\d{2})(\\\\d{3,4})(\\\\d{4})","$1-$2-$3",["[1346]|5[1-5]"],"0$1"],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1-$2-$3",["[57]"],"0$1"],["(\\\\d{2})(\\\\d{5})(\\\\d{4})","$1-$2-$3",["5"],"0$1"]],"0",0,"0(8(?:[1-46-8]|5\\\\d\\\\d))?"],"KW":["965","00","(?:18|[2569]\\\\d\\\\d)\\\\d{5}",[7,8],[["(\\\\d{4})(\\\\d{3,4})","$1 $2",["[169]|2(?:[235]|4[1-35-9])|52"]],["(\\\\d{3})(\\\\d{5})","$1 $2",["[25]"]]]],"KY":["1","011","(?:345|[58]\\\\d\\\\d|900)\\\\d{7}",[10],0,"1",0,"1|([2-9]\\\\d{6})$","345$1",0,"345"],"KZ":["7","810","33622\\\\d{5}|(?:7\\\\d|80)\\\\d{8}",[10],0,"8",0,0,0,0,"33|7",0,"8~10"],"LA":["856","00","(?:2\\\\d|3)\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}",[8,9,10],[["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["2[13]|3[14]|[4-8]"],"0$1"],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3 $4",["3"],"0$1"],["(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["2"],"0$1"]],"0"],"LB":["961","00","[7-9]\\\\d{7}|[13-9]\\\\d{6}",[7,8],[["(\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[7-9]"]]],"0"],"LC":["1","011","(?:[58]\\\\d\\\\d|758|900)\\\\d{7}",[10],0,"1",0,"1|([2-7]\\\\d{6})$","758$1",0,"758"],"LI":["423","00","90\\\\d{5}|(?:[2378]|6\\\\d\\\\d)\\\\d{6}",[7,9],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3",["[237-9]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["69"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["6"]]],"0",0,"0|(10(?:01|20|66))"],"LK":["94","00","(?:[1-7]\\\\d|[89]1)\\\\d{7}",[9],[["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[1-689]"],"0$1"]],"0"],"LR":["231","00","(?:2|33|5\\\\d|77|88)\\\\d{7}|[45]\\\\d{6}",[7,8,9],[["(\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[45]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["2"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[3578]"],"0$1"]],"0"],"LS":["266","00","(?:[256]\\\\d\\\\d|800)\\\\d{5}",[8],[["(\\\\d{4})(\\\\d{4})","$1 $2",["[2568]"]]]],"LT":["370","00","(?:[3469]\\\\d|52|[78]0)\\\\d{6}",[8],[["(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["52[0-79]"],"(8-$1)",1],["(\\\\d{3})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["[7-9]"],"8 $1",1],["(\\\\d{2})(\\\\d{6})","$1 $2",["37|4(?:[15]|6[1-8])"],"(8-$1)",1],["(\\\\d{3})(\\\\d{5})","$1 $2",["[3-6]"],"(8-$1)",1]],"8",0,"[08]"],"LU":["352","00","35[013-9]\\\\d{4,8}|6\\\\d{8}|35\\\\d{2,4}|(?:[2457-9]\\\\d|3[0-46-9])\\\\d{2,9}",[4,5,6,7,8,9,10,11],[["(\\\\d{2})(\\\\d{3})","$1 $2",["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3",["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]],["(\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["20[2-689]"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})","$1 $2 $3 $4",["2(?:[0367]|4[3-8])"]],["(\\\\d{3})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["80[01]|90[015]"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3 $4",["20"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["6"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})","$1 $2 $3 $4 $5",["2(?:[0367]|4[3-8])"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})","$1 $2 $3 $4",["[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]"]]],0,0,"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)"],"LV":["371","00","(?:[268]\\\\d|90)\\\\d{6}",[8],[["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[269]|8[01]"]]]],"LY":["218","00","(?:[2569]\\\\d|71)\\\\d{7}",[9],[["(\\\\d{2})(\\\\d{7})","$1-$2",["[25-79]"],"0$1"]],"0"],"MA":["212","00","[5-8]\\\\d{8}",[9],[["(\\\\d{5})(\\\\d{4})","$1-$2",["5(?:29|38)","5(?:29|38)[89]"],"0$1"],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["5[45]"],"0$1"],["(\\\\d{4})(\\\\d{5})","$1-$2",["5(?:2[2-489]|3[5-9]|9)|892"],"0$1"],["(\\\\d{2})(\\\\d{7})","$1-$2",["8"],"0$1"],["(\\\\d{3})(\\\\d{6})","$1-$2",["[5-7]"],"0$1"]],"0",0,0,0,0,0,[["5(?:2(?:[015-79]\\\\d|2[02-9]|3[2-57]|4[2-8]|8[235-7])|3(?:[0-48]\\\\d|[57][2-9]|6[2-8]|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}"],["(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:0[06-8]|6[1267]|7[0-27]))\\\\d{6}"],["80\\\\d{7}"],["89\\\\d{7}"],0,0,0,0,["5924[01]\\\\d{4}"]]],"MC":["377","00","870\\\\d{5}|(?:[349]|6\\\\d)\\\\d{7}",[8,9],[["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["4"],"0$1"],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[39]"]],["(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4 $5",["6"],"0$1"]],"0"],"MD":["373","00","(?:[235-7]\\\\d|[89]0)\\\\d{6}",[8],[["(\\\\d{3})(\\\\d{5})","$1 $2",["[89]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["22|3"],"0$1"],["(\\\\d{3})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["[25-7]"],"0$1"]],"0"],"ME":["382","00","(?:20|[3-79]\\\\d)\\\\d{6}|80\\\\d{6,7}",[8,9],[["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[2-9]"],"0$1"]],"0"],"MF":["590","00","(?:590|69\\\\d)\\\\d{6}",[9],0,"0",0,0,0,0,0,[["590(?:0[079]|[14]3|[27][79]|30|5[0-268]|87)\\\\d{4}"],["69(?:0\\\\d\\\\d|1(?:2[29]|3[0-5]))\\\\d{4}"]]],"MG":["261","00","[23]\\\\d{8}",[9],[["(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})","$1 $2 $3 $4",["[23]"],"0$1"]],"0",0,"0|([24-9]\\\\d{6})$","20$1"],"MH":["692","011","329\\\\d{4}|(?:[256]\\\\d|45)\\\\d{5}",[7],[["(\\\\d{3})(\\\\d{4})","$1-$2",["[2-6]"]]],"1"],"MK":["389","00","[2-578]\\\\d{7}",[8],[["(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[347]"],"0$1"],["(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[58]"],"0$1"]],"0"],"ML":["223","00","(?:[246-9]\\\\d|50)\\\\d{6}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[24-9]"]]]],"MM":["95","00","1\\\\d{5,7}|95\\\\d{6}|(?:[4-7]|9[0-46-9])\\\\d{6,8}|(?:2|8\\\\d)\\\\d{5,8}",[6,7,8,9,10],[["(\\\\d)(\\\\d{2})(\\\\d{3})","$1 $2 $3",["16|2"],"0$1"],["(\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]"],"0$1"],["(\\\\d)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[12]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[4-7]|8[1-35]"],"0$1"],["(\\\\d)(\\\\d{3})(\\\\d{4,6})","$1 $2 $3",["9(?:2[0-4]|[35-9]|4[137-9])"],"0$1"],["(\\\\d)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["8"],"0$1"],["(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["92"],"0$1"],["(\\\\d)(\\\\d{5})(\\\\d{4})","$1 $2 $3",["9"],"0$1"]],"0"],"MN":["976","001","[12]\\\\d{7,9}|[57-9]\\\\d{7}",[8,9,10],[["(\\\\d{2})(\\\\d{2})(\\\\d{4})","$1 $2 $3",["[12]1"],"0$1"],["(\\\\d{4})(\\\\d{4})","$1 $2",["[57-9]"]],["(\\\\d{3})(\\\\d{5,6})","$1 $2",["[12]2[1-3]"],"0$1"],["(\\\\d{4})(\\\\d{5,6})","$1 $2",["[12](?:27|3[2-8]|4[2-68]|5[1-4689])","[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]"],"0$1"],["(\\\\d{5})(\\\\d{4,5})","$1 $2",["[12]"],"0$1"]],"0"],"MO":["853","00","(?:28|[68]\\\\d)\\\\d{6}",[8],[["(\\\\d{4})(\\\\d{4})","$1 $2",["[268]"]]]],"MP":["1","011","[58]\\\\d{9}|(?:67|90)0\\\\d{7}",[10],0,"1",0,"1|([2-9]\\\\d{6})$","670$1",0,"670"],"MQ":["596","00","(?:596|69\\\\d)\\\\d{6}",[9],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[56]"],"0$1"]],"0"],"MR":["222","00","(?:[2-4]\\\\d\\\\d|800)\\\\d{5}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[2-48]"]]]],"MS":["1","011","66449\\\\d{5}|(?:[58]\\\\d\\\\d|900)\\\\d{7}",[10],0,"1",0,"1|(4\\\\d{6})$","664$1",0,"664"],"MT":["356","00","3550\\\\d{4}|(?:[2579]\\\\d\\\\d|800)\\\\d{5}",[8],[["(\\\\d{4})(\\\\d{4})","$1 $2",["[2357-9]"]]]],"MU":["230","0(?:0|[24-7]0|3[03])","(?:[2-468]|5\\\\d)\\\\d{6}",[7,8],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[2-46]|8[013]"]],["(\\\\d{4})(\\\\d{4})","$1 $2",["5"]]],0,0,0,0,0,0,0,"020"],"MV":["960","0(?:0|19)","(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}",[7,10],[["(\\\\d{3})(\\\\d{4})","$1-$2",["[3467]|9[14-9]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[89]"]]],0,0,0,0,0,0,0,"00"],"MW":["265","00","1\\\\d{6}(?:\\\\d{2})?|(?:[23]1|77|88|99)\\\\d{7}",[7,9],[["(\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1[2-9]"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["2"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["3"],"0$1"],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[17-9]"],"0$1"]],"0"],"MX":["52","0[09]","(?:1\\\\d|[2-9])\\\\d{9}",[10,11],[["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["33|5[56]|81"],"01 $1",1],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[2-9]"],"01 $1",1],["(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})","$2 $3 $4",["1(?:33|5[56]|81)"],"044 $1",0,"$1 $2 $3 $4"],["(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})","$2 $3 $4",["1"],"044 $1",0,"$1 $2 $3 $4"]],"01",0,"0[12]|04[45]([2-9]\\\\d{9})$","1$1",0,0,0,"00"],"MY":["60","00","1\\\\d{8,9}|(?:3\\\\d|[4-9])\\\\d{7}",[8,9,10],[["(\\\\d)(\\\\d{3})(\\\\d{4})","$1-$2 $3",["[4-79]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1-$2 $3",["1(?:[0249]|[367][2-9]|8[1-9])|8"],"0$1"],["(\\\\d)(\\\\d{4})(\\\\d{4})","$1-$2 $3",["3"],"0$1"],["(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})","$1-$2-$3-$4",["1[36-8]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1-$2 $3",["15"],"0$1"],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1-$2 $3",["1"],"0$1"]],"0"],"MZ":["258","00","(?:2|8\\\\d)\\\\d{7}",[8,9],[["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["2|8[2-7]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["8"]]]],"NA":["264","00","[68]\\\\d{7,8}",[8,9],[["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["88"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["6"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["87"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["8"],"0$1"]],"0"],"NC":["687","00","[2-57-9]\\\\d{5}",[6],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1.$2.$3",["[2-57-9]"]]]],"NE":["227","00","[0289]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["08"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[089]|2[01]"]]]],"NF":["672","00","[13]\\\\d{5}",[6],[["(\\\\d{2})(\\\\d{4})","$1 $2",["1"]],["(\\\\d)(\\\\d{5})","$1 $2",["3"]]],0,0,"([0-258]\\\\d{4})$","3$1"],"NG":["234","009","(?:[124-7]|9\\\\d{3})\\\\d{6}|[1-9]\\\\d{7}|[78]\\\\d{9,13}",[7,8,10,11,12,13,14],[["(\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["78"],"0$1"],["(\\\\d)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[12]|9(?:0[3-9]|[1-9])"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{2,3})","$1 $2 $3",["[3-7]|8[2-9]"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[7-9]"],"0$1"],["(\\\\d{3})(\\\\d{4})(\\\\d{4,5})","$1 $2 $3",["[78]"],"0$1"],["(\\\\d{3})(\\\\d{5})(\\\\d{5,6})","$1 $2 $3",["[78]"],"0$1"]],"0"],"NI":["505","00","(?:1800|[25-8]\\\\d{3})\\\\d{4}",[8],[["(\\\\d{4})(\\\\d{4})","$1 $2",["[125-8]"]]]],"NL":["31","00","(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8]))\\\\d{6}|[89]\\\\d{6,9}|1\\\\d{4,5}",[5,6,7,8,9,10],[["(\\\\d{3})(\\\\d{4,7})","$1 $2",["[89]0"],"0$1"],["(\\\\d{2})(\\\\d{7})","$1 $2",["66"],"0$1"],["(\\\\d)(\\\\d{8})","$1 $2",["6"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1[16-8]|2[259]|3[124]|4[17-9]|5[124679]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[1-57-9]"],"0$1"]],"0"],"NO":["47","00","(?:0|[2-9]\\\\d{3})\\\\d{4}",[5,8],[["(\\\\d{3})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["[489]"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[235-7]"]]],0,0,0,0,0,"[02-689]|7[0-8]"],"NP":["977","00","9\\\\d{9}|[1-9]\\\\d{7}",[8,10],[["(\\\\d)(\\\\d{7})","$1-$2",["1[2-6]"],"0$1"],["(\\\\d{2})(\\\\d{6})","$1-$2",["[1-8]|9(?:[1-579]|6[2-6])"],"0$1"],["(\\\\d{3})(\\\\d{7})","$1-$2",["9"]]],"0"],"NR":["674","00","(?:444|55\\\\d|888)\\\\d{4}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[458]"]]]],"NU":["683","00","(?:[47]|888\\\\d)\\\\d{3}",[4,7],[["(\\\\d{3})(\\\\d{4})","$1 $2",["8"]]]],"NZ":["64","0(?:0|161)","[28]\\\\d{7,9}|[346]\\\\d{7}|(?:508|[79]\\\\d)\\\\d{6,7}",[8,9,10],[["(\\\\d{3})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["[89]0"],"0$1"],["(\\\\d)(\\\\d{3})(\\\\d{4})","$1-$2 $3",["24|[346]|7[2-57-9]|9[2-9]"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["2(?:10|74)|[59]|80"],"0$1"],["(\\\\d{2})(\\\\d{3,4})(\\\\d{4})","$1 $2 $3",["2[028]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3,5})","$1 $2 $3",["2(?:[169]|7[0-35-9])|7|86"],"0$1"]],"0",0,0,0,0,0,0,"00"],"OM":["968","00","(?:[279]\\\\d{3}|500)\\\\d{4}|8007\\\\d{4,5}",[7,8,9],[["(\\\\d{3})(\\\\d{4,6})","$1 $2",["[58]"]],["(\\\\d{2})(\\\\d{6})","$1 $2",["2"]],["(\\\\d{4})(\\\\d{4})","$1 $2",["[79]"]]]],"PA":["507","00","(?:[1-57-9]|6\\\\d)\\\\d{6}",[7,8],[["(\\\\d{3})(\\\\d{4})","$1-$2",["[1-57-9]"]],["(\\\\d{4})(\\\\d{4})","$1-$2",["6"]]]],"PE":["51","19(?:1[124]|77|90)00","(?:[14-8]|9\\\\d)\\\\d{7}",[8,9],[["(\\\\d{3})(\\\\d{5})","$1 $2",["80"],"(0$1)"],["(\\\\d)(\\\\d{7})","$1 $2",["1"],"(0$1)"],["(\\\\d{2})(\\\\d{6})","$1 $2",["[4-8]"],"(0$1)"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["9"]]],"0",0,0,0,0,0,0,0," Anexo "],"PF":["689","00","[48]\\\\d{7}|4\\\\d{5}",[6,8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3",["44"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[48]"]]]],"PG":["675","00|140[1-3]","(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}",[7,8],[["(\\\\d{3})(\\\\d{4})","$1 $2",["18|[2-69]|85"]],["(\\\\d{4})(\\\\d{4})","$1 $2",["[78]"]]],0,0,0,0,0,0,0,"00"],"PH":["63","00","(?:1800|8)\\\\d{7,9}|2\\\\d{5}(?:\\\\d{2})?|(?:[3-7]|9\\\\d)\\\\d{8}",[6,8,9,10,11,12,13],[["(\\\\d)(\\\\d{5})","$1 $2",["2"],"(0$1)"],["(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["2"],"(0$1)"],["(\\\\d{4})(\\\\d{4,6})","$1 $2",["3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2","3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))"],"(0$1)"],["(\\\\d{5})(\\\\d{4})","$1 $2",["346|4(?:27|9[35])|883","3469|4(?:279|9(?:30|56))|8834"],"(0$1)"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[3-7]|8[2-8]"],"(0$1)"],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[89]"],"0$1"],["(\\\\d{4})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1"]],["(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})","$1 $2 $3 $4",["1"]]],"0"],"PK":["92","00","122\\\\d{6}|[24-8]\\\\d{10,11}|9(?:[013-9]\\\\d{8,10}|2(?:[01]\\\\d\\\\d|2(?:[025-8]\\\\d|1[01]))\\\\d{7})|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}",[8,9,10,11,12],[["(\\\\d{3})(\\\\d{3})(\\\\d{2})","$1 $2 $3",["[89]0"],"0$1"],["(\\\\d{4})(\\\\d{5})","$1 $2",["1"]],["(\\\\d{2})(\\\\d{7,8})","$1 $2",["(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]"],"(0$1)"],["(\\\\d{3})(\\\\d{6,7})","$1 $2",["2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])","9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]"],"(0$1)"],["(\\\\d{5})(\\\\d{5})","$1 $2",["58"],"(0$1)"],["(\\\\d{3})(\\\\d{7})","$1 $2",["3"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91"],"(0$1)"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["[24-9]"],"(0$1)"]],"0"],"PL":["48","00","[1-57-9]\\\\d{6}(?:\\\\d{2})?|6\\\\d{5,8}",[6,7,8,9],[["(\\\\d{5})","$1",["19"]],["(\\\\d{3})(\\\\d{3})","$1 $2",["11|64"]],["(\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1","(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19"]],["(\\\\d{3})(\\\\d{2})(\\\\d{2,3})","$1 $2 $3",["64"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["39|45|5[0137]|6[0469]|7[02389]|8[08]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["1[2-8]|[2-8]|9[145]"]]]],"PM":["508","00","[45]\\\\d{5}",[6],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3",["[45]"],"0$1"]],"0"],"PR":["1","011","(?:[589]\\\\d\\\\d|787)\\\\d{7}",[10],0,"1",0,0,0,0,"787|939"],"PS":["970","00","[2489]2\\\\d{6}|(?:1\\\\d|5)\\\\d{8}",[8,9,10],[["(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[2489]"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["5"],"0$1"],["(\\\\d{4})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1"]]],"0"],"PT":["351","00","(?:[26-9]\\\\d|30)\\\\d{7}",[9],[["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["2[12]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[236-9]"]]]],"PW":["680","01[12]","(?:[25-8]\\\\d\\\\d|345|488|900)\\\\d{4}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[2-9]"]]]],"PY":["595","00","59\\\\d{4,6}|(?:[2-46-9]\\\\d|5[0-8])\\\\d{4,7}",[6,7,8,9],[["(\\\\d{3})(\\\\d{3,6})","$1 $2",["[2-9]0"],"0$1"],["(\\\\d{2})(\\\\d{5})","$1 $2",["[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"],"(0$1)"],["(\\\\d{3})(\\\\d{4,5})","$1 $2",["2[279]|3[13-5]|4[359]|5|6[347]|7[46-8]|85"],"(0$1)"],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"],"(0$1)"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["87"]],["(\\\\d{3})(\\\\d{6})","$1 $2",["9"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[2-8]"],"0$1"]],"0"],"QA":["974","00","800\\\\d{4}|(?:2|[3-7]\\\\d)\\\\d{6}",[7,8],[["(\\\\d{3})(\\\\d{4})","$1 $2",["2[126]|8"]],["(\\\\d{4})(\\\\d{4})","$1 $2",["[3-7]"]]]],"RE":["262","00","(?:26|[68]\\\\d)\\\\d{7}",[9],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[268]"],"0$1"]],"0",0,0,0,0,"262|69|8"],"RO":["40","00","(?:[237]\\\\d|[89]0)\\\\d{7}|[23]\\\\d{5}",[6,9],[["(\\\\d{3})(\\\\d{3})","$1 $2",["2[3-6]","2[3-6]\\\\d9"],"0$1"],["(\\\\d{2})(\\\\d{4})","$1 $2",["219|31"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[23]1"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[237-9]"],"0$1"]],"0",0,0,0,0,0,0,0," int "],"RS":["381","00","38[02-9]\\\\d{6,9}|6\\\\d{7,9}|90\\\\d{4,8}|38\\\\d{5,6}|(?:7\\\\d\\\\d|800)\\\\d{3,9}|(?:[12]\\\\d|3[0-79])\\\\d{5,10}",[6,7,8,9,10,11,12],[["(\\\\d{3})(\\\\d{3,9})","$1 $2",["(?:2[389]|39)0|[7-9]"],"0$1"],["(\\\\d{2})(\\\\d{5,10})","$1 $2",["[1-36]"],"0$1"]],"0"],"RU":["7","810","[347-9]\\\\d{9}",[10],[["(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["7(?:1[0-8]|2[1-9])","7(?:1(?:[0-6]2|7|8[27])|2(?:1[23]|[2-9]2))","7(?:1(?:[0-6]2|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2"],"8 ($1)",1],["(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["7(?:1[0-68]|2[1-9])","7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))","7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]"],"8 ($1)",1],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["7"],"8 ($1)",1],["(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2-$3-$4",["[3489]"],"8 ($1)",1]],"8",0,0,0,0,"3[04-689]|[489]",0,"8~10"],"RW":["250","00","(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}",[8,9],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["0"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["2"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[7-9]"],"0$1"]],"0"],"SA":["966","00","92\\\\d{7}|(?:[15]|8\\\\d)\\\\d{8}",[9,10],[["(\\\\d{4})(\\\\d{5})","$1 $2",["9"]],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["5"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["81"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["8"]]],"0"],"SB":["677","0[01]","(?:[1-6]|[7-9]\\\\d\\\\d)\\\\d{4}",[5,7],[["(\\\\d{2})(\\\\d{5})","$1 $2",["7|8[4-9]|9(?:[1-8]|9[0-8])"]]]],"SC":["248","010|0[0-2]","8000\\\\d{3}|(?:[249]\\\\d|64)\\\\d{5}",[7],[["(\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[246]"]]],0,0,0,0,0,0,0,"00"],"SD":["249","00","[19]\\\\d{8}",[9],[["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[19]"],"0$1"]],"0"],"SE":["46","00","(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}",[6,7,8,9,10],[["(\\\\d{2})(\\\\d{2,3})(\\\\d{2})","$1-$2 $3",["20"],"0$1",0,"$1 $2 $3"],["(\\\\d{3})(\\\\d{4})","$1-$2",["9(?:00|39|44)"],"0$1",0,"$1 $2"],["(\\\\d{2})(\\\\d{3})(\\\\d{2})","$1-$2 $3",["[12][136]|3[356]|4[0246]|6[03]|90[1-9]"],"0$1",0,"$1 $2 $3"],["(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})","$1-$2 $3 $4",["8"],"0$1",0,"$1 $2 $3 $4"],["(\\\\d{3})(\\\\d{2,3})(\\\\d{2})","$1-$2 $3",["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"],"0$1",0,"$1 $2 $3"],["(\\\\d{3})(\\\\d{2,3})(\\\\d{3})","$1-$2 $3",["9(?:00|39|44)"],"0$1",0,"$1 $2 $3"],["(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})","$1-$2 $3 $4",["1[013689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]"],"0$1",0,"$1 $2 $3 $4"],["(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1-$2 $3 $4",["7"],"0$1",0,"$1 $2 $3 $4"],["(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})","$1-$2 $3 $4",["8"],"0$1",0,"$1 $2 $3 $4"],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1-$2 $3 $4",["[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"],"0$1",0,"$1 $2 $3 $4"],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})","$1-$2 $3 $4",["9"],"0$1",0,"$1 $2 $3 $4"],["(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1-$2 $3 $4 $5",["[26]"],"0$1",0,"$1 $2 $3 $4 $5"]],"0"],"SG":["65","0[0-3]\\\\d","(?:(?:1\\\\d|8)\\\\d\\\\d|7000)\\\\d{7}|[3689]\\\\d{7}",[8,10,11],[["(\\\\d{4})(\\\\d{4})","$1 $2",["[369]|8[1-8]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["8"]],["(\\\\d{4})(\\\\d{4})(\\\\d{3})","$1 $2 $3",["7"]],["(\\\\d{4})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1"]]]],"SH":["290","00","(?:[256]\\\\d|8)\\\\d{3}",[4,5],0,0,0,0,0,0,"[256]"],"SI":["386","00|10(?:22|66|88|99)","[1-7]\\\\d{7}|8\\\\d{4,7}|90\\\\d{4,6}",[5,6,7,8],[["(\\\\d{2})(\\\\d{3,6})","$1 $2",["8[09]|9"],"0$1"],["(\\\\d{3})(\\\\d{5})","$1 $2",["59|8"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[37][01]|4[0139]|51|6"],"0$1"],["(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[1-57]"],"(0$1)"]],"0",0,0,0,0,0,0,"00"],"SJ":["47","00","0\\\\d{4}|(?:[4589]\\\\d|79)\\\\d{6}",[5,8],0,0,0,0,0,0,"79"],"SK":["421","00","[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}",[6,7,9],[["(\\\\d)(\\\\d{2})(\\\\d{3,4})","$1 $2 $3",["21"],"0$1"],["(\\\\d{2})(\\\\d{2})(\\\\d{2,3})","$1 $2 $3",["[3-5][1-8]1","[3-5][1-8]1[67]"],"0$1"],["(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})","$1/$2 $3 $4",["2"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[689]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1/$2 $3 $4",["[3-5]"],"0$1"]],"0"],"SL":["232","00","(?:[2-578]\\\\d|66|99)\\\\d{6}",[8],[["(\\\\d{2})(\\\\d{6})","$1 $2",["[2-9]"],"(0$1)"]],"0"],"SM":["378","00","(?:0549|[5-7]\\\\d)\\\\d{6}",[8,10],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[5-7]"]],["(\\\\d{4})(\\\\d{6})","$1 $2",["0"]]],0,0,"([89]\\\\d{5})$","0549$1"],"SN":["221","00","(?:[378]\\\\d{4}|93330)\\\\d{4}",[9],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["8"]],["(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[379]"]]]],"SO":["252","00","[346-9]\\\\d{8}|[12679]\\\\d{7}|(?:[1-4]\\\\d|59)\\\\d{5}|[1348]\\\\d{5}",[6,7,8,9],[["(\\\\d{2})(\\\\d{4})","$1 $2",["8[125]"]],["(\\\\d{6})","$1",["[134]"]],["(\\\\d)(\\\\d{6})","$1 $2",["1|2[0-79]|3[0-46-8]|4[0-7]|59"]],["(\\\\d)(\\\\d{7})","$1 $2",["24|[67]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[348]|64|79[0-8]|90"]],["(\\\\d{2})(\\\\d{5,7})","$1 $2",["1|28|6[1-35-9]|799|9[2-9]"]]],"0"],"SR":["597","00","(?:[2-5]|68|[78]\\\\d)\\\\d{5}",[6,7],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1-$2-$3",["56"]],["(\\\\d{3})(\\\\d{3})","$1-$2",["[2-5]"]],["(\\\\d{3})(\\\\d{4})","$1-$2",["[6-8]"]]]],"SS":["211","00","[19]\\\\d{8}",[9],[["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[19]"],"0$1"]],"0"],"ST":["239","00","(?:22|9\\\\d)\\\\d{5}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[29]"]]]],"SV":["503","00","[267]\\\\d{7}|[89]00\\\\d{4}(?:\\\\d{4})?",[7,8,11],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[89]"]],["(\\\\d{4})(\\\\d{4})","$1 $2",["[267]"]],["(\\\\d{3})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["[89]"]]]],"SX":["1","011","7215\\\\d{6}|(?:[58]\\\\d\\\\d|900)\\\\d{7}",[10],0,"1",0,"1|(5\\\\d{6})$","721$1",0,"721"],"SY":["963","00","[1-39]\\\\d{8}|[1-5]\\\\d{7}",[8,9],[["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[1-5]"],"0$1",1],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["9"],"0$1",1]],"0"],"SZ":["268","00","0800\\\\d{4}|(?:[237]\\\\d|900)\\\\d{6}",[8,9],[["(\\\\d{4})(\\\\d{4})","$1 $2",["[0237]"]],["(\\\\d{5})(\\\\d{4})","$1 $2",["9"]]]],"TA":["290","00","8\\\\d{3}",[4],0,0,0,0,0,0,"8"],"TC":["1","011","(?:[58]\\\\d\\\\d|649|900)\\\\d{7}",[10],0,"1",0,"1|([2-479]\\\\d{6})$","649$1",0,"649"],"TD":["235","00|16","(?:22|[69]\\\\d|77)\\\\d{6}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[2679]"]]],0,0,0,0,0,0,0,"00"],"TG":["228","00","[279]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[279]"]]]],"TH":["66","00[1-9]","1\\\\d{8,9}|(?:[2-57]|[689]\\\\d)\\\\d{7}",[8,9,10],[["(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["14|[3-9]"],"0$1"],["(\\\\d{4})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1"]]],"0"],"TJ":["992","810","(?:[3-59]\\\\d|77|88)\\\\d{7}",[9],[["(\\\\d{6})(\\\\d)(\\\\d{2})","$1 $2 $3",["331","3317"],0,1],["(\\\\d{3})(\\\\d{2})(\\\\d{4})","$1 $2 $3",["[34]7|91[78]"],0,1],["(\\\\d{4})(\\\\d)(\\\\d{4})","$1 $2 $3",["3"],0,1],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[457-9]"],0,1]],"8",0,0,0,0,0,0,"8~10"],"TK":["690","00","[2-47]\\\\d{3,6}",[4,5,6,7]],"TL":["670","00","7\\\\d{7}|(?:[2-47]\\\\d|[89]0)\\\\d{5}",[7,8],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[2-489]|70"]],["(\\\\d{4})(\\\\d{4})","$1 $2",["7"]]]],"TM":["993","810","[1-6]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2-$3-$4",["12"],"(8 $1)"],["(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})","$1 $2-$3-$4",["[1-5]"],"(8 $1)"],["(\\\\d{2})(\\\\d{6})","$1 $2",["6"],"8 $1"]],"8",0,0,0,0,0,0,"8~10"],"TN":["216","00","[2-57-9]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[2-57-9]"]]]],"TO":["676","00","[78]\\\\d{6}|[2-478]\\\\d{4}|(?:080|[56])0\\\\d{3}",[5,7],[["(\\\\d{2})(\\\\d{3})","$1-$2",["[2-6]|7[014]|8[05]"]],["(\\\\d{4})(\\\\d{3})","$1 $2",["0"]],["(\\\\d{3})(\\\\d{4})","$1 $2",["7[578]|8"]]]],"TR":["90","00","(?:[2-58]\\\\d\\\\d|900)\\\\d{7}|4\\\\d{6}",[7,10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["512|8[0589]|90"],"0$1",1],["(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["5(?:[0-59]|61)","5(?:[0-59]|616)","5(?:[0-59]|6161)"],"0$1",1],["(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[24][1-8]|3[1-9]"],"(0$1)",1]],"0"],"TT":["1","011","(?:[58]\\\\d\\\\d|900)\\\\d{7}",[10],0,"1",0,"1|([2-46-8]\\\\d{6})$","868$1",0,"868"],"TV":["688","00","(?:2|7\\\\d\\\\d|90)\\\\d{4}",[5,6,7]],"TW":["886","0(?:0[25-79]|19)","(?:[24589]|7\\\\d)\\\\d{8}|[2-8]\\\\d{7}|2\\\\d{6}",[7,8,9,10],[["(\\\\d{2})(\\\\d)(\\\\d{4})","$1 $2 $3",["202"],"0$1"],["(\\\\d)(\\\\d{3,4})(\\\\d{4})","$1 $2 $3",["[25][2-8]|[346]|7[1-9]|8[237-9]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[258]"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["9"],"0$1"],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["7"],"0$1"]],"0",0,0,0,0,0,0,0,"#"],"TZ":["255","00[056]","(?:[26-8]\\\\d|41|90)\\\\d{7}",[9],[["(\\\\d{3})(\\\\d{2})(\\\\d{4})","$1 $2 $3",["[89]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[24]"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[67]"],"0$1"]],"0"],"UA":["380","00","[89]\\\\d{9}|[3-9]\\\\d{8}",[9,10],[["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]","6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["4[45][0-5]|5(?:0|6[37])|6(?:[12][018]|[36-8])|7|89|9[1-9]|(?:48|57)[0137-9]","4[45][0-5]|5(?:0|6(?:3[14-7]|7))|6(?:[12][018]|[36-8])|7|89|9[1-9]|(?:48|57)[0137-9]"],"0$1"],["(\\\\d{4})(\\\\d{5})","$1 $2",["[3-6]"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[89]"],"0$1"]],"0",0,0,0,0,0,0,"0~0"],"UG":["256","00[057]","800\\\\d{6}|(?:[29]0|[347]\\\\d)\\\\d{7}",[9],[["(\\\\d{4})(\\\\d{5})","$1 $2",["202","2024"],"0$1"],["(\\\\d{3})(\\\\d{6})","$1 $2",["[27-9]|4(?:6[45]|[7-9])"],"0$1"],["(\\\\d{2})(\\\\d{7})","$1 $2",["[34]"],"0$1"]],"0"],"US":["1","011","[2-9]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",["[2-9]"],0,1,"$1-$2-$3"]],"1",0,0,0,0,0,[["(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[0-24679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[017]|6[0-279]|78|8[0-2])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|2[08]|3[0-28]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[0179]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}"],[""],["8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}"],["900[2-9]\\\\d{6}"],["5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}"],0,["710[2-9]\\\\d{6}"]]],"UY":["598","0(?:0|1[3-9]\\\\d)","(?:[249]\\\\d\\\\d|80)\\\\d{5}|9\\\\d{6}",[7,8],[["(\\\\d{3})(\\\\d{4})","$1 $2",["8|90"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["9"],"0$1"],["(\\\\d{4})(\\\\d{4})","$1 $2",["[24]"]]],"0",0,0,0,0,0,0,"00"," int. "],"UZ":["998","810","[679]\\\\d{8}",[9],[["(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[679]"],"8 $1"]],"8",0,0,0,0,0,0,"8~10"],"VA":["39","00","0\\\\d{6,10}|55\\\\d{8}|[08]\\\\d{5}|(?:3[0-8]|8)\\\\d{7,9}|(?:1\\\\d|39)\\\\d{7,8}",[6,7,8,9,10,11],0,0,0,0,0,0,"06698"],"VC":["1","011","(?:[58]\\\\d\\\\d|784|900)\\\\d{7}",[10],0,"1",0,"1|([2-7]\\\\d{6})$","784$1",0,"784"],"VE":["58","00","[89]00\\\\d{7}|(?:[24]\\\\d|50)\\\\d{8}",[10],[["(\\\\d{3})(\\\\d{7})","$1-$2",["[24589]"],"0$1"]],"0"],"VG":["1","011","(?:284|[58]\\\\d\\\\d|900)\\\\d{7}",[10],0,"1",0,"1|([2-578]\\\\d{6})$","284$1",0,"284"],"VI":["1","011","[58]\\\\d{9}|(?:34|90)0\\\\d{7}",[10],0,"1",0,"1|([2-9]\\\\d{6})$","340$1",0,"340"],"VN":["84","00","[12]\\\\d{9}|[135-9]\\\\d{8}|[16]\\\\d{7}|[16-8]\\\\d{6}",[7,8,9,10],[["(\\\\d{2})(\\\\d{5})","$1 $2",["80"],"0$1",1],["(\\\\d{4})(\\\\d{4,6})","$1 $2",["1"],0,1],["(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[69]"],"0$1",1],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[3578]"],"0$1",1],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["2[48]"],"0$1",1],["(\\\\d{3})(\\\\d{4})(\\\\d{3})","$1 $2 $3",["2"],"0$1",1]],"0"],"VU":["678","00","(?:[23]\\\\d|[48]8)\\\\d{3}|(?:[57]\\\\d|90)\\\\d{5}",[5,7],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[579]"]]]],"WF":["681","00","(?:[45]0|68|72|8\\\\d)\\\\d{4}",[6],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3",["[4-8]"]]]],"WS":["685","0","[2-6]\\\\d{4}|8\\\\d{5}(?:\\\\d{4})?|[78]\\\\d{6}",[5,6,7,10],[["(\\\\d{5})","$1",["[2-6]"]],["(\\\\d{3})(\\\\d{3,7})","$1 $2",["8"]],["(\\\\d{2})(\\\\d{5})","$1 $2",["7"]]]],"XK":["383","00","[23]\\\\d{7,8}|(?:4\\\\d\\\\d|[89]00)\\\\d{5}",[8,9],[["(\\\\d{3})(\\\\d{5})","$1 $2",["[89]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[2-4]"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[23]"],"0$1"]],"0"],"YE":["967","00","(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}",[7,8,9],[["(\\\\d)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[1-6]|7[24-68]"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["7"],"0$1"]],"0"],"YT":["262","00","80\\\\d{7}|(?:26|63)9\\\\d{6}",[9],0,"0",0,0,0,0,"269|63"],"ZA":["27","00","[1-9]\\\\d{8}|8\\\\d{4,7}",[5,6,7,8,9],[["(\\\\d{2})(\\\\d{3,4})","$1 $2",["8[1-4]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{2,3})","$1 $2 $3",["8[1-4]"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["860"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[1-9]"],"0$1"]],"0"],"ZM":["260","00","800\\\\d{6}|(?:21|76|9\\\\d)\\\\d{7}",[9],[["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[28]"],"0$1"],["(\\\\d{2})(\\\\d{7})","$1 $2",["[79]"],"0$1"]],"0"],"ZW":["263","00","2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}",[5,6,7,8,9,10],[["(\\\\d{3})(\\\\d{3,5})","$1 $2",["2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]"],"0$1"],["(\\\\d)(\\\\d{3})(\\\\d{2,4})","$1 $2 $3",["[49]"],"0$1"],["(\\\\d{3})(\\\\d{4})","$1 $2",["80"],"0$1"],["(\\\\d{2})(\\\\d{7})","$1 $2",["24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2","2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]"],"(0$1)"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)","2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)"],"0$1"],["(\\\\d{4})(\\\\d{6})","$1 $2",["8"],"0$1"],["(\\\\d{2})(\\\\d{3,5})","$1 $2",["1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["29[013-9]|39|54"],"0$1"],["(\\\\d{4})(\\\\d{3,5})","$1 $2",["(?:25|54)8","258|5483"],"0$1"]],"0"],"001":["979",0,"\\\\d{9}",[9],[["(\\\\d)(\\\\d{4})(\\\\d{4})","$1 $2 $3"]]]}}')
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => l,
                normalizeArguments: () => o
            });
            var a = n(201),
                s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                } : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                },
                i = Object.assign || function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a])
                    }
                    return e
                },
                r = function(e, t) {
                    if (Array.isArray(e)) return e;
                    if (Symbol.iterator in Object(e)) return function(e, t) {
                        var n = [],
                            a = !0,
                            s = !1,
                            i = void 0;
                        try {
                            for (var r, l = e[Symbol.iterator](); !(a = (r = l.next()).done) && (n.push(r.value), !t || n.length !== t); a = !0);
                        } catch (e) {
                            s = !0, i = e
                        } finally {
                            try {
                                !a && l.return && l.return()
                            } finally {
                                if (s) throw i
                            }
                        }
                        return n
                    }(e, t);
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                };

            function l() {
                var e = o(arguments),
                    t = e.text,
                    n = e.options,
                    s = e.metadata;
                return (0, a.default)(t, n, s)
            }

            function o(e) {
                var t = Array.prototype.slice.call(e),
                    n = r(t, 4),
                    a = n[0],
                    s = n[1],
                    l = n[2],
                    o = n[3],
                    d = void 0,
                    u = void 0,
                    m = void 0;
                if ("string" != typeof a) throw new TypeError("A text for parsing must be a string.");
                if (d = a, s && "string" != typeof s) {
                    if (!c(s)) throw new Error("Invalid second argument: " + s);
                    l ? (u = s, m = l) : m = s
                } else o ? (u = l, m = o) : (u = void 0, m = l), s && (u = i({
                    defaultCountry: s
                }, u));
                return {
                    text: d,
                    options: u,
                    metadata: m
                }
            }
            var c = function(e) {
                return "object" === (void 0 === e ? "undefined" : s(e))
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => i
            });
            var a = n(202),
                s = Object.assign || function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a])
                    }
                    return e
                };

            function i(e, t, n) {
                return (0, a.default)(e, s({}, t, {
                    v2: !0
                }), n)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => A,
                extractCountryCallingCode: () => y,
                extract_formatted_phone_number: () => b,
                find_country_code: () => E,
                strip_national_prefix_and_carrier_code: () => v
            });
            var a = n(203),
                s = n(207),
                i = n(198),
                r = n(194),
                l = n(211),
                o = n(212),
                c = n(196),
                d = n(206),
                u = n(205),
                m = n(213),
                p = n(210),
                h = n(204),
                g = 250,
                f = new RegExp("[" + a.PLUS_CHARS + a.VALID_DIGITS + "]"),
                _ = new RegExp("[^" + a.VALID_DIGITS + "]+$");

            function A(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    n = arguments[2];
                if (n = new r.default(n), t.defaultCountry && !n.hasCountry(t.defaultCountry)) {
                    if (t.v2) throw new i.default("INVALID_COUNTRY");
                    throw new Error("Unknown country: " + t.defaultCountry)
                }
                var m = function(e, t) {
                        if (e && 0 === e.indexOf("tel:")) return (0, p.parseRFC3966)(e);
                        var n = b(e, t);
                        if (!n || !(0, l.default)(n)) return {};
                        var a = (0, o.extractExtension)(n);
                        if (a.ext) return a;
                        return {
                            number: n
                        }
                    }(e, t.v2),
                    g = m.number,
                    f = m.ext;
                if (!g) {
                    if (t.v2) throw new i.default("NOT_A_NUMBER");
                    return {}
                }
                var _ = function(e, t, n) {
                        var a = y(e, t, n.metadata),
                            i = a.countryCallingCode,
                            l = a.number;
                        if (!l) return {
                            countryCallingCode: i
                        };
                        var o = void 0;
                        if (i) n.chooseCountryByCountryCallingCode(i);
                        else {
                            if (!t) return {};
                            n.country(t), o = t, i = (0, r.getCountryCallingCode)(t, n.metadata)
                        }
                        var u = function(e, t) {
                                var n = (0, c.default)(e),
                                    a = void 0,
                                    i = v(n, t),
                                    r = i.number,
                                    l = i.carrierCode;
                                if (t.possibleLengths()) switch ((0, d.checkNumberLengthForType)(r, void 0, t)) {
                                    case "TOO_SHORT":
                                    case "INVALID_LENGTH":
                                        break;
                                    default:
                                        n = r, a = l
                                } else(0, s.matchesEntirely)(n, t.nationalNumberPattern()) && !(0, s.matchesEntirely)(r, t.nationalNumberPattern()) || (n = r, a = l);
                                return {
                                    national_number: n,
                                    carrier_code: a
                                }
                            }(l, n),
                            m = u.national_number,
                            p = u.carrier_code,
                            h = E(i, m, n);
                        h && (o = h, n.country(o));
                        return {
                            country: o,
                            countryCallingCode: i,
                            national_number: m,
                            carrierCode: p
                        }
                    }(g, t.defaultCountry, n),
                    A = _.country,
                    C = _.national_number,
                    k = _.countryCallingCode,
                    x = _.carrierCode;
                if (!n.selectedCountry()) {
                    if (t.v2) throw new i.default("INVALID_COUNTRY");
                    return {}
                }
                if (C.length < a.MIN_LENGTH_FOR_NSN) {
                    if (t.v2) throw new i.default("TOO_SHORT");
                    return {}
                }
                if (C.length > a.MAX_LENGTH_FOR_NSN) {
                    if (t.v2) throw new i.default("TOO_LONG");
                    return {}
                }
                if (t.v2) {
                    var T = new h.default(k, C, n.metadata);
                    return A && (T.country = A), x && (T.carrierCode = x), f && (T.ext = f), T
                }
                var w = !(!A || !(0, s.matchesEntirely)(C, n.nationalNumberPattern()));
                return t.extended ? {
                    country: A,
                    countryCallingCode: k,
                    carrierCode: x,
                    valid: w,
                    possible: !!w || !0 === t.extended && n.possibleLengths() && (0, u.is_possible_number)(C, void 0 !== k, n),
                    phone: C,
                    ext: f
                } : w ? function(e, t, n) {
                    var a = {
                        country: e,
                        phone: t
                    };
                    n && (a.ext = n);
                    return a
                }(A, C, f) : {}
            }

            function b(e, t) {
                if (e)
                    if (e.length > g) {
                        if (t) throw new i.default("TOO_LONG")
                    } else {
                        var n = e.search(f);
                        if (!(n < 0)) return e.slice(n).replace(_, "")
                    }
            }

            function v(e, t) {
                if (!e || !t.nationalPrefixForParsing()) return {
                    number: e
                };
                var n = new RegExp("^(?:" + t.nationalPrefixForParsing() + ")"),
                    a = n.exec(e);
                if (!a) return {
                    number: e
                };
                var s = void 0,
                    i = a.length - 1;
                s = t.nationalPrefixTransformRule() && a[i] ? e.replace(n, t.nationalPrefixTransformRule()) : e.slice(a[0].length);
                var r = void 0;
                return i > 0 && (r = a[1]), {
                    number: s,
                    carrierCode: r
                }
            }

            function E(e, t, n) {
                var a = n.countryCallingCodes()[e];
                return 1 === a.length ? a[0] : function(e, t, n) {
                    n = new r.default(n);
                    var a = e,
                        s = Array.isArray(a),
                        i = 0;
                    for (a = s ? a : a[Symbol.iterator]();;) {
                        var l;
                        if (s) {
                            if (i >= a.length) break;
                            l = a[i++]
                        } else {
                            if ((i = a.next()).done) break;
                            l = i.value
                        }
                        var o = l;
                        if (n.country(o), n.leadingDigits()) {
                            if (t && 0 === t.search(n.leadingDigits())) return o
                        } else if ((0, d.default)({
                                phone: t,
                                country: o
                            }, void 0, n.metadata)) return o
                    }
                }(a, t, n.metadata)
            }

            function y(e, t, n) {
                if (!(e = (0, c.default)(e))) return {};
                if ("+" !== e[0]) {
                    var s = (0, m.stripIDDPrefix)(e, t, n);
                    if (!s || s === e) return {
                        number: e
                    };
                    e = "+" + s
                }
                if ("0" === e[1]) return {};
                n = new r.default(n);
                for (var i = 2; i - 1 <= a.MAX_LENGTH_COUNTRY_CODE && i <= e.length;) {
                    var l = e.slice(1, i);
                    if (n.countryCallingCodes()[l]) return {
                        countryCallingCode: l,
                        number: e.slice(i)
                    };
                    i++
                }
                return {}
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                MAX_LENGTH_COUNTRY_CODE: () => i,
                MAX_LENGTH_FOR_NSN: () => s,
                MIN_LENGTH_FOR_NSN: () => a,
                PLUS_CHARS: () => c,
                VALID_DIGITS: () => r,
                VALID_PUNCTUATION: () => o,
                WHITESPACE: () => l
            });
            var a = 2,
                s = 17,
                i = 3,
                r = "0-9０-９٠-٩۰-۹",
                l = "  ­​⁠　",
                o = "-‐-―−ー－／/．." + l + "()（）［］\\[\\]~⁓∼～",
                c = "+＋"
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => d
            });
            var a = n(194),
                s = n(205),
                i = n(208),
                r = n(206),
                l = n(209),
                o = Object.assign || function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a])
                    }
                    return e
                },
                c = function() {
                    function e(e, t) {
                        for (var n = 0; n < t.length; n++) {
                            var a = t[n];
                            a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                        }
                    }
                    return function(t, n, a) {
                        return n && e(t.prototype, n), a && e(t, a), t
                    }
                }();
            const d = function() {
                function e(t, n, s) {
                    if (function(e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, e), !t) throw new TypeError("`countryCallingCode` not passed");
                    if (!n) throw new TypeError("`nationalNumber` not passed");
                    if (u(t)) {
                        this.country = t;
                        var i = new a.default(s);
                        i.country(t), t = i.countryCallingCode()
                    }
                    this.countryCallingCode = t, this.nationalNumber = n, this.number = "+" + this.countryCallingCode + this.nationalNumber, this.metadata = s
                }
                return c(e, [{
                    key: "isPossible",
                    value: function() {
                        return (0, s.default)(this, {
                            v2: !0
                        }, this.metadata)
                    }
                }, {
                    key: "isValid",
                    value: function() {
                        return (0, i.default)(this, {
                            v2: !0
                        }, this.metadata)
                    }
                }, {
                    key: "getType",
                    value: function() {
                        return (0, r.default)(this, {
                            v2: !0
                        }, this.metadata)
                    }
                }, {
                    key: "format",
                    value: function(e, t) {
                        return (0, l.default)(this, e, t ? o({}, t, {
                            v2: !0
                        }) : {
                            v2: !0
                        }, this.metadata)
                    }
                }, {
                    key: "formatNational",
                    value: function(e) {
                        return this.format("NATIONAL", e)
                    }
                }, {
                    key: "formatInternational",
                    value: function(e) {
                        return this.format("INTERNATIONAL", e)
                    }
                }, {
                    key: "getURI",
                    value: function(e) {
                        return this.format("RFC3966", e)
                    }
                }]), e
            }();
            var u = function(e) {
                return /^[A-Z]{2}$/.test(e)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => i,
                is_possible_number: () => r
            });
            var a = n(194),
                s = n(206);

            function i(e, t, n) {
                if (void 0 === t && (t = {}), n = new a.default(n), t.v2) {
                    if (!e.countryCallingCode) throw new Error("Invalid phone number object passed");
                    n.chooseCountryByCountryCallingCode(e.countryCallingCode)
                } else {
                    if (!e.phone) return !1;
                    if (e.country) {
                        if (!n.hasCountry(e.country)) throw new Error("Unknown country: " + e.country);
                        n.country(e.country)
                    } else {
                        if (!e.countryCallingCode) throw new Error("Invalid phone number object passed");
                        n.chooseCountryByCountryCallingCode(e.countryCallingCode)
                    }
                }
                if (!n.possibleLengths()) throw new Error("Metadata too old");
                return r(e.phone || e.nationalNumber, void 0, n)
            }

            function r(e, t, n) {
                return "IS_POSSIBLE" === (0, s.checkNumberLengthForType)(e, void 0, n)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                checkNumberLengthForType: () => o,
                default: () => r,
                is_of_type: () => l
            });
            var a = n(194),
                s = n(207),
                i = ["MOBILE", "PREMIUM_RATE", "TOLL_FREE", "SHARED_COST", "VOIP", "PERSONAL_NUMBER", "PAGER", "UAN", "VOICEMAIL"];

            function r(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    n = arguments[2];
                if (e.country) {
                    if (!(n = new a.default(n)).hasCountry(e.country)) throw new Error("Unknown country: " + e.country);
                    var r = t.v2 ? e.nationalNumber : e.phone;
                    if (n.country(e.country), (0, s.matchesEntirely)(r, n.nationalNumberPattern())) {
                        if (l(r, "FIXED_LINE", n)) return n.type("MOBILE") && "" === n.type("MOBILE").pattern() ? "FIXED_LINE_OR_MOBILE" : n.type("MOBILE") ? l(r, "MOBILE", n) ? "FIXED_LINE_OR_MOBILE" : "FIXED_LINE" : "FIXED_LINE_OR_MOBILE";
                        var o = i,
                            c = Array.isArray(o),
                            d = 0;
                        for (o = c ? o : o[Symbol.iterator]();;) {
                            var u;
                            if (c) {
                                if (d >= o.length) break;
                                u = o[d++]
                            } else {
                                if ((d = o.next()).done) break;
                                u = d.value
                            }
                            var m = u;
                            if (l(r, m, n)) return m
                        }
                    }
                }
            }

            function l(e, t, n) {
                return !(!(t = n.type(t)) || !t.pattern()) && (!(t.possibleLengths() && t.possibleLengths().indexOf(e.length) < 0) && (0, s.matchesEntirely)(e, t.pattern()))
            }

            function o(e, t, n) {
                var a = n.type(t),
                    i = a && a.possibleLengths() || n.possibleLengths();
                if ("FIXED_LINE_OR_MOBILE" === t) {
                    if (!n.type("FIXED_LINE")) return o(e, "MOBILE", n);
                    var r = n.type("MOBILE");
                    r && (i = (0, s.mergeArrays)(i, r.possibleLengths()))
                } else if (t && !a) return "INVALID_LENGTH";
                var l = e.length,
                    c = i[0];
                return c === l ? "IS_POSSIBLE" : c > l ? "TOO_SHORT" : i[i.length - 1] < l ? "TOO_LONG" : i.indexOf(l, 1) >= 0 ? "IS_POSSIBLE" : "INVALID_LENGTH"
            }
        }, (e, t, n) => {
            "use strict";

            function a() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                return new RegExp("^(?:" + arguments[1] + ")$").test(e)
            }

            function s(e, t) {
                var n = e.slice(),
                    a = t,
                    s = Array.isArray(a),
                    i = 0;
                for (a = s ? a : a[Symbol.iterator]();;) {
                    var r;
                    if (s) {
                        if (i >= a.length) break;
                        r = a[i++]
                    } else {
                        if ((i = a.next()).done) break;
                        r = i.value
                    }
                    var l = r;
                    e.indexOf(l) < 0 && n.push(l)
                }
                return n.sort((function(e, t) {
                    return e - t
                }))
            }
            n.r(t), n.d(t, {
                matchesEntirely: () => a,
                mergeArrays: () => s
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => r
            });
            var a = n(194),
                s = n(207),
                i = n(206);

            function r(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    n = arguments[2];
                if (n = new a.default(n), !e.country) return !1;
                if (!n.hasCountry(e.country)) throw new Error("Unknown country: " + e.country);
                if (n.country(e.country), n.hasTypes()) return void 0 !== (0, i.default)(e, t, n.metadata);
                var r = t.v2 ? e.nationalNumber : e.phone;
                return (0, s.matchesEntirely)(r, n.nationalNumberPattern())
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                FIRST_GROUP_PATTERN: () => u,
                changeInternationalFormatStyle: () => g,
                choose_format_for_number: () => h,
                default: () => d,
                formatIDDSameCountryCallingCodeNumber: () => _,
                format_national_number_using_format: () => m
            });
            var a = n(203),
                s = n(207),
                i = n(194),
                r = n(213),
                l = n(210),
                o = Object.assign || function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a])
                    }
                    return e
                },
                c = {
                    formatExtension: function(e, t, n) {
                        return "" + e + n.ext() + t
                    }
                };

            function d(e, t, n, a) {
                if (n = n ? o({}, c, n) : c, a = new i.default(a), e.country) {
                    if (!a.hasCountry(e.country)) throw new Error("Unknown country: " + e.country);
                    a.country(e.country)
                } else {
                    if (!e.countryCallingCode) return e.phone || "";
                    a.chooseCountryByCountryCallingCode(e.countryCallingCode)
                }
                var s = a.countryCallingCode(),
                    d = n.v2 ? e.nationalNumber : e.phone;
                switch (t) {
                    case "NATIONAL":
                        return d ? f(p(d, "NATIONAL", a), e.ext, a, n.formatExtension) : "";
                    case "INTERNATIONAL":
                        return d ? f("+" + s + " " + p(d, "INTERNATIONAL", a), e.ext, a, n.formatExtension) : "+" + s;
                    case "E.164":
                        return "+" + s + d;
                    case "RFC3966":
                        return (0, l.formatRFC3966)({
                            number: "+" + s + d,
                            ext: e.ext
                        });
                    case "IDD":
                        if (!n.fromCountry) return;
                        var u = (0, r.getIDDPrefix)(n.fromCountry, a.metadata);
                        if (!u) return;
                        if (n.humanReadable) {
                            var m = s && _(d, a.countryCallingCode(), n.fromCountry, a);
                            return f(m || u + " " + s + " " + p(d, "INTERNATIONAL", a), e.ext, a, n.formatExtension)
                        }
                        return "" + u + s + d;
                    default:
                        throw new Error('Unknown "format" argument passed to "formatNumber()": "' + t + '"')
                }
            }
            var u = /(\$\d)/;

            function m(e, t, n, a, s) {
                var i = e.replace(new RegExp(t.pattern()), n ? t.internationalFormat() : !t.nationalPrefixFormattingRule() || t.nationalPrefixIsOptionalWhenFormatting() && !a ? t.format() : t.format().replace(u, t.nationalPrefixFormattingRule()));
                return n ? g(i) : i
            }

            function p(e, t, n) {
                var a = h(n.formats(), e);
                return a ? m(e, a, "INTERNATIONAL" === t, !0) : e
            }

            function h(e, t) {
                var n = e,
                    a = Array.isArray(n),
                    i = 0;
                for (n = a ? n : n[Symbol.iterator]();;) {
                    var r;
                    if (a) {
                        if (i >= n.length) break;
                        r = n[i++]
                    } else {
                        if ((i = n.next()).done) break;
                        r = i.value
                    }
                    var l = r;
                    if (l.leadingDigitsPatterns().length > 0) {
                        var o = l.leadingDigitsPatterns()[l.leadingDigitsPatterns().length - 1];
                        if (0 !== t.search(o)) continue
                    }
                    if ((0, s.matchesEntirely)(t, l.pattern())) return l
                }
            }

            function g(e) {
                return e.replace(new RegExp("[" + a.VALID_PUNCTUATION + "]+", "g"), " ").trim()
            }

            function f(e, t, n, a) {
                return t ? a(e, t, n) : e
            }

            function _(e, t, n, a) {
                var s = new i.default(a.metadata);
                if (s.country(n), t === s.countryCallingCode()) return "1" === t ? t + " " + p(e, "NATIONAL", a) : p(e, "NATIONAL", a)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                formatRFC3966: () => r,
                parseRFC3966: () => i
            });
            var a = n(211),
                s = function(e, t) {
                    if (Array.isArray(e)) return e;
                    if (Symbol.iterator in Object(e)) return function(e, t) {
                        var n = [],
                            a = !0,
                            s = !1,
                            i = void 0;
                        try {
                            for (var r, l = e[Symbol.iterator](); !(a = (r = l.next()).done) && (n.push(r.value), !t || n.length !== t); a = !0);
                        } catch (e) {
                            s = !0, i = e
                        } finally {
                            try {
                                !a && l.return && l.return()
                            } finally {
                                if (s) throw i
                            }
                        }
                        return n
                    }(e, t);
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                };

            function i(e) {
                var t = void 0,
                    n = void 0,
                    i = (e = e.replace(/^tel:/, "tel=")).split(";"),
                    r = Array.isArray(i),
                    l = 0;
                for (i = r ? i : i[Symbol.iterator]();;) {
                    var o;
                    if (r) {
                        if (l >= i.length) break;
                        o = i[l++]
                    } else {
                        if ((l = i.next()).done) break;
                        o = l.value
                    }
                    var c = o.split("="),
                        d = s(c, 2),
                        u = d[0],
                        m = d[1];
                    switch (u) {
                        case "tel":
                            t = m;
                            break;
                        case "ext":
                            n = m;
                            break;
                        case "phone-context":
                            "+" === m[0] && (t = m + t)
                    }
                }
                if (!(0, a.default)(t)) return {};
                var p = {
                    number: t
                };
                return n && (p.ext = n), p
            }

            function r(e) {
                var t = e.number,
                    n = e.ext;
                if (!t) return "";
                if ("+" !== t[0]) throw new Error('"formatRFC3966()" expects "number" to be in E.164 format.');
                return "tel:" + t + (n ? ";ext=" + n : "")
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => o
            });
            var a = n(203),
                s = n(212),
                i = "[" + a.VALID_DIGITS + "]{" + a.MIN_LENGTH_FOR_NSN + "}",
                r = "[" + a.PLUS_CHARS + "]{0,1}(?:[" + a.VALID_PUNCTUATION + "]*[" + a.VALID_DIGITS + "]){3,}[" + a.VALID_PUNCTUATION + a.VALID_DIGITS + "]*",
                l = new RegExp("^" + i + "$|^" + r + "(?:" + s.EXTN_PATTERNS_FOR_PARSING + ")?$", "i");

            function o(e) {
                return e.length >= a.MIN_LENGTH_FOR_NSN && l.test(e)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                EXTN_PATTERNS_FOR_MATCHING: () => l,
                EXTN_PATTERNS_FOR_PARSING: () => r,
                extractExtension: () => c
            });
            var a = n(203),
                s = "([" + a.VALID_DIGITS + "]{1,7})";

            function i(e) {
                var t = "xｘ#＃~～";
                if ("parsing" === e) t = ",;" + t;
                return ";ext=" + s + "|[  \\t,]*(?:e?xt(?:ensi(?:ó?|ó))?n?|ｅ?ｘｔｎ?|доб|[" + t + "]|int|anexo|ｉｎｔ)[:\\.．]?[  \\t,-]*" + s + "#?|[- ]+([" + a.VALID_DIGITS + "]{1,5})#"
            }
            var r = i("parsing"),
                l = i("matching"),
                o = new RegExp("(?:" + r + ")$", "i");

            function c(e) {
                var t = e.search(o);
                if (t < 0) return {};
                for (var n = e.slice(0, t), a = e.match(o), s = 1; s < a.length;) {
                    if (null != a[s] && a[s].length > 0) return {
                        number: n,
                        ext: a[s]
                    };
                    s++
                }
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                getIDDPrefix: () => l,
                stripIDDPrefix: () => o
            });
            var a = n(194),
                s = n(203),
                i = new RegExp("([" + s.VALID_DIGITS + "])"),
                r = /^[\d]+(?:[~\u2053\u223C\uFF5E][\d]+)?$/;

            function l(e, t) {
                var n = new a.default(t);
                return n.country(e), r.test(n.IDDPrefix()) ? n.IDDPrefix() : n.defaultIDDPrefix()
            }

            function o(e, t, n) {
                if (t) {
                    var s = new a.default(n);
                    s.country(t);
                    var r = new RegExp(s.IDDPrefix());
                    if (0 === e.search(r)) {
                        var l = (e = e.slice(e.match(r)[0].length)).match(i);
                        if (!(l && null != l[1] && l[1].length > 0 && "0" === l[1])) return e
                    }
                }
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => i
            });
            var a = n(200),
                s = n(215);

            function i() {
                var e = (0, a.normalizeArguments)(arguments),
                    t = e.text,
                    n = e.options,
                    i = e.metadata;
                return (0, s.default)(t, n, i)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => l
            });
            var a = n(201),
                s = n(198),
                i = n(194),
                r = Object.assign || function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a])
                    }
                    return e
                };

            function l(e, t, n) {
                t && t.defaultCountry && !(0, i.isSupportedCountry)(t.defaultCountry, n) && (t = r({}, t, {
                    defaultCountry: void 0
                }));
                try {
                    return (0, a.default)(e, t, n)
                } catch (e) {
                    if (!(e instanceof s.default)) throw e
                }
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => i
            });
            var a = n(202),
                s = n(200);

            function i() {
                var e = (0, s.normalizeArguments)(arguments),
                    t = e.text,
                    n = e.options,
                    i = e.metadata;
                return (0, a.default)(t, n, i)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => l
            });
            var a = n(209),
                s = n(202),
                i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                } : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                },
                r = function(e, t) {
                    if (Array.isArray(e)) return e;
                    if (Symbol.iterator in Object(e)) return function(e, t) {
                        var n = [],
                            a = !0,
                            s = !1,
                            i = void 0;
                        try {
                            for (var r, l = e[Symbol.iterator](); !(a = (r = l.next()).done) && (n.push(r.value), !t || n.length !== t); a = !0);
                        } catch (e) {
                            s = !0, i = e
                        } finally {
                            try {
                                !a && l.return && l.return()
                            } finally {
                                if (s) throw i
                            }
                        }
                        return n
                    }(e, t);
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                };

            function l() {
                var e = function(e) {
                        var t = Array.prototype.slice.call(e),
                            n = r(t, 5),
                            a = n[0],
                            i = n[1],
                            l = n[2],
                            c = n[3],
                            d = n[4],
                            u = void 0,
                            m = void 0,
                            p = void 0,
                            h = void 0;
                        if ("string" == typeof a)
                            if ("string" == typeof l) m = l, d ? (p = c, h = d) : h = c, u = (0, s.default)(a, {
                                defaultCountry: i,
                                extended: !0
                            }, h);
                            else {
                                if ("string" != typeof i) throw new Error("`format` argument not passed to `formatNumber(number, format)`");
                                m = i, c ? (p = l, h = c) : h = l, u = (0, s.default)(a, {
                                    extended: !0
                                }, h)
                            }
                        else {
                            if (!o(a)) throw new TypeError("A phone number must either be a string or an object of shape { phone, [country] }.");
                            u = a, m = i, c ? (p = l, h = c) : h = l
                        }
                        "International" === m ? m = "INTERNATIONAL" : "National" === m && (m = "NATIONAL");
                        return {
                            input: u,
                            format: m,
                            options: p,
                            metadata: h
                        }
                    }(arguments),
                    t = e.input,
                    n = e.format,
                    i = e.options,
                    l = e.metadata;
                return (0, a.default)(t, n, i, l)
            }
            var o = function(e) {
                return "object" === (void 0 === e ? "undefined" : i(e))
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => o,
                normalizeArguments: () => c
            });
            var a = n(211),
                s = n(206),
                i = n(202),
                r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                } : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                },
                l = function(e, t) {
                    if (Array.isArray(e)) return e;
                    if (Symbol.iterator in Object(e)) return function(e, t) {
                        var n = [],
                            a = !0,
                            s = !1,
                            i = void 0;
                        try {
                            for (var r, l = e[Symbol.iterator](); !(a = (r = l.next()).done) && (n.push(r.value), !t || n.length !== t); a = !0);
                        } catch (e) {
                            s = !0, i = e
                        } finally {
                            try {
                                !a && l.return && l.return()
                            } finally {
                                if (s) throw i
                            }
                        }
                        return n
                    }(e, t);
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                };

            function o() {
                var e = c(arguments),
                    t = e.input,
                    n = e.options,
                    a = e.metadata;
                return (0, s.default)(t, n, a)
            }

            function c(e) {
                var t = Array.prototype.slice.call(e),
                    n = l(t, 4),
                    s = n[0],
                    o = n[1],
                    c = n[2],
                    u = n[3],
                    m = void 0,
                    p = {},
                    h = void 0;
                if ("string" == typeof s) "object" !== (void 0 === o ? "undefined" : r(o)) ? (u ? (p = c, h = u) : h = c, m = (0, a.default)(s) ? (0, i.default)(s, {
                    defaultCountry: o
                }, h) : {}) : (c ? (p = o, h = c) : h = o, m = (0, a.default)(s) ? (0, i.default)(s, void 0, h) : {});
                else {
                    if (!d(s)) throw new TypeError("A phone number must either be a string or an object of shape { phone, [country] }.");
                    m = s, c ? (p = o, h = c) : h = o
                }
                return {
                    input: m,
                    options: p,
                    metadata: h
                }
            }
            var d = function(e) {
                return "object" === (void 0 === e ? "undefined" : r(e))
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => s
            });
            var a = n(204);

            function s(e, t, n) {
                if (t[e]) return new a.default(e, t[e], n)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => i
            });
            var a = n(218),
                s = n(205);

            function i() {
                var e = (0, a.normalizeArguments)(arguments),
                    t = e.input,
                    n = e.options,
                    i = e.metadata;
                return (0, s.default)(t, n, i)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => i
            });
            var a = n(208),
                s = n(218);

            function i() {
                var e = (0, s.normalizeArguments)(arguments),
                    t = e.input,
                    n = e.options,
                    i = e.metadata;
                return (0, a.default)(t, n, i)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => r
            });
            var a = n(211),
                s = n(202),
                i = n(223);

            function r(e, t, n) {
                if ("string" != typeof e) throw new TypeError("number must be a string");
                if ("string" != typeof t) throw new TypeError("country must be a string");
                var r = void 0;
                return r = (0, a.default)(e) ? (0, s.default)(e, {
                    defaultCountry: t
                }, n) : {}, (0, i.default)(r, t, void 0, n)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => s
            });
            var a = n(208);

            function s(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                    s = arguments[3];
                return e.country === t && (0, a.default)(e, n, s)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => i,
                searchPhoneNumbers: () => r
            });
            var a = n(225),
                s = n(200);

            function i() {
                var e = (0, s.normalizeArguments)(arguments),
                    t = e.text,
                    n = e.options,
                    i = e.metadata;
                return (0, a.default)(t, n, i)
            }

            function r() {
                var e = (0, s.normalizeArguments)(arguments),
                    t = e.text,
                    n = e.options,
                    i = e.metadata;
                return (0, a.searchPhoneNumbers)(t, n, i)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                PhoneNumberSearch: () => g,
                default: () => p,
                searchPhoneNumbers: () => h
            });
            var a = n(203),
                s = n(212),
                i = n(202),
                r = n(226),
                l = n(228),
                o = n(229),
                c = function() {
                    function e(e, t) {
                        for (var n = 0; n < t.length; n++) {
                            var a = t[n];
                            a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                        }
                    }
                    return function(t, n, a) {
                        return n && e(t.prototype, n), a && e(t, a), t
                    }
                }();
            var d = "[" + a.PLUS_CHARS + "]{0,1}(?:[" + a.VALID_PUNCTUATION + "]*[" + a.VALID_DIGITS + "]){3,}[" + a.VALID_PUNCTUATION + a.VALID_DIGITS + "]*",
                u = new RegExp("^[" + a.WHITESPACE + "]+"),
                m = new RegExp("[" + a.VALID_PUNCTUATION + "]+$");

            function p(e, t, n) {
                void 0 === t && (t = {});
                for (var a = new g(e, t, n), s = []; a.hasNext();) s.push(a.next());
                return s
            }

            function h(e, t, n) {
                void 0 === t && (t = {});
                var a, s, i, r = new g(e, t, n);
                return a = {}, s = Symbol.iterator, i = function() {
                    return {
                        next: function() {
                            return r.hasNext() ? {
                                done: !1,
                                value: r.next()
                            } : {
                                done: !0
                            }
                        }
                    }
                }, s in a ? Object.defineProperty(a, s, {
                    value: i,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : a[s] = i, a
            }
            var g = function() {
                function e(t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        a = arguments[2];
                    ! function(e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.state = "NOT_READY", this.text = t, this.options = n, this.metadata = a, this.regexp = new RegExp(d + "(?:" + s.EXTN_PATTERNS_FOR_PARSING + ")?", "ig")
                }
                return c(e, [{
                    key: "find",
                    value: function() {
                        var e = this.regexp.exec(this.text);
                        if (e) {
                            var t = e[0],
                                n = e.index;
                            t = t.replace(u, ""), n += e[0].length - t.length, t = t.replace(m, ""), t = (0, r.default)(t);
                            var a = this.parseCandidate(t, n);
                            return a || this.find()
                        }
                    }
                }, {
                    key: "parseCandidate",
                    value: function(e, t) {
                        if ((0, l.default)(e, t, this.text) && (0, o.default)(e, t, this.text, this.options.extended ? "POSSIBLE" : "VALID")) {
                            var n = (0, i.default)(e, this.options, this.metadata);
                            if (n.phone) return n.startsAt = t, n.endsAt = t + e.length, n
                        }
                    }
                }, {
                    key: "hasNext",
                    value: function() {
                        return "NOT_READY" === this.state && (this.last_match = this.find(), this.last_match ? this.state = "READY" : this.state = "DONE"), "READY" === this.state
                    }
                }, {
                    key: "next",
                    value: function() {
                        if (!this.hasNext()) throw new Error("No next element");
                        var e = this.last_match;
                        return this.last_match = null, this.state = "NOT_READY", e
                    }
                }]), e
            }()
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => i
            });
            var a = n(227),
                s = /[\\/] *x/;

            function i(e) {
                return (0, a.trimAfterFirstMatch)(s, e)
            }
        }, (e, t, n) => {
            "use strict";

            function a(e, t) {
                if (e < 0 || t <= 0 || t < e) throw new TypeError;
                return "{" + e + "," + t + "}"
            }

            function s(e, t) {
                var n = t.search(e);
                return n >= 0 ? t.slice(0, n) : t
            }

            function i(e, t) {
                return 0 === e.indexOf(t)
            }

            function r(e, t) {
                return e.indexOf(t, e.length - t.length) === e.length - t.length
            }
            n.r(t), n.d(t, {
                endsWith: () => r,
                limit: () => a,
                startsWith: () => i,
                trimAfterFirstMatch: () => s
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => r
            });
            var a = /(?:(?:[0-3]?\d\/[01]?\d)|(?:[01]?\d\/[0-3]?\d))\/(?:[12]\d)?\d{2}/,
                s = /[12]\d{3}[-/]?[01]\d[-/]?[0-3]\d +[0-2]\d$/,
                i = /^:[0-5]\d/;

            function r(e, t, n) {
                if (a.test(e)) return !1;
                if (s.test(e)) {
                    var r = n.slice(t + e.length);
                    if (i.test(r)) return !1
                }
                return !0
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                LEAD_CLASS: () => c,
                default: () => h
            });
            var a = n(203),
                s = n(227),
                i = n(230),
                r = "(\\[（［",
                l = ")\\]）］",
                o = "[^" + r + l + "]",
                c = "[" + r + a.PLUS_CHARS + "]",
                d = new RegExp("^" + c),
                u = (0, s.limit)(0, 3),
                m = new RegExp("^(?:[(\\[（［])?(?:" + o + "+[" + l + "])?" + o + "+(?:[" + r + "]" + o + "+[" + l + "])" + u + o + "*$"),
                p = /\d{1,5}-+\d{1,5}\s{0,4}\(\d{1,4}/;

            function h(e, t, n, a) {
                if (m.test(e) && !p.test(e)) {
                    if ("POSSIBLE" !== a) {
                        if (t > 0 && !d.test(e)) {
                            var s = n[t - 1];
                            if ((0, i.isInvalidPunctuationSymbol)(s) || (0, i.isLatinLetter)(s)) return !1
                        }
                        var r = t + e.length;
                        if (r < n.length) {
                            var l = n[r];
                            if ((0, i.isInvalidPunctuationSymbol)(l) || (0, i.isLatinLetter)(l)) return !1
                        }
                    }
                    return !0
                }
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                PZ: () => i,
                _pL: () => o,
                _pN: () => r,
                isInvalidPunctuationSymbol: () => h,
                isLatinLetter: () => p,
                pNd: () => l,
                pZ: () => s
            });
            var a = "   ᠎ - \u2028\u2029  　",
                s = "[" + a + "]",
                i = "[^" + a + "]",
                r = "0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９",
                l = "[0-9٠-٩۰-۹߀-߉०-९০-৯੦-੯૦-૯୦-୯௦-௯౦-౯೦-೯൦-൯๐-๙໐-໙༠-༩၀-၉႐-႙០-៩᠐-᠙᥆-᥏᧐-᧙᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙꘠-꘩꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]",
                o = "A-Za-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎↃↄⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々〆〱-〵〻〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛥꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",
                c = new RegExp("[" + o + "]"),
                d = new RegExp("[$¢-¥֏؋৲৳৻૱௹฿៛₠-₹꠸﷼﹩＄￠￡￥￦]"),
                u = new RegExp("[̀-ͯ҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-ٰٟۖ-ۜ۟-۪ۤۧۨ-ܑۭܰ-݊ަ-ް߫-߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࣤ-ࣾऀ-ंऺ़ु-ै्॑-ॗॢॣঁ়ু-ৄ্ৢৣਁਂ਼ੁੂੇੈੋ-੍ੑੰੱੵઁં઼ુ-ૅેૈ્ૢૣଁ଼ିୁ-ୄ୍ୖୢୣஂீ்ా-ీె-ైొ-్ౕౖౢౣ಼ಿೆೌ್ೢೣു-ൄ്ൢൣ්ි-ුූัิ-ฺ็-๎ັິ-ູົຼ່-ໍཱ༹༘༙༵༷-ཾྀ-྄྆྇ྍ-ྗྙ-ྼ࿆ိ-ူဲ-့္်ွှၘၙၞ-ၠၱ-ၴႂႅႆႍႝ፝-፟ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴឵ិ-ួំ៉-៓៝᠋-᠍ᢩᤠ-ᤢᤧᤨᤲ᤹-᤻ᨘᨗᩖᩘ-ᩞ᩠ᩢᩥ-ᩬᩳ-᩿᩼ᬀ-ᬃ᬴ᬶ-ᬺᬼᭂ᭫-᭳ᮀᮁᮢ-ᮥᮨᮩ᯦᮫ᯨᯩᯭᯯ-ᯱᰬ-ᰳᰶ᰷᳐-᳔᳒-᳢᳠-᳨᳭᳴᷀-ᷦ᷼-᷿⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〭꙯ꙴ-꙽ꚟ꛰꛱ꠂ꠆ꠋꠥꠦ꣄꣠-꣱ꤦ-꤭ꥇ-ꥑꦀ-ꦂ꦳ꦶ-ꦹꦼꨩ-ꨮꨱꨲꨵꨶꩃꩌꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫬꫭ꫶ꯥꯨ꯭ﬞ︀-️︠-︦]"),
                m = new RegExp("[\0--ÿĀ-ſḀ-ỿƀ-ɏ̀-ͯ]");

            function p(e) {
                return !(!c.test(e) && !u.test(e)) && m.test(e)
            }

            function h(e) {
                return "%" === e || d.test(e)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => i
            });
            var a = n(232),
                s = n(200);

            function i() {
                var e = (0, s.normalizeArguments)(arguments),
                    t = e.text,
                    n = e.options,
                    i = e.metadata;
                return (0, a.default)(t, n, i)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => s
            });
            var a = n(233);

            function s(e, t, n) {
                for (var s = new a.default(e, t, n), i = []; s.hasNext();) i.push(s.next());
                return i
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => T
            });
            var a = n(204),
                s = n(203),
                i = n(212),
                r = n(227),
                l = n(230),
                o = n(234),
                c = n(226),
                d = n(228),
                u = n(229),
                m = n(194),
                p = n(202),
                h = Object.assign || function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a])
                    }
                    return e
                },
                g = function() {
                    function e(e, t) {
                        for (var n = 0; n < t.length; n++) {
                            var a = t[n];
                            a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                        }
                    }
                    return function(t, n, a) {
                        return n && e(t.prototype, n), a && e(t, a), t
                    }
                }();
            var f = ["\\/+(.*)/", "(\\([^(]*)", "(?:" + l.pZ + "-|-" + l.pZ + ")" + l.pZ + "*(.+)", "[‒-―－]" + l.pZ + "*(.+)", "\\.+" + l.pZ + "*([^.]+)", l.pZ + "+(" + l.PZ + "+)"],
                _ = (0, r.limit)(0, 2),
                A = (0, r.limit)(0, 4),
                b = s.MAX_LENGTH_FOR_NSN + s.MAX_LENGTH_COUNTRY_CODE,
                v = (0, r.limit)(0, b),
                E = "[" + s.VALID_PUNCTUATION + "]" + A,
                y = l.pNd + (0, r.limit)(1, b),
                C = "(?:" + u.LEAD_CLASS + E + ")" + _ + y + "(?:" + E + y + ")" + v + "(?:" + i.EXTN_PATTERNS_FOR_MATCHING + ")?",
                k = new RegExp("[^" + l._pN + l._pL + "#]+$"),
                x = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;
            const T = function() {
                function e() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
                        n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        a = arguments[2];
                    if (function(e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, e), this.state = "NOT_READY", this.searchIndex = 0, !(n = h({}, n, {
                            defaultCountry: n.defaultCountry && (0, m.isSupportedCountry)(n.defaultCountry, a) ? n.defaultCountry : void 0,
                            leniency: n.leniency || n.extended ? "POSSIBLE" : "VALID",
                            maxTries: n.maxTries || x
                        })).leniency) throw new TypeError("`Leniency` not supplied");
                    if (n.maxTries < 0) throw new TypeError("`maxTries` not supplied");
                    if (this.text = t, this.options = n, this.metadata = a, this.leniency = o.default[n.leniency], !this.leniency) throw new TypeError("Unknown leniency: " + n.leniency + ".");
                    this.maxTries = n.maxTries, this.PATTERN = new RegExp(C, "ig")
                }
                return g(e, [{
                    key: "find",
                    value: function() {
                        for (var e = void 0; this.maxTries > 0 && null !== (e = this.PATTERN.exec(this.text));) {
                            var t = e[0],
                                n = e.index;
                            if (t = (0, c.default)(t), (0, d.default)(t, n, this.text)) {
                                var s = this.parseAndVerify(t, n, this.text) || this.extractInnerMatch(t, n, this.text);
                                if (s) {
                                    if (this.options.v2) {
                                        var i = new a.default(s.country, s.phone, this.metadata);
                                        return s.ext && (i.ext = s.ext), {
                                            startsAt: s.startsAt,
                                            endsAt: s.endsAt,
                                            number: i
                                        }
                                    }
                                    return s
                                }
                            }
                            this.maxTries--
                        }
                    }
                }, {
                    key: "extractInnerMatch",
                    value: function(e, t, n) {
                        var a = f,
                            s = Array.isArray(a),
                            i = 0;
                        for (a = s ? a : a[Symbol.iterator]();;) {
                            var l;
                            if (s) {
                                if (i >= a.length) break;
                                l = a[i++]
                            } else {
                                if ((i = a.next()).done) break;
                                l = i.value
                            }
                            for (var o = !0, c = void 0, d = new RegExp(l, "g"); null !== (c = d.exec(e)) && this.maxTries > 0;) {
                                if (o) {
                                    var u = (0, r.trimAfterFirstMatch)(k, e.slice(0, c.index)),
                                        m = this.parseAndVerify(u, t, n);
                                    if (m) return m;
                                    this.maxTries--, o = !1
                                }
                                var p = (0, r.trimAfterFirstMatch)(k, c[1]),
                                    h = this.parseAndVerify(p, t + c.index, n);
                                if (h) return h;
                                this.maxTries--
                            }
                        }
                    }
                }, {
                    key: "parseAndVerify",
                    value: function(e, t, n) {
                        if ((0, u.default)(e, t, n, this.options.leniency)) {
                            var a = (0, p.default)(e, {
                                extended: !0,
                                defaultCountry: this.options.defaultCountry
                            }, this.metadata);
                            if (a.possible && this.leniency(a, e, this.metadata)) {
                                var s = {
                                    startsAt: t,
                                    endsAt: t + e.length,
                                    country: a.country,
                                    phone: a.phone
                                };
                                return a.ext && (s.ext = a.ext), s
                            }
                        }
                    }
                }, {
                    key: "hasNext",
                    value: function() {
                        return "NOT_READY" === this.state && (this.lastMatch = this.find(), this.lastMatch ? this.state = "READY" : this.state = "DONE"), "READY" === this.state
                    }
                }, {
                    key: "next",
                    value: function() {
                        if (!this.hasNext()) throw new Error("No next element");
                        var e = this.lastMatch;
                        return this.lastMatch = null, this.state = "NOT_READY", e
                    }
                }]), e
            }()
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                containsMoreThanOneSlashInNationalNumber: () => c,
                default: () => r
            });
            var a = n(208),
                s = n(197),
                i = n(227);
            const r = {
                POSSIBLE: function(e, t, n) {
                    return !0
                },
                VALID: function(e, t, n) {
                    return !(!(0, a.default)(e, void 0, n) || !l(e, t.toString(), n))
                },
                STRICT_GROUPING: function(e, t, n) {
                    var s = t.toString();
                    return !(!(0, a.default)(e, void 0, n) || !l(e, s, n) || c(e, s) || !o(e, n)) && d(e, t, n, p)
                },
                EXACT_GROUPING: function(e, t, n) {
                    var s = t.toString();
                    return !(!(0, a.default)(e, void 0, n) || !l(e, s, n) || c(e, s) || !o(e, n)) && d(e, t, n, m)
                }
            };

            function l(e, t, n) {
                for (var a = 0; a < t.length - 1; a++) {
                    var i = t.charAt(a);
                    if ("x" === i || "X" === i) {
                        var r = t.charAt(a + 1);
                        if ("x" === r || "X" === r) {
                            if (a++, util.isNumberMatch(e, t.substring(a)) != MatchType.NSN_MATCH) return !1
                        } else if ((0, s.default)(t.substring(a)) !== e.ext) return !1
                    }
                }
                return !0
            }

            function o(e, t) {
                if ("FROM_DEFAULT_COUNTRY" != e.getCountryCodeSource()) return !0;
                var n = util.getRegionCodeForCountryCode(e.getCountryCode()),
                    a = util.getMetadataForRegion(n);
                if (null == a) return !0;
                var s = util.getNationalSignificantNumber(e),
                    i = util.chooseFormattingPatternForNumber(a.numberFormats(), s);
                if (i && i.getNationalPrefixFormattingRule().length > 0) {
                    if (i.getNationalPrefixOptionalWhenFormatting()) return !0;
                    if (PhoneNumberUtil.formattingRuleHasFirstGroupOnly(i.getNationalPrefixFormattingRule())) return !0;
                    var r = PhoneNumberUtil.normalizeDigitsOnly(e.getRawInput());
                    return util.maybeStripNationalPrefixAndCarrierCode(r, a, null)
                }
                return !0
            }

            function c(e, t) {
                var n = t.indexOf("/");
                if (n < 0) return !1;
                var a = t.indexOf("/", n + 1);
                return !(a < 0) && (!(e.getCountryCodeSource() === CountryCodeSource.FROM_NUMBER_WITH_PLUS_SIGN || e.getCountryCodeSource() === CountryCodeSource.FROM_NUMBER_WITHOUT_PLUS_SIGN) || PhoneNumberUtil.normalizeDigitsOnly(t.substring(0, n)) !== String(e.getCountryCode()) || t.slice(a + 1).indexOf("/") >= 0)
            }

            function d(e, t, n, a) {
                var s = normalizeDigits(t, !0),
                    i = u(n, e, null);
                if (a(n, e, s, i)) return !0;
                var r = MetadataManager.getAlternateFormatsForCountry(e.getCountryCode());
                if (r) {
                    var l = r.numberFormats(),
                        o = Array.isArray(l),
                        c = 0;
                    for (l = o ? l : l[Symbol.iterator]();;) {
                        var d;
                        if (o) {
                            if (c >= l.length) break;
                            d = l[c++]
                        } else {
                            if ((c = l.next()).done) break;
                            d = c.value
                        }
                        if (a(n, e, s, i = u(n, e, d))) return !0
                    }
                }
                return !1
            }

            function u(e, t, n) {
                if (n) {
                    var a = util.getNationalSignificantNumber(t);
                    return util.formatNsnUsingPattern(a, n, "RFC3966", e).split("-")
                }
                var s = formatNumber(t, "RFC3966", e),
                    i = s.indexOf(";");
                i < 0 && (i = s.length);
                var r = s.indexOf("-") + 1;
                return s.slice(r, i).split("-")
            }

            function m(e, t, n, a) {
                var s = n.split(NON_DIGITS_PATTERN),
                    r = t.hasExtension() ? s.length - 2 : s.length - 1;
                if (1 == s.length || s[r].contains(util.getNationalSignificantNumber(t))) return !0;
                for (var l = a.length - 1; l > 0 && r >= 0;) {
                    if (s[r] !== a[l]) return !1;
                    l--, r--
                }
                return r >= 0 && (0, i.endsWith)(s[r], a[0])
            }

            function p(e, t, n, a) {
                var s = 0;
                if (t.getCountryCodeSource() !== CountryCodeSource.FROM_DEFAULT_COUNTRY) {
                    var r = String(t.getCountryCode());
                    s = n.indexOf(r) + r.length()
                }
                for (var l = 0; l < a.length; l++) {
                    if ((s = n.indexOf(a[l], s)) < 0) return !1;
                    if (s += a[l].length(), 0 == l && s < n.length()) {
                        var o = util.getRegionCodeForCountryCode(t.getCountryCode());
                        if (null != util.getNddPrefixForRegion(o, !0) && Character.isDigit(n.charAt(s))) {
                            var c = util.getNationalSignificantNumber(t);
                            return (0, i.startsWith)(n.slice(s - a[l].length), c)
                        }
                    }
                }
                return n.slice(s).contains(t.getExtension())
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => i
            });
            var a = n(200),
                s = n(233);

            function i() {
                var e, t, n, i = (0, a.normalizeArguments)(arguments),
                    r = i.text,
                    l = i.options,
                    o = i.metadata,
                    c = new s.default(r, l, o);
                return e = {}, t = Symbol.iterator, n = function() {
                    return {
                        next: function() {
                            return c.hasNext() ? {
                                done: !1,
                                value: c.next()
                            } : {
                                done: !0
                            }
                        }
                    }
                }, t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                DIGIT_PLACEHOLDER: () => p,
                close_dangling_braces: () => C,
                count_occurences: () => k,
                cut_stripping_dangling_braces: () => y,
                default: () => v,
                repeat: () => x,
                strip_dangling_braces: () => E
            });
            var a = n(194),
                s = n(204),
                i = n(203),
                r = n(207),
                l = n(202),
                o = n(209),
                c = n(206),
                d = n(196),
                u = function() {
                    function e(e, t) {
                        for (var n = 0; n < t.length; n++) {
                            var a = t[n];
                            a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                        }
                    }
                    return function(t, n, a) {
                        return n && e(t.prototype, n), a && e(t, a), t
                    }
                }();
            var m = x("9", 15),
                p = "x",
                h = new RegExp(p),
                g = function() {
                    return /\[([^\[\]])*\]/g
                },
                f = function() {
                    return /\d(?=[^,}][^,}])/g
                },
                _ = new RegExp("^[" + i.VALID_PUNCTUATION + "]*(\\$\\d[" + i.VALID_PUNCTUATION + "]*)+$"),
                A = "[" + i.PLUS_CHARS + "]{0,1}[" + i.VALID_PUNCTUATION + i.VALID_DIGITS + "]*",
                b = new RegExp("^" + A + "$", "i");
            const v = function() {
                function e(t, n) {
                    ! function(e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.options = {}, this.metadata = new a.default(n), t && this.metadata.hasCountry(t) && (this.defaultCountry = t), this.reset()
                }
                return u(e, [{
                    key: "input",
                    value: function(e) {
                        var t = (0, l.extract_formatted_phone_number)(e) || "";
                        return t || e && e.indexOf("+") >= 0 && (t = "+"), b.test(t) ? this.processInput((0, d.default)(t)) : this.currentOutput
                    }
                }, {
                    key: "processInput",
                    value: function(e) {
                        if ("+" === e[0] && (this.parsedInput || (this.parsedInput += "+", this.resetCountriness()), e = e.slice(1)), this.parsedInput += e, this.nationalNumber += e, this.isInternational())
                            if (this.countryCallingCode) this.country || this.determineTheCountry();
                            else {
                                if (!this.nationalNumber) return this.parsedInput;
                                if (!this.extractCountryCallingCode()) return this.parsedInput;
                                this.initialize_phone_number_formats_for_this_country_calling_code(), this.resetFormat(), this.determineTheCountry()
                            }
                        else {
                            var t = this.nationalPrefix;
                            this.nationalNumber = this.nationalPrefix + this.nationalNumber, this.extractNationalPrefix(), this.nationalPrefix !== t && (this.matching_formats = void 0, this.resetFormat())
                        }
                        if (!this.nationalNumber) return this.format_as_non_formatted_number();
                        this.match_formats_by_leading_digits();
                        var n = this.formatNationalNumber(e);
                        return n ? this.formatFullNumber(n) : this.format_as_non_formatted_number()
                    }
                }, {
                    key: "format_as_non_formatted_number",
                    value: function() {
                        return this.isInternational() && this.countryCallingCode ? "+" + this.countryCallingCode + this.nationalNumber : this.parsedInput
                    }
                }, {
                    key: "formatNationalNumber",
                    value: function(e) {
                        var t = void 0;
                        this.chosenFormat && (t = this.formatNextNationalNumberDigits(e));
                        var n = this.attempt_to_format_complete_phone_number();
                        return n || (this.chooseAnotherFormat() ? this.reformatNationalNumber() : t)
                    }
                }, {
                    key: "reset",
                    value: function() {
                        return this.parsedInput = "", this.currentOutput = "", this.nationalPrefix = "", this.nationalNumber = "", this.carrierCode = "", this.resetCountriness(), this.resetFormat(), this
                    }
                }, {
                    key: "resetCountry",
                    value: function() {
                        this.isInternational() ? this.country = void 0 : this.country = this.defaultCountry
                    }
                }, {
                    key: "resetCountriness",
                    value: function() {
                        this.resetCountry(), this.defaultCountry && !this.isInternational() ? (this.metadata.country(this.defaultCountry), this.countryCallingCode = this.metadata.countryCallingCode(), this.initialize_phone_number_formats_for_this_country_calling_code()) : (this.metadata.country(void 0), this.countryCallingCode = void 0, this.available_formats = [], this.matching_formats = void 0)
                    }
                }, {
                    key: "resetFormat",
                    value: function() {
                        this.chosenFormat = void 0, this.template = void 0, this.partially_populated_template = void 0, this.last_match_position = -1
                    }
                }, {
                    key: "reformatNationalNumber",
                    value: function() {
                        return this.formatNextNationalNumberDigits(this.nationalNumber)
                    }
                }, {
                    key: "initialize_phone_number_formats_for_this_country_calling_code",
                    value: function() {
                        this.available_formats = this.metadata.formats().filter((function(e) {
                            return _.test(e.internationalFormat())
                        })), this.matching_formats = void 0
                    }
                }, {
                    key: "match_formats_by_leading_digits",
                    value: function() {
                        var e = this.nationalNumber,
                            t = e.length - 3;
                        t < 0 && (t = 0);
                        var n = this.had_enough_leading_digits && this.matching_formats || this.available_formats;
                        this.had_enough_leading_digits = this.shouldFormat(), this.matching_formats = n.filter((function(n) {
                            var a = n.leadingDigitsPatterns().length;
                            if (0 === a) return !0;
                            var s = Math.min(t, a - 1),
                                i = n.leadingDigitsPatterns()[s];
                            return new RegExp("^(" + i + ")").test(e)
                        })), this.chosenFormat && -1 === this.matching_formats.indexOf(this.chosenFormat) && this.resetFormat()
                    }
                }, {
                    key: "shouldFormat",
                    value: function() {
                        return this.nationalNumber.length >= 3
                    }
                }, {
                    key: "attempt_to_format_complete_phone_number",
                    value: function() {
                        var e = this.matching_formats,
                            t = Array.isArray(e),
                            n = 0;
                        for (e = t ? e : e[Symbol.iterator]();;) {
                            var a;
                            if (t) {
                                if (n >= e.length) break;
                                a = e[n++]
                            } else {
                                if ((n = e.next()).done) break;
                                a = n.value
                            }
                            var s = a;
                            if (new RegExp("^(?:" + s.pattern() + ")$").test(this.nationalNumber) && this.isFormatApplicable(s)) {
                                this.resetFormat(), this.chosenFormat = s;
                                var i = (0, o.format_national_number_using_format)(this.nationalNumber, s, this.isInternational(), "" !== this.nationalPrefix, this.metadata);
                                if (this.nationalPrefix && "1" === this.countryCallingCode && (i = "1 " + i), this.createFormattingTemplate(s)) this.reformatNationalNumber();
                                else {
                                    var r = this.formatFullNumber(i);
                                    this.template = r.replace(/[\d\+]/g, p), this.partially_populated_template = r
                                }
                                return i
                            }
                        }
                    }
                }, {
                    key: "formatFullNumber",
                    value: function(e) {
                        return this.isInternational() ? "+" + this.countryCallingCode + " " + e : e
                    }
                }, {
                    key: "extractCountryCallingCode",
                    value: function() {
                        var e = (0, l.extractCountryCallingCode)(this.parsedInput, this.defaultCountry, this.metadata.metadata),
                            t = e.countryCallingCode,
                            n = e.number;
                        if (t) return this.countryCallingCode = t, this.nationalNumber = n, this.metadata.chooseCountryByCountryCallingCode(t), void 0 !== this.metadata.selectedCountry()
                    }
                }, {
                    key: "extractNationalPrefix",
                    value: function() {
                        if (this.nationalPrefix = "", this.metadata.selectedCountry()) {
                            var e = (0, l.strip_national_prefix_and_carrier_code)(this.nationalNumber, this.metadata),
                                t = e.number,
                                n = e.carrierCode;
                            if (n && (this.carrierCode = n), this.metadata.possibleLengths() && (!this.isPossibleNumber(this.nationalNumber) || this.isPossibleNumber(t)) || !(0, r.matchesEntirely)(this.nationalNumber, this.metadata.nationalNumberPattern()) || (0, r.matchesEntirely)(t, this.metadata.nationalNumberPattern())) return this.nationalPrefix = this.nationalNumber.slice(0, this.nationalNumber.length - t.length), this.nationalNumber = t, this.nationalPrefix
                        }
                    }
                }, {
                    key: "isPossibleNumber",
                    value: function(e) {
                        return "IS_POSSIBLE" === (0, c.checkNumberLengthForType)(e, void 0, this.metadata)
                    }
                }, {
                    key: "chooseAnotherFormat",
                    value: function() {
                        var e = this.matching_formats,
                            t = Array.isArray(e),
                            n = 0;
                        for (e = t ? e : e[Symbol.iterator]();;) {
                            var a;
                            if (t) {
                                if (n >= e.length) break;
                                a = e[n++]
                            } else {
                                if ((n = e.next()).done) break;
                                a = n.value
                            }
                            var s = a;
                            if (this.chosenFormat === s) return;
                            if (this.isFormatApplicable(s) && this.createFormattingTemplate(s)) return this.chosenFormat = s, this.last_match_position = -1, !0
                        }
                        this.resetCountry(), this.resetFormat()
                    }
                }, {
                    key: "isFormatApplicable",
                    value: function(e) {
                        return !(!this.isInternational() && !this.nationalPrefix && e.nationalPrefixIsMandatoryWhenFormatting()) && !(this.nationalPrefix && !e.usesNationalPrefix() && !e.nationalPrefixIsOptionalWhenFormatting())
                    }
                }, {
                    key: "createFormattingTemplate",
                    value: function(e) {
                        if (!(e.pattern().indexOf("|") >= 0)) {
                            var t = this.getTemplateForNumberFormatPattern(e);
                            if (t) return this.partially_populated_template = t, this.isInternational() ? this.template = p + x(p, this.countryCallingCode.length) + " " + t : this.template = t.replace(/\d/g, p), this.template
                        }
                    }
                }, {
                    key: "getTemplateForNumberFormatPattern",
                    value: function(e) {
                        var t = e.pattern();
                        t = t.replace(g(), "\\d").replace(f(), "\\d");
                        var n = m.match(t)[0];
                        if (!(this.nationalNumber.length > n.length)) {
                            var a = this.getFormatFormat(e),
                                s = new RegExp("^" + t + "$"),
                                i = this.nationalNumber.replace(/\d/g, "9");
                            return s.test(i) && (n = i), n.replace(new RegExp(t), a).replace(new RegExp("9", "g"), p)
                        }
                    }
                }, {
                    key: "formatNextNationalNumberDigits",
                    value: function(e) {
                        var t = e.split(""),
                            n = Array.isArray(t),
                            a = 0;
                        for (t = n ? t : t[Symbol.iterator]();;) {
                            var s;
                            if (n) {
                                if (a >= t.length) break;
                                s = t[a++]
                            } else {
                                if ((a = t.next()).done) break;
                                s = a.value
                            }
                            var i = s;
                            if (-1 === this.partially_populated_template.slice(this.last_match_position + 1).search(h)) return this.chosenFormat = void 0, this.template = void 0, void(this.partially_populated_template = void 0);
                            this.last_match_position = this.partially_populated_template.search(h), this.partially_populated_template = this.partially_populated_template.replace(h, i)
                        }
                        return y(this.partially_populated_template, this.last_match_position + 1)
                    }
                }, {
                    key: "isInternational",
                    value: function() {
                        return this.parsedInput && "+" === this.parsedInput[0]
                    }
                }, {
                    key: "getFormatFormat",
                    value: function(e) {
                        if (this.isInternational()) return (0, o.changeInternationalFormatStyle)(e.internationalFormat());
                        if (e.nationalPrefixFormattingRule()) {
                            if (this.nationalPrefix || !e.usesNationalPrefix()) return e.format().replace(o.FIRST_GROUP_PATTERN, e.nationalPrefixFormattingRule())
                        } else if ("1" === this.countryCallingCode && "1" === this.nationalPrefix) return "1 " + e.format();
                        return e.format()
                    }
                }, {
                    key: "determineTheCountry",
                    value: function() {
                        this.country = (0, l.find_country_code)(this.countryCallingCode, this.nationalNumber, this.metadata)
                    }
                }, {
                    key: "getNumber",
                    value: function() {
                        if (this.countryCallingCode && this.nationalNumber) {
                            var e = new s.default(this.country || this.countryCallingCode, this.nationalNumber, this.metadata.metadata);
                            return this.carrierCode && (e.carrierCode = this.carrierCode), e
                        }
                    }
                }, {
                    key: "getNationalNumber",
                    value: function() {
                        return this.nationalNumber
                    }
                }, {
                    key: "getTemplate",
                    value: function() {
                        if (this.template) {
                            for (var e = -1, t = 0; t < this.parsedInput.length;) e = this.template.indexOf(p, e + 1), t++;
                            return y(this.template, e + 1)
                        }
                    }
                }]), e
            }();

            function E(e) {
                for (var t = [], n = 0; n < e.length;) "(" === e[n] ? t.push(n) : ")" === e[n] && t.pop(), n++;
                var a = 0,
                    s = "";
                t.push(e.length);
                var i = t,
                    r = Array.isArray(i),
                    l = 0;
                for (i = r ? i : i[Symbol.iterator]();;) {
                    var o;
                    if (r) {
                        if (l >= i.length) break;
                        o = i[l++]
                    } else {
                        if ((l = i.next()).done) break;
                        o = l.value
                    }
                    var c = o;
                    s += e.slice(a, c), a = c + 1
                }
                return s
            }

            function y(e, t) {
                return ")" === e[t] && t++, E(e.slice(0, t))
            }

            function C(e, t) {
                for (var n = e.slice(0, t), a = k("(", n) - k(")", n); a > 0 && t < e.length;) ")" === e[t] && a--, t++;
                return e.slice(0, t)
            }

            function k(e, t) {
                var n = 0,
                    a = t.split(""),
                    s = Array.isArray(a),
                    i = 0;
                for (a = s ? a : a[Symbol.iterator]();;) {
                    var r;
                    if (s) {
                        if (i >= a.length) break;
                        r = a[i++]
                    } else {
                        if ((i = a.next()).done) break;
                        r = i.value
                    }
                    r === e && n++
                }
                return n
            }

            function x(e, t) {
                if (t < 1) return "";
                for (var n = ""; t > 1;) 1 & t && (n += e), t >>= 1, e += e;
                return n + e
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => s
            });
            var a = n(236);

            function s(e, t, n) {
                return n || (n = t, t = void 0), new a.default(t, n).input(e)
            }
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "I4SFD6+N",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\phone-entry\\\\layout.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\phone-entry\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","step-container"],["flush-element"],["text","\\n  "],["open-element","h2",[]],["static-attr","class","step-heading"],["flush-element"],["text","\\n    "],["append",["unknown",["tra","account_verification_phone_entry_heading"]],false],["text","\\n    "],["append",["unknown",["tra","account_verification_step_heading"]],false],["text","\\n"],["block",["if"],[["get",["isPasswordEntryActive"]]],null,17,16],["text","    "],["append",["unknown",["tra","account_verification_of_heading"]],false],["text","\\n"],["block",["if"],[["get",["isPasswordEntryActive"]]],null,15,14],["text","  "],["close-element"],["text","\\n  "],["open-element","p",[]],["static-attr","class","step-body left-aligned"],["flush-element"],["text","\\n    "],["append",["helper",["sanitize"],[["get",["tra","account_verification_phone_entry_body"]]],null],false],["text","\\n    "],["open-element","br",[]],["flush-element"],["close-element"],["text","\\n    "],["append",["helper",["sanitize"],[["get",["tra","account_verification_phone_entry_body1"]]],null],false],["text","\\n    "],["open-element","br",[]],["flush-element"],["close-element"],["text","\\n    "],["append",["helper",["sanitize"],[["get",["tra","account_verification_phone_entry_body2"]]],null],false],["text"," "],["open-element","a",[]],["dynamic-attr","href",["concat",[["unknown",["tra","account_verification_phone_entry_body2_link_adress"]]]]],["static-attr","target","_blank"],["flush-element"],["append",["unknown",["tra","account_verification_phone_entry_body2_link_desc"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","h3",[]],["static-attr","class","field-title"],["flush-element"],["append",["unknown",["tra","account_verification_phone_entry_field_title"]],false],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","new-phone-entry"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-framed-dropdown",[]],["static-attr","class","countries-dropdown"],["dynamic-attr","onkeypress",["helper",["action"],[["get",[null]],"dropdownKeyPress"],null],null],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","id","country-flag-preload"],["flush-element"],["close-element"],["text","\\n"],["block",["each"],[["get",["countryDropdownOptions"]]],null,13],["text","    "],["close-element"],["text","\\n    "],["open-element","lol-uikit-flat-input",[]],["dynamic-attr","class",["concat",["phone-formatter",["helper",["if"],[["get",["isPhoneNumberValidLive"]],""," field-error"],null],["helper",["if"],[["get",["isPhoneNumberNotRegistered"]],""," field-error"],null]]]],["flush-element"],["text","\\n      "],["append",["helper",["input"],null,[["class","value","key-up","insert-newline","type"],["field formatter",["get",["phoneNumberPart2"]],"phoneNumberPart2KeyUp","phoneNumberEntered","text"]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["isPhoneNumberValid"]]],null,12],["text","\\n"],["block",["unless"],[["get",["isPhoneNumberValid"]]],null,9],["text","\\n"],["block",["unless"],[["get",["isPhoneNumberNotRegistered"]]],null,6],["text","\\n"],["block",["unless"],[["get",["isTokenRequestNotInProgress"]]],null,3],["text","\\n  "],["open-element","lol-uikit-flat-button-group",[]],["static-attr","class","step-buttons"],["static-attr","type","dialog-frame"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","submit-phone-number-button"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"postPhoneNumber"],null],null],["static-attr","disabled",""],["flush-element"],["append",["unknown",["tra","account_verification_submit_button"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","            "],["open-element","br",[]],["flush-element"],["close-element"],["text","\\n            "],["append",["unknown",["tra","account_verification_approximate_time_left_in_seconds"]],false],["text"," "],["append",["unknown",["tokenRequestInProgressTimeLeftInSec"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","p",[]],["static-attr","class","field-desc field-error-text"],["flush-element"],["text","\\n          "],["append",["unknown",["tra","account_verification_phone_entry_token_request_in_progress_error"]],false],["text","\\n"],["block",["if"],[["get",["tokenRequestInProgressTimeLeftInSec"]]],null,0],["text","        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isPhoneNumberNotRegistered"]]],null,1]],"locals":[]},{"statements":[["block",["if"],[["get",["isPhoneNumberValid"]]],null,2]],"locals":[]},{"statements":[["text","        "],["open-element","p",[]],["static-attr","class","field-desc field-error-text"],["flush-element"],["append",["unknown",["tra","account_verification_phone_entry_already_registered_error"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isTokenRequestNotInProgress"]]],null,4]],"locals":[]},{"statements":[["block",["if"],[["get",["isPhoneNumberValid"]]],null,5]],"locals":[]},{"statements":[["text","        "],["open-element","p",[]],["static-attr","class","field-desc field-error-text"],["flush-element"],["append",["unknown",["tra","account_verification_phone_entry_not_valid_error"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isTokenRequestNotInProgress"]]],null,7]],"locals":[]},{"statements":[["block",["if"],[["get",["isPhoneNumberNotRegistered"]]],null,8]],"locals":[]},{"statements":[["text","        "],["open-element","p",[]],["static-attr","class","field-desc"],["flush-element"],["append",["unknown",["tra","account_verification_phone_entry_field_desc"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isTokenRequestNotInProgress"]]],null,10]],"locals":[]},{"statements":[["block",["if"],[["get",["isPhoneNumberNotRegistered"]]],null,11]],"locals":[]},{"statements":[["text","        "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","value",["concat",[["unknown",["key","iso2"]]]]],["dynamic-attr","selected",["unknown",["key","selected"]],null],["dynamic-attr","data-prefix",["concat",[["unknown",["key","prefix"]]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"selectCountry",["get",["index"]]],null],null],["flush-element"],["text","\\n          "],["open-element","img",[]],["static-attr","class","country-flag"],["dynamic-attr","src",["concat",["/fe/lol-static-assets/images/country-flags/",["unknown",["key","iso2"]],".png"]]],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","ui-dropdown-option-only"],["flush-element"],["text","\\n            "],["open-element","span",[]],["static-attr","class","country-name"],["flush-element"],["append",["unknown",["key","name"]],false],["text"," "],["open-element","i",[]],["static-attr","class","country-prefix"],["flush-element"],["text","(+"],["append",["unknown",["key","prefix"]],false],["text",")"],["close-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":["key","index"]},{"statements":[["text","      2\\n"]],"locals":[]},{"statements":[["text","      3\\n"]],"locals":[]},{"statements":[["text","      1\\n"]],"locals":[]},{"statements":[["text","      2\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = l(n(184)),
                i = l(n(185)),
                r = l(n(240));

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const o = (0, a.dataBinding)("/lol-account-verification", a.socket),
                c = {
                    REQUEST: "v1/confirmActivationPin",
                    RESPONSE: "v1/confirmActivationPinResponse"
                },
                d = {
                    REQUEST: "v1/confirmDeactivationPin",
                    RESPONSE: "v1/confirmDeactivationPinResponse"
                };
            e.exports = a.Ember.Component.extend({
                layout: n(261),
                classNames: ["account-verification-phone-entry"],
                resendButtonText: "--:--",
                resetCounter: !1,
                counterCompleted: !1,
                initialTimeLeftInSec: null,
                isKrEnabled: !1,
                init: function() {
                    this._super(...arguments), o.get("v1/is-verified").then((e => {
                        this.set("isVerified", e.success)
                    }))
                },
                didInsertElement: function() {
                    this._super(...arguments);
                    const e = this.get("smsTokenExpireDurationInSec");
                    this.set("initialTimeLeftInSec", e), this.counter(e), this.set("canResend", !1);
                    const t = this.$(".previous-button")[0],
                        n = this.$(".resend-button")[0],
                        a = this.get("tra.account_verification_token_entry_tooltip_previous_button"),
                        i = this.get("tra.account_verification_token_entry_tooltip_resend_button");
                    (0, r.default)(t, a), (0, r.default)(n, i);
                    this.get("initScreen") === s.default.screens.krPhoneDisplay && this.set("isKrEnabled", !0)
                },
                willDestroyElement() {
                    this._super(...arguments);
                    const e = this.get("tokenEndpoints");
                    o.removeObserver(e.RESPONSE, this)
                },
                tokenEndpoints: a.Ember.computed("isVerified", (function() {
                    return this.get("isVerified") ? d : c
                })),
                handleActivationPin: function(e) {
                    a.logger.warning("Received updating activation pin request = " + e.data.status), this.set("isLoading", !1);
                    const t = e.data.status;
                    "VALID" === t ? ((0, i.default)({
                        event_name: "account_verification_token_verified",
                        screen_id: s.default.screens.tokenEntry,
                        message: "Player did enter correct verification code from sms"
                    }), this.send("handleTokenSuccess")) : ((0, i.default)({
                        event_name: "account_verification_token_not_verified",
                        screen_id: s.default.screens.tokenEntry,
                        message: "Player did not enter correct verification code from sms"
                    }), this.send("handleTokenInvalid", t))
                },
                counter: function(e) {
                    const t = this,
                        n = t.$(".resend-button")[0],
                        a = t.$(".previous-button")[0],
                        s = t.$(".submit-button")[0],
                        i = this.get("initialTimeLeftInSec"),
                        r = t.$(".time-left")[0],
                        l = setInterval((function() {
                            const o = e--;
                            t.set("smsTokenExpireDurationInSec", o), r.innerHTML = t.minuteSecondTime(o);
                            const c = t.get("resetCounter");
                            e < 0 && t.set("smsTokenExpireDurationInSec", i), (e < 0 || c) && (t.set("resetCounter", !1), t.set("counterCompleted", !0), clearInterval(l), a.removeAttribute("disabled", ""), n.removeAttribute("disabled", ""), n.classList.remove("disabled"), n.classList.add("enabled"), s.setAttribute("disabled", "disabled"), r.innerHTML = "0:00", t.set("canResend", !0))
                        }), 1e3)
                },
                minuteSecondTime: function(e) {
                    let t = e % 60;
                    return t < 10 && (t = "0" + t), Math.floor(e / 60) + ":" + t
                },
                actions: {
                    handleTokenSuccess: function() {
                        this.changeScreen(s.default.screens.success), (0, i.default)({
                            event_name: "account_verification_token_entry_response",
                            screen_id: s.default.screens.tokenEntry,
                            message: "Player successfully entered a token."
                        })
                    },
                    handleTokenInvalid: function(e) {
                        a.logger.warning("Handling token invalid logic block with status code = " + e), "INCORRECT_PIN" === e || 305 === e ? (this.set("isTokenValid", !1), this.changeScreen(s.default.screens.tokenEntry), (0, i.default)({
                            event_name: "account_verification_token_entry_response",
                            screen_id: s.default.screens.tokenEntry,
                            message: "Token is not validated by Server."
                        })) : "PIN_EXPIRED" === e || 409 === e ? (this.set("isTokenNotExpired", !1), this.set("smsTokenExpireDurationInSec", 0), this.changeScreen(s.default.screens.tokenEntry), (0, i.default)({
                            event_name: "account_verification_token_entry_response",
                            screen_id: s.default.screens.tokenEntry,
                            message: "Token`s duration expired."
                        })) : (a.logger.warning("Got unexpected status code from RMS message"), this.unexpectedError("Player entered a token value but Server returned undefined status code from v1/verify endpoint."))
                    },
                    postToken: function() {
                        const e = this.get("token");
                        if (e && e.match(/^\d+$/)) {
                            this.set("resetCounter", !0), this.set("isTokenValid", !0), this.set("isTokenNotExpired", !0);
                            const t = this.get("tokenEndpoints");
                            (0, i.default)({
                                event_name: "account_verification_token_entered",
                                screen_id: s.default.screens.tokenEntry,
                                message: "Player clicked Submit button."
                            }), a.logger.warning("sending confirm activation pin, waiting for response from server"), o.post(t.REQUEST, {
                                oneTimePin: e
                            }).then((() => {})).catch((e => {
                                this.unexpectedError(e.message)
                            })), o.observe(t.RESPONSE, this, this.handleActivationPin), this.set("isLoading", !0)
                        } else this.set("isTokenValid", !1)
                    },
                    resetTokenScreenValues: function() {
                        this.set("resetCounter", !0), this.set("counterCompleted", !1), this.set("smsTokenExpireDurationInSec", 0), this.set("isTokenValid", !0), this.set("isTokenNotExpired", !0)
                    },
                    actions: {
                        postToken: function() {
                            this.postToken()
                        },
                        tokenEntered: function() {
                            this.get("counterCompleted") || this.postToken()
                        },
                        returnToPreviousScreen: function() {
                            this.resetTokenScreenValues();
                            const e = this.get("initScreen");
                            this.changeScreen(e), (0, i.default)({
                                event_name: "account_verification_token_entry_previous_clicked",
                                screen_id: s.default.screens.tokenEntry,
                                message: "Player clicked Previous button."
                            })
                        },
                        resendToken: function() {
                            this.resetTokenScreenValues();
                            const e = this.$(".resend-button")[0],
                                t = this.$(".previous-button")[0],
                                n = this.$(".submit-button")[0];
                            t.setAttribute("disabled", "disabled"), e.setAttribute("disabled", "disabled"), n.removeAttribute("disabled", "");
                            const a = this.get("initScreen");
                            a === s.default.screens.phoneEntry ? this.postPhoneNumberRequest(!1) : a === s.default.screens.phoneRemove ? this.confirmRemovalRequest() : a === s.default.screens.krPhoneDisplay ? this.confirmKrVerifyRequest() : a === s.default.screens.tencentPhoneDisplay && this.postPhoneNumberRequest(!0);
                            const r = this.get("initialTimeLeftInSec");
                            this.counter(r), (0, i.default)({
                                event_name: "account_verification_token_entry_resend_clicked",
                                screen_id: s.default.screens.tokenEntry,
                                message: "Player clicked Resend button."
                            })
                        },
                        restrictField: function() {
                            this.restrictField(!0)
                        }
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function(e, t) {
                a.UIKit.getTooltipManager().assign(e, s({
                    message: t
                }), t, i)
            };
            var a = n(1);
            const s = n(241),
                i = {
                    ComponentFactory: a.ComponentFactory,
                    targetAnchor: {
                        x: "center",
                        y: "top"
                    },
                    tooltipAnchor: {
                        x: "center",
                        y: "bottom"
                    }
                }
        }, (e, t, n) => {
            var a = n(242);
            e.exports = (a.default || a).template({
                compiler: [7, ">= 4.0.0"],
                main: function(e, t, n, a, s) {
                    var i;
                    return '<lol-uikit-tooltip>\r\n  <lol-uikit-content-block type="tooltip-system">\r\n    <p>' + e.escapeExpression("function" == typeof(i = null != (i = n.message || (null != t ? t.message : t)) ? i : n.helperMissing) ? i.call(null != t ? t : e.nullContext || {}, {
                        name: "message",
                        hash: {},
                        data: s
                    }) : i) + "</p>\r\n  </lol-uikit-content-block>\r\n</lol-uikit-tooltip>\r\n"
                },
                useData: !0
            })
        }, (e, t, n) => {
            e.exports = n(243).default
        }, (e, t, n) => {
            "use strict";

            function a(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }

            function s(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t.default = e, t
            }
            t.__esModule = !0;
            var i = s(n(244)),
                r = a(n(258)),
                l = a(n(246)),
                o = s(n(245)),
                c = s(n(259)),
                d = a(n(260));

            function u() {
                var e = new i.HandlebarsEnvironment;
                return o.extend(e, i), e.SafeString = r.default, e.Exception = l.default, e.Utils = o, e.escapeExpression = o.escapeExpression, e.VM = c, e.template = function(t) {
                    return c.template(t, e)
                }, e
            }
            var m = u();
            m.create = u, d.default(m), m.default = m, t.default = m, e.exports = t.default
        }, (e, t, n) => {
            "use strict";

            function a(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            t.__esModule = !0, t.HandlebarsEnvironment = d;
            var s = n(245),
                i = a(n(246)),
                r = n(247),
                l = n(255),
                o = a(n(257));
            t.VERSION = "4.1.2";
            t.COMPILER_REVISION = 7;
            t.REVISION_CHANGES = {
                1: "<= 1.0.rc.2",
                2: "== 1.0.0-rc.3",
                3: "== 1.0.0-rc.4",
                4: "== 1.x.x",
                5: "== 2.0.0-alpha.x",
                6: ">= 2.0.0-beta.1",
                7: ">= 4.0.0"
            };
            var c = "[object Object]";

            function d(e, t, n) {
                this.helpers = e || {}, this.partials = t || {}, this.decorators = n || {}, r.registerDefaultHelpers(this), l.registerDefaultDecorators(this)
            }
            d.prototype = {
                constructor: d,
                logger: o.default,
                log: o.default.log,
                registerHelper: function(e, t) {
                    if (s.toString.call(e) === c) {
                        if (t) throw new i.default("Arg not supported with multiple helpers");
                        s.extend(this.helpers, e)
                    } else this.helpers[e] = t
                },
                unregisterHelper: function(e) {
                    delete this.helpers[e]
                },
                registerPartial: function(e, t) {
                    if (s.toString.call(e) === c) s.extend(this.partials, e);
                    else {
                        if (void 0 === t) throw new i.default('Attempting to register a partial called "' + e + '" as undefined');
                        this.partials[e] = t
                    }
                },
                unregisterPartial: function(e) {
                    delete this.partials[e]
                },
                registerDecorator: function(e, t) {
                    if (s.toString.call(e) === c) {
                        if (t) throw new i.default("Arg not supported with multiple decorators");
                        s.extend(this.decorators, e)
                    } else this.decorators[e] = t
                },
                unregisterDecorator: function(e) {
                    delete this.decorators[e]
                }
            };
            var u = o.default.log;
            t.log = u, t.createFrame = s.createFrame, t.logger = o.default
        }, (e, t) => {
            "use strict";
            t.__esModule = !0, t.extend = r, t.indexOf = function(e, t) {
                for (var n = 0, a = e.length; n < a; n++)
                    if (e[n] === t) return n;
                return -1
            }, t.escapeExpression = function(e) {
                if ("string" != typeof e) {
                    if (e && e.toHTML) return e.toHTML();
                    if (null == e) return "";
                    if (!e) return e + "";
                    e = "" + e
                }
                if (!s.test(e)) return e;
                return e.replace(a, i)
            }, t.isEmpty = function(e) {
                return !e && 0 !== e || !(!c(e) || 0 !== e.length)
            }, t.createFrame = function(e) {
                var t = r({}, e);
                return t._parent = e, t
            }, t.blockParams = function(e, t) {
                return e.path = t, e
            }, t.appendContextPath = function(e, t) {
                return (e ? e + "." : "") + t
            };
            var n = {
                    "&": "&amp;",
                    "<": "&lt;",
                    ">": "&gt;",
                    '"': "&quot;",
                    "'": "&#x27;",
                    "`": "&#x60;",
                    "=": "&#x3D;"
                },
                a = /[&<>"'`=]/g,
                s = /[&<>"'`=]/;

            function i(e) {
                return n[e]
            }

            function r(e) {
                for (var t = 1; t < arguments.length; t++)
                    for (var n in arguments[t]) Object.prototype.hasOwnProperty.call(arguments[t], n) && (e[n] = arguments[t][n]);
                return e
            }
            var l = Object.prototype.toString;
            t.toString = l;
            var o = function(e) {
                return "function" == typeof e
            };
            o(/x/) && (t.isFunction = o = function(e) {
                return "function" == typeof e && "[object Function]" === l.call(e)
            }), t.isFunction = o;
            var c = Array.isArray || function(e) {
                return !(!e || "object" != typeof e) && "[object Array]" === l.call(e)
            };
            t.isArray = c
        }, (e, t) => {
            "use strict";
            t.__esModule = !0;
            var n = ["description", "fileName", "lineNumber", "message", "name", "number", "stack"];

            function a(e, t) {
                var s = t && t.loc,
                    i = void 0,
                    r = void 0;
                s && (e += " - " + (i = s.start.line) + ":" + (r = s.start.column));
                for (var l = Error.prototype.constructor.call(this, e), o = 0; o < n.length; o++) this[n[o]] = l[n[o]];
                Error.captureStackTrace && Error.captureStackTrace(this, a);
                try {
                    s && (this.lineNumber = i, Object.defineProperty ? Object.defineProperty(this, "column", {
                        value: r,
                        enumerable: !0
                    }) : this.column = r)
                } catch (e) {}
            }
            a.prototype = new Error, t.default = a, e.exports = t.default
        }, (e, t, n) => {
            "use strict";

            function a(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            t.__esModule = !0, t.registerDefaultHelpers = function(e) {
                s.default(e), i.default(e), r.default(e), l.default(e), o.default(e), c.default(e), d.default(e)
            };
            var s = a(n(248)),
                i = a(n(249)),
                r = a(n(250)),
                l = a(n(251)),
                o = a(n(252)),
                c = a(n(253)),
                d = a(n(254))
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0;
            var a = n(245);
            t.default = function(e) {
                e.registerHelper("blockHelperMissing", (function(t, n) {
                    var s = n.inverse,
                        i = n.fn;
                    if (!0 === t) return i(this);
                    if (!1 === t || null == t) return s(this);
                    if (a.isArray(t)) return t.length > 0 ? (n.ids && (n.ids = [n.name]), e.helpers.each(t, n)) : s(this);
                    if (n.data && n.ids) {
                        var r = a.createFrame(n.data);
                        r.contextPath = a.appendContextPath(n.data.contextPath, n.name), n = {
                            data: r
                        }
                    }
                    return i(t, n)
                }))
            }, e.exports = t.default
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0;
            var a, s = n(245),
                i = n(246),
                r = (a = i) && a.__esModule ? a : {
                    default: a
                };
            t.default = function(e) {
                e.registerHelper("each", (function(e, t) {
                    if (!t) throw new r.default("Must pass iterator to #each");
                    var n = t.fn,
                        a = t.inverse,
                        i = 0,
                        l = "",
                        o = void 0,
                        c = void 0;

                    function d(t, a, i) {
                        o && (o.key = t, o.index = a, o.first = 0 === a, o.last = !!i, c && (o.contextPath = c + t)), l += n(e[t], {
                            data: o,
                            blockParams: s.blockParams([e[t], t], [c + t, null])
                        })
                    }
                    if (t.data && t.ids && (c = s.appendContextPath(t.data.contextPath, t.ids[0]) + "."), s.isFunction(e) && (e = e.call(this)), t.data && (o = s.createFrame(t.data)), e && "object" == typeof e)
                        if (s.isArray(e))
                            for (var u = e.length; i < u; i++) i in e && d(i, i, i === e.length - 1);
                        else {
                            var m = void 0;
                            for (var p in e) e.hasOwnProperty(p) && (void 0 !== m && d(m, i - 1), m = p, i++);
                            void 0 !== m && d(m, i - 1, !0)
                        } return 0 === i && (l = a(this)), l
                }))
            }, e.exports = t.default
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0;
            var a, s = n(246),
                i = (a = s) && a.__esModule ? a : {
                    default: a
                };
            t.default = function(e) {
                e.registerHelper("helperMissing", (function() {
                    if (1 !== arguments.length) throw new i.default('Missing helper: "' + arguments[arguments.length - 1].name + '"')
                }))
            }, e.exports = t.default
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0;
            var a = n(245);
            t.default = function(e) {
                e.registerHelper("if", (function(e, t) {
                    return a.isFunction(e) && (e = e.call(this)), !t.hash.includeZero && !e || a.isEmpty(e) ? t.inverse(this) : t.fn(this)
                })), e.registerHelper("unless", (function(t, n) {
                    return e.helpers.if.call(this, t, {
                        fn: n.inverse,
                        inverse: n.fn,
                        hash: n.hash
                    })
                }))
            }, e.exports = t.default
        }, (e, t) => {
            "use strict";
            t.__esModule = !0, t.default = function(e) {
                e.registerHelper("log", (function() {
                    for (var t = [void 0], n = arguments[arguments.length - 1], a = 0; a < arguments.length - 1; a++) t.push(arguments[a]);
                    var s = 1;
                    null != n.hash.level ? s = n.hash.level : n.data && null != n.data.level && (s = n.data.level), t[0] = s, e.log.apply(e, t)
                }))
            }, e.exports = t.default
        }, (e, t) => {
            "use strict";
            t.__esModule = !0, t.default = function(e) {
                e.registerHelper("lookup", (function(e, t) {
                    return e ? "constructor" !== t || e.propertyIsEnumerable(t) ? e[t] : void 0 : e
                }))
            }, e.exports = t.default
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0;
            var a = n(245);
            t.default = function(e) {
                e.registerHelper("with", (function(e, t) {
                    a.isFunction(e) && (e = e.call(this));
                    var n = t.fn;
                    if (a.isEmpty(e)) return t.inverse(this);
                    var s = t.data;
                    return t.data && t.ids && ((s = a.createFrame(t.data)).contextPath = a.appendContextPath(t.data.contextPath, t.ids[0])), n(e, {
                        data: s,
                        blockParams: a.blockParams([e], [s && s.contextPath])
                    })
                }))
            }, e.exports = t.default
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0, t.registerDefaultDecorators = function(e) {
                i.default(e)
            };
            var a, s = n(256),
                i = (a = s) && a.__esModule ? a : {
                    default: a
                }
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0;
            var a = n(245);
            t.default = function(e) {
                e.registerDecorator("inline", (function(e, t, n, s) {
                    var i = e;
                    return t.partials || (t.partials = {}, i = function(s, i) {
                        var r = n.partials;
                        n.partials = a.extend({}, r, t.partials);
                        var l = e(s, i);
                        return n.partials = r, l
                    }), t.partials[s.args[0]] = s.fn, i
                }))
            }, e.exports = t.default
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0;
            var a = n(245),
                s = {
                    methodMap: ["debug", "info", "warn", "error"],
                    level: "info",
                    lookupLevel: function(e) {
                        if ("string" == typeof e) {
                            var t = a.indexOf(s.methodMap, e.toLowerCase());
                            e = t >= 0 ? t : parseInt(e, 10)
                        }
                        return e
                    },
                    log: function(e) {
                        if (e = s.lookupLevel(e), "undefined" != typeof console && s.lookupLevel(s.level) <= e) {
                            var t = s.methodMap[e];
                            console[t] || (t = "log");
                            for (var n = arguments.length, a = Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) a[i - 1] = arguments[i];
                            console[t].apply(console, a)
                        }
                    }
                };
            t.default = s, e.exports = t.default
        }, (e, t) => {
            "use strict";

            function n(e) {
                this.string = e
            }
            t.__esModule = !0, n.prototype.toString = n.prototype.toHTML = function() {
                return "" + this.string
            }, t.default = n, e.exports = t.default
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0, t.checkRevision = function(e) {
                var t = e && e[0] || 1,
                    n = l.COMPILER_REVISION;
                if (t !== n) {
                    if (t < n) {
                        var a = l.REVISION_CHANGES[n],
                            s = l.REVISION_CHANGES[t];
                        throw new r.default("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (" + a + ") or downgrade your runtime to an older version (" + s + ").")
                    }
                    throw new r.default("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version (" + e[1] + ").")
                }
            }, t.template = function(e, t) {
                if (!t) throw new r.default("No environment passed to template");
                if (!e || !e.main) throw new r.default("Unknown template object: " + typeof e);
                e.main.decorator = e.main_d, t.VM.checkRevision(e.compiler);
                var n = {
                    strict: function(e, t) {
                        if (!(t in e)) throw new r.default('"' + t + '" not defined in ' + e);
                        return e[t]
                    },
                    lookup: function(e, t) {
                        for (var n = e.length, a = 0; a < n; a++)
                            if (e[a] && null != e[a][t]) return e[a][t]
                    },
                    lambda: function(e, t) {
                        return "function" == typeof e ? e.call(t) : e
                    },
                    escapeExpression: s.escapeExpression,
                    invokePartial: function(n, a, i) {
                        i.hash && (a = s.extend({}, a, i.hash), i.ids && (i.ids[0] = !0)), n = t.VM.resolvePartial.call(this, n, a, i);
                        var l = t.VM.invokePartial.call(this, n, a, i);
                        if (null == l && t.compile && (i.partials[i.name] = t.compile(n, e.compilerOptions, t), l = i.partials[i.name](a, i)), null != l) {
                            if (i.indent) {
                                for (var o = l.split("\n"), c = 0, d = o.length; c < d && (o[c] || c + 1 !== d); c++) o[c] = i.indent + o[c];
                                l = o.join("\n")
                            }
                            return l
                        }
                        throw new r.default("The partial " + i.name + " could not be compiled when running in runtime-only mode")
                    },
                    fn: function(t) {
                        var n = e[t];
                        return n.decorator = e[t + "_d"], n
                    },
                    programs: [],
                    program: function(e, t, n, a, s) {
                        var i = this.programs[e],
                            r = this.fn(e);
                        return t || s || a || n ? i = o(this, e, r, t, n, a, s) : i || (i = this.programs[e] = o(this, e, r)), i
                    },
                    data: function(e, t) {
                        for (; e && t--;) e = e._parent;
                        return e
                    },
                    merge: function(e, t) {
                        var n = e || t;
                        return e && t && e !== t && (n = s.extend({}, t, e)), n
                    },
                    nullContext: Object.seal({}),
                    noop: t.VM.noop,
                    compilerInfo: e.compiler
                };

                function a(t) {
                    var s = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1],
                        i = s.data;
                    a._setup(s), !s.partial && e.useData && (i = function(e, t) {
                        t && "root" in t || ((t = t ? l.createFrame(t) : {}).root = e);
                        return t
                    }(t, i));
                    var r = void 0,
                        o = e.useBlockParams ? [] : void 0;

                    function c(t) {
                        return "" + e.main(n, t, n.helpers, n.partials, i, o, r)
                    }
                    return e.useDepths && (r = s.depths ? t != s.depths[0] ? [t].concat(s.depths) : s.depths : [t]), (c = d(e.main, c, n, s.depths || [], i, o))(t, s)
                }
                return a.isTop = !0, a._setup = function(a) {
                    a.partial ? (n.helpers = a.helpers, n.partials = a.partials, n.decorators = a.decorators) : (n.helpers = n.merge(a.helpers, t.helpers), e.usePartial && (n.partials = n.merge(a.partials, t.partials)), (e.usePartial || e.useDecorators) && (n.decorators = n.merge(a.decorators, t.decorators)))
                }, a._child = function(t, a, s, i) {
                    if (e.useBlockParams && !s) throw new r.default("must pass block params");
                    if (e.useDepths && !i) throw new r.default("must pass parent depths");
                    return o(n, t, e[t], a, 0, s, i)
                }, a
            }, t.wrapProgram = o, t.resolvePartial = function(e, t, n) {
                e ? e.call || n.name || (n.name = e, e = n.partials[e]) : e = "@partial-block" === n.name ? n.data["partial-block"] : n.partials[n.name];
                return e
            }, t.invokePartial = function(e, t, n) {
                var a = n.data && n.data["partial-block"];
                n.partial = !0, n.ids && (n.data.contextPath = n.ids[0] || n.data.contextPath);
                var i = void 0;
                n.fn && n.fn !== c && function() {
                    n.data = l.createFrame(n.data);
                    var e = n.fn;
                    i = n.data["partial-block"] = function(t) {
                        var n = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];
                        return n.data = l.createFrame(n.data), n.data["partial-block"] = a, e(t, n)
                    }, e.partials && (n.partials = s.extend({}, n.partials, e.partials))
                }();
                void 0 === e && i && (e = i);
                if (void 0 === e) throw new r.default("The partial " + n.name + " could not be found");
                if (e instanceof Function) return e(t, n)
            }, t.noop = c;
            var a, s = function(e) {
                    if (e && e.__esModule) return e;
                    var t = {};
                    if (null != e)
                        for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                    return t.default = e, t
                }(n(245)),
                i = n(246),
                r = (a = i) && a.__esModule ? a : {
                    default: a
                },
                l = n(244);

            function o(e, t, n, a, s, i, r) {
                function l(t) {
                    var s = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1],
                        l = r;
                    return !r || t == r[0] || t === e.nullContext && null === r[0] || (l = [t].concat(r)), n(e, t, e.helpers, e.partials, s.data || a, i && [s.blockParams].concat(i), l)
                }
                return (l = d(n, l, e, r, a, i)).program = t, l.depth = r ? r.length : 0, l.blockParams = s || 0, l
            }

            function c() {
                return ""
            }

            function d(e, t, n, a, i, r) {
                if (e.decorator) {
                    var l = {};
                    t = e.decorator(t, l, n, a && a[0], i, r, a), s.extend(t, l)
                }
                return t
            }
        }, (e, t, n) => {
            "use strict";
            t.__esModule = !0, t.default = function(e) {
                var t = void 0 !== n.g ? n.g : window,
                    a = t.Handlebars;
                e.noConflict = function() {
                    return t.Handlebars === e && (t.Handlebars = a), e
                }
            }, e.exports = t.default
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "oDQpsXv8",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\token-entry\\\\layout.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\token-entry\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["isLoading"]]],null,14,13]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","p",[]],["static-attr","class","field-desc field-error-text"],["flush-element"],["append",["unknown",["tra","account_verification_token_entry_expired_error"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isTokenValid"]]],null,0]],"locals":[]},{"statements":[["text","        "],["open-element","p",[]],["static-attr","class","field-desc field-error-text"],["flush-element"],["append",["unknown",["tra","account_verification_token_entry_not_valid_error"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isTokenNotExpired"]]],null,2]],"locals":[]},{"statements":[["text","            "],["open-element","p",[]],["static-attr","class","formatted-phone-number"],["flush-element"],["text"," "],["append",["unknown",["phoneNumber"]],false],["text"," "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","img",[]],["static-attr","style","float: left; width: 32px; height: 32px; padding-left: 125px;"],["dynamic-attr","src",["concat",["/fe/lol-static-assets/images/country-flags/",["unknown",["selectedCountry"]],".png"]]],["flush-element"],["close-element"],["text","\\n            "],["open-element","p",[]],["static-attr","class","formatted-phone-number"],["flush-element"],["text"," "],["append",["unknown",["formattedPhoneNumber"]],false],["text"," "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","p",[]],["static-attr","class","field-desc"],["flush-element"],["text"," "],["append",["unknown",["tra","account_verification_token_entry_field_desc"]],false],["text"," "],["close-element"],["text","\\n"],["block",["if"],[["get",["formattedPhoneNumber"]]],null,5,4]],"locals":[]},{"statements":[["block",["if"],[["get",["isTokenNotExpired"]]],null,6]],"locals":[]},{"statements":[["block",["if"],[["get",["isTokenValid"]]],null,7]],"locals":[]},{"statements":[["text","        2\\n"]],"locals":[]},{"statements":[["text","        3\\n"]],"locals":[]},{"statements":[["text","        2\\n"]],"locals":[]},{"statements":[["text","        3\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","step-container"],["flush-element"],["text","\\n    "],["open-element","h2",[]],["static-attr","class","step-heading"],["flush-element"],["text","\\n      "],["append",["unknown",["tra","account_verification_token_entry_heading"]],false],["text","\\n      "],["append",["unknown",["tra","account_verification_step_heading"]],false],["text","\\n"],["block",["if"],[["get",["isPasswordEntryActive"]]],null,12,11],["text","      "],["append",["unknown",["tra","account_verification_of_heading"]],false],["text","\\n"],["block",["if"],[["get",["isPasswordEntryActive"]]],null,10,9],["text","    "],["close-element"],["text","\\n    "],["open-element","p",[]],["static-attr","class","step-body"],["flush-element"],["append",["helper",["sanitize"],[["get",["tra","account_verification_token_entry_body"]]],null],false],["close-element"],["text","\\n\\n    "],["open-element","h3",[]],["static-attr","class","field-title"],["flush-element"],["append",["unknown",["tra","account_verification_token_entry_field_title"]],false],["close-element"],["text","\\n\\n    "],["open-element","lol-uikit-flat-input",[]],["dynamic-attr","class",["concat",[["helper",["if"],[["get",["isTokenValid"]],"","field-error"],null],["helper",["if"],[["get",["isTokenNotExpired"]],"","field-error"],null]]]],["flush-element"],["text","\\n      "],["append",["helper",["input"],null,[["type","class","value","key-press","insert-newline","maxlength","placeholder"],["text","field centered",["get",["token"]],"restrictField","tokenEntered","6",["get",["tra","account_verification_token_placeholder"]]]]],false],["text","\\n    "],["close-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","avs-replay-button"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","avs-replay-button-container"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","id","avs-replay-button-preload"],["flush-element"],["close-element"],["text","\\n        "],["open-element","span",[]],["static-attr","draggable","false"],["dynamic-attr","class",["concat",["avs-replay-button-img resend-button ",["helper",["if"],[["get",["canResend"]],"enabled","disabled"],null]]]],["modifier",["action"],[["get",[null]],["helper",["if"],[["get",["canResend"]],"resendToken",""],null]]],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","h3",[]],["static-attr","class","expire-title"],["flush-element"],["append",["unknown",["tra","account_verification_token_entry_expire_title"]],false],["text"," "],["open-element","b",[]],["static-attr","class","time-left"],["flush-element"],["close-element"],["close-element"],["text","\\n\\n"],["block",["unless"],[["get",["isKrEnabled"]]],null,8],["text","\\n"],["block",["unless"],[["get",["isTokenValid"]]],null,3],["text","\\n"],["block",["unless"],[["get",["isTokenNotExpired"]]],null,1],["text","\\n    "],["open-element","lol-uikit-flat-button-group",[]],["static-attr","class","step-buttons"],["static-attr","type","dialog-frame"],["flush-element"],["text","\\n      "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","submit-button"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"postToken"],null],null],["flush-element"],["append",["unknown",["tra","account_verification_submit_button"]],false],["close-element"],["text","\\n      "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","iconic-buttons previous-button"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"returnToPreviousScreen"],null],null],["static-attr","disabled",""],["flush-element"],["append",["unknown",["tra","account_verification_back_button"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["append",["unknown",["account-verification-loading"]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            const s = (0, a.dataBinding)("/lol-account-verification", a.socket);
            e.exports = a.Ember.Component.extend({
                layout: n(263),
                classNames: ["account-verification-phone-remove"],
                maskedPhoneNumber: "",
                init() {
                    this._super(...arguments), this._getAvs2PhoneNumber()
                },
                willDestroyElement() {
                    this._super(...arguments), s.removeObserver("v1/phone-number", this)
                },
                _getAvs2PhoneNumber() {
                    s.addObserver("v1/phone-number", this, this._handleGetPhoneNumber)
                },
                _handleGetPhoneNumber(e) {
                    if (e && e.data && e.data.phoneNumberObfuscated) {
                        const t = e.data.phoneNumberObfuscated,
                            n = t.length - t.endsWith.length;
                        this.set("maskedPhoneNumber", "+" + t.countryCode + Array(n).join("*") + t.endsWith), this.set("phoneNumber", t.countryCode + Array(n).join("*") + t.endsWith)
                    } else e.error && e.error.errorCode && this.unexpectedError(e.error.message)
                },
                actions: {
                    confirmRemoval: function() {
                        this.confirmRemovalRequest()
                    }
                }
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "VJevVjWI",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\phone-remove\\\\layout.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\phone-remove\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","step-container"],["flush-element"],["text","\\n  "],["open-element","h2",[]],["static-attr","class","step-heading"],["flush-element"],["text","\\n    "],["append",["unknown",["tra","account_verification_phone_remove_heading"]],false],["text","\\n    "],["append",["unknown",["tra","account_verification_step_heading"]],false],["text","\\n    1\\n    "],["append",["unknown",["tra","account_verification_of_heading"]],false],["text","\\n    2\\n  "],["close-element"],["text","\\n  "],["open-element","p",[]],["static-attr","class","step-body"],["flush-element"],["append",["helper",["sanitize"],[["get",["tra","account_verification_phone_remove_body"]]],null],false],["close-element"],["text","\\n\\n  "],["open-element","h3",[]],["static-attr","class","field-title"],["flush-element"],["append",["unknown",["tra","account_verification_phone_remove_field_title"]],false],["close-element"],["text","\\n\\n  "],["open-element","p",[]],["static-attr","class","step-body"],["flush-element"],["open-element","strong",[]],["flush-element"],["append",["unknown",["maskedPhoneNumber"]],false],["close-element"],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["isTokenRequestNotInProgress"]]],null,2,1],["text","\\n  "],["open-element","lol-uikit-flat-button-group",[]],["static-attr","class","step-buttons"],["static-attr","type","dialog-frame"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-button",[]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"confirmRemoval"],null],null],["flush-element"],["append",["unknown",["tra","account_verification_proceed_button"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","br",[]],["flush-element"],["close-element"],["text","\\n        "],["append",["unknown",["tra","account_verification_approximate_time_left_in_seconds"]],false],["text"," "],["append",["unknown",["tokenRequestInProgressTimeLeftInSec"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","p",[]],["static-attr","class","field-desc field-error-text"],["flush-element"],["text","\\n      "],["append",["unknown",["tra","account_verification_phone_remove_token_request_in_progress_error"]],false],["text","\\n"],["block",["if"],[["get",["tokenRequestInProgressTimeLeftInSec"]]],null,0],["text","    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","p",[]],["static-attr","class","field-desc"],["flush-element"],["append",["unknown",["tra","account_verification_phone_remove_field_desc"]],false],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(265), e.exports = a.Ember.Component.extend({
                layout: n(266),
                classNames: ["account-verification-loading"]
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "KaAgtjX5",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\loading\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\loading\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\loading\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","step-container"],["flush-element"],["text","\\n  "],["open-element","h2",[]],["static-attr","class","step-heading"],["flush-element"],["append",["unknown",["tra","account_verification_loading_heading"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","result-container"],["flush-element"],["text","\\n    "],["open-element","span",[]],["static-attr","class","loading-spinner loading-fade-in"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = r(n(184)),
                i = r(n(185));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            e.exports = a.Ember.Component.extend({
                layout: n(268),
                classNames: ["account-verification-success"],
                actions: {
                    closeModal: function() {
                        let e = a.ModalManager.getActiveModal();
                        e.children && (e = e.children[0]), a.ModalManager.remove(e), (0, i.default)({
                            event_name: "account_verification_closed",
                            screen_id: s.default.screens.success,
                            message: "Player clicked Close button."
                        })
                    }
                }
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "HT5rLgJK",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\success\\\\layout.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\success\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","step-container"],["flush-element"],["text","\\n  "],["open-element","h2",[]],["static-attr","class","step-heading"],["flush-element"],["append",["unknown",["tra","account_verification_success_heading"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","result-container"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","src","/fe/lol-static-assets/images/icon-checkmark.png"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","lol-uikit-flat-button-group",[]],["static-attr","class","step-buttons"],["static-attr","type","dialog-frame"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-button",[]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"closeModal"],null],null],["flush-element"],["append",["unknown",["tra","account_verification_close_button"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(270), e.exports = a.Ember.Component.extend({
                layout: n(271),
                classNames: ["account-verification-unexpected-error"]
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "a1Z+rFDt",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\unexpected-error\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\unexpected-error\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\unexpected-error\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","step-container"],["flush-element"],["text","\\n  "],["open-element","h2",[]],["static-attr","class","step-heading"],["flush-element"],["append",["unknown",["tra","account_verification_unexpected_error_heading"]],false],["close-element"],["text","\\n  "],["open-element","p",[]],["static-attr","class","step-body"],["flush-element"],["append",["helper",["sanitize"],[["get",["tra","account_verification_unexpected_error_body"]]],null],false],["close-element"],["text","\\n\\n  "],["open-element","span",[]],["static-attr","class","sleeping-poro"],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            e.exports = a.Ember.Component.extend({
                layout: n(273),
                classNames: ["account-verification-kr-phone-display"],
                actions: {
                    confirmKrVerify: function() {
                        this.confirmKrVerifyRequest()
                    }
                }
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "HKhmyjds",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\kr-phone-display\\\\layout.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\kr-phone-display\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","step-container"],["flush-element"],["text","\\n  "],["open-element","h2",[]],["static-attr","class","step-heading"],["flush-element"],["text","\\n    "],["append",["unknown",["tra","account_verification_kr_phone_display_heading"]],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","p",[]],["static-attr","class","step-body"],["flush-element"],["append",["helper",["sanitize"],[["get",["tra","account_verification_kr_phone_display_body"]]],null],false],["close-element"],["text","\\n\\n  "],["open-element","h3",[]],["static-attr","class","field-title"],["flush-element"],["append",["unknown",["tra","account_verification_kr_phone_display_field_title"]],false],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["isKrPhoneRegistered"]]],null,9],["text","\\n"],["block",["unless"],[["get",["isKrPhoneRegistered"]]],null,7],["text","\\n"],["block",["unless"],[["get",["isKrSsnRegistered"]]],null,5],["text","\\n"],["block",["unless"],[["get",["isTokenRequestNotInProgress"]]],null,3],["text","\\n  "],["open-element","lol-uikit-flat-button-group",[]],["static-attr","class","step-buttons"],["static-attr","type","dialog-frame"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-button",[]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"confirmKrVerify"],null],null],["flush-element"],["append",["unknown",["tra","account_verification_proceed_button"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","            "],["open-element","br",[]],["flush-element"],["close-element"],["text","\\n            "],["append",["unknown",["tra","account_verification_approximate_time_left_in_seconds"]],false],["text"," "],["append",["unknown",["tokenRequestInProgressTimeLeftInSec"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","p",[]],["static-attr","class","field-desc field-error-text"],["flush-element"],["text","\\n          "],["append",["unknown",["tra","account_verification_kr_phone_display_token_request_in_progress_error"]],false],["text","\\n"],["block",["if"],[["get",["tokenRequestInProgressTimeLeftInSec"]]],null,0],["text","        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isKrPhoneRegistered"]]],null,1]],"locals":[]},{"statements":[["block",["if"],[["get",["isKrSsnRegistered"]]],null,2]],"locals":[]},{"statements":[["text","      "],["open-element","p",[]],["static-attr","class","field-desc field-error-text"],["flush-element"],["append",["unknown",["tra","account_verification_kr_phone_display_ssn_already_registered_error"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isKrPhoneRegistered"]]],null,4]],"locals":[]},{"statements":[["text","      "],["open-element","p",[]],["static-attr","class","field-desc field-error-text"],["flush-element"],["text","\\n        "],["append",["unknown",["tra","account_verification_kr_phone_display_phone_not_registered_error"]],false],["text","\\n        "],["open-element","a",[]],["dynamic-attr","href",["concat",[["unknown",["tra","account_verification_kr_phone_display_phone_not_registered_link_address_error"]]]]],["static-attr","target","_blank"],["flush-element"],["append",["unknown",["tra","account_verification_kr_phone_display_phone_not_registered_link_desc_error"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isKrSsnRegistered"]]],null,6]],"locals":[]},{"statements":[["text","      "],["open-element","p",[]],["static-attr","class","field-desc"],["flush-element"],["append",["unknown",["tra","account_verification_kr_phone_display_field_desc"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isKrSsnRegistered"]]],null,8]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            e.exports = a.Ember.Component.extend({
                layout: n(275),
                classNames: ["account-verification-tencent-phone-display"],
                accountVerification: a.Ember.inject.service("account-verification"),
                phoneNumberPart1: "+86",
                phoneNumberPart2: "",
                postPhoneNumber: function() {
                    const e = this.get("phoneNumberPart1"),
                        t = this.get("phoneNumberPart2"),
                        n = e + t,
                        a = this.stripPhoneNumber(n);
                    a && a.match(/^\d+$/) && e.length > 1 && t.length > 3 ? (this.set("isPhoneNumberValid", !0), this.set("phoneNumber", a), this.postPhoneNumberRequest(!0)) : this.set("isPhoneNumberValid", !1)
                },
                stripPhoneNumber: function(e) {
                    return e ? e.replace(/[\+\(\)-\s+]/g, "") : null
                },
                actions: {
                    postPhoneNumber: function() {
                        this.postPhoneNumber()
                    },
                    phoneNumberEntered: function() {
                        this.postPhoneNumber()
                    },
                    countryCodeEntered: function() {
                        this.$(".field.wide")[0].focus()
                    },
                    countryCodeFocusedIn: function() {
                        "" === this.get("phoneNumberPart1") && this.set("phoneNumberPart1", "+")
                    },
                    countryCodeFocusedOut: function() {
                        "+" === this.get("phoneNumberPart1") && this.set("phoneNumberPart1", "")
                    },
                    restrictField: function() {
                        this.restrictField(!1)
                    }
                }
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "99bl5F1D",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\tencent-phone-display\\\\layout.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\account-verification\\\\addon\\\\app\\\\components\\\\tencent-phone-display\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","step-container"],["flush-element"],["text","\\n  "],["open-element","h2",[]],["static-attr","class","step-heading"],["flush-element"],["text","\\n    "],["append",["unknown",["tra","account_verification_phone_entry_heading"]],false],["text","\\n    "],["append",["unknown",["tra","account_verification_step_heading"]],false],["text","\\n"],["block",["if"],[["get",["isPasswordEntryActive"]]],null,16,15],["text","    "],["append",["unknown",["tra","account_verification_of_heading"]],false],["text","\\n"],["block",["if"],[["get",["isPasswordEntryActive"]]],null,14,13],["text","  "],["close-element"],["text","\\n  "],["open-element","p",[]],["static-attr","class","step-body left-aligned"],["flush-element"],["text","\\n    "],["append",["helper",["sanitize"],[["get",["tra","account_verification_phone_entry_body"]]],null],false],["text","\\n    "],["open-element","br",[]],["flush-element"],["close-element"],["text","\\n    "],["append",["helper",["sanitize"],[["get",["tra","account_verification_phone_entry_body1"]]],null],false],["text","\\n    "],["open-element","br",[]],["flush-element"],["close-element"],["text","\\n    "],["append",["helper",["sanitize"],[["get",["tra","account_verification_phone_entry_body2"]]],null],false],["text"," "],["open-element","a",[]],["dynamic-attr","href",["concat",[["unknown",["tra","account_verification_phone_entry_body2_link_adress"]]]]],["static-attr","target","_blank"],["flush-element"],["append",["unknown",["tra","account_verification_phone_entry_body2_link_desc"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","h3",[]],["static-attr","class","field-title"],["flush-element"],["append",["unknown",["tra","account_verification_phone_entry_field_title"]],false],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","tencent-phone-input-container"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-input",[]],["dynamic-attr","class",["concat",[["helper",["if"],[["get",["isPhoneNumberValid"]],"","field-error"],null],["helper",["if"],[["get",["isPhoneNumberNotRegistered"]],"","field-error"],null]]]],["flush-element"],["text","\\n      "],["append",["helper",["input"],null,[["class","value","key-press","insert-newline","focus-in","focus-out","maxlength","placeholder","type"],["field narrow",["get",["phoneNumberPart1"]],"restrictField","countryCodeEntered","countryCodeFocusedIn","countryCodeFocusedOut","4",["get",["tra","account_verification_phone_number_country_code"]],"text"]]],false],["text","\\n      "],["append",["helper",["input"],null,[["class","value","key-press","insert-newline","maxlength","placeholder","type"],["field wide",["get",["phoneNumberPart2"]],"restrictField","phoneNumberEntered","22",["get",["tra","account_verification_phone_number_placeholder"]],"text"]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["isPhoneNumberValid"]]],null,12],["text","\\n"],["block",["unless"],[["get",["isPhoneNumberValid"]]],null,9],["text","\\n"],["block",["unless"],[["get",["isPhoneNumberNotRegistered"]]],null,6],["text","\\n"],["block",["unless"],[["get",["isTokenRequestNotInProgress"]]],null,3],["text","\\n  "],["open-element","lol-uikit-flat-button-group",[]],["static-attr","class","step-buttons"],["static-attr","type","dialog-frame"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-button",[]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"postPhoneNumber"],null],null],["flush-element"],["append",["unknown",["tra","account_verification_submit_button"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","            "],["open-element","br",[]],["flush-element"],["close-element"],["text","\\n            "],["append",["unknown",["tra","account_verification_approximate_time_left_in_seconds"]],false],["text"," "],["append",["unknown",["tokenRequestInProgressTimeLeftInSec"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","p",[]],["static-attr","class","field-desc field-error-text"],["flush-element"],["text","\\n          "],["append",["unknown",["tra","account_verification_phone_entry_token_request_in_progress_error"]],false],["text","\\n"],["block",["if"],[["get",["tokenRequestInProgressTimeLeftInSec"]]],null,0],["text","        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isPhoneNumberNotRegistered"]]],null,1]],"locals":[]},{"statements":[["block",["if"],[["get",["isPhoneNumberValid"]]],null,2]],"locals":[]},{"statements":[["text","        "],["open-element","p",[]],["static-attr","class","field-desc field-error-text"],["flush-element"],["append",["unknown",["tra","account_verification_phone_entry_already_registered_error"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isTokenRequestNotInProgress"]]],null,4]],"locals":[]},{"statements":[["block",["if"],[["get",["isPhoneNumberValid"]]],null,5]],"locals":[]},{"statements":[["text","        "],["open-element","p",[]],["static-attr","class","field-desc field-error-text"],["flush-element"],["append",["unknown",["tra","account_verification_phone_entry_not_valid_error"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isTokenRequestNotInProgress"]]],null,7]],"locals":[]},{"statements":[["block",["if"],[["get",["isPhoneNumberNotRegistered"]]],null,8]],"locals":[]},{"statements":[["text","        "],["open-element","p",[]],["static-attr","class","field-desc"],["flush-element"],["append",["unknown",["tra","account_verification_phone_entry_field_desc"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isTokenRequestNotInProgress"]]],null,10]],"locals":[]},{"statements":[["block",["if"],[["get",["isPhoneNumberNotRegistered"]]],null,11]],"locals":[]},{"statements":[["text","      2\\n"]],"locals":[]},{"statements":[["text","      3\\n"]],"locals":[]},{"statements":[["text","      1\\n"]],"locals":[]},{"statements":[["text","      2\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function(e) {
                return (0, s.default)(e), new a.default
            };
            var a = i(n(277)),
                s = i(n(281));

            function i(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = l(n(278)),
                i = n(279),
                r = l(n(280));

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const o = "/lol-gameflow/v1/session",
                c = "/lol-statstones/v1/vignette-notifications",
                d = a.SharedComponentsApi.getApi_UXSettings();
            t.default = class {
                constructor() {
                    this._binding = a.dataBinding.bindTo(a.socket), this._vignetteFactory = r.default, this._wasGameInProgress = !1, this._canShowVignette = !1, this._lowSpecEnabled = !1, this._vignettesData = [], this._modalManager = a.ModalManager, this._tra = a.tra, this._firstTouchModal, this._initDataBindings()
                }
                showFirstTouchModal() {
                    const e = {
                        type: "FirstTouch",
                        data: {
                            titleImage: "fe/lol-shared-components/images/icon-eternals.svg",
                            titleText: this._tra.get("eternals_first_touch_title"),
                            subtitleText: this._tra.get("eternals_first_touch_sub_title"),
                            features: [{
                                image: "fe/lol-shared-components/images/eternals-first-touch-1.jpg",
                                title: this._tra.get("eternals_first_touch_feature_left_title"),
                                description: this._tra.get("eternals_first_touch_feature_left_subtitle")
                            }, {
                                image: "fe/lol-shared-components/images/eternals-first-touch-2.jpg",
                                title: this._tra.get("eternals_first_touch_feature_center_title"),
                                description: this._tra.get("eternals_first_touch_feature_center_subtitle")
                            }, {
                                image: "fe/lol-shared-components/images/eternals-first-touch-3.jpg",
                                title: this._tra.get("eternals_first_touch_feature_right_title"),
                                description: this._tra.get("eternals_first_touch_feature_right_subtitle")
                            }],
                            buttonLabel: this._tra.get("eternals_first_touch_button_label")
                        }
                    };
                    this._firstTouchModal = this._modalManager.add(e), this._firstTouchModal.domNode.addEventListener("firstTouchDismissed", this._onDismiss.bind(this)), this._firstTouchModal.domNode.addEventListener("firstTouchAccept", this._onAccept.bind(this))
                }
                _initDataBindings() {
                    this._binding.addObserver("/lol-platform-config/v1/namespaces/Eternals/Enabled", this, (e => {
                        const t = e || !1;
                        this._toggleBindings(t)
                    }))
                }
                _toggleBindings(e) {
                    e ? (this._binding.addObserver(o, this, this._gameflowSessionUpdated), this._binding.addObserver(c, this, this._eternalsVignetteNotificationHandler), d.addObserver(this._uxSettingsUpdated.bind(this))) : (this._binding.removeObserver(o, this), this._binding.removeObserver(c, this), d.removeObserver(this._uxSettingsUpdated.bind(this)))
                }
                _uxSettingsUpdated(e) {
                    this._lowSpecEnabled = !e.largeAreaAnimationsEnabled
                }
                _triggerEternalsVignettes(e, t, n) {
                    for (let a = 0; a < t.length; ++a) {
                        const s = {
                            champInfo: n,
                            vignetteInfo: t[a],
                            lowSpecEnabled: this._lowSpecEnabled
                        };
                        this._vignetteFactory.triggerVignette(e, s)
                    }
                }
                _parseEternalsVignettes() {
                    const e = this._vignettesData.length;
                    for (let t = 0; t < e; ++t) {
                        const e = this._vignettesData[t].payload,
                            n = {
                                champId: e.champId,
                                champName: e.champName
                            },
                            a = e.masteryVignetteNotifications,
                            s = e.rekindledVignetteNotifications,
                            r = e.setCompleteVignetteNotifications;
                        this._triggerEternalsVignettes(i.VIGNETTE_TYPE.SET_COMPLETE, r, n), this._triggerEternalsVignettes(i.VIGNETTE_TYPE.MASTERY, a, n), this._triggerEternalsVignettes(i.VIGNETTE_TYPE.REKINDLED, s, n)
                    }
                    this._binding.delete("/lol-statstones/v1/vignette-notifications")
                }
                _eternalsVignetteNotificationHandler(e) {
                    this._vignettesData = e, this._canShowVignette && this._parseEternalsVignettes()
                }
                _gameflowSessionUpdated(e) {
                    e && e.phase && (this._wasGameInProgress = e.phase === s.default.IN_PROGRESS || this._wasGameInProgress, e.phase === s.default.NONE || e.phase === s.default.LOBBY ? (this._canShowVignette = !0, this._wasGameInProgress && (this._wasGameInProgress = !1, this._parseEternalsVignettes())) : this._canShowVignette = !1)
                }
                _close(e) {
                    this._modalManager.remove(e), this._cleanListeners(e.domNode)
                }
                _cleanListeners(e) {
                    e.removeEventListener("firstTouchDismissed", this._onDismiss), e.removeEventListener("firstTouchAccept", this._onAccept)
                }
                _onDismiss(e) {
                    e.preventDefault(), e.stopImmediatePropagation(), this._close(this._firstTouchModal)
                }
                _onAccept(e) {
                    e.preventDefault(), e.stopImmediatePropagation(), this._close(this._firstTouchModal), (0, a.getProvider)().getOptional("rcp-fe-lol-collections").then((e => e.navigateTo("champions", {
                        sortBy: "championMastery",
                        isUnownedShown: !0
                    })), (e => a.logger.error("Provider getOptional failure", e)))
                }
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                NONE: "None",
                IN_PROGRESS: "InProgress",
                LOBBY: "Lobby"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.VIGNETTE_TYPE = t.MAX_ETERNAL_LEVEL = t.BASE_ETERNAL_LEVEL = void 0;
            t.VIGNETTE_TYPE = {
                MASTERY: "Mastery",
                REKINDLED: "Rekindled"
            };
            t.BASE_ETERNAL_LEVEL = 0;
            t.MAX_ETERNAL_LEVEL = 3
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(279),
                s = {
                    triggerVignette(e, t) {
                        let n;
                        switch (e) {
                            case a.VIGNETTE_TYPE.MASTERY:
                                n = document.createElement("lol-eternals-mastery-vignette");
                                break;
                            case a.VIGNETTE_TYPE.REKINDLED:
                                n = document.createElement("lol-eternals-rekindled-vignette");
                                break;
                            default:
                                return null
                        }
                        return n.triggerCelebration(t), n
                    }
                };
            t.default = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function() {
                if (l) return;
                a.webComponents.registerCustomElementV1(s.default), a.webComponents.registerCustomElementV1(i.default), l = !0
            };
            var a = n(1),
                s = r(n(282)),
                i = r(n(287));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            let l = !1
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = n(283),
                i = n(284);
            class r extends a.webComponents.ShadowElement {
                templateMarkup() {
                    return n(285)
                }
                stylesheetMarkup() {
                    return n(286)
                }
                constructor() {
                    super(), this._selectors = {
                        masteryFlairText: ".flair-added-text",
                        champSplash: ".champ-splash",
                        masterySetTicksVideo: ".mastery-set-ticks.vfx",
                        masterySetTicksStatic: ".mastery-set-ticks.static"
                    }, this._frameCount = 0
                }
                _fillInData() {
                    return a.tra.ready().then((() => {
                        this._nextButtonText = a.tra.get("eternals_vignette_dismiss_button_text"), this._titleText = a.tra.get("eternals_vignette_mastery_title"), this._masteryFlairText = a.tra.get("eternals_vignette_mastery_flair_unlocked");
                        this.shadowRoot.querySelector(this._selectors.masteryFlairText).textContent = this._masteryFlairText
                    }))
                }
                _sendTelemetryEvent(e, t) {
                    const n = {
                        puuid: e,
                        type: s.TELEMETRY_EVENT_VIGNETTE_SEEN_TYPE,
                        setsCompleted: t.join(",")
                    };
                    a.Telemetry.sendCustomData(s.TELEMETRY_EVENT_NAME, n)
                }
                _handleFrame(e) {
                    if (++this._frameCount, this._frameCount > 45) {
                        const t = `/fe/lol-shared-components/audio/sfx-eternals-eog-mastery-${e}.ogg`;
                        return this._playMasteryVideo(), void(0, i.playSound)(t)
                    }
                    window.requestAnimationFrame((() => {
                        this._handleFrame(e)
                    }))
                }
                _playMasteryVideo() {
                    this.shadowRoot.querySelector(this._selectors.masterySetTicksVideo).play()
                }
                _decorateVignette(e) {
                    const t = this.shadowRoot.querySelector(this._selectors.champSplash),
                        n = this.shadowRoot.querySelector(this._selectors.masterySetTicksVideo),
                        a = this.shadowRoot.querySelector(this._selectors.masterySetTicksStatic),
                        s = e.lowSpecEnabled,
                        i = e.vignetteInfo.numSetsCompleted,
                        r = e.champInfo.champId,
                        l = `/fe/lol-shared-components/video/emote-celebration-${i}.webm`,
                        o = `url(/fe/lol-shared-components/images/emote-celebration-${i}.png)`,
                        c = `url(/lol-game-data/assets/v1/champion-splashes/uncentered/${r}/${r}000.jpg)`;
                    t.style.backgroundImage = c, s ? (n.classList.add("disabled"), a.style.backgroundImage = o) : (a.classList.add("disabled"), n.setAttribute("src", l))
                }
                triggerCelebration(e) {
                    const t = e.champInfo,
                        n = e.lowSpecEnabled,
                        s = e.vignetteInfo.numSetsCompleted,
                        i = e.vignetteInfo.completedSetUuids,
                        r = e.vignetteInfo.puuid;
                    return this._decorateVignette(e), this._fillInData().then((() => {
                        const e = {
                                domNode: this
                            },
                            l = {
                                data: {
                                    header: {
                                        title: this._titleText,
                                        titleSubtext: t.champName
                                    },
                                    nextButtonText: this._nextButtonText
                                },
                                height: "large",
                                content: e,
                                onShow: () => {
                                    n || window.requestAnimationFrame((() => {
                                        this._handleFrame(s)
                                    })), this._sendTelemetryEvent(r, i)
                                }
                            };
                        a.VignetteManager.add(l)
                    }))
                }
            }
            r.tagName = "lol-eternals-mastery-vignette";
            var l = r;
            t.default = l
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.TELEMETRY_EVENT_VIGNETTE_SEEN_TYPE = t.TELEMETRY_EVENT_NAME = void 0;
            t.TELEMETRY_EVENT_NAME = "eternals_telemetry_event";
            t.TELEMETRY_EVENT_VIGNETTE_SEEN_TYPE = "series_rekindled_vignette_seen"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.playSound = function(e) {
                if (!1 === e) return;
                a.Audio.getChannel(s).createSound(e).play()
            };
            var a = n(1);
            const s = "sfx-ui"
        }, e => {
            "use strict";
            e.exports = '<template id="lol-eternals-template-mastery-vignette">\r\n  <div class="lol-eternals-mastery-vignette">\r\n    <div class="champ-splash"></div>\r\n    <div class="mastery-wrapper">\r\n      <div class="mastery-icon"></div>\r\n      <span class="flair-added-text"></span>\r\n    </div>\r\n    <div class="mastery-set-ticks static"></div>\r\n    <uikit-video\r\n      class="mastery-set-ticks vfx"\r\n      src="">\r\n    </uikit-video>\r\n  </div>\r\n</template>'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7)(a);
            s.push([e.id, '.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text {\n  font-family: var(--font-display);\n}\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text {\n  -webkit-user-select: none;\n}\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text {\n  font-kerning: normal;\n  -webkit-font-feature-settings: "kern" 1;\n  -webkit-font-smoothing: antialiased;\n}\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text {\n  text-transform: uppercase;\n}\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text:lang(ko-kr),\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text:lang(ja-jp),\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text:lang(tr-tr),\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text:lang(el-gr),\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text:lang(th-th),\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text:lang(zh-tw) {\n  text-transform: none;\n}\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text {\n  color: #f0e6d2;\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 28px;\n  letter-spacing: 0.05em;\n}\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text:lang(ar-ae) {\n  letter-spacing: 0;\n}\n.lol-eternals-mastery-vignette {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 1280px;\n  height: 510px;\n  justify-content: center;\n}\n.lol-eternals-mastery-vignette .disabled {\n  display: none;\n}\n.lol-eternals-mastery-vignette .mastery-wrapper {\n  display: flex;\n  width: 420px;\n  justify-content: flex-start;\n  position: absolute;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  left: 430px;\n  top: 176px;\n}\n.lol-eternals-mastery-vignette .mastery-wrapper .mastery-icon {\n  width: 211px;\n  height: 190px;\n  background-image: url("/fe/lol-shared-components/images/eternals-mastery-emblem.png");\n  background-size: cover;\n  margin-bottom: 28px;\n}\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text {\n  color: #c8aa6e;\n  width: 640px;\n}\n.lol-eternals-mastery-vignette .champ-splash {\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n}\n.lol-eternals-mastery-vignette .champ-splash:after {\n  position: absolute;\n  content: "";\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0.8;\n  background-color: #010a13;\n}\n.lol-eternals-mastery-vignette .mastery-set-ticks {\n  position: absolute;\n  top: -118px;\n  left: 384px;\n  width: 512px;\n  height: 464px;\n}\n.lol-eternals-mastery-vignette .mastery-set-ticks.static {\n  background-size: contain;\n  width: 158px;\n  height: 142px;\n  top: 56px;\n  left: 562px;\n}\n.lol-eternals-mastery-vignette .mastery-set-ticks video {\n  width: 512px;\n}\n', "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/eternals/addon/app/elements/eternals-mastery-vignette/style.styl"],
                names: [],
                mappings: "AAAA;EACE,gCAAgC;AAClC;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,oBAAoB;EACpB,uCAAuC;EACvC,mCAAmC;AACrC;AACA;EACE,yBAAyB;AAC3B;AACA;;;;;;EAME,oBAAoB;AACtB;AACA;EACE,cAAc;EACd,eAAe;EACf,gBAAgB;EAChB,iBAAiB;EACjB,sBAAsB;AACxB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,aAAa;EACb,aAAa;EACb,uBAAuB;AACzB;AACA;EACE,aAAa;AACf;AACA;EACE,aAAa;EACb,YAAY;EACZ,2BAA2B;EAC3B,kBAAkB;EAClB,sBAAsB;EACtB,mBAAmB;EACnB,kBAAkB;EAClB,WAAW;EACX,UAAU;AACZ;AACA;EACE,YAAY;EACZ,aAAa;EACb,qFAAqF;EACrF,sBAAsB;EACtB,mBAAmB;AACrB;AACA;EACE,cAAc;EACd,YAAY;AACd;AACA;EACE,kBAAkB;EAClB,MAAM;EACN,WAAW;EACX,YAAY;EACZ,sBAAsB;AACxB;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,MAAM;EACN,OAAO;EACP,WAAW;EACX,YAAY;EACZ,YAAY;EACZ,yBAAyB;AAC3B;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,WAAW;EACX,YAAY;EACZ,aAAa;AACf;AACA;EACE,wBAAwB;EACxB,YAAY;EACZ,aAAa;EACb,SAAS;EACT,WAAW;AACb;AACA;EACE,YAAY;AACd",
                sourcesContent: ['.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text {\n  font-family: var(--font-display);\n}\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text {\n  -webkit-user-select: none;\n}\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text {\n  font-kerning: normal;\n  -webkit-font-feature-settings: "kern" 1;\n  -webkit-font-smoothing: antialiased;\n}\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text {\n  text-transform: uppercase;\n}\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text:lang(ko-kr),\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text:lang(ja-jp),\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text:lang(tr-tr),\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text:lang(el-gr),\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text:lang(th-th),\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text:lang(zh-tw) {\n  text-transform: none;\n}\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text {\n  color: #f0e6d2;\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 28px;\n  letter-spacing: 0.05em;\n}\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text:lang(ar-ae) {\n  letter-spacing: 0;\n}\n.lol-eternals-mastery-vignette {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 1280px;\n  height: 510px;\n  justify-content: center;\n}\n.lol-eternals-mastery-vignette .disabled {\n  display: none;\n}\n.lol-eternals-mastery-vignette .mastery-wrapper {\n  display: flex;\n  width: 420px;\n  justify-content: flex-start;\n  position: absolute;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  left: 430px;\n  top: 176px;\n}\n.lol-eternals-mastery-vignette .mastery-wrapper .mastery-icon {\n  width: 211px;\n  height: 190px;\n  background-image: url("/fe/lol-shared-components/images/eternals-mastery-emblem.png");\n  background-size: cover;\n  margin-bottom: 28px;\n}\n.lol-eternals-mastery-vignette .mastery-wrapper .flair-added-text {\n  color: #c8aa6e;\n  width: 640px;\n}\n.lol-eternals-mastery-vignette .champ-splash {\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n}\n.lol-eternals-mastery-vignette .champ-splash:after {\n  position: absolute;\n  content: "";\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0.8;\n  background-color: #010a13;\n}\n.lol-eternals-mastery-vignette .mastery-set-ticks {\n  position: absolute;\n  top: -118px;\n  left: 384px;\n  width: 512px;\n  height: 464px;\n}\n.lol-eternals-mastery-vignette .mastery-set-ticks.static {\n  background-size: contain;\n  width: 158px;\n  height: 142px;\n  top: 56px;\n  left: 562px;\n}\n.lol-eternals-mastery-vignette .mastery-set-ticks video {\n  width: 512px;\n}\n'],
                sourceRoot: ""
            }]), e.exports = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = n(288),
                i = n(279),
                r = n(284);
            const l = "webm";
            class o extends a.webComponents.ShadowElement {
                templateMarkup() {
                    return n(289)
                }
                stylesheetMarkup() {
                    return n(290)
                }
                constructor() {
                    super(), this._selectors = {
                        backgroundElelment: ".eternals-background",
                        personalBestText: ".personal-best-text",
                        championIcon: ".champ-icon",
                        eternalImage: ".eternal-image",
                        eternalName: ".eternal-name",
                        rekindledBoltIntroVideo: ".rekindled-bolt.intro",
                        rekindledBoltOutroVideo: ".rekindled-bolt.outro"
                    }, this._frameCount = 0
                }
                _fillInTranslations() {
                    return a.tra.ready().then((() => {
                        this._nextButtonText = a.tra.get("eternals_vignette_dismiss_button_text"), this._titleText = a.tra.get("eternals_vignette_rekindled_title"), this._personaBestText = a.tra.get("eternals_vignette_personal_best_unlocked");
                        this.shadowRoot.querySelector(this._selectors.personalBestText).innerHTML = this._personaBestText
                    }))
                }
                _playRekindledOutroVideo() {
                    const e = this.shadowRoot.querySelector(this._selectors.rekindledBoltOutroVideo);
                    e.style.opacity = 1, e.play()
                }
                _swapEternalImage() {
                    this.shadowRoot.querySelector(this._selectors.eternalImage).style.backgroundImage = `url(${(0,s.eternalIconImagePath)(this._category,i.MAX_ETERNAL_LEVEL)}`
                }
                _swapEternalVideo(e) {
                    e.style.opacity = 0, this._swapEternalImage(), this._playRekindledOutroVideo()
                }
                _playRekindledVideo() {
                    const e = this.shadowRoot.querySelector(this._selectors.rekindledBoltIntroVideo);
                    return e.playWithEndedCallback((() => {
                        this._swapEternalVideo(e)
                    }))
                }
                _playRekindledSound(e) {
                    e ? (0, r.playSound)("/fe/lol-shared-components/audio/sfx-eternals-eog-set-rekindled-unique.ogg") : (0, r.playSound)("/fe/lol-shared-components/audio/sfx-eternals-eog-set-rekindled-common.ogg")
                }
                _getEternalVideoPath(e, t) {
                    return e ? `/fe/lol-shared-components/video/rekindled-unique-bolt-${t}.${l}` : `/fe/lol-shared-components/video/rekindled-common-bolt-${t}.${l}`
                }
                _decorateVignette(e) {
                    const t = e.vignetteInfo,
                        n = e.lowSpecEnabled,
                        a = this.shadowRoot.querySelector(this._selectors.championIcon),
                        r = this.shadowRoot.querySelector(this._selectors.eternalImage),
                        l = this.shadowRoot.querySelector(this._selectors.eternalName),
                        o = this.shadowRoot.querySelector(this._selectors.rekindledBoltIntroVideo),
                        c = this.shadowRoot.querySelector(this._selectors.rekindledBoltOutroVideo),
                        d = this.shadowRoot.querySelector(this._selectors.backgroundElelment);
                    this._category = t.statstone.category;
                    const u = `statstone-${(0,s.stripRarityFromCategory)(this._category)}`;
                    t.statstone.isEpic && (o.classList.add("unique"), c.classList.add("unique"), r.classList.add("unique"));
                    let m = i.BASE_ETERNAL_LEVEL;
                    if (n) o.classList.add("disabled"), c.classList.add("disabled"), m = i.MAX_ETERNAL_LEVEL;
                    else {
                        const e = this._getEternalVideoPath(t.statstone.isEpic, "intro");
                        o.setAttribute("src", e), o.classList.add(u);
                        const n = this._getEternalVideoPath(t.statstone.isEpic, "outro");
                        c.setAttribute("src", n), c.classList.add(u), o.preload(), c.preload()
                    }
                    d.classList.add(u), a.src = t.portraitPath, r.style.backgroundImage = `url(${(0,s.eternalIconImagePath)(this._category,m)}`, l.innerHTML = t.statstone.statstoneName
                }
                triggerCelebration(e) {
                    const t = e.champInfo,
                        n = e.lowSpecEnabled,
                        s = e.vignetteInfo.statstone.isEpic;
                    return this._decorateVignette(e), this._fillInTranslations().then((() => {
                        const e = {
                                domNode: this
                            },
                            i = {
                                data: {
                                    header: {
                                        title: this._titleText,
                                        titleSubtext: t.champName
                                    },
                                    nextButtonText: this._nextButtonText
                                },
                                height: "large",
                                content: e,
                                onShow: () => {
                                    n || (this._playRekindledVideo(), this._playRekindledSound(s))
                                }
                            };
                        a.VignetteManager.add(i)
                    }))
                }
            }
            o.tagName = "lol-eternals-rekindled-vignette";
            var c = o;
            t.default = c
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.eternalIconImagePath = function(e, t) {
                return `/lol-game-data/assets/ASSETS/Loadouts/StatStones/Categories/LCU/SS_Icon_${e}_${t}.png`
            }, t.stripRarityFromCategory = function(e) {
                return e.replace(/_.*/, "").toLowerCase()
            }
        }, e => {
            "use strict";
            e.exports = '<template id="lol-eternals-template-rekindled-vignette">\r\n  <div class="lol-eternals-rekindled-vignette">\r\n    <div class="eternals-background"></div>\r\n    <div class="eternals-statue-wrapper">\r\n      <div class="eternal-image"></div>\r\n      <uikit-video \r\n        class="rekindled-bolt common intro"\r\n        src="">\r\n      </uikit-video>\r\n      <uikit-video \r\n        class="rekindled-bolt common outro"\r\n        src="">\r\n      </uikit-video>\r\n    </div>\r\n    <div class="eternals-champion-wrapper">\r\n      <img class="champ-icon" />\r\n      <div class="eternal-information">\r\n        <div class="eternal-name"></div>\r\n        <div class="personal-best-wrapper">\r\n          <div class="personal-best-icon"></div>\r\n          <div class="personal-best-text"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>'
        }, (e, t, n) => {
            var a = n(6),
                s = n(7)(a);
            s.push([e.id, '.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name,\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .personal-best-wrapper .personal-best-text {\n  font-family: var(--font-display);\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name,\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .personal-best-wrapper .personal-best-text {\n  -webkit-user-select: none;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name,\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .personal-best-wrapper .personal-best-text {\n  font-kerning: normal;\n  -webkit-font-feature-settings: "kern" 1;\n  -webkit-font-smoothing: antialiased;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name {\n  text-transform: uppercase;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name:lang(ko-kr),\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name:lang(ja-jp),\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name:lang(tr-tr),\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name:lang(el-gr),\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name:lang(th-th),\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name:lang(zh-tw) {\n  text-transform: none;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name {\n  color: #f0e6d2;\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 28px;\n  letter-spacing: 0.05em;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name:lang(ar-ae) {\n  letter-spacing: 0;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .personal-best-wrapper .personal-best-text {\n  color: #a09b8c;\n  font-size: 16px;\n  font-weight: normal;\n  line-height: 24px;\n  letter-spacing: 0.05em;\n  -webkit-font-smoothing: subpixel-antialiased;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .personal-best-wrapper .personal-best-text:lang(ar-ae) {\n  letter-spacing: 0;\n}\n.lol-eternals-rekindled-vignette {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 1280px;\n  height: 510px;\n  justify-content: center;\n}\n.lol-eternals-rekindled-vignette .eternals-background {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: url("/fe/lol-shared-components/images/smoke-bg.png");\n  background-size: cover;\n  top: 0;\n}\n.lol-eternals-rekindled-vignette .eternals-background.statstone-cc {\n  -webkit-filter: hue-rotate(207deg);\n}\n.lol-eternals-rekindled-vignette .eternals-background.statstone-defense {\n  -webkit-filter: hue-rotate(50deg);\n}\n.lol-eternals-rekindled-vignette .eternals-background.statstone-support {\n  -webkit-filter: hue-rotate(135deg);\n}\n.lol-eternals-rekindled-vignette .eternals-background.statstone-offense {\n  -webkit-filter: hue-rotate(0deg);\n}\n.lol-eternals-rekindled-vignette .eternals-background.statstone-style {\n  -webkit-filter: hue-rotate(289deg);\n}\n.lol-eternals-rekindled-vignette .eternals-background.statstone-goal {\n  -webkit-filter: hue-rotate(265deg);\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper {\n  display: flex;\n  position: relative;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  padding-bottom: 30px;\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .hidden {\n  display: none;\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt {\n  position: absolute;\n  left: 496px;\n  width: 286px;\n  top: -120px;\n  transform: scale(2);\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt video {\n  width: 286px;\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.outro {\n  opacity: 0;\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.unique {\n  width: 350px;\n  top: -123px;\n  left: 466px;\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.unique video {\n  width: 350px;\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.statstone-cc {\n  -webkit-filter: hue-rotate(207deg);\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.statstone-defense {\n  -webkit-filter: hue-rotate(50deg);\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.statstone-support {\n  -webkit-filter: hue-rotate(135deg);\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.statstone-offense {\n  -webkit-filter: hue-rotate(0deg);\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.statstone-style {\n  -webkit-filter: hue-rotate(289deg);\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.statstone-goal {\n  -webkit-filter: hue-rotate(265deg);\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .eternal-image {\n  width: 286px;\n  height: 286px;\n  transition: background-image 0.1s ease-in-out;\n  background-size: cover;\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .eternal-image.unique {\n  width: 350px;\n  height: 350px;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .champ-icon {\n  border-radius: 50%;\n  border-color: #c89b3c;\n  border-width: 2px;\n  border-style: solid;\n  width: 63px;\n  height: 63px;\n  margin-right: 14px;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .personal-best-wrapper {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .personal-best-wrapper .personal-best-text {\n  color: #c89b3c;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .personal-best-wrapper .personal-best-icon {\n  width: 18px;\n  height: 18px;\n  background-size: 18px 18px;\n  margin-right: 11px;\n  background-image: url("/fe/lol-shared-components/images/personal-best-icon.png");\n}\n', "", {
                version: 3,
                sources: ["webpack://./fe/rcp-fe-lol-shared-components/src/lib/eternals/addon/app/elements/eternals-rekindled-vignette/style.styl"],
                names: [],
                mappings: "AAAA;;EAEE,gCAAgC;AAClC;AACA;;EAEE,yBAAyB;AAC3B;AACA;;EAEE,oBAAoB;EACpB,uCAAuC;EACvC,mCAAmC;AACrC;AACA;EACE,yBAAyB;AAC3B;AACA;;;;;;EAME,oBAAoB;AACtB;AACA;EACE,cAAc;EACd,eAAe;EACf,gBAAgB;EAChB,iBAAiB;EACjB,sBAAsB;AACxB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,cAAc;EACd,eAAe;EACf,mBAAmB;EACnB,iBAAiB;EACjB,sBAAsB;EACtB,4CAA4C;AAC9C;AACA;EACE,iBAAiB;AACnB;AACA;EACE,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,aAAa;EACb,aAAa;EACb,uBAAuB;AACzB;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,sEAAsE;EACtE,sBAAsB;EACtB,MAAM;AACR;AACA;EACE,kCAAkC;AACpC;AACA;EACE,iCAAiC;AACnC;AACA;EACE,kCAAkC;AACpC;AACA;EACE,gCAAgC;AAClC;AACA;EACE,kCAAkC;AACpC;AACA;EACE,kCAAkC;AACpC;AACA;EACE,aAAa;EACb,kBAAkB;EAClB,uBAAuB;EACvB,mBAAmB;EACnB,sBAAsB;EACtB,oBAAoB;AACtB;AACA;EACE,aAAa;AACf;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,WAAW;EACX,mBAAmB;AACrB;AACA;EACE,YAAY;AACd;AACA;EACE,UAAU;AACZ;AACA;EACE,YAAY;EACZ,WAAW;EACX,WAAW;AACb;AACA;EACE,YAAY;AACd;AACA;EACE,kCAAkC;AACpC;AACA;EACE,iCAAiC;AACnC;AACA;EACE,kCAAkC;AACpC;AACA;EACE,gCAAgC;AAClC;AACA;EACE,kCAAkC;AACpC;AACA;EACE,kCAAkC;AACpC;AACA;EACE,YAAY;EACZ,aAAa;EACb,6CAA6C;EAC7C,sBAAsB;AACxB;AACA;EACE,YAAY;EACZ,aAAa;AACf;AACA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;AACzB;AACA;EACE,kBAAkB;EAClB,qBAAqB;EACrB,iBAAiB;EACjB,mBAAmB;EACnB,WAAW;EACX,YAAY;EACZ,kBAAkB;AACpB;AACA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;AACrB;AACA;EACE,cAAc;AAChB;AACA;EACE,WAAW;EACX,YAAY;EACZ,0BAA0B;EAC1B,kBAAkB;EAClB,gFAAgF;AAClF",
                sourcesContent: ['.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name,\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .personal-best-wrapper .personal-best-text {\n  font-family: var(--font-display);\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name,\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .personal-best-wrapper .personal-best-text {\n  -webkit-user-select: none;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name,\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .personal-best-wrapper .personal-best-text {\n  font-kerning: normal;\n  -webkit-font-feature-settings: "kern" 1;\n  -webkit-font-smoothing: antialiased;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name {\n  text-transform: uppercase;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name:lang(ko-kr),\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name:lang(ja-jp),\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name:lang(tr-tr),\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name:lang(el-gr),\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name:lang(th-th),\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name:lang(zh-tw) {\n  text-transform: none;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name {\n  color: #f0e6d2;\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 28px;\n  letter-spacing: 0.05em;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .eternal-information .eternal-name:lang(ar-ae) {\n  letter-spacing: 0;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .personal-best-wrapper .personal-best-text {\n  color: #a09b8c;\n  font-size: 16px;\n  font-weight: normal;\n  line-height: 24px;\n  letter-spacing: 0.05em;\n  -webkit-font-smoothing: subpixel-antialiased;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .personal-best-wrapper .personal-best-text:lang(ar-ae) {\n  letter-spacing: 0;\n}\n.lol-eternals-rekindled-vignette {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 1280px;\n  height: 510px;\n  justify-content: center;\n}\n.lol-eternals-rekindled-vignette .eternals-background {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: url("/fe/lol-shared-components/images/smoke-bg.png");\n  background-size: cover;\n  top: 0;\n}\n.lol-eternals-rekindled-vignette .eternals-background.statstone-cc {\n  -webkit-filter: hue-rotate(207deg);\n}\n.lol-eternals-rekindled-vignette .eternals-background.statstone-defense {\n  -webkit-filter: hue-rotate(50deg);\n}\n.lol-eternals-rekindled-vignette .eternals-background.statstone-support {\n  -webkit-filter: hue-rotate(135deg);\n}\n.lol-eternals-rekindled-vignette .eternals-background.statstone-offense {\n  -webkit-filter: hue-rotate(0deg);\n}\n.lol-eternals-rekindled-vignette .eternals-background.statstone-style {\n  -webkit-filter: hue-rotate(289deg);\n}\n.lol-eternals-rekindled-vignette .eternals-background.statstone-goal {\n  -webkit-filter: hue-rotate(265deg);\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper {\n  display: flex;\n  position: relative;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  padding-bottom: 30px;\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .hidden {\n  display: none;\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt {\n  position: absolute;\n  left: 496px;\n  width: 286px;\n  top: -120px;\n  transform: scale(2);\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt video {\n  width: 286px;\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.outro {\n  opacity: 0;\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.unique {\n  width: 350px;\n  top: -123px;\n  left: 466px;\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.unique video {\n  width: 350px;\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.statstone-cc {\n  -webkit-filter: hue-rotate(207deg);\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.statstone-defense {\n  -webkit-filter: hue-rotate(50deg);\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.statstone-support {\n  -webkit-filter: hue-rotate(135deg);\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.statstone-offense {\n  -webkit-filter: hue-rotate(0deg);\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.statstone-style {\n  -webkit-filter: hue-rotate(289deg);\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .rekindled-bolt.statstone-goal {\n  -webkit-filter: hue-rotate(265deg);\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .eternal-image {\n  width: 286px;\n  height: 286px;\n  transition: background-image 0.1s ease-in-out;\n  background-size: cover;\n}\n.lol-eternals-rekindled-vignette .eternals-statue-wrapper .eternal-image.unique {\n  width: 350px;\n  height: 350px;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .champ-icon {\n  border-radius: 50%;\n  border-color: #c89b3c;\n  border-width: 2px;\n  border-style: solid;\n  width: 63px;\n  height: 63px;\n  margin-right: 14px;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .personal-best-wrapper {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .personal-best-wrapper .personal-best-text {\n  color: #c89b3c;\n}\n.lol-eternals-rekindled-vignette .eternals-champion-wrapper .personal-best-wrapper .personal-best-icon {\n  width: 18px;\n  height: 18px;\n  background-size: 18px 18px;\n  margin-right: 11px;\n  background-image: url("/fe/lol-shared-components/images/personal-best-icon.png");\n}\n'],
                sourceRoot: ""
            }]), e.exports = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = S(n(292)),
                s = S(n(296)),
                i = S(n(299)),
                r = S(n(302)),
                l = S(n(306)),
                o = S(n(314)),
                c = S(n(334)),
                d = S(n(337)),
                u = S(n(340)),
                m = S(n(344)),
                p = S(n(375)),
                h = S(n(379)),
                g = S(n(382)),
                f = S(n(385)),
                _ = S(n(388)),
                A = S(n(392)),
                b = S(n(395)),
                v = S(n(398)),
                E = S(n(401)),
                y = S(n(404)),
                C = S(n(407)),
                k = S(n(410)),
                x = S(n(418)),
                T = S(n(421)),
                w = S(n(424));

            function S(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            var L = {
                ArrowFooterComponent: a.default,
                ButtonMaskIconComponent: s.default,
                CallToActionPipComponent: i.default,
                ClickableIconButtonComponent: r.default,
                CountdownWidgetComponent: l.default,
                EmberCollectionApi: o.default,
                FramedIconButtonComponent: c.default,
                GameIdClipboardCopyComponent: d.default,
                HextechLoadingAnimationComponent: u.default,
                ManagedIframeComponent: m.default,
                ParticleGlowOverlayComponent: p.default,
                PerkPageTooltipComponent: h.default,
                PlayerRestrictionInfoComponent: g.default,
                PlayerNameComponent: f.default,
                PostgameReportModal: _.default,
                RemainingTimeTextComponent: A.default,
                RenderTelemetrySenderComponent: b.default,
                SkinChromaButtonComponent: E.default,
                SkinChromaModalComponent: y.default,
                SkinPurchaseButtonComponent: v.default,
                SkinQuestFormModalComponent: C.default,
                VerbalAbuseRemedyModalComponent: k.default,
                ChatChannelSelectorComponent: x.default,
                PlayerBlockSelectorComponent: T.default,
                PlayerBlockSelectionComponent: w.default
            };
            t.default = L
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = r(n(293)),
                i = r(n(294));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            n(295);
            var l = a.Ember.Component.extend(i.default, {
                layout: s.default,
                classNames: ["arrow-footer"],
                removeCloseButton: !1,
                didInsertElement() {
                    this._super(...arguments);
                    const e = this.confirmButtonElement();
                    e && (this.get("confirmButtonHoverSound") && this.addHoverSound(e, this.get("confirmButtonHoverSound"), "confirmButtonDisabled"), this.get("confirmButtonClickSound") && this.addClickSound(e, this.get("confirmButtonClickSound"), "confirmButtonDisabled"), this.attachConfirmButtonEvents(e));
                    const t = this.element.querySelector("button.close");
                    t && (this.get("closeButtonHoverSound") && this.addHoverSound(t, this.get("closeButtonHoverSound"), "closeButtonDisabled"), this.get("closeButtonClickSound") && this.addClickSound(t, this.get("closeButtonClickSound"), "closeButtonDisabled"))
                },
                willDestroyElement() {
                    this._super(...arguments);
                    const e = this.get("confirmButtonEventCallback"),
                        t = this.confirmButtonElement();
                    if (!t || !e) return;
                    this.removeHoverSound(t), this.removeClickSound(t), t.removeEventListener("mouseenter", e), t.removeEventListener("mouseleave", e), t.removeEventListener("click", e), this.set("confirmButtonEventCallback", null);
                    const n = this.element.querySelector("button.close");
                    n && (this.removeHoverSound(n), this.removeClickSound(n))
                },
                attachConfirmButtonEvents: function(e) {
                    if (!e) return;
                    if (!e.querySelector("lol-uikit-animated-arrow-overlay")) return;
                    const t = this.confirmButtonMouseCallback.bind(this);
                    this.set("confirmButtonEventCallback", t), e.addEventListener("mouseenter", t), e.addEventListener("mouseleave", t), e.addEventListener("click", t)
                },
                confirmButtonDisabledObserver: a.Ember.on("didInsertElement", a.Ember.observer("confirmButtonDisabled", (function() {
                    a.Ember.run.once(this, (function() {
                        let e = "";
                        this.get("confirmButtonDisabled") || (e = "init"), this.confirmButtonOverlayUpdateState(e)
                    }))
                }))),
                confirmButtonTextObserver: a.Ember.on("didInsertElement", a.Ember.observer("confirmButtonText", (function() {
                    a.Ember.run.next(this, (function() {
                        const e = this.confirmButtonOverlayElement();
                        e && e.redrawPath()
                    }))
                }))),
                animationsEnabledObserver: a.Ember.on("didInsertElement", a.Ember.observer("animationsEnabled", (function() {
                    a.Ember.run.once(this, (function() {
                        const e = this.confirmButtonOverlayElement();
                        if (!e) return;
                        this.get("animationsEnabled") ? e.removeAttribute("prevent-animation") : e.setAttribute("prevent-animation", !0)
                    }))
                }))),
                disabledStyle: a.Ember.computed("useCompletedDisabledState", (function() {
                    return this.get("useCompletedDisabledState") ? "completed" : "disabled"
                })),
                confirmButtonMouseCallback: function(e) {
                    let t = "";
                    switch (e.type) {
                        case "mouseenter":
                            t = "hover";
                            break;
                        case "click":
                            t = "click"
                    }
                    this.confirmButtonOverlayUpdateState(t)
                },
                confirmButtonOverlayUpdateState: function(e) {
                    const t = this.confirmButtonOverlayElement();
                    if (!t) return;
                    this.get("confirmButtonDisabled") && (e = ""), t.setAttribute("state", e)
                },
                confirmButtonElement: function() {
                    return this.element ? this.element.querySelector("button.confirm") : null
                },
                confirmButtonOverlayElement: function() {
                    return this.element ? this.element.querySelector("button.confirm lol-uikit-animated-arrow-overlay") : null
                },
                animationsEnabled: !0,
                closeButtonType: "close",
                confirmButtonDisabled: !1,
                closeButtonDisabled: !1,
                confirmButtonShowTooltip: !1,
                confirmButtonText: "",
                confirmButtonTooltipText: "",
                confirmButtonTooltipType: "tooltip-small",
                closeButtonShowTooltip: !1,
                closeButtonTooltipText: "",
                closeButtonTooltipType: "tooltip-small",
                useCompletedDisabledState: !1,
                confirmButtonEventCallback: null,
                actions: {
                    confirmButton: function() {
                        this.get("confirmButtonDisabled") || this.sendAction("confirmButtonClicked")
                    },
                    closeButton: function() {
                        this.get("closeButtonDisabled") || this.sendAction("closeButtonClicked")
                    }
                }
            });
            t.default = l
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "J+Rcuhkr",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\arrow-footer\\\\addon\\\\templates\\\\components\\\\arrow-footer.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\arrow-footer\\\\addon\\\\components\\\\arrow-footer.js\\" "],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["arrow-footer ",["helper",["if"],[["get",["removeCloseButton"]],"hide-close-button"],null]," "]]],["static-attr","version","7.13"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","arrow-footer-decoration"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","arrow-footer-decoration-child arrow-footer-decoration-left"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","confirm-button-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","border-bg"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","left-border-bg"],["flush-element"],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","middle-border-bg"],["flush-element"],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","right-border-bg"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","button",[]],["dynamic-attr","class",["concat",["confirm ",["helper",["if"],[["get",["confirmButtonDisabled"]],["get",["disabledStyle"]]],null]]]],["modifier",["action"],[["get",[null]],"confirmButton"]],["flush-element"],["text","\\n        "],["open-element","lol-uikit-animated-arrow-overlay",[]],["static-attr","state","click"],["dynamic-attr","single-carot",["concat",[["unknown",["removeCloseButton"]]]]],["flush-element"],["text","\\n        "],["close-element"],["text","\\n"],["block",["if"],[["get",["confirmButtonShowTooltip"]]],null,3],["text","        "],["open-element","div",[]],["static-attr","class","left-confirm"],["flush-element"],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","middle-confirm"],["flush-element"],["text","\\n          "],["append",["unknown",["confirmButtonText"]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","right-confirm"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","button",[]],["dynamic-attr","class",["concat",["close ",["helper",["if"],[["get",["closeButtonDisabled"]],["get",["disabledStyle"]]],null]]]],["dynamic-attr","type",["concat",[["unknown",["closeButtonType"]]]]],["modifier",["action"],[["get",[null]],"closeButton"]],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","close-icon"],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["closeButtonShowTooltip"]]],null,1],["text","      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","arrow-footer-decoration"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","arrow-footer-decoration-child arrow-footer-decoration-right"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","            "],["open-element","lol-uikit-content-block",[]],["dynamic-attr","type",["concat",[["unknown",["closeButtonTooltipType"]]]]],["flush-element"],["text","\\n              "],["open-element","p",[]],["flush-element"],["text","\\n                "],["append",["unknown",["closeButtonTooltipText"]],false],["text","\\n              "],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition"],["top"]],0]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-content-block",[]],["dynamic-attr","type",["concat",[["unknown",["confirmButtonTooltipType"]]]]],["flush-element"],["text","\\n              "],["open-element","p",[]],["flush-element"],["text","\\n                "],["append",["unknown",["confirmButtonTooltipText"]],false],["text","\\n              "],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition"],["top"]],2]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = a.Audio.getChannel("sfx-ui");
            var i = a.Ember.Mixin.create({
                init() {
                    this._super(...arguments), this.listenersByEvents = new Map, this.listenersByEvents.set("mouseover", new Map), this.listenersByEvents.set("click", new Map)
                },
                willDestroy() {
                    this._super(...arguments), this.listenersByEvents.set("mouseover", null), this.listenersByEvents.set("click", null), this.listenersByEvents = null
                },
                playSound: e => (s.playSound(e), 0),
                playSoundIfNotDisabled(e, t) {
                    e && this.get(e) || this.playSound(t)
                },
                addListenerToMap(e, t, n) {
                    const a = this.listenersByEvents.get(e);
                    if (a.has(t)) {
                        this.callbacksByElement.get(t).push(n)
                    } else a.set(t, [n])
                },
                addHoverSound(e, t, n) {
                    const a = this.playSoundIfNotDisabled.bind(this, n, t);
                    this.addListenerToMap("mouseover", e, a), e.addEventListener("mouseover", a)
                },
                addClickSound(e, t, n) {
                    const a = this.playSoundIfNotDisabled.bind(this, n, t);
                    this.addListenerToMap("click", e, a), e.addEventListener("click", a)
                },
                removeHoverSound(e) {
                    const t = this.listenersByEvents.get("mouseover").get(e);
                    t && t.length && t.forEach((t => {
                        e.removeEventListener("mouseover", t), t = null
                    }))
                },
                removeClickSound(e) {
                    const t = this.listenersByEvents.get("click").get(e);
                    t && t.length && t.forEach((t => {
                        e.removeEventListener("click", t), t = null
                    }))
                }
            });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(297)) && a.__esModule ? a : {
                    default: a
                };
            n(298);
            var r = s.Ember.Component.extend({
                classNames: ["button-mask-icon-component"],
                layout: i.default,
                iconStyle: s.Ember.computed("iconPath", "widthStyle", "heightStyle", (function() {
                    const e = `width: ${this.get("widthStyle")||"100%"}`,
                        t = `height: ${this.get("heightStyle")||"100%"}`;
                    return `-webkit-mask-image: url(${this.get("iconPath")}); ${e}; ${t}`
                }))
            });
            t.default = r
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "ok9dBexw",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\framed-icon-button\\\\addon\\\\templates\\\\button-mask-icon.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\framed-icon-button\\\\addon\\\\styles\\\\button-mask-icon.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","button-mask-icon"],["dynamic-attr","style",["unknown",["iconStyle"]],null],["flush-element"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(300)) && a.__esModule ? a : {
                    default: a
                };
            n(301);
            var r = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["call-to-action-pip"],
                didRender() {
                    this._super(...arguments);
                    const e = this.element.querySelector("uikit-state-machine");
                    e.activateState(), e.updateCase()
                }
            });
            t.default = r
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "oH4ail6y",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\call-to-action-pip\\\\addon\\\\templates\\\\call-to-action-pip.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\call-to-action-pip\\\\addon\\\\styles\\\\call-to-action-pip.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","uikit-state-machine",[]],["static-attr","state","loading"],["flush-element"],["text","\\n  "],["open-element","uikit-states",[]],["flush-element"],["text","\\n    "],["open-element","uikit-state",[]],["static-attr","name","loading"],["flush-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","intro"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-media",[]],["static-attr","selector",".pip-cta-intro"],["static-attr","can-play",""],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","uikit-state",[]],["static-attr","name","intro"],["flush-element"],["text","\\n      "],["open-element","uikit-behavior-media",[]],["static-attr","selector",".pip-cta-intro"],["static-attr","playing",""],["flush-element"],["close-element"],["text","\\n      "],["open-element","uikit-transition",[]],["static-attr","next-state","loop"],["flush-element"],["text","\\n        "],["open-element","uikit-condition-media",[]],["static-attr","selector",".pip-cta-intro"],["static-attr","ended",""],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","uikit-state",[]],["static-attr","name","loop"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","uikit-video",[]],["static-attr","visible-state","intro"],["static-attr","class","pip-cta-intro"],["static-attr","src","/fe/lol-navigation/menu-item-call-to-action-intro.webm"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","visible-state","loop"],["static-attr","class","pip-cta-loop"],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = r(n(303));
            n(304);
            var i = r(n(305));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            var l = a.Ember.Component.extend(i.default, {
                classNames: ["clickable-icon-button-component"],
                classNameBindings: ["selected", "disabled"],
                layout: s.default,
                iconWidthStyle: a.Ember.computed("widthStyleOverride", (function() {
                    return this.get("widthStyleOverride") || "20px"
                })),
                iconHeightStyle: a.Ember.computed("heightStyleOverride", (function() {
                    return this.get("heightStyleOverride") || "20px"
                }))
            });
            t.default = l
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "Q4IzMK/t",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\framed-icon-button\\\\addon\\\\templates\\\\clickable-icon-button.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\framed-icon-button\\\\addon\\\\styles\\\\clickable-icon-button.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clickable-icon-button-hitbox"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"handleClick",["get",["eventData"]]],null],null],["dynamic-attr","onmouseover",["helper",["action"],[["get",[null]],"handleMouseOver",["get",["eventData"]]],null],null],["dynamic-attr","onmouseout",["helper",["action"],[["get",[null]],"handleMouseOut",["get",["eventData"]]],null],null],["flush-element"],["text","\\n  "],["append",["helper",["button-mask-icon"],null,[["widthStyle","heightStyle","iconPath"],[["get",["iconWidthStyle"]],["get",["iconHeightStyle"]],["get",["iconPath"]]]]],false],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            var s = {
                showDisabledTooltip: a.Ember.computed.and("disabled", "disabledTooltipText"),
                playSound: function(e) {
                    return a.Audio.getChannel("sfx-ui").playSound(e)
                },
                actions: {
                    handleClick: function(e) {
                        if (!this.get("disabled")) {
                            const t = this.get("clickSfxPath");
                            t && this.playSound(t), this.sendAction("handleClick", e)
                        }
                    },
                    handleMouseOver: function(e) {
                        if (!this.get("disabled")) {
                            const t = this.get("hoverSfxPath");
                            t && this.playSound(t), this.get("handleMouseOver") && this.sendAction("handleMouseOver", e)
                        }
                    },
                    handleMouseOut: function(e) {
                        this.get("disabled") || this.get("handleMouseOut") && this.sendAction("handleMouseOut", e)
                    }
                }
            };
            t.default = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = l(n(307)),
                i = l(n(308)),
                r = n(30);

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            var o = a.Ember.Component.extend({
                classNames: ["shared-components-countdown-widget"],
                style: s.default,
                layout: i.default,
                countdownFrameLeft: n(309),
                countdownFrameCenter: n(310),
                countdownFrameRight: n(311),
                countdownCalenderIcon: n(312),
                countdownClockIcon: n(313),
                startDate: null,
                endDate: null,
                preCountdownEnabled: !0,
                countdownEnabled: !0,
                requireStartDateToTransition: !1,
                hidePreCountdownAfterStartDate: !1,
                hideCountdownAfterEndDate: !1,
                startingSoonText: "",
                startingText: "",
                startingWrappingText: "",
                startingLongTimeText: "",
                endingSoonText: "",
                endingText: "",
                endingWrappingText: "",
                endingLongTimeText: "",
                currentTimeMetronome() {
                    this.metronomeAsyncTaskId = a.Ember.run.later((() => {
                        this.notifyPropertyChange("currentTimePulse"), this.currentTimeMetronome()
                    }), r.TIME.TIME_CONVERSIONS.MILLISECONDS_IN_A_MINUTE / 2)
                },
                isValidStartDate: a.Ember.computed("startDate", (function() {
                    const e = this.get("startDate");
                    return e && !isNaN(Date.parse(e))
                })),
                isValidEndDate: a.Ember.computed("endDate", (function() {
                    const e = this.get("endDate");
                    return e && !isNaN(Date.parse(e))
                })),
                beforeStartDate: a.Ember.computed("isValidStartDate", "startDate", "currentTimePulse", (function() {
                    if (!this.get("isValidStartDate")) return !1;
                    return new Date(this.get("startDate")).getTime() > Date.now()
                })),
                afterEndDate: a.Ember.computed("isValidEndDate", "endDate", "currentTimePulse", (function() {
                    if (!this.get("isValidEndDate")) return !1;
                    const e = new Date(this.get("endDate"));
                    return Date.now() > e.getTime()
                })),
                showEndCountdown: a.Ember.computed("countdownEnabled", "isValidEndDate", "beforeStartDate", "afterEndDate", "hideCountdownAfterEndDate", "requireStartDateToTransition", (function() {
                    const e = this.get("countdownEnabled"),
                        t = this.get("isValidEndDate"),
                        n = this.get("beforeStartDate"),
                        a = this.get("afterEndDate"),
                        s = this.get("hideCountdownAfterEndDate"),
                        i = this.get("requireStartDateToTransition");
                    return e && t && (!i || !n) && !(a && s)
                })),
                showPreCountdown: a.Ember.computed("preCountdownEnabled", "isValidEndDate", "beforeStartDate", "countdownEnabled", "hidePreCountdownAfterStartDate", "afterEndDate", (function() {
                    const e = this.get("preCountdownEnabled"),
                        t = this.get("isValidEndDate"),
                        n = this.get("beforeStartDate"),
                        a = this.get("countdownEnabled"),
                        s = this.get("hidePreCountdownAfterStartDate"),
                        i = this.get("afterEndDate");
                    return e && t && !a && (n || !(a || s)) && !i
                })),
                init() {
                    this._super(...arguments), this.currentTimeMetronome()
                },
                willDestroyElement() {
                    this._super(...arguments), a.Ember.run.cancel(this.metronomeAsyncTaskId)
                }
            });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "AGfQnYFh",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\remaining-time\\\\addon\\\\templates\\\\countdown-widget.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\remaining-time\\\\addon\\\\styles\\\\countdown-widget.styl\\" js-path=\\"null\\" "],["text","\\n"],["block",["if"],[["get",["showEndCountdown"]]],null,2,1]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","countdown-widget"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","countdown-widget_background-side"],["dynamic-attr","src",["concat",[["unknown",["countdownFrameLeft"]]]]],["static-attr","alt",""],["static-attr","role","presentation"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","countdown-widget_background-center"],["dynamic-attr","style",["concat",["background-image: url(\'",["unknown",["countdownFrameCenter"]],"\')"]]],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","countdown-widget_icon"],["dynamic-attr","src",["concat",[["unknown",["countdownCalenderIcon"]]]]],["static-attr","alt",""],["static-attr","role","presentation"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","countdown-widget_text"],["flush-element"],["text","\\n        "],["append",["helper",["remaining-time-text"],null,[["endDateTime","almostEndingText","timeHasExpiredText","longTimeText","wrappingText","useShortLabels"],[["get",["startDate"]],["get",["startingSoonText"]],["get",["startingText"]],["get",["startingLongTimeText"]],["get",["startingWrappingText"]],true]]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","countdown-widget_background-side"],["dynamic-attr","src",["concat",[["unknown",["countdownFrameRight"]]]]],["static-attr","alt",""],["static-attr","role","presentation"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["showPreCountdown"]]],null,0]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","countdown-widget"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","countdown-widget_background-side"],["dynamic-attr","src",["concat",[["unknown",["countdownFrameLeft"]]]]],["static-attr","alt",""],["static-attr","role","presentation"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","countdown-widget_background-center"],["dynamic-attr","style",["concat",["background-image: url(\'",["unknown",["countdownFrameCenter"]],"\')"]]],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","countdown-widget_icon"],["dynamic-attr","src",["concat",[["unknown",["countdownClockIcon"]]]]],["static-attr","alt",""],["static-attr","role","presentation"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","countdown-widget_text"],["flush-element"],["text","\\n        "],["append",["helper",["remaining-time-text"],null,[["endDateTime","almostEndingText","timeHasExpiredText","longTimeText","wrappingText","useShortLabels"],[["get",["endDate"]],["get",["endingSoonText"]],["get",["endingText"]],["get",["endingLongTimeText"]],["get",["endingWrappingText"]],true]]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","countdown-widget_background-side"],["dynamic-attr","src",["concat",[["unknown",["countdownFrameRight"]]]]],["static-attr","alt",""],["static-attr","role","presentation"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "time-remaining-frame-left.svg"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "time-remaining-frame-center.svg"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "time-remaining-frame-right.svg"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "time-remaining-calendar.svg"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "time-remaining-clock.svg"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = m(n(315)),
                s = m(n(319)),
                i = m(n(322)),
                r = m(n(328)),
                l = m(n(331)),
                o = m(n(323)),
                c = m(n(329)),
                d = m(n(332)),
                u = m(n(333));

            function m(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const p = (e, t = {}) => Object.assign(e, {
                EmberCollectionComponent: a.default,
                EmberNativeScrollableComponent: s.default,
                FixedGridLayoutHelper: i.default,
                MixedGridLayoutHelper: r.default,
                PercentageColumnsLayoutHelper: l.default
            }, t);
            var h = {
                registerToFactoryDefinition: p,
                registerToChampSelect: (e, t) => {
                    p(e, t), e.EmberCollectionComponent = u.default
                },
                Layouts: {
                    GridLayout: o.default,
                    MixedGridLayout: c.default,
                    PercentageColumnsLayout: d.default
                }
            };
            t.default = h
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = l(n(316)),
                i = l(n(317)),
                r = l(n(318));

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const {
                get: o,
                set: c,
                A: d
            } = a.Ember;
            class u {
                constructor(e, t, n, a) {
                    this.key = e, this.hidden = !1, this.item = t, this.index = n, this.style = a
                }
            }

            function m() {}
            var p = a.Ember.Component.extend({
                layout: s.default,
                init() {
                    this._buffer = void 0, this._cellLayout = void 0, this._rawItems = void 0, this._items = void 0, this._scrollLeft = void 0, this._scrollTop = void 0, this._clientWidth = void 0, this._clientHeight = void 0, this._contentSize = void 0, this.contentElement = void 0, this._cells = d(), this._cellMap = Object.create(null), this._super();
                    let e = this.getAttr("buffer");
                    this._buffer = "number" == typeof e ? e : 5, this._scrollLeft = 0 | this.getAttr("scroll-left"), this._scrollTop = 0 | this.getAttr("scroll-top"), this._clientWidth = 0 | this.getAttr("estimated-width"), this._clientHeight = 0 | this.getAttr("estimated-height"), this._scrollChange = this.getAttr("scroll-change")
                },
                _needsRevalidate() {
                    this.isDestroyed || this.isDestroying || (this._isGlimmer2() ? this.rerender() : (0, r.default)(this))
                },
                didReceiveAttrs() {
                    this._super(), this.updateItems(), this.updateScrollPosition()
                },
                willDestroyElement() {
                    this._items && this._items.removeArrayObserver && this._items.removeArrayObserver(this, {
                        willChange: m,
                        didChange: "_needsRevalidate"
                    })
                },
                updateItems() {
                    this._cellLayout = this.getAttr("cell-layout");
                    var e = this.getAttr("items");
                    if (this._rawItems !== e) {
                        this._items && this._items.removeArrayObserver && this._items.removeArrayObserver(this, {
                            willChange: m,
                            didChange: "_needsRevalidate"
                        }), this._rawItems = e;
                        var t = d(e);
                        this.set("_items", t), t && t.addArrayObserver && t.addArrayObserver(this, {
                            willChange: m,
                            didChange: "_needsRevalidate"
                        })
                    }
                },
                updateScrollPosition() {
                    if (!this._scrollChange) return;
                    let e = this.getAttr("scroll-left");
                    void 0 !== e && (e = parseInt(e, 10), this._scrollLeft !== e && this.set("_scrollLeft", e));
                    let t = this.getAttr("scroll-top");
                    void 0 !== t && (t = parseInt(t, 10), this._scrollTop !== t && this.set("_scrollTop", t))
                },
                updateContentSize() {
                    var e = this._cellLayout.contentSize(this._clientWidth, this._clientHeight);
                    void 0 !== this._contentSize && e.width === this._contentSize.width && e.height === this._contentSize.height || this.set("_contentSize", e)
                },
                willRender: function() {
                    this.updateCells(), this.updateContentSize()
                },
                updateCells() {
                    if (!this._items) return;
                    const e = o(this._items, "length");
                    this._cellLayout.length !== e && (this._cellLayout.length = e);
                    var t, n, a, s, r, l = this._cellMap,
                        d = Object.create(null),
                        m = this._cellLayout.indexAt(this._scrollLeft, this._scrollTop, this._clientWidth, this._clientHeight),
                        p = this._cellLayout.count(this._scrollLeft, this._scrollTop, this._clientWidth, this._clientHeight),
                        h = this._items,
                        g = Math.min(m, this._buffer);
                    m -= g, p += g, p = Math.min(p + this._buffer, o(h, "length") - m);
                    var f = [];
                    for (t = 0; t < p; t++) a = m + t, s = (0, i.default)(h.objectAt(a)), l && (r = l[s]), r ? (n = this._cellLayout.formatItemStyle(a, this._clientWidth, this._clientHeight), c(r, "style", n), c(r, "hidden", !1), c(r, "key", s), c(r, "index", a), d[s] = r) : f.push(a);
                    for (t = 0; t < this._cells.length; t++)
                        if (!d[(r = this._cells[t]).key])
                            if (f.length) {
                                a = f.pop();
                                let e = h.objectAt(a);
                                s = (0, i.default)(e), n = this._cellLayout.formatItemStyle(a, this._clientWidth, this._clientHeight), c(r, "style", n), c(r, "key", s), c(r, "index", a), c(r, "item", e), c(r, "hidden", !1), d[s] = r
                            } else c(r, "hidden", !0), c(r, "style", "height: 0; display: none;");
                    for (t = 0; t < f.length; t++) {
                        a = f[t];
                        let e = h.objectAt(a);
                        s = (0, i.default)(e), n = this._cellLayout.formatItemStyle(a, this._clientWidth, this._clientHeight), r = new u(s, e, a, n), d[s] = r, this._cells.pushObject(r)
                    }
                    this._cellMap = d
                },
                _isGlimmer2() {
                    return !this._renderNode
                },
                actions: {
                    scrollChange(e, t) {
                        this._scrollChange ? this._scrollChange(e, t) : e === this._scrollLeft && t === this._scrollTop || (c(this, "_scrollLeft", e), c(this, "_scrollTop", t), this._needsRevalidate())
                    },
                    clientSizeChange(e, t) {
                        0 !== e && 0 !== t && (this._clientWidth === e && this._clientHeight === t || (c(this, "_clientWidth", e), c(this, "_clientHeight", t), this._needsRevalidate()))
                    }
                }
            });
            t.default = p
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "3X4Lc5vc",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\ember-collection\\\\addon\\\\templates\\\\components\\\\ember-collection.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\ember-collection\\\\addon\\\\components\\\\ember-collection.js\\" "],["text","\\n"],["block",["ember-native-scrollable"],null,[["content-size","scroll-left","scroll-top","scrollChange","clientSizeChange"],[["get",["_contentSize"]],["get",["_scrollLeft"]],["get",["_scrollTop"]],["helper",["action"],[["get",[null]],"scrollChange"],null],["helper",["action"],[["get",[null]],"clientSizeChange"],null]]],1]],"locals":[],"named":[],"yields":["default"],"blocks":[{"statements":[["text","      "],["open-element","div",[]],["dynamic-attr","style",["helper",["sanitize"],[["get",["cell","style"]]],null],null],["flush-element"],["yield","default",[["get",["cell","item"]],["get",["cell","index"]]]],["close-element"]],"locals":["cell"]},{"statements":[["text","  "],["open-element","div",[]],["flush-element"],["block",["each"],[["get",["_cells"]]],null,0],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function(e) {
                let t, n = typeof e;
                t = "string" === n || "number" === n ? e : a.Ember.guidFor(e);
                return t
            };
            var a = n(1)
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function(e) {
                e._renderNode.isDirty = !0, e._renderNode.ownerNode.emberView.scheduleRevalidate(e._renderNode, e.toString(), "rerendering via needsRevalidate")
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = n(320);
            const i = (0, n(321).styleProperty)("overflowScrolling");
            var r = a.Ember.Component.extend({
                init() {
                    this._clientWidth = 0, this._clientHeight = 0, this._scrollLeft = 0, this._scrollTop = 0, this._animationFrame = void 0, this._super()
                },
                didReceiveAttrs() {
                    this._contentSize = this.getAttr("content-size"), this._scrollLeft = this.getAttr("scroll-left"), this._scrollTop = this.getAttr("scroll-top")
                },
                didInsertElement() {
                    this.contentElement = this.element.firstElementChild, this.applyStyle(), this.applyContentSize(), this.syncScrollFromAttr(), this.startScrollCheck()
                },
                didUpdate() {
                    this.applyContentSize(), this.syncScrollFromAttr()
                },
                willDestroyElement() {
                    this.cancelScrollCheck(), this.contentElement = void 0
                },
                applyStyle() {
                    i ? (this.element.style.overflow = "scroll", this.element.style[i] = "touch") : this.element.style.overflow = "auto", (0, s.translate)(this.element, 0, 0), this.element.style.position = "absolute", this.element.style.left = 0, this.element.style.top = 0, this.element.style.bottom = 0, this.element.style.right = 0
                },
                applyContentSize() {
                    this.contentElement.style.position = "relative", this.contentElement.style.width = this._contentSize.width + "px", this.contentElement.style.height = this._contentSize.height + "px"
                },
                syncScrollFromAttr() {
                    this._appliedScrollTop !== this._scrollTop && (this._appliedScrollTop = this._scrollTop, this._scrollTop >= 0 && (this.element.scrollTop = this._scrollTop)), this._appliedScrollLeft !== this._scrollLeft && (this._appliedScrollLeft = this._scrollLeft, this._scrollLeft >= 0 && (this.element.scrollLeft = this._scrollLeft))
                },
                startScrollCheck() {
                    const e = this;

                    function t() {
                        e.scrollCheck(), n()
                    }

                    function n() {
                        window.requestAnimationFrame ? e._animationFrame = requestAnimationFrame(t) : e._animationFrame = setTimeout(t, 16)
                    }
                    n()
                },
                cancelScrollCheck() {
                    this._animationFrame && (window.requestAnimationFrame ? cancelAnimationFrame(this._animationFrame) : clearTimeout(this._animationFrame), this._animationFrame = void 0)
                },
                scrollCheck() {
                    let e = this.element,
                        t = e.scrollLeft,
                        n = e.scrollTop,
                        s = !1;
                    t === this._appliedScrollLeft && n === this._appliedScrollTop || (s = !0, this._appliedScrollLeft = t, this._appliedScrollTop = n);
                    let i = e.clientWidth,
                        r = e.clientHeight,
                        l = !1;
                    i === this._clientWidth && r === this._clientHeight || (l = !0, this._clientWidth = i, this._clientHeight = r), (s || l) && a.Ember.run.join(this, (function() {
                        s && this.scrollChange(t, n), l && this.clientSizeChange(i, r)
                    }))
                }
            });
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.translateCSS = t.translate = t.supports3D = t.supports2D = void 0, t.translatePosition = o, t.translatePositionCSS = u, t.translateTransform2D = c, t.translateTransform2DCSS = m, t.translateTransform3D = d, t.translateTransform3DCSS = p;
            var a = n(321);
            const s = (0, a.cssProperty)("transform"),
                i = (0, a.styleProperty)("transform"),
                r = !!(0, a.styleProperty)("perspectiveOrigin");
            t.supports3D = r;
            const l = !!i;

            function o(e, t, n) {
                e.style.left = t + "px", e.style.top = n + "px"
            }

            function c(e, t, n) {
                e.style[i] = h(t, n)
            }

            function d(e, t, n) {
                e.style[i] = g(t, n)
            }

            function u(e, t) {
                return `left:${e}px;top:${t}px;`
            }

            function m(e, t) {
                return `${s}:${h(e,t)};`
            }

            function p(e, t) {
                return `${s}:${g(e,t)};`
            }

            function h(e, t) {
                return `matrix(1, 0, 0, 1, ${e}, ${t})`
            }

            function g(e, t) {
                return `matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ${e}, ${t}, 0, 1)`
            }
            t.supports2D = l;
            const f = r ? d : l ? c : o;
            t.translate = f;
            const _ = r ? p : l ? m : u;
            t.translateCSS = _
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.cssProperty = function(e) {
                return c(e, !0)
            }, t.styleProperty = function(e) {
                return c(e, !1)
            };
            var a = n(1);
            const {
                camelize: s,
                capitalize: i
            } = a.Ember.String, r = ["webkit", "Webkit", "ms", "Moz", "O"], l = ["-webkit-", "-ms-", "-moz-", "-o-"], o = "undefined" != typeof document && document.documentElement && document.documentElement.style;

            function c(e, t) {
                let n = t ? s(e) : e;
                if (n in o) return e;
                let a = i(n);
                for (let n = 0; n < r.length; n++) {
                    let s = r[n] + a;
                    if (s in o) return t ? l[n] + e : s
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(323)) && a.__esModule ? a : {
                    default: a
                };
            var r = s.Ember.Helper.helper((function(e, t) {
                return new i.default(e[0], e[1])
            }));
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(324)) && a.__esModule ? a : {
                    default: a
                },
                i = n(327);
            t.default = class {
                constructor(e, t) {
                    this.length = 0, this.bin = new s.default(this, e, t)
                }
                contentSize(e) {
                    return {
                        width: e,
                        height: this.bin.height(e)
                    }
                }
                indexAt(e, t, n, a) {
                    return this.bin.visibleStartingIndex(t, n, a)
                }
                positionAt(e, t) {
                    return this.bin.position(e, t)
                }
                widthAt(e) {
                    return this.bin.widthAtIndex(e)
                }
                heightAt(e) {
                    return this.bin.heightAtIndex(e)
                }
                count(e, t, n, a) {
                    return this.bin.numberVisibleWithin(t, n, a, !0)
                }
                formatItemStyle(e, t, n) {
                    let a = this.positionAt(e, t, n),
                        s = this.widthAt(e, t, n),
                        r = this.heightAt(e, t, n);
                    return (0, i.formatPixelStyle)(a, s, r)
                }
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => s
            });
            var a = n(325);

            function s(e, t, n) {
                this._elementWidth = t, this._elementHeight = n, this._super$constructor(e)
            }
            s.prototype = Object.create(a.default.prototype), s.prototype._super$constructor = a.default, s.prototype.flush = function() {}, s.prototype.isGrid = function(e) {
                return (Math.floor(e / this.widthAtIndex(0)) || 1) > 1
            }, s.prototype.visibleStartingIndex = function(e, t, n) {
                e = Math.min(e, this.maxContentOffset(t, n));
                var a = Math.floor(t / this.widthAtIndex(0)) || 1;
                return Math.floor(e / this.heightAtIndex(0)) * a
            }, s.prototype.numberVisibleWithin = function(e, t, n, a) {
                var s = this.visibleStartingIndex(e, t, n),
                    i = Math.floor(t / this.widthAtIndex(0)) || 1,
                    r = this.length(),
                    l = this.heightAtIndex(0),
                    o = Math.ceil(n / l) * i;
                a && (o += i);
                var c = r - s;
                return Math.max(Math.min(o, c), 0)
            }, s.prototype.widthAtIndex = function() {
                return this._elementWidth
            }, s.prototype.heightAtIndex = function() {
                return this._elementHeight
            }, s.prototype.position = function(e, t) {
                var n = this.length();
                (0 === n || e > n) && rangeError(n, e);
                var a = Math.floor(t / this.widthAtIndex(e)) || 1;
                return {
                    x: e % a * this.widthAtIndex(e) | 0,
                    y: Math.floor(e / a) * this.heightAtIndex(e)
                }
            }, s.prototype.height = function(e) {
                if ("number" != typeof e) throw new TypeError("height depends on the first argument of visibleWidth(number)");
                var t = this.length();
                if (0 === t) return 0;
                var n = Math.max(Math.floor(e / this.widthAtIndex(0), 1));
                return n = n > 0 ? n : 1, Math.ceil(t / n) * this.heightAtIndex(0)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => a,
                rangeError: () => i
            });
            n(326);

            function a(e, t) {
                this.width = t || 0, this.content = e
            }

            function s(e) {
                return function() {
                    throw new TypeError("MustImplement: " + e)
                }
            }

            function i(e, t) {
                throw new RangeError("Parameter must be within: [0 and " + e + ") but was: " + t)
            }
            a.prototype.objectAt = function(e, t) {
                return e[t]
            }, a.prototype.position = s("position"), a.prototype.flush = s("flush"), a.prototype.height = s("height"), a.prototype.isGrid = s("isGrid"), a.prototype.length = function() {
                return this.content.length
            }, a.prototype.maxContentOffset = function(e, t) {
                var n = this.height(e);
                return Math.max(n - t, 0)
            }, a.prototype.visibleStartingIndex = s("visibleStartingIndex"), a.prototype.numberVisibleWithin = s("numberVisibleWithin"), a.prototype.heightAtIndex = function(e) {
                return this.content[e].height
            }, a.prototype.widthAtIndex = function(e) {
                return this.content[e].width
            }
        }, (e, t, n) => {
            "use strict";

            function a(e, t, n, a) {
                this.height = e, this.width = t, this.position = {
                    x: n,
                    y: a
                }
            }
            n.r(t), n.d(t, {
                default: () => a
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatPercentageStyle = function(e, t, n) {
                let s = "position:absolute;top:0;left:0;";
                return s += (0, a.translateCSS)(e.x, e.y), s += "width:" + t + "%;height:" + n + "px;", s
            }, t.formatPixelStyle = function(e, t, n) {
                let s = "position:absolute;top:0;left:0;";
                return s += (0, a.translateCSS)(e.x, e.y), s += "width:" + t + "px;height:" + n + "px;", s
            };
            var a = n(320)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(329)) && a.__esModule ? a : {
                    default: a
                };
            var r = s.Ember.Helper.helper((function(e, t) {
                return new i.default(e[0])
            }));
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(330)) && a.__esModule ? a : {
                    default: a
                },
                i = n(327);
            t.default = class {
                constructor(e, t) {
                    this.content = e, this.bin = new s.default(e, t)
                }
                contentSize(e) {
                    return {
                        width: e,
                        height: this.bin.height(e)
                    }
                }
                indexAt(e, t, n, a) {
                    return this.bin.visibleStartingIndex(t, n, a)
                }
                positionAt(e, t, n) {
                    return this.bin.position(e, t, n)
                }
                widthAt(e) {
                    return this.bin.widthAtIndex(e)
                }
                heightAt(e) {
                    return this.bin.heightAtIndex(e)
                }
                count(e, t, n, a) {
                    return this.bin.numberVisibleWithin(t, n, a, !0)
                }
                formatItemStyle(e, t, n) {
                    let a = this.positionAt(e, t, n),
                        s = this.widthAt(e, t, n),
                        r = this.heightAt(e, t, n);
                    return (0, i.formatPixelStyle)(a, s, r)
                }
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t), n.d(t, {
                default: () => i
            });
            var a = n(325),
                s = n(326);

            function i(e, t) {
                this._super$constructor(e, t), this._positionEntries = []
            }
            i.prototype = Object.create(a.default.prototype), i.prototype._super$constructor = a.default, i.prototype.isGrid = function(e) {
                null != e && e !== this.width && (this.flush(0), this.width = e);
                for (var t = this.length(), n = 0; n < t; n++)
                    if (this._entryAt(n).position.x > 0) return !0;
                return !1
            }, i.prototype.height = function(e) {
                null != e && e !== this.width && (this.flush(0), this.width = e);
                var t = this.length();
                if (0 === t) return 0;
                for (var n, a = 0, s = 0, i = t - 1; i >= 0 && !(s > (n = this._entryAt(i)).position.y); i--) a < n.height && (a = n.height), s = n.position.y;
                return s + a
            }, i.prototype.flush = function(e) {
                var t = this._positionEntries;
                t.length > e && (t.length = e)
            }, i.prototype.numberVisibleWithin = function(e, t, n, a) {
                t !== this.width && (this.flush(0), this.width = t);
                var s = this.visibleStartingIndex(e, t, n);
                return this._numberVisibleWithin(s, n, a)
            }, i.prototype._entryAt = function(e) {
                var t, n = this.length(),
                    i = this.width;
                e >= n && (0, a.rangeError)(n, e);
                var r, l, o, c, d = this._positionEntries.length,
                    u = 0,
                    m = 0;
                if (e < d) return this._positionEntries[e];
                for (0 === d ? (r = 0, l = 0) : (r = d - 1, m = (t = this._positionEntries[r]).position.x + t.width, u = t.height, l = t.position.y, r++), c = r; c < e + 1; c++) {
                    var p = this.heightAtIndex(c),
                        h = this.widthAtIndex(c);
                    t && h + m > i ? (l = t.position.y + t.height, o = 0, m = 0, u = p) : o = m, p > u && (u = p), t = this._positionEntries[c] = new s.default(u, h, o, l), m = o + h
                }
                return t
            }, i.prototype._numberVisibleWithin = function(e, t, n) {
                var a, s, i, r = 0,
                    l = this.length(),
                    o = 0,
                    c = 0;
                c = e > 0 && e < l ? this._entryAt(e).position.y : 0;
                for (var d = e; d < l; d++)
                    if (o === (s = (a = this._entryAt(d)).position).y || (o = s.y - c, n && !i && (i = a.height)), o < t) r++;
                    else {
                        if (!n) break;
                        n = !1, t += Math.max(i, a.height) + 1, r++
                    } return r
            }, i.prototype.position = function(e, t) {
                var n = this.length();
                return (0 === n || e > n) && (0, a.rangeError)(n, e), t !== this.width && (this.flush(0), this.width = t), this._entryAt(e).position
            }, i.prototype.visibleStartingIndex = function(e, t, n) {
                if (e <= 0) return 0;
                null != t && t !== this.width && (this.flush(0), this.width = t), e = Math.min(e, this.maxContentOffset(t, n));
                for (var a, s = this.height(), i = this.length(), r = i, l = s;;) {
                    var o = l / r;
                    if (a === (r = Math.min(Math.floor(e / o), i - 1))) return r;
                    var c = this._entryAt(r),
                        d = c.position;
                    if (a = r, (l = d.y + c.height) > e) {
                        for (; l >= e && (a = r, -1 != --r);) l = (d = (c = this._entryAt(r)).position).y + c.height;
                        return a
                    }
                    if (e === l) {
                        for (; l <= e;) r++, l = (d = (c = this._entryAt(r)).position).y + c.height;
                        return r
                    }
                }
                return -1
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(332)) && a.__esModule ? a : {
                    default: a
                };
            var r = s.Ember.Helper.helper((function(e, t) {
                return new i.default(e[0], e[1], e[2])
            }));
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = (a = n(330)) && a.__esModule ? a : {
                    default: a
                },
                i = n(1),
                r = n(327);
            t.default = class {
                constructor(e, t, n) {
                    let a = t.reduce((function(e, t) {
                        return e + t
                    }));
                    i.Ember.assert("All columns must total 100 " + a, a > 99 && a <= 100);
                    let r = [];
                    for (var l = 0, o = 0; o < e; o++) r.push({
                        width: t[l],
                        height: n,
                        percent: t[l]
                    }), ++l >= t.length && (l = 0);
                    this.positions = r, this.bin = new s.default(r, 100)
                }
                contentSize(e) {
                    return {
                        width: e,
                        height: this.bin.height(100)
                    }
                }
                indexAt(e, t, n, a) {
                    return this.bin.visibleStartingIndex(t, 100, a)
                }
                positionAt(e, t, n) {
                    return this.bin.position(e, 100, n)
                }
                widthAt(e) {
                    return this.bin.widthAtIndex(e)
                }
                heightAt(e) {
                    return this.bin.heightAtIndex(e)
                }
                count(e, t, n, a) {
                    return this.bin.numberVisibleWithin(t, 100, a, !0)
                }
                formatItemStyle(e, t, n) {
                    let a = this.positionAt(e, 100, n),
                        s = this.positions[e].percent,
                        i = this.heightAt(e, 100, n),
                        l = Math.floor(a.x / 100 * t);
                    return (0, r.formatPercentageStyle)({
                        x: l,
                        y: a.y
                    }, s, i)
                }
            }
        }, (e, t, n) => {
            "use strict";
            var a;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = ((a = n(315)) && a.__esModule ? a : {
                default: a
            }).default.extend({
                updateScrollPosition() {
                    let e = this.getAttr("scroll-left");
                    void 0 !== e && (e = parseInt(e, 10), this._scrollLeft !== e && this.set("_scrollLeft", e));
                    let t = this.getAttr("scroll-top");
                    void 0 !== t && (t = parseInt(t, 10), this._scrollTop !== t && this.set("_scrollTop", t))
                }
            });
            t.default = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(335)) && a.__esModule ? a : {
                    default: a
                };
            n(336);
            var r = s.Ember.Component.extend({
                classNames: ["framed-icon-button-component"],
                classNameBindings: ["disabled"],
                layout: i.default,
                showDisabledTooltip: s.Ember.computed.and("disabled", "disabledTooltipText"),
                playSound: function(e) {
                    return s.Audio.getChannel("sfx-ui").playSound(e)
                },
                actions: {
                    onButtonHover: function() {
                        if (!this.get("disabled")) {
                            const e = this.get("hoverSfxPath");
                            e && this.playSound(e);
                            this.get("onButtonHover") && this.sendAction("onButtonHover")
                        }
                    },
                    onButtonClick: function() {
                        if (!this.get("disabled")) {
                            const e = this.get("clickSfxPath") || "/fe/lol-uikit/sfx-uikit-button-circlex-click.ogg";
                            this.playSound(e), this.sendAction("onButtonClick")
                        }
                    }
                }
            });
            t.default = r
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "lVjO7oSY",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\framed-icon-button\\\\addon\\\\templates\\\\framed-icon-button.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\framed-icon-button\\\\addon\\\\styles\\\\framed-icon-button.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","framed-icon-button-frame"],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"onButtonHover"],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"onButtonClick"],null],null],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","framed-icon-button-holder"],["flush-element"],["text","\\n    "],["append",["helper",["button-mask-icon"],null,[["widthStyle","heightStyle","iconPath"],["20px","20px",["get",["iconPath"]]]]],false],["text","\\n  "],["close-element"],["text","\\n"],["block",["if"],[["get",["showDisabledTooltip"]]],null,4,2],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n        "],["open-element","p",[]],["flush-element"],["append",["unknown",["tooltipText"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],0],["text","  "]],"locals":[]},{"statements":[["block",["if"],[["get",["tooltipText"]]],null,1]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n        "],["open-element","p",[]],["flush-element"],["append",["unknown",["disabledTooltipText"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],3]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(338)) && a.__esModule ? a : {
                    default: a
                };
            n(339);
            var r = s.Ember.Component.extend({
                classNames: ["game-id-clipboard-copy-component"],
                layout: i.default,
                bindCopyListener: s.Ember.on("init", (function() {
                    const e = this.get("_onCopy");
                    this.set("onCopy", e.bind(this))
                })),
                _onCopy: function(e) {
                    const t = this.get("gameId");
                    e.preventDefault(), e.clipboardData.setData("text/plain", t), document.removeEventListener("copy", this.get("onCopy"))
                },
                actions: {
                    mouseEnterClipboardIcon: function() {
                        this.set("clipboardIconTooltip", this.get("tra.clipboard_copy_game_id_click_to_copy"))
                    },
                    copyGameIdToClipboard: function() {
                        this.set("clipboardIconTooltip", this.get("tra.clipboard_copy_scoreboard_game_id_copied")), document.addEventListener("copy", this.get("onCopy")), document.execCommand("copy")
                    }
                }
            });
            t.default = r
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "XREhhqdx",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\player-behavior\\\\addon\\\\templates\\\\game-id-clipboard-copy.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\player-behavior\\\\addon\\\\styles\\\\game-id-clipboard-copy.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clipboard-copy-game-id-container"],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"mouseEnterClipboardIcon"],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"copyGameIdToClipboard"],null],null],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","clipboard-copy-game-id-inner-container"],["flush-element"],["text","\\n    "],["append",["unknown",["tra","clipboard_copy_scoreboard_game_id"]],false],["text","\\n    "],["open-element","div",[]],["static-attr","class","clipboard-copy-icon"],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["type","tooltipPosition"],["system","bottom"]],0],["text","  "],["close-element"],["text","\\n\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","clipboard-tooltip-container"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clipboard-tooltip-inner-container"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clipboard-tooltip-game-id-label"],["flush-element"],["append",["unknown",["tra","clipboard_copy_scoreboard_tooltip_game_id"]],false],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","clipboard-tooltip-game-id-number"],["flush-element"],["append",["unknown",["gameId"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clipboard-tooltip-divider"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","clipboard-tooltip-copy-text"],["flush-element"],["append",["unknown",["clipboardIconTooltip"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = r(n(341)),
                i = r(n(342));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            n(343);
            var l = a.Ember.Component.extend({
                classNames: ["hextech-loading-animation-component"],
                layout: i.default,
                shouldDisplayTimeoutMessage: !1,
                timeoutMessage: void 0,
                timeoutMs: 15e3,
                didInsertElement() {
                    this._super(...arguments);
                    const e = this.element.querySelector(".hextech-loading-animation");
                    e.style.width = `${s.default.w}px`, e.style.height = `${s.default.h}px`, this.animation = a.Lottie.loadAnimation({
                        container: e,
                        renderer: "svg",
                        loop: !0,
                        autoplay: !0,
                        animationData: s.default
                    }), this.get("timeoutMessage") && (this.timer = a.Ember.run.later((() => {
                        this.set("shouldDisplayTimeoutMessage", !0)
                    }), this.get("timeoutMs")))
                },
                willDestroyElement() {
                    this._super(...arguments), this.animation.destroy(), this.timer && a.Ember.run.cancel(this.timer)
                }
            });
            t.default = l
        }, e => {
            "use strict";
            e.exports = JSON.parse('{"v":"5.1.3","fr":30,"ip":0,"op":70,"w":300,"h":300,"nm":"loader_large_v2","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"MainDiamond 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":45,"ix":10},"p":{"a":0,"k":[150.563,150.625,0],"ix":2},"a":{"a":0,"k":[-147.625,93.688,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[30,30],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"Rectangle Path 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"st","c":{"a":0,"k":[0.541176497936,0.435294121504,0.219607844949,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[-147.656,93.491],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0_1_0p333_0"],"t":0,"s":[0],"e":[90]},{"i":{"x":[0.822],"y":[1]},"o":{"x":[0.167],"y":[0]},"n":["0p822_1_0p167_0"],"t":25,"s":[90],"e":[90]},{"i":{"x":[0],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0_1_0p333_0"],"t":41,"s":[90],"e":[180]},{"t":67}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Rectangle 1","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":70,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"MainDiamond","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":45,"ix":10},"p":{"a":0,"k":[150.563,150.625,0],"ix":2},"a":{"a":0,"k":[-147.625,93.688,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[30,30],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"Rectangle Path 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"st","c":{"a":0,"k":[0.003921568859,0.039215687662,0.074509806931,1],"ix":3},"o":{"a":0,"k":30,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[-145.656,95.491],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0_1_0p333_0"],"t":0,"s":[0],"e":[90]},{"i":{"x":[0.822],"y":[1]},"o":{"x":[0.167],"y":[0]},"n":["0p822_1_0p167_0"],"t":25,"s":[90],"e":[90]},{"i":{"x":[0],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0_1_0p333_0"],"t":41,"s":[90],"e":[180]},{"t":67}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Rectangle 1","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":70,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"diamondLeft 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":225,"ix":10},"p":{"a":0,"k":[136.5,150,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"rc","d":1,"s":{"a":0,"k":[20,20],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"Rectangle Path 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.6],"y":[0]},"n":["0p833_0p833_0p6_0"],"t":24,"s":[100],"e":[0]},{"t":44}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_1_0p167_0p167"],"t":10,"s":[100],"e":[0]},{"t":24}],"ix":2},"o":{"a":0,"k":180,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.541176497936,0.435294121504,0.219607844949,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.5,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":10,"op":48,"st":-4,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"diamondRight 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":45,"ix":10},"p":{"a":0,"k":[164.5,150,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"rc","d":1,"s":{"a":0,"k":[20,20],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"Rectangle Path 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.6],"y":[0]},"n":["0p833_0p833_0p6_0"],"t":24,"s":[100],"e":[0]},{"t":44}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_1_0p167_0p167"],"t":10,"s":[100],"e":[0]},{"t":24}],"ix":2},"o":{"a":0,"k":180,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.541176497936,0.435294121504,0.219607844949,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.5,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":10,"op":48,"st":-4,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"diamondLeft","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":225,"ix":10},"p":{"a":0,"k":[118.25,150,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"rc","d":1,"s":{"a":0,"k":[45,45],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"Rectangle Path 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.6],"y":[0]},"n":["0p833_0p833_0p6_0"],"t":27,"s":[100],"e":[0]},{"t":51}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_1_0p167_0p167"],"t":13,"s":[100],"e":[0]},{"t":27}],"ix":2},"o":{"a":0,"k":180,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.274509817362,0.215686276555,0.078431375325,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":13,"op":51,"st":-1,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"diamondRight","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":45,"ix":10},"p":{"a":0,"k":[181.75,150,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"rc","d":1,"s":{"a":0,"k":[45,45],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"Rectangle Path 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.6],"y":[0]},"n":["0p833_0p833_0p6_0"],"t":27,"s":[100],"e":[0]},{"t":51}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_1_0p167_0p167"],"t":13,"s":[100],"e":[0]},{"t":27}],"ix":2},"o":{"a":0,"k":180,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.274509817362,0.215686276555,0.078431375325,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":13,"op":51,"st":-1,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"dashes","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150.75,150.75,0],"ix":2},"a":{"a":0,"k":[-83.5,51,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[60,60],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"st","c":{"a":0,"k":[0.470588237047,0.352941185236,0.156862750649,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":1,"lj":1,"ml":4,"d":[{"n":"d","nm":"dash","v":{"a":0,"k":2,"ix":1}},{"n":"g","nm":"gap","v":{"a":0,"k":8,"ix":2}},{"n":"o","nm":"offset","v":{"a":0,"k":0,"ix":7}}],"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[-83.5,50.5],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":0,"s":[0],"e":[113.68]},{"t":70}],"ix":6},"o":{"a":0,"k":50,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":70,"st":0,"bm":0}],"markers":[]}')
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "/p1HHcLm",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\hextech-loading-animation\\\\addon\\\\templates\\\\hextech-loading-animation.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\hextech-loading-animation\\\\addon\\\\styles\\\\hextech-loading-animation.styl\\" js-path=\\"null\\" "],["text","\\n"],["block",["if"],[["get",["shouldDisplayTimeoutMessage"]]],null,1,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","hextech-loading-animation"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","lol-uikit-content-block",[]],["flush-element"],["text","\\n        "],["open-element","p",[]],["static-attr","class","timeout-message"],["flush-element"],["text","\\n            "],["append",["unknown",["timeoutMessage"]],false],["text","\\n        "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = r(n(345)),
                i = r(n(373));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            n(374), e.exports = a.Ember.Component.extend({
                layout: i.default,
                classNames: ["managed-iframe"],
                id: null,
                url: null,
                isHidden: !1,
                audioManager: null,
                errorTimeoutMilliseconds: 3e4,
                db: null,
                isListening: !1,
                isLoading: !0,
                initialRenderInProgress: !1,
                isInErrorState: !1,
                isLoadingAndNotRetrying: a.Ember.computed("isLoading", "isInErrorState", (function() {
                    return this.get("isLoading") && !this.get("isInErrorState")
                })),
                hideIframe: a.Ember.computed("isLoading", "isInErrorState", (function() {
                    return this.get("isLoading") || this.get("isInErrorState")
                })),
                init() {
                    this._super(...arguments), this.set("listeners", a.Ember.A())
                },
                tryClearRenderTimeout() {
                    const e = this.get("clearRenderTimeout");
                    if (e) {
                        if ("function" != typeof e) return void a.logger.error("renderTimeoutCallback is not a function.");
                        e(), this.set("clearRenderTimeout", null)
                    }
                },
                setIframe(e) {
                    this._frame !== e && (this.removeListeners(), this._frameWindow = e && e.contentWindow, this._frame = e, this._frameWindow && this.isListening && this.startListening(), this._frame && this.refreshRenderTimeout())
                },
                refreshRenderTimeout() {
                    this.tryClearRenderTimeout();
                    const e = a.Ember.run.later(this, (() => {
                        this.setProperties({
                            isInErrorState: !0,
                            isLoading: !1
                        });
                        const e = this.get("retryPromiseResolve");
                        e && (e(), this.set("retryPromiseResolve", null))
                    }), this.get("errorTimeoutMilliseconds"));
                    this.set("clearRenderTimeout", (function() {
                        a.Ember.run.cancel(e)
                    }))
                },
                updateIframeReference() {
                    this.setIframe(this.element.querySelector("iframe"))
                },
                didInsertElement() {
                    this._super(...arguments), this.db = a.dataBinding.bindTo((0, a.getProvider)().getSocket()), this.audioManager || a.logger.error("Managed Iframe has invalid value for AudioManager. It will not be able to play certain sfx.");
                    const e = "/lol-publishing-content/v1/ready",
                        t = async n => {
                            if (!0 === n) {
                                this.db.unobserve(e, t);
                                const n = "/lol-publishing-content/v1/listeners/allow-list/all",
                                    i = await this.db.get(n);
                                if (null == i) return void a.logger.error(`Received null response from endpoint: ${n}`);
                                const r = {
                                    allRegions: a.WindowMessenger.validators.domainWhitelist(i)
                                };
                                this.updateIframeReference(), this.set("initialRenderInProgress", !0), this.addLoadedListener(r.allRegions), (0, s.default)(r, this, this.db, this.audioManager), this.startListening()
                            }
                        };
                    this.db.observe(e, t)
                },
                didRender() {
                    this._super(...arguments), this.initialRenderInProgress && (this.sendMessage({
                        messageType: "rcp-fe-lol-home-section-show"
                    }), this.set("initialRenderInProgress", !1)), this.updateIframeReference()
                },
                addListeners(e) {
                    if (this.isListening) return void a.logger.error("impossible to add handlers to an iframe after starting listeners");
                    const t = this.listeners;
                    this.set("listeners", t.concat(e))
                },
                addListener(e) {
                    return this.addListeners([e])
                },
                addLoadedListener(e) {
                    this.addListener({
                        messageType: "rcp-fe-lol-home-loaded",
                        validators: e,
                        handlers: () => {
                            this.setProperties({
                                isInErrorState: !1,
                                isLoading: !1
                            }), this.tryClearRenderTimeout()
                        }
                    })
                },
                cleanupListeners() {
                    for (const e of this.get("listeners")) e.cleanup && "function" == typeof e.cleanup && e.cleanup()
                },
                removeListeners() {
                    this._frameWindow ? a.WindowMessenger.removeMessageListener(this._frameWindow) : a.logger.trace("Attempted to remove listeners from an unattached iframe")
                },
                sendMessage(e) {
                    this._frameWindow ? a.WindowMessenger.sendMessage(this._frameWindow, e) : a.logger.error(`Attempted to send message to an unattached iframe. messageType: ${e.messageType}, src: ${this._frame.src}`)
                },
                startListening() {
                    this._frameWindow ? (a.WindowMessenger.addMessageListeners(this._frameWindow, this.listeners), this.isListening = !0) : a.logger.warning("Attempted to add listeners to an unattached iframe")
                },
                stopListening() {
                    this.isListening = !1, this.removeListeners()
                },
                willDestroyElement() {
                    this.sendMessage({
                        messageType: "rcp-fe-lol-home-section-hide"
                    }), this.tryClearRenderTimeout(), this.stopListening(), this.cleanupListeners(), this.setIframe(null), this._super(...arguments)
                },
                sendHomeHideMessage: a.Ember.observer("isHidden", (function() {
                    this.isHidden ? this.sendMessage({
                        messageType: "rcp-fe-lol-home-hide"
                    }) : this.sendMessage({
                        messageType: "rcp-fe-lol-home-show"
                    })
                })),
                actions: {
                    errorRetryButtonClicked() {
                        this.set("isLoading", !0);
                        return new Promise(((e, t) => {
                            this.set("retryPromiseResolve", e), this._frame.src = this._frame.src, this.refreshRenderTimeout(), this.updateIframeReference()
                        }))
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function(e, t, n, w) {
                (0, a.addAudioListeners)(e.allRegions, t, w), (0, s.addClientDataListener)(e.allRegions, t, n), (0, i.addEventShopListeners)(e.allRegions, t, n), (0, r.addFoundationListeners)(e.allRegions, t, n), (0, l.addGameDataListeners)(e.allRegions, t, n), (0, o.addGameflowListener)(e.allRegions, t, n), (0, c.addHubSettingsListeners)(e.allRegions, t, n), (0, d.addLolSettingsListeners)(e.allRegions, t, n), (0, u.addMarketingPreferencesListeners)(e.allRegions, t, n), (0, m.addMissionsListeners)(e.allRegions, t, n), (0, p.addProgressionListeners)(e.allRegions, t, n), (0, h.addRewardsListeners)(e.allRegions, t, n), (0, g.addOpenFullPageModalListener)(e.allRegions, t, n, w), (0, f.addOpenPAWListener)(e.allRegions, t, n), (0, _.addOpenStoreListener)(e.allRegions, t), (0, A.addOpenUiListeners)(e.allRegions, t), (0, b.addPubHubConfigListener)(e.allRegions, t, n), (0, v.addQueuesListeners)(e.allRegions, t, n), (0, E.addSessionDataListener)(e.allRegions, t, n), (0, y.addSubnavListeners)(e.allRegions, t), (0, C.addTastesListeners)(e.allRegions, t, n), (0, k.addTFTPassListeners)(e.allRegions, t, n), (0, x.addTFTTrovesListeners)(e.allRegions, t, n), (0, T.addTokenListeners)(e.allRegions, t, n)
            };
            var a = n(346),
                s = n(347),
                i = n(348),
                r = n(349),
                l = n(350),
                o = n(351),
                c = n(352),
                d = n(353),
                u = n(354),
                m = n(355),
                p = n(356),
                h = n(357),
                g = n(358),
                f = n(362),
                _ = n(363),
                A = n(364),
                b = n(365),
                v = n(366),
                E = n(367),
                y = n(368),
                C = n(369),
                k = n(370),
                x = n(371),
                T = n(372)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addAudioListeners = function(e, t, n) {
                (function(e, t, n) {
                    t.addListener({
                        messageType: s.playAudioUi,
                        validators: e,
                        handlers: (e, {
                            url: t,
                            options: s
                        }) => {
                            n ? n.playUiSound(t, s) : a.logger.warning("No Audio Manager instance found for Managed Iframe. Unable to play UI sound.")
                        }
                    })
                })(e, t, n),
                function(e, t, n) {
                    t.addListener({
                        messageType: s.playAmbientPrimary,
                        validators: e,
                        handlers: (e, {
                            ambientUrl: t,
                            introUrl: s,
                            ambientOptions: i,
                            introOptions: r
                        }) => {
                            n ? n.playPrimaryAmbienceSounds(t, s, i, r) : a.logger.warning("No Audio Manager instance found for Managed Iframe. Unable to play primary ambient sound.")
                        },
                        cleanup: () => {
                            n ? n.stopAllAmbienceSounds({}) : a.logger.warning("No Audio Manager instance found for Managed Iframe. Unable to stop all ambient sound.")
                        }
                    })
                }(e, t, n),
                function(e, t, n) {
                    t.addListener({
                        messageType: s.playAmbientSecondary,
                        validators: e,
                        handlers: (e, {
                            ambientUrl: t,
                            introUrl: s,
                            ambientOptions: i,
                            introOptions: r
                        }) => {
                            n ? n.playSecondaryAmbienceSounds(t, s, i, r) : a.logger.warning("No Audio Manager instance found for Managed Iframe. Unable to play secondary ambient sound.")
                        },
                        cleanup: () => {
                            n ? n.stopAllAmbienceSounds({}) : a.logger.warning("No Audio Manager instance found for Managed Iframe. Unable to stop all ambient sound.")
                        }
                    })
                }(e, t, n),
                function(e, t, n) {
                    t.addListener({
                        messageType: s.playAmbient,
                        validators: e,
                        handlers: (e, {
                            url: t,
                            options: s
                        }) => {
                            n ? n.playMusicAmbience(t, s) : a.logger.warning("No Audio Manager instance found for Managed Iframe. Unable to play ambient sound.")
                        },
                        cleanup: () => {
                            n ? n.stopAllAmbienceSounds({}) : a.logger.warning("No Audio Manager instance found for Managed Iframe. Unable to stop all ambient sound.")
                        }
                    })
                }(e, t, n),
                function(e, t, n) {
                    t.addListener({
                        messageType: s.stopAmbientPrimary,
                        validators: e,
                        handlers: (e, t) => {
                            n ? n.stopPrimaryAmbienceSounds(t) : a.logger.warning("No Audio Manager instance found for Managed Iframe. Unable to stop primary ambient sound.")
                        }
                    })
                }(e, t, n),
                function(e, t, n) {
                    t.addListener({
                        messageType: s.stopAmbientSecondary,
                        validators: e,
                        handlers: (e, t) => {
                            n ? n.stopSecondaryAmbienceSounds(t) : a.logger.warning("No Audio Manager instance found for Managed Iframe. Unable to stop secondary ambient sound.")
                        }
                    })
                }(e, t, n),
                function(e, t, n) {
                    t.addListener({
                        messageType: s.stopAmbient,
                        validators: e,
                        handlers: (e, t) => {
                            n ? n.stopMusicAmbience(t) : a.logger.warning("No Audio Manager instance found for Managed Iframe. Unable to stop ambient sound.")
                        }
                    })
                }(e, t, n),
                function(e, t, n) {
                    t.addListener({
                        messageType: s.stopAllAmbient,
                        validators: e,
                        handlers: (e, t) => {
                            n ? n.stopAllAmbienceSounds(t) : a.logger.warning("No Audio Manager instance found for Managed Iframe. Unable to stop all ambient sound.")
                        }
                    })
                }(e, t, n),
                function(e, t, n) {
                    t.addListener({
                        messageType: s.playSound,
                        validators: e,
                        handlers: (e, {
                            key: t
                        }) => {
                            a.Audio.getChannel("sfx-ui").playSound(i[t])
                        }
                    })
                }(e, t)
            };
            var a = n(1);
            const s = {
                playAudioUi: "rcp-fe-lol-home-audio-play-ui",
                playAmbient: "rcp-fe-lol-home-audio-play-music-ambience",
                playAmbientPrimary: "rcp-fe-lol-home-audio-play-primary-ambience",
                playAmbientSecondary: "rcp-fe-lol-home-audio-play-secondary-ambience",
                stopAmbient: "rcp-fe-lol-home-audio-stop-music-ambience",
                stopAmbientPrimary: "rcp-fe-lol-home-audio-stop-primary-ambience",
                stopAmbientSecondary: "rcp-fe-lol-home-audio-stop-secondary-ambience",
                stopAllAmbient: "rcp-fe-lol-home-audio-stop-all-ambience",
                playSound: "rcp-fe-lol-home-play-sound"
            };
            const i = {
                "button-hover": "/fe/lol-static-assets/sounds/sfx-uikit-button-gold-hover.ogg",
                "button-click": "/fe/lol-static-assets/sounds/sfx-uikit-button-gold-click.ogg",
                "button-pageup-click": "/fe/lol-static-assets/sounds/sfx-uikit-button-pageup-click.ogg",
                "icon-click": "/fe/lol-static-assets/sounds/sfx-uikit-text-click-small.ogg"
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addClientDataListener = function(e, t, n) {
                t.addListener({
                    messageType: "rcp-fe-lol-home-data-request",
                    validators: e,
                    handlers: () => {
                        n.get("/lol-publishing-content/v1/listeners/client-data").then((e => {
                            t.sendMessage({
                                messageType: "rcp-fe-lol-home-data-response",
                                data: {
                                    clientData: {
                                        ...e,
                                        user_agent: window.navigator.userAgent
                                    }
                                }
                            })
                        })).catch((e => {
                            a.logger.warning("Error handling addClientDataListener in managed-iframe", e)
                        }))
                    }
                })
            };
            var a = n(1)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addEventShopListeners = function(e, t, n) {
                (function(e, t, n) {
                    t.addListener({
                        messageType: s.eventShopStatusObserve,
                        validators: e,
                        handlers: (e, a) => {
                            n.unobserve(i.eventShopStatusPath, t), n.observe(i.eventShopStatusPath, t, (e => {
                                t.sendMessage({
                                    messageType: s.eventShopStatusObserveResponse,
                                    data: {
                                        success: !0,
                                        data: e
                                    }
                                })
                            }))
                        },
                        cleanup: () => {
                            n.unobserve(i.eventShopStatusPath, t)
                        }
                    })
                })(e, t, n),
                function(e, t) {
                    t.addListener({
                        messageType: s.eventShopOpen,
                        validators: e,
                        handlers: (e, t) => {
                            a.logger.info(e, " received");
                            a.SharedComponentsApi.getApi_Router().navigateTo("rcp-fe-lol-event-shop")
                        }
                    })
                }(e, t)
            };
            var a = n(1);
            const s = {
                    eventShopStatusObserve: "event-shop-status-observe",
                    eventShopStatusObserveResponse: "event-shop-status-response",
                    eventShopOpen: "open-event-shop"
                },
                i = {
                    eventShopStatusPath: "/lol-event-shop/v1/navigation-button-data"
                }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addFoundationListeners = function(e, t, r) {
                (function(e, t, s) {
                    t.addListener({
                        messageType: n.hubTogglesObserve,
                        validators: e,
                        handlers: (e, i) => {
                            s.unobserve(a.platformConfigHomeHubsPath, t), s.observe(a.platformConfigHomeHubsPath, t, (e => {
                                t.sendMessage({
                                    messageType: n.hubTogglesResponse,
                                    data: e
                                })
                            }))
                        },
                        cleanup: () => {
                            s.unobserve(a.platformConfigHomeHubsPath, t)
                        }
                    })
                })(e, t, r),
                function(e, t, a) {
                    t.addListener({
                        messageType: n.inventoryObserve,
                        validators: e,
                        handlers: (e, r) => {
                            if (!r.inventoryType) return;
                            const l = r.inventoryType,
                                o = i(l);
                            a.unobserve(o, t), a.observe(o, t, (e => {
                                s.inventoryTypeLastObserved = r.inventoryType, t.sendMessage({
                                    messageType: n.inventoryResponse,
                                    data: {
                                        inventoryType: l,
                                        inventory: e
                                    }
                                })
                            }))
                        },
                        cleanup: () => {
                            null !== s.inventoryTypeLastObserved && a.unobserve(i(s.inventoryTypeLastObserved), t)
                        }
                    })
                }(e, t, r)
            };
            const n = {
                    hubTogglesObserve: "rcp-fe-lol-home-hub-toggles-observe",
                    hubTogglesResponse: "rcp-fe-lol-home-hub-toggles-response",
                    inventoryObserve: "rcp-fe-lol-home-inventory-observe",
                    inventoryResponse: "rcp-fe-lol-home-inventory-response"
                },
                a = {
                    platformConfigHomeHubsPath: "/lol-platform-config/v1/namespaces/LcuHomeHubs",
                    inventoryForTypePath: "/lol-inventory/v2/inventory/{inventoryType}"
                },
                s = {
                    inventoryTypeLastObserved: null
                };

            function i(e) {
                return a.inventoryForTypePath.replace("{inventoryType}", e)
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addGameDataListeners = function(e, t, a) {
                (function(e, t, a) {
                    t.addListener({
                        messageType: n.assetsGameDataRequest,
                        validators: e,
                        handlers: e => {
                            a.get("/lol-game-data/assets/v1/generic-assets.json").then((e => {
                                t.sendMessage({
                                    messageType: n.assetsGameDataResponse,
                                    data: e
                                })
                            }))
                        }
                    })
                })(e, t, a),
                function(e, t, a) {
                    t.addListener({
                        messageType: n.ownershipRequest,
                        validators: e,
                        handlers: (e, {
                            inventoryType: s,
                            itemId: i
                        }) => {
                            a.get(`/lol-inventory/v2/inventory/${s}`).then((e => {
                                const a = (e || []).some((e => e.itemId === i && "OWNED" === e.ownershipType));
                                t.sendMessage({
                                    messageType: n.ownershipResponse,
                                    data: {
                                        inventoryType: s,
                                        itemId: i,
                                        owned: a
                                    }
                                })
                            }))
                        }
                    })
                }(e, t, a),
                function(e, t, a) {
                    t.addListener({
                        messageType: n.champGameDataRequest,
                        validators: e,
                        handlers: (e, {
                            champId: s
                        }) => {
                            a.get("/lol-game-data/assets/v1/champions/" + s + ".json").then((e => {
                                t.sendMessage({
                                    messageType: n.champGameDataResponse,
                                    data: {
                                        basePath: window.location.protocol + "//" + window.location.hostname + ":" + window.location.port,
                                        champJSON: e
                                    }
                                })
                            }))
                        }
                    })
                }(e, t, a)
            };
            const n = {
                assetsGameDataRequest: "rcp-fe-lol-home-assets-game-data-request",
                assetsGameDataResponse: "rcp-fe-lol-home-assets-game-data-response",
                ownershipRequest: "rcp-fe-lol-home-get-ownership-request",
                ownershipResponse: "rcp-fe-lol-home-get-ownership-response",
                champGameDataRequest: "rcp-fe-lol-home-champ-game-data-request",
                champGameDataResponse: "rcp-fe-lol-home-champ-game-data-response"
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addGameflowListener = function(e, t, a) {
                t.addListener({
                    messageType: "rcp-fe-lol-home-gameflow-observe",
                    validators: e,
                    handlers: (e, s) => {
                        a.unobserve(n, t), a.observe(n, t, (e => {
                            e || (e = {
                                phase: "None"
                            }), t.sendMessage({
                                messageType: "rcp-fe-lol-home-gameflow-changed",
                                data: {
                                    phase: e.phase
                                }
                            })
                        }))
                    },
                    cleanup: () => {
                        a.unobserve(n, t)
                    }
                })
            };
            const n = "/lol-gameflow/v1/session"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addHubSettingsListeners = function(e, t, n) {
                (function(e, t, n) {
                    t.addListener({
                        messageType: s.hubSettingsObserve,
                        validators: e,
                        handlers: (e, l) => {
                            if (!l || !l.hubId) return void a.logger.warning("Error handling message. hubId must be defined", {
                                messageType: e,
                                messageData: l
                            });
                            const o = l.hubId;
                            r(o) && (n.unobserve(i.allHubSettingsPath, t), n.observe(i.allHubSettingsPath, t, (e => {
                                let n = null;
                                e.data && e.data[o] && (n = e.data[o]), t.sendMessage({
                                    messageType: s.hubSettingsResponse,
                                    data: n
                                })
                            })))
                        },
                        cleanup: () => {
                            n.unobserve(i.allHubSettingsPath, t)
                        }
                    })
                })(e, t, n),
                function(e, t, n) {
                    t.addListener({
                        messageType: s.hubSettingsSet,
                        validators: e,
                        handlers: (e, l, o) => {
                            if (!l || !l.hubId) return void a.logger.warning("Error handling message: hubId must be defined", {
                                messageType: e,
                                messageData: l
                            });
                            const c = l.hubId;
                            if (!r(c)) return;
                            if (!l.hubData) return void a.logger.warning("Error handling message: hubData must be defined", {
                                messageType: e,
                                messageData: l
                            });
                            const d = l.hubData;
                            if ("object" != typeof d || Array.isArray(d)) return void a.logger.warning("Error handling message: hubData must be an object", {
                                messageType: e,
                                messageData: l
                            });
                            const u = {};
                            u[c] = d;
                            n.patch(i.allHubSettingsPath, {
                                data: u,
                                schemaVersion: 1
                            }).then((() => {
                                t.sendMessage({
                                    messageType: s.hubSettingsSetResponse,
                                    data: {
                                        success: !0
                                    }
                                })
                            }), (e => {
                                t.sendMessage({
                                    messageType: s.hubSettingsSetResponse,
                                    data: {
                                        success: !1,
                                        error: e
                                    }
                                })
                            }))
                        }
                    })
                }(e, t, n)
            };
            var a = n(1);
            const s = {
                    hubSettingsObserve: "rcp-fe-lol-home-hub-settings-observe",
                    hubSettingsResponse: "rcp-fe-lol-home-hub-settings-observe-response",
                    hubSettingsSet: "rcp-fe-lol-home-hub-settings-set",
                    hubSettingsSetResponse: "rcp-fe-lol-home-hub-settings-set-response"
                },
                i = {
                    allHubSettingsPath: "/lol-settings/v2/account/LCUPreferences/lol-home-hubs"
                };

            function r(e) {
                const t = "string" == typeof e && e.match(/^[_\-a-z0-9]+$/i) && e.length >= 5;
                return t || a.logger.warning("Error in hub settings message handler: hubId must be alphanumeric, and at least 5 characters long.", e), t
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addLolSettingsListeners = function(e, t, n) {
                (function(e, t) {
                    t.addListener({
                        messageType: s.lolSettingsOpen,
                        validators: e,
                        handlers: (e, t) => {
                            const n = t && t.settingsCategory ? t.settingsCategory : "";
                            (0, a.getProvider)().getOptional("rcp-fe-lol-settings").then((e => {
                                e.show(n)
                            }))
                        }
                    })
                })(e, t),
                function(e, t, n) {
                    t.addListener({
                        messageType: s.audioSettingsObserve,
                        validators: e,
                        handlers: (e, a) => {
                            n.unobserve(i.audioSettingsPath, t), n.observe(i.audioSettingsPath, t, (e => {
                                e && e.data && t.sendMessage({
                                    messageType: s.audioSettingsResponse,
                                    data: e.data
                                })
                            }))
                        },
                        cleanup: () => {
                            n.unobserve(i.audioSettingsPath, t)
                        }
                    })
                }(e, t, n),
                function(e, t, n) {
                    t.addListener({
                        messageType: s.uxSettingsObserve,
                        validators: e,
                        handlers: (e, a) => {
                            n.unobserve(i.uxSettingsPath, t), n.observe(i.uxSettingsPath, t, (e => {
                                e && e.data && t.sendMessage({
                                    messageType: s.uxSettingsResponse,
                                    data: e.data
                                })
                            }))
                        },
                        cleanup: () => {
                            n.unobserve(i.uxSettingsPath, t)
                        }
                    })
                }(e, t, n),
                function(e, t, n) {
                    t.addListener({
                        messageType: s.homeSettingsObserve,
                        validators: e,
                        handlers: (e, i) => {
                            const {
                                category: o
                            } = i, c = l(o);
                            n.unobserve(c, t), n.observe(c, t, (e => {
                                r.settingsCategoryLastObserved = o, a.logger.trace("rcp-fe-lol-home-settings-observe is DEPRECATED message handler.  Please use rcp-fe-lol-home-settings-ux-observe instead."), e && e.data && t.sendMessage({
                                    messageType: s.homeSettingsChanged,
                                    data: {
                                        [o]: e.data
                                    }
                                })
                            }))
                        },
                        cleanup: () => {
                            null !== r.settingsCategoryLastObserved && n.unobserve(l(r.settingsCategoryLastObserved), t)
                        }
                    })
                }(e, t, n)
            };
            var a = n(1);
            const s = {
                    lolSettingsOpen: "rcp-fe-lol-home-settings-open",
                    audioSettingsObserve: "rcp-fe-lol-home-settings-audio-observe",
                    audioSettingsResponse: "rcp-fe-lol-home-settings-audio-response",
                    uxSettingsObserve: "rcp-fe-lol-home-settings-ux-observe",
                    uxSettingsResponse: "rcp-fe-lol-home-settings-ux-response",
                    homeSettingsObserve: "rcp-fe-lol-home-settings-observe",
                    homeSettingsChanged: "rcp-fe-lol-home-settings-changed"
                },
                i = {
                    audioSettingsPath: "/lol-settings/v2/local/lol-audio",
                    uxSettingsPath: "/lol-settings/v2/local/lol-user-experience",
                    settinsgCategoryPath: "/lol-settings{category}"
                },
                r = {
                    settingsCategoryLastObserved: null
                };

            function l(e) {
                return i.settinsgCategoryPath.replace("{category}", e)
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addMarketingPreferencesListeners = function(e, t, n) {
                (function(e, t, n) {
                    t.addListener({
                        messageType: s.mpObserve,
                        validators: e,
                        handlers: async (e, i) => {
                            const {
                                partitionKey: d
                            } = i;
                            if (!d || !l(d)) {
                                const n = "partitionKey parameter must be an alphanumeric string, and at least 5 characters long.";
                                return a.logger.warning("Error handling message.", {
                                    messageType: e,
                                    errMessage: n
                                }), void t.sendMessage({
                                    messageType: s.mpObserveResponse,
                                    data: {
                                        success: !1,
                                        error: n,
                                        partitionKey: d
                                    }
                                })
                            }
                            await c(n);
                            const u = o(d);
                            n.unobserve(u, t), n.observe(u, t, (e => {
                                r.partitionKeyLastObserved = d, t.sendMessage({
                                    messageType: s.mpObserveResponse,
                                    data: {
                                        success: !0,
                                        data: e,
                                        partitionKey: d
                                    }
                                })
                            }))
                        },
                        cleanup: () => {
                            null !== r.partitionKeyLastObserved && n.unobserve(o(r.partitionKeyLastObserved), t)
                        }
                    })
                })(e, t, n),
                function(e, t, n) {
                    t.addListener({
                        messageType: s.mpSet,
                        validators: e,
                        handlers: async (e, i) => {
                            const {
                                partitionKey: r,
                                data: d
                            } = i;
                            if (!r || !l(r)) {
                                const n = "partitionKey parameter must be an alphanumeric string, and at least 5 characters long.";
                                return a.logger.warning("Error handling message.", {
                                    messageType: e,
                                    errMessage: n
                                }), void t.sendMessage({
                                    messageType: s.mpSetResponse,
                                    data: {
                                        success: !1,
                                        error: n,
                                        partitionKey: r
                                    }
                                })
                            }
                            if (!d || "object" != typeof d || Array.isArray(d)) {
                                const n = "data must be an object.";
                                return a.logger.warning("Error handling message.", {
                                    messageType: e,
                                    errMessage: n
                                }), void t.sendMessage({
                                    messageType: s.mpSetResponse,
                                    data: {
                                        success: !1,
                                        error: n,
                                        partitionKey: r
                                    }
                                })
                            }
                            await c(n);
                            const u = o(r);
                            n.post(u, d).then((e => {
                                t.sendMessage({
                                    messageType: s.mpSetResponse,
                                    data: {
                                        success: !0,
                                        data: e,
                                        partitionKey: r
                                    }
                                })
                            }), (e => {
                                a.logger.trace("Error settiing marketing preferences", e), t.sendMessage({
                                    messageType: s.mpSetResponse,
                                    data: {
                                        success: !1,
                                        error: e.message,
                                        partitionKey: r
                                    }
                                })
                            }))
                        }
                    })
                }(e, t, n)
            };
            var a = n(1);
            const s = {
                    mpObserve: "marketing-preferences-observe",
                    mpObserveResponse: "marketing-preferences-observe-response",
                    mpSet: "marketing-preferences-set",
                    mpSetResponse: "marketing-preferences-set-response"
                },
                i = {
                    marketingPreferencesReady: "/lol-marketing-preferences/v1/ready",
                    marketingPreferencesPartition: "/lol-marketing-preferences/v1/partition/{partitionKey}"
                },
                r = {
                    partitionKeyLastObserved: null
                };

            function l(e) {
                return "string" == typeof e && e.match(/^[_\-a-z0-9]+$/i) && e.length >= 5
            }

            function o(e) {
                return i.marketingPreferencesPartition.replace("{partitionKey}", e)
            }

            function c(e) {
                return new Promise((t => {
                    const n = a => {
                        a && (e.unobserve(i.marketingPreferencesReady, n), t())
                    };
                    e.observe(i.marketingPreferencesReady, n)
                }))
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addMissionsListeners = function(e, t, n) {
                (function(e, t) {
                    e.addListener({
                        messageType: s.missionsSeriesObserve,
                        handlers: (n, a) => {
                            t.unobserve(i.missionSeriesPath, e), t.observe(i.missionSeriesPath, e, (t => {
                                e.sendMessage({
                                    messageType: s.missionsSeriesChanged,
                                    data: t
                                })
                            }))
                        },
                        cleanup: () => {
                            t.unobserve(i.missionSeriesPath, e)
                        }
                    })
                })(t, n),
                function(e, t) {
                    e.addListener({
                        messageType: s.missionsSeriesOpt,
                        handlers: (n, i) => {
                            const r = {
                                    messageType: s.missionSeriesOptResponse,
                                    data: {
                                        success: !1,
                                        data: i
                                    }
                                },
                                l = !!i.confirmOptIn && i.confirmOptIn,
                                o = {
                                    option: "OPT_IN",
                                    seriesId: i.seriesId
                                };
                            if (l) {
                                (0, a.getProvider)().get("rcp-fe-lol-uikit").getModalManager().add({
                                    type: "DialogConfirm",
                                    data: {
                                        contents: a.tra.get("mission_series_confirmation"),
                                        acceptText: a.tra.get("mission_series_confirmation_accept"),
                                        declineText: a.tra.get("mission_series_confirmation_decline"),
                                        closeButton: !1
                                    }
                                }).acceptPromise.then((() => {
                                    t.put("/lol-missions/v2/player/opt", o).then((() => {
                                        r.data.success = !0, e.sendMessage(r)
                                    })).catch((() => e.sendMessage(r)))
                                }), (() => e.sendMessage(r)))
                            } else t.put("/lol-missions/v2/player/opt", o).then((() => {
                                r.data.success = !0, e.sendMessage(r)
                            })).catch((() => e.sendMessage(r)))
                        }
                    })
                }(t, n),
                function(e, t) {
                    t.addListener({
                        messageType: s.missionsShow,
                        validators: e,
                        handlers: () => {
                            a.SharedComponentsApi.getApi_HomeRegistry().getMissionsTrackerHandler().then((e => {
                                e()
                            }))
                        }
                    })
                }(e, t),
                function(e, t) {
                    t.addListener({
                        messageType: s.missionsCelebrate,
                        validators: e,
                        handlers: (e, n) => {
                            a.SharedComponentsApi.getApi_HomeRegistry().getMissionsCelebrateHandler().then((e => {
                                const i = {
                                    messageType: s.missionsCelebrateResponse,
                                    data: {
                                        params: n
                                    }
                                };
                                if (!(n && n.internalName && "string" == typeof n.internalName)) return i.data.success = !1, i.data.error = {
                                    responseCode: 400,
                                    message: "rcp-fe-lol-home-missions-celebrate must contain data.internalName"
                                }, t.sendMessage(i), void a.logger.warning("rcp-fe-lol-home-missions-celebrate must contain data.internalName");
                                e({
                                    internalName: n.internalName
                                }, n.selectedRewardGroups).then((e => {
                                    i.data.success = !0, t.sendMessage(i)
                                })).catch((e => {
                                    i.data.success = !1, i.data.error = e, t.sendMessage(`rcp-fe-lol-home-missions-celebrate failed: ${e.message}`), a.logger.error("rcp-fe-lol-home-missions-celebrate failed", e.message)
                                }))
                            }))
                        }
                    })
                }(e, t),
                function(e, t, n) {
                    t.addListener({
                        messageType: s.missionsObserve,
                        validators: e,
                        handlers: (e, a) => {
                            n.unobserve(i.missionsPath, t), n.observe(i.missionsPath, t, (e => {
                                t.sendMessage({
                                    messageType: s.missionsChanged,
                                    data: e
                                })
                            }))
                        },
                        cleanup: () => {
                            n.unobserve(i.missionsPath, t)
                        }
                    })
                }(e, t, n)
            };
            var a = n(1);
            const s = {
                    missionsSeriesObserve: "rcp-fe-lol-missions-observe-series",
                    missionsSeriesChanged: "rcp-fe-lol-missions-series-changed",
                    missionsSeriesOpt: "rcp-fe-lol-missions-opt-series",
                    missionSeriesOptResponse: "rcp-fe-lol-missions-opt-series-response",
                    missionsShow: "rcp-fe-lol-home-show-missions",
                    missionsCelebrate: "rcp-fe-lol-home-missions-celebrate",
                    missionsCelebrateResponse: "rcp-fe-lol-home-missions-celebrate-response",
                    missionsObserve: "rcp-fe-lol-home-observe-missions",
                    missionsChanged: "rcp-fe-lol-home-missions-changed"
                },
                i = {
                    missionSeriesPath: "/lol-missions/v1/series",
                    missionsPath: "/lol-missions/v1/missions"
                }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addProgressionListeners = function(e, t, n) {
                (function(e, t, n) {
                    t.addListener({
                        messageType: s.progressionGroupConfigObserve,
                        validators: e,
                        handlers: (e, r) => {
                            const {
                                groupId: l
                            } = r;
                            if (!l) {
                                const t = "Progression groupId must be set";
                                return void a.logger.warning("Error handling message.", {
                                    messageType: e,
                                    errMessage: t
                                })
                            }
                            const o = `/lol-progression/v1/groups/${l}/configuration`;
                            i.progressionConfigPathLastObserved = o, n.unobserve(o, t), n.observe(o, t, (e => {
                                t.sendMessage({
                                    messageType: s.progressionGroupConfigChanged,
                                    data: e
                                })
                            }))
                        },
                        cleanup: () => {
                            i.progressionConfigPathLastObserved && n.unobserve(i.progressionConfigPathLastObserved, t)
                        }
                    })
                })(e, t, n),
                function(e, t, n) {
                    t.addListener({
                        messageType: s.progressionGroupConfigObserve,
                        validators: e,
                        handlers: (e, r) => {
                            const {
                                groupId: l
                            } = r;
                            if (!l) {
                                const t = "Progression groupId must be set";
                                return void a.logger.warning("Error handling message.", {
                                    messageType: e,
                                    errMessage: t
                                })
                            }
                            const o = `/lol-progression/v1/groups/${l}/instanceData`;
                            i.progressionDataPathLastObserved = o, n.unobserve(o, t), n.observe(o, t, (e => {
                                t.sendMessage({
                                    messageType: s.progressionGroupDataChanged,
                                    data: e
                                })
                            }))
                        },
                        cleanup: () => {
                            i.progressionDataPathLastObserved && n.unobserve(i.progressionDataPathLastObserved, t)
                        }
                    })
                }(e, t, n)
            };
            var a = n(1);
            const s = {
                    progressionGroupConfigObserve: "rcp-fe-lol-home-progression-group-config-observe",
                    progressionGroupConfigChanged: "rcp-fe-lol-home-progression-group-config-changed",
                    progressionGroupDataObserve: "rcp-fe-lol-home-progression-group-data-observe",
                    progressionGroupDataChanged: "rcp-fe-lol-home-progression-group-data-changed"
                },
                i = {
                    progressionConfigPathLastObserved: null,
                    progressionDataPathLastObserved: null
                }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addRewardsListeners = function(e, t, n) {
                (function(e, t, n) {
                    t.addListener({
                        messageType: s.rewardsSelect,
                        validators: e,
                        handlers: (e, i) => {
                            const {
                                grantId: r
                            } = i;
                            if (!r) {
                                const t = "Reward grantId must be set";
                                return void a.logger.warning("Error handling message.", {
                                    messageType: e,
                                    errMessage: t
                                })
                            }
                            const l = `/lol-rewards/v1/grants/${r}/select`;
                            n.post(l, i).then((e => {
                                t.sendMessage({
                                    messageType: s.rewardsSelectResponse,
                                    data: {
                                        success: !0,
                                        data: e
                                    }
                                })
                            }), (e => {
                                a.logger.trace("Error selecting rewards", e), t.sendMessage({
                                    messageType: s.rewardsSelectResponse,
                                    data: {
                                        success: !1,
                                        error: e.message
                                    }
                                })
                            }))
                        }
                    })
                })(e, t, n),
                function(e, t, n) {
                    t.addListener({
                        messageType: s.rewardsGrantsObserve,
                        validators: e,
                        handlers: (e, a) => {
                            const r = "/lol-rewards/v1/grants";
                            i.availableGrantsPathLastObserved = r, n.unobserve(r, t), n.observe(r, t, (e => {
                                const n = e.filter((e => "PENDING_SELECTION" === e.info.status)).map((e => ({
                                    info: {
                                        id: e.info.id,
                                        rewardGroupId: e.info.rewardGroupId
                                    },
                                    rewardGroup: {
                                        localizations: e.rewardGroup.localizations,
                                        rewards: e.rewardGroup.rewards
                                    }
                                })));
                                t.sendMessage({
                                    messageType: s.rewardsGrantsChanged,
                                    data: n
                                })
                            }))
                        },
                        cleanup: () => {
                            i.availableGrantsPathLastObserved && n.unobserve(i.availableGrantsPathLastObserved, t)
                        }
                    })
                }(e, t, n)
            };
            var a = n(1);
            const s = {
                    rewardsSelect: "rcp-fe-lol-home-rewards-select",
                    rewardsSelectResponse: "rcp-fe-lol-home-rewards-select-response",
                    rewardsGrantsObserve: "rcp-fe-lol-home-selectable-rewards-grants-observe",
                    rewardsGrantsChanged: "rcp-fe-lol-home-selectable-rewards-grants-changed"
                },
                i = {
                    availableGrantsPathLastObserved: null
                }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addOpenFullPageModalListener = function(e, t, n, a) {
                c.forEach((s => {
                    t.addListener({
                        messageType: s,
                        validators: e,
                        handlers: d(e, n, a)
                    })
                }))
            };
            var a, s = n(1),
                i = (a = n(345)) && a.__esModule ? a : {
                    default: a
                };
            const r = n(359).default,
                l = n(361).default,
                o = r({
                    WindowMessenger: s.WindowMessenger,
                    defer: l
                }),
                c = ["rcp-fe-lol-home-open-full-page-modal"],
                d = (e, t, n) => (...a) => {
                    const r = o.create();
                    s.WindowMessenger.handlers.lol.openFullPageModal(s.SharedComponentsApi.getApi_fullPageModalManager(), (({
                        url: a
                    }) => {
                        const s = document.createElement("div"),
                            l = document.createElement("div");
                        return r.setAttribute("src", a).setAttribute("frameborder", 0).setAttribute("allowtransparency", !0).setAttribute("allowfullscreen", !0).setAttribute("data-item-type", "full_page_modal"), r.domNode.classList.add("rcp-fe-lol-uikit-full-page-modal-iframe"), l.classList.add("rcp-fe-lol-home-article-loading-spinner", "loading"), r.addLoadedListener("rcp-fe-lol-home-loaded", e), r.whenLoaded((() => {
                            l.classList.remove("loading")
                        })), s.appendChild(l), r.appendTo(s), (0, i.default)(e, r, t, n), s
                    }), (e => {
                        r.startListening();
                        const t = Date.now();
                        e.addEventListener("close", (() => {
                            r.remove();
                            const e = Date.now() - t,
                                n = {
                                    url: r.domNode.src,
                                    time: e
                                };
                            e > 10 && s.Telemetry.sendCustomData("time_spent_on_article", n)
                        }))
                    }))(...a)
                }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function(e) {
                return (0, a.ensureDependency)(e, "WindowMessenger"), (0, a.ensureDependency)(e, "defer"), {
                    create: function() {
                        const {
                            WindowMessenger: t
                        } = e, {
                            defer: n
                        } = e, a = {
                            domNode: document.createElement("iframe"),
                            parent: null,
                            loadedPromise: n(),
                            container: null,
                            isLoaded: !1,
                            listeners: [],
                            loadedTimeouts: [],
                            rejectTimeout: 0,
                            isListening: !1,
                            hasListeners: !1,
                            loadedChangeListeners: []
                        };
                        a.domNode.setAttribute("referrerpolicy", "no-referrer-when-downgrade");
                        const s = {
                            domNode: a.domNode,
                            isLoaded: () => a.isLoaded,
                            isListening: () => a.isListening,
                            hasListeners: () => a.hasListeners,
                            listeners: () => a.listeners,
                            whenLoaded: function(e, t, n) {
                                e && (a.loadedPromise.promise = a.loadedPromise.promise.then(e));
                                t && (a.loadedPromise.promise = a.loadedPromise.promise.catch(t));
                                n && (a.rejectTimeout = n);
                                return s
                            },
                            addListener: r,
                            addListeners: i,
                            addLoadedListener: function(e, t) {
                                return r({
                                    messageType: e,
                                    validators: t || [],
                                    handlers: () => {
                                        s.setLoaded(!0)
                                    }
                                })
                            },
                            setAttribute: function(e, t) {
                                return s.domNode.setAttribute(e, t), s
                            },
                            removeAttribute: function(e) {
                                return s.domNode.removeAttribute(e), s
                            },
                            appendTo: o,
                            reattach: function() {
                                a.parent && o(a.parent);
                                return s
                            },
                            remove: c,
                            setLoaded: d,
                            startListening: function() {
                                if (null === a.domNode.contentWindow) throw new Error("Attempted to add listeners to an unattached iframe");
                                t.addMessageListeners(a.domNode.contentWindow, a.listeners), a.isListening = !0, a.rejectTimeout && a.loadedTimeouts.push(setTimeout((() => {
                                    a.loadedPromise.reject(new Error("Iframe load timeout"))
                                }), a.rejectTimeout));
                                return s
                            },
                            stopListening: l,
                            sendMessage: function(e) {
                                if (null === a.domNode.contentWindow) throw new Error(`Attempted to send message to an unattached iframe.\n            messageType: ${e.messageType},\n            src: ${a.domNode.src}`);
                                return t.sendMessage(a.domNode.contentWindow, e), s
                            },
                            reload: function() {
                                const e = a.domNode.parentNode;
                                e ? (c(), o(e)) : u();
                                return s
                            }
                        };

                        function i(e) {
                            if (a.isListening) throw new Error("impossible to add handlers to an iframe after starting listeners");
                            return a.listeners = a.listeners.concat(e), s
                        }

                        function r(e) {
                            return i([e])
                        }

                        function l() {
                            return a.isListening = !1, null !== a.domNode.contentWindow && t.removeMessageListener(a.domNode.contentWindow), m(), s
                        }

                        function o(e) {
                            return e.appendChild(s.domNode), u(), s
                        }

                        function c() {
                            const e = a.domNode.parentNode;
                            return l(), d(!1), e && (a.parent = e, e.removeChild(a.domNode)), s
                        }

                        function d(e) {
                            return e ? (m(), a.loadedPromise.resolve()) : a.loadedPromise = n(), a.loadedChangeListeners.forEach((t => t(e))), a.isLoaded = e, s
                        }

                        function u() {
                            d(!1), l()
                        }

                        function m() {
                            a.loadedTimeouts.forEach((e => clearTimeout(e))), a.loadedTimeouts.splice(0)
                        }
                        return Object.freeze(s)
                    }
                }
            };
            var a = n(360)
        }, (e, t) => {
            "use strict";

            function n(e, t) {
                if (!e || !e[t]) throw new TypeError(`${t} dependency is required`)
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ensureDependencies = function(e, t) {
                return t.forEach((t => n(e, t)))
            }, t.ensureDependency = n
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function() {
                let e = null,
                    t = null;
                const n = new a.Bluebird((function() {
                    e = arguments[0], t = arguments[1]
                }));
                if (!e || !t) throw new Error("Unable to create deferred object.");
                return {
                    resolve: e,
                    reject: t,
                    promise: n
                }
            };
            var a = n(1)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addOpenPAWListener = function(e, t, n) {
                t.addListener({
                    messageType: "rcp-fe-lol-home-open-paw",
                    validators: e,
                    handlers: (e, {
                        inventoryType: t,
                        itemId: i,
                        source: d = "Home"
                    }) => {
                        if (!i || !t) return void s.logger.warning("rcp-fe-lol-home-open-paw requires itemId and inventoryType");
                        ["CHAMPION", "CHAMPION_SKIN"].includes(t) ? "CHAMPION_SKIN" === t ? n.get(`/lol-store/v1/skins/${i}`).then((e => {
                            e && e.tags && e.tags.includes(r) ? o(e.offerId, l, d) : c(i, t, d)
                        })).catch((e => {
                            s.logger.warning("Error handling openPAWListenerHandler in managed-iframe", e)
                        })) : c(i, t, d) : (0, a.openStoreListenerHandler)(e, {
                            inventoryType: t,
                            itemId: i
                        })
                    }
                })
            };
            var a = n(363),
                s = n(1),
                i = n(30);
            const r = "quest-skin",
                l = {
                    templateType: i.PAW.TEMPLATE_TYPES.LARGE_TWO_COLUMN_LANDSCAPE
                },
                o = (e, t, n) => {
                    (0, s.getProvider)().getOptional("rcp-fe-lol-paw").then((a => {
                        a.createPawTemplateModalAsync(e, t, n) && a.getBaseSkinLineData(e).then((e => a.populatePawTemplateModal(e)))
                    }), (e => s.logger.error("Provider getOptional failure", e))).catch((e => {
                        s.logger.warning("Error handling openPawTemplateModal in managed-iframe", e)
                    }))
                },
                c = (e, t, n) => {
                    (0, s.getProvider)().getOptional("rcp-fe-lol-paw").then((a => a.createPAWModal({
                        itemId: parseInt(e),
                        inventoryType: t
                    }, n, null)), (e => s.logger.error("Provider getOptional failure", e))).catch((e => {
                        s.logger.warning("Error handling openPawLegacyModal in managed-iframe", e)
                    }))
                }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addOpenStoreListener = function(e, t) {
                s.forEach((n => {
                    t.addListener({
                        messageType: n,
                        validators: e,
                        handlers: i
                    })
                }))
            }, t.openStoreListenerHandler = void 0;
            var a = n(1);
            const s = ["rcp-fe-lol-home-open-store", "lc_store_deeplink"],
                i = (e, {
                    page: t,
                    items: n = null,
                    inventoryType: s,
                    itemId: i
                }) => {
                    const r = a.SharedComponentsApi.getApi_Router();
                    if (n) {
                        if (!t) return void a.logger.warning("page must be specified when using the items array");
                        const e = n.filter((e => e.inventoryType && e.itemId));
                        e.length !== n.length && a.logger.warning("Items are missing required fields. Both inventoryType and itemId are required for each item.", {
                            validItems: e.length,
                            totalItems: n.length
                        }), r.navigateTo("rcp-fe-lol-store", {
                            page: t,
                            items: e
                        })
                    } else if (void 0 !== s && void 0 !== i) {
                        a.logger.warning("DEPRECATION WARNING: inventoryType and itemId are depracted parameters, please use the items array with a single item");
                        let e = t;
                        if (!e) {
                            const t = {
                                BOOST: "boosts",
                                BUNDLES: "bundles",
                                CHAMPION_SKIN: "skins",
                                CHAMPION: "champions",
                                COMPANION: "companions",
                                CURRENCY: "tickets",
                                EMOTE: "emotes",
                                HEXTECH_CRAFTING: "hextech",
                                RUNE: "runes",
                                SPELL_BOOK_PAGE: "runes",
                                STATSTONE: "statstones",
                                SUMMONER_ICON: "icons",
                                TFT_MAP_SKIN: "tft_map_skins",
                                WARD_SKIN: "ward_skins"
                            };
                            e = t.hasOwnProperty(s) ? t[s] : "featured"
                        }
                        const n = [{
                            inventoryType: s,
                            itemId: i
                        }];
                        r.navigateTo("rcp-fe-lol-store", {
                            page: e,
                            items: n
                        })
                    } else r.navigateTo("rcp-fe-lol-store", {
                        page: t || "featured"
                    })
                };
            t.openStoreListenerHandler = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addOpenUiListeners = function(e, t) {
                (function(e, t) {
                    t.addListener({
                        messageType: s.runesOpen,
                        validators: e,
                        handlers: () => {
                            a.SharedComponentsApi.getApi_HomeRegistry().getRunesHandler().then((e => {
                                e()
                            }))
                        }
                    })
                })(e, t),
                function(e, t) {
                    t.addListener({
                        messageType: s.freeChampRotationOpen,
                        validators: e,
                        handlers: () => {
                            a.SharedComponentsApi.getApi_HomeRegistry().getFreeToPlayHandler().then((e => {
                                e()
                            }))
                        }
                    })
                }(e, t),
                function(e, t) {
                    t.addListener({
                        messageType: s.personalizedOffersOpen,
                        validators: e,
                        handlers: () => {
                            a.SharedComponentsApi.getApi_Router().navigateTo("rcp-fe-lol-yourshop")
                        }
                    })
                }(e, t),
                function(e, t) {
                    t.addListener({
                        messageType: s.yourShopOpen,
                        validators: e,
                        handlers: () => {
                            a.SharedComponentsApi.getApi_Router().navigateTo("rcp-fe-lol-yourshop")
                        }
                    })
                }(e, t),
                function(e, t) {
                    t.addListener({
                        messageType: s.lootOpen,
                        validators: e,
                        handlers: () => {
                            a.SharedComponentsApi.getApi_Router().navigateTo("rcp-fe-lol-loot")
                        }
                    })
                }(e, t),
                function(e, t) {
                    t.addListener({
                        messageType: s.clashOpen,
                        validators: e,
                        handlers: () => {
                            a.SharedComponentsApi.getApi_HomeRegistry().getClashHandler().then((e => {
                                e()
                            }))
                        }
                    })
                }(e, t),
                function(e, t) {
                    t.addListener({
                        messageType: s.championDetailsOpen,
                        validators: e,
                        handlers: (e, t) => {
                            a.SharedComponentsApi.getApi_HomeRegistry().getChampionDetailsHandler().then((e => {
                                e(t)
                            }))
                        }
                    })
                }(e, t)
            };
            var a = n(1);
            const s = {
                runesOpen: "rcp-fe-lol-home-runes-open",
                freeChampRotationOpen: "rcp-fe-lol-home-free-champ-rotation-open",
                yourShopOpen: "open-yourshop",
                lootOpen: "rcp-fe-lol-home-open-loot",
                clashOpen: "rcp-fe-lol-home-show-clash",
                championDetailsOpen: "rcp-fe-lol-home-open-champion-details",
                personalizedOffersOpen: "rcp-fe-lol-home-personalized-offers-open"
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addPubHubConfigListener = function(e, t, n) {
                t.addListener({
                    messageType: "pubhub-config-request",
                    validators: e,
                    handlers: async () => {
                        try {
                            const e = await n.get("/lol-publishing-content/v1/listeners/pubhub-config");
                            t.sendMessage({
                                messageType: "pubhub-config-response",
                                data: e
                            })
                        } catch (e) {
                            a.logger.warning(`Failed to get PubHub config: ${e.message}`)
                        }
                    }
                })
            };
            var a = n(1)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addQueuesListeners = function(e, t, n) {
                const c = r.currentSummonerPath,
                    d = e => {
                        !e || e.unnamed || e.nameChangeFlag || n.get("/lol-login/v1/session").then((e => {
                            e && "SUCCEEDED" === e.state && (! function(e, t, n) {
                                if (!e || "SUCCEEDED" !== e.state) throw new Error("Trying to set up queue observers without a valid session");
                                s.session = e,
                                    function(e, t) {
                                        t.observe(r.eligibleQueuesPath, (n => {
                                            if (n) return t.post("/lol-lobby/v2/eligibility/self").then((t => {
                                                t = t.filter((e => !0 === e.eligible)), s.eligibleQueues = t, o(e, i.eligibleQueuesResponse, {
                                                    queues: s.eligibleQueues
                                                })
                                            }))
                                        }))
                                    }(t, n),
                                    function(e, t) {
                                        let n = !1,
                                            a = !1,
                                            l = !0;
                                        const c = () => {
                                            const t = s.playEnabled;
                                            s.playEnabled = n && a && l, t !== s.playEnabled && o(e, i.playEnabledResponse, {
                                                enabled: s.playEnabled
                                            })
                                        };
                                        t.observe(r.gameflowAvailabilityPath, (e => {
                                            e && (n = e.isAvailable && ("Available" === e.state || !e.state), c())
                                        })), t.observe(r.shutdownLawStatusPath, (e => {
                                            e && (a = !e.isAllQueuesDisabled, c())
                                        })), t.observe(r.leagueProductStatePath, (e => {
                                            e && e.components && (l = e.components.every((e => "Repairing" !== e.action)), c())
                                        }))
                                    }(t, n)
                            }(e, t, n), n.unobserve(c, d))
                        }))
                    };
                n.observe(c, d),
                    function(e, t, n) {
                        t.addListener({
                            messageType: i.eligibleQueuesRequest,
                            validators: e,
                            handlers: (e, n) => {
                                s.eligibleQueuesListeners.add(t), o(t, i.eligibleQueuesResponse, {
                                    queues: s.eligibleQueues
                                })
                            },
                            cleanup: () => {
                                l(t, n)
                            }
                        })
                    }(e, t, n),
                    function(e, t, n) {
                        t.addListener({
                            messageType: i.playEnabledRequest,
                            validators: e,
                            handlers: (e, n) => {
                                s.playEnabledListeners.add(t), o(t, i.playEnabledResponse, {
                                    enabled: s.playEnabled
                                })
                            },
                            cleanup: () => {
                                l(t, n)
                            }
                        })
                    }(e, t, n),
                    function(e, t, n) {
                        t.addListener({
                            messageType: i.createLobbyRequest,
                            validators: e,
                            handlers: (e, {
                                queueId: r
                            }) => {
                                const l = {
                                    messageType: i.createLobbyResponse,
                                    data: {
                                        success: !1,
                                        queueId: r
                                    }
                                };
                                if (!s.eligibleQueues.some((e => e.queueId === r && e.eligible)) || !s.playEnabled) return t.sendMessage(l);
                                n.post("/lol-lobby/v2/lobby", {
                                    queueId: r
                                }).then((() => {
                                    a.SharedComponentsApi.getApi_HomeRegistry().getPartiesHandler().then((e => {
                                        e()
                                    })), l.data.success = !0, t.sendMessage(l)
                                })).catch((() => t.sendMessage(l)))
                            },
                            cleanup: () => {
                                l(t, n)
                            }
                        })
                    }(e, t, n),
                    function(e, t, n) {
                        t.addListener({
                            messageType: i.launchTrainingRequest,
                            validators: e,
                            handlers: (e, {
                                trainingName: a
                            }) => {
                                let r;
                                const l = {
                                    messageType: i.launchTrainingResponse,
                                    data: {
                                        success: !1,
                                        trainingName: a
                                    }
                                };
                                if (!s.playEnabled) return t.sendMessage(l);
                                r = "battle-training" === a ? "/lol-gameflow/v1/battle-training/start" : "/lol-gameflow/v1/basic-tutorial/start", n.post(r).then((() => {
                                    l.data.success = !0, t.sendMessage(l)
                                })).catch((() => t.sendMessage(l)))
                            },
                            cleanup: () => {
                                l(t, n)
                            }
                        })
                    }(e, t, n)
            };
            var a = n(1);
            const s = {
                    eligibleQueues: [],
                    eligibleQueuesListeners: new Set,
                    playEnabled: !1,
                    playEnabledListeners: new Set,
                    session: null
                },
                i = {
                    eligibleQueuesRequest: "rcp-fe-lol-home-eligible-queues",
                    eligibleQueuesResponse: "eligible-queues-response",
                    playEnabledRequest: "rcp-fe-lol-home-play-enabled",
                    playEnabledResponse: "play-enabled-response",
                    createLobbyRequest: "rcp-fe-lol-home-create-lobby",
                    createLobbyResponse: "create-lobby-response",
                    launchTrainingRequest: "rcp-fe-lol-home-launch-training",
                    launchTrainingResponse: "launch-training-response"
                },
                r = {
                    currentSummonerPath: "/lol-summoner/v1/current-summoner",
                    eligibleQueuesPath: "/lol-lobby/v2/eligibility/initial-configuration-complete",
                    gameflowAvailabilityPath: "/lol-gameflow/v1/availability",
                    shutdownLawStatusPath: "/lol-kr-shutdown-law/v1/status",
                    leagueProductStatePath: "/patcher/v1/products/league_of_legends/state"
                };

            function l(e, t) {
                t.unobserve(r.eligibleQueuesPath, e), t.unobserve(r.gameflowAvailabilityPath, e), t.unobserve(r.shutdownLawStatusPath, e), t.unobserve(r.leagueProductStatePath, e)
            }

            function o(e, t, n) {
                const a = {
                    messageType: t,
                    data: n
                };
                e.sendMessage(a)
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addSessionDataListener = function(e, t, n) {
                t.addListener({
                    messageType: "rcp-fe-lol-home-session-request",
                    validators: e,
                    handlers: () => {
                        n.get("/lol-login/v1/session").then((e => {
                            t.sendMessage({
                                messageType: "rcp-fe-lol-home-session-response",
                                data: {
                                    sessionData: {
                                        idToken: e.idToken
                                    }
                                }
                            })
                        })).catch((e => {
                            a.logger.warning("Error handling addSessionDataListener in managed-iframe", e)
                        }))
                    }
                })
            };
            var a = n(1)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addSubnavListeners = function(e, t) {
                (function(e, t) {
                    const {
                        Home: n
                    } = s.default;
                    t.addListener({
                        messageType: i.homeEnabledTabsRequest,
                        validators: e,
                        handlers: e => {
                            n.getEnabledTabIds().then((e => {
                                t.sendMessage({
                                    messageType: i.homeEnabledTabsResponse,
                                    data: {
                                        tabIds: e
                                    }
                                })
                            }))
                        }
                    })
                })(e, t),
                function(e, t) {
                    const {
                        Home: n
                    } = s.default;
                    t.addListener({
                        messageType: i.homeChangeTab,
                        validators: e,
                        handlers: (e, {
                            tabId: t
                        }) => {
                            n.showSubnavTab(t)
                        }
                    })
                }(e, t),
                function(e, t) {
                    const {
                        Home: n
                    } = s.default;
                    t.addListener({
                        messageType: i.homeHighlightTab,
                        validators: e,
                        handlers: (e, {
                            tabId: t,
                            highlightState: a
                        }) => {
                            n.setTabHighlight(t, a)
                        }
                    })
                }(e, t)
            };
            var a, s = (a = n(1)) && a.__esModule ? a : {
                default: a
            };
            const i = {
                homeEnabledTabsRequest: "rcp-fe-lol-home-enabled-tabs-request",
                homeEnabledTabsResponse: "rcp-fe-lol-home-enabled-tabs-response",
                homeChangeTab: "rcp-fe-lol-home-change-tab",
                homeHighlightTab: "rcp-fe-lol-home-highlight-tab"
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addTastesListeners = function(e, t, i) {
                ! function(e, t, i) {
                    t.addListener({
                        messageType: n.getSkinsTastes,
                        validators: e,
                        handlers: (e, n) => {
                            i.get("/lol-platform-config/v1/namespaces/LeagueEdgeClientEnabledServices/Tastes").then((e => {
                                e ? i.observe(a.tastesReadyPath, t, (e => {
                                    e && (i.unobserve(a.tastesReadyPath, t), i.get("/lol-tastes/v1/skins-model").then((e => {
                                        t.sendMessage({
                                            messageType: "rcp-fe-lol-home-tastes-skins-response",
                                            data: e
                                        })
                                    })).catch((() => {
                                        s(t, 521)
                                    })))
                                })) : s(t, 520)
                            })).catch((() => {
                                s(t, 522)
                            }))
                        },
                        cleanup: () => {
                            i.unobserve(a.tastesReadyPath, t)
                        }
                    })
                }(e, t, i)
            };
            const n = {
                    getSkinsTastes: "rcp-fe-lol-home-tastes-skins-get"
                },
                a = {
                    tastesReadyPath: "/lol-tastes/v1/ready"
                };

            function s(e, t = 520) {
                const n = {
                    modelData: null,
                    responseCode: t
                };
                e.sendMessage({
                    messageType: "rcp-fe-lol-home-tastes-skins-response",
                    data: n
                })
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addTFTPassListeners = function(e, t, n) {
                (function(e, t, n) {
                    t.addListener({
                        messageType: s.tftPassObserve,
                        validators: e,
                        handlers: (e, a) => {
                            n.unobserve(i.tftEventPassPath, t), n.observe(i.tftEventPassPath, t, (e => {
                                if (e) {
                                    const n = function(e) {
                                        const t = e.info,
                                            n = e.milestones.map((e => r(e)));
                                        return e.bonuses.forEach((e => n.push(r(e)))), {
                                            title: t.title,
                                            description: t.description,
                                            activationTime: t.startDate,
                                            deactivationTime: t.endDate,
                                            currentLevel: e.currentLevel,
                                            totalPointsEarned: e.totalPointsEarned,
                                            premiumEntitlementId: t.premiumEntitlementId,
                                            milestones: n
                                        }
                                    }(e);
                                    t.sendMessage({
                                        messageType: s.tftPassResponse,
                                        data: n
                                    })
                                }
                            }))
                        },
                        cleanup: () => {
                            n.unobserve(i.tftEventPassPath, t)
                        }
                    })
                })(e, t, n),
                function(e, t) {
                    t.addListener({
                        messageType: s.tftEventPassOpen,
                        validators: e,
                        handlers: (e, t) => {
                            (0, a.getProvider)().getOptional("rcp-fe-lol-tft").then((e => {
                                e.showEventPass()
                            }), (e => a.logger.error("Provider getOptional failure", e)))
                        }
                    })
                }(e, t)
            };
            var a = n(1);
            const s = {
                    tftPassObserve: "tftpass-observe",
                    tftPassResponse: "tftpass-response",
                    tftEventPassOpen: "open-tft-event-pass"
                },
                i = {
                    tftEventPassPath: "/lol-tft-pass/v1/event-pass"
                };

            function r(e) {
                const t = e.rewards.map((e => ({
                    description: e.description,
                    iconUrl: e.iconUrl,
                    framedIcon: e.iconNeedsFrame
                })));
                return {
                    id: e.missionId,
                    title: e.title,
                    description: e.description,
                    iconUrl: e.iconImageUrl,
                    keystone: e.isKeystone,
                    bonus: e.isBonus,
                    level: e.level,
                    pointsNeededForMilestone: e.pointsNeededForMilestone,
                    totalPointsNeededForMilestone: e.totalPointsForMilestone,
                    pointsEarnedForMilestone: e.pointsEarnedForMilestone,
                    rewards: t
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addTFTTrovesListeners = function(e, t, n) {
                ! function(e, t) {
                    t.addListener({
                        messageType: s.tftTrovesOpen,
                        validators: e,
                        handlers: (e, t) => {
                            (0, a.getProvider)().getOptional("rcp-fe-lol-tft").then((e => {
                                e.showTroves()
                            }), (e => a.logger.error("Provider getOptional failure", e)))
                        }
                    })
                }(e, t)
            };
            var a = n(1);
            const s = {
                tftTrovesOpen: "open_tft_troves"
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addTokenListeners = function(e, t, s) {
                (function(e, t, s) {
                    t.addListener({
                        messageType: n.leagueSessionTokenRequest,
                        validators: e,
                        handlers: (e, i) => {
                            s.unobserve(a.leagueSessionTokenPath, t), s.observe(a.leagueSessionTokenPath, t, (e => {
                                e && t.sendMessage({
                                    messageType: n.leagueSessionTokenResponse,
                                    data: e
                                })
                            }))
                        },
                        cleanup: () => {
                            s.unobserve(a.leagueSessionTokenPath, t)
                        }
                    })
                })(e, t, s),
                function(e, t, s) {
                    t.addListener({
                        messageType: n.rsoAccessTokenObserve,
                        validators: e,
                        handlers: (e, i) => {
                            s.unobserve(a.rsoAccessTokenPath, this), s.observe(a.rsoAccessTokenPath, this, (e => {
                                e && t.sendMessage({
                                    messageType: n.rsoAccessTokenResponse,
                                    data: e
                                })
                            }))
                        },
                        cleanup: () => {
                            s.unobserve(a.rsoAccessTokenPath, t)
                        }
                    })
                }(e, t, s)
            };
            const n = {
                    leagueSessionTokenRequest: "league-session-token-request",
                    leagueSessionTokenResponse: "league-session-token-response",
                    rsoAccessTokenObserve: "rcp-fe-lol-home-rso-access-token-observe",
                    rsoAccessTokenResponse: "rcp-fe-lol-home-rso-access-token-response"
                },
                a = {
                    leagueSessionTokenPath: "/lol-league-session/v1/league-session-token",
                    rsoAccessTokenPath: "/lol-rso-auth/v1/authorization/access-token"
                }
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "j4pK6781",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\managed-iframe\\\\addon\\\\templates\\\\components\\\\managed-iframe.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\managed-iframe\\\\addon\\\\components\\\\managed-iframe.js\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["managed-iframe-wrapper ",["helper",["if"],[["get",["hideIframe"]],"managed-iframe-loading"],null]]]],["flush-element"],["text","\\n  "],["open-element","iframe",[]],["dynamic-attr","src",["unknown",["url"]],null],["static-attr","frameborder","0"],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["isLoadingAndNotRetrying"]]],null,2,1],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["append",["helper",["uikit-error-page"],null,[["onButtonClick","isRetrying"],[["helper",["action"],[["get",[null]],"errorRetryButtonClicked"],null],["get",["isLoading"]]]]],false],["text","\\n  "]],"locals":[]},{"statements":[["block",["if"],[["get",["isInErrorState"]]],null,0]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","managed-iframe-spinner"],["flush-element"],["text","\\n      "],["append",["unknown",["uikit-spinner"]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = r(n(376));
            n(377);
            var i = r(n(378));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            var l = a.Ember.Component.extend({
                layout: s.default,
                classNames: ["particle-glow-overlay"],
                particlesVideoUrl: i.default
            });
            t.default = l
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "7u/avJiN",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\particle-glow-overlay\\\\addon\\\\templates\\\\particle-glow-overlay.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\particle-glow-overlay\\\\addon\\\\styles\\\\particle-glow-overlay.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","particle-glow-overlay-wrapper"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","particle-glow-overlay-center-glow"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","particle-glow-overlay-particles-wrapper"],["flush-element"],["text","\\n    "],["open-element","video",[]],["static-attr","id","particle-glow-overlay-video"],["dynamic-attr","src",["unknown",["particlesVideoUrl"]],null],["static-attr","autoplay",""],["static-attr","loop",""],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "particles.webm"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(380)) && a.__esModule ? a : {
                    default: a
                };
            n(381);
            const r = "kStatMod";
            var l = s.Ember.Component.extend({
                classNames: ["perk-page-tooltip-component"],
                layout: i.default,
                selectedPrimaryPerks: s.Ember.computed("page.uiPerks.@each.styleId", "page.uiPerks.@each.slotType", "page.primaryStyleId", (function() {
                    const e = this.get("page.uiPerks") || [],
                        t = this.get("page.primaryStyleId") || 0;
                    return e.filter((e => e.styleId === t && e.slotType !== r))
                })),
                selectedSplashedPerks: s.Ember.computed("page.uiPerks.@each.styleId", "page.uiPerks.@each.slotType", "page.subStyleId", (function() {
                    const e = this.get("page.uiPerks") || [],
                        t = this.get("page.subStyleId") || 0;
                    return e.filter((e => e.styleId === t && e.slotType !== r))
                })),
                tooltipBackgroundStyle: s.Ember.computed("page.tooltipBgPath", (function() {
                    const e = this.get("page.tooltipBgPath") || "",
                        t = "linear-gradient(to right, rgba(0,0,0,0.8) 0%, rgba(0,0,0,0.52) 100%)";
                    return e ? `background-image: ${t}, url(${e});` : `background-image: ${t};`
                })),
                _iconStyle: function(e) {
                    return Boolean(e) ? `-webkit-mask-image: url(${e});` : null
                },
                primaryIconStyle: s.Ember.computed("page.primaryStyleIconPath", (function() {
                    const e = this.get("page.primaryStyleIconPath") || "";
                    return this._iconStyle(e)
                })),
                secondaryIconStyle: s.Ember.computed("page.secondaryStyleIconPath", (function() {
                    const e = this.get("page.secondaryStyleIconPath") || "";
                    return this._iconStyle(e)
                }))
            });
            t.default = l
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "8enUm943",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\perk-page-tooltip\\\\addon\\\\templates\\\\perk-page-tooltip.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\perk-page-tooltip\\\\addon\\\\styles\\\\perk-page-tooltip.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","perks-page-dropdown-details ui-dropdown-option-only"],["flush-element"],["text","\\n  "],["open-element","span",[]],["static-attr","class","perks-page-dropdown-details-bg"],["dynamic-attr","style",["unknown",["tooltipBackgroundStyle"]],null],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["perks-page-dropdown-details-style-name style",["unknown",["page","primaryStyleId"]]]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["perks-page-dropdown-details-style-icon style",["unknown",["page","primaryStyleId"]]]]],["dynamic-attr","style",["unknown",["primaryIconStyle"]],null],["flush-element"],["close-element"],["text","\\n    "],["append",["unknown",["page","primaryStyleName"]],false],["text","\\n  "],["close-element"],["text","\\n"],["block",["if"],[["get",["selectedPrimaryPerks","length"]]],null,4],["block",["if"],[["get",["page","subStyleId"]]],null,2],["block",["if"],[["get",["selectedSplashedPerks","length"]]],null,1],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","li",[]],["static-attr","class","perks-page-dropdown-details-li"],["flush-element"],["append",["unknown",["perk","name"]],false],["close-element"],["text","\\n"]],"locals":["perk"]},{"statements":[["text","    "],["open-element","ul",[]],["static-attr","class","perks-page-dropdown-details-ul"],["flush-element"],["text","\\n"],["block",["each"],[["get",["selectedSplashedPerks"]]],null,0],["text","    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["perks-page-dropdown-details-style-name secondary style",["unknown",["page","subStyleId"]]]]],["flush-element"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["perks-page-dropdown-details-style-icon style",["unknown",["page","subStyleId"]]]]],["dynamic-attr","style",["unknown",["secondaryIconStyle"]],null],["flush-element"],["close-element"],["text","\\n      "],["append",["unknown",["page","secondaryStyleName"]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","li",[]],["dynamic-attr","class",["concat",["perks-page-dropdown-details-li ",["unknown",["perk","slotType"]]]]],["flush-element"],["append",["unknown",["perk","name"]],false],["close-element"],["text","\\n"]],"locals":["perk"]},{"statements":[["text","    "],["open-element","ul",[]],["static-attr","class","perks-page-dropdown-details-ul"],["flush-element"],["text","\\n"],["block",["each"],[["get",["selectedPrimaryPerks"]]],null,3],["text","    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(383)) && a.__esModule ? a : {
                    default: a
                };
            n(384);
            var r = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["player-restriction-info-component"],
                init() {
                    this._super(...arguments), this._playerBehaviorBinding = (0, s.dataBinding)("/lol-player-behavior", s.socket), this._playerBehaviorBinding.observe("/v1/chat-restriction", this, this.onChatRestrictionChange), this._leaverbusterBinding = (0, s.dataBinding)("/lol-leaver-buster", s.socket), this._leaverbusterBinding.observe("/v1/ranked-restriction", this, this.onRankedRestrictionChange)
                },
                willDestroy() {
                    this._playerBehaviorBinding.unobserve("/v1/chat-restriction", this.onChatRestrictionChange), this._leaverbusterBinding.unobserve("/v1/ranked-restriction", this.onRankedRestrictionChange)
                },
                onChatRestrictionChange: function(e) {
                    this.set("chatRestriction", e)
                },
                onRankedRestrictionChange: function(e) {
                    this.set("rankedRestriction", e)
                },
                rankedRestrictionGamesRemaining: s.Ember.computed.alias("rankedRestriction.punishedGamesRemaining"),
                isWarningShown: s.Ember.computed.or("hasChatRestriction", "hasRankedRestriction"),
                hasRankedRestriction: s.Ember.computed.gt("rankedRestrictionGamesRemaining", 0),
                rankedRestrictionMessage: s.Ember.computed("rankedRestrictionGamesRemaining", (function() {
                    return this.get("tra").formatString("ranked_restriction_tooltip", {
                        numRestrictedGames: this.get("rankedRestrictionGamesRemaining")
                    })
                })),
                hasChatRestriction: s.Ember.computed.notEmpty("chatRestriction"),
                chatRestrictionMessage: s.Ember.computed("chatRestriction.expirationMillis", (function() {
                    const e = this.get("tra"),
                        t = this.get("chatRestriction.expirationMillis");
                    if (null != t) {
                        const n = e.moment(t).format(this.get("tra.chat_restriction_tooltip_date"));
                        return e.formatString("chat_restriction_tooltip", {
                            date: n
                        })
                    }
                    return ""
                }))
            });
            t.default = r
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "dkp2A3/z",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\player-behavior\\\\addon\\\\templates\\\\player-restriction-info.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\player-behavior\\\\addon\\\\styles\\\\player-restriction-info.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","player-restriction-info-component"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isWarningShown"]]],null,3],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","                        "],["open-element","div",[]],["static-attr","class","restriction-container"],["flush-element"],["text","\\n                            "],["open-element","p",[]],["flush-element"],["open-element","span",[]],["static-attr","class","restriction-title-text"],["flush-element"],["append",["unknown",["tra","chat_restriction_tooltip_title"]],false],["close-element"],["text"," "],["append",["unknown",["chatRestrictionMessage"]],false],["close-element"],["text","\\n                        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                        "],["open-element","div",[]],["static-attr","class","restriction-container"],["flush-element"],["text","\\n                            "],["open-element","p",[]],["flush-element"],["open-element","span",[]],["static-attr","class","restriction-title-text"],["flush-element"],["append",["unknown",["tra","ranked_restriction_tooltip_title"]],false],["close-element"],["text"," "],["append",["unknown",["rankedRestrictionMessage"]],false],["close-element"],["text","\\n                        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["static-attr","class","restriction-tooltip-body"],["flush-element"],["text","\\n                "],["open-element","div",[]],["static-attr","class","player-restriction-info-tooltip"],["flush-element"],["text","\\n                    "],["open-element","h5",[]],["static-attr","class","player-restriction-info-header"],["flush-element"],["append",["unknown",["tra","player_restriction_tooltip"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["hasRankedRestriction"]]],null,1],["block",["if"],[["get",["hasChatRestriction"]]],null,0],["text","                "],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","player-restriction-warning-icon"],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition"],["right"]],2]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            n(386);
            var s, i = (s = n(387)) && s.__esModule ? s : {
                default: s
            };
            const {
                RenderMode: r,
                PlayerNameComputer: l
            } = a.playerNameComponentLogic;
            var o = a.Ember.Component.extend({
                classNames: ["player-name-component"],
                layout: i.default,
                gameNameClass: "player-name__game-name",
                tagLineClass: "player-name__tag-line",
                tagName: "span",
                summonerNameClass: "player-name__summoner",
                aliasClass: "player-name__alias",
                tooltipClass: "player-name__tooltip__alias",
                tooltipGameNameClass: "player-name__tooltip__game-name",
                tooltipTagLineClass: "player-name__tooltip__tag-line",
                errorClass: "player-name__error",
                highlightNameClass: "player-name__highlight-name",
                clipboardIconClass: "player-name__clipboard-copy-icon",
                clipboardTooltipDividerClass: "player-name__tooltip-divider",
                clipboardTooltipCopyTextClass: "player-name__tooltip-clipboard-copy-text",
                isCopyEnabled: !1,
                puuid: null,
                summonerId: null,
                playerName: null,
                aliasComponent: null,
                summonerNameComponent: null,
                unobserve: null,
                componentName: a.Ember.computed("playerName.useAlias", "aliasComponent", "summonerNameComponent", (function() {
                    return this.get("playerName.useAlias") ? this.get("aliasComponent") : this.get("summonerNameComponent")
                })),
                isRenderModeFullAlias: a.Ember.computed.equal("playerName.renderMode", r.FULL_ALIAS),
                isRenderModeGameNameOnly: a.Ember.computed.equal("playerName.renderMode", r.GAME_NAME_ONLY),
                isRenderModeTagLineTooltip: a.Ember.computed.equal("playerName.renderMode", r.TAG_LINE_TOOLTIP),
                isRenderModeSummonerName: a.Ember.computed.equal("playerName.renderMode", r.SUMMONER_NAME),
                isRenderModeError: a.Ember.computed.equal("playerName.renderMode", r.ERROR),
                isRenderModeComponent: a.Ember.computed.equal("playerName.renderMode", r.COMPONENT),
                shouldShowClipboardCopiedText: !1,
                clipboardCopiedText: "",
                init() {
                    this._super(...arguments), this._computer = new l(a.playerNames), this._playerNames = a.playerNames
                },
                didReceiveAttrs() {
                    this._super(...arguments), this._shouldUseCurrentSummonerObserver() ? this.get("unobserve") || this.set("unobserve", this.get("_playerNames").observeCurrentPlayerName(this._updatePlayerNameFromCurrentSummonerUpdate.bind(this)).destroy) : this.get("unobserve") && (this.get("unobserve")(), this.set("unobserve", null)), this.get("isCopyEnabled") && this._setupCopyToClipboard(), this._computer.compute({
                        batch: this.get("batch"),
                        puuid: this.get("puuid"),
                        summonerId: this.get("summonerId"),
                        summonerName: this.get("summonerName"),
                        gameName: this.get("gameName"),
                        tagLine: this.get("tagLine"),
                        format: this.get("format"),
                        renderModeOverride: this.get("renderModeOverride"),
                        renderAliasOverride: this.get("renderAliasOverride")
                    }).then((e => this._updatePlayerName(e)))
                },
                _shouldUseCurrentSummonerObserver() {
                    const e = this.get("puuid"),
                        t = this.get("summonerId"),
                        n = this.get("summonerName"),
                        a = this.get("gameName"),
                        s = this.get("tagLine"),
                        i = this.get("_playerNames").currentSummonerPuuid;
                    return !(n || a || s || e || t) || e === i
                },
                _setupCopyToClipboard() {
                    this.tooltipManager = a.UIKit.getTooltipManager();
                    const e = this.get("_onCopy");
                    this.set("onCopy", e.bind(this)), this.set("clipboardCopiedText", this.get("tra.copied_to_clipboard"))
                },
                _updatePlayerNameFromCurrentSummonerUpdate(e) {
                    if (!e) return;
                    const t = this.get("playerName") || {};
                    t.gameName = e.gameName, t.tagLine = e.tagLine, t.summonerName = e.summonerName, this.set("playerName", t)
                },
                _updatePlayerName(e) {
                    e && this.set("playerName", e)
                },
                willDestroy() {
                    this.get("unobserve") && this.get("unobserve")(), this._clearClipboardCopiedTextTimeout()
                },
                _clearClipboardCopiedTextTimeout() {
                    const e = this.get("clipboardCopiedTextTimeout");
                    e && clearTimeout(e)
                },
                _showClipboardCopiedText() {
                    let e, t;
                    if (this.set("shouldShowClipboardCopiedText", !0), this._clearClipboardCopiedTextTimeout(), this.get("isRenderModeFullAlias") || this.get("isRenderModeGameNameOnly")) {
                        e = this.get("tooltipManager"), t = this.get("isRenderModeFullAlias") ? this.element.querySelector("#player-name-full-alias-render-mode") : this.element.querySelector("#player-name-game-name-only-render-mode");
                        const n = `<lol-uikit-tooltip><lol-uikit-content-block type="tooltip-system" class="${this.get("tooltipClass")}"><span class="${this.get("clipboardTooltipCopyTextClass")}">${this.get("clipboardCopiedText")}</span></lol-uikit-content-block></lol-uikit-tooltip>`,
                            a = {
                                type: "system",
                                positioningStrategy: "flip",
                                restrictArea: "safe-window",
                                showEvent: "nothing",
                                hideEvent: "nothing",
                                showDelay: 20,
                                transitionSpeed: 10,
                                targetAnchor: {
                                    x: "center",
                                    y: "bottom"
                                },
                                tooltipAnchor: {
                                    x: "center",
                                    y: "top"
                                }
                            };
                        e.assign(t, n, null, a), e.show(t)
                    }
                    const n = setTimeout((() => {
                        this.set("shouldShowClipboardCopiedText", !1), this.set("clipboardCopiedTextTimeout", void 0), e && t && (e.hide(t), e.unassign(t))
                    }), 5e3);
                    this.set("clipboardCopiedTextTimeout", n)
                },
                _onCopy: function(e) {
                    const t = `${this.get("playerName.gameName")}#${this.get("playerName.tagLine")}`;
                    e.preventDefault(), e.clipboardData.setData("text/plain", t), document.removeEventListener("copy", this.get("onCopy"))
                },
                actions: {
                    copyAliasToClipboard() {
                        document.addEventListener("copy", this.get("onCopy")), document.execCommand("copy"), this._showClipboardCopiedText()
                    }
                }
            });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "fJBEZO7f",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\player-name\\\\addon\\\\templates\\\\components\\\\player-name.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\player-name\\\\addon\\\\components\\\\player-name.js\\" "],["text","\\n"],["block",["if"],[["get",["isRenderModeFullAlias"]]],null,11],["text","\\n"],["block",["if"],[["get",["isRenderModeGameNameOnly"]]],null,9],["text","\\n"],["block",["if"],[["get",["isRenderModeTagLineTooltip"]]],null,7],["text","\\n"],["block",["if"],[["get",["isRenderModeSummonerName"]]],null,3],["text","\\n"],["block",["if"],[["get",["isRenderModeError"]]],null,2],["text","\\n"],["block",["if"],[["get",["isRenderModeComponent"]]],null,1]],"locals":[],"named":[],"yields":["default"],"blocks":[{"statements":[["yield","default"]],"locals":[]},{"statements":[["text","  "],["block",["component"],[["get",["componentName"]]],[["playerName"],[["get",["playerName"]]]],0],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","span",[]],["dynamic-attr","class",["concat",[["unknown",["errorClass"]]]]],["flush-element"],["append",["unknown",["tra","player_name_unknown"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","span",[]],["dynamic-attr","class",["concat",[["unknown",["summonerNameClass"]]]]],["flush-element"],["append",["unknown",["playerName","summonerName"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["dynamic-attr","class",["concat",[["unknown",["clipboardTooltipDividerClass"]]]]],["flush-element"],["close-element"],["text","\\n          "],["open-element","span",[]],["dynamic-attr","class",["concat",[["unknown",["clipboardTooltipCopyTextClass"]]]]],["flush-element"],["append",["unknown",["clipboardCopiedText"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["dynamic-attr","class",["concat",[["unknown",["tooltipClass"]]]]],["flush-element"],["text","\\n        "],["open-element","span",[]],["dynamic-attr","class",["concat",[["unknown",["tooltipGameNameClass"]]]]],["flush-element"],["append",["unknown",["playerName","gameName"]],false],["close-element"],["text","\\n        "],["open-element","span",[]],["dynamic-attr","class",["concat",[["unknown",["tooltipTagLineClass"]]]]],["flush-element"],["text","#"],["append",["unknown",["playerName","tagLine"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["shouldShowClipboardCopiedText"]]],null,4],["text","      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","span",[]],["dynamic-attr","class",["concat",[["unknown",["clipboardIconClass"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","span",[]],["dynamic-attr","class",["concat",[["unknown",["aliasClass"]]," ",["helper",["if"],[["get",["isCopyEnabled"]],["get",["highlightNameClass"]]],null]]]],["dynamic-attr","onclick",["helper",["if"],[["get",["isCopyEnabled"]],["helper",["action"],[["get",[null]],"copyAliasToClipboard"],null]],null],null],["flush-element"],["text","\\n    "],["open-element","span",[]],["dynamic-attr","class",["concat",[["unknown",["gameNameClass"]]]]],["flush-element"],["append",["unknown",["playerName","gameName"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["isCopyEnabled"]]],null,6],["block",["uikit-tooltip"],null,[["showDelay","tooltipPosition","type","positioningStrategy","restrictArea"],[500,"bottom","system","flip","safe-window"]],5],["text","  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","span",[]],["dynamic-attr","class",["concat",[["unknown",["clipboardIconClass"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","span",[]],["static-attr","id","player-name-game-name-only-render-mode"],["dynamic-attr","class",["concat",[["unknown",["aliasClass"]]," ",["helper",["if"],[["get",["isCopyEnabled"]],["get",["highlightNameClass"]]],null]]]],["dynamic-attr","onclick",["helper",["if"],[["get",["isCopyEnabled"]],["helper",["action"],[["get",[null]],"copyAliasToClipboard"],null]],null],null],["flush-element"],["text","\\n    "],["open-element","span",[]],["dynamic-attr","class",["concat",[["unknown",["gameNameClass"]]]]],["flush-element"],["append",["unknown",["playerName","gameName"]],false],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["isCopyEnabled"]]],null,8],["text","  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","span",[]],["dynamic-attr","class",["concat",[["unknown",["clipboardIconClass"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","span",[]],["static-attr","id","player-name-full-alias-render-mode"],["dynamic-attr","class",["concat",[["unknown",["aliasClass"]]," ",["helper",["if"],[["get",["isCopyEnabled"]],["get",["highlightNameClass"]]],null]]]],["dynamic-attr","onclick",["helper",["if"],[["get",["isCopyEnabled"]],["helper",["action"],[["get",[null]],"copyAliasToClipboard"],null]],null],null],["flush-element"],["text","\\n    "],["open-element","span",[]],["dynamic-attr","class",["concat",[["unknown",["gameNameClass"]]]]],["flush-element"],["append",["unknown",["playerName","gameName"]],false],["close-element"],["open-element","span",[]],["dynamic-attr","class",["concat",[["unknown",["tagLineClass"]]]]],["flush-element"],["text","#"],["append",["unknown",["playerName","tagLine"]],false],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["isCopyEnabled"]]],null,10],["text","  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = n(389),
                r = (a = n(390)) && a.__esModule ? a : {
                    default: a
                };
            n(391);
            var l = s.Ember.Component.extend({
                layout: r.default,
                classNames: ["report-modal"],
                reportModalDataService: s.Ember.inject.service("report-modal-data"),
                destroyApplication: function() {
                    this.componentFactoryApp.destroy()
                },
                overrideCategories: null,
                _defaultCategories: s.Ember.A(i.DEFAULT_CATEGORIES),
                _categories: s.Ember.computed("product", "_defaultCategories.[]", "inGameReportedCategories.[]", (function() {
                    const e = this.get("product"),
                        t = this.get("inGameReportedCategories");
                    let n = this.get("_defaultCategories");
                    return e && i.PRODUCT_REPORT_CATEGORIES_MAPPING[e] && (n = i.PRODUCT_REPORT_CATEGORIES_MAPPING[e]), n.map((e => {
                        const n = e && e.categoryId && t.includes(e.categoryId);
                        return e.isChecked = n, e.isDisabled = n, e
                    }))
                })),
                inGameReportedCategories: s.Ember.computed("reportModalDataService.inGameReportData", "reportedPlayer.puuid", (function() {
                    const e = this.get("reportedPlayer.puuid"),
                        t = this.get("reportModalDataService.inGameReportData");
                    return t && t[e] ? t[e].categories : []
                })),
                maxCommentLength: 255,
                categories: s.Ember.computed.map("_categories", (function(e) {
                    const t = s.Ember.$.extend({}, e);
                    return t.isChecked = !!e.isChecked, t.isDisabled = !!e.isDisabled, t
                })),
                categoriesSelected: s.Ember.computed("categories.[]", (function() {
                    return this.get("categories").rejectBy("isChecked", !1)
                })),
                hasVerbalAbuseReport: s.Ember.computed("categoriesSelected.[]", (function() {
                    return this.get("categoriesSelected").some((e => e.categoryId === i.VERBAL_ABUSE_REPORT_CATEGORY))
                })),
                couldShowRemedyVerbalAbuseModal: s.Ember.computed("reportModalDataService.isVerbalAbuseRemedyEnabled", "reportModalDataService.gameIdsWithVerbalAbuseReports.[]", "reportModalDataService.couldShowRemedyVerbalAbuseModalPreference", "reportedPlayer.gameId", "hasVerbalAbuseReport", (function() {
                    const e = this.get("reportModalDataService.isVerbalAbuseRemedyEnabled"),
                        t = this.get("reportedPlayer.gameId"),
                        n = this.get("reportModalDataService.gameIdsWithVerbalAbuseReports"),
                        a = this.get("reportModalDataService.couldShowRemedyVerbalAbuseModalPreference"),
                        s = this.get("hasVerbalAbuseReport");
                    return e && a && !n.includes(t) && s
                })),
                hasNocategorySelectedObserver: s.Ember.on("didInsertElement", s.Ember.observer("categories.@each.isChecked", (function() {
                    const e = 0 === this.get("categories").rejectBy("isChecked", !1).length ? "disableacceptbutton" : "enableacceptbutton";
                    this.element.dispatchEvent(new Event(e, {
                        bubbles: !0
                    }))
                }))),
                onDidInsertElement: s.Ember.on("didInsertElement", (function() {
                    this.element.addEventListener("reportPlayerClicked", (() => {
                        this.send("reportPlayerClicked")
                    })), this.element.addEventListener("closeModalClicked", (() => {
                        this.send("destroyApplication")
                    }))
                })),
                _sendPlayerReport: function(e) {
                    const t = this.get("reportLocation"),
                        n = this.get("reportModalDataService");
                    n && n.sendPlayerReport && (n.sendPlayerReport(e, t).then((() => {
                        this.destroyApplication()
                    })).catch((() => {
                        s.Telemetry.sendEvent("feature_error", {
                            id: "POSTGAME_REPORT_SEND_CATCH_ERROR",
                            message: "could not send player report, we have recieved a 404 from /lol-end-of-game/v2/player-complaints",
                            severity: "major"
                        }), this.destroyApplication()
                    })), this._showSuccessNotificationToast())
                },
                _showSuccessNotificationToast: function() {
                    const e = s.TemplateHelper.contentBlockNotification(this.get("tra.player_report_sent"));
                    s.ToastManager.add({
                        type: "DialogToast",
                        data: {
                            contents: e,
                            dismissable: !0
                        },
                        timing: "normal"
                    })
                },
                reportPlayer: function() {
                    const e = {
                        comment: this.get("comment"),
                        gameId: this.get("reportedPlayer.gameId"),
                        categories: this.get("categoriesSelected").map((e => e.categoryId)),
                        offenderSummonerId: this.get("reportedPlayer.summonerId"),
                        offenderPuuid: this.get("reportedPlayer.puuid")
                    };
                    this._sendPlayerReport(e)
                },
                actions: {
                    reportPlayerClicked: function() {
                        this.reportPlayer(), this.get("couldShowRemedyVerbalAbuseModal") && s.SharedComponentsApi.getApi_SharedPlayerBehaviorApps().showVerbalAbuseRemedyModal()
                    }
                }
            });
            t.default = l
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.VERBAL_ABUSE_REPORT_CATEGORY = t.TFT_CATEGORIES = t.PRODUCT_REPORT_CATEGORIES_MAPPING = t.DEFAULT_CATEGORIES = t.CLIENT_REPORT_LOCATIONS = void 0;
            t.VERBAL_ABUSE_REPORT_CATEGORY = "VERBAL_ABUSE";
            const n = [{
                categoryId: "NEGATIVE_ATTITUDE",
                titleKey: "report_modal_key_title_negative_attitude",
                descriptionKey: "report_modal_key_description_negative_attitude"
            }, {
                categoryId: "VERBAL_ABUSE",
                titleKey: "report_modal_key_title_verbal_abuse",
                descriptionKey: "report_modal_key_description_verbal_abuse"
            }, {
                categoryId: "LEAVING_AFK",
                titleKey: "report_modal_key_title_leaving_afk",
                descriptionKey: "report_modal_key_description_leaving_afk"
            }, {
                categoryId: "ASSISTING_ENEMY_TEAM",
                titleKey: "report_modal_key_title_assisting_enemy_team",
                descriptionKey: "report_modal_key_description_assisting_enemy_team"
            }, {
                categoryId: "HATE_SPEECH",
                titleKey: "report_modal_key_title_hate_speech",
                descriptionKey: "report_modal_key_description_hate_speech"
            }, {
                categoryId: "THIRD_PARTY_TOOLS",
                titleKey: "report_modal_key_title_third_party_tools",
                descriptionKey: "report_modal_key_description_third_party_tools"
            }, {
                categoryId: "INAPPROPRIATE_NAME",
                titleKey: "report_modal_key_title_inappropriate_name",
                descriptionKey: "report_modal_key_description_inappropriate_name"
            }];
            t.DEFAULT_CATEGORIES = n;
            const a = [{
                categoryId: "VERBAL_ABUSE",
                titleKey: "report_modal_key_title_verbal_abuse",
                descriptionKey: "report_modal_key_description_verbal_abuse"
            }, {
                categoryId: "HATE_SPEECH",
                titleKey: "report_modal_key_title_hate_speech",
                descriptionKey: "report_modal_key_description_hate_speech"
            }, {
                categoryId: "THIRD_PARTY_TOOLS",
                titleKey: "report_modal_key_title_third_party_tools",
                descriptionKey: "report_modal_key_description_third_party_tools"
            }, {
                categoryId: "INAPPROPRIATE_NAME",
                titleKey: "report_modal_key_title_inappropriate_name"
            }];
            t.TFT_CATEGORIES = a;
            const s = {
                LOL: n,
                TFT: a
            };
            t.PRODUCT_REPORT_CATEGORIES_MAPPING = s;
            t.CLIENT_REPORT_LOCATIONS = {
                MATCH_HISTORY: "MATCH_HISTORY"
            }
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "8iF/JCkB",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\report-modal\\\\addon\\\\templates\\\\report-modal.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\report-modal\\\\addon\\\\styles\\\\report-modal.styl\\" js-path=\\"null\\" "],["text","\\n"],["append",["helper",["report-header"],null,[["reportedPlayer","championSquarePortraitPath"],[["get",["reportedPlayer"]],["get",["championSquarePortraitPath"]]]]],false],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","report-body"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","report-body-text"],["flush-element"],["text","\\n    "],["append",["unknown",["tra","report_modal_description"]],false],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","ul",[]],["static-attr","class","report-body-categories"],["flush-element"],["text","\\n"],["block",["each"],[["get",["categories"]]],null,0],["text","  "],["close-element"],["text","\\n\\n  "],["comment"," this scrollable will ensure that the inner textarea scrollbar have the right styles "],["text","\\n  "],["open-element","lol-uikit-scrollable",[]],["static-attr","class","report-flat-textarea-scrollable"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-textarea",[]],["static-attr","class","report-flat-textarea"],["flush-element"],["text","\\n      "],["append",["helper",["textarea"],null,[["class","placeholder","value","maxlength"],["report-textarea",["get",["tra","report_modal_textarea_placeholder"]],["get",["comment"]],["get",["maxCommentLength"]]]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["helper",["report-category"],null,[["category"],[["get",["category"]]]]],false],["text","\\n"]],"locals":["category"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(393)) && a.__esModule ? a : {
                    default: a
                },
                r = n(394),
                l = n(30);
            var o = s.Ember.Component.extend({
                layout: i.default,
                tagName: "",
                endDateTime: null,
                almostEndingText: null,
                timeHasExpiredText: null,
                longTimeText: null,
                wrappingText: null,
                yearsCustomTraKey: null,
                weeksCustomTraKey: null,
                daysCustomTraKey: null,
                hoursCustomTraKey: null,
                minutesCustomTraKey: null,
                secondsCustomTraKey: null,
                useShortLabels: !1,
                currentTimeMetronome() {
                    this.metronomeAsyncTaskId = s.Ember.run.later((() => {
                        this.notifyPropertyChange("currentTimePulse"), this.currentTimeMetronome()
                    }), this.minimumTimeThresholdInMs / 2)
                },
                getTraKeys(e) {
                    const t = this.get(`${e}CustomTraKey`);
                    return Boolean(t) ? t : this.get("useShortLabels") ? `remaining_time_${e}_short` : `remaining_time_${e}`
                },
                remainingTimeText: s.Ember.computed("currentTimePulse", "endDateTime", "almostEndingText", "timeHasExpiredText", "longTimeText", "wrappingText", (function() {
                    const e = this.get("endDateTime");
                    if (!e) return "";
                    const t = (0, r.getRemainingTime)(e);
                    if (t.quantity < 0) return this.get("timeHasExpiredText");
                    if (t.dateObj > this.maximumTimeThresholdInMs + Date.now()) return this.get("longTimeText");
                    if (t.dateObj < this.minimumTimeThresholdInMs + Date.now()) return this.get("almostEndingText");
                    const n = s.tra.formatString(this.getTraKeys(t.unit), {
                        quantity: t.quantity
                    });
                    return this.get("wrappingText").replace("{{remainingTime}}", n)
                })),
                init() {
                    this._super(...arguments), this.minimumTimeThresholdInMs = l.TIME.TIME_CONVERSIONS.MILLISECONDS_IN_A_MINUTE, this.maximumTimeThresholdInMs = l.TIME.TIME_CONVERSIONS.MILLISECONDS_IN_A_YEAR, this.currentTimeMetronome()
                },
                willDestroyElement() {
                    this._super(...arguments), s.Ember.run.cancel(this.metronomeAsyncTaskId)
                }
            });
            t.default = o
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "2Szk8rUn",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\remaining-time\\\\addon\\\\templates\\\\remaining-time-text.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["append",["unknown",["remainingTimeText"]],false],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getRemainingTime = t.default = void 0;
            var a = n(30);
            const {
                MILLISECONDS_IN_A_SECOND: s,
                MILLISECONDS_IN_A_MINUTE: i,
                MILLISECONDS_IN_A_HOUR: r,
                MILLISECONDS_IN_A_DAY: l,
                MILLISECONDS_IN_A_WEEK: o,
                MILLISECONDS_IN_A_YEAR: c
            } = a.TIME.TIME_CONVERSIONS, d = e => {
                const t = new Date(e),
                    n = t - Date.now(),
                    d = {
                        quantity: n,
                        unit: a.TIME.TIME_UNITS.MILLISECONDS,
                        dateObj: t
                    };
                return n > c ? (d.unit = a.TIME.TIME_UNITS.YEARS, d.quantity = Math.floor(n / c)) : n > 2 * o ? (d.unit = a.TIME.TIME_UNITS.WEEKS, d.quantity = Math.floor(n / o)) : n > l ? (d.unit = a.TIME.TIME_UNITS.DAYS, d.quantity = Math.floor(n / l)) : n > r ? (d.unit = a.TIME.TIME_UNITS.HOURS, d.quantity = Math.floor(n / r)) : n > i ? (d.unit = a.TIME.TIME_UNITS.MINUTES, d.quantity = Math.floor(n / i)) : n > s && (d.unit = a.TIME.TIME_UNITS.SECONDS, d.quantity = Math.floor(n / s)), d
            };
            t.getRemainingTime = d;
            var u = {
                getRemainingTime: d
            };
            t.default = u
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(396)) && a.__esModule ? a : {
                    default: a
                };
            n(397);
            var r = s.Ember.Component.extend({
                layout: i.default,
                tagName: "",
                renderEventName: "",
                shouldSendTelemetry: !0,
                hasError: !1,
                init() {
                    this._super(...arguments);
                    const e = s.tra.get("shared_components_generic_error");
                    this.set("errorMessage", e)
                },
                didInsertElement() {
                    this._super(...arguments), this.get("shouldSendTelemetry") && (this.afterRenderTimer = s.Ember.run.scheduleOnce("afterRender", this, this.sendTelemetry))
                },
                willDestroyElement() {
                    this._super(...arguments), this.afterRenderTimer && s.Ember.run.cancel(this.afterRenderTimer)
                },
                sendTelemetry() {
                    const e = this.get("renderEventName");
                    if ("" === e) throw this.set("hasError", !0), new s.Ember.Error("You must pass renderEventName to the render-telemetry-sender component.");
                    s.Telemetry.endTracingEvent(e)
                }
            });
            t.default = r
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "VO2XtFLY",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\render-telemetry-sender\\\\addon\\\\templates\\\\components\\\\render-telemetry-sender.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\render-telemetry-sender\\\\addon\\\\components\\\\render-telemetry-sender.js\\" "],["text","\\n"],["block",["unless"],[["get",["hasError"]]],null,1,0]],"locals":[],"named":[],"yields":["default"],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","render-telemetry-sender-error-container"],["flush-element"],["text","\\n    "],["open-element","h3",[]],["static-attr","class","render-telemetry-sender-error-message"],["flush-element"],["text","\\n      "],["append",["unknown",["errorMessage"]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["yield","default"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = n(30),
                r = (a = n(399)) && a.__esModule ? a : {
                    default: a
                };
            n(400);
            var l = s.Ember.Component.extend({
                layout: r.default,
                classNames: ["shared-skin-purchase-button"],
                skin: null,
                isSkinUnlocked: s.Ember.computed.bool("skin.unlocked"),
                purchaseEnabled: s.Ember.computed.bool("skin.purchaseEnabled"),
                _openSkinPurchaseDialog() {
                    if (!this.get("purchaseEnabled")) return;
                    this.set("purchaseData", null);
                    const e = this.get("skin");
                    this.openPawModal({
                        item: e,
                        inventoryType: i.PAW.INVENTORY_TYPES.CHAMPION_SKIN,
                        modalType: i.PAW.MODAL_TYPES.SKIN_VIEWER_MODAL,
                        ownerElement: this.element
                    })
                },
                actions: {
                    showSkinPurchaseModal() {
                        this._openSkinPurchaseDialog()
                    }
                }
            });
            t.default = l
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "pjrs+1XT",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\skins\\\\addon\\\\templates\\\\skin-purchase-button.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\skins\\\\addon\\\\styles\\\\skin-purchase-button.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["unlock-skin-hit-area ",["helper",["unless"],[["get",["purchaseEnabled"]],"disabled","enabled"],null]," ",["helper",["if"],[["get",["isSkinUnlocked"]],"hidden"],null]]]],["dynamic-attr","onClick",["helper",["action"],[["get",[null]],"showSkinPurchaseModal"],null],null],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","locked-state"],["flush-element"],["close-element"],["text","\\n"],["block",["unless"],[["get",["purchaseEnabled"]]],null,1],["close-element"],["text","\\n\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["static-attr","class","quick-play-skin-purchase-unavailable-tooltip"],["flush-element"],["text","\\n        "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","skin_purchase_unavailable_tooltip"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],0]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(402)) && a.__esModule ? a : {
                    default: a
                };
            n(403);
            var r = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["shared-skin-chroma-button"],
                chroma: null,
                selectedChroma: null,
                purchaseEnabled: !0,
                isSelected: s.Ember.computed("selectedChroma.id", "chroma.id", (function() {
                    return this.get("chroma.id") === this.get("selectedChroma.id")
                })),
                bgColor: s.Ember.computed("chroma.colors.[]", (function() {
                    const e = this.get("chroma.colors");
                    if (e) return 1 !== e.length && e[1] ? "linear-gradient(135deg, " + e[0] + " 0%, " + e[0] + " 50%, " + e[1] + " 50%, " + e[1] + " 100%)" : e[0]
                })),
                actions: {
                    setSkin() {
                        this.sendAction("setSkin", this.get("chroma"))
                    },
                    showPreview() {
                        this.sendAction("showPreview", this.get("chroma"))
                    },
                    hidePreview() {
                        this.sendAction("hidePreview")
                    }
                }
            });
            t.default = r
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "r24OJF2t",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\skins\\\\addon\\\\templates\\\\skin-chroma-button.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\skins\\\\addon\\\\styles\\\\skin-chroma-button.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["chroma-button\\n  ",["helper",["if"],[["get",["isSelected"]],"selected"],null],"\\n  ",["helper",["unless"],[["get",["chroma","unlocked"]],"locked"],null],"\\n  ",["helper",["unless"],[["get",["chroma","purchaseEnabled"]],"purchase-disabled"],null]]]],["dynamic-attr","onmouseover",["helper",["action"],[["get",[null]],"showPreview"],null],null],["dynamic-attr","onmouseleave",["helper",["action"],[["get",[null]],"hidePreview"],null],null],["dynamic-attr","onmouseup",["helper",["action"],[["get",[null]],"setSkin"],null],null],["flush-element"],["text","\\n"],["block",["if"],[["get",["chroma","unlocked"]]],null,2,1],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","contents"],["dynamic-attr","style",["concat",["background:",["unknown",["bgColor"]]]]],["flush-element"],["close-element"],["text","\\n  "]],"locals":[]},{"statements":[["block",["if"],[["get",["isSelected"]]],null,0]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","contents"],["dynamic-attr","style",["concat",["background:",["unknown",["bgColor"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = n(30),
                r = (a = n(405)) && a.__esModule ? a : {
                    default: a
                };
            n(406);
            const l = s.UIKit.getFlyoutManager(),
                o = s.SharedComponentsApi.getApi_UXSettings();
            var c = s.Ember.Component.extend({
                layout: r.default,
                classNames: ["shared-skin-chroma-modal"],
                gameflow: s.Ember.inject.service("gameflow"),
                baseSkin: null,
                chromas: [],
                isFlyoutOpen: !1,
                skinIsOwned: !1,
                previewChroma: null,
                selectedChroma: null,
                enabled: !0,
                flyoutSettings: null,
                showChromaButton: s.Ember.computed.and("chromas.length", "skinIsOwned"),
                animationsEnabled: s.Ember.computed.alias("uxSettings.largeAreaAnimationsEnabled"),
                currentMapChromaPath: s.Ember.computed.alias("gameflow.session.map.assets.champ-select-flyout-background"),
                displayedChroma: s.Ember.computed("previewChroma", "selectedChroma", (function() {
                    return this.get("previewChroma") || this.get("selectedChroma")
                })),
                isChromaSelected: s.Ember.computed("selectedChroma", "enabled", "baseSkin", (function() {
                    const e = this.get("selectedChroma"),
                        t = this.get("baseSkin");
                    if (!Boolean(e)) return !1;
                    const n = e.id !== t.id;
                    return e && n && this.get("enabled")
                })),
                selectedChromaBg: s.Ember.computed("selectedChroma.colors.[]", "baseSkin.chromaPath", "enabled", (function() {
                    const e = this.get("selectedChroma.colors"),
                        t = this.get("baseSkin.chromaPath");
                    if (e && t && this.get("enabled")) return 1 !== e.length && e[1] ? "linear-gradient(135deg, " + e[0] + " 0%, " + e[0] + " 50%, " + e[1] + " 50%, " + e[1] + " 100%)" : e[0]
                })),
                sortedChromas: s.Ember.computed("chromas.[]", (function() {
                    return this.get("chromas").filter((e => e.purchaseEnabled || e.unlocked)).sort(((e, t) => e.unlocked === t.unlocked ? e.id < t.id ? -1 : 1 : e.unlocked ? -1 : 1))
                })),
                init() {
                    this._super(...arguments), this._uxSettingsObserver = e => {
                        this.set("uxSettings", e)
                    }, o.addObserver(this._uxSettingsObserver);
                    const e = {
                        targetAnchor: {
                            x: "center",
                            y: "top"
                        },
                        tooltipAnchor: {
                            x: "center",
                            y: "bottom"
                        },
                        offset: {
                            x: -2,
                            y: -5
                        },
                        orientation: "top",
                        animated: this.get("animationsEnabled"),
                        backdropCutout: !1
                    };
                    this.set("flyoutSettings", e)
                },
                willDestroyElement() {
                    o.removeObserver(this._uxSettingsObserver), this._super(...arguments)
                },
                _handlePurchaseSkinChroma(e) {
                    e.purchaseEnabled && (this.set("chromaData", null), this.openPawModal({
                        item: e,
                        inventoryType: i.PAW.INVENTORY_TYPES.CHAMPION_SKIN,
                        modalType: i.PAW.MODAL_TYPES.CHROMA_MODAL,
                        ownerElement: this.element
                    }), this._handleHideSkinChromaFlyout())
                },
                _handleOpenSkinChromaFlyout() {
                    this.get("enabled") && (s.Audio.getChannel("sfx-ui").playSound("/fe/lol-champ-select/sounds/sfx-cs-button-chromas-open.ogg"), this.set("isFlyoutOpen", !this.get("isFlyoutOpen")))
                },
                _handleHideSkinChromaFlyout() {
                    l.isActive() && this.set("isFlyoutOpen", !1)
                },
                _setSkin(e) {
                    Boolean(e) && e.id !== this.get("selectedChroma.id") && (this.set("previewChroma", e), this.set("selectedChroma", e), this._handleHideSkinChromaFlyout(), this.sendAction("setSkin", e))
                },
                actions: {
                    showSkinChromaFlyout() {
                        this._handleOpenSkinChromaFlyout()
                    },
                    hideSkinChromaFlyout() {
                        this._handleHideSkinChromaFlyout()
                    },
                    setSkin(e) {
                        e.unlocked ? this._setSkin(e) : this._handlePurchaseSkinChroma(e), s.Audio.getChannel("sfx-ui").playSound("/fe/lol-champ-select/sounds/sfx-uikit-grid-click.ogg")
                    },
                    showPreview(e) {
                        Boolean(e) && this.get("previewChroma.id") !== e.id && (this.set("previewChroma", e), s.Audio.getChannel("sfx-ui").playSound("/fe/lol-champ-select/sounds/sfx-uikit-grid-hover.ogg"))
                    },
                    hidePreview() {
                        this.set("previewChroma", this.get("selectedChroma"))
                    }
                }
            });
            t.default = c
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "H49yYADv",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\skins\\\\addon\\\\templates\\\\skin-chroma-modal.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\skins\\\\addon\\\\styles\\\\skin-chroma-modal.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["chroma icon ",["helper",["unless"],[["get",["showChromaButton"]],"hidden"],null]," ",["helper",["unless"],[["get",["enabled"]],"disabled"],null]," ",["helper",["if"],[["get",["isChromaSelected"]],"selected"],null]]]],["dynamic-attr","onClick",["helper",["action"],[["get",[null]],"showSkinChromaFlyout"],null],null],["dynamic-attr","style",["concat",["background: ",["unknown",["selectedChromaBg"]]]]],["flush-element"],["close-element"],["text","\\n"],["open-element","lc-flyout",[]],["static-attr","class","shared-chroma-flyout"],["dynamic-attr","open",["unknown",["isFlyoutOpen"]],null],["dynamic-attr","onHide",["helper",["action"],[["get",[null]],"hideSkinChromaFlyout"],null],null],["dynamic-attr","uiKitOptionOverrides",["unknown",["flyoutSettings"]],null],["flush-element"],["text","\\n  "],["open-element","lc-flyout-content",[]],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","shared-chroma-information"],["dynamic-attr","style",["concat",["background-image: url(\'",["unknown",["currentMapChromaPath"]],"\')"]]],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","shared-chroma-information-image"],["dynamic-attr","style",["concat",["background-image: url(\'",["unknown",["displayedChroma","chromaPath"]],"\')"]]],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","shared-child-skin-name"],["flush-element"],["text","\\n        "],["append",["unknown",["baseSkin","name"]],false],["text","\\n        "],["open-element","div",[]],["static-attr","class","shared-child-skin-disabled-notification"],["flush-element"],["append",["helper",["if"],[["get",["displayedChroma","disabled"]],["get",["tra","skin_unselectable_because_disabled"]]],null],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","lol-uikit-scrollable",[]],["static-attr","class","shared-chroma-selection"],["static-attr","overflow-masks","enabled"],["flush-element"],["text","\\n      "],["append",["helper",["skin-chroma-button"],null,[["chroma","purchaseEnabled","selectedChroma","showPreview","hidePreview","setSkin"],[["get",["baseSkin"]],true,["get",["selectedChroma"]],"showPreview","hidePreview","setSkin"]]],false],["text","\\n"],["block",["each"],[["get",["sortedChromas"]]],[["key"],["id"]],0],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["append",["helper",["skin-chroma-button"],null,[["chroma","purchaseEnabled","selectedChroma","showPreview","hidePreview","setSkin"],[["get",["chroma"]],["get",["chroma","purchaseEnabled"]],["get",["selectedChroma"]],"showPreview","hidePreview","setSkin"]]],false],["text","\\n"]],"locals":["chroma"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = n(30),
                r = (a = n(408)) && a.__esModule ? a : {
                    default: a
                };
            n(409);
            const l = s.UIKit.getFlyoutManager(),
                o = s.SharedComponentsApi.getApi_UXSettings();
            var c = s.Ember.Component.extend({
                layout: r.default,
                classNames: ["shared-skin-quest-form-modal"],
                baseSkin: null,
                questForms: [],
                isFlyoutOpen: !1,
                skinIsOwned: !1,
                selectedForm: null,
                enabled: !0,
                flyoutSettings: null,
                showQuestFormButton: s.Ember.computed.and("questForms.length", "skinIsOwned"),
                animationsEnabled: s.Ember.computed.alias("uxSettings.largeAreaAnimationsEnabled"),
                init() {
                    this._super(...arguments), this._uxSettingsObserver = e => {
                        this.set("uxSettings", e)
                    }, o.addObserver(this._uxSettingsObserver);
                    const e = {
                        targetAnchor: {
                            x: "center",
                            y: "top"
                        },
                        tooltipAnchor: {
                            x: "center",
                            y: "bottom"
                        },
                        offset: {
                            x: -2,
                            y: -5
                        },
                        orientation: "top",
                        animated: this.get("animationsEnabled"),
                        backdropCutout: !1
                    };
                    this.set("flyoutSettings", e)
                },
                willDestroyElement() {
                    o.removeObserver(this._uxSettingsObserver), this._super(...arguments)
                },
                _handlePurchaseQuestForm(e) {
                    e.purchaseEnabled && (this.set("questFormData", null), this.openPawModal({
                        item: e,
                        inventoryType: i.PAW.INVENTORY_TYPES.CHAMPION_SKIN,
                        modalType: i.PAW.MODAL_TYPES.SKIN_VIEWER_MODAL,
                        ownerElement: this.element
                    }), this._handleHideQuestFormsFlyout())
                },
                _handleOpenQuestFormFlyout() {
                    this.get("enabled") && (s.Audio.getChannel("sfx-ui").playSound("/fe/lol-champ-select/sounds/sfx-cs-button-chromas-open.ogg"), this.set("isFlyoutOpen", !this.get("isFlyoutOpen")))
                },
                _handleHideQuestFormsFlyout() {
                    l.isActive() && this.set("isFlyoutOpen", !1)
                },
                _setSkin(e) {
                    Boolean(e) && e.id !== this.get("selectedForm.id") && (this.set("selectedForm", e), this._handleHideQuestFormsFlyout(), this.sendAction("setSkin", e))
                },
                actions: {
                    showQuestFormsFlyout() {
                        this._handleOpenQuestFormFlyout()
                    },
                    hideQuestFormsFlyout() {
                        this._handleHideQuestFormsFlyout()
                    },
                    setSkin(e) {
                        e.unlocked ? this._setSkin(e) : this._handlePurchaseQuestForm(e), s.Audio.getChannel("sfx-ui").playSound("/fe/lol-champ-select/sounds/sfx-uikit-grid-click.ogg")
                    }
                }
            });
            t.default = c
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "QOAFNI2E",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\skins\\\\addon\\\\templates\\\\skin-quest-form-modal.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\skins\\\\addon\\\\styles\\\\skin-quest-form-modal.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["quest-forms icon ",["helper",["unless"],[["get",["showQuestFormButton"]],"hidden"],null]," ",["helper",["unless"],[["get",["enabled"]],"disabled"],null]]]],["dynamic-attr","onClick",["helper",["action"],[["get",[null]],"showQuestFormsFlyout"],null],null],["flush-element"],["close-element"],["text","\\n"],["open-element","lc-flyout",[]],["static-attr","class","shared-quest-forms-flyout"],["dynamic-attr","open",["unknown",["isFlyoutOpen"]],null],["dynamic-attr","onHide",["helper",["action"],[["get",[null]],"hideQuestFormsFlyout"],null],null],["dynamic-attr","uiKitOptionOverrides",["unknown",["flyoutSettings"]],null],["flush-element"],["text","\\n  "],["open-element","lc-flyout-content",[]],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","shared-quest-form-content"],["flush-element"],["text","\\n"],["block",["each"],[["get",["questForms"]]],null,0],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["dynamic-attr","class",["concat",["quest-form-tier\\n          ",["helper",["if"],[["helper",["eq"],[["get",["tier","id"]],["get",["selectedForm","id"]]],null],"selected"],null],"\\n          ",["helper",["if"],[["get",["tier","unlocked"]],"unlocked"],null]]]],["dynamic-attr","onClick",["helper",["action"],[["get",[null]],"setSkin",["get",["tier"]]],null],null],["flush-element"],["text","\\n          "],["open-element","span",[]],["static-attr","class","quest-form-tier-name"],["flush-element"],["append",["unknown",["tier","shortName"]],false],["close-element"],["text","\\n          "],["open-element","span",[]],["static-attr","class","quest-form-tier-status"],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":["tier"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(411)) && a.__esModule ? a : {
                    default: a
                };
            n(412);
            var r = n(413);
            var l = s.Ember.Component.extend({
                classNames: ["verbal-abuse-remedy-component"],
                layout: i.default,
                verbalAbuseRemedyService: s.Ember.inject.service("verbal-abuse-remedy"),
                blockedPuuids: s.Ember.computed.alias("verbalAbuseRemedyService.blockedPuuids"),
                blockedPuuidsOnLoad: s.Ember.computed.alias("verbalAbuseRemedyService.blockedPuuidsOnLoad"),
                playerTeamMembers: s.Ember.computed.alias("verbalAbuseRemedyService.playerTeamMembers"),
                enemyTeamMembers: s.Ember.computed.alias("verbalAbuseRemedyService.enemyTeamMembers"),
                shouldShowBlockChannelSelection: s.Ember.computed("blockedPuuidsOnLoad.[]", "playerTeamMembers.[]", "enemyTeamMembers.[]", (function() {
                    const e = this.get("blockedPuuidsOnLoad") || [],
                        t = this.get("verbalAbuseRemedyService.playerTeamMembers"),
                        n = this.get("verbalAbuseRemedyService.enemyTeamMembers");
                    return 0 !== t.concat(n).filter((t => !e.includes(t.puuid))).length
                })),
                shouldShowChatChannelSelection: s.Ember.computed("verbalAbuseRemedyService.chatChannelOnLoad", (function() {
                    const e = this.get("verbalAbuseRemedyService.chatChannelOnLoad");
                    return null === e || e !== r.PARTY_CHAT_CHANNEL
                })),
                shouldShowDivider: s.Ember.computed("shouldShowBlockChannelSelection", "shouldShowChatChannelSelection", (function() {
                    return this.get("shouldShowBlockChannelSelection") && this.get("shouldShowChatChannelSelection")
                })),
                actions: {
                    closeModal() {
                        this.get("verbalAbuseRemedyService").blockPlayers()
                    },
                    updateCouldShowModalSetting(e) {
                        this.get("verbalAbuseRemedyService").setCouldShowModalPreference(!e)
                    }
                }
            });
            t.default = l
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "TyW3jF54",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\player-behavior\\\\addon\\\\templates\\\\verbal-abuse-remedy-modal.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\player-behavior\\\\addon\\\\styles\\\\verbal-abuse-remedy-modal.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","verbal-abuse-remedy-header-container"],["flush-element"],["text","\\n  "],["open-element","span",[]],["static-attr","class","verbal-abuse-remedy-header-text"],["flush-element"],["text","\\n    "],["append",["unknown",["tra","verbal_abuse_remedy_modal_header"]],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","span",[]],["static-attr","class","verbal-abuse-remedy-description-text"],["flush-element"],["text","\\n    "],["append",["unknown",["tra","verbal_abuse_remedy_modal_description"]],false],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","verbal-abuse-remedy-setting-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["shouldShowChatChannelSelection"]]],null,2],["block",["if"],[["get",["shouldShowDivider"]]],null,1],["block",["if"],[["get",["shouldShowBlockChannelSelection"]]],null,0],["close-element"],["text","\\n"],["open-element","lol-uikit-flat-checkbox",[]],["static-attr","class","verbal-abuse-remedy-dont-show-checkbox"],["flush-element"],["text","\\n  "],["open-element","input",[]],["static-attr","slot","input"],["static-attr","id","verbal-abuse-remedy-dont-show"],["static-attr","type","checkbox"],["dynamic-attr","onchange",["helper",["action"],[["get",[null]],"updateCouldShowModalSetting"],[["value"],["target.checked"]]],null],["flush-element"],["close-element"],["text","\\n  "],["open-element","label",[]],["static-attr","slot","label"],["static-attr","for","verbal-abuse-remedy-dont-show"],["flush-element"],["append",["unknown",["tra","verbal_abuse_remedy_modal_dont_show_checkbox"]],false],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","verbal-abuse-remedy-block-setting-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["verbal-abuse-remedy-block-setting-header-container ",["helper",["if"],[["get",["shouldShowChatChannelSelection"]],"","only-show-block-settings"],null]]]],["flush-element"],["text","\\n        "],["open-element","span",[]],["static-attr","class","verbal-abuse-remedy-block-setting-header-text"],["flush-element"],["text","\\n          "],["append",["unknown",["tra","verbal_abuse_remedy_modal_block_setting_header"]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","span",[]],["static-attr","class","verbal-abuse-remedy-block-setting-description-text"],["flush-element"],["text","\\n          "],["append",["unknown",["tra","verbal_abuse_remedy_modal_block_setting_description"]],false],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["append",["unknown",["player-block-selector"]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","verbal-abuse-remedy-chat-setting-divider"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","verbal-abuse-remedy-chat-setting-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","verbal-abuse-remedy-chat-setting-header-container"],["flush-element"],["text","\\n        "],["open-element","span",[]],["static-attr","class","verbal-abuse-remedy-chat-setting-header-text"],["flush-element"],["text","\\n          "],["append",["unknown",["tra","verbal_abuse_remedy_modal_chat_setting_header"]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","span",[]],["static-attr","class","verbal-abuse-remedy-chat-setting-description-text"],["flush-element"],["text","\\n          "],["append",["unknown",["tra","verbal_abuse_remedy_modal_chat_setting_description"]],false],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["append",["unknown",["chat-channel-selector"]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.PARTY_CHAT_CHANNEL = t.ENEMY_ICON_BORDER_PATH = t.CHECKMARK_ICON = t.BLOCKED_ICON_BORDER_PATH = t.ALL_CHAT_CHANNEL = t.ALLY_ICON_BORDER_PATH = t.ALLIED_CHAT_CHANNEL = void 0;
            t.PARTY_CHAT_CHANNEL = "0";
            t.ALLIED_CHAT_CHANNEL = "1";
            t.ALL_CHAT_CHANNEL = "2";
            const a = n(414);
            t.ALLY_ICON_BORDER_PATH = a;
            const s = n(415);
            t.ENEMY_ICON_BORDER_PATH = s;
            const i = n(416);
            t.BLOCKED_ICON_BORDER_PATH = i;
            const r = n(417);
            t.CHECKMARK_ICON = r
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "ally-icon-border.svg"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "enemy-icon-border.svg"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "player-blocked-icon.svg"
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "checkmark.svg"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(419)) && a.__esModule ? a : {
                    default: a
                };
            n(420);
            var r = n(413);
            var l = s.Ember.Component.extend({
                classNames: ["chat-channel-selector-component"],
                layout: i.default,
                partyChatChannel: r.PARTY_CHAT_CHANNEL,
                alliedChatChannel: r.ALLIED_CHAT_CHANNEL,
                allChatChannel: r.ALL_CHAT_CHANNEL,
                checkmarkIcon: r.CHECKMARK_ICON,
                verbalAbuseRemedyService: s.Ember.inject.service("verbal-abuse-remedy"),
                selectedChatChannel: s.Ember.computed.alias("verbalAbuseRemedyService.selectedChatChannel"),
                isPartyChatChannelSelected: s.Ember.computed("selectedChatChannel", (function() {
                    return this.get("selectedChatChannel") === r.PARTY_CHAT_CHANNEL
                })),
                isAlliedChatChannelSelected: s.Ember.computed("selectedChatChannel", (function() {
                    return this.get("selectedChatChannel") === r.ALLIED_CHAT_CHANNEL
                })),
                isAllChatChannelSelected: s.Ember.computed("selectedChatChannel", (function() {
                    return this.get("selectedChatChannel") === r.ALL_CHAT_CHANNEL
                })),
                actions: {
                    setSelectedChatChannel(e) {
                        this.get("verbalAbuseRemedyService").setSelectedChatChannel(e)
                    }
                }
            });
            t.default = l
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "DX9g9i+Y",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\player-behavior\\\\addon\\\\templates\\\\chat-channel-selector.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\player-behavior\\\\addon\\\\styles\\\\chat-channel-selector.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","chat-channel-selection-item"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setSelectedChatChannel",["get",["partyChatChannel"]]],null],null],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","chat-channel-icon party-chat-icon"],["flush-element"],["close-element"],["text","\\n  "],["open-element","span",[]],["flush-element"],["append",["unknown",["tra","verbal_abuse_remedy_modal_party_channel"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["isPartyChatChannelSelected"]]],null,2],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","chat-channel-selection-item top-bottom-border"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setSelectedChatChannel",["get",["alliedChatChannel"]]],null],null],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","chat-channel-icon allied-chat-icon"],["flush-element"],["close-element"],["text","\\n  "],["open-element","span",[]],["flush-element"],["append",["unknown",["tra","verbal_abuse_remedy_modal_team_channel"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["isAlliedChatChannelSelected"]]],null,1],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","chat-channel-selection-item"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setSelectedChatChannel",["get",["allChatChannel"]]],null],null],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","chat-channel-icon all-chat-icon"],["flush-element"],["close-element"],["text","\\n  "],["open-element","span",[]],["flush-element"],["append",["unknown",["tra","verbal_abuse_remedy_modal_all_channel"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["isAllChatChannelSelected"]]],null,0],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","img",[]],["static-attr","class","checkmark-icon"],["dynamic-attr","src",["unknown",["checkmarkIcon"]],null],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","img",[]],["static-attr","class","checkmark-icon"],["dynamic-attr","src",["unknown",["checkmarkIcon"]],null],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","img",[]],["static-attr","class","checkmark-icon"],["dynamic-attr","src",["unknown",["checkmarkIcon"]],null],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(422)) && a.__esModule ? a : {
                    default: a
                };
            n(423);
            var r = s.Ember.Component.extend({
                classNames: ["player-block-selector-component"],
                layout: i.default,
                verbalAbuseRemedyService: s.Ember.inject.service("verbal-abuse-remedy"),
                playerTeamMembers: s.Ember.computed.alias("verbalAbuseRemedyService.playerTeamMembers"),
                enemyTeamMembers: s.Ember.computed.alias("verbalAbuseRemedyService.enemyTeamMembers")
            });
            t.default = r
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "WgdTlm42",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\player-behavior\\\\addon\\\\templates\\\\player-block-selector.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\player-behavior\\\\addon\\\\styles\\\\player-block-selector.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","team-block-selection-container"],["flush-element"],["text","\\n  "],["open-element","lol-uikit-scrollable",[]],["flush-element"],["text","\\n"],["block",["each"],[["get",["playerTeamMembers"]]],null,1],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","team-block-selection-container"],["flush-element"],["text","\\n  "],["open-element","lol-uikit-scrollable",[]],["flush-element"],["text","\\n"],["block",["each"],[["get",["enemyTeamMembers"]]],null,0],["text","  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["helper",["player-block-selection"],null,[["puuid","isAlly","portraitPath","subtext"],[["get",["player","puuid"]],false,["get",["player","championSquarePortraitPath"]],["get",["player","championName"]]]]],false],["text","\\n"]],"locals":["player"]},{"statements":[["text","      "],["append",["helper",["player-block-selection"],null,[["puuid","isAlly","portraitPath","subtext"],[["get",["player","puuid"]],true,["get",["player","championSquarePortraitPath"]],["get",["player","championName"]]]]],false],["text","\\n"]],"locals":["player"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(425)) && a.__esModule ? a : {
                    default: a
                };
            n(426);
            var r = n(413);
            var l = s.Ember.Component.extend({
                classNames: ["player-block-selection-component"],
                layout: i.default,
                verbalAbuseRemedyService: s.Ember.inject.service("verbal-abuse-remedy"),
                blockStatusUpdating: !1,
                blockedPuuids: s.Ember.computed.alias("verbalAbuseRemedyService.blockedPuuids"),
                isBlocked: s.Ember.computed("blockedPuuids", "puuid", (function() {
                    return this.get("blockedPuuids").includes(this.get("puuid"))
                })),
                iconBorderPath: s.Ember.computed("isAlly", "isBlocked", (function() {
                    return this.get("isBlocked") ? r.BLOCKED_ICON_BORDER_PATH : this.get("isAlly") ? r.ALLY_ICON_BORDER_PATH : r.ENEMY_ICON_BORDER_PATH
                })),
                actions: {
                    togglePlayerBlock(e) {
                        const t = this.get("verbalAbuseRemedyService");
                        this.set("blockStatusUpdating", !0), t.togglePlayerBlock(e).finally((() => {
                            this.set("blockStatusUpdating", !1)
                        }))
                    }
                }
            });
            t.default = l
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "OiS0RyjL",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\player-behavior\\\\addon\\\\templates\\\\player-block-selection.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\player-behavior\\\\addon\\\\styles\\\\player-block-selection.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","player-block-selection-inner-component"],["modifier",["action"],[["get",[null]],"togglePlayerBlock",["get",["puuid"]]]],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","player-icon-container"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","player-icon-border"],["dynamic-attr","src",["concat",[["unknown",["iconBorderPath"]]]]],["flush-element"],["close-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","player-icon"],["dynamic-attr","src",["concat",[["unknown",["portraitPath"]]]]],["static-attr","alt","champion-icon"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","player-block-selection-text-container"],["flush-element"],["text","\\n    "],["append",["helper",["player-name"],null,[["format","puuid"],["short",["get",["puuid"]]]]],false],["text","\\n    "],["open-element","span",[]],["static-attr","class","player-block-selection-champion-text"],["flush-element"],["append",["unknown",["subtext"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["block",["if"],[["get",["blockStatusUpdating"]]],null,0],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["append",["helper",["uikit-spinner"],null,[["class","width","height"],["block-status-updating-spinner","20px","20px"]]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = "rune_swap_and_notify_message";
            let i = "0",
                r = "0";
            a.dataBinding.bindTo(a.socket).get("/system/v1/builds").then((e => {
                if (!e) return;
                const t = e.version.split(".");
                i = t[0] || "0", r = t[1] || "0"
            }));
            var l = () => {
                const e = `${i}_${r}` + "_" + s;
                return a.tra.exists(e) ? a.tra.get(e) : a.tra.get("generic_" + s)
            };
            t.default = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function({
                propertiesToBind: e,
                serviceMethods: t,
                dataBindingInstance: n
            }) {
                if (void 0 === n.basePath) throw new Error("Instances of the BoundDataBinding class are not supported. Use an instance of ScopedBinding: dataBinding(path, socket).");
                return a.Ember.Service.extend({
                    ...t,
                    init() {
                        this._super(...arguments), this._setDefaultValues(e), this._initDataBindingObservers()
                    },
                    willDestroy() {
                        this._super(...arguments), this._tearDownDataBindingObservers()
                    },
                    _setDefaultValues(e) {
                        e.forEach((({
                            propertyName: e,
                            defaultValue: t
                        }) => {
                            this.set(e, t)
                        }))
                    },
                    _initDataBindingObservers() {
                        e.forEach((({
                            observedPath: e,
                            propertyName: t
                        }) => {
                            n.observe(e, this, (e => {
                                this._setObservedProperty(t, e)
                            }))
                        }))
                    },
                    _setObservedProperty(e, t) {
                        this.isDestroying || this.isDestroyed || null != t && "" !== t && this.set(e, t)
                    },
                    _tearDownDataBindingObservers() {
                        e.forEach((({
                            observedPath: e
                        }) => {
                            n.unobserve(e, this)
                        }))
                    }
                })
            };
            var a = n(1)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = u(n(299)),
                s = u(n(430)),
                i = u(n(432)),
                r = u(n(434)),
                l = u(n(436)),
                o = u(n(438)),
                c = u(n(441)),
                d = u(n(444));

            function u(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            var m = {
                CallToActionPipComponent: a.default,
                RewardBonusTrackComponent: s.default,
                RewardItemComponent: i.default,
                RewardOptionTooltipComponent: o.default,
                RewardOptionComponent: r.default,
                RewardOptionHeaderComponent: l.default,
                RewardTrackerComponent: c.default,
                RewardZeroIndicatorComponent: d.default
            };
            t.default = m
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(431)) && a.__esModule ? a : {
                    default: a
                };
            var r = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["reward-tracker-bonus-track"],
                startIndex: 1,
                isDisabled: !1,
                firstBonusMilestoneCompleted: s.Ember.computed("rewardTrackBonusProgress.level", (function() {
                    return this.get("rewardTrackBonusProgress.level") >= 0
                })),
                levelProgressWidth: s.Ember.computed("rewardTrackBonusProgress.levelProgress", (function() {
                    return s.Ember.String.htmlSafe(`width: ${this.get("rewardTrackBonusProgress.levelProgress")}%`)
                }))
            });
            t.default = r
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "I4hfkfG8",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\reward-tracker\\\\addon\\\\templates\\\\reward-bonus-track.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\reward-tracker\\\\addon\\\\styles\\\\reward-bonus-track.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-bonus-track-repeatable-node\\n    ",["helper",["if"],[["get",["isDisabled"]],"reward-bonus-track-repeatble-node-disabled"],null],"\\n    ",["helper",["if"],[["get",["displayCurrentBonusIteration"]],"display-current-iteration"],null]]]],["flush-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["repeatable-node-progress-bar\\n      ",["helper",["if"],[["get",["mainTrackCompleted"]],"is-completed"],null],"\\n      ",["helper",["if"],[["get",["firstBonusMilestoneCompleted"]],"first-bonus-milestone-completed"],null],"\\n      ",["helper",["if"],[["get",["isDisabled"]],"repeatable-node-progress-bar-disabled"],null]]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","repeatable-node-line"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","repeatable-node-line"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["repeatable-node-line-arrow\\n        ",["helper",["if"],[["get",["displayCurrentBonusIteration"]],"display-current-iteration"],null],"\\n        ",["helper",["if"],[["get",["isDisabled"]],"repeatable-node-line-arrow-disabled"],null]]]],["flush-element"],["text","\\n      "],["open-element","svg",[]],["static-attr","class","repeatable-node-icon"],["static-attr","viewBox","0 0 10 7"],["flush-element"],["text","\\n        "],["open-element","path",[]],["static-attr","class","repeatable-node-icon-path"],["static-attr","fill-rule","evenodd"],["static-attr","clip-rule","evenodd"],["static-attr","d","M6.38908 1.77185V0.399902L3.9833 2.31037L6.38956 4.22084V2.85168C6.81026 2.85942 7.21055 3.02847 7.50237 3.32164C7.79419 3.61481 7.95364 4.00809 7.94565 4.41496C7.93765 4.82183 7.76286 5.20897 7.45972 5.4912C7.15659 5.77343 6.74995 5.92765 6.32925 5.91991H3.33337C2.91248 5.91991 2.50883 5.75821 2.21121 5.47037C1.9136 5.18254 1.7464 4.79215 1.7464 4.3851C1.7464 3.97804 1.9136 3.58765 2.21121 3.29982C2.50883 3.01199 2.91248 2.85028 3.33337 2.85028V1.77045C2.61636 1.77045 1.92872 2.04593 1.42171 2.53627C0.914713 3.02661 0.629883 3.69165 0.629883 4.3851C0.629883 5.07854 0.914713 5.74359 1.42171 6.23393C1.92872 6.72427 2.61636 6.99974 3.33337 6.99974H6.32925C6.68409 7.00357 7.03623 6.93977 7.36557 6.81198C7.69491 6.68419 7.995 6.49492 8.24871 6.25496C8.50242 6.01501 8.70477 5.72907 8.84422 5.41349C8.98367 5.0979 9.05748 4.75884 9.06144 4.41566C9.0654 4.07249 8.99943 3.73192 8.8673 3.4134C8.73517 3.09488 8.53947 2.80465 8.29136 2.55928C8.04325 2.31391 7.7476 2.1182 7.42129 1.98334C7.09498 1.84847 6.7444 1.77708 6.38956 1.77325L6.38908 1.77185Z"],["static-attr","fill","#5b5a56"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n"],["block",["if"],[["get",["displayCurrentBonusIteration"]]],null,4],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["block",["if"],[["get",["rewardTrackBonusItems","length"]]],null,3],["close-element"],["text","\\n"],["block",["each"],[["get",["rewardTrackBonusItems"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["append",["helper",["reward-item"],null,[["reward","startIndex","itemIndex","progress","maxLevel","itemMouseEnter","itemClick","additionalTooltipData","rewardItemTooltipComponent","rewardItemTooltipClassName","isDisabled","lowSpecEnabled"],[["get",["reward"]],["get",["startIndex"]],["get",["index"]],["get",["rewardTrackBonusProgress"]],["get",["bonusMaxLevel"]],["get",["itemMouseEnter"]],["get",["bonusItemClick"]],["get",["additionalTooltipData"]],["get",["rewardItemTooltipComponent"]],["get",["rewardItemTooltipClassName"]],["get",["isDisabled"]],["get",["lowSpecEnabled"]]]]],false],["text","\\n"]],"locals":["reward","index"]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","reward-progress-bar-fill current"],["dynamic-attr","style",["unknown",["levelProgressWidth"]],null],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","reward-progress-bar-fill completed"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-progress-bar ",["helper",["if"],[["get",["isDisabled"]],"reward-item-disabled"],null]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["firstBonusMilestoneCompleted"]]],null,2,1],["text","    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","span",[]],["static-attr","class","repeatable-node-line-iteration"],["flush-element"],["text","\\n          "],["append",["unknown",["rewardTrackBonusProgress","iteration"]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = n(30),
                r = (a = n(433)) && a.__esModule ? a : {
                    default: a
                };
            const {
                REWARD_TAGS: l,
                MILESTONE_STAGES: o
            } = i.REWARD_TRACKER;
            var c = s.Ember.Component.extend({
                layout: r.default,
                classNames: ["reward-tracker-reward-item"],
                classNameBindings: ["itemIndexClass", "isClicked:is-clicked", "isBorderlessTrack:reward-tracker-reward-item-borderless"],
                reward: null,
                startIndex: null,
                itemIndex: null,
                progress: null,
                maxLevel: null,
                rewardItemTooltipComponent: null,
                additionalTooltipData: null,
                rewardItemTooltipClassName: null,
                isDisabled: !1,
                lowSpecEnabled: !1,
                isBorderlessTrack: !1,
                isClicked: !1,
                rewardOptions: s.Ember.computed.alias("reward.rewardOptions"),
                rewardTags: s.Ember.computed.alias("reward.rewardTags"),
                state: s.Ember.computed.alias("reward.state"),
                threshold: s.Ember.computed.alias("reward.threshold"),
                levelProgress: s.Ember.computed.alias("progress.levelProgress"),
                isCurrentLevel: s.Ember.computed.equal("levelClass", o.CURRENT),
                isCompleted: s.Ember.computed.equal("levelClass", o.COMPLETED),
                isRare: s.Ember.computed("rewardTags.[]", (function() {
                    return this.get("rewardTags").includes(l.RARE)
                })),
                itemIndexClass: s.Ember.computed("itemIndex", (function() {
                    return `reward-item-index-${this.get("itemIndex")}`
                })),
                stateClass: s.Ember.computed("isBorderlessTrack", (function() {
                    return this.get("optionItems")[0].state.toLocaleLowerCase()
                })),
                blurColorClass: s.Ember.computed("isBorderlessTrack", (function() {
                    const e = this.get("optionItems")[0]?.state?.toLowerCase() || "";
                    return "unlocked" === e || "unselected" === e ? "item-bg-blur-bright" : "item-bg-blur-dark"
                })),
                isChoiceReward: s.Ember.computed("rewardTags.[]", "rewardOptions.[]", (function() {
                    if (this.get("rewardOptions").length <= 1) return !1;
                    return this.get("rewardTags").includes(l.CHOICE)
                })),
                isInstantReward: s.Ember.computed("rewardTags.[]", (function() {
                    return this.get("rewardTags").includes(l.INSTANT)
                })),
                isMultipleReward: s.Ember.computed("rewardTags.[]", (function() {
                    return this.get("rewardTags").includes(l.MULTIPLE)
                })),
                instantClass: s.Ember.computed("isInstantReward", (function() {
                    return this.get("isInstantReward") ? "instant" : ""
                })),
                multipleClass: s.Ember.computed("isMultipleReward", (function() {
                    return this.get("isMultipleReward") ? "multiple" : ""
                })),
                disabledClass: s.Ember.computed("isDisabled", (function() {
                    return this.get("isDisabled") ? "reward-item-disabled" : ""
                })),
                milestoneLevel: s.Ember.computed("startIndex", "itemIndex", (function() {
                    const e = this.get("startIndex");
                    return this.get("itemIndex") - e + 1
                })),
                atMaxLevel: s.Ember.computed("maxLevel", "itemIndex", (function() {
                    return this.get("itemIndex") + 1 === this.get("maxLevel")
                })),
                levelContent: s.Ember.computed("isInstantReward", "threshold", (function() {
                    const e = this.get("isInstantReward"),
                        t = this.get("threshold");
                    return e ? s.tra.get("reward_tracker_reward_item_instant") : t
                })),
                optionItems: s.Ember.computed("rewardOptions.[]", "state", "rewardOptions.@each.state", "isMultipleReward", (function() {
                    const e = this.get("rewardOptions");
                    let t = [];
                    if (e.length)
                        if (this.get("isMultipleReward")) t = e;
                        else {
                            t = [e.find((e => e.selected)) || e[0]]
                        } return t.map((e => {
                        const t = e.state ? e.state : this.get("state");
                        return {
                            ...e,
                            footerText: e.overrideFooter || null,
                            state: t
                        }
                    }))
                })),
                levelClass: s.Ember.computed("progress", "milestoneLevel", (function() {
                    const e = this.get("progress.level"),
                        t = this.get("milestoneLevel"),
                        n = this.get("progress.futureLevel");
                    return e === t ? o.CURRENT : e > t ? o.COMPLETED : !isNaN(n) && n > e && n >= t ? o.HOVERING_COMPLETED : o.FUTURE
                })),
                futureProgress: s.Ember.computed("progress", "milestoneLevel", (function() {
                    const e = this.get("progress.futureLevel"),
                        t = this.get("progress.futureLevelProgress");
                    if (isNaN(e) || isNaN(t)) return 0;
                    const n = this.get("progress.level"),
                        a = this.get("progress.levelProgress"),
                        s = this.get("milestoneLevel");
                    return s < n || s > e ? 0 : s === n ? n === e ? t - a : 100 - a : s < e ? 100 : s === e ? t : 0
                })),
                futureProgressWidth: s.Ember.computed("futureProgress", (function() {
                    return s.Ember.String.htmlSafe(`width: ${this.get("futureProgress")}%`)
                })),
                levelProgressWidth: s.Ember.computed("levelProgress", (function() {
                    return s.Ember.String.htmlSafe(`width: ${this.get("levelProgress")}%`)
                })),
                showingFutureProgressClass: s.Ember.computed("progress", "milestoneLevel", (function() {
                    return this.get("futureProgress") > 0 ? "showing-future-progress" : ""
                })),
                actions: {
                    rewardHover(e) {
                        this.get("itemMouseEnter") ? this.get("itemMouseEnter")(this.get("reward"), this.get("milestoneLevel"), e) : s.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-uikit-grid-hover.ogg")
                    },
                    click(e) {
                        this.set("isClicked", !0);
                        const t = this.element.querySelectorAll(".reward-option-unselected-glow-animation-wrapper.animation-active uikit-video");
                        t && t.length && t.forEach((e => {
                            e.play()
                        })), this.get("itemClick") && this.get("itemClick")(this.get("reward"), this.get("milestoneLevel"), e)
                    }
                }
            });
            t.default = c
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "Wf7fKApY",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\reward-tracker\\\\addon\\\\templates\\\\reward-item.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\reward-tracker\\\\addon\\\\styles\\\\reward-item.styl\\" js-path=\\"null\\" "],["text","\\n"],["block",["unless"],[["get",["atMaxLevel"]]],null,9],["block",["if"],[["get",["isBorderlessTrack"]]],null,5],["open-element","div",[]],["static-attr","class","reward-options-wrapper"],["flush-element"],["text","\\n"],["block",["each"],[["get",["optionItems"]]],null,4],["close-element"],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-level ",["unknown",["multipleClass"]]," ",["unknown",["disabledClass"]]]]],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","reward-level-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-level-text-border ",["unknown",["levelClass"]]]]],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-level-text ",["unknown",["levelClass"]]]]],["flush-element"],["append",["unknown",["levelContent"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["block",["unless"],[["get",["isBorderlessTrack"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","img",[]],["static-attr","class","reward-item-selected-mask"],["static-attr","src","/fe/lol-static-assets/images/reward-tracker/active-selection.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["dynamic-attr","class",["concat",[["unknown",["rewardItemTooltipClassName"]]]]],["flush-element"],["text","\\n                "],["append",["helper",["component"],[["get",["rewardItemTooltipComponent"]]],[["reward","rewardItem","additionalTooltipData","milestoneLevel"],[["get",["reward"]],["get",["optionItem"]],["get",["additionalTooltipData"]],["get",["milestoneLevel"]]]]],false],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition"],["top"]],1]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","reward-option-hover-area"],["flush-element"],["text","\\n"],["block",["if"],[["get",["rewardItemTooltipComponent"]]],null,2],["text","        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-option-wrapper ",["unknown",["multipleClass"]]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"click",["get",["index"]]],null],null],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"rewardHover",["get",["index"]]],null],null],["flush-element"],["text","\\n      "],["append",["helper",["reward-option"],null,[["isRare","state","headerType","footerText","thumbIconPath","isChoiceReward","isDisabled","lowSpecEnabled","isBorderlessTrack"],[["get",["isRare"]],["get",["optionItem","state"]],["get",["optionItem","headerType"]],["get",["optionItem","footerText"]],["get",["optionItem","thumbIconPath"]],["get",["isChoiceReward"]],["get",["isDisabled"]],["get",["lowSpecEnabled"]],["get",["isBorderlessTrack"]]]]],false],["text","\\n"],["block",["unless"],[["get",["isBorderlessTrack"]]],null,3],["text","    "],["close-element"],["text","\\n"]],"locals":["optionItem","index"]},{"statements":[["text","  "],["open-element","span",[]],["dynamic-attr","class",["concat",["reward-item-mask-borderless borderless-blur-state-",["unknown",["stateClass"]]," item-bg-blur ",["unknown",["blurColorClass"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","reward-progress-bar-fill completed"],["flush-element"],["close-element"],["text","\\n    "]],"locals":[]},{"statements":[["block",["if"],[["get",["isCompleted"]]],null,6]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","reward-progress-bar-fill current"],["dynamic-attr","style",["unknown",["levelProgressWidth"]],null],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-progress-bar ",["unknown",["instantClass"]]," ",["unknown",["showingFutureProgressClass"]]," ",["unknown",["disabledClass"]]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["isCurrentLevel"]]],null,8,7],["text","    "],["open-element","div",[]],["static-attr","class","reward-progress-bar-fill future"],["dynamic-attr","style",["unknown",["futureProgressWidth"]],null],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = n(30),
                r = (a = n(435)) && a.__esModule ? a : {
                    default: a
                };
            const {
                REWARD_OPTION_HEADER_TYPE: l,
                REWARD_STATE: o
            } = i.REWARD_TRACKER;
            var c = s.Ember.Component.extend({
                layout: r.default,
                classNames: ["reward-tracker-reward-option"],
                classNameBindings: ["rareRewardClass", "stateClass", "isDisabled:reward-option-disabled", "is32px:is-32-px", "is52px:is-52-px", "isHovered:is-hovered", "isClicked:is-clicked"],
                isRare: null,
                state: null,
                headerType: l.NONE,
                footerText: null,
                thumbIconPath: null,
                isChoiceReward: null,
                isDisabled: !1,
                lowSpecEnabled: !1,
                isClicked: !1,
                isHovered: !1,
                isBorderlessTrack: !1,
                rareRewardClass: s.Ember.computed("isRare", (function() {
                    return this.get("isRare") ? "reward-option-rare" : ""
                })),
                rewardVideoSize: s.Ember.computed("isRare", (function() {
                    return this.get("isRare") ? "large" : "medium"
                })),
                rewardIcon: s.Ember.computed("thumbIconPath", (function() {
                    const e = this.get("thumbIconPath");
                    return e || "/fe/lol-static-assets/images/icon-shocked-poro.png"
                })),
                isUnselected: s.Ember.computed("state", (function() {
                    return this.get("state") === o.UNSELECTED
                })),
                isSelected: s.Ember.computed("state", (function() {
                    return this.get("state") === o.SELECTED
                })),
                shouldShowChoiceUnselectedPip: s.Ember.computed("isChoiceReward", "state", (function() {
                    return this.get("isChoiceReward") && this.get("state") !== o.SELECTED
                })),
                stateClass: s.Ember.computed("state", (function() {
                    return `reward-option-state-${this.get("state").toLowerCase()}`
                })),
                shouldShowGlowAnimation: s.Ember.computed("isUnselected", "lowSpecEnabled", (function() {
                    return this.get("isUnselected") && !this.get("lowSpecEnabled")
                })),
                optionImageClass: s.Ember.computed("isBorderlessTrack", (function() {
                    return this.get("isBorderlessTrack") ? "reward-option-image-borderless" : "reward-option-image"
                })),
                headerClass: s.Ember.computed("isBorderlessTrack", (function() {
                    return this.get("isBorderlessTrack") ? "reward-header-borderless" : "reward-header"
                })),
                selectedPipClass: s.Ember.computed("isBorderlessTrack", (function() {
                    return this.get("isBorderlessTrack") ? "reward-option-selected-pip-borderless" : "reward-option-selected-pip"
                })),
                footerTextClass: s.Ember.computed("isBorderlessTrack", (function() {
                    return this.get("isBorderlessTrack") ? "reward-footer-text-borderless" : "reward-footer-text"
                })),
                shouldShowUnselectedGlow: s.Ember.computed("isBorderlessTrack", "isUnselected", (function() {
                    return !this.get("isBorderlessTrack") && this.get("isUnselected")
                })),
                didInsertElement() {
                    const e = this.element.querySelectorAll(".reward-option-unselected-glow-animation-wrapper.animation-idle video");
                    e && e.length && e.forEach((e => {
                        e.currentTime = 2.19 * Math.random()
                    }))
                }
            });
            t.default = c
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "IZwL7+sp",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\reward-tracker\\\\addon\\\\templates\\\\reward-option.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\reward-tracker\\\\addon\\\\styles\\\\reward-option.styl\\" js-path=\\"null\\" "],["text","\\n"],["block",["if"],[["get",["isChoiceReward"]]],null,10],["block",["unless"],[["get",["isBorderlessTrack"]]],null,9],["open-element","div",[]],["dynamic-attr","class",["concat",[["unknown",["optionImageClass"]],"-mask ",["unknown",["stateClass"]]]]],["flush-element"],["text","\\n  "],["open-element","img",[]],["dynamic-attr","class",["concat",[["unknown",["optionImageClass"]]," ",["unknown",["rareRewardClass"]]]]],["dynamic-attr","src",["concat",[["unknown",["rewardIcon"]]]]],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",[["unknown",["optionImageClass"]],"-border inlay ",["unknown",["rareRewardClass"]]]]],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",[["unknown",["optionImageClass"]],"-border overlay ",["unknown",["rareRewardClass"]]," ",["unknown",["stateClass"]]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["footerText"]]],null,8],["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",[["unknown",["optionImageClass"]],"-border reward-option-border-glow ",["unknown",["stateClass"]]]]],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["shouldShowUnselectedGlow"]]],null,7],["block",["if"],[["get",["shouldShowChoiceUnselectedPip"]]],null,6],["block",["if"],[["get",["isSelected"]]],null,4],["text","  "],["close-element"],["text","\\n"],["block",["if"],[["get",["isBorderlessTrack"]]],null,1],["block",["if"],[["get",["shouldShowGlowAnimation"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-option-unselected-glow-animation-wrapper ",["unknown",["rareRewardClass"]]," animation-idle"]]],["flush-element"],["text","\\n    "],["open-element","uikit-video",[]],["dynamic-attr","src",["concat",["/fe/lol-static-assets/videos/reward-item-claimable-",["unknown",["rewardVideoSize"]],"-glow-idle.webm"]]],["static-attr","preload",""],["static-attr","autoplay",""],["static-attr","loop",""],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-option-unselected-glow-animation-wrapper ",["unknown",["rareRewardClass"]]," animation-hover"]]],["flush-element"],["text","\\n    "],["open-element","uikit-video",[]],["dynamic-attr","src",["concat",["/fe/lol-static-assets/videos/reward-item-claimable-",["unknown",["rewardVideoSize"]],"-glow-hover.webm"]]],["static-attr","preload",""],["static-attr","autoplay",""],["static-attr","loop",""],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-option-unselected-glow-animation-wrapper ",["unknown",["rareRewardClass"]]," animation-active"]]],["flush-element"],["text","\\n    "],["open-element","uikit-video",[]],["dynamic-attr","src",["concat",["/fe/lol-static-assets/videos/reward-item-claimable-",["unknown",["rewardVideoSize"]],"-glow-active.webm"]]],["static-attr","preload",""],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["append",["helper",["reward-option-header"],null,[["headerType","isBorderlessTrack"],[["get",["headerType"]],true]]],false],["text","  \\n"]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["dynamic-attr","class",["concat",[["unknown",["selectedPipClass"]]]]],["static-attr","src","/fe/lol-static-assets/images/reward-tracker/pip-checked.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","reward-option-selected-disabled-pip-container"],["flush-element"],["text","\\n          "],["open-element","img",[]],["static-attr","class","reward-option-selected-disabled-slot"],["static-attr","src","/fe/lol-static-assets/images/reward-tracker/disabled-pip-slot.svg"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","reward-option-selected-disabled-pip"],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isDisabled"]]],null,3,2]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","reward-choice-unselected-pip reward-choice-unselected-pip-glow"],["static-attr","src","/fe/lol-static-assets/images/reward-tracker/pip-unselected-choice-glow.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","img",[]],["static-attr","class","reward-choice-unselected-pip"],["static-attr","src","/fe/lol-static-assets/images/reward-tracker/pip-unselected-choice.svg"],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["isUnselected"]]],null,5]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","reward-option-unselected-glow"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",[["unknown",["footerTextClass"]]]]],["flush-element"],["append",["unknown",["footerText"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["append",["helper",["reward-option-header"],null,[["headerType","isBorderlessTrack"],[["get",["headerType"]],false]]],false],["text","  \\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-option-mock-choice second ",["unknown",["rareRewardClass"]]," ",["unknown",["stateClass"]]]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-option-image-border overlay ",["unknown",["rareRewardClass"]]," ",["unknown",["stateClass"]]]]],["flush-element"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-option-image-border reward-option-border-glow ",["unknown",["stateClass"]]]]],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-option-mock-choice ",["unknown",["rareRewardClass"]]]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-option-image-border overlay ",["unknown",["rareRewardClass"]]," ",["unknown",["stateClass"]]]]],["flush-element"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-option-image-border reward-option-border-glow ",["unknown",["stateClass"]]]]],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = n(30),
                r = (a = n(437)) && a.__esModule ? a : {
                    default: a
                };
            const {
                REWARD_OPTION_HEADER_TYPE: l
            } = i.REWARD_TRACKER;
            var o = s.Ember.Component.extend({
                layout: r.default,
                classNames: ["reward-tracker-reward-option-header"],
                classNameBindings: ["headerClass"],
                headerType: null,
                isBorderlessTrack: null,
                isPremiumHeader: s.Ember.computed("headerType", (function() {
                    return this.get("headerType") === l.PREMIUM
                })),
                isFreeHeader: s.Ember.computed("headerType", (function() {
                    return this.get("headerType") === l.FREE
                })),
                imgSrcHeader: s.Ember.computed("isBorderlessTrack", (function() {
                    return this.get("isBorderlessTrack") ? "/fe/lol-static-assets/images/reward-tracker/locked-reward.svg" : "/fe/lol-static-assets/images/reward-tracker/ticket-grey.svg"
                })),
                headerClass: s.Ember.computed("isBorderlessTrack", (function() {
                    return this.get("isBorderlessTrack") ? "reward-header-borderless" : "reward-header"
                }))
            });
            t.default = o
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "zoVmtnqb",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\reward-tracker\\\\addon\\\\templates\\\\reward-option-header.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\reward-tracker\\\\addon\\\\styles\\\\reward-option-header.styl\\" js-path=\\"null\\" "],["text","\\n"],["block",["if"],[["get",["isPremiumHeader"]]],null,1],["block",["if"],[["get",["isFreeHeader"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",[["unknown",["headerClass"]],"-free"]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",[["unknown",["headerClass"]],"-text"]]],["flush-element"],["text","\\n      "],["append",["unknown",["tra","reward_tracker_reward_item_header_override_Free"]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",[["unknown",["headerClass"]],"-icon"]]],["flush-element"],["text","\\n      "],["open-element","img",[]],["dynamic-attr","src",["unknown",["imgSrcHeader"]],null],["static-attr","class","premium-icon"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = n(439),
                r = n(30),
                l = (a = n(440)) && a.__esModule ? a : {
                    default: a
                };
            const {
                REWARD_STATE: o,
                REWARD_TAGS: c
            } = r.REWARD_TRACKER;
            var d = s.Ember.Component.extend({
                layout: l.default,
                classNames: ["reward-tracker-reward-option-tooltip"],
                classNameBindings: ["stateClassName"],
                reward: null,
                rewardItem: null,
                additionalTooltipData: null,
                milestoneLevel: null,
                optionItem: s.Ember.computed.alias("rewardItem"),
                state: s.Ember.computed.alias("optionItem.state"),
                rarityIcon: s.Ember.computed.alias("optionItem.rarityIcon"),
                stateClassName: s.Ember.computed("state", (function() {
                    const e = this.get("state");
                    return e ? `reward-option-tooltip-${e.toLowerCase()}` : ""
                })),
                isSelected: s.Ember.computed("state", (function() {
                    return this.get("state") === o.SELECTED
                })),
                isUnselected: s.Ember.computed("state", (function() {
                    return this.get("state") === o.UNSELECTED
                })),
                isLocked: s.Ember.computed("state", (function() {
                    return this.get("state") === o.LOCKED
                })),
                selectedDetailText: s.Ember.computed((function() {
                    return s.tra.get("reward_tracker_reward_option_tooltip_claimed")
                })),
                unselectedDetailText: s.Ember.computed((function() {
                    return s.tra.get("reward_tracker_reward_option_tooltip_click_to_claim")
                })),
                lockedDetailText: s.Ember.computed((function() {
                    return s.tra.get("reward_tracker_reward_option_tooltip_requires_pass")
                })),
                isInstantReward: s.Ember.computed("reward.rewardTags.[]", (function() {
                    return (this.get("reward.rewardTags") || []).includes(c.INSTANT)
                })),
                unlockedDetailText: s.Ember.computed((function() {
                    return this.get("isInstantReward") ? s.tra.get("reward_tracker_reward_item_instant") : s.tra.formatString("reward_tracker_reward_option_tooltip_level", {
                        levelNumber: this.get("reward.threshold")
                    })
                })),
                imagePath: s.Ember.computed("optionItem.thumbIconPath", (function() {
                    const e = this.get("optionItem.thumbIconPath");
                    return e || "/fe/lol-static-assets/images/icon-shocked-poro.png"
                })),
                shouldShowDescriptionFooter: s.Ember.computed("optionItem.rewardName", "optionItem.rewardType", (function() {
                    return !(!this.get("optionItem.rewardName") && !this.get("optionItem.rewardType"))
                })),
                typeIcon: s.Ember.computed("optionItem.rewardType", (function() {
                    const e = this.get("optionItem.rewardType");
                    return i.REWARD_TYPE_ICON_MAPPING[e]
                })),
                typeName: s.Ember.computed("optionItem.rewardType", (function() {
                    const e = this.get("optionItem.rewardType"),
                        t = i.REWARD_TYPE_TRA_MAPPING[e];
                    return t ? s.tra.get(t) : null
                }))
            });
            t.default = d
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = t.REWARD_TYPE_TRA_MAPPING = t.REWARD_TYPE_ICON_MAPPING = void 0;
            const n = {
                BORDER: "/fe/lol-static-assets/images/reward-tracker/item-category-icons/border.png",
                CHAMPION_SKIN: "/fe/lol-static-assets/images/reward-tracker/item-category-icons/champion_skin.png",
                CHAMPION: "/fe/lol-static-assets/images/reward-tracker/item-category-icons/champion.png",
                CHROMA: "/fe/lol-static-assets/images/reward-tracker/item-category-icons/chroma.png",
                CURRENCY: "/fe/lol-static-assets/images/reward-tracker/item-category-icons/currency.png",
                EMOTE: "/fe/lol-static-assets/images/reward-tracker/item-category-icons/emote.png",
                LOOT: "/fe/lol-static-assets/images/reward-tracker/item-category-icons/loot.png",
                SUMMONER_ICON: "/fe/lol-static-assets/images/reward-tracker/item-category-icons/summonericon.png",
                TFT: "/fe/lol-static-assets/images/reward-tracker/item-category-icons/tft.png",
                WARD_SKIN: "/fe/lol-static-assets/images/reward-tracker/item-category-icons/wardskin.png"
            };
            t.REWARD_TYPE_ICON_MAPPING = n;
            const a = {
                BORDER: "reward_tracker_reward_option_tooltip_type_border",
                CHAMPION_SKIN: "reward_tracker_reward_option_tooltip_type_champion_skin",
                CHAMPION: "reward_tracker_reward_option_tooltip_type_champion",
                CHROMA: "reward_tracker_reward_option_tooltip_type_chroma",
                CURRENCY: "reward_tracker_reward_option_tooltip_type_currency",
                EMOTE: "reward_tracker_reward_option_tooltip_type_emote",
                LOOT: "reward_tracker_reward_option_tooltip_type_loot",
                SUMMONER_ICON: "reward_tracker_reward_option_tooltip_type_summoner_icon",
                TFT: "reward_tracker_reward_option_tooltip_type_tft",
                WARD_SKIN: "reward_tracker_reward_option_tooltip_type_ward_skin"
            };
            t.REWARD_TYPE_TRA_MAPPING = a;
            var s = {
                REWARD_TYPE_ICON_MAPPING: n,
                REWARD_TYPE_TRA_MAPPING: a
            };
            t.default = s
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "qmNqA1+l",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\reward-tracker\\\\addon\\\\templates\\\\reward-option-tooltip.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\reward-tracker\\\\addon\\\\styles\\\\reward-option-tooltip.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","reward-option-tooltip-availability-detail"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isSelected"]]],null,8,7],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","reward-option-tooltip-image"],["flush-element"],["text","\\n  "],["open-element","img",[]],["dynamic-attr","src",["unknown",["imagePath"]],null],["static-attr","class","reward-option-tooltip-image-element"],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["rarityIcon"]]],null,2],["close-element"],["text","\\n"],["block",["if"],[["get",["shouldShowDescriptionFooter"]]],null,1]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","reward-option-tooltip-description-type"],["flush-element"],["text","\\n        "],["open-element","img",[]],["dynamic-attr","src",["unknown",["typeIcon"]],null],["static-attr","class","reward-option-tooltip-description-type-icon"],["flush-element"],["close-element"],["text","\\n        "],["append",["unknown",["typeName"]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","reward-option-tooltip-description"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","reward-option-tooltip-description-name"],["flush-element"],["append",["unknown",["optionItem","rewardName"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["typeIcon"]]],null,0],["text","  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","reward-option-tooltip-rarity-icon-wrapper"],["flush-element"],["text","\\n      "],["open-element","img",[]],["dynamic-attr","src",["unknown",["rarityIcon"]],null],["static-attr","class","reward-option-tooltip-rarity-icon"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","reward-option-tooltip-availability-detail-text"],["flush-element"],["append",["unknown",["unlockedDetailText"]],false],["close-element"],["text","\\n  "]],"locals":[]},{"statements":[["text","    "],["open-element","img",[]],["static-attr","src","/fe/lol-static-assets/images/ticket-gold2.svg"],["static-attr","class","reward-option-tooltip-availability-detail-icon"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","reward-option-tooltip-availability-detail-text"],["flush-element"],["append",["unknown",["lockedDetailText"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isLocked"]]],null,4,3]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","reward-option-tooltip-availability-detail-pip"],["flush-element"],["text","\\n      "],["append",["unknown",["call-to-action-pip"]],false],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","reward-option-tooltip-availability-detail-text"],["flush-element"],["append",["unknown",["unselectedDetailText"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isUnselected"]]],null,6,5]],"locals":[]},{"statements":[["text","    "],["open-element","img",[]],["static-attr","src","/fe/lol-static-assets/images/check_mask.png"],["static-attr","class","reward-option-tooltip-availability-detail-icon"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","reward-option-tooltip-availability-detail-text"],["flush-element"],["append",["unknown",["selectedDetailText"]],false],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0, n(442);
            var a, s = function(e, t) {
                    if (!t && e && e.__esModule) return e;
                    if (null === e || "object" != typeof e && "function" != typeof e) return {
                        default: e
                    };
                    var n = l(t);
                    if (n && n.has(e)) return n.get(e);
                    var a = {},
                        s = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var i in e)
                        if ("default" !== i && Object.prototype.hasOwnProperty.call(e, i)) {
                            var r = s ? Object.getOwnPropertyDescriptor(e, i) : null;
                            r && (r.get || r.set) ? Object.defineProperty(a, i, r) : a[i] = e[i]
                        } a.default = e, n && n.set(e, a);
                    return a
                }(n(1)),
                i = n(30),
                r = (a = n(443)) && a.__esModule ? a : {
                    default: a
                };

            function l(e) {
                if ("function" != typeof WeakMap) return null;
                var t = new WeakMap,
                    n = new WeakMap;
                return (l = function(e) {
                    return e ? n : t
                })(e)
            }
            const {
                REWARD_TAGS: o,
                TRACKER_SIZE: c
            } = i.REWARD_TRACKER;
            var d = s.Ember.Component.extend({
                layout: r.default,
                classNames: ["reward-tracker"],
                classNameBindings: ["trackerSize"],
                lowSpecEnabled: !1,
                rewardTrackItems: null,
                rewardTrackProgress: null,
                rewardTrackBonusItems: null,
                repeat: null,
                trackerSize: c.MEDIUM,
                itemMouseEnter: null,
                itemClick: null,
                rewardItemTooltipComponent: "reward-option-tooltip",
                additionalTooltipData: null,
                rewardItemTooltipClassName: "reward-option-tooltip-content",
                isDisabled: !1,
                shouldScrollToUnclaimedReward: !0,
                didScrollOnFirstRender: !1,
                UXSettings: s.default.SharedComponentsApi.getApi_UXSettings(),
                scrollingArrowsEnabled: null,
                hasAddedScrollEventListener: !1,
                canScrollLeft: null,
                canScrollRight: null,
                displayLeftArrow: s.Ember.computed("scrollingArrowsEnabled", "canScrollLeft", "isOverflowing", (function() {
                    return this.get("scrollingArrowsEnabled") && this.get("canScrollLeft") && this.get("isOverflowing")
                })),
                displayRightArrow: s.Ember.computed("scrollingArrowsEnabled", "canScrollRight", "isOverflowing", (function() {
                    return this.get("scrollingArrowsEnabled") && this.get("canScrollRight") && this.get("isOverflowing")
                })),
                isOverflowing: !1,
                scrollTimerId: null,
                scrollDelay: 500,
                isBorderlessTrack: !1,
                init() {
                    this._super(...arguments), this.UXSettings.addObserver(this.uxSettingsUpdated.bind(this)), this.rewardObserverCallback = this.rewardObserverCallback.bind(this), this.addObserver("rewardTrackItems", this.setupObserverOnItemsChange.bind(this))
                },
                didInsertElement() {
                    this._super(...arguments), this.get("rewardsInViewChanged") instanceof Function && (this.rewardObserver = new IntersectionObserver(this.rewardObserverCallback, {
                        root: this.element,
                        threshold: 1
                    }), this.setupObserverOnItemsChange())
                },
                didRender() {
                    this._super(...arguments);
                    const e = this.element.querySelector(".reward-tracker-scrollable"),
                        t = this.element.querySelector(".reward-tracker-reward-track");
                    if (this.set("isOverflowing", t.clientWidth > e.clientWidth), e.setAttribute("overflow-masks", this.get("isOverflowing") ? "enabled" : "disabled"), this.get("hasAddedScrollEventListener") || (this.set("hasAddedScrollEventListener", !0), this.arrowVisibilityChecker(e), e.addEventListener("scroll", (() => {
                            this.arrowVisibilityChecker(e)
                        }))), !this.didScrollOnFirstRender && this.shouldScrollToUnclaimedReward) {
                        const e = this.findScrollTarget();
                        e && (e.scrollIntoViewIfNeeded(), this.didScrollOnFirstRender = !0)
                    }
                },
                willDestroyElement() {
                    this._super(...arguments), this.UXSettings.removeObserver(this.uxSettingsUpdated), this.removeObserver("rewardTrackItems"), this.rewardObserver?.disconnect()
                },
                findScrollTarget() {
                    const e = this.element.querySelectorAll(".reward-option-state-unselected"),
                        t = this.element.querySelector(".reward-level-text.current"),
                        n = this.element.querySelector(".reward-tracker-bonus-track");
                    return e?.[e.length - 1] || t || n
                },
                arrowVisibilityChecker(e) {
                    0 === e.scrollLeft ? this.set("canScrollLeft", !1) : this.set("canScrollLeft", !0), e.scrollWidth - e.scrollLeft - e.clientWidth < 1 ? this.set("canScrollRight", !1) : this.set("canScrollRight", !0)
                },
                rewardsInView: [],
                rewardObserverCallback(e) {
                    e.forEach((e => {
                        const t = e.target.className.match(/reward-item-index-\d+/)[0],
                            n = Number.parseInt(t.match(/\d+/)[0]);
                        e.isIntersecting && !this.rewardsInView.includes(n) ? this.rewardsInView.push(n) : !e.isIntersecting && this.rewardsInView.includes(n) && this.rewardsInView.splice(this.rewardsInView.indexOf(n), 1)
                    })), this.get("rewardsInViewChanged") instanceof Function && this.get("rewardsInViewChanged")(this.rewardsInView)
                },
                setupObserverOnItemsChange() {
                    if (!(this.get("rewardsInViewChanged") instanceof Function)) return;
                    this.rewardObserver.disconnect();
                    this.element.querySelectorAll(".reward-tracker-reward-item").forEach((e => this.rewardObserver.observe(e)))
                },
                rewardTrackLevelStartIndex: s.Ember.computed("rewardTrackItems.[]", (function() {
                    const e = this.get("rewardTrackItems"),
                        t = e.findIndex((e => !e.rewardTags.includes(o.INSTANT)));
                    return t > -1 ? t : e.length
                })),
                passMaxLevel: s.Ember.computed.alias("rewardTrackItems.length"),
                bonusMaxLevel: s.Ember.computed.alias("rewardTrackBonusItems.length"),
                isRepeating: s.Ember.computed("repeat", "rewardTrackBonusItems", (function() {
                    const e = this.get("repeat");
                    return !!e && 0 !== e.repeatCount || !!this.get("rewardTrackBonusItems")
                })),
                isCompleted: s.Ember.computed("rewardTrackItems", "rewardTrackProgress", (function() {
                    const e = this.get("rewardTrackItems.length") || 0,
                        t = this.get("rewardTrackProgress") || {
                            level: 0,
                            levelProgress: 0,
                            futureLevel: 0,
                            futureLevelProgress: 0
                        },
                        n = t.level >= e,
                        a = t.level === e - 1 && t.levelProgress >= 100,
                        s = t.futureLevel >= e,
                        i = t.futureLevel === e - 1 && t.futureLevelProgress >= 100;
                    return n || a || s || i
                })),
                showZeroIndicator: s.Ember.computed("rewardTrackItems.[]", (function() {
                    return !this.get("rewardTrackItems").find((e => e.rewardTags.includes(o.INSTANT))) && !this.get("isBorderlessTrack")
                })),
                uxSettingsUpdated(e) {
                    this.set("lowSpecEnabled", !e.largeAreaAnimationsEnabled)
                },
                scrollingAction(e, t) {
                    const n = "left" === t ? -220 : 220;
                    if (!this.get("displayLeftArrow") && "left" === t || !this.get("displayRightArrow") && "right" === t) return void this.set("scrollDelay", 500);
                    e.dispatchEvent(new CustomEvent("wheel", {
                        detail: {
                            deltaY: n
                        }
                    }));
                    const a = setTimeout((() => this.scrollingAction(e, t)), this.get("scrollDelay"));
                    this.set("scrollDelay", 90), this.set("scrollTimerId", a)
                },
                actions: {
                    startScrolling(e) {
                        const t = this.element.querySelector(".reward-tracker-scrollable");
                        this.scrollingAction(t, e)
                    },
                    stopScrolling() {
                        this.set("scrollDelay", 500), clearTimeout(this.get("scrollTimerId"))
                    }
                }
            });
            t.default = d
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "o/+GRd26",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\reward-tracker\\\\addon\\\\templates\\\\reward-tracker.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\reward-tracker\\\\addon\\\\styles\\\\reward-tracker.styl\\" js-path=\\"null\\" "],["text","\\n"],["block",["if"],[["get",["displayLeftArrow"]]],null,4],["open-element","lol-uikit-scrollable",[]],["static-attr","class","reward-tracker-scrollable"],["static-attr","direction","horizontal"],["static-attr","side-scroll-wheel",""],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","reward-tracker-reward-track"],["flush-element"],["text","\\n"],["block",["if"],[["get",["showZeroIndicator"]]],null,3],["block",["each"],[["get",["rewardTrackItems"]]],null,2],["block",["if"],[["get",["isRepeating"]]],null,1],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["block",["if"],[["get",["displayRightArrow"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","lol-uikit-arrow-button",[]],["static-attr","direction","right"],["static-attr","class","reward-tracker-scrollable-arrow reward-tracker-scrollable-arrow-right"],["dynamic-attr","onmousedown",["helper",["action"],[["get",[null]],"startScrolling","right"],null],null],["dynamic-attr","onmouseup",["helper",["action"],[["get",[null]],"stopScrolling"],null],null],["dynamic-attr","onmouseleave",["helper",["action"],[["get",[null]],"stopScrolling"],null],null],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["append",["helper",["reward-bonus-track"],null,[["mainTrackCompleted","displayCurrentBonusIteration","rewardTrackBonusItems","rewardTrackBonusProgress","bonusMaxLevel","itemMouseEnter","itemClick","bonusItemClick","additionalTooltipData","rewardItemTooltipComponent","rewardItemTooltipClassName","isDisabled","lowSpecEnabled"],[["get",["isCompleted"]],["get",["displayCurrentBonusIteration"]],["get",["rewardTrackBonusItems"]],["get",["rewardTrackBonusProgress"]],["get",["bonusMaxLevel"]],["get",["itemMouseEnter"]],["get",["itemClick"]],["get",["bonusItemClick"]],["get",["additionalTooltipData"]],["get",["rewardItemTooltipComponent"]],["get",["rewardItemTooltipClassName"]],["get",["isDisabled"]],["get",["lowSpecEnabled"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["append",["helper",["reward-item"],null,[["reward","startIndex","itemIndex","progress","maxLevel","itemMouseEnter","itemClick","additionalTooltipData","rewardItemTooltipComponent","rewardItemTooltipClassName","isDisabled","lowSpecEnabled","isBorderlessTrack"],[["get",["reward"]],["get",["rewardTrackLevelStartIndex"]],["get",["index"]],["get",["rewardTrackProgress"]],["get",["passMaxLevel"]],["get",["itemMouseEnter"]],["get",["itemClick"]],["get",["additionalTooltipData"]],["get",["rewardItemTooltipComponent"]],["get",["rewardItemTooltipClassName"]],["get",["isDisabled"]],["get",["lowSpecEnabled"]],["get",["isBorderlessTrack"]]]]],false],["text","\\n"]],"locals":["reward","index"]},{"statements":[["text","      "],["append",["helper",["reward-zero-indicator"],null,[["progress"],[["get",["rewardTrackProgress"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","lol-uikit-arrow-button",[]],["static-attr","direction","left"],["static-attr","class","reward-tracker-scrollable-arrow reward-tracker-scrollable-arrow-left"],["dynamic-attr","onmousedown",["helper",["action"],[["get",[null]],"startScrolling","left"],null],null],["dynamic-attr","onmouseup",["helper",["action"],[["get",[null]],"stopScrolling"],null],null],["dynamic-attr","onmouseleave",["helper",["action"],[["get",[null]],"stopScrolling"],null],null],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(445)) && a.__esModule ? a : {
                    default: a
                },
                r = n(30);
            const {
                MILESTONE_STAGES: l
            } = r.REWARD_TRACKER;
            var o = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["reward-item-zero-indicator"],
                levelProgress: s.Ember.computed.alias("progress.levelProgress"),
                isCurrentLevel: s.Ember.computed.equal("levelClass", l.CURRENT),
                isCompleted: s.Ember.computed.equal("levelClass", l.COMPLETED),
                levelClass: s.Ember.computed("progress", (function() {
                    const e = this.get("progress.level");
                    return 0 === e ? l.CURRENT : e > 0 ? l.COMPLETED : void 0
                })),
                futureProgress: s.Ember.computed("progress", (function() {
                    const e = this.get("progress.futureLevel"),
                        t = this.get("progress.futureLevelProgress");
                    if (isNaN(e) || isNaN(t)) return 0;
                    const n = this.get("progress.level"),
                        a = this.get("progress.levelProgress");
                    return 0 < n ? 0 : 0 === n ? n === e ? t - a : 100 - a : 0
                })),
                futureProgressWidth: s.Ember.computed("futureProgress", (function() {
                    return s.Ember.String.htmlSafe(`width: ${this.get("futureProgress")}%`)
                })),
                levelProgressWidth: s.Ember.computed("levelProgress", (function() {
                    return s.Ember.String.htmlSafe(`width: ${this.get("levelProgress")}%`)
                })),
                showingFutureProgressClass: s.Ember.computed("progress", (function() {
                    return this.get("futureProgress") > 0 ? "showing-future-progress" : ""
                }))
            });
            t.default = o
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "C4EA9a6S",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\reward-tracker\\\\addon\\\\templates\\\\reward-zero-indicator.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\reward-tracker\\\\addon\\\\styles\\\\reward-zero-indicator.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-progress-bar ",["unknown",["showingFutureProgressClass"]]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["isCurrentLevel"]]],null,2,1],["text","  "],["open-element","div",[]],["static-attr","class","reward-progress-bar-fill future"],["dynamic-attr","style",["unknown",["futureProgressWidth"]],null],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["reward-level-zero-indicator ",["unknown",["levelClass"]]]]],["flush-element"],["text","\\n  "],["open-element","svg",[]],["static-attr","class","reward-star-icon"],["static-attr","width","12"],["static-attr","height","11"],["static-attr","viewBox","0 0 12 11"],["static-attr","fill","none"],["static-attr","xmlns","http://www.w3.org/2000/svg","http://www.w3.org/2000/xmlns/"],["flush-element"],["text","\\n    "],["open-element","path",[]],["static-attr","d","M5.9999 0.400024L7.5999 4.40002H11.5999L8.3999 6.80002L9.2915 10.8L5.9999 8.40002L2.70831 10.8L3.5999 6.80002L0.399902 4.40002H4.3999L5.9999 0.400024Z"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","reward-progress-bar-fill completed"],["flush-element"],["close-element"],["text","\\n  "]],"locals":[]},{"statements":[["block",["if"],[["get",["isCompleted"]]],null,0]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","reward-progress-bar-fill current"],["dynamic-attr","style",["unknown",["levelProgressWidth"]],null],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = {
                MultiPurchaseSliderComponent: ((a = n(447)) && a.__esModule ? a : {
                    default: a
                }).default
            };
            t.default = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(448)) && a.__esModule ? a : {
                    default: a
                },
                r = n(449);
            n(450);
            var l = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["multi-purchase-slider"],
                classNameBindings: ["validationError:multi-purchase-slider-error"],
                selectedQuantity: 0,
                sliderCSSClass: s.Ember.computed("max", (function() {
                    return this.get("max") < r.SMALL_SLIDER_MAX_QUANTITY * this.get("min") ? "multi-purchase-uikit-slider-small" : "multi-purchase-uikit-slider"
                })),
                sliderValue: s.Ember.computed("selectedQuantity", (function() {
                    return this.get("validationError") ? this.get("min") : Number(this.get("selectedQuantity"))
                })),
                validationError: s.Ember.computed("selectedQuantity", "max", "min", (function() {
                    return this.get("selectedQuantity") > this.get("max") ? r.VALIDATION_ERROR_TYPES.NOT_ENOUGH_TOKENS : this.get("selectedQuantity") < this.get("min") ? r.VALIDATION_ERROR_TYPES.LESS_THAN_MIN : this.get("selectedQuantity") % this.get("min") != 0 ? r.VALIDATION_ERROR_TYPES.NOT_MULTIPLE : null
                })),
                errorMessage: s.Ember.computed("validationError", (function() {
                    const e = this.get("validationError");
                    if (!e) return null;
                    switch (e) {
                        case r.VALIDATION_ERROR_TYPES.LESS_THAN_MIN:
                        case r.VALIDATION_ERROR_TYPES.NOT_MULTIPLE:
                            return s.tra.formatString(e, {
                                minQuantity: this.get("min")
                            });
                        default:
                            return s.tra.get(e)
                    }
                })),
                min: 1,
                max: 100,
                onValidationChange: null,
                disabled: !1,
                init() {
                    this._super(...arguments), this.handleSliderChange = this.handleSliderChange.bind(this), this.handleInputChange = this.handleInputChange.bind(this), this.handleMaxLabelClick = this.handleMaxLabelClick.bind(this), this.handleSliderMouseDown = this.handleSliderMouseDown.bind(this), this.handleInputMouseDown = this.handleInputMouseDown.bind(this), this.addObserver("validationError", this, "handleValidationChange"), this.addObserver("selectedQuantity", this, "handleSelectedQuantityChange"), this.initAttributes()
                },
                initAttributes() {
                    this.set("selectedQuantity", this.get("min")), this.handleSelectedQuantityChange()
                },
                willDestroyElement() {
                    this.removeEventListeners(), this.removeObserver("validationError"), this.removeObserver("selectedQuantity"), this._super(...arguments)
                },
                didInsertElement() {
                    this._super(...arguments), this.sliderElement = this.element.querySelector("lol-uikit-slider"), this.quantityInputElement = this.element.querySelector("input"), this.sliderMaxLabel = this.element.querySelector(".multi-purchase-uikit-slider-max"), this.setEventListeners()
                },
                setEventListeners() {
                    this.sliderElement.addEventListener("change", this.handleSliderChange), this.sliderElement.addEventListener("mousedown", this.handleSliderMouseDown), this.quantityInputElement.addEventListener("keyup", this.handleInputChange), this.quantityInputElement.addEventListener("mousedown", this.handleInputMouseDown), this.sliderMaxLabel.addEventListener("click", this.handleMaxLabelClick)
                },
                removeEventListeners() {
                    this.sliderElement.removeEventListener("change", this.handleSliderChange), this.sliderElement.removeEventListener("mousedown", this.handleSliderMouseDown), this.quantityInputElement.removeEventListener("keyup", this.handleInputChange), this.quantityInputElement.removeEventListener("mousedown", this.handleInputMouseDown), this.sliderMaxLabel.removeEventListener("click", this.handleMaxLabelClick)
                },
                setSelectedQuantity(e) {
                    this.get("disabled") || (this.set("selectedQuantity", e), this.playSetQuantitySound(e))
                },
                playSetQuantitySound(e) {
                    const t = s.Audio.getChannel("sfx-ui");
                    e === this.get("max") ? t.playSound(r.SOUNDS.MAX) : t.playSound(r.SOUNDS.STEP)
                },
                handleSliderChange(e) {
                    this.setSelectedQuantity(e.value)
                },
                handleInputMouseDown() {
                    s.Telemetry.sendCustomData(r.TELEMETRY.TABLE, {
                        eventName: r.TELEMETRY.INPUT_CLICK,
                        max: this.get("max"),
                        min: this.get("min")
                    })
                },
                handleSliderMouseDown() {
                    s.Telemetry.sendCustomData(r.TELEMETRY.TABLE, {
                        eventName: r.TELEMETRY.SLIDER_CLICK,
                        max: this.get("max"),
                        min: this.get("min")
                    })
                },
                handleInputChange(e) {
                    this.setSelectedQuantity(e.target.value)
                },
                handleValidationChange() {
                    "function" == typeof this.get("onValidationChange") && this.get("onValidationChange")(this.get("validationError"))
                },
                handleSelectedQuantityChange() {
                    "function" == typeof this.get("onSelectedQuantityChange") && this.get("onSelectedQuantityChange")(this.get("selectedQuantity"))
                },
                handleMaxLabelClick() {
                    this.setSelectedQuantity(this.get("max"))
                }
            });
            t.default = l
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "smT7SgFc",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\multi-purchase-slider\\\\addon\\\\templates\\\\multi-purchase-slider.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\multi-purchase-slider\\\\addon\\\\styles\\\\multi-purchase-slider.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","multi-purchase-set-quantity-label"],["flush-element"],["text","\\n  "],["append",["unknown",["tra","multi_purchase_slider_set_quantity"]],false],["text","\\n"],["close-element"],["text","\\n"],["open-element","lol-uikit-flat-input",[]],["flush-element"],["text","\\n  "],["append",["helper",["input"],null,[["class","type","value","step","min","max","disabled"],["multi-purchase-input-number","number",["get",["selectedQuantity"]],["get",["min"]],["get",["min"]],["get",["max"]],["get",["disabled"]]]]],false],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","multi-purchase-set-quantity-error"],["flush-element"],["text","\\n"],["block",["if"],[["get",["errorMessage"]]],null,0],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","multi-purchase-uikit-slider-container"],["flush-element"],["text","\\n  "],["open-element","lol-uikit-slider",[]],["dynamic-attr","class",["unknown",["sliderCSSClass"]],null],["dynamic-attr","step",["unknown",["min"]],null],["dynamic-attr","min",["unknown",["min"]],null],["dynamic-attr","max",["unknown",["max"]],null],["dynamic-attr","value",["unknown",["sliderValue"]],null],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","multi-purchase-uikit-slider-max"],["flush-element"],["text","\\n    "],["append",["unknown",["max"]],false],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["append",["unknown",["errorMessage"]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = t.VALIDATION_ERROR_TYPES = t.TELEMETRY = t.SOUNDS = t.SMALL_SLIDER_MAX_QUANTITY = void 0;
            const n = {
                NOT_ENOUGH_TOKENS: "multi_purchase_slider_error_not_enough_tokens",
                LESS_THAN_MIN: "multi_purchase_slider_error_less_than_minimum",
                NOT_MULTIPLE: "multi_purchase_slider_error_not_multiple"
            };
            t.VALIDATION_ERROR_TYPES = n;
            const a = {
                STEP: "/fe/lol-static-assets/sounds/sfx-uikit-generic-click-small.ogg",
                MAX: "/fe/lol-static-assets/sounds/sfx-uikit-generic-click-big.ogg"
            };
            t.SOUNDS = a;
            t.SMALL_SLIDER_MAX_QUANTITY = 5;
            t.TELEMETRY = {
                TABLE: "multi_purchase_slider",
                SLIDER_CLICK: "slider_click",
                INPUT_CLICK: "input_click"
            };
            var s = {
                VALIDATION_ERROR_TYPES: n,
                SOUNDS: a,
                SMALL_SLIDER_MAX_QUANTITY: 5
            };
            t.default = s
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            t.default = class {
                constructor() {
                    this._privateApi = n(452).default
                }
                showIdentityCustomizer() {
                    this._privateApi.showIdentityCustomizer()
                }
                hideIdentityCustomizer() {
                    this._privateApi.hideIdentityCustomizer()
                }
                createCollectionApp() {
                    return this._privateApi.createCollectionApp()
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = b(n(453)),
                i = b(n(457)),
                r = b(n(460)),
                l = b(n(463)),
                o = b(n(466)),
                c = b(n(470)),
                d = b(n(473)),
                u = b(n(476)),
                m = b(n(479)),
                p = b(n(482)),
                h = b(n(483)),
                g = b(n(487)),
                f = b(n(488)),
                _ = b(n(489)),
                A = b(n(490));

            function b(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const v = "ChallengesIdentityCustomizer",
                E = "ChallengesCollection";
            var y = new class {
                constructor() {
                    this._identityCustomizerInstance = null, this._registerIdentityCustomizerComponent(), this._registerCollectionComponent()
                }
                _registerIdentityCustomizerComponent() {
                    const {
                        CallToActionPipComponent: e,
                        PlayerNameComponent: t
                    } = a.SharedComponentsApi.getSharedEmberComponents(), u = {
                        tra: a.traService,
                        IdentityCustomizerComponent: n(491).extend({
                            privateApi: this
                        }),
                        IdentityCustomizerEmptySearchComponent: n(495),
                        IdentityCustomizerTabIconsComponent: n(498),
                        IdentityCustomizerTabBordersComponent: n(501),
                        IdentityCustomizerTabBannersComponent: n(504),
                        IdentityCustomizerTabTokensComponent: n(508),
                        IdentityCustomizerTabTitlesComponent: n(514),
                        IdentityCustomizerTitleComponent: n(517),
                        IdentityCustomizerTokenComponent: n(520),
                        IdentityCustomizerIconComponent: n(523),
                        IdentityIconTooltipComponent: n(526),
                        ChallengeBannerTitleComponent: s.default,
                        ChallengeBannerTokenComponent: i.default,
                        ChallengeBannerTokenContainerComponent: r.default,
                        ChallengeCardHeaderComponent: l.default,
                        ChallengeCardComponent: o.default,
                        ChallengeItemFooterComponent: c.default,
                        ChallengeItemTooltipComponent: d.default,
                        ChallengeItemComponent: m.default,
                        CallToActionPipComponent: e,
                        GameDataService: p.default,
                        PlayerNameComponent: t,
                        PlayerTitleTooltipComponent: h.default,
                        RiotclientService: g.default,
                        SummonerService: f.default,
                        SettingsPreferencesService: _.default,
                        SharedNotificationsService: A.default,
                        ComponentFactory: a.ComponentFactory
                    };
                    a.SharedComponentsApi.getSharedEmberComponents().EmberCollectionApi.registerToFactoryDefinition(u), a.EmberApplicationFactory.setFactoryDefinition(v, u)
                }
                _registerCollectionComponent() {
                    const {
                        RenderTelemetrySenderComponent: e,
                        HextechLoadingAnimationComponent: t
                    } = a.SharedComponentsApi.getSharedEmberComponents(), s = {
                        tra: a.traService,
                        CollectionRootComponent: n(529).extend({
                            privateApi: this
                        }),
                        CollectionCategoryTabsComponent: n(532),
                        CollectionCategoryTooltipComponent: n(535),
                        CollectionChallengesBreakdownComponent: n(538),
                        CollectionCrystalComponent: n(541),
                        CollectionGridStandardComponent: n(544),
                        CollectionGridCapstoneComponent: n(547),
                        CollectionGridRowCapstoneComponent: n(550),
                        CollectionGridRowGroupComponent: n(553),
                        CollectionGridRowCapstoneTokenComponent: n(556),
                        CollectionIntroModalComponent: n(559),
                        ChallengeCardHeaderComponent: l.default,
                        ChallengeCardComponent: o.default,
                        ChallengeItemFooterComponent: c.default,
                        ChallengeItemTooltipComponent: d.default,
                        ChallengeItemComponent: m.default,
                        ChallengeRequirementsGridComponent: u.default,
                        RenderTelemetrySenderComponent: e,
                        HextechLoadingAnimationComponent: t,
                        GameDataService: p.default,
                        PlayerTitleTooltipComponent: h.default,
                        RiotclientService: g.default,
                        SummonerService: f.default,
                        SettingsPreferencesService: _.default,
                        ComponentFactory: a.ComponentFactory
                    };
                    a.SharedComponentsApi.getSharedEmberComponents().EmberCollectionApi.registerToFactoryDefinition(s), a.EmberApplicationFactory.setFactoryDefinition(E, s)
                }
                _createIdentityCustomizerComponent() {
                    return this._componentState = a.Ember.Object.create({
                        isVisible: !1
                    }), this._identityCustomizerInstance = a.ComponentFactory.create({
                        type: v,
                        data: this._componentState
                    }), this._identityCustomizerInstance
                }
                showIdentityCustomizer() {
                    a.logger.trace("Open identity customizer"), this._identityCustomizerInstance ? (this._componentState.set("isVisible", !0), a.LayerManager.addLayer(this._identityCustomizerInstance.domNode)) : this._createIdentityCustomizerComponent().renderPromise.then((() => {
                        this._componentState.set("isVisible", !0), a.LayerManager.addLayer(this._identityCustomizerInstance.domNode)
                    }))
                }
                hideIdentityCustomizer() {
                    a.logger.trace("Close identity customizer"), this._componentState.set("isVisible", !1), a.LayerManager.removeLayer(this._identityCustomizerInstance.domNode)
                }
                createCollectionApp() {
                    return a.ComponentFactory.create(E)
                }
            };
            t.default = y
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(454)) && a.__esModule ? a : {
                    default: a
                };
            n(455);
            var r = n(456),
                l = n(114);
            var o = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["challenge-banner-title-component"],
                riotclientService: s.Ember.inject.service("riotclient"),
                challengeTitleData: s.Ember.computed.alias("titleData.challengeTitleData"),
                titleName: s.Ember.computed.alias("titleData.name"),
                titleChallengeName: s.Ember.computed.alias("challengeTitleData.challengeName"),
                titleChallengeDescription: s.Ember.computed.alias("challengeTitleData.challengeDescription"),
                titleLevel: s.Ember.computed.alias("challengeTitleData.level"),
                isDefaultTitle: s.Ember.computed.equal("challengeTitleData.challengeId", l.DEFAULT_TITLE_CHALLENGE_ID),
                isPlayerTitle: s.Ember.computed("isDefaultTitle", "challengeTitleData", (function() {
                    return !this.get("isDefaultTitle") && !this.get("challengeTitleData")
                })),
                txtTitleLevel: s.Ember.computed("titleLevel", "tra.isReady", (function() {
                    const e = this.get("titleLevel");
                    return e ? this.get(`tra.challenge_level_${e.toLowerCase()}`) : ""
                })),
                titleChallenge: s.Ember.computed("localPlayerChallengesData", "challengeTitleData.challengeId", (function() {
                    const e = this.get("localPlayerChallengesData") || [],
                        t = this.get("titleData.challengeId");
                    return Object.values(e).find((e => e.id === t))
                })),
                titleLevelTokenIconPath: s.Ember.computed("titleLevel", "challengeTitleData.levelToIconPath", (function() {
                    const e = this.get("titleLevel") || "";
                    return (this.get("challengeTitleData.levelToIconPath") || "")[e]
                })),
                titleAcquiredDate: s.Ember.computed("ownedTitles", "titleData.contentId", "isDefaultTitle", (function() {
                    if (this.get("isDefaultTitle")) return null;
                    const e = this.get("ownedTitles") || [],
                        t = this.get("titleData.contentId"),
                        n = e.find((e => e.contentId === t));
                    if (!n || !n.purchaseDate) return null;
                    const a = this.get("locale"),
                        s = new Date((0, r.convertDateStringToISOString)(n.purchaseDate)).toLocaleDateString(a);
                    return this.get("tra").formatString("challenge_tooltip_acquired_on", {
                        date: s
                    })
                })),
                init() {
                    this._super(...arguments), this._challengesDataBinding = (0, s.dataBinding)("/lol-challenges", s.socket), this._challengesDataBinding.get("/v2/titles/local-player", {
                        skipCache: !0
                    }).then((e => {
                        this.set("ownedTitles", e)
                    })), this.get("riotclientService").getLocale().then((e => {
                        const t = e.replace("_", "-");
                        this.set("locale", t)
                    }))
                }
            });
            t.default = o
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "71zRM4zw",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\challenge-banner-title.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\components\\\\challenge-banner-title.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","challenge-banner-title-container"],["flush-element"],["text","\\n    "],["append",["unknown",["titleName"]],false],["text","\\n"],["block",["if"],[["get",["titleName"]]],null,8],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","                    "],["open-element","div",[]],["static-attr","class","challenge-banner-title-tooltip-challenge-title-acquired-date"],["flush-element"],["append",["unknown",["titleAcquiredDate"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                        "],["open-element","div",[]],["static-attr","class","challenge-banner-title-tooltip-challenge-description"],["flush-element"],["append",["unknown",["titleChallengeDescription"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                                "],["open-element","img",[]],["static-attr","class","player-banner-title-icon"],["dynamic-attr","src",["unknown",["titleData","iconPath"]],null],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["titleData","iconPath"]]],null,2],["text","                            "],["open-element","div",[]],["static-attr","class","player-banner-title-tooltip-details-text-container"],["flush-element"],["text","\\n                                "],["open-element","div",[]],["static-attr","class","player-banner-title-name"],["flush-element"],["append",["unknown",["titleData","titleAcquisitionName"]],false],["close-element"],["text","\\n                                "],["open-element","div",[]],["static-attr","class","player-banner-title-requirement-description"],["flush-element"],["append",["unknown",["titleData","titleRequirementDescription"]],false],["close-element"],["text","\\n                            "],["close-element"],["text","\\n                        "]],"locals":[]},{"statements":[["block",["if"],[["get",["isPlayerTitle"]]],null,3]],"locals":[]},{"statements":[["text","                            "],["open-element","img",[]],["dynamic-attr","class",["concat",["challenge-banner-title-tooltip-challenge-title-level-token ",["helper",["if"],[["get",["titleChallenge","isCapstone"]],"capstone"],null]]]],["dynamic-attr","src",["concat",[["unknown",["titleLevelTokenIconPath"]]]]],["flush-element"],["close-element"],["text","\\n                            "],["open-element","div",[]],["static-attr","class","challenge-banner-title-tooltip-level-details-text-container"],["flush-element"],["text","\\n                                "],["open-element","div",[]],["static-attr","class","challenge-banner-title-tooltip-challenge-name"],["flush-element"],["append",["unknown",["titleChallengeName"]],false],["close-element"],["text","\\n                                "],["open-element","div",[]],["static-attr","class","challenge-banner-title-tooltip-challenge-title-level"],["flush-element"],["append",["unknown",["txtTitleLevel"]],false],["close-element"],["text","\\n                            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                    "],["open-element","div",[]],["static-attr","class","challenge-banner-title-tooltip-level-details-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["challengeTitleData"]]],null,5,4],["text","                    "],["close-element"],["text","\\n"],["block",["if"],[["get",["challengeTitleData"]]],null,1]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["dynamic-attr","class",["concat",["challenge-banner-title-tooltip ",["helper",["if"],[["get",["titleData","backgroundImagePath"]],"has-bg"],null]]]],["dynamic-attr","style",["concat",["background-image: url(",["helper",["if"],[["get",["titleData","backgroundImagePath"]],["get",["titleData","backgroundImagePath"]]],null],")"]]],["flush-element"],["text","\\n                "],["open-element","div",[]],["static-attr","class","challenge-banner-title-tooltip-header"],["flush-element"],["text","\\n                    "],["open-element","div",[]],["static-attr","class","challenge-banner-title-tooltip-scroll-icon"],["flush-element"],["close-element"],["text","\\n                    "],["open-element","div",[]],["static-attr","class","challenge-banner-title-tooltip-title"],["flush-element"],["append",["unknown",["titleName"]],false],["close-element"],["text","\\n                    "],["open-element","div",[]],["static-attr","class","challenge-banner-title-tooltip-divider"],["flush-element"],["close-element"],["text","\\n                "],["close-element"],["text","\\n"],["block",["unless"],[["get",["isDefaultTitle"]]],null,6],["block",["if"],[["get",["titleAcquiredDate"]]],null,0],["text","            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["right","system"]],7]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.convertDateStringToFullDisplayFormat = function(e, t) {
                const n = r(t && t.metadata.locale.id || void 0),
                    a = new Date(e),
                    s = a.toLocaleDateString(n, {
                        dateStyle: "medium"
                    }),
                    i = a.toLocaleTimeString(n, {
                        timeZoneName: "short",
                        hour: "numeric",
                        minute: "numeric"
                    });
                return {
                    datePortionText: s,
                    timePortionText: i
                }
            }, t.convertDateStringToISOString = function(e) {
                if (!e) return "";
                if (!/^[0-9]{8}T[0-9]{6}.[0-9]{3}Z$/.test(e)) return e;
                const t = e.substr(0, 4),
                    n = e.substr(4, 2),
                    a = e.substr(6, 2),
                    s = e.substr(9, 2),
                    i = e.substr(11, 2),
                    r = e.substr(13, 2);
                return `${t}-${n}-${a}T${s}:${i}:${r}Z`
            }, t.formatChallengeString = function(e, t, n, a) {
                if (!t) return "";
                let r = n;
                a && (r = i(e, n, a));
                return t.replace(s, r)
            }, t.formatLocaleString = r, t.getDaysUntilTimestamp = function(e) {
                const t = new Date(e),
                    n = new Date;
                return Math.floor((t.getTime() - n.getTime()) / a.MS_IN_ONE_DAY)
            }, t.getLocForMappingAndValue = i;
            var a = n(114);
            const s = "@x@";

            function i(e, t, n) {
                return e.get(`challenge_valuemap_${n}_${t}`)
            }

            function r(e = "en_US") {
                return e.toLowerCase().replace("_", "-")
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(458)) && a.__esModule ? a : {
                    default: a
                };
            n(459);
            var r = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["challenge-banner-token-component"],
                classNameBindings: ["isLocalPlayer:local", "isInteractable"],
                isInteractable: !0,
                isLocalPlayer: !0,
                isComparable: !1,
                isPlaceholder: s.Ember.computed.bool("challengeData.isPlaceholder"),
                isNextTokenSlot: s.Ember.computed.bool("challengeData.next"),
                challengeData: {},
                levelToIconPath: s.Ember.computed.alias("challengeData.levelToIconPath"),
                isCapstone: s.Ember.computed.alias("challengeData.isCapstone"),
                iconPath: s.Ember.computed("challengeData.currentLevel", "levelToIconPath", (function() {
                    const e = this.get("challengeData.currentLevel") || "";
                    return this.get(`levelToIconPath.${e}`) || `/fe/lol-static-assets/images/challenges-shared/icon_achievement_${e.toLowerCase()}.png`
                }))
            });
            t.default = r
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "fIT65D/v",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\challenge-banner-token.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\components\\\\challenge-banner-token.js\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["achievement-token-container ",["helper",["if"],[["get",["isPlaceholder"]],"empty"],null]," ",["helper",["if"],[["get",["isNextTokenSlot"]],"challenge-banner-token-selected-border"],null]]]],["flush-element"],["text","\\n"],["block",["unless"],[["get",["isPlaceholder"]]],null,2],["block",["unless"],[["get",["isPlaceholder"]]],null,0],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","img",[]],["dynamic-attr","class",["concat",["achievement-token ",["helper",["if"],[["get",["isCapstone"]],"capstone"],null]]]],["dynamic-attr","src",["concat",[["unknown",["iconPath"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["append",["helper",["challenge-item-tooltip"],null,[["puuid","challengeData","localPlayerChallengesData","isLocalPlayer","isComparable","animationsEnabled"],[["get",["puuid"]],["get",["challengeData"]],["get",["localPlayerChallengesData"]],["get",["isLocalPlayer"]],["get",["isComparable"]],false]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type","pseudoPartSelector"],["top","system","challenge-item-tooltip"]],1]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(461)) && a.__esModule ? a : {
                    default: a
                };
            n(462);
            var r = n(114);
            const l = "/v1/challenges/local-player",
                o = "/v1/namespaces/Challenges/ClientState";
            var c = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["challenge-banner-token-container-component"],
                localPlayerChallengesData: [],
                lobbyChallengesEnabled: !0,
                isLocalPlayer: !1,
                isInteractable: !1,
                allowPresenceUpdates: !1,
                showTitleOnly: !1,
                isNotLocalPlayer: s.Ember.computed.not("isLocalPlayer"),
                titleData: s.Ember.computed.alias("challengesSummary.title"),
                init() {
                    this._super(...arguments);
                    const e = (0, s.getProvider)().getSocket();
                    this.chatBinding = (0, s.dataBinding)("/lol-chat", e), this.platformConfigBinding = (0, s.dataBinding)("/lol-platform-config", e), this.challengesBinding = (0, s.dataBinding)("/lol-challenges", e), this.platformConfigBinding.observe(o, this, this.handleLobbyChallengesEnabled), this.challengesBinding.observe(l, this, this.handleLocalPlayerChallenges)
                },
                willDestroyElement() {
                    this.chatBinding.unobserve(this.chatParticipantsPath), this.challengesBinding.unobserve(l, this), this.platformConfigBinding.unobserve(o, this), this.challengesBinding.unobserve(this.challengesPlayerDataPath, this)
                },
                didReceiveAttrs() {
                    this._super(...arguments), this.refreshTokenData()
                },
                placeholderChallenges: s.Ember.computed("challengesSummary.topChallenges.[]", (function() {
                    const e = this.get("challengesSummary.topChallenges") || [];
                    return Array(Math.max(3 - e.length, 0)).fill(0)
                })),
                handleChatParticipants(e) {
                    const t = this.get("puuid"),
                        n = (e || []).find((e => e.puuid === t)),
                        a = n && n.lol,
                        s = this.get("isNotLocalPlayer"),
                        i = this.get("allowPresenceUpdates");
                    if (a && s && i) {
                        const e = a.challengeTokensSelected,
                            t = a.challengeTitleSelected,
                            n = a.bannerIdSelected,
                            s = this.get("challengesSummary.selectedChallengesString"),
                            i = this.get("challengesSummary.title.contentId"),
                            r = this.get("challengesSummary.bannerId");
                        if (s && s !== e || i && i !== t || r && r !== n) return this.challengesBinding.get(this.challengesPlayerDataPath, {
                            skipCache: !0
                        }).then((a => {
                            if (a) {
                                const s = a.selectedChallengesString,
                                    i = a.title.contentId,
                                    r = a.bannerId;
                                e === s && t === i && n === r || this.set("allowPresenceUpdates", !1)
                            }
                        }))
                    }
                },
                refreshTokenData() {
                    const e = this.get("puuid"),
                        t = e && this._prevPuuid && e !== this._prevPuuid || !e && this._prevPuuid,
                        n = e && e !== this._prevPuuid;
                    if (!this.get("lobbyChallengesEnabled")) return;
                    t && this.challengesBinding.unobserve(this.challengesPlayerDataPath, this), n && (this.challengesPlayerDataPath = `v1/summary-player-data/player/${e}`, this.challengesBinding.observe(this.challengesPlayerDataPath, this, this.handleSummaryPlayerData));
                    const a = this.get("chatConversationId");
                    (a !== this._prevConversationId || n || !e) && this.chatBinding.unobserve(this.chatParticipantsPath, this), a && a !== this._prevConversationId && (this.chatParticipantsPath = `v1/conversations/${a}/participants`, this.chatBinding.observe(this.chatParticipantsPath, this, this.handleChatParticipants)), this._prevPuuid = e, this._prevConversationId = a
                },
                handleSummaryPlayerData(e) {
                    this.set("challengesSummary", e)
                },
                handleLocalPlayerChallenges(e) {
                    this.set("localPlayerChallengesData", e)
                },
                handleLobbyChallengesEnabled(e) {
                    const t = (0, r.getFlagValueOrDefault)(r.CHALLENGE_FLAG_NAMES.CLIENT_STATE, e) === r.CHALLENGES_CLIENT_STATES.ENABLED;
                    this.set("lobbyChallengesEnabled", t), this.refreshTokenData()
                },
                actions: {
                    onTokenHover(e) {
                        s.Telemetry.sendEvent("challenges-lobby-token-hover", e)
                    }
                }
            });
            t.default = c
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "uxxGanKS",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\challenge-banner-token-container.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\components\\\\challenge-banner-token-container.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","challenge-banner-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["lobbyChallengesEnabled"]]],null,3],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["append",["helper",["challenge-banner-token"],null,[["isLocalPlayer","isPlaceholder","isInteractable","selectedTokenSlot"],[["get",["isLocalPlayer"]],true,["get",["isInteractable"]],["get",["selectedTokenSlot"]]]]],false],["text","\\n"]],"locals":["placeholderChallenge","index"]},{"statements":[["text","          "],["open-element","div",[]],["modifier",["action"],[["get",[null]],"onTokenHover",["get",["challengeData","id"]]],[["on"],["mouseEnter"]]],["flush-element"],["text","\\n            "],["append",["helper",["challenge-banner-token"],null,[["puuid","challengeData","localPlayerChallengesData","isLocalPlayer","isComparable","isInteractable","selectedTokenSlot"],[["get",["puuid"]],["get",["challengeData"]],["get",["localPlayerChallengesData"]],["get",["isLocalPlayer"]],true,["get",["isInteractable"]],["get",["selectedTokenSlot"]]]]],false],["text","\\n          "],["close-element"],["text","\\n"]],"locals":["challengeData","index"]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","challenge-banner-token-container"],["flush-element"],["text","\\n"],["block",["each"],[["get",["challengesSummary","topChallenges"]]],null,1],["block",["each"],[["get",["placeholderChallenges"]]],null,0],["text","      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["append",["helper",["challenge-banner-title"],null,[["titleData","localPlayerChallengesData"],[["get",["titleData"]],["get",["localPlayerChallengesData"]]]]],false],["text","\\n"],["block",["unless"],[["get",["showTitleOnly"]]],null,2]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(464)) && a.__esModule ? a : {
                    default: a
                };
            n(465);
            var r = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["challenge-card-header-component"]
            });
            t.default = r
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "BpM2RjD1",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\challenge-card-header.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\components\\\\challenge-card-header.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","challenge-card-header-content"],["flush-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["challenge-card-header-detail ",["unknown",["leftDetailClass"]]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["showLeftHeaderDetail"]]],null,2],["text","  "],["close-element"],["text","\\n  "],["open-element","div",[]],["flush-element"],["text","\\n"],["block",["if"],[["get",["showRightHeaderDetail"]]],null,1],["block",["if"],[["get",["showSecondaryRightHeaderDetail"]]],null,0],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",["challenge-card-header-detail ",["unknown",["secondaryRightDetailClass"]]]]],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","challenge-card-header-icon"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",["challenge-card-header-detail ",["unknown",["rightDetailClass"]]]]],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenge-card-header-icon"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenge-card-header-value"],["flush-element"],["append",["unknown",["rightValue"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","challenge-card-header-icon"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","challenge-card-header-value"],["flush-element"],["append",["unknown",["leftValue"]],false],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = n(467),
                r = (a = n(468)) && a.__esModule ? a : {
                    default: a
                };
            n(469);
            var l = n(114);
            var o = s.Ember.Component.extend({
                layout: r.default,
                classNames: ["challenge-card-component"],
                classNameBindings: ["isInactive", "isLegacyStyle", "isEmpty", "hasCurrentLevel:leveled"],
                currentlevel: l.CHALLENGE_LEVELS.NONE,
                nextLevel: l.CHALLENGE_LEVELS.NONE,
                pointsAwarded: 0,
                isInactive: !1,
                animationsEnabled: !0,
                hasCurrentLevel: s.Ember.computed("currentLevel", (function() {
                    const e = this.get("currentLevel");
                    return e && e !== l.CHALLENGE_LEVELS.NONE
                })),
                updateTransforms: function(e) {
                    const t = e.pageX,
                        n = e.pageY,
                        a = this.element.getBoundingClientRect(),
                        s = this.element.offsetWidth,
                        i = this.element.offsetHeight,
                        r = a.left,
                        l = a.top,
                        o = (t - r) / s,
                        c = (n - l) / i,
                        d = (5 - 10 * c).toFixed(2),
                        u = (10 * o - 5).toFixed(2),
                        m = d;
                    Math.atan2(t - (r + s / 2), -(n - (l + i / 2))), Math.PI;
                    this.element.style.cssText = `transform: perspective(500px) \n      rotateX(${m}deg) \n      rotateY(${u}deg) \n      scale3d(1.035,1.035,1.035)`, this.ticking = !1
                },
                mouseMove: function(e) {
                    this.get("animationsEnabled") && (this.ticking || (requestAnimationFrame(this.updateTransforms.bind(this, e)), this.ticking = !0))
                },
                mouseLeave: function() {
                    this.get("animationsEnabled") && (requestAnimationFrame((() => {
                        this.element.style.cssText = "transform: perspective(0) rotateX(0deg) rotateY(0deg) scale3d(1,1,1)"
                    })), this.set("showAnimatedHover", !1))
                },
                mouseEnter: function() {
                    s.Audio.getChannel(i.AUDIO_CHANNEL.UI).playSound(i.AUDIO_TYPE.GRID_HOVER), this.get("animationsEnabled") && this.get("hasCurrentLevel") && this.set("showAnimatedHover", !0)
                },
                backgroundLevel: s.Ember.computed("currentLevel", "nextLevel", (function() {
                    const e = this.get("currentLevel"),
                        t = this.get("nextLevel");
                    return e !== l.CHALLENGE_LEVELS.NONE ? e : t
                })),
                backgroundImagePath: s.Ember.computed("backgroundLevel", (function() {
                    const e = this.get("backgroundLevel");
                    return e ? `${l.IMG_BASE_PATH}/challenge-card-background-${e.toLowerCase()}.png` : ""
                })),
                pointsContainerImagePath: s.Ember.computed("backgroundLevel", "isInactive", (function() {
                    const e = this.get("backgroundLevel");
                    if (!e) return "";
                    return this.get("isInactive") ? `${l.IMG_BASE_PATH}/challenge-card-points-container-${e.toLowerCase()}-inactive.png` : `${l.IMG_BASE_PATH}/challenge-card-points-container-${e.toLowerCase()}.png`
                })),
                pointsContainerTextSize: s.Ember.computed("pointsAwarded", (function() {
                    return this.get("pointsAwarded") >= 100 ? "small" : ""
                }))
            });
            t.default = o
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.AUDIO_TYPE = t.AUDIO_CHANNEL = void 0;
            t.AUDIO_CHANNEL = {
                UI: "sfx-ui"
            };
            t.AUDIO_TYPE = {
                GRID_CLICK: "/fe/lol-static-assets/sounds/sfx-uikit-grid-click.ogg",
                GRID_HOVER: "/fe/lol-static-assets/sounds/sfx-uikit-grid-hover.ogg"
            }
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "lA4ickiz",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\challenge-card.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\components\\\\challenge-card.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","challenge-card-content-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","challenge-card-solid-background"],["flush-element"],["close-element"],["text","\\n"],["block",["unless"],[["get",["isEternal"]]],null,5],["text","  "],["open-element","div",[]],["static-attr","class","challenge-card-content"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","challenge-card-border"],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["isEmpty"]]],null,2,1],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","challenge-card-points-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["pointsContainerImagePath"]]],null,0],["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["challenge-card-points ",["unknown",["pointsContainerTextSize"]]]]],["flush-element"],["append",["unknown",["pointsAwarded"]],false],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":["default"],"blocks":[{"statements":[["text","    "],["open-element","img",[]],["static-attr","class","challenge-card-points-container-background"],["dynamic-attr","src",["unknown",["pointsContainerImagePath"]],null],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["yield","default"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","challenge-card-empty"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","challenge-card-lottie-container"],["flush-element"],["text","\\n        "],["open-element","lol-uikit-lottie",[]],["static-attr","id","challenge-card-lottie-bg-animation"],["static-attr","src","/fe/lol-static-assets/lottie/challenges/challenges-card-hover-bg.json"],["static-attr","autoplay",""],["static-attr","loop",""],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","img",[]],["static-attr","class","challenge-card-background"],["dynamic-attr","src",["unknown",["backgroundImagePath"]],null],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["backgroundImagePath"]]],null,4],["block",["if"],[["get",["showAnimatedHover"]]],null,3]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(471)) && a.__esModule ? a : {
                    default: a
                };
            n(472);
            var r = n(114);
            var l = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["challenge-item-footer-component"],
                challengeData: {},
                showLevelText: !1,
                isHidden: !1,
                nextMilestoneReward: s.Ember.computed.alias("challengeData.nextMilestoneReward"),
                nextMilestoneRewardText: s.Ember.computed.alias("challengeData.nextMilestoneRewardText"),
                levelText: s.Ember.computed("nextMilestoneReward.level", (function() {
                    const e = this.get("nextMilestoneReward.level") || r.CHALLENGE_LEVELS.NONE;
                    return this.get(`tra.challenge_level_${e.toLowerCase()}`)
                })),
                showNextMilestoneReward: s.Ember.computed("nextMilestoneRewardText", "isHidden", (function() {
                    return this.get("nextMilestoneRewardText") && !this.get("isHidden")
                }))
            });
            t.default = l
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "CguL/xbv",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\challenge-item-footer.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\components\\\\challenge-item-footer.js\\" "],["text","\\n"],["block",["if"],[["get",["showNextMilestoneReward"]]],null,1]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","challenge-item-level"],["flush-element"],["append",["unknown",["levelText"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","challenge-item-footer"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","challenge-item-milestone-icon-container"],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","challenge-item-milestone-icon"],["static-attr","src","/fe/lol-static-assets/images/challenges-shared/icon_reward_title.svg"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","challenge-item-title-container"],["flush-element"],["text","\\n      "],["append",["unknown",["nextMilestoneRewardText"]],false],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","challenge-item-level-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["showLevelText"]]],null,0],["text","      "],["open-element","div",[]],["static-attr","class","challenge-item-level-icon-container"],["flush-element"],["text","\\n        "],["open-element","img",[]],["static-attr","class","challenge-item-level-icon"],["dynamic-attr","src",["concat",["/fe/lol-static-assets/images/challenges-shared/icon-token-",["unknown",["nextMilestoneReward","level"]],".png"]]],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(474)) && a.__esModule ? a : {
                    default: a
                };
            n(475);
            var r = n(114),
                l = n(456);
            const o = "ABOVE",
                c = "BELOW",
                d = "EQUAL";
            var u = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["challenge-item-tooltip-component"],
                classNameBindings: ["isCapstone:capstone"],
                summonerService: s.Ember.inject.service("summoner"),
                riotclientService: s.Ember.inject.service("riotclient"),
                gameDataService: s.Ember.inject.service("game-data"),
                challengeData: {},
                localPlayerChallengesData: null,
                apexLadderUpdateTime: 0,
                isLocalPlayer: !0,
                isComparable: !1,
                puuid: null,
                isLegacy: s.Ember.computed.equal("challengeData.category", r.CHALLENGE_CATEGORIES.LEGACY),
                friendsAtLevels: s.Ember.computed.alias("challengeData.friendsAtLevels"),
                currentLevelAchievedTime: s.Ember.computed.alias("challengeData.currentLevelAchievedTime"),
                retireTimestamp: s.Ember.computed.alias("challengeData.retireTimestamp"),
                isCapstone: s.Ember.computed.alias("challengeData.isCapstone"),
                isUnranked: s.Ember.computed.equal("challengeData.currentLevel", r.CHALLENGE_LEVELS.NONE),
                currentLevel: s.Ember.computed.alias("challengeData.currentLevel"),
                nextLevel: s.Ember.computed.alias("challengeData.nextLevel"),
                capstoneGroupName: s.Ember.computed.alias("challengeData.capstoneGroupName"),
                parentName: s.Ember.computed.alias("challengeData.parentName"),
                hasCapstoneParent: s.Ember.computed.notEmpty("parentName"),
                localSummonerPuuid: s.Ember.computed.alias("summonerService.puuid"),
                localSummonerGameName: s.Ember.computed("summonerService.gameName", (function() {
                    return this.get("summonerService.gameName") || null
                })),
                localSummonerTagLine: s.Ember.computed("summonerService.tagLine", (function() {
                    return this.get("summonerService.tagLine") || null
                })),
                localSummonerSummonerName: s.Ember.computed("summonerService.displayName", (function() {
                    return this.get("summonerService.displayName") || null
                })),
                summonerIconPath: null,
                animatedCurrentValueText: 0,
                animationsEnabled: !0,
                tooltipAnimationsEnabled: r.CHALLENGE_FLAG_DEFAULTS[r.CHALLENGE_FLAG_NAMES.TOOLTIP_ANIMATIONS_ENABLED],
                shouldShowAnimatedProgressText: s.Ember.computed("willAnimate", "challengeData.valueMapping", (function() {
                    return this.get("willAnimate") && !this.get("challengeData.valueMapping")
                })),
                isCapped: s.Ember.computed("challengeData.nextLevel", "challengeData.currentLevel", (function() {
                    return !this.get("challengeData.nextLevel") && this.get("challengeData.currentLevel") !== r.CHALLENGE_LEVELS.CHALLENGER
                })),
                showComparison: s.Ember.computed("isLocalPlayer", "isComparable", (function() {
                    return !this.get("isLocalPlayer") && this.get("isComparable")
                })),
                showFriendsToCompare: s.Ember.computed("isLocalPlayer", "isComparable", "friendsToCompareCount", (function() {
                    return this.get("isLocalPlayer") && !this.get("isComparable") && this.get("friendsToCompareCount")
                })),
                showProgressBar: s.Ember.computed("isLocalPlayer", "challengeData.isApex", "challengeData.nextThreshold", (function() {
                    return this.get("isLocalPlayer") && !this.get("challengeData.isApex") && this.get("challengeData.nextThreshold") > 0
                })),
                showAchievedTime: s.Ember.computed("isLocalPlayer", "isCapped", (function() {
                    return this.get("isLocalPlayer") && this.get("isCapped")
                })),
                showLeaderboard: s.Ember.computed("challengeData.isApex", "challengeData.hasLeaderboard", (function() {
                    return this.get("challengeData.isApex") && this.get("challengeData.hasLeaderboard")
                })),
                init() {
                    this._super(...arguments), this._playerNames = s.playerNames, this.get("riotclientService").getLocale().then((e => {
                        const t = e.replace("_", "-");
                        this.set("locale", t)
                    })), this.set("friendsSummonerIcons", s.Ember.A()), this.binding = s.dataBinding.bindTo(s.socket), this.platformConfigBinding = (0, s.dataBinding)("/lol-platform-config", s.socket), this.platformConfigBinding.observe("/v1/namespaces/Challenges/TooltipAnimationsEnabled", this, this._handleTooltipAnimationsEnabled)
                },
                didInsertElement() {
                    this._super(...arguments), this.get("willAnimate") && s.Ember.run.scheduleOnce("afterRender", this, this._animateTooltip)
                },
                didReceiveAttrs() {
                    this._super(...arguments);
                    const e = this.get("puuid"),
                        t = this.get("localSummonerPuuid");
                    e ? this.binding.observe(`/lol-summoner/v2/summoners/puuid/${e}`, this, this._getSummonerIconPath) : this.binding.observe(`/lol-summoner/v2/summoners/puuid/${t}`, this, this._getSummonerIconPath), this._calculateFriendsToCompare(this.prevFriendsAtLevels, this.get("friendsAtLevels")), this._calculateFriendsForDetailedComparison(this.prevFriendsToCompare, this.get("friendsToCompare"))
                },
                willDestroyElement() {
                    this._super(...arguments);
                    const e = this.get("puuid"),
                        t = this.get("localSummonerPuuid");
                    e ? this.binding.unobserve(`/lol-summoner/v2/summoners/puuid/${e}`, this) : this.binding.unobserve(`/lol-summoner/v2/summoners/puuid/${t}`, this);
                    const n = this.get("animationTimeline");
                    n && n.kill()
                },
                willAnimate: s.Ember.computed.and("animationsEnabled", "tooltipAnimationsEnabled"),
                _handleTooltipAnimationsEnabled(e) {
                    const t = (0, r.getFlagValueOrDefault)(r.CHALLENGE_FLAG_NAMES.TOOLTIP_ANIMATIONS_ENABLED, e);
                    this.set("tooltipAnimationsEnabled", t)
                },
                _animateTooltip() {
                    this.get("showLeaderboard") ? this._animateLeaderboard() : this.get("showProgressBar") && this._animateProgressBar()
                },
                _getSummonerIconPath(e) {
                    if (!e || !e.profileIconId) return;
                    const t = e.profileIconId;
                    this.get("gameDataService").getSummonerIcon(t).then((e => {
                        const {
                            iconPath: t
                        } = e;
                        this.set("summonerIconPath", t)
                    }))
                },
                _aggregateFriendsToComparePuuids(e) {
                    if (!e || !e.length) return [];
                    const t = [];
                    return e.forEach((e => {
                        e && e.friends && t.push(...e.friends)
                    })), t
                },
                _calculateFriendsToCompare(e, t) {
                    if (!t || !t.length || e && e.length === t.length) return;
                    this.prevFriendsAtLevels = t;
                    const n = this.get("challengeData.currentLevel"),
                        a = r.CHALLENGE_LEVEL_TO_ORDINAL[n];
                    if (0 === t.length || !n) return this.set("friendsToCompare", null), void this.set("friendComparisonHierarchy", null);
                    const s = t.filter((e => r.CHALLENGE_LEVEL_TO_ORDINAL[e.level] === a)),
                        i = t.filter((e => r.CHALLENGE_LEVEL_TO_ORDINAL[e.level] > a)),
                        l = t.filter((e => r.CHALLENGE_LEVEL_TO_ORDINAL[e.level] < a));
                    s.length ? (this.set("friendsToCompare", this._aggregateFriendsToComparePuuids(s)), this.set("friendComparisonHierarchy", d)) : i.length ? (this.set("friendsToCompare", this._aggregateFriendsToComparePuuids(i)), this.set("friendComparisonHierarchy", o)) : l.length && (this.set("friendsToCompare", this._aggregateFriendsToComparePuuids(l)), this.set("friendComparisonHierarchy", c))
                },
                _getFriendsForDetailedComparison(e) {
                    const t = Array.from(e),
                        n = [];
                    for (; t.length > 0 && n.length < 3;) {
                        const e = t.splice(Math.floor(Math.random() * t.length), 1);
                        n.push(e[0])
                    }
                    return n
                },
                _calculateFriendsForDetailedComparison(e, t) {
                    if (!t || !t.length || e && e.length === t.length) return;
                    this.prevFriendsToCompare = t;
                    const n = this._getFriendsForDetailedComparison(t);
                    this.get("summonerService").getSummonersByPuuid(n).then((e => {
                        this.set("friendsForDetailedComparisonSummonerInfo", e);
                        const t = [];
                        e.forEach((e => {
                            t.push(this.get("gameDataService").getSummonerIcon(e.profileIconId))
                        })), Promise.all(t).then((e => {
                            const t = e.map((e => e.iconPath)).reverse();
                            this.set("friendsForDetailedComparisonIcons", t)
                        }))
                    }))
                },
                iconPath: s.Ember.computed("currentLevel", "nextLevel", "challengeData.levelToIconPath", (function() {
                    const e = this.get("currentLevel"),
                        t = e !== r.CHALLENGE_LEVELS.NONE ? e : this.get("nextLevel");
                    return this.get(`challengeData.levelToIconPath.${t}`) || `/fe/lol-static-assets/images/challenges-shared/icon_achievement_${t}.png`
                })),
                friendsToCompareCount: s.Ember.computed.alias("friendsToCompare.length"),
                backgroundImagePath: s.Ember.computed("challengeData.currentLevel", "challengeData.nextLevel", (function() {
                    const e = this.get("challengeData.currentLevel"),
                        t = this.get("challengeData.nextLevel");
                    if (!e && !t) return "";
                    const n = e !== r.CHALLENGE_LEVELS.NONE ? e : t;
                    return `${r.IMG_BASE_PATH}/challenge-card-points-container-${n.toLowerCase()}.png`
                })),
                pointsContainerTextSize: s.Ember.computed("challengeData.pointsAwarded", (function() {
                    return this.get("challengeData.pointsAwarded") >= 100 ? "small" : ""
                })),
                progressCurrentValue: s.Ember.computed.alias("challengeData.currentValue"),
                progressNextValue: s.Ember.computed.alias("challengeData.nextThreshold"),
                progressBarFill: s.Ember.computed("progressCurrentValue", "progressNextValue", "challengeData.valueMapping", (function() {
                    if (!!this.get("challengeData.valueMapping")) return 0;
                    const e = this.get("progressCurrentValue"),
                        t = this.get("progressNextValue"),
                        n = t ? e / t * 100 : 0;
                    return Math.min(Math.max(n, 0), 100)
                })),
                progressDisplayCurrentValue: s.Ember.computed("challengeData.currentValue", "challengeData.currentThreshold", "challengeData.valueMapping", (function() {
                    const {
                        valueMapping: e,
                        currentValue: t,
                        currentThreshold: n
                    } = this.get("challengeData");
                    if (e) {
                        const t = this.get("tra");
                        return (0, l.getLocForMappingAndValue)(t, n, e)
                    }
                    return t
                })),
                progressDisplayNextValue: s.Ember.computed("challengeData.nextThreshold", "challengeData.currentThreshold", "challengeData.valueMapping", (function() {
                    const {
                        valueMapping: e,
                        nextThreshold: t
                    } = this.get("challengeData");
                    if (e) {
                        const n = this.get("tra");
                        return (0, l.getLocForMappingAndValue)(n, t, e)
                    }
                    return t
                })),
                txtFriends: s.Ember.computed("friendsToCompare", "friendComparisonHierarchy", "friendsForDetailedComparisonSummonerInfo.[]", (function() {
                    const e = this.get("friendsToCompare"),
                        t = e ? e.length : 0,
                        n = this.get("friendComparisonHierarchy"),
                        a = this.get("friendsForDetailedComparisonSummonerInfo"),
                        s = this.get("_playerNames").isUsingAlias;
                    if (!t || !a || !n) return "";
                    const i = {},
                        r = t > 4 ? "X" : t;
                    for (let e = 0; e < a.length; e++) {
                        const t = s ? a[e].gameName : a[e].displayName;
                        i[`name${e+1}`] = t
                    }
                    return i.count = t - a.length, this.get("tra").formatString(`challenge_tooltip_${n.toLowerCase()}_friends_${r}_total`, i)
                })),
                txtTitle: s.Ember.computed("challengeData.id", "challengeData.name", (function() {
                    if (this.get("challengeData.name")) return this.get("challengeData.name");
                    const e = this.get("challengeData.id"),
                        t = this.get("tra"),
                        n = `challenge_name_${e}`;
                    return t.exists(n) ? t.get(n) : `Challenge #${e}`
                })),
                txtDescription: s.Ember.computed("challengeData.id", "challengeData.description", "progressNextValue", "showLeaderboard", (function() {
                    const e = this.get("showLeaderboard") ? this.get("challengeData.descriptionShort") : this.get("challengeData.description"),
                        t = this.get("challengeData.valueMapping"),
                        n = this.get("progressNextValue"),
                        a = this.get("tra");
                    return (0, l.formatChallengeString)(a, e, n, t)
                })),
                localizedChallengeLevel: s.Ember.computed("tra", "challengeData.currentLevel", "challengeData.isApex", (function() {
                    const e = this.get("challengeData.currentLevel") || r.CHALLENGE_LEVELS.NONE,
                        t = this.get("challengeData.position"),
                        n = this.get(`tra.challenge_level_${e.toLowerCase()}`);
                    return this.get("challengeData.isApex") && t > 0 ? this.get("tra").formatString("challenge_level_with_position", {
                        level: n,
                        position: t
                    }) : n
                })),
                txtPositionPercentile: s.Ember.computed("tra.challenge_percentile_players", "challengeData.percentile", (function() {
                    const e = this.get("challengeData.percentile"),
                        t = this.get("challengeData.currentLevel");
                    if (e && t && t !== r.CHALLENGE_LEVELS.NONE) return this._getPositionPercentileString(e)
                })),
                gameModeRestrictionType: s.Ember.computed("challengeData.gameModes.[]", (function() {
                    const e = this.get("challengeData.gameModes");
                    return e && e.length ? e[0].toLowerCase() : null
                })),
                headerIconPath: s.Ember.computed("isCapstone", "gameModeRestrictionType", "hasRetired", (function() {
                    if (this.get("hasRetired")) return "icon-lock";
                    if (this.get("isCapstone")) return "icon-capstone";
                    const e = this.get("gameModeRestrictionType");
                    return e ? `icon-map-${e}` : ""
                })),
                txtHeaderIcon: s.Ember.computed("tra", "isCapstone", "gameModeRestrictionType", "hasRetired", "retireTimestamp", (function() {
                    if (this.get("hasRetired")) {
                        const e = new Date(this.get("retireTimestamp"));
                        return this.get("tra").formatString("challenge_tooltip_retired", {
                            date: e.toLocaleDateString()
                        })
                    }
                    if (this.get("isCapstone")) return this.get("tra.challenge_tooltip_icon_capstone");
                    const e = this.get("gameModeRestrictionType");
                    return e ? this.get(`tra.challenge_tooltip_map_restriction_${e}`) : ""
                })),
                leaderboardCurrentThreshold: s.Ember.computed("challengeData.currentThreshold", (function() {
                    const e = this.get("challengeData.currentThreshold");
                    return this._getAbbreviatedLocForValue(e)
                })),
                leaderboardNextThreshold: s.Ember.computed("challengeData.nextThreshold", (function() {
                    const e = this.get("challengeData.nextThreshold");
                    return this._getAbbreviatedLocForValue(e)
                })),
                leaderboardCurrentValue: s.Ember.computed("challengeData.currentValue", (function() {
                    const e = this.get("challengeData.currentValue");
                    return this._getAbbreviatedLocForValue(e)
                })),
                currentNodeImagePath: s.Ember.computed("challengeData.currentLevel", (function() {
                    return `/fe/lol-static-assets/images/challenges-shared/icon-token-${this.get("challengeData.currentLevel")}.png`
                })),
                nextNodeImagePath: s.Ember.computed("challengeData.nextLevel", "challengeData.currentLevel", "isChallengerLeaderboardLeader", (function() {
                    if (this.get("isChallengerLeaderboardLeader")) return "/fe/lol-static-assets/images/challenges-shared/icon-challenger-crown-yellow.png";
                    const e = this.get("challengeData.currentLevel"),
                        t = this.get("challengeData.nextLevel");
                    return e === r.CHALLENGE_LEVELS.CHALLENGER ? "/fe/lol-static-assets/images/challenges-shared/icon-challenger-crown-blue.png" : `/fe/lol-static-assets/images/challenges-shared/icon-token-${t}.png`
                })),
                isCurrentLevelChallenger: s.Ember.computed.equal("challengeData.currentLevel", r.CHALLENGE_LEVELS.CHALLENGER),
                isChallengerLeaderboardLeader: s.Ember.computed("challengeData.position", "isCurrentLevelChallenger", (function() {
                    const e = this.get("isCurrentLevelChallenger"),
                        t = this.get("challengeData.position");
                    return !!e && 1 === t
                })),
                leaderboardProgressBarWidth: s.Ember.computed("challengeData.currentValue", "challengeData.currentThreshold", "challengeData.nextThreshold", "challengeData.playersInLevel", "isCurrentLevelChallenger", (function() {
                    if (this.get("isCurrentLevelChallenger")) {
                        const e = this.get("challengeData.playersInLevel"),
                            t = e - this.get("challengeData.position") + 1;
                        return this._getLeaderboardPercentCompletion(t, e)
                    }
                    const e = this.get("challengeData.nextThreshold") - this.get("challengeData.currentThreshold"),
                        t = this.get("challengeData.currentValue") - this.get("challengeData.currentThreshold");
                    return this._getLeaderboardPercentCompletion(t, e)
                })),
                txtApexLadderUpdateTime: s.Ember.computed("apexLadderUpdateTime", (function() {
                    const e = this.get("apexLadderUpdateTime");
                    if (!e) return "";
                    const t = (new Date(e) - Date.now()) / 1e3,
                        n = Math.floor(t / 3600),
                        a = String(Math.floor(t % 3600 / 60)).padStart(2, "0");
                    return this.get("tra").formatString("challenge_tooltip_ladder_update", {
                        time: `${n}:${a}`
                    })
                })),
                txtCurrentLevelAchievedTime: s.Ember.computed("currentLevelAchievedTime", "locale", (function() {
                    const e = this.get("currentLevelAchievedTime"),
                        t = this.get("locale");
                    if (!e) return "";
                    const n = new Date(e).toLocaleDateString(t);
                    return this.get("tra").formatString("challenge_tooltip_acquired_on", {
                        date: n
                    })
                })),
                localPlayerChallengeData: s.Ember.computed("showComparison", "localPlayerChallengesData", (function() {
                    if (!this.get("showComparison")) return null;
                    return (this.get("localPlayerChallengesData") || {})[this.get("challengeData.id")]
                })),
                localPlayerIconPath: s.Ember.computed("localPlayerChallengeData.currentLevel", "localPlayerChallengeData.nextLevel", "challengeData.levelToIconPath", (function() {
                    const e = this.get("localPlayerChallengeData.currentLevel"),
                        t = e !== r.CHALLENGE_LEVELS.NONE ? e : this.get("localPlayerChallengeData.nextLevel");
                    return this.get(`localPlayerChallengeData.levelToIconPath.${t}`) || `/fe/lol-static-assets/images/challenges-shared/icon_achievement_${t}.png`
                })),
                showTxtLocalPositionPercentile: s.Ember.computed("localPlayerChallengeData.percentile", "localPlayerChallengeData.currentLevel", (function() {
                    const e = this.get("localPlayerChallengeData.percentile"),
                        t = this.get("localPlayerChallengeData.currentLevel");
                    return !(!e || !t || t === r.CHALLENGE_LEVELS.NONE)
                })),
                txtLocalPositionPercentile: s.Ember.computed("tra.challenges_progress_summary_top_percentile", "localPlayerChallengeData.percentile", "localPlayerChallengeData.currentLevel", (function() {
                    const e = this.get("localPlayerChallengeData.percentile"),
                        t = this.get("localPlayerChallengeData.currentLevel");
                    if (e && t && t !== r.CHALLENGE_LEVELS.NONE) return this._getPositionPercentileString(e)
                })),
                isLocalUnranked: s.Ember.computed.equal("localPlayerChallengeData.currentLevel", r.CHALLENGE_LEVELS.NONE),
                localizedLocalChallengeLevel: s.Ember.computed("localPlayerChallengeData.currentLevel", (function() {
                    const e = this.get("localPlayerChallengeData.currentLevel") || r.CHALLENGE_LEVELS.NONE,
                        t = this.get("localPlayerChallengeData.position"),
                        n = this.get(`tra.challenge_level_${e.toLowerCase()}`);
                    return r.APEX_CHALLENGE_LEVELS.includes(e) && t ? this.get("tra").formatString("challenge_level_with_position", {
                        level: n,
                        position: t
                    }) : n
                })),
                isLocalApex: s.Ember.computed("localPlayerChallengeData.currentLevel", (function() {
                    return r.APEX_CHALLENGE_LEVELS.includes(this.get("localPlayerChallengeData.currentLevel"))
                })),
                localCurrentLevelAchievedTime: s.Ember.computed.alias("localPlayerChallengeData.currentLevelAchievedTime"),
                txtLocalCurrentLevelAchievedTime: s.Ember.computed("localCurrentLevelAchievedTime", "locale", (function() {
                    const e = this.get("localCurrentLevelAchievedTime"),
                        t = this.get("locale");
                    if (!e) return "";
                    const n = new Date(e).toLocaleDateString(t);
                    return this.get("tra").formatString("challenge_tooltip_acquired_on", {
                        date: n
                    })
                })),
                nextLevelRewards: s.Ember.computed("challengeData.thresholds", "challengeData.nextLevel", (function() {
                    const e = (this.get("challengeData.thresholds") || {})[this.get("challengeData.nextLevel")];
                    if (!e || !e.rewards) return [];
                    const t = [];
                    return e.rewards.forEach((e => {
                        const {
                            category: n,
                            quantity: a,
                            name: s
                        } = e;
                        r.CHALLENGE_CURRENCY_REWARDS.includes(n) ? t.push({
                            category: n.toLowerCase(),
                            text: this.get("tra").formatString("challenge_reward_challenge_points", {
                                number: a
                            })
                        }) : r.CHALLENGE_MILESTONE_REWARDS.includes(n) && t.push({
                            category: n.toLowerCase(),
                            text: s || this.get("tra.challenge_new_title")
                        })
                    })), t
                })),
                showNextLevelRewards: s.Ember.computed("nextLevelRewards.length", "showComparison", "showLeaderboard", "isLegacy", (function() {
                    return this.get("nextLevelRewards.length") > 0 && !this.get("showComparison") && !this.get("showLeaderboard") && !this.get("isLegacy")
                })),
                canRetire: s.Ember.computed.gt("retireTimestamp", 0),
                hasRetired: s.Ember.computed("retireTimestamp", "canRetire", (function() {
                    const e = this.get("retireTimestamp");
                    return this.get("canRetire") && e < Date.now()
                })),
                isRetiring: s.Ember.computed("canRetire", "hasRetired", (function() {
                    const e = this.get("canRetire"),
                        t = this.get("hasRetired");
                    return e && !t
                })),
                shouldDisplayIsRetiring: s.Ember.computed("isRetiring", "retireTimestamp", (function() {
                    const e = this.get("retireTimestamp");
                    return this.get("isRetiring") && e - r.CHALLENGES_RETIRE_DISPLAY_THRESHOLD_MS < Date.now()
                })),
                txtIsRetiring: s.Ember.computed("shouldDisplayIsRetiring", "retireTimestamp", (function() {
                    if (!this.get("shouldDisplayIsRetiring")) return "";
                    const e = (0, l.getDaysUntilTimestamp)(this.get("retireTimestamp"));
                    return this.get("tra").formatString("challenge_tooltip_retiring", {
                        days: e
                    })
                })),
                _getPositionPercentileString(e) {
                    return this.get("tra").formatString("challenge_percentile_players", {
                        percentile: e.toFixed(1)
                    })
                },
                _getLeaderboardPercentCompletion(e, t) {
                    const n = t ? e / t * 100 : 100;
                    return Math.min(Math.max(n, 0), 97)
                },
                _getAbbreviatedLocForValue(e) {
                    const t = this.get("challengeData.valueMapping"),
                        n = this.get("tra");
                    return t ? (0, l.getLocForMappingAndValue)(n, e, t) : e >= 1e4 ? n.numeral(e).format("0[.]00a") : e
                },
                _animateLeaderboard() {
                    const e = this.element.querySelector(".animated-leaderboard-progress-meter-fill"),
                        t = this.element.querySelector(".current-position-wrapper"),
                        n = new s.gsap.TimelineMax({
                            paused: !0,
                            onComplete: () => {
                                this.set("didAnimate", !0)
                            }
                        });
                    e && n.fromTo(e, .5, {
                        scaleX: "0"
                    }, {
                        scaleX: this.get("leaderboardProgressBarWidth") / 100,
                        ease: "power4.out"
                    }, "start"), t && n.fromTo(t, .5, {
                        left: "0"
                    }, {
                        left: `${this.get("leaderboardProgressBarWidth")}%`,
                        ease: "power4.out"
                    }, "start"), this.set("animationTimeline", n), n.play()
                },
                _animateProgressBar() {
                    const e = this.element.querySelector(".challenges-lottie-progress-meter-fill"),
                        t = this.element.querySelector(".challenges-progress-meter-fill"),
                        n = this.get("challengeData.valueMapping"),
                        a = this.get("progressDisplayCurrentValue"),
                        i = {
                            amount: 0
                        },
                        r = new s.gsap.TimelineMax({
                            paused: !0,
                            onComplete: () => {
                                this.set("didAnimate", !0)
                            }
                        });
                    n || r.add(s.gsap.TweenLite.to(i, .3, {
                        amount: a,
                        onUpdate: () => {
                            this.set("animatedCurrentValueText", Math.round(i.amount))
                        }
                    }), "start+=0.25"), e && a && r.add((() => {
                        e.play()
                    }), "start+=0.35"), t && r.fromTo(t, .1, {
                        opacity: "0"
                    }, {
                        opacity: "1"
                    }, "start+=0.41"), this.set("animationTimeline", r), r.play()
                }
            });
            t.default = u
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "h/jxhOIQ",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\challenge-item-tooltip.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\components\\\\challenge-item-tooltip.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","challenge-item-tooltip-header-container"],["flush-element"],["text","\\n"],["block",["unless"],[["get",["isLegacy"]]],null,20],["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["challenge-item-tooltip-map-container ",["helper",["if"],[["get",["isLegacy"]],"legacy"],null]]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["challenge-item-tooltip-map-icon ",["unknown",["headerIconPath"]]]]],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["flush-element"],["append",["unknown",["txtHeaderIcon"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","tooltip-content-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","tooltip-icon-container"],["flush-element"],["text","\\n    "],["open-element","img",[]],["dynamic-attr","class",["concat",["tooltip-icon ",["helper",["if"],[["get",["isUnranked"]],"unranked"],null]]]],["dynamic-attr","src",["concat",[["unknown",["iconPath"]]]]],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","tooltip-details-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tooltip-title"],["flush-element"],["append",["unknown",["txtTitle"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tooltip-tier"],["flush-element"],["append",["unknown",["localizedChallengeLevel"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["txtPositionPercentile"]]],null,18],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["block",["if"],[["get",["shouldDisplayIsRetiring"]]],null,17],["open-element","div",[]],["static-attr","class","tooltip-description"],["flush-element"],["append",["helper",["sanitize"],[["get",["txtDescription"]]],null],false],["close-element"],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["challenges-progress-bar-container ",["helper",["unless"],[["get",["showProgressBar"]],"hide"],null]]]],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","challenges-progress-bar"],["flush-element"],["text","\\n"],["block",["if"],[["get",["willAnimate"]]],null,16],["text","    "],["open-element","div",[]],["static-attr","class","challenges-progress-meter-fill"],["dynamic-attr","style",["concat",["transform: scaleX(",["unknown",["progressBarFill"]],"%)"]]],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","challenges-progress-text"],["flush-element"],["text","\\n"],["block",["if"],[["get",["shouldShowAnimatedProgressText"]]],null,15,14],["text","      /\\n      "],["append",["unknown",["progressDisplayNextValue"]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["block",["if"],[["get",["showAchievedTime"]]],null,13],["block",["if"],[["get",["showLeaderboard"]]],null,12],["block",["if"],[["get",["hasCapstoneParent"]]],null,7],["block",["if"],[["get",["showFriendsToCompare"]]],null,5],["block",["if"],[["get",["showComparison"]]],null,3],["block",["if"],[["get",["showNextLevelRewards"]]],null,1],["append",["helper",["challenge-item-footer"],null,[["challengeData","showLevelText","isHidden"],[["get",["challengeData"]],true,["get",["showComparison"]]]]],false],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","challenge-item-reward-container"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","challenge-item-reward-icon-container"],["flush-element"],["text","\\n          "],["open-element","img",[]],["static-attr","class","challenge-item-reward-icon"],["dynamic-attr","src",["concat",["/fe/lol-static-assets/images/challenges-shared/icon_reward_",["unknown",["reward","category"]],".svg"]]],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","challenge-item-reward-content"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenge-item-reward-value"],["flush-element"],["append",["unknown",["reward","text"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":["index","reward"]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","challenge-item-horizontal-line"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","challenge-item-next-rewards-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","challenge-item-next-rewards-header"],["flush-element"],["append",["unknown",["tra","challenge_next_level_rewards"]],false],["close-element"],["text","\\n"],["block",["each"],[["helper",["-each-in"],[["get",["nextLevelRewards"]]],null]],null,0],["text","  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["dynamic-attr","class",["concat",["tooltip-position-percentile ",["helper",["if"],[["get",["isLocalApex"]],"apex"],null]]]],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","icon-people"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["flush-element"],["append",["unknown",["txtLocalPositionPercentile"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","comparison-horizontal-line"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","comparison-summoner-name"],["flush-element"],["text","\\n    "],["append",["helper",["player-name"],null,[["format","puuid","gameName","tagLine","summonerName"],["full",["get",["localSummonerPuuid"]],["get",["localSummonerGameName"]],["get",["localSummonerTagLine"]],["get",["localSummonerSummonerName"]]]]],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","tooltip-content-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tooltip-icon-container"],["flush-element"],["text","\\n      "],["open-element","img",[]],["dynamic-attr","class",["concat",["tooltip-icon ",["helper",["if"],[["get",["isLocalUnranked"]],"unranked"],null]]]],["dynamic-attr","src",["concat",[["unknown",["localPlayerIconPath"]]]]],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tooltip-details-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","tooltip-title"],["flush-element"],["append",["unknown",["txtTitle"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","tooltip-tier"],["flush-element"],["append",["unknown",["localizedLocalChallengeLevel"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["showTxtLocalPositionPercentile"]]],null,2],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","tooltip-achieved-time"],["flush-element"],["text","\\n    "],["append",["unknown",["txtLocalCurrentLevelAchievedTime"]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","friends-icon-wrapper"],["flush-element"],["text","\\n          "],["open-element","img",[]],["static-attr","class","friends-profile-icon"],["dynamic-attr","src",["concat",[["get",["iconPath"]]]]],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","friends-icon-border"],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":["iconPath"]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","challenge-item-horizontal-line"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","challenge-item-friends-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","challenge-item-friends-icon-container"],["flush-element"],["text","\\n"],["block",["each"],[["get",["friendsForDetailedComparisonIcons"]]],null,4],["text","    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","challenge-item-friends-text"],["flush-element"],["text","\\n      "],["append",["helper",["sanitize"],[["get",["txtFriends"]]],null],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","divider"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","capstone-container"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","capstone-icon"],["static-attr","src","/fe/lol-static-assets/images/challenges-shared/icon-capstone.svg"],["flush-element"],["close-element"],["text","\\n    "],["append",["unknown",["parentName"]],false],["text","\\n  "],["close-element"],["text","\\n"],["block",["if"],[["get",["showNextLevelRewards"]]],null,6]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","leaderboard-node next"],["flush-element"],["text","\\n          "],["open-element","img",[]],["static-attr","class","node-image isLeader"],["dynamic-attr","src",["concat",[["unknown",["nextNodeImagePath"]]]]],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","current-position-text"],["flush-element"],["append",["unknown",["leaderboardCurrentValue"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","node-text"],["flush-element"],["append",["unknown",["leaderboardNextThreshold"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","leaderboard-node next"],["flush-element"],["text","\\n          "],["open-element","img",[]],["dynamic-attr","class",["concat",["node-image ",["helper",["if"],[["get",["isCurrentLevelChallenger"]],"crown"],null]]]],["dynamic-attr","src",["concat",[["unknown",["nextNodeImagePath"]]]]],["flush-element"],["close-element"],["text","\\n"],["block",["unless"],[["get",["isCurrentLevelChallenger"]]],null,10],["text","        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","tooltip-leaderboard-container"],["flush-element"],["text","\\n    "],["open-element","uikit-state-machine",[]],["static-attr","state","preloading"],["dynamic-attr","will-animate",["helper",["if"],[["get",["willAnimate"]],"true","false"],null],null],["flush-element"],["text","\\n      "],["open-element","uikit-states",[]],["flush-element"],["text","\\n        "],["open-element","uikit-state",[]],["static-attr","name","preloading"],["static-attr","synchronous",""],["flush-element"],["text"," "],["comment"," Preload video "],["text","\\n          "],["open-element","uikit-transition",[]],["static-attr","next-state","animated"],["flush-element"],["text","\\n            "],["open-element","uikit-condition-parameter",[]],["static-attr","name","will-animate"],["static-attr","value","true"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","uikit-behavior-media",[]],["static-attr","selector",".leaderboard-video-intro"],["static-attr","preloading",""],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","uikit-state",[]],["static-attr","name","animated"],["static-attr","synchronous",""],["flush-element"],["text","\\n          "],["open-element","uikit-behavior-media",[]],["static-attr","selector",".leaderboard-video-intro"],["static-attr","playing",""],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n\\n      "],["open-element","uikit-video",[]],["static-attr","visible-state","animated"],["static-attr","class","leaderboard-video-intro"],["static-attr","data-type","animated"],["static-attr","src","/fe/lol-static-assets/videos/challenges/challenges-tooltip-leaderboard-video-intro.webm"],["static-attr","preload",""],["flush-element"],["text","\\n      "],["close-element"],["text","\\n\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","leaderboard-progress-bar"],["flush-element"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["leaderboard-progress-meter-fill ",["helper",["if"],[["get",["willAnimate"]],"hidden"],null]]]],["dynamic-attr","style",["concat",["width: ",["unknown",["leaderboardProgressBarWidth"]],"%"]]],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","animated-leaderboard-progress-meter-fill"],["static-attr","style","width:100%"],["flush-element"],["close-element"],["text","\\n"],["block",["unless"],[["get",["isChallengerLeaderboardLeader"]]],null,11],["text","      "],["open-element","div",[]],["static-attr","class","leaderboard-node current"],["flush-element"],["text","\\n        "],["open-element","img",[]],["static-attr","class","node-image"],["dynamic-attr","src",["concat",[["unknown",["currentNodeImagePath"]]]]],["flush-element"],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","node-text"],["flush-element"],["append",["unknown",["leaderboardCurrentThreshold"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","current-position-wrapper"],["dynamic-attr","style",["concat",["left: ",["unknown",["leaderboardProgressBarWidth"]],"%"]]],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","summoner-icon-wrapper"],["flush-element"],["text","\\n          "],["open-element","img",[]],["static-attr","class","summoner-icon"],["dynamic-attr","src",["concat",[["unknown",["summonerIconPath"]]]]],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","summoner-icon-border"],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n"],["block",["unless"],[["get",["isChallengerLeaderboardLeader"]]],null,9],["text","      "],["close-element"],["text","\\n"],["block",["if"],[["get",["isChallengerLeaderboardLeader"]]],null,8],["text","    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","apex-ladder-update-time-container"],["flush-element"],["text","\\n      "],["append",["unknown",["txtApexLadderUpdateTime"]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","tooltip-achieved-time"],["flush-element"],["text","\\n    "],["append",["unknown",["txtCurrentLevelAchievedTime"]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["append",["unknown",["progressDisplayCurrentValue"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["append",["unknown",["animatedCurrentValueText"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","challenges-animated-progress-meter-fill"],["dynamic-attr","style",["concat",["transform: scaleX(",["unknown",["progressBarFill"]],"%)"]]],["flush-element"],["text","\\n        "],["open-element","lol-uikit-lottie",[]],["static-attr","class","challenges-lottie-progress-meter-fill"],["static-attr","src","/fe/lol-static-assets/lottie/challenges/challenges-card-tooltip-meter-fill.json"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","retiring-container"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","clock-icon"],["static-attr","src","/fe/lol-static-assets/images/challenges-shared/icon-clock.svg"],["flush-element"],["close-element"],["text","\\n    "],["append",["unknown",["txtIsRetiring"]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",["tooltip-position-percentile ",["helper",["if"],[["get",["challengeData","isApex"]],"apex"],null]]]],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","icon-people"],["flush-element"],["close-element"],["text","\\n        "],["open-element","div",[]],["flush-element"],["append",["unknown",["txtPositionPercentile"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","challenge-item-points-background"],["dynamic-attr","src",["concat",[["unknown",["backgroundImagePath"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","challenge-item-tooltip-points-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["backgroundImagePath"]]],null,19],["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",["challenge-item-points ",["unknown",["pointsContainerTextSize"]]]]],["flush-element"],["append",["unknown",["challengeData","pointsAwarded"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(477)) && a.__esModule ? a : {
                    default: a
                };
            n(478);
            var r = n(114);
            const l = {
                [r.ID_LIST_MAPPING_TYPES.champion]: {
                    width: 80,
                    height: 100
                },
                [r.ID_LIST_MAPPING_TYPES.skin]: {
                    width: 160,
                    height: 195
                },
                [r.ID_LIST_MAPPING_TYPES.item]: {
                    width: 80,
                    height: 100
                }
            };
            var o = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["challenge-requirements-grid-component"],
                classNameBindings: ["challenge.idListType"],
                gameDataService: s.Ember.inject.service("game-data"),
                init: function() {
                    this._super(...arguments), this.get("gameDataService").populateChampionAndSkinMaps()
                },
                challengeRequirements: s.Ember.computed("challenge.availableIds", "challenge.completedIds", "challenge.idListType", "gameDataService.championAssetsMap", "gameDataService.skinAssetsMap", (function() {
                    const e = this.get("gameDataService"),
                        t = this.get("challenge.availableIds") || [],
                        n = this.get("challenge.idListType"),
                        a = e.getRequirementsMap(t, n);
                    return (this.get("challenge.completedIds") || []).forEach((e => {
                        a[e] && (a[e].isComplete = !0)
                    })), Object.values(a).forEach((e => {
                        e && e.name && e.name.length > 25 && n !== r.ID_LIST_MAPPING_TYPES.skin && (e.showTooltip = !0)
                    })), Object.values(a).filter((e => e.id && e.name)).sort(((e, t) => e.name.localeCompare(t.name)))
                })),
                itemSizes: s.Ember.computed("challengeRequirements.[]", "challenge.idListType", (function() {
                    const e = this.get("challenge.idListType"),
                        t = l[e] || {},
                        n = t.width || 80,
                        a = t.height || 100;
                    return (this.get("challengeRequirements") || []).map((() => {
                        const t = e === r.ID_LIST_MAPPING_TYPES.skin ? 17 : 22;
                        return {
                            width: n + 20,
                            height: a + t
                        }
                    }))
                })),
                actions: {
                    closeModal: function() {
                        this.sendAction("handleCloseModal")
                    }
                }
            });
            t.default = o
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "8pcr+31E",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\challenge-requirements-grid.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\components\\\\challenge-requirements-grid.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","challenge-requirements-header"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","challenge-requirements-challenge-title"],["flush-element"],["append",["unknown",["challenge","name"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","challenge-requirements-close-button"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"closeModal"],null],null],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","challenge-requirements-separator-line"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","challenge-requirements-grid"],["flush-element"],["text","\\n"],["block",["ember-collection"],null,[["class","items","cell-layout"],["item-grid-scrollable",["get",["challengeRequirements"]],["helper",["mixed-grid-layout"],[["get",["itemSizes"]]],null]]],2],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","            "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n              "],["open-element","p",[]],["flush-element"],["append",["unknown",["entry","name"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type","offsetY"],["top","system",3]],0]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["challenge-requirement-item ",["helper",["if"],[["get",["entry","isComplete"]],"completed"],null]]]],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","challenge-requirement-item-container"],["flush-element"],["text","\\n        "],["open-element","img",[]],["dynamic-attr","src",["unknown",["entry","assetPath"]],null],["static-attr","class","challenge-requirement-item-image"],["flush-element"],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","challenge-requirement-item-overlay"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","challenge-requirement-item-name"],["flush-element"],["text","\\n        "],["append",["unknown",["entry","name"]],false],["text","\\n"],["block",["if"],[["get",["entry","showTooltip"]]],null,1],["text","      "],["close-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","challenge-requirement-completed-icon"],["static-attr","src","/fe/lol-static-assets/svg/challenge-requirements-complete-check.svg"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":["entry"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(480)) && a.__esModule ? a : {
                    default: a
                };
            n(481);
            var r = n(114),
                l = n(456);
            var o = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["challenge-item-component"],
                classNameBindings: ["isInactive:inactive", "isCapstone:capstone", "hasChallengeRequirements:clickable"],
                challengeData: {},
                apexLadderUpdateTime: 0,
                animationsEnabled: !0,
                isEoGUpdate: !1,
                currentLevel: s.Ember.computed.alias("challengeData.currentLevel"),
                nextLevel: s.Ember.computed.alias("challengeData.nextLevel"),
                pointsAwarded: s.Ember.computed.alias("challengeData.pointsAwarded"),
                category: s.Ember.computed.alias("challengeData.category"),
                isCapstone: s.Ember.computed.alias("challengeData.isCapstone"),
                nextMilestoneReward: s.Ember.computed.alias("challengeData.nextMilestoneReward"),
                retireTimestamp: s.Ember.computed.alias("challengeData.retireTimestamp"),
                didInsertElement() {
                    if (this.get("animationsEnabled") && this.get("isEoGUpdate") && this.get("isChallengeLevelIncreased")) {
                        const e = this.element.querySelector(".challenge-item-border-animation");
                        e && e.play()
                    }
                },
                willDestroyElement() {
                    this._super(...arguments), this._lottieAnimateTimer && s.Ember.run.cancel(this._lottieAnimateTimer)
                },
                showMapIcon: s.Ember.computed("isEoGUpdate", "headerIconPath", (function() {
                    return !this.get("isEoGUpdate") && this.get("headerIconPath")
                })),
                showPointsAwarded: !1,
                isInactive: s.Ember.computed.equal("currentLevel", r.CHALLENGE_LEVELS.NONE),
                isLegacy: s.Ember.computed.equal("category", r.CHALLENGE_CATEGORIES.LEGACY),
                hideRadialProgress: s.Ember.computed("challengeData.isApex", "challengeData.nextLevel", (function() {
                    const e = this.get("challengeData.isApex"),
                        t = !this.get("challengeData.nextLevel");
                    return e || t
                })),
                showApexPoints: s.Ember.computed("challengeData.isApex", "currentLevel", (function() {
                    const e = this.get("currentLevel"),
                        t = this.get("challengeData.isApex"),
                        n = e === r.CHALLENGE_LEVELS.GRANDMASTER || e === r.CHALLENGE_LEVELS.CHALLENGER;
                    return t && n
                })),
                willAnimate: !1,
                animationObserver: s.Ember.on("didInsertElement", s.Ember.observer("willAnimate", (function() {
                    this.get("willAnimate") && (this._lottieAnimateTimer = s.Ember.run.scheduleOnce("afterRender", this, this._playIntroAnimation))
                }))),
                showAnimatedElements: s.Ember.computed.or("willAnimate", "didAnimate"),
                lottieBarFillPath: s.Ember.computed("isChallengeLevelIncreased", (function() {
                    return this.get("isChallengeLevelIncreased") ? "/fe/lol-static-assets/lottie/challenges/challenges-progress-bar-levelup.json" : "/fe/lol-static-assets/lottie/challenges/challenges-progress-bar.json"
                })),
                lottieBorderAnimationPath: s.Ember.computed("isLegacy", (function() {
                    return this.get("isLegacy") ? "/fe/lol-static-assets/videos/challenges/challenge-card-new-indicator-legacy.webm" : "/fe/lol-static-assets/videos/challenges/challenge-card-new-indicator.webm"
                })),
                isChallengeLevelIncreased: s.Ember.computed("challengeData.currentValue", "challengeData.previousValue", "challengeData.currentThreshold", (function() {
                    const {
                        currentValue: e,
                        previousValue: t,
                        currentThreshold: n
                    } = this.get("challengeData");
                    return Math.abs(e - t) > Math.abs(e - n)
                })),
                isChallengeUpgraded: s.Ember.computed("isChallengeLevelIncreased", "challengeData.isApex", (function() {
                    const e = this.get("challengeData.isApex"),
                        t = this.get("isChallengeLevelIncreased");
                    return !e && t
                })),
                challengeProgressValue: s.Ember.computed("isEoGUpdate", "challengeData.valueMapping", "challengeData.currentValue", "challengeData.previousValue", "challengeData.isReverseDirection", (function() {
                    if (this.get("isEoGUpdate")) {
                        const {
                            valueMapping: e,
                            currentValue: t,
                            previousValue: n,
                            isReverseDirection: a
                        } = this.get("challengeData");
                        if (e) {
                            const t = this.get("challengeData.currentThreshold"),
                                n = this.get("tra");
                            return (0, l.getLocForMappingAndValue)(n, t, e)
                        }
                        const s = Math.abs(t - n);
                        return a ? `-${s}` : `+${s}`
                    }
                    return 0
                })),
                challengeProgressPercentage: s.Ember.computed("challengeData.currentValue", "challengeData.nextThreshold", "challengeData.valueMapping", (function() {
                    if (!!this.get("challengeData.valueMapping")) return 0;
                    const e = this.get("challengeData.currentValue"),
                        t = this.get("challengeData.nextThreshold"),
                        n = t ? e / t * 100 : 0;
                    return Math.min(Math.max(n, 0), 100)
                })),
                challengeCurrentLevelProgressPercentage: s.Ember.computed("challengeData.currentThreshold", "challengeData.nextThreshold", "challengeData.currentValue", (function() {
                    const e = this.get("challengeData.currentThreshold"),
                        t = this.get("challengeData.nextThreshold"),
                        n = this.get("challengeData.currentValue"),
                        a = t - e;
                    return a ? (n - e) / a * 100 : 0
                })),
                challengeBeforeProgressPercentage: s.Ember.computed("challengeData.previousValue", "challengeData.previousThreshold", "challengeData.currentThreshold", (function() {
                    const e = this.get("isChallengeLevelIncreased") ? this.get("challengeData.currentThreshold") - this.get("challengeData.previousThreshold") : this.get("challengeData.nextThreshold") - this.get("challengeData.currentThreshold"),
                        t = this.get("isChallengeLevelIncreased") ? this.get("challengeData.previousValue") - this.get("challengeData.previousThreshold") : this.get("challengeData.previousValue") - this.get("challengeData.currentThreshold");
                    return e && t ? t / e * 100 : 0
                })),
                lottieRadialNewPercent: s.Ember.computed("isChallengeLevelIncreased", "challengeCurrentLevelProgressPercentage", "challengeBeforeProgressPercentage", (function() {
                    let e;
                    return e = this.get("isChallengeLevelIncreased") ? this.get("challengeCurrentLevelProgressPercentage") : this.get("challengeCurrentLevelProgressPercentage") - this.get("challengeBeforeProgressPercentage"), e * r.LOTTIE_RADIAL_UNITS / 100
                })),
                lottieRadialOldPercent: s.Ember.computed("challengeBeforeProgressPercentage", (function() {
                    return (this.get("challengeBeforeProgressPercentage") || 0) * r.LOTTIE_RADIAL_UNITS / 100
                })),
                txtTitle: s.Ember.computed("challengeData.id", "challengeData.name", (function() {
                    if (this.get("challengeData.name")) return this.get("challengeData.name");
                    const e = this.get("challengeData.id"),
                        t = this.get("tra"),
                        n = `challenge_name_${e}`;
                    return t.exists(n) ? t.get(n) : `Challenge #${e}`
                })),
                txtDescription: s.Ember.computed("challengeData.id", "challengeData.descriptionShort", "challengeData.nextThreshold", (function() {
                    const e = this.get("challengeData.descriptionShort"),
                        t = this.get("challengeData.valueMapping"),
                        n = this.get("challengeData.nextThreshold"),
                        a = this.get("tra");
                    return (0, l.formatChallengeString)(a, e, n, t)
                })),
                iconPath: s.Ember.computed("currentLevel", "nextLevel", "challengeData.levelToIconPath", (function() {
                    const e = this.get("currentLevel"),
                        t = e !== r.CHALLENGE_LEVELS.NONE ? e : this.get("nextLevel");
                    return this.get(`challengeData.levelToIconPath.${t}`) || `/fe/lol-static-assets/images/challenges-shared/icon_achievement_${t}.png`
                })),
                gameModeRestrictionType: s.Ember.computed("challengeData.gameModes.[]", (function() {
                    const e = this.get("challengeData.gameModes");
                    return e && e.length ? e[0].toLowerCase() : null
                })),
                headerIconPath: s.Ember.computed("isCapstone", "gameModeRestrictionType", "hasRetired", (function() {
                    if (this.get("hasRetired")) return "icon-lock";
                    if (this.get("isCapstone")) return "icon-capstone";
                    const e = this.get("gameModeRestrictionType");
                    return e ? `icon-map-${e}` : ""
                })),
                hasChallengeRequirements: s.Ember.computed("challengeData.idListType", "isEoGUpdate", (function() {
                    const e = this.get("challengeData.idListType") || r.ID_LIST_MAPPING_TYPES.none;
                    return !this.get("isEoGUpdate") && e !== r.ID_LIST_MAPPING_TYPES.none
                })),
                hasNextMilestoneRewards: s.Ember.computed("nextMilestoneReward", (function() {
                    const e = this.get("nextMilestoneReward");
                    return e && void 0 !== e.reward
                })),
                canRetire: s.Ember.computed.gt("retireTimestamp", 0),
                hasRetired: s.Ember.computed("retireTimestamp", "canRetire", (function() {
                    const e = this.get("retireTimestamp");
                    return this.get("canRetire") && e < Date.now()
                })),
                isRetiring: s.Ember.computed("canRetire", "hasRetired", (function() {
                    const e = this.get("canRetire"),
                        t = this.get("hasRetired");
                    return e && !t
                })),
                shouldDisplayIsRetiring: s.Ember.computed("isRetiring", "retireTimestamp", (function() {
                    const e = this.get("retireTimestamp");
                    return this.get("isRetiring") && e - r.CHALLENGES_RETIRE_DISPLAY_THRESHOLD_MS < Date.now()
                })),
                _playIntroAnimation() {
                    const e = this.get("animateStartDelay") || 0,
                        t = this.element.querySelector(".lottie-radial-fill"),
                        n = new s.gsap.TimelineMax({
                            paused: !0,
                            onComplete: () => {
                                this.set("didAnimate", !0)
                            }
                        });
                    t && n.add((() => {
                        t.play()
                    }), `start+=${e}`), n.play()
                },
                mouseEnter() {
                    this.set("isHoverActive", !0)
                },
                mouseLeave() {
                    this.set("isHoverActive", !1)
                },
                actions: {
                    openChallengeRequirementsModal: function() {
                        this.set("showChallengeRequirementsModal", !0)
                    },
                    onHideChallengeRequirementsModal: function() {
                        this.set("showChallengeRequirementsModal", !1)
                    }
                }
            });
            t.default = o
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "UJsW0dUx",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\challenge-item.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\components\\\\challenge-item.js\\" "],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type","pseudoPartSelector"],["right","system","challenge-item-tooltip"]],16],["text","\\n"],["block",["challenge-card"],null,[["isInactive","isLegacyStyle","currentLevel","nextLevel","pointsAwarded","animationsEnabled"],[["get",["isInactive"]],["get",["isLegacy"]],["get",["currentLevel"]],["get",["nextLevel"]],["get",["pointsAwarded"]],["get",["animationsEnabled"]]]],14],["block",["if"],[["get",["showChallengeRequirementsModal"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","lc-modal",[]],["dynamic-attr","open",true,null],["dynamic-attr","onHide",["helper",["action"],[["get",[null]],"onHideChallengeRequirementsModal"],null],null],["flush-element"],["text","\\n    "],["open-element","lc-modal-content",[]],["flush-element"],["text","\\n      "],["open-element","lol-uikit-dialog-frame",[]],["static-attr","class","dialog-frame"],["flush-element"],["text","\\n        "],["append",["helper",["challenge-requirements-grid"],null,[["challenge","handleCloseModal"],[["get",["challengeData"]],"onHideChallengeRequirementsModal"]]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","challenge-item-border-animation-container"],["flush-element"],["text","\\n      "],["open-element","lol-uikit-video",[]],["static-attr","class","challenge-item-border-animation"],["dynamic-attr","src",["unknown",["lottieBorderAnimationPath"]],null],["static-attr","type","idle"],["static-attr","fade-in","150"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","challenge-item-click-hitbox"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"openChallengeRequirementsModal"],null],null],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",["challenge-item-challenge-description ",["helper",["if"],[["get",["hasNextMilestoneRewards"]],"short-description"],null]]]],["flush-element"],["append",["helper",["sanitize"],[["get",["txtDescription"]]],null],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","challenge-item-challenge-description"],["flush-element"],["append",["unknown",["challengeProgressValue"]],false],["close-element"],["text","\\n      "]],"locals":[]},{"statements":[["block",["if"],[["get",["isChallengeUpgraded"]]],null,4]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","challenge-item-apex-update-points"],["flush-element"],["append",["unknown",["challengeData","currentValue"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["showApexPoints"]]],null,6,5]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","challenge-xp-earned"],["flush-element"],["append",["unknown",["challengeProgressValue"]],false],["close-element"],["text","\\n      "]],"locals":[]},{"statements":[["block",["if"],[["get",["challengeProgressValue"]]],null,8]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","challenge-level-up-text"],["flush-element"],["append",["unknown",["tra","career_postgame_challenge_update_card_level_up"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isChallengeUpgraded"]]],null,10,9]],"locals":[]},{"statements":[["text","          "],["open-element","lol-uikit-radial-progress",[]],["static-attr","class","challenge-item-radial-progress-container"],["static-attr","type","custom"],["dynamic-attr","percent",["concat",[["unknown",["challengeProgressPercentage"]]]]],["static-attr","start-angle","-135"],["static-attr","end-angle","-405"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","slot","bottom"],["static-attr","class","challenge-item-radial bottom "],["flush-element"],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","slot","middle"],["dynamic-attr","class",["concat",["challenge-item-radial middle color-",["unknown",["challengeData","currentLevel"]]]]],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","challenge-item-animated-radial"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","radial-fill"],["flush-element"],["text","\\n              "],["open-element","lol-uikit-lottie",[]],["static-attr","class","lottie-radial-fill"],["dynamic-attr","src",["unknown",["lottieBarFillPath"]],null],["dynamic-attr","param-current-exp",["unknown",["lottieRadialOldPercent"]],null],["dynamic-attr","param-new-exp",["unknown",["lottieRadialNewPercent"]],null],["static-attr","autoplay","false"],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["append",["helper",["challenge-card-header"],null,[["leftDetailClass","leftValue","showLeftHeaderDetail","rightDetailClass","showRightHeaderDetail","showSecondaryRightHeaderDetail","secondaryRightDetailClass"],["challenge-points-awarded",["get",["challengeData","pointsAwarded"]],["get",["showPointsAwarded"]],["get",["headerIconPath"]],["get",["showMapIcon"]],["get",["shouldDisplayIsRetiring"]],"icon-clock"]]],false],["text","\\n  "],["open-element","div",[]],["static-attr","class","challenge-item-description-content"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","challenge-item-icon-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["challenge-item-radial-container ",["helper",["if"],[["get",["hideRadialProgress"]],"hidden"],null]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["showAnimatedElements"]]],null,13,12],["text","      "],["close-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","challenge-item-icon"],["dynamic-attr","src",["concat",[["unknown",["iconPath"]]]]],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","challenge-item-icon-mask"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["isEoGUpdate"]]],null,11],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["challenge-item-challenge-name ",["helper",["if"],[["get",["hasNextMilestoneRewards"]],"short-name"],null]]]],["flush-element"],["append",["unknown",["txtTitle"]],false],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["isEoGUpdate"]]],null,7,3],["text","\\n"],["block",["if"],[["get",["hasChallengeRequirements"]]],null,2],["text","  "],["close-element"],["text","\\n  "],["append",["helper",["challenge-item-footer"],null,[["challengeData"],[["get",["challengeData"]]]]],false],["text","\\n"],["block",["if"],[["get",["isEoGUpdate"]]],null,1]],"locals":[]},{"statements":[["text","    "],["append",["helper",["challenge-item-tooltip"],null,[["puuid","challengeData","apexLadderUpdateTime","animationsEnabled"],[["get",["puuid"]],["get",["challengeData"]],["get",["apexLadderUpdateTime"]],false]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isHoverActive"]]],null,15]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = n(114);
            const i = {};
            i[s.ID_LIST_MAPPING_TYPES.champion] = "championAssetsMap", i[s.ID_LIST_MAPPING_TYPES.skin] = "skinAssetsMap", i[s.ID_LIST_MAPPING_TYPES.item] = "itemAssetsMap";
            var r = a.Ember.Service.extend({
                init() {
                    this._super(...arguments), this.gameDataBinding = (0, a.dataBinding)("/lol-game-data", (0, a.getProvider)().getSocket()), this.set("championAssetsMap", new Map), this.set("skinAssetsMap", new Map), this.set("itemAssetsMap", new Map)
                },
                populateChampionAndSkinMaps() {
                    if (this.get("assetMapsInitialized")) return Promise.resolve();
                    const e = new Promise((e => {
                            this.populateChampionAssetsMap().then((t => {
                                this.populateSkinAssetsMap(t).then((() => {
                                    e()
                                }))
                            }))
                        })),
                        t = this.populateItemsAssetsMap();
                    Promise.all([e, t]).then((() => {
                        this.set("assetMapsInitialized", !0)
                    }))
                },
                getSummonerIcon(e) {
                    const t = this.get("summonerIcons");
                    return t ? Promise.resolve(t.find((t => t.id === e))) : this.gameDataBinding.get("/assets/v1/profile-icons.json").then((t => (this.set("summonerIcons", t), t.find((t => t.id === e)))))
                },
                populateSkinAssetsMap(e) {
                    const t = new Map;
                    return Promise.all(e.map((e => this.gameDataBinding.get(`/assets/v1/champions/${e.id}.json`).then((e => {
                        if (!e) return Promise.resolve();
                        (e.skins || []).forEach((e => {
                            t.set(e.id, {
                                id: e.id,
                                name: e.name,
                                assetPath: e.tilePath
                            }), (e.chromas || []).forEach((n => {
                                t.set(n.id, {
                                    id: n.id,
                                    name: n.name,
                                    assetPath: e.tilePath
                                })
                            })), e.questSkinInfo && (e.questSkinInfo.tiers || []).forEach((e => {
                                t.set(e.id, {
                                    id: e.id,
                                    name: e.name,
                                    assetPath: e.tilePath
                                })
                            }))
                        }))
                    }))))).then((() => {
                        this.set("skinAssetsMap", t)
                    }))
                },
                populateChampionAssetsMap() {
                    return this.gameDataBinding.get("/assets/v1/champion-summary.json").then((e => {
                        const t = new Map;
                        return e.forEach((e => {
                            -1 !== e.id && t.set(e.id, {
                                id: e.id,
                                name: e.name,
                                assetPath: e.squarePortraitPath
                            })
                        })), this.set("championAssetsMap", t), e
                    }))
                },
                populateItemsAssetsMap() {
                    return this.gameDataBinding.get("/assets/v1/items.json").then((e => {
                        const t = new Map;
                        return e.forEach((e => {
                            e.id && t.set(e.id, {
                                id: e.id,
                                name: e.name,
                                assetPath: e.iconPath
                            })
                        })), this.set("itemAssetsMap", t), e
                    }))
                },
                getRequirementsMap(e, t) {
                    const n = i[t],
                        a = this.get(`${n}`);
                    0 === e.length && (e = Array.from(a.keys()));
                    const s = {};
                    return e.forEach((e => {
                        const t = a.get(e);
                        s[e] = Object.assign({}, t)
                    })), s
                }
            });
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(484)) && a.__esModule ? a : {
                    default: a
                };
            n(485);
            var r = n(486);
            var l = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["player-title-tooltip-component"],
                titleData: {},
                titleAcquisitionMethod: s.Ember.computed("titleData.titleAcquisitionType", (function() {
                    return r.PLAYER_TITLE_ACQUISITION_TYPE_MAP[this.get("titleData.titleAcquisitionType")] || r.PLAYER_TITLE_ACQUISITION_TYPE_MAP.DEFAULT
                })),
                titleAcquisitionMethodName: s.Ember.computed("titleData.titleAcquisitionType", (function() {
                    const e = r.PLAYER_TITLE_ACQUISITION_TRA_MAP[this.get("titleData.titleAcquisitionType")];
                    if (e) {
                        return this.get("tra").get(e)
                    }
                })),
                titleRequirementDescription: s.Ember.computed("titleData.titleRequirementDescription", (function() {
                    return this.get("titleData.titleRequirementDescription").toUpperCase()
                }))
            });
            t.default = l
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "Ij/nmGyO",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\player-title-tooltip.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\components\\\\player-title-tooltip.js\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["player-title-tooltip-container ",["helper",["if"],[["get",["titleData","backgroundImagePath"]],"has-bg"],null]]]],["dynamic-attr","style",["concat",["background-image: url(",["helper",["if"],[["get",["titleData","backgroundImagePath"]],["get",["titleData","backgroundImagePath"]]],null],")"]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","player-title-info"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","player-title-acquisition-header"],["flush-element"],["text","\\n            "],["open-element","div",[]],["dynamic-attr","class",["concat",["acquisition-method-icon acquisition-icon-type-",["unknown",["titleAcquisitionMethod"]]]]],["flush-element"],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","acquisition-method-name"],["flush-element"],["append",["unknown",["titleAcquisitionMethodName"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","player-title-body"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","player-title-acquisition-info"],["flush-element"],["text","\\n"],["block",["if"],[["get",["titleData","iconPath"]]],null,0],["text","                "],["open-element","div",[]],["static-attr","class","player-title-acquisition-details"],["flush-element"],["text","\\n                    "],["open-element","div",[]],["static-attr","class","player-title-acquisition-name"],["flush-element"],["text","\\n                        "],["append",["unknown",["titleData","titleAcquisitionName"]],false],["text","\\n                    "],["close-element"],["text","\\n                    "],["open-element","div",[]],["static-attr","class","player-title-requirements-description"],["flush-element"],["text","\\n                        "],["append",["unknown",["titleRequirementDescription"]],false],["text","\\n                    "],["close-element"],["text","\\n                "],["close-element"],["text","\\n            "],["close-element"],["text","\\n        "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","player-title-footer"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","title-reward-icon-container"],["flush-element"],["text","\\n            "],["open-element","img",[]],["static-attr","class","title-reward-icon"],["static-attr","src","/fe/lol-static-assets/images/challenges-shared/icon_reward_title.svg"],["flush-element"],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","player-title-name"],["flush-element"],["text","\\n                "],["append",["unknown",["titleData","name"]],false],["text","\\n            "],["close-element"],["text","\\n        "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","                    "],["open-element","div",[]],["static-attr","class","player-title-acquisition-icon"],["flush-element"],["text","\\n                        "],["open-element","img",[]],["static-attr","class","player-title-icon"],["dynamic-attr","src",["unknown",["titleData","iconPath"]],null],["flush-element"],["close-element"],["text","\\n                    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.PLAYER_TITLE_FILTER_TYPES = t.PLAYER_TITLE_ACQUISITION_TYPE_MAP = t.PLAYER_TITLE_ACQUISITION_TRA_MAP = t.NO_TITLE_DATA_ID = void 0;
            t.NO_TITLE_DATA_ID = -1;
            t.PLAYER_TITLE_ACQUISITION_TYPE_MAP = {
                DEFAULT: "default",
                CHALLENGE: "challenge",
                EVENT: "event"
            };
            t.PLAYER_TITLE_ACQUISITION_TRA_MAP = {
                CHALLENGE: "player_title_acquisition_type_challenges",
                EVENT: "player_title_acquisition_type_events"
            };
            t.PLAYER_TITLE_FILTER_TYPES = {
                ALL: "ALL",
                CHALLENGES: "CHALLENGE",
                EVENTS: "EVENT"
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = "/riotclient",
                i = "/region-locale";
            var r = a.Ember.Service.extend({
                getFullRegionLocaleData: () => (0, a.dataBinding)(s, a.socket).get(i),
                getRegion: () => (0, a.dataBinding)(s, a.socket).get(i).then((e => e.region)),
                getLocale: () => (0, a.dataBinding)(s, a.socket).get(i).then((e => e.locale))
            });
            t.default = r
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            const s = (0, a.emberDataBinding)({
                Ember: a.Ember,
                websocket: (0, a.getProvider)().getSocket(),
                logPrefix: "service:summoner",
                basePaths: {
                    summoner: "/lol-summoner"
                },
                boundProperties: {
                    currentSummoner: {
                        api: "summoner",
                        path: "/v1/current-summoner"
                    }
                }
            });
            e.exports = a.Ember.Service.extend(s, {
                localSummonerId: a.Ember.computed.alias("currentSummoner.summonerId"),
                localProfileIconId: a.Ember.computed.alias("currentSummoner.profileIconId"),
                puuid: a.Ember.computed.alias("currentSummoner.puuid"),
                getSummoner: function(e) {
                    const t = `/v1/summoners/${e}`;
                    return this.get("api.summoner").get(t)
                },
                getSummonerByName: function(e) {
                    const t = `/v1/summoners?name=${e=encodeURIComponent(e)}`;
                    return this.get("api.summoner").get(t)
                },
                getSummonersByNames: function(e) {
                    return this.get("api.summoner").post("/v2/summoners/names", e)
                },
                getSummonersByPuuid: function(e) {
                    return this.get("api.summoner").post("/v2/summoners/puuid", e)
                }
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = t.CUSTOMIZER_SETTINGS_VERSION = void 0;
            var a = n(1);
            t.CUSTOMIZER_SETTINGS_VERSION = 1;
            const s = "/lol-settings/v2/account/LCUPreferences",
                i = "/lol-customizer-titles",
                r = "/lol-customizer-tokens",
                l = "/lol-customizer-icons",
                o = "/lol-challenges-latest-level-up",
                c = a.SharedComponentsApi.getApi_UXSettings(),
                d = "/lol-client-config/v3/client-config/lol.client_settings.shared.titleFilterEnabled",
                u = a.dataBinding.bindTo(a.socket);
            var m = a.Ember.Service.extend({
                largeAreaAnimationsEnabled: a.Ember.computed.alias("uxSettings.largeAreaAnimationsEnabled"),
                isTitleFilterEnabled: null,
                init: function() {
                    this._super(...arguments), this._uxSettingsListener = this._uxSettingsObserver.bind(this), c.addObserver(this._uxSettingsListener), u.observe(d, (e => {
                        this.set("isTitleFilterEnabled", e)
                    }))
                },
                willDestroy() {
                    this._super(...arguments), u.unobserve(d)
                },
                _uxSettingsObserver: function(e) {
                    this.set("uxSettings", e)
                },
                getCustomizerTitlesAccountSettings: () => (0, a.dataBinding)(s, a.socket).get(i),
                getCustomizerTokensAccountSettings: () => (0, a.dataBinding)(s, a.socket).get(r),
                getCustomizerIconsAccountSettings: () => (0, a.dataBinding)(s, a.socket).get(l),
                getChallengesLatestLevelUpSettings: () => (0, a.dataBinding)(s, a.socket).get(o),
                setLastVisitTimeSetting: e => (0, a.dataBinding)(s, a.socket).put(e, {
                    schemaVersion: 1,
                    data: {
                        lastVisitTime: Date.now()
                    }
                }),
                resetLastChallengeLevelUpTimestamp: () => (0, a.dataBinding)(s, a.socket).put(o, {
                    schemaVersion: 1,
                    data: {
                        lastLevelUpTime: 0
                    }
                }),
                setTitlesLastVisitTimeSetting() {
                    return this.setLastVisitTimeSetting(i)
                },
                setTokensLastVisitTimeSetting() {
                    return this.setLastVisitTimeSetting(r)
                },
                setIconsLastVisitTimeSetting() {
                    return this.setLastVisitTimeSetting(l)
                }
            });
            t.default = m
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = t.CUSTOMIZER_TITLES_SETTINGS_VERSION = void 0;
            var a = n(1);
            t.CUSTOMIZER_TITLES_SETTINGS_VERSION = 1;
            const s = "/v2/account/LCUPreferences/lol-notifications",
                i = "/v1/notifications/ACHIEVEMENT_TITLE",
                r = "/v1/notifications/SUMMONER_ICON";
            var l = a.Ember.Service.extend({
                titleNotificationsById: {},
                hasUnreadTitleNotification: !1,
                iconNotificationsById: {},
                hasUnreadIconNotification: !1,
                init() {
                    this._super(...arguments), this.settingsBinding = (0, a.dataBinding)("/lol-settings", a.socket), this.inventoryBinding = (0, a.dataBinding)("/lol-inventory", a.socket), this.settingsBinding.addObserver(s, this, this._handleNotificationPreferences.bind(this))
                },
                willDestroy() {
                    this._super(...arguments), this._destroyObservers(), this.settingsBinding.removeObserver(s, this)
                },
                acknowledgeAllTitleNotifications() {
                    this.acknowledgeAllNotifications(i)
                },
                acknowledgeAllIconNotifications() {
                    this.acknowledgeAllNotifications(r)
                },
                acknowledgeAllNotifications(e) {
                    return this.inventoryBinding.get(e).then((e => {
                        const t = e.map((e => {
                            if (!e.acknowledged) return this.inventoryBinding.post("v1/notification/acknowledge", e.id)
                        }));
                        return Promise.all(t)
                    }))
                },
                pipByTimestamp(e, t, n) {
                    const a = t || 1;
                    if (n && a) {
                        const t = e.moment;
                        return (t && t(n).valueOf() || 0) >= a
                    }
                    return !1
                },
                _initObservers() {
                    this.inventoryBinding.addObserver(i, this, this._handleInventoryTitleNotifications.bind(this)), this.inventoryBinding.addObserver(r, this, this._handleInventoryIconNotifications.bind(this))
                },
                _destroyObservers() {
                    this.inventoryBinding.removeObserver(i, this), this.inventoryBinding.removeObserver(r, this)
                },
                _handleInventoryIconNotifications(e) {
                    const t = {};
                    let n = !1;
                    e && e.forEach((e => {
                        e && "CREATE" === e.type && !e.acknowledged && (t[e.itemId] = e, n = !0)
                    })), this.set("hasUnreadIconNotification", n), this.set("iconNotificationsById", t)
                },
                _handleInventoryTitleNotifications(e) {
                    const t = {};
                    let n = !1;
                    e && e.forEach((e => {
                        e && "CREATE" === e.type && !e.acknowledged && (t[e.itemId] = e, n = !0)
                    })), this.set("hasUnreadTitleNotification", n), this.set("titleNotificationsById", t)
                },
                _handleNotificationPreferences(e) {
                    e && e.data && e.data.disableCollectionsNotifications ? this._destroyObservers() : this._initObservers()
                }
            });
            t.default = l
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(492);
            var s = n(114),
                i = n(456),
                r = n(95),
                l = n(493);
            const o = "riot",
                c = "ICONS",
                d = "BORDERS",
                u = "BANNERS",
                m = "TOKENS",
                p = "TITLES",
                h = {
                    1: "/fe/lol-static-assets/images/summoner-icon/summoner-icon-rare.png",
                    2: "/lol-game-data/assets/v1/rarity-gem-icons/epic.png",
                    3: "/lol-game-data/assets/v1/rarity-gem-icons/legendary.png",
                    4: "/lol-game-data/assets/v1/rarity-gem-icons/mythic.png",
                    5: "/lol-game-data/assets/v1/rarity-gem-icons/ultimate.png"
                },
                g = (0, a.emberDataBinding)({
                    Ember: a.Ember,
                    websocket: a.socket,
                    basePaths: {
                        summoner: "/lol-summoner",
                        platformConfig: "/lol-platform-config",
                        inventory: "/lol-inventory",
                        regalia: "/lol-regalia"
                    },
                    boundProperties: {
                        summoner: "/lol-summoner/v1/current-summoner",
                        profileIcons: "/lol-game-data/assets/v1/summoner-icons.json",
                        iconSets: "/lol-game-data/assets/v1/summoner-icon-sets.json",
                        ownedIcons: {
                            api: "inventory",
                            path: "/v2/inventory/SUMMONER_ICON"
                        },
                        bannerSkinsEnabled: {
                            api: "platformConfig",
                            path: "/v1/namespaces/Regalia/BannerSkinsEnabled",
                            default: !0
                        }
                    }
                });
            e.exports = a.Ember.Component.extend(g, {
                layout: n(494),
                classNames: ["challenges-identity-customizer-root-component"],
                selectedIconId: null,
                challenges: {},
                ownedTitles: [],
                allTitles: {},
                summary: {},
                isVisible: !1,
                showChallengeTabs: !1,
                currentSummonerRegalia: null,
                titleSettings: {},
                tokenSettings: {},
                iconSettings: {},
                selectedBannerType: r.BANNER_TYPES.BLANK,
                selectedCrestType: r.CREST_TYPES.PRESTIGE,
                selectedPrestigeCrest: null,
                selectedBannerId: s.BANNER_ID_DEFAULT,
                selectedCrestId: null,
                selectedPrestigeBorderLevel: null,
                selectedTab: c,
                selectedTokens: [],
                selectedTokenId: null,
                selectedTokenSlot: null,
                selectedTitle: null,
                identityCustomizerBannerSkinsEnabledPath: "/v1/namespaces/Challenges/IdentityCustomizerBannerSkinsEnabled",
                isIconsTabSelected: a.Ember.computed.equal("selectedTab", c),
                isBordersTabSelected: a.Ember.computed.equal("selectedTab", d),
                isBannersTabSelected: a.Ember.computed.equal("selectedTab", u),
                isTokensTabSelected: a.Ember.computed.equal("selectedTab", m),
                isTitlesTabSelected: a.Ember.computed.equal("selectedTab", p),
                settingsPreferences: a.Ember.inject.service("settings-preferences"),
                riotclientService: a.Ember.inject.service("riotclient"),
                summonerService: a.Ember.inject.service("summoner"),
                notificationsService: a.Ember.inject.service("shared-notifications"),
                localSummonerId: a.Ember.computed.alias("summonerService.localSummonerId"),
                puuid: a.Ember.computed.alias("summoner.puuid"),
                gameName: a.Ember.computed("summoner.gameName", (function() {
                    return this.get("summoner.gameName") || null
                })),
                tagLine: a.Ember.computed("summoner.tagLine", (function() {
                    return this.get("summoner.tagLine") || null
                })),
                summonerName: a.Ember.computed("summoner.displayName", (function() {
                    return this.get("summoner.displayName") || null
                })),
                highestRankedEntry: a.Ember.computed.alias("currentSummonerRegalia.highestRankedEntry"),
                lastSeasonHighestRank: a.Ember.computed.alias("currentSummonerRegalia.lastSeasonHighestRank"),
                isTencentRegion: a.Ember.computed.equal("region", "TENCENT"),
                animationsEnabled: a.Ember.computed.alias("settingsPreferences.largeAreaAnimationsEnabled"),
                hasUnreadTitleNotification: a.Ember.computed.alias("notificationsService.hasUnreadTitleNotification"),
                hasUnreadIconNotification: a.Ember.computed.alias("notificationsService.hasUnreadIconNotification"),
                lastTitlesVisitTime: a.Ember.computed.alias("titleSettings.lastVisitTime"),
                lastTokensVisitTime: a.Ember.computed.alias("tokenSettings.lastVisitTime"),
                lastIconsVisitTime: a.Ember.computed.alias("iconSettings.lastVisitTime"),
                overallChallengeLevel: a.Ember.computed.alias("summary.overallChallengeLevel"),
                init() {
                    this._super(...arguments), this._challengesDataBinding = (0, a.dataBinding)("/lol-challenges", a.socket), this._regaliaDataBinding = (0, a.dataBinding)("/lol-regalia", a.socket), this._platformConfigBinding = (0, a.dataBinding)("/lol-platform-config", a.socket), this.get("riotclientService").getLocale().then((e => {
                        const t = e.replace("_", "-");
                        this.set("locale", t)
                    })), this.get("riotclientService").getRegion().then((e => {
                        this.set("region", e)
                    }))
                },
                didReceiveAttrs() {
                    this._super(...arguments);
                    const e = this.get("isVisible");
                    !this._prevIsVisible && e ? this._onVisible() : this._prevIsVisible && !e && this._onHidden(), this._prevIsVisible = e
                },
                handleCustomizerBannerSkinsEnabled(e) {
                    const t = (0, s.getFlagValueOrDefault)(s.CHALLENGE_FLAG_NAMES.IDENTITY_CUSTOMIZER_BANNERSKINS_ENABLED, e);
                    this.set("identityCustomizerBannerSkinsEnabled", t)
                },
                _onVisible() {
                    this._platformConfigBinding.observe(this.identityCustomizerBannerSkinsEnabledPath, this.handleCustomizerBannerSkinsEnabled.bind(this)), this._fetchChallengesData(), this._fetchTitlesData(), this._fetchRegalia(), this.set("_keyDown", this._handleKeyDown.bind(this)), document.addEventListener("keydown", this.get("_keyDown")), this.get("settingsPreferences").getCustomizerTitlesAccountSettings().then((e => {
                        e && e.data && this.set("titleSettings", e.data)
                    })), this.get("settingsPreferences").getCustomizerIconsAccountSettings().then((e => {
                        e && e.data && this.set("iconSettings", e.data)
                    })), this._resetSelectedIcon(), this._syncTokenSettings()
                },
                _onHidden() {
                    document.removeEventListener("keydown", this.get("_keyDown")), this.set("selectedTokenId", null), this.set("selectedTokenSlot", null), this.set("selectedTab", c)
                },
                _resetSelectedIcon() {
                    const e = this.get("summoner.profileIconId") || "";
                    this.set("selectedIconId", e)
                },
                _syncTokenSettings() {
                    this.get("settingsPreferences").getCustomizerTokensAccountSettings().then((e => {
                        e && e.data && (this.set("tokenSettings", e.data), this._handleChallengesLastLevelUp(e.data))
                    }))
                },
                _handleChallengesLastLevelUp(e) {
                    this.get("settingsPreferences").getChallengesLatestLevelUpSettings().then((t => {
                        if (t && t.data) {
                            const n = t.data.lastLevelUpTime;
                            n && n > e.lastVisitTime && (this.get("settingsPreferences").resetLastChallengeLevelUpTimestamp(), this._challengesDataBinding.get("/v1/challenges/local-player", {
                                skipCache: !0
                            }).then((e => {
                                this.set("challenges", e)
                            })))
                        }
                    }))
                },
                previewTitle: a.Ember.computed("selectedTitle", (function() {
                    const e = this.get("selectedTitle") || {};
                    return e.itemId >= 0 ? e.name : ""
                })),
                crystalImagePath: a.Ember.computed("overallChallengeLevel", (function() {
                    const e = this.get("overallChallengeLevel");
                    return e ? `/fe/lol-static-assets/images/challenges-shared/crystal_${e.toLowerCase()}.png` : ""
                })),
                previewTokens: a.Ember.computed("selectedTokenSlot", "selectedTokens.[]", (function() {
                    const e = this.get("selectedTokens") || [],
                        t = this.get("selectedTokenSlot"),
                        n = [...e],
                        a = t;
                    for (; n.length < s.MAX_SELECTED_TOKENS;) n.push({
                        isPlaceholder: !0
                    });
                    return n.forEach(((e, t) => {
                        void 0 === e && (n[t] = {
                            ...n[t],
                            isPlaceholder: !0
                        })
                    })), n[a] = {
                        ...n[a],
                        next: !0
                    }, n
                })),
                showTitlesPip: a.Ember.computed("isTitlesTabSelected", "hasUnreadTitleNotification", "lastTitlesVisitTime", "ownedTitles.[]", (function() {
                    const e = this.get("ownedTitles");
                    if (!e || 0 === e.length) return !1;
                    if (this.get("isTitlesTabSelected")) return !1;
                    if (this.get("hasUnreadTitleNotification")) return !0;
                    const t = this.get("tra");
                    let n = !1;
                    const a = this.get("lastTitlesVisitTime");
                    for (const s of e) {
                        if (this.get("notificationsService").pipByTimestamp(t, a, s.purchaseDate)) {
                            n = !0;
                            break
                        }
                    }
                    return n
                })),
                showIconsPip: a.Ember.computed("isIconsTabSelected", "hasUnreadIconNotification", "lastIconsVisitTime", "icons", (function() {
                    const e = this.get("icons");
                    if (!e || 0 === e.length || this.get("isIconsTabSelected")) return !1;
                    if (this.get("hasUnreadIconNotification")) return !0;
                    const t = this.get("tra");
                    let n = !1;
                    const a = this.get("lastIconsVisitTime");
                    for (const s of e) {
                        if (this.get("notificationsService").pipByTimestamp(t, a, s.purchaseDate)) {
                            n = !0;
                            break
                        }
                    }
                    return n
                })),
                showTokensPip: a.Ember.computed("isTokensTabSelected", "challenges", "lastTokensVisitTime", (function() {
                    const e = this.get("challenges");
                    if (this.get("isTokensTabSelected") || !e) return !1;
                    const t = Object.values(e).filter((e => e.currentLevel !== s.CHALLENGE_LEVELS.NONE));
                    let n = !1;
                    if (t && t.length > 0) {
                        const e = this.get("tra");
                        for (const a of t) {
                            const t = a.currentLevelAchievedTime,
                                s = this.get("lastTokensVisitTime");
                            if (this.get("notificationsService").pipByTimestamp(e, s, t)) {
                                n = !0;
                                break
                            }
                        }
                        return n
                    }
                })),
                tabDefinitions: a.Ember.computed("identityCustomizerBannerSkinsEnabled", "showTitlesPip", "showTokensPip", "showIconsPip", (function() {
                    const e = [{
                        name: "icons",
                        value: c,
                        showUnreadPip: this.get("showIconsPip")
                    }, {
                        name: "borders",
                        value: d
                    }];
                    return e.push({
                        name: "tokens",
                        value: m,
                        showUnreadPip: this.get("showTokensPip")
                    }), e.push({
                        name: "titles",
                        value: p,
                        showUnreadPip: this.get("showTitlesPip")
                    }), this.get("identityCustomizerBannerSkinsEnabled") && e.push({
                        name: "banners",
                        value: u
                    }), e
                })),
                tabs: a.Ember.computed("selectedTab", "tabDefinitions", "tra.isReady", (function() {
                    const e = [],
                        t = this.get("selectedTab");
                    return this.get("tabDefinitions").forEach((n => {
                        e.push({
                            name: n.name,
                            value: n.value,
                            selected: n.value === t,
                            showUnreadPip: n.showUnreadPip,
                            nameLoc: this.get(`tra.challenges_identity_customizer_tab_${n.value}`)
                        })
                    })), e
                })),
                ownedIconsWithBaseSet: a.Ember.computed("ownedIcons.[]", (function() {
                    const e = this.get("ownedIcons");
                    if (!e) return void a.logger.trace("Owned icons not loaded yet");
                    if (void 0 === e.find((e => e.itemId >= 0 && e.itemId <= 28)))
                        for (let t = 0; t <= 28; t++) e.push({
                            itemId: t
                        });
                    return e.filter((e => 29 !== e.itemId))
                })),
                iconSetsMap: a.Ember.computed("iconSets", (function() {
                    const e = new Map,
                        t = this.get("iconSets");
                    return t && t.forEach((t => {
                        t.icons.forEach((n => {
                            e.set(n, t)
                        }))
                    })), e
                })),
                profileIconsMap: a.Ember.computed("profileIcons", (function() {
                    return a.lodash.keyBy(this.get("profileIcons"), "id")
                })),
                icons: a.Ember.computed("ownedIconsWithBaseSet.[]", "profileIconsMap", "iconSetsMap", "summoner.profileIconId", "region", (function() {
                    const e = this.get("ownedIconsWithBaseSet"),
                        t = this.get("profileIconsMap"),
                        n = this.get("iconSetsMap"),
                        s = this.get("region");
                    if (!e || a.lodash.isEmpty(t) || a.lodash.isEmpty(n) || !s) return a.logger.trace("Icons not loaded yet"), a.Ember.A();
                    let r = e.filter((e => e && !!t[e.itemId])).map((e => {
                        const a = e.itemId,
                            r = t[a],
                            l = r.rarities,
                            o = this._findIconRarity(s, l);
                        return {
                            ...r,
                            desc: this._getRegionalIconDescription(r, s),
                            purchaseDate: (0, i.convertDateStringToISOString)(e.purchaseDate),
                            title: r.title || "",
                            rarity: o,
                            rarityIconSrc: h[o] || "",
                            set: n.get(a)
                        }
                    }));
                    return this.get("isVisible") || (r = r.slice(0, 28)), a.Ember.A(r)
                })),
                saveAndExit() {
                    const e = [],
                        t = this._saveIcon();
                    t && e.push(t);
                    const n = this._saveRegalia();
                    n && e.push(n);
                    const s = this._savePreferences();
                    s && e.push(s), e.length > 0 && Promise.all(e).then((() => {
                        a.logger.trace("Successfully saved customized identity.")
                    })).catch((e => {
                        a.logger.error("Failed to save.", e)
                    })), a.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-uikit-button-circlegold-click.ogg"), this.privateApi.hideIdentityCustomizer()
                },
                _findIconRarity(e, t) {
                    let n;
                    if (e && t && Array.isArray(t)) {
                        const a = t.find((t => t.region === e));
                        if (a) n = a.rarity;
                        else {
                            const e = t.find((e => e.region && e.region.toLowerCase() === o));
                            n = e ? e.rarity : 0
                        }
                    }
                    return n || 0
                },
                _getRegionalIconDescription(e, t) {
                    const n = e.descriptions;
                    if (!Array.isArray(n)) return "";
                    let a = n.find((e => e.region === t));
                    return a ? a.description : (a = n.find((e => e.region && e.region.toLowerCase() === o)), a ? a.description : "")
                },
                _fetchRegalia() {
                    this.get("api.regalia").get("/v2/current-summoner/regalia", {
                        skipCache: !0
                    }).then((e => {
                        this.set("currentSummonerRegalia", e), this.set("selectedCrestType", e.preferredCrestType), this.set("selectedPrestigeCrest", e.selectedPrestigeCrest), this.set("summonerLevel", e.summonerLevel), this.set("selectedBannerType", e.preferredBannerType)
                    }))
                },
                _fetchChallengesData() {
                    this._challengesDataBinding.get("/v1/challenges/local-player").then((e => {
                        this.set("challenges", e)
                    })), this._challengesDataBinding.get("/v1/summary-player-data/local-player", {
                        skipCache: !0
                    }).then((e => {
                        this.set("summary", e), this._setCurrentSelections(e)
                    })), this._regaliaDataBinding.get("/v3/inventory/REGALIA_BANNER").then((e => {
                        this.set("allBanners", e)
                    }))
                },
                _fetchTitlesData() {
                    this._challengesDataBinding.get("/v2/titles/all").then((e => {
                        this.set("allTitles", e)
                    })), this._challengesDataBinding.get("/v2/titles/local-player", {
                        skipCache: !0
                    }).then((e => {
                        this.set("ownedTitles", e)
                    }))
                },
                _setCurrentSelections(e) {
                    if (!e || !e.topChallenges) return;
                    const t = [];
                    e.topChallenges.forEach((e => {
                        t.push(e)
                    })), this.set("selectedTokens", t), this.set("selectedTitle", e.title), this.set("selectedBannerId", e.bannerId), this.set("selectedCrestId", e.crestId), this.set("selectedPrestigeBorderLevel", e.prestigeCrestBorderLevel)
                },
                _findChallengeById(e) {
                    return (this.get("challenges") || {})[e]
                },
                _selectTab(e) {
                    e && e.value && this.get("selectedTab") !== e.value && this.set("selectedTab", e.value)
                },
                _saveIcon() {
                    const e = this.get("summoner.profileIconId"),
                        t = this.get("selectedIconId");
                    if ("number" == typeof t && t !== e) return a.logger.trace(`Saving icon with id ${t}`), this.get("api.summoner").put("/v1/current-summoner/icon", {
                        profileIconId: t
                    })
                },
                _savePreferences() {
                    const e = (this.get("selectedTokens") || []).map((e => e.id)),
                        t = this.get("selectedTitle.itemId") || -1,
                        n = this.get("selectedBannerId"),
                        a = this.get("selectedCrestId"),
                        i = this.get("selectedPrestigeBorderLevel"),
                        o = this.get("selectedCrestType"),
                        c = this.get("selectedPrestigeCrest") || 0,
                        d = {};
                    if (e.length) {
                        d.challengeIds = [];
                        for (let t = 0; t < s.MAX_SELECTED_TOKENS; t++) void 0 !== e[t] ? d.challengeIds.push(e[t]) : d.challengeIds.push(-1)
                    }
                    return t >= 0 && (d.title = t.toString()), n && this.get("bannerSkinsEnabled") && (d.bannerAccent = n), d.crestBorder = a || (o !== r.CREST_TYPES.RANKED ? s.CREST_ID_PRESTIGE : s.CREST_ID_CURRENT_RANK), d.prestigeCrestBorderLevel = i || (c > 0 ? l.PRESTIGE_LEVELS[c - 1] : 0), this._challengesDataBinding.post("/v1/update-player-preferences", d)
                },
                _saveRegalia() {
                    const e = this.get("selectedCrestType"),
                        t = this.get("selectedBannerType"),
                        n = this.get("selectedPrestigeCrest");
                    if (!e || !t) return;
                    const a = {
                        preferredCrestType: e,
                        preferredBannerType: t,
                        selectedPrestigeCrest: n
                    };
                    return this.get("api.regalia").put("/v2/current-summoner/regalia", a)
                },
                _handleKeyDown(e) {
                    "Escape" === e.key && (e.preventDefault(), this.saveAndExit())
                },
                _selectToken(e) {
                    if (null === e) return;
                    e < 0 && this.set("selectedToken", null), this.set("selectedTokenId", e);
                    null !== this.get("selectedTokenSlot") && this._assignToken(e)
                },
                _selectTokenSlot(e) {
                    if (null === e) return;
                    e < 0 ? this.set("selectedTokenSlot", null) : this.set("selectedTokenSlot", e);
                    const t = this.get("selectedTokens"),
                        n = this.get("selectedTokenId"),
                        s = this.get("selectedTokenSlot"),
                        i = t[s];
                    i && i.id !== n && this.set("selectedTokenId", i.id);
                    const r = t.find((e => {
                        if (e && e.id) return e.id === n
                    }));
                    n && !r && this._assignToken(n), null !== s && a.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-uikit-button-generic-click.ogg")
                },
                _assignToken(e) {
                    const t = this.get("selectedTokens"),
                        n = this.get("selectedTokenSlot"),
                        s = this._findChallengeById(e);
                    s && null !== n && (t[n] = s, this.set("selectedTokenId", t[n].id), a.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-summoner-icons-select.ogg")), this.set("selectedTokens", [...t])
                },
                _animateSelectIcon() {
                    const e = this.element.querySelector(".video-preview-icon");
                    this._playSelectionVideo(e)
                },
                _animateSelectBorder(e) {
                    const t = e === r.CREST_TYPES.RANKED ? ".video-preview-border-ranked" : ".video-preview-border",
                        n = this.element.querySelector(t);
                    this._playSelectionVideo(n)
                },
                _animateSelectTitle() {
                    const e = this.element.querySelector(".video-preview-title");
                    this._playSelectionVideo(e)
                },
                _animateSelectToken() {
                    const e = this.element.querySelector(".video-preview-token");
                    this._playSelectionVideo(e)
                },
                _animateSelectBanner(e) {
                    const t = this.element.querySelector(".video-preview-banner");
                    this._playSelectionVideo(t, e)
                },
                _playSelectionVideo(e, t = void 0) {
                    const n = this.get("animationsEnabled");
                    e && n ? ("Playing" === e.playbackState && e.preload(), a.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/challenges/sfx-identity-customizer-preview-selection.ogg"), e.play(null, null, t)) : t && t()
                },
                actions: {
                    savePreferences() {
                        this.saveAndExit()
                    },
                    closeWindow() {
                        this.saveAndExit()
                    },
                    selectToken(e) {
                        this._selectToken(e), this._animateSelectToken()
                    },
                    selectTokenSlot(e) {
                        this._selectTokenSlot(e)
                    },
                    setTokenLastVisitTime(e) {
                        this.set("tokenSettings", {
                            lastVisitTime: e
                        })
                    },
                    setIconsLastVisitTime(e) {
                        this.set("iconSettings", {
                            lastVisitTime: e
                        })
                    },
                    setTitlesLastVisitTime(e) {
                        this.set("titleSettings", {
                            lastVisitTime: e
                        })
                    },
                    selectTitle(e) {
                        this.set("selectedTitle", e), e && e.itemId >= 0 && this._animateSelectTitle()
                    },
                    selectTab(e) {
                        const t = this.get("tabs");
                        t && e >= 0 && e < t.length && this._selectTab(t[e])
                    },
                    selectIcon(e) {
                        a.logger.trace(`Selected icon with id ${e}`), this.set("selectedIconId", e), this._animateSelectIcon()
                    },
                    selectBorder(e) {
                        this.set("selectedCrestType", e.crestType), this.set("selectedPrestigeCrest", e.itemId), this.set("selectedPrestigeBorderLevel", e.level), this.set("selectedCrestId", e.crestId), this._animateSelectBorder(e.crestType)
                    },
                    selectBanner(e) {
                        this.set("selectedBannerType", e.bannerType), this.set("selectedBannerId", e.bannerId), this._animateSelectBanner()
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.PRESTIGE_LEVELS = void 0;
            t.PRESTIGE_LEVELS = [1, 30, 50, 75, 100, 125, 150, 175, 200, 225, 250, 275, 300, 325, 350, 375, 400, 425, 450, 475, 500]
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "ALVOYm8m",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\identity-customizer\\\\identity-customizer-root.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["block",["if"],[["get",["isVisible"]]],null,13]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","challenges-identity-customizer-error-container"],["flush-element"],["text","\\n              "],["append",["unknown",["tra","challenges_identity_customizer_save_error"]],false],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["append",["helper",["identity-customizer-tab-banners"],null,[["allBanners","lastSeasonHighestRank","selectedBannerType","selectedBannerId","bannerSkinsEnabled","selectBanner"],[["get",["allBanners"]],["get",["lastSeasonHighestRank"]],["get",["selectedBannerType"]],["get",["selectedBannerId"]],["get",["bannerSkinsEnabled"]],["helper",["action"],[["get",[null]],"selectBanner"],null]]]],false],["text","\\n            "]],"locals":[]},{"statements":[["block",["if"],[["get",["isBannersTabSelected"]]],null,1]],"locals":[]},{"statements":[["text","              "],["append",["helper",["identity-customizer-tab-borders"],null,[["highestRankedEntry","summonerLevel","selectedCrestType","selectedPrestigeCrest","selectBorder"],[["get",["highestRankedEntry"]],["get",["summonerLevel"]],["get",["selectedCrestType"]],["get",["selectedPrestigeCrest"]],["helper",["action"],[["get",[null]],"selectBorder"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isBordersTabSelected"]]],null,3,2]],"locals":[]},{"statements":[["text","              "],["append",["helper",["identity-customizer-tab-icons"],null,[["icons","selectedIconId","lastIconsVisitTime","selectIcon","isTencentRegion","setIconsLastVisitTime"],[["get",["icons"]],["get",["selectedIconId"]],["get",["lastIconsVisitTime"]],["helper",["action"],[["get",[null]],"selectIcon"],null],["get",["isTencentRegion"]],["helper",["action"],[["get",[null]],"setIconsLastVisitTime"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isIconsTabSelected"]]],null,5,4]],"locals":[]},{"statements":[["text","              "],["append",["helper",["identity-customizer-tab-titles"],null,[["ownedTitles","allTitles","challenges","selectedTitle","selectTitle","setTitlesLastVisitTime"],[["get",["ownedTitles"]],["get",["allTitles"]],["get",["challenges"]],["get",["selectedTitle"]],["helper",["action"],[["get",[null]],"selectTitle"],null],["helper",["action"],[["get",[null]],"setTitlesLastVisitTime"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isTitlesTabSelected"]]],null,7,6]],"locals":[]},{"statements":[["text","              "],["append",["helper",["identity-customizer-tab-tokens"],null,[["challenges","selectedTokens","selectedTokenId","previewTokens","summary","lastTokensVisitTime","selectToken","selectTokenSlot","setTokenLastVisitTime"],[["get",["challenges"]],["get",["selectedTokens"]],["get",["selectedTokenId"]],["get",["previewTokens"]],["get",["summary"]],["get",["lastTokensVisitTime"]],["helper",["action"],[["get",[null]],"selectToken"],null],["helper",["action"],[["get",[null]],"selectTokenSlot"],null],["helper",["action"],[["get",[null]],"setTokenLastVisitTime"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","                      "],["open-element","div",[]],["static-attr","class","tab-unread-pip"],["flush-element"],["append",["unknown",["call-to-action-pip"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                  "],["open-element","div",[]],["static-attr","class","customizer-nav-item-container"],["modifier",["action"],[["get",[null]],"selectTab",["get",["index"]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["tab","showUnreadPip"]]],null,10],["text","                    "],["open-element","lol-uikit-navigation-item",[]],["dynamic-attr","active",["concat",[["helper",["if"],[["get",["tab","selected"]],"true"],null]]]],["flush-element"],["text","\\n                      "],["append",["unknown",["tab","nameLoc"]],false],["text","\\n                    "],["close-element"],["text","\\n                  "],["close-element"],["text","\\n"]],"locals":["index","tab"]},{"statements":[["text","                  "],["open-element","div",[]],["static-attr","class","banner-token"],["flush-element"],["text","\\n                    "],["append",["helper",["challenge-banner-token"],null,[["challengeData","isLocalPlayer","isInteractable"],[["get",["token"]],true,false]]],false],["text","\\n                  "],["close-element"],["text","\\n"]],"locals":["token","index"]},{"statements":[["text","  "],["open-element","lol-uikit-full-page-backdrop",[]],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","backdrop-click"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"savePreferences"],null],null],["flush-element"],["close-element"],["text","\\n    "],["open-element","lol-uikit-dialog-frame",[]],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","challenges-identity-customizer-container"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","update-icon-close-btn"],["modifier",["action"],[["get",[null]],"closeWindow"]],["flush-element"],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","challenges-identity-customizer-contents"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenges-identity-customizer-left-container"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","challenges-identity-customizer-banner-container"],["flush-element"],["text","\\n              "],["open-element","lol-regalia-identity-customizer-element",[]],["dynamic-attr","summoner-id",["unknown",["localSummonerId"]],null],["dynamic-attr","profile-icon",["unknown",["selectedIconId"]],null],["dynamic-attr","crest-type",["unknown",["selectedCrestType"]],null],["dynamic-attr","banner-id",["unknown",["selectedBannerId"]],null],["dynamic-attr","banner-type",["unknown",["selectedBannerType"]],null],["dynamic-attr","banner-rank",["unknown",["lastSeasonHighestRank"]],null],["dynamic-attr","summoner-level",["unknown",["summonerLevel"]],null],["dynamic-attr","prestige-crest-id",["unknown",["selectedPrestigeCrest"]],null],["dynamic-attr","ranked-tier",["unknown",["selectedBorder","tier"]],null],["dynamic-attr","ranked-division",["unknown",["selectedBorder","division"]],null],["dynamic-attr","puuid",["unknown",["puuid"]],null],["flush-element"],["text","\\n              "],["close-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","banner-summoner-name"],["flush-element"],["text","\\n                "],["append",["helper",["player-name"],null,[["format","gameName","tagLine","summonerName","isCopyEnabled"],["tooltip",["get",["gameName"]],["get",["tagLine"]],["get",["summonerName"]],true]]],false],["text","\\n              "],["close-element"],["text","\\n              "],["open-element","div",[]],["dynamic-attr","class",["concat",["banner-title ",["helper",["if"],[["get",["isTitlesTabSelected"]],"title-tab-active"],null]]]],["flush-element"],["append",["unknown",["previewTitle"]],false],["close-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","banner-tokens-container"],["flush-element"],["text","\\n"],["block",["each"],[["get",["previewTokens"]]],null,12],["text","                "],["open-element","uikit-video",[]],["dynamic-attr","class",["concat",["video-preview-token slot-",["unknown",["selectedTokenSlot"]]]]],["static-attr","src","/fe/lol-static-assets/videos/challenges/customizer/preview-token.webm"],["flush-element"],["close-element"],["text","\\n              "],["close-element"],["text","\\n              "],["open-element","uikit-video",[]],["static-attr","class","video-preview-icon"],["static-attr","src","/fe/lol-static-assets/videos/challenges/customizer/preview-icon.webm"],["flush-element"],["close-element"],["text","\\n              "],["open-element","uikit-video",[]],["static-attr","class","video-preview-border"],["static-attr","src","/fe/lol-static-assets/videos/challenges/customizer/preview-border.webm"],["flush-element"],["close-element"],["text","\\n              "],["open-element","uikit-video",[]],["static-attr","class","video-preview-border-ranked"],["static-attr","src","/fe/lol-static-assets/videos/challenges/customizer/preview-border-ranked.webm"],["flush-element"],["close-element"],["text","\\n              "],["open-element","uikit-video",[]],["static-attr","class","video-preview-title"],["static-attr","src","/fe/lol-static-assets/videos/challenges/customizer/preview-title.webm"],["flush-element"],["close-element"],["text","\\n              "],["open-element","uikit-video",[]],["static-attr","class","video-preview-banner"],["static-attr","src","/fe/lol-static-assets/videos/challenges/customizer/preview-banner.webm"],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenges-identity-customizer-right-container"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","challenges-identity-customizer-title"],["flush-element"],["text","\\n              "],["append",["unknown",["tra","challenges_identity_customizer_title"]],false],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","challenges-identity-customizer-tabs"],["flush-element"],["text","\\n              "],["open-element","lol-uikit-navigation-bar",[]],["static-attr","type","nav-bar-secondary"],["static-attr","class","challenges-identity-customizer-tab"],["flush-element"],["text","\\n"],["block",["each"],[["helper",["-each-in"],[["get",["tabs"]]],null]],null,11],["text","              "],["close-element"],["text","\\n            "],["close-element"],["text","\\n"],["block",["if"],[["get",["isTokensTabSelected"]]],null,9,8],["text","          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","challenges-identity-customizer-footer-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["saveError"]]],null,0],["text","        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(496)) && a.__esModule ? a : {
                    default: a
                };
            n(497), e.exports = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["identity-customizer-empty-search-component"],
                actions: {
                    clearSearch() {
                        this.sendAction("clearSearch")
                    }
                }
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "T6YZXg/O",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\identity-customizer\\\\identity-customizer-empty-search.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","img",[]],["static-attr","class","identity-customizer-empty-poro"],["static-attr","src","/fe/lol-static-assets/images/icon-search-empty-poro.svg"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","identity-customizer-empty-text"],["flush-element"],["append",["unknown",["tra","identity_customizer_search_empty"]],false],["close-element"],["text","\\n"],["open-element","lol-uikit-flat-button",[]],["static-attr","class","identity-customizer-empty-search-btn"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"clearSearch"],null],null],["flush-element"],["text","\\n"],["append",["unknown",["tra","identity_customizer_search_clear"]],false],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(499);
            const s = "all",
                i = "set",
                r = "esports",
                l = "tier",
                o = "acquisitionDate",
                c = "mostRare";
            e.exports = a.Ember.Component.extend({
                layout: n(500),
                classNames: ["identity-customizer-tab-icons-component"],
                icons: a.Ember.A(),
                selectedIconId: null,
                riotclientService: a.Ember.inject.service("riotclient"),
                notificationsService: a.Ember.inject.service("shared-notifications"),
                settingsPreferences: a.Ember.inject.service("settings-preferences"),
                searchFilter: "",
                loadedOnce: !1,
                lastIconsVisitTime: null,
                groupBy: s,
                sortBy: c,
                canGroupByAll: !0,
                canGroupBySet: !0,
                canGroupByEsports: !0,
                canGroupByTier: !0,
                isGroupByAll: !0,
                isGroupBySet: !1,
                isGroupByEsports: !1,
                isGroupByTier: !1,
                shouldShowLegacyInfo: a.Ember.computed.not("isTencentRegion"),
                groupedSummonerIconsEmpty: a.Ember.computed.empty("groupedSummonerIcons"),
                emptySearch: a.Ember.computed.and("searchFilter", "groupedSummonerIconsEmpty"),
                hasUnreadIconNotification: a.Ember.computed.alias("notificationsService.hasUnreadIconNotification"),
                init() {
                    this._super(...arguments), this.get("riotclientService").getLocale().then((e => {
                        const t = e.replace("_", "-");
                        this.set("locale", t)
                    }))
                },
                willDestroy: function() {
                    this._super(...arguments), this.get("settingsPreferences").setIconsLastVisitTimeSetting(), this.sendAction("setIconsLastVisitTime", Date.now()), this.get("hasUnreadIconNotification") && this.get("notificationsService").acknowledgeAllIconNotifications()
                },
                itemSizes: a.Ember.computed("groupedSummonerIcons.[]", (function() {
                    const e = this.get("groupedSummonerIcons"),
                        t = [];
                    return e.forEach((e => {
                        e.isHeader ? t.push({
                            groupOrIcon: e,
                            width: 680,
                            height: 41
                        }) : t.push({
                            groupOrIcon: e,
                            width: 98,
                            height: 98
                        })
                    })), t
                })),
                filteredIcons: a.Ember.computed("icons.[]", "searchFilter", "locale", (function() {
                    const e = this.get("icons"),
                        t = this.get("searchFilter"),
                        n = this.get("locale");
                    if (!t || !n) return e;
                    const a = t.toLocaleLowerCase(n);
                    return e.filter((e => {
                        const t = e.title.toLocaleLowerCase(n),
                            s = e.desc.toLocaleLowerCase(n);
                        return t.includes(a) || s.includes(a)
                    }))
                })),
                groupedSummonerIcons: a.Ember.computed("filteredIcons.[]", "groupBy", "tra.ready", (function() {
                    const e = this.get("groupBy"),
                        t = this.get("filteredIcons");
                    if (!e || !t) return [];
                    let n = [];
                    switch (e) {
                        case s:
                            n = this._groupByAcquisition(t), this._sortGroupedIcons(n, c);
                            break;
                        case i:
                            n = this._groupBySet(t), this._sortGroupedIcons(n, c);
                            break;
                        case r:
                            n = this._groupByEsports(t), this._sortGroupedIcons(n, o);
                            break;
                        case l:
                            n = this._groupByTier(t), this._sortGroupedIcons(n, o);
                            break;
                        default:
                            return []
                    }
                    return this.set("loadedOnce", !0), this._flattenGroups(n)
                })),
                _sortGroupedIcons(e, t) {
                    e && e.forEach((e => {
                        this._sortIcons(e, t)
                    }))
                },
                _sortIcons(e, t) {
                    const n = [...e];
                    switch (t) {
                        case c:
                            n.sort(this._compareRarity.bind(this));
                            break;
                        case o:
                            n.sort(this._compareAcquisitionDate.bind(this))
                    }
                    return n
                },
                _flattenGroups(e) {
                    let t = [];
                    return e && e.forEach(((e, n) => {
                        if (0 === e.length) return;
                        const a = {
                            id: "header",
                            isHeader: !0,
                            groupName: n
                        };
                        t.push(a), t = t.concat(e)
                    })), t
                },
                _groupByEsports(e) {
                    return e = e.filter((e => e.set && e.set.hidden)), this._groupByAcquisition(e)
                },
                _groupBySet(e) {
                    const t = new Map;
                    return (e = this._sortIcons(e, o)).forEach((e => {
                        if (e.set && e.set.displayName && !e.set.hidden) {
                            const n = t.get(e.set.displayName);
                            n ? n.push(e) : t.set(e.set.displayName, [e])
                        }
                    })), t
                },
                _groupByTier(e) {
                    const t = new Map;
                    return t.set(this.get("tra.identity_customizer_grouping_tier_5"), []), t.set(this.get("tra.identity_customizer_grouping_tier_4"), []), t.set(this.get("tra.identity_customizer_grouping_tier_3"), []), t.set(this.get("tra.identity_customizer_grouping_tier_2"), []), t.set(this.get("tra.identity_customizer_grouping_tier_1"), []), t.set(this.get("tra.identity_customizer_grouping_tier_0"), []), e.forEach((e => {
                        const n = e.rarity || 0,
                            a = this.get(`tra.identity_customizer_grouping_tier_${n}`);
                        t.get(a).push(e)
                    })), t
                },
                _groupByAcquisition(e) {
                    const t = new Map,
                        n = [];
                    return (e = this._sortIcons(e, o)).forEach((e => {
                        if (!e.purchaseDate) return void n.push(e);
                        const a = new Date(e.purchaseDate).getFullYear(),
                            s = this.get("tra.formatString")("identity_customizer_acquired_year", {
                                year: a
                            });
                        t.has(s) ? t.get(s).push(e) : t.set(s, [e])
                    })), n.length > 0 && t.set(this.get("tra.identity_customizer_acquired_year_none"), n), t
                },
                _compareRarity(e, t) {
                    return e.rarity < t.rarity ? 1 : e.rarity > t.rarity ? -1 : this._compareAlphabeticalName(e, t)
                },
                _compareAcquisitionDate(e, t) {
                    const n = e.purchaseDate ? new Date(e.purchaseDate) : -1,
                        a = t.purchaseDate ? new Date(t.purchaseDate) : -1;
                    return n < a ? 1 : n > a ? -1 : this._compareAlphabeticalName(e, t)
                },
                _compareAlphabeticalName(e, t) {
                    const n = document.documentElement.lang ? document.documentElement.lang : "en";
                    return e.title.localeCompare(t.title, n, {
                        ignorePunctuation: !0
                    })
                },
                actions: {
                    clearSearch() {
                        this.set("searchFilter", "")
                    },
                    selectIcon(e) {
                        const t = "number" == typeof e.id;
                        e && t && e.id !== this.get("selectedIconId") && (this.set("selectedIconId", e.id), this.sendAction("selectIcon", e.id))
                    },
                    dropdownSelect(e) {
                        this.set("groupBy", e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "JIfHkWum",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\identity-customizer\\\\identity-customizer-tab-icons.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","identity-customizer-subheader"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","search-filter-container"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-input",[]],["flush-element"],["text","\\n      "],["append",["helper",["input"],null,[["type","maxlength","class","value","placeholder"],["search","50","search-filter-input",["get",["searchFilter"]],["get",["tra","challenges_search_placeholder"]]]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","lol-uikit-framed-dropdown",[]],["static-attr","class","icon-grouping-options"],["flush-element"],["text","\\n"],["block",["if"],[["get",["canGroupByAll"]]],null,8],["block",["if"],[["get",["canGroupBySet"]]],null,7],["block",["if"],[["get",["canGroupByEsports"]]],null,6],["block",["if"],[["get",["canGroupByTier"]]],null,5],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","identity-customizer-grid"],["flush-element"],["text","\\n"],["block",["if"],[["get",["emptySearch"]]],null,4,3],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["append",["helper",["identity-customizer-icon"],null,[["icon","selectedIconId","shouldShowLegacyInfo","lastIconsVisitTime","selectIcon"],[["get",["icon"]],["get",["selectedIconId"]],["get",["shouldShowLegacyInfo"]],["get",["lastIconsVisitTime"]],["helper",["action"],[["get",[null]],"selectIcon"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","identity-customizer-icon-header"],["flush-element"],["append",["unknown",["icon","groupName"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["icon","isHeader"]]],null,1,0]],"locals":["icon","index"]},{"statements":[["block",["ember-collection"],null,[["class","items","cell-layout"],["item-grid-scrollable",["get",["groupedSummonerIcons"]],["helper",["mixed-grid-layout"],[["get",["itemSizes"]]],null]]],2]],"locals":[]},{"statements":[["text","    "],["append",["helper",["identity-customizer-empty-search"],null,[["clearSearch"],[["helper",["action"],[["get",[null]],"clearSearch"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isGroupByTier"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"dropdownSelect","tier"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","identity_customizer_grouping_tier"]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isGroupByEsports"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"dropdownSelect","esports"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","identity_customizer_grouping_esports"]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isGroupBySet"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"dropdownSelect","set"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","identity_customizer_grouping_set"]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isGroupByAll"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"dropdownSelect","all"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","identity_customizer_grouping_all"]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(493);
            n(502);
            var i = n(114);
            const r = "ranked",
                l = "prestige";
            e.exports = a.Ember.Component.extend({
                layout: n(503),
                classNames: ["identity-customizer-tab-borders-component"],
                summonerLevel: null,
                highestRankedEntry: null,
                selectedBorder: null,
                selectedPrestigeCrest: null,
                selectedCrestType: null,
                riotclientService: a.Ember.inject.service("riotclient"),
                gameDataService: a.Ember.inject.service("game-data"),
                init() {
                    this._super(...arguments), this.get("riotclientService").getLocale().then((e => {
                        const t = e.replace("_", "-");
                        this.set("locale", t)
                    })), this.set("leagueNames", a.SharedComponentsApi.getApi_LeagueTierNames())
                },
                filteredBordersEmpty: a.Ember.computed.empty("filteredBorders"),
                emptySearch: a.Ember.computed.and("searchFilter", "filteredBordersEmpty"),
                prestigeLevel: a.Ember.computed("summonerLevel", (function() {
                    const e = this.get("summonerLevel") || 1;
                    return this._getPrestigeLevel(e)
                })),
                prestigeBorders: a.Ember.computed("prestigeLevel", "tra.ready", "selectedPrestigeCrest", "selectedCrestType", (function() {
                    const e = this.get("prestigeLevel"),
                        t = this.get("tra.formatString"),
                        n = this.get("selectedCrestType"),
                        a = this.get("selectedPrestigeCrest") || {};
                    if (!e || !n) return {};
                    const r = n === l;
                    return this.getEarnedPrestigeLevels(e).map((e => {
                        const n = this.get(`tra.prestige_${e}`),
                            o = t("identity_customizer_border_prestige_level", {
                                prestigeUnlockLevel: e
                            }),
                            c = `${l}-${e}`,
                            d = s.PRESTIGE_LEVELS.indexOf(e) + 1;
                        return {
                            crestId: i.CREST_ID_PRESTIGE,
                            id: c,
                            itemId: d,
                            title: n,
                            desc: o,
                            selected: r && a === d,
                            crestType: l,
                            isRanked: !1,
                            level: e
                        }
                    }))
                })),
                rankedBorder: a.Ember.computed("highestRankedEntry", "leagueNames", "selectedBorder", "selectedCrestType", (function() {
                    const e = this.get("highestRankedEntry"),
                        t = this.get("leagueNames"),
                        n = this.get("tra.formatString");
                    if (!t) return {};
                    let a, s, l = !1,
                        o = !1,
                        c = this.get("tra.identity_customizer_border_rank_title_unranked"),
                        d = this.get("tra.identity_customizer_border_rank_desc_unranked");
                    if (e) {
                        const i = e.queueType;
                        if (a = e.tier, s = e.division, l = a && "NONE" !== a, l && i) {
                            c = n("identity_customizer_border_rank_title", {
                                rankedTier: t.getTierName(a)
                            }), d = t.getRankedQueueName(i), o = this.get("selectedCrestType") === r
                        }
                    }
                    return {
                        crestId: i.CREST_ID_CURRENT_RANK,
                        id: r,
                        tier: a,
                        division: s,
                        title: c,
                        desc: d,
                        selected: o,
                        crestType: r,
                        isRanked: !0,
                        disabled: !l
                    }
                })),
                borders: a.Ember.computed("rankedBorder", "prestigeBorders", (function() {
                    let e = [];
                    const t = this.get("rankedBorder"),
                        n = this.get("prestigeBorders");
                    return t && n ? (e.push(t), e = e.concat(n), e) : e
                })),
                filteredBorders: a.Ember.computed("borders.[]", "searchFilter", "locale", (function() {
                    const e = this.get("searchFilter"),
                        t = this.get("borders"),
                        n = this.get("locale");
                    return e && n ? this._matchTitleAndDescription(t, e, n) : t
                })),
                _getBorderDataByLevel(e) {
                    if (e) return e.reduce(((e, t) => (e[t.itemId] = t, e)), {})
                },
                getEarnedPrestigeLevels(e) {
                    if (!e) return [];
                    const t = [];
                    for (let n = 0; n <= s.PRESTIGE_LEVELS.length - 1; n++) {
                        const a = s.PRESTIGE_LEVELS[n];
                        if (!(e >= a)) break;
                        t.push(a)
                    }
                    return t
                },
                _getPrestigeLevel(e) {
                    const t = s.PRESTIGE_LEVELS.length - 1;
                    for (let n = 0; n <= t; n++) {
                        if (n === t) return s.PRESTIGE_LEVELS[t];
                        const a = s.PRESTIGE_LEVELS[n],
                            i = s.PRESTIGE_LEVELS[n + 1];
                        if (e >= a && e < i) return a
                    }
                    return 1
                },
                _matchTitleAndDescription(e, t, n) {
                    const a = t.toLocaleLowerCase(n);
                    return e.filter((e => {
                        const t = e.title.toLocaleLowerCase(n),
                            s = e.desc.toLocaleLowerCase(n),
                            i = e.isRanked && "rank ranked".includes(a),
                            r = !e.isRanked && "prestige".includes(a);
                        return t.includes(a) || s.includes(a) || r || i
                    }))
                },
                actions: {
                    onBorderHover(e) {
                        e && !e.disabled && a.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-summoner-icons-grid-hover.ogg")
                    },
                    selectBorder(e) {
                        e && !e.selected && (e.disabled || (this.set("selectedBorder", e), this.set("selectedPrestigeCrest", e.itemId), this.sendAction("selectBorder", e), a.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-summoner-icons-select.ogg")))
                    },
                    clearSearch() {
                        this.set("searchFilter", "")
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "/YOKYmR2",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\identity-customizer\\\\identity-customizer-tab-borders.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","identity-customizer-subheader"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","search-filter-container"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-input",[]],["flush-element"],["text","\\n      "],["append",["helper",["input"],null,[["type","maxlength","class","value","placeholder"],["search","50","search-filter-input",["get",["searchFilter"]],["get",["tra","challenges_search_placeholder"]]]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","identity-customizer-grid"],["flush-element"],["text","\\n  "],["open-element","lol-uikit-scrollable",[]],["static-attr","overflow-masks","enabled"],["flush-element"],["text","\\n"],["block",["if"],[["get",["emptySearch"]]],null,6,5],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","              "],["open-element","lol-uikit-themed-level-ring-v2",[]],["dynamic-attr","level",["concat",[["unknown",["border","level"]]]]],["dynamic-attr","prestige-crest-id",["concat",[["unknown",["border","itemId"]]]]],["static-attr","is-identity-modal","true"],["static-attr","class","identity-customizer-border-icon prestige-border-icon"],["flush-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                "],["open-element","lol-regalia-emblem-element",[]],["static-attr","class","identity-customizer-border-icon"],["dynamic-attr","ranked-tier",["unknown",["border","tier"]],null],["flush-element"],["text","\\n                "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                "],["open-element","img",[]],["static-attr","class","identity-customizer-border-unranked"],["static-attr","src","/fe/lol-static-assets/images/border-unranked.png"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["border","disabled"]]],null,2,1]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["dynamic-attr","class",["concat",["identity-customizer-border ",["helper",["if"],[["get",["border","selected"]],"selected"],null]," ",["helper",["if"],[["get",["border","disabled"]],"border-disabled"],null]]]],["modifier",["action"],[["get",[null]],"selectBorder",["get",["border"]]]],["modifier",["action"],[["get",[null]],"onBorderHover",["get",["border"]]],[["on"],["mouseEnter"]]],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","identity-customizer-border-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["border","isRanked"]]],null,3,0],["text","            "],["open-element","div",[]],["static-attr","class","identity-customizer-border-title"],["flush-element"],["append",["unknown",["border","title"]],false],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","identity-customizer-border-desc"],["flush-element"],["append",["unknown",["border","desc"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":["border"]},{"statements":[["block",["each"],[["get",["filteredBorders"]]],null,4]],"locals":[]},{"statements":[["text","      "],["append",["helper",["identity-customizer-empty-search"],null,[["clearSearch"],[["helper",["action"],[["get",[null]],"clearSearch"],null]]]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(505);
            var s = n(114),
                i = n(506);
            e.exports = a.Ember.Component.extend({
                layout: n(507),
                classNames: ["identity-customizer-tab-banners-component"],
                allBanners: {},
                summonerLevel: null,
                lastSeasonHighestRank: null,
                selectedBannerId: s.BANNER_ID_PAST_RANK,
                selectedBannerType: null,
                bannerSkinsEnabled: !0,
                riotclientService: a.Ember.inject.service("riotclient"),
                gameDataService: a.Ember.inject.service("game-data"),
                isUnownedShown: !0,
                init() {
                    this._super(...arguments), this.get("riotclientService").getLocale().then((e => {
                        const t = e.replace("_", "-");
                        this.set("locale", t)
                    })), this.set("leagueTierNames", a.SharedComponentsApi.getApi_LeagueTierNames())
                },
                filteredBannersEmpty: a.Ember.computed.empty("filteredBanners"),
                emptySearch: a.Ember.computed.and("searchFilter", "filteredBannersEmpty"),
                defaultBanner: a.Ember.computed("tra.ready", "selectedBannerType", "selectedBannerId", "allBanners", (function() {
                    return {
                        bannerId: s.BANNER_ID_DEFAULT,
                        bannerType: i.BANNER_TYPES.BLANK,
                        title: this.get("tra.identity_customizer_banner_title_default"),
                        selected: this.get("selectedBannerType") === i.BANNER_TYPES.BLANK && !this.get("selectedBannerId") || this.get("selectedBannerId") === s.BANNER_ID_DEFAULT,
                        isRanked: !1,
                        disabled: !1,
                        isSelectable: !0
                    }
                })),
                pastRankBanner: a.Ember.computed("lastSeasonHighestRank", "leagueTierNames", "selectedBannerType", "selectedBannerId", "allBanners", (function() {
                    const e = this.get("leagueTierNames"),
                        t = this.get("lastSeasonHighestRank"),
                        n = this.get("tra.identity_customizer_banner_title_past_rank"),
                        a = t ? e ? e.getTierName(t) : "" : this.get("tra.identity_customizer_banner_title_past_rank_locked_desc");
                    return {
                        bannerId: s.BANNER_ID_PAST_RANK,
                        bannerType: i.BANNER_TYPES.PAST_RANK,
                        tier: t,
                        title: n,
                        description: a,
                        selected: this.get("selectedBannerType") === i.BANNER_TYPES.PAST_RANK && !this.get("selectedBannerId") || this.get("selectedBannerId") === s.BANNER_ID_PAST_RANK,
                        isRanked: !0,
                        disabled: !t,
                        isSelectable: !0
                    }
                })),
                eventBanners: a.Ember.computed("allBanners", "selectedBannerId", "isUnownedShown", "bannerSkinsEnabled", (function() {
                    const e = this.get("allBanners") || {},
                        t = [];
                    return Object.keys(e).filter((e => e !== s.BANNER_ID_DEFAULT && e !== s.BANNER_ID_PAST_RANK)).sort().forEach((n => {
                        const a = e[n];
                        if (!this.get("bannerSkinsEnabled") || !a.isOwned && !this.get("isUnownedShown")) return;
                        const r = a.items.find((e => e.isSelectable));
                        if (r && r.isSelectable && Number(r.id) > s.BANNER_ID_PAST_RANK) {
                            const e = {
                                bannerId: r.id,
                                bannerType: i.BANNER_TYPES.BLANK,
                                title: r.localizedName,
                                description: r.localizedDescription,
                                selected: this.get("selectedBannerId") === r.id,
                                isSelectable: a.isOwned
                            };
                            t.push(e)
                        }
                    })), t
                })),
                banners: a.Ember.computed("pastRankBanner", "defaultBanner", "eventBanners", (function() {
                    let e = [];
                    const t = this.get("pastRankBanner"),
                        n = this.get("defaultBanner"),
                        a = this.get("eventBanners");
                    return t && n ? (e.push(n), e = e.concat(t), e = e.concat(a), e) : e
                })),
                filteredBanners: a.Ember.computed("banners.[]", "searchFilter", "locale", (function() {
                    const e = this.get("searchFilter"),
                        t = this.get("banners"),
                        n = this.get("locale");
                    return e && n ? this._matchTitle(t, e, n) : t
                })),
                _matchTitle(e, t, n) {
                    const a = t.toLocaleLowerCase(n);
                    return e.filter((e => {
                        const t = e.title.toLocaleLowerCase(n),
                            s = e.isRanked && "rank ranked".includes(a),
                            i = !e.isRanked && "prestige".includes(a);
                        return t.includes(a) || i || s
                    }))
                },
                actions: {
                    onBannerHover(e) {
                        e && !e.disabled && a.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-summoner-icons-grid-hover.ogg")
                    },
                    selectBanner(e) {
                        e && !e.selected && e.isSelectable && (e.disabled || (this.sendAction("selectBanner", e), a.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-summoner-icons-select.ogg")))
                    },
                    clearSearch() {
                        this.set("searchFilter", "")
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BANNER_TYPES = void 0;
            const n = Object.freeze({
                BLANK: "blank",
                PAST_RANK: "lastSeasonHighestRank"
            });
            t.BANNER_TYPES = n
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "ilajsAJg",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\identity-customizer\\\\identity-customizer-tab-banners.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","identity-customizer-subheader"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","search-filter-container"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-input",[]],["flush-element"],["text","\\n      "],["append",["helper",["input"],null,[["type","maxlength","class","value","placeholder"],["search","50","search-filter-input",["get",["searchFilter"]],["get",["tra","challenges_search_placeholder"]]]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","filter-container"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-checkbox",[]],["static-attr","class","ownership-filter"],["flush-element"],["text","\\n      "],["append",["helper",["input"],null,[["slot","type","name","checked"],["input","checkbox","isUnowned",["get",["isUnownedShown"]]]]],false],["text","\\n      "],["open-element","label",[]],["static-attr","slot","label"],["static-attr","class","collection-checkbox-label"],["static-attr","for","isUnowned"],["flush-element"],["append",["unknown",["tra","challenges_identity_customizer_show_unowned"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","identity-customizer-grid"],["flush-element"],["text","\\n  "],["open-element","lol-uikit-scrollable",[]],["static-attr","overflow-masks","enabled"],["flush-element"],["text","\\n"],["block",["if"],[["get",["emptySearch"]]],null,7,6],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","              "],["open-element","div",[]],["static-attr","class","identity-customizer-banner-locked-container"],["flush-element"],["text","\\n                "],["open-element","img",[]],["static-attr","class","identity-customizer-banner-locked"],["static-attr","src","/fe/lol-static-assets/images/banner-skin-locked.svg"],["flush-element"],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["open-element","div",[]],["static-attr","class","identity-customizer-banner-wrapper"],["flush-element"],["text","\\n                  "],["open-element","lol-regalia-banner-v2-element",[]],["dynamic-attr","banner-id",["unknown",["banner","bannerId"]],null],["dynamic-attr","banner-type",["unknown",["banner","bannerType"]],null],["dynamic-attr","banner-rank",["unknown",["banner","tier"]],null],["static-attr","class","identity-customizer-banner-element"],["flush-element"],["text","\\n                  "],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                "],["open-element","div",[]],["static-attr","class","identity-customizer-banner-wrapper"],["flush-element"],["text","\\n                  "],["open-element","img",[]],["dynamic-attr","src",["unknown",["banner","assetPath"]],null],["static-attr","height","150px"],["static-attr","width","60px"],["flush-element"],["close-element"],["text","\\n                "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["banner","assetPath"]]],null,2,1]],"locals":[]},{"statements":[["text","              "],["open-element","div",[]],["static-attr","class","identity-customizer-banner-disabled-container"],["flush-element"],["text","\\n                "],["open-element","img",[]],["static-attr","class","identity-customizer-banner-disabled"],["static-attr","src","/fe/lol-static-assets/images/banner-skin-past-ranked-locked.svg"],["flush-element"],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["dynamic-attr","class",["concat",["identity-customizer-banner ",["helper",["if"],[["get",["banner","selected"]],"selected"],null]," ",["helper",["if"],[["get",["banner","disabled"]],"banner-disabled"],null]," ",["helper",["unless"],[["get",["banner","isSelectable"]],"unselectable"],null]]]],["modifier",["action"],[["get",[null]],"selectBanner",["get",["banner"]]]],["modifier",["action"],[["get",[null]],"onBannerHover",["get",["banner"]]],[["on"],["mouseEnter"]]],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","identity-customizer-banner-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["banner","disabled"]]],null,4,3],["block",["unless"],[["get",["banner","isSelectable"]]],null,0],["text","            "],["open-element","div",[]],["dynamic-attr","class",["concat",["identity-customizer-banner-title ",["helper",["if"],[["get",["banner","disabled"]],"locked"],null]]]],["flush-element"],["append",["unknown",["banner","title"]],false],["close-element"],["text","\\n            "],["open-element","div",[]],["dynamic-attr","class",["concat",["identity-customizer-banner-description ",["helper",["if"],[["get",["banner","disabled"]],"locked"],null]]]],["flush-element"],["append",["unknown",["banner","description"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":["banner"]},{"statements":[["block",["each"],[["get",["filteredBanners"]]],null,5]],"locals":[]},{"statements":[["text","      "],["append",["helper",["identity-customizer-empty-search"],null,[["clearSearch"],[["helper",["action"],[["get",[null]],"clearSearch"],null]]]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(509);
            var s = n(114),
                i = n(510),
                r = n(512);
            e.exports = a.Ember.Component.extend({
                layout: n(513),
                classNames: ["challenges-identity-customizer-tab-tokens-component"],
                summary: {},
                challenges: {},
                selectedTokens: [],
                selectedTokenId: null,
                selectedTokenSlot: null,
                previewTokens: [],
                searchFilter: "",
                lastTokensVisitTime: null,
                filterBy: "ALL",
                sortBy: s.CHALLENGE_TOKEN_SORT_TYPES.RARITY_ASC,
                filteredTokensIsEmpty: a.Ember.computed.empty("filteredChallenges"),
                emptySearch: a.Ember.computed.and("searchFilter", "filteredTokensIsEmpty"),
                settingsPreferences: a.Ember.inject.service("settings-preferences"),
                riotclientService: a.Ember.inject.service("riotclient"),
                init() {
                    this._super(...arguments), this.get("riotclientService").getLocale().then((e => {
                        const t = e.replace("_", "-");
                        this.set("locale", t)
                    }))
                },
                didInsertElement() {
                    this.send("selectTokenSlot", 0)
                },
                willDestroy() {
                    this._super(...arguments), this.get("settingsPreferences").setTokensLastVisitTimeSetting(), this.sendAction("setTokenLastVisitTime", Date.now()), this.send("selectTokenSlot", -1)
                },
                challengeFilterOptions: a.Ember.computed("tra.isReady", "summary", "summary.categoryProgress", (function() {
                    const e = this.get("summary.categoryProgress") || [],
                        t = [];
                    return s.SORTED_CHALLENGE_CATEGORIES.forEach((n => {
                        const a = e.find((e => e.category === n));
                        a && t.push({
                            locKey: this.get(`tra.challenge_category_${a.category}`),
                            sortKey: a.category
                        })
                    })), t
                })),
                selectedTokenIds: a.Ember.computed("selectedTokens.[]", (function() {
                    const e = this.get("selectedTokens") || [],
                        t = [];
                    return e.forEach((e => {
                        void 0 !== e && t.push(e.id)
                    })), t
                })),
                filteredChallenges: a.Ember.computed("challenges", "searchFilter", "locale", (function() {
                    const e = this.get("challenges"),
                        t = this.get("searchFilter");
                    let n = Object.values(e).filter((e => e.currentLevel !== s.CHALLENGE_LEVELS.NONE));
                    if (t) {
                        const e = this.get("locale");
                        n = this._matchNameAndDescription(n, t, e)
                    }
                    return n
                })),
                groupedTokens: a.Ember.computed("filteredChallenges.[]", "filterBy", "sortBy", "searchFilter", (function() {
                    const e = this.get("filterBy"),
                        t = this.get("sortBy"),
                        n = this.get("filteredChallenges");
                    if (!e || !n) return [];
                    let a = [];
                    switch (a = "ALL" === e ? n : n.filter((t => t.category === s.CHALLENGE_CATEGORIES[e])), t) {
                        case s.CHALLENGE_TOKEN_SORT_TYPES.RARITY_DESC:
                            return a = (0, r.groupByRarity)(a.sort(i.compareByRarity)), this._flattenGroups(a, s.CHALLENGE_TOKEN_SORT_TYPES.RARITY_DESC);
                        case s.CHALLENGE_TOKEN_SORT_TYPES.RARITY_ASC:
                            return a = (0, r.groupByRarity)(a.sort(i.compareByRarityAsc)), this._flattenGroups(a, s.CHALLENGE_TOKEN_SORT_TYPES.RARITY_ASC);
                        case s.CHALLENGE_TOKEN_SORT_TYPES.TIER_DESC:
                            return a = (0, r.groupByLevel)(a.sort(i.compareByLevel)), this._flattenGroups(a, s.CHALLENGE_TOKEN_SORT_TYPES.TIER_DESC);
                        case s.CHALLENGE_TOKEN_SORT_TYPES.TIER_ASC:
                            return a = (0, r.groupByLevel)(a.sort(i.compareByLevelAsc)), this._flattenGroups(a, s.CHALLENGE_TOKEN_SORT_TYPES.TIER_ASC);
                        case s.CHALLENGE_TOKEN_SORT_TYPES.TIME_EARNED_DESC:
                            return a = (0, r.groupByYearAcquired)(a.sort(i.compareByTimeAcquired)), this._flattenGroups(a, s.CHALLENGE_TOKEN_SORT_TYPES.TIME_EARNED_DESC);
                        case s.CHALLENGE_TOKEN_SORT_TYPES.TIME_EARNED_ASC:
                            return a = (0, r.groupByYearAcquired)(a.sort(i.compareByTimeAcquiredAsc)), this._flattenGroups(a, s.CHALLENGE_TOKEN_SORT_TYPES.TIME_EARNED_ASC)
                    }
                    return this._flattenGroups(a, s.CHALLENGE_TOKEN_SORT_TYPES.TIER_DESC)
                })),
                _flattenGroups(e, t) {
                    let n = [];
                    return e && e.forEach(((e, a) => {
                        if (!e.length) return;
                        let i = a;
                        switch (t) {
                            case s.CHALLENGE_TOKEN_SORT_TYPES.RARITY_ASC:
                            case s.CHALLENGE_TOKEN_SORT_TYPES.RARITY_DESC:
                                i = a === s.CHALLENGE_SORT_RARITY_OTHER_KEY ? this.get("tra.challenges_progress_summary_other_percentile") : this.get("tra").formatString("challenges_progress_summary_top_percentile", {
                                    percentile: a
                                });
                                break;
                            case s.CHALLENGE_TOKEN_SORT_TYPES.TIER_DESC:
                            case s.CHALLENGE_TOKEN_SORT_TYPES.TIER_ASC:
                                i = this.get(`tra.challenge_level_${a.toLowerCase()}`);
                                break;
                            case s.CHALLENGE_TOKEN_SORT_TYPES.TIME_EARNED_DESC:
                            case s.CHALLENGE_TOKEN_SORT_TYPES.TIME_EARNED_ASC:
                                i = this.get("tra").formatString("challenge_group_title_year", {
                                    year: a
                                })
                        }
                        const r = {
                            id: "header",
                            isHeader: !0,
                            groupName: i
                        };
                        n.push(r), n = n.concat(e)
                    })), n
                },
                _matchNameAndDescription(e, t, n) {
                    const a = t.toLocaleLowerCase(n);
                    return e.filter((e => {
                        const t = e.name.toLocaleLowerCase(n),
                            s = e.description.toLocaleLowerCase(n);
                        return t.includes(a) || s.includes(a)
                    }))
                },
                actions: {
                    selectToken(e) {
                        this.sendAction("selectToken", e)
                    },
                    selectTokenSlot(e) {
                        this.sendAction("selectTokenSlot", e)
                    },
                    sortDropdownSelect(e) {
                        this.set("sortBy", e)
                    },
                    filterDropdownSelect(e) {
                        this.set("filterBy", e)
                    },
                    clearSearch() {
                        this.set("searchFilter", "")
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.compareByCapstone = l, t.compareByCapstoneTier = r, t.compareByChallengeId = i, t.compareByChallengeTitleLevel = f, t.compareByCompletion = c, t.compareByLevel = d, t.compareByLevelAsc = u, t.compareByRarity = function(e, t) {
                if (!e.percentile) return -1;
                if (!t.percentile) return 1;
                if (e.percentile < t.percentile) return 1;
                if (e.percentile > t.percentile) return -1;
                return d(e, t)
            }, t.compareByRarityAsc = p, t.compareBySource = o, t.compareByTimeAcquired = m, t.compareByTimeAcquiredAsc = function(e, t) {
                if (e.currentLevelAchievedTime < t.currentLevelAchievedTime) return -1;
                if (e.currentLevelAchievedTime > t.currentLevelAchievedTime) return 1;
                return d(e, t)
            }, t.compareByTitleChallengeCompletion = b, t.compareByTitleChallengeId = v, t.compareByTitleName = g, t.compareByTitleOwned = E, t.compareByTitleRarityAsc = y, t.compareByTitleSystem = _, t.compareByTitleTimeAcquired = A, t.getCurrentTitleChallengeCompletionPercent = C, t.sortChallenges = function(e, t) {
                if (!t || !e) return e;
                switch (t) {
                    case a.CHALLENGE_SORT_TYPES.RARITY:
                        e.sort(p);
                        break;
                    case a.CHALLENGE_SORT_TYPES.LEVEL:
                        e.sort(u);
                        break;
                    case a.CHALLENGE_SORT_TYPES.ACQUIRED:
                        e.sort(m);
                        break;
                    case a.CHALLENGE_SORT_TYPES.CAPSTONE:
                        e.sort(r);
                        break;
                    default:
                        e.sort(i)
                }
                return e
            }, t.sortTitles = function(e, t) {
                if (!t || !e) return e;
                switch (t) {
                    case a.CHALLENGE_TITLE_SORT_TYPES.RARITY:
                        e.sort(E);
                        break;
                    case a.CHALLENGE_TITLE_SORT_TYPES.LEVEL:
                        e.sort(f);
                        break;
                    case a.CHALLENGE_TITLE_SORT_TYPES.ACQUIRED:
                        e.sort(A);
                        break;
                    case a.CHALLENGE_TITLE_SORT_TYPES.ALPHABETICAL:
                        e.sort(g);
                        break;
                    case a.CHALLENGE_TITLE_SORT_TYPES.SYSTEM:
                        e.sort(_);
                        break;
                    default:
                        e.sort(v)
                }
                return e
            };
            var a = n(114),
                s = n(511);

            function i(e, t) {
                return e.id - t.id
            }

            function r(e, t) {
                return (0, s.hasCategoryParent)(e) && !(0, s.hasCategoryParent)(t) ? -1 : !(0, s.hasCategoryParent)(e) && (0, s.hasCategoryParent)(t) ? 1 : l(e, t)
            }

            function l(e, t) {
                return e.capstoneGroupId > t.capstoneGroupId || e.isRetired && !t.isRetired ? 1 : e.capstoneGroupId < t.capstoneGroupId || !e.isRetired && t.isRetired ? -1 : o(e, t)
            }

            function o(e, t) {
                return e.isCapstone && !t.isCapstone ? -1 : !e.isCapstone && t.isCapstone ? 1 : d(e, t)
            }

            function c(e, t) {
                const n = h(e),
                    a = h(t);
                return n < a ? 1 : n > a ? -1 : i(e, t)
            }

            function d(e, t) {
                return a.CHALLENGE_LEVEL_TO_ORDINAL[e.currentLevel] < a.CHALLENGE_LEVEL_TO_ORDINAL[t.currentLevel] ? -1 : a.CHALLENGE_LEVEL_TO_ORDINAL[e.currentLevel] > a.CHALLENGE_LEVEL_TO_ORDINAL[t.currentLevel] ? 1 : c(e, t)
            }

            function u(e, t) {
                return a.CHALLENGE_LEVEL_TO_ORDINAL[e.currentLevel] < a.CHALLENGE_LEVEL_TO_ORDINAL[t.currentLevel] ? 1 : a.CHALLENGE_LEVEL_TO_ORDINAL[e.currentLevel] > a.CHALLENGE_LEVEL_TO_ORDINAL[t.currentLevel] ? -1 : c(e, t)
            }

            function m(e, t) {
                return e.currentLevelAchievedTime < t.currentLevelAchievedTime ? 1 : e.currentLevelAchievedTime > t.currentLevelAchievedTime ? -1 : d(e, t)
            }

            function p(e, t) {
                return e.percentile ? t.percentile ? e.percentile < t.percentile ? -1 : e.percentile > t.percentile ? 1 : d(e, t) : -1 : 1
            }

            function h(e) {
                const t = Math.max(e.currentValue - e.currentThreshold, 0),
                    n = Math.max(e.nextThreshold - e.currentThreshold, 0);
                return n ? t / n : 0
            }

            function g(e, t) {
                return e.name < t.name ? -1 : 1
            }

            function f(e, t) {
                return e.challengeTitleData && t.challengeTitleData ? a.CHALLENGE_LEVEL_TO_ORDINAL[e.challengeTitleData.level] < a.CHALLENGE_LEVEL_TO_ORDINAL[t.challengeTitleData.level] ? 1 : a.CHALLENGE_LEVEL_TO_ORDINAL[e.challengeTitleData.level] > a.CHALLENGE_LEVEL_TO_ORDINAL[t.challengeTitleData.level] ? -1 : b(e, t) : e.challengeTitleData && !t.challengeTitleData ? -1 : 1
            }

            function _(e, t) {
                return e.titleAcquisitionType < t.titleAcquisitionType ? -1 : 1
            }

            function A(e, t) {
                return e.purchaseDate && !e.challengeData ? -1 : t.purchaseDate && !t.challengeData ? 1 : e.purchaseDate ? t.purchaseDate ? e.challengeData.currentLevelAchievedTime < t.challengeData.currentLevelAchievedTime ? 1 : e.challengeData.currentLevelAchievedTime > t.challengeData.currentLevelAchievedTime ? -1 : f(e, t) : -1 : 1
            }

            function b(e, t) {
                const n = C(e),
                    a = C(t);
                return n < a ? 1 : n > a ? -1 : v(e, t)
            }

            function v(e, t) {
                return e.challengeId - t.challengeId
            }

            function E(e, t) {
                return e.purchaseDate && !e.challengeData ? -1 : t.purchaseDate && !t.challengeData ? 1 : e.purchaseDate ? t.purchaseDate ? e.purchaseDate < t.purchaseDate && e.challengeData.percentile < t.challengeData.percentile ? -1 : e.purchaseDate > t.purchaseDate && e.challengeData.percentile > t.challengeData.percentile ? 1 : y(e, t) : -1 : 1
            }

            function y(e, t) {
                return !e.challengeData || e.challengeData && !e.challengeData.percentile ? 1 : !t.challengeData || t.challengeData && !t.challengeData.percentile || e.challengeData.percentile < t.challengeData.percentile ? -1 : e.challengeData.percentile > t.challengeData.percentile ? 1 : f(e, t)
            }

            function C(e) {
                if (!e.challengeData) return 0;
                const t = Math.max(e.challengeData.currentValue - e.challengeData.currentThreshold, 0),
                    n = Math.max(e.challengeData.nextThreshold - e.challengeData.currentThreshold, 0);
                return n ? t / n : 0
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.calculateRetiredStatus = function(e) {
                return e.retireTimestamp && e.retireTimestamp < Date.now()
            }, t.getChallengeIcon = function(e) {
                if (!e || !e.currentLevel) return "";
                const t = e.currentLevel,
                    n = e.nextLevel,
                    s = e.levelToIconPath || {},
                    i = (t !== a.CHALLENGE_LEVELS.NONE ? t : n) || a.CHALLENGE_LEVELS.IRON;
                return s[i] || ""
            }, t.hasCapstoneChildren = function(e) {
                return e && a.CHALLENGE_CATEGORY_IDS_LIST.includes(e.capstoneGroupId)
            }, t.hasCategoryParent = function(e) {
                return e && a.CHALLENGE_CATEGORY_IDS_LIST.includes(e.parentId)
            };
            var a = n(114)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.groupByCapstone = function(e) {
                return i(e, (e => {
                    let t = e.capstoneGroupId;
                    return e.retireTimestamp && e.retireTimestamp < s && (t += a.CHALLENGE_SORTING_RETIRED_GROUP_DELIMITER), t
                }))
            }, t.groupByLevel = function(e) {
                return i(e, (e => e.currentLevel))
            }, t.groupByRarity = function(e) {
                return i(e, (e => {
                    if (e.percentile) {
                        const t = e.percentile;
                        return t >= 0 && t <= 1 ? 1 : t > 1 && t <= 5 ? 5 : t > 5 && t <= 10 ? 10 : t > 10 && t <= 25 ? 25 : t > 25 && t <= 50 ? 50 : a.CHALLENGE_SORT_RARITY_OTHER_KEY
                    }
                    return a.CHALLENGE_SORT_RARITY_OTHER_KEY
                }))
            }, t.groupByYearAcquired = function(e) {
                return i(e, (e => e.currentLevelAchievedTime ? new Date(e.currentLevelAchievedTime).getFullYear() : (new Date).getFullYear()))
            }, t.groupTitlesByLevel = function(e) {
                return i(e, (e => e.challengeData ? e.challengeTitleData.level : a.CHALLENGE_LEVELS.NONE))
            }, t.groupTitlesByRarity = function(e) {
                return i(e, (e => {
                    if (!e.challengeData) return a.CHALLENGE_SORT_RARITY_OTHER_KEY;
                    const t = e.challengeData.percentile;
                    return e.isOwned ? t > 0 && t <= 1 ? 1 : t > 1 && t <= 5 ? 5 : t > 5 && t <= 10 ? 10 : t > 10 && t <= 25 ? 25 : t > 25 && t <= 50 ? 50 : a.CHALLENGE_SORT_RARITY_OTHER_KEY : a.CHALLENGE_SORT_RARITY_TITLE_UNOWNED_KEY
                }))
            }, t.groupTitlesBySystem = function(e) {
                return i(e, (e => e.titleAcquisitionType))
            }, t.groupTitlesByYearAcquired = function(e) {
                return i(e, (e => {
                    if (!e.challengeData && e.purchaseDate) return new Date(e.purchaseDate).getFullYear();
                    if (!e.isOwned) return a.CHALLENGE_SORT_RARITY_TITLE_UNOWNED_KEY;
                    if (e.challengeData.currentLevelAchievedTime) {
                        const t = e.challengeData.currentLevelAchievedTime;
                        return new Date(t).getFullYear()
                    }
                    return (new Date).getFullYear()
                }))
            };
            var a = n(114);
            const s = Date.now();

            function i(e, t) {
                const n = new Map;
                return e.forEach((e => {
                    const a = t(e);
                    n.has(a) ? n.get(a).push(e) : n.set(a, [e])
                })), n
            }
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "VlBUK60w",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\identity-customizer\\\\identity-customizer-tab-tokens.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","challenges-identity-customizer-subheader"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","challenges-identity-customizer-mini-tokens-container"],["flush-element"],["text","\\n"],["block",["each"],[["get",["previewTokens"]]],null,6],["text","  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","filter-divider"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","token-filter-header"],["flush-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","search-filter-container"],["flush-element"],["text","\\n      "],["open-element","lol-uikit-flat-input",[]],["flush-element"],["text","\\n        "],["append",["helper",["input"],null,[["type","maxlength","class","value","placeholder"],["search","50","search-filter-input",["get",["searchFilter"]],["get",["tra","challenges_search_placeholder"]]]]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","lol-uikit-framed-dropdown",[]],["static-attr","class","token-grouping-options"],["flush-element"],["text","\\n      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortedByRarityAsc"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"sortDropdownSelect","rarity_asc"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","challenges_filter_sort_option_rarity_asc"]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortedByRarityDesc"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"sortDropdownSelect","rarity_desc"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","challenges_filter_sort_option_rarity_desc"]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortedByTierAsc"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"sortDropdownSelect","tier_asc"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","challenges_filter_sort_option_level_asc"]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortedByTierDesc"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"sortDropdownSelect","tier_desc"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","challenges_filter_sort_option_level_desc"]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortedByAcquiredAsc"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"sortDropdownSelect","acquired_asc"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","challenges_filter_sort_option_acquired_asc"]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortedByAcquiredDesc"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"sortDropdownSelect","acquired_desc"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","challenges_filter_sort_option_acquired_desc"]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","lol-uikit-framed-dropdown",[]],["static-attr","class","token-grouping-options"],["flush-element"],["text","\\n      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isGroupByAll"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"filterDropdownSelect","ALL"],null],null],["flush-element"],["text","\\n          "],["append",["unknown",["tra","challenge_category_ALL"]],false],["text","\\n      "],["close-element"],["text","\\n"],["block",["each"],[["get",["challengeFilterOptions"]]],null,5],["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isGroupByAll"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"filterDropdownSelect","LEGACY"],null],null],["flush-element"],["text","\\n          "],["append",["unknown",["tra","challenge_category_LEGACY"]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","challenges-identity-customizer-grid"],["flush-element"],["text","\\n"],["block",["if"],[["get",["emptySearch"]]],null,4,3],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","challenge-identity-customizer-token-container"],["dynamic-attr","id",["concat",["token-id-",["unknown",["token","id"]]]]],["flush-element"],["text","\\n          "],["append",["helper",["identity-customizer-token"],null,[["challengeData","selectedTokenId","selectedTokenIds","isTooltipEnabled","isSelectable","lastTokensVisitTime","onClick"],[["get",["token"]],["get",["selectedTokenId"]],["get",["selectedTokenIds"]],true,true,["get",["lastTokensVisitTime"]],["helper",["action"],[["get",[null]],"selectToken"],null]]]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","identity-customizer-token-header"],["flush-element"],["append",["unknown",["token","groupName"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["token","isHeader"]]],null,1,0]],"locals":["token"]},{"statements":[["text","    "],["open-element","lol-uikit-scrollable",[]],["static-attr","overflow-masks","enabled"],["flush-element"],["text","\\n"],["block",["each"],[["get",["groupedTokens"]]],null,2],["text","  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["append",["helper",["identity-customizer-empty-search"],null,[["clearSearch"],[["helper",["action"],[["get",[null]],"clearSearch"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isGroupByAll"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"filterDropdownSelect",["get",["option","sortKey"]]],null],null],["flush-element"],["text","\\n          "],["append",["unknown",["option","locKey"]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":["option"]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","mini-token"],["static-attr","onclick",""],["modifier",["action"],[["get",[null]],"selectTokenSlot",["get",["slotIndex"]]]],["flush-element"],["text","\\n          "],["append",["helper",["challenge-banner-token"],null,[["challengeData","isLocalPlayer"],[["get",["token"]],true]]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":["token","slotIndex"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(114),
                i = n(486),
                r = n(512),
                l = n(510);
            n(515), e.exports = a.Ember.Component.extend({
                layout: n(516),
                classNames: ["challenges-identity-customizer-tab-titles-component"],
                ownedTitles: [],
                allTitles: {},
                challenges: {},
                selectedTitle: {},
                riotclientService: a.Ember.inject.service("riotclient"),
                settingsPreferences: a.Ember.inject.service("settings-preferences"),
                notificationsService: a.Ember.inject.service("shared-notifications"),
                lastVisitTime: a.Ember.computed.alias("titleSettings.lastVisitTime"),
                hasUnreadTitleNotification: a.Ember.computed.alias("notificationsService.hasUnreadTitleNotification"),
                isUnownedShown: !0,
                isTitleFilterEnabled: a.Ember.computed.readOnly("settingsPreferences.isTitleFilterEnabled"),
                init() {
                    this._super(...arguments), this.get("riotclientService").getLocale().then((e => {
                        const t = e.replace("_", "-");
                        this.set("locale", t)
                    }))
                },
                willDestroy() {
                    this._super(...arguments), this.get("settingsPreferences").setTitlesLastVisitTimeSetting(), this.sendAction("setTitlesLastVisitTime", Date.now()), this.get("hasUnreadTitleNotification") && this.get("notificationsService").acknowledgeAllTitleNotifications()
                },
                didInsertElement: function() {
                    this._super(...arguments), this.get("settingsPreferences").getCustomizerTitlesAccountSettings().then((e => {
                        e && e.data && this.set("titleSettings", e.data)
                    }))
                },
                selectedFilterOption: i.PLAYER_TITLE_FILTER_TYPES.ALL,
                filterOptions: a.Ember.computed("selectedFilterOption", (function() {
                    const e = this.get("selectedFilterOption"),
                        t = [];
                    return Object.keys(i.PLAYER_TITLE_FILTER_TYPES).forEach((n => {
                        const a = i.PLAYER_TITLE_FILTER_TYPES[n];
                        t.push({
                            name: this.get(`tra.player_title_filter_type_option_${a.toLowerCase()}`),
                            value: a,
                            isSelected: e === a
                        })
                    })), t
                })),
                selectedSortOption: s.CHALLENGE_TITLE_SORT_TYPES.RARITY,
                sortOptions: a.Ember.computed("selectedSortOption", (function() {
                    const e = this.get("selectedSortOption"),
                        t = this.get("isTitleFilterEnabled"),
                        n = [];
                    return Object.keys(s.CHALLENGE_TITLE_SORT_TYPES).forEach((a => {
                        if (!t && a === s.CHALLENGE_TITLE_SORT_TYPES.SYSTEM) return;
                        const i = s.CHALLENGE_TITLE_SORT_TYPES[a];
                        n.push({
                            name: this.get(`tra.challenges_filter_sort_option_${i.toLowerCase()}`),
                            value: i,
                            isSelected: e === i
                        })
                    })), n
                })),
                itemSizes: a.Ember.computed("filteredTitles", (function() {
                    const e = this.get("filteredTitles") || {},
                        t = [];
                    return e.forEach((e => {
                        e.isHeader ? t.push({
                            width: 550,
                            height: 34
                        }) : t.push({
                            width: 228,
                            height: 111
                        })
                    })), t
                })),
                filteredTitles: a.Ember.computed("allTitles", "searchFilter", "isUnownedShown", "locale", "selectedSortOption", "selectedFilterOption", (function() {
                    if (!this.get("allTitles") || !this.get("challenges")) return [];
                    const e = this.get("locale"),
                        t = this.get("selectedSortOption"),
                        n = this.get("selectedFilterOption");
                    let a = this._getAllTitlesWithOwnershipData();
                    a = a.filter((e => e.challengeTitleData ? e.challengeData || e.challengeTitleData.challengeId === s.DEFAULT_TITLE_CHALLENGE_ID : e.titleAcquisitionName || e.titleRequirementDescription)), n !== i.PLAYER_TITLE_FILTER_TYPES.ALL && (a = a.filter((e => e.titleAcquisitionType === n))), this.get("isUnownedShown") || (a = a.filter((e => e.isOwned)));
                    const r = this.get("searchFilter");
                    r && (a = this._matchTitleName(a, r, e));
                    const l = this._groupAndSort(a, t),
                        o = {
                            itemId: -1,
                            name: this.get("tra.challenges_identity_customizer_no_title"),
                            isOwned: !0
                        };
                    return r && e && !this._matchTitleName([o], r, e) || l.unshift(o), l
                })),
                _getAllTitlesWithOwnershipData() {
                    const e = Object.assign({}, this.get("allTitles")),
                        t = this.get("challenges") || {};
                    Object.values(e).forEach((e => {
                        e.challengeTitleData && this._mapTitleToChallengeData(e, t)
                    }));
                    return (this.get("ownedTitles") || []).forEach((t => {
                        const n = e[t.contentId];
                        n && (n.isOwned = !0)
                    })), Object.values(e)
                },
                _mapTitleToChallengeData(e, t) {
                    const n = e.challengeTitleData;
                    e.challengeTitleData && (e.challengeData = t[n.challengeId])
                },
                _matchTitleName(e, t, n) {
                    const a = t.toLocaleLowerCase(n);
                    return e.filter((e => e.name.toLocaleLowerCase(n).includes(a)))
                },
                _groupAndSort(e, t) {
                    const n = (0, l.sortTitles)(e, t);
                    return t === s.CHALLENGE_TITLE_SORT_TYPES.ALPHABETICAL ? n : t === s.CHALLENGE_TITLE_SORT_TYPES.ACQUIRED ? this._groupAndSortAcquired(n) : t === s.CHALLENGE_TITLE_SORT_TYPES.LEVEL ? this._groupAndSortLevel(n) : t === s.CHALLENGE_TITLE_SORT_TYPES.RARITY ? this._groupAndSortRarity(n) : t === s.CHALLENGE_TITLE_SORT_TYPES.SYSTEM ? this._groupAndSortSystem(n) : n
                },
                _groupAndSortAcquired(e) {
                    const t = (0, r.groupTitlesByYearAcquired)(e);
                    return this._convertGroupTitles(t, s.CHALLENGE_TITLE_SORT_TYPES.ACQUIRED)
                },
                _groupAndSortLevel(e) {
                    const t = (0, r.groupTitlesByLevel)(e);
                    return this._convertGroupTitles(t, s.CHALLENGE_TITLE_SORT_TYPES.LEVEL)
                },
                _groupAndSortRarity(e) {
                    const t = (0, r.groupTitlesByRarity)(e);
                    return this._convertGroupTitles(t, s.CHALLENGE_TITLE_SORT_TYPES.RARITY)
                },
                _groupAndSortSystem(e) {
                    const t = (0, r.groupTitlesBySystem)(e);
                    return this._convertGroupTitles(t, s.CHALLENGE_TITLE_SORT_TYPES.SYSTEM)
                },
                _convertGroupTitles(e, t) {
                    const n = [];
                    return e.forEach(((e, a) => {
                        a && n.push({
                            isHeader: !0,
                            ...this._getGroupTitle(a, t)
                        }), e.forEach((e => {
                            n.push(e)
                        }))
                    })), n
                },
                _getGroupTitle(e, t) {
                    if (!t) return {
                        name: e
                    };
                    const n = {};
                    switch (t) {
                        case s.CHALLENGE_TITLE_SORT_TYPES.RARITY:
                            e === s.CHALLENGE_SORT_RARITY_TITLE_UNOWNED_KEY ? n.name = this.get("tra.challenges_progress_summary_unowned_percentile") : e === s.CHALLENGE_SORT_RARITY_OTHER_KEY ? n.name = this.get("tra.challenges_progress_summary_other_percentile") : n.name = this.get("tra").formatString("challenges_progress_summary_top_percentile", {
                                percentile: e
                            });
                            break;
                        case s.CHALLENGE_TITLE_SORT_TYPES.LEVEL:
                            n.name = this.get(`tra.challenge_level_${e.toLowerCase()}`);
                            break;
                        case s.CHALLENGE_TITLE_SORT_TYPES.SYSTEM:
                            n.name = this.get(`tra.challenges_filter_type_option_${e.toLowerCase()}`);
                            break;
                        case s.CHALLENGE_TITLE_SORT_TYPES.ACQUIRED:
                            e === s.CHALLENGE_SORT_RARITY_TITLE_UNOWNED_KEY ? n.name = this.get("tra.challenges_progress_summary_unowned_percentile") : n.name = this.get("tra").formatString("challenge_group_title_year", {
                                year: e
                            });
                            break;
                        default:
                            return {
                                name: e
                            }
                    }
                    return n
                },
                actions: {
                    selectTitle(e) {
                        this.sendAction("selectTitle", e)
                    },
                    setSortOption(e) {
                        this.set("selectedSortOption", e), a.Telemetry.sendEvent("challenges-title-sort", e)
                    },
                    setFilterOption(e) {
                        this.set("selectedFilterOption", e), a.Telemetry.sendEvent("challenges-title-filter", e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "ueRb9xhX",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\identity-customizer\\\\identity-customizer-tab-titles.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","challenges-identity-customizer-subheader"],["flush-element"],["text","\\n  "],["open-element","lol-uikit-flat-input",[]],["flush-element"],["text","\\n    "],["append",["helper",["input"],null,[["type","maxlength","class","value","placeholder"],["search","50","search-filter-input",["get",["searchFilter"]],["get",["tra","challenges_search_placeholder"]]]]],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","filter-container"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-checkbox",[]],["static-attr","class","ownership-filter"],["flush-element"],["text","\\n      "],["append",["helper",["input"],null,[["slot","type","name","checked"],["input","checkbox","isUnowned",["get",["isUnownedShown"]]]]],false],["text","\\n      "],["open-element","label",[]],["static-attr","slot","label"],["static-attr","class","collection-checkbox-label"],["static-attr","for","isUnowned"],["flush-element"],["append",["unknown",["tra","challenges_identity_customizer_show_unowned"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n    \\n"],["block",["if"],[["get",["isTitleFilterEnabled"]]],null,5],["text","    \\n    "],["open-element","lol-uikit-framed-dropdown",[]],["static-attr","class","challenges-identity-sort-dropdown"],["flush-element"],["text","\\n"],["block",["each"],[["get",["sortOptions"]]],null,3],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","challenges-identity-customizer-grid"],["flush-element"],["text","\\n  "],["open-element","lol-uikit-scrollable",[]],["static-attr","overflow-masks","enabled"],["flush-element"],["text","\\n"],["block",["ember-collection"],null,[["class","items","cell-layout"],["identity-customizer-grid-scrollable",["get",["filteredTitles"]],["helper",["mixed-grid-layout"],[["get",["itemSizes"]]],null]]],2],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","challenge-identity-customizer-title-container"],["dynamic-attr","id",["concat",["title-id-",["unknown",["entry","itemId"]]]]],["flush-element"],["text","\\n          "],["append",["helper",["identity-customizer-title"],null,[["title","selectedTitle","lastVisitTime","onClick"],[["get",["entry"]],["get",["selectedTitle"]],["get",["lastVisitTime"]],["helper",["action"],[["get",[null]],"selectTitle"],null]]]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","challenge-title-group-container"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenge-title-group-name"],["flush-element"],["append",["unknown",["entry","name"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["entry","isHeader"]]],null,1,0]],"locals":["entry","index"]},{"statements":[["text","        "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["sortOption","isSelected"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setSortOption",["get",["sortOption","value"]]],null],null],["flush-element"],["text","\\n          "],["append",["unknown",["sortOption","name"]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":["sortOption"]},{"statements":[["text","          "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["filterOption","isSelected"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setFilterOption",["get",["filterOption","value"]]],null],null],["flush-element"],["text","\\n            "],["append",["unknown",["filterOption","name"]],false],["text","\\n          "],["close-element"],["text","\\n"]],"locals":["filterOption"]},{"statements":[["text","      "],["open-element","lol-uikit-framed-dropdown",[]],["static-attr","class","challenges-identity-sort-dropdown"],["flush-element"],["text","\\n"],["block",["each"],[["get",["filterOptions"]]],null,4],["text","      "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(518)) && a.__esModule ? a : {
                    default: a
                };
            n(519);
            var r = n(114),
                l = n(486);
            e.exports = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["identity-customizer-title-component"],
                classNameBindings: ["isSelectable:selectable:unselectable", "isSelected:selected"],
                notificationsService: s.Ember.inject.service("shared-notifications"),
                titleNotificationsById: s.Ember.computed.alias("notificationsService.titleNotificationsById"),
                title: {},
                selectedTitle: {},
                hasBeenHovered: !1,
                itemId: s.Ember.computed.alias("title.itemId"),
                isSelectable: s.Ember.computed.alias("title.isOwned"),
                challengeTitleData: s.Ember.computed.alias("title.challengeTitleData"),
                isDefaultTitle: s.Ember.computed("challengeTitleData", (function() {
                    const e = this.get("challengeTitleData");
                    return !!e && e.challengeId === r.DEFAULT_TITLE_CHALLENGE_ID
                })),
                isSelected: s.Ember.computed("selectedTitle.itemId", "itemId", (function() {
                    return this.get("selectedTitle.itemId") === this.get("itemId")
                })),
                titleAcquisitionType: s.Ember.computed("title.titleAcquisitionType", "isDefaultTitle", (function() {
                    if (!this.get("isDefaultTitle")) return l.PLAYER_TITLE_ACQUISITION_TYPE_MAP[this.get("title.titleAcquisitionType")] || l.PLAYER_TITLE_ACQUISITION_TYPE_MAP.DEFAULT
                })),
                challengeLevel: s.Ember.computed("challengeTitleData", "isDefaultTitle", (function() {
                    const e = this.get("challengeTitleData");
                    if (!e) return null;
                    return (this.get("isDefaultTitle") ? r.CHALLENGE_LEVELS.NONE : e.level).toLowerCase()
                })),
                showNotificationPip: s.Ember.computed("itemId", "lastVisitTime", "title.purchaseDate", "hasBeenHovered", "titleNotificationsById", (function() {
                    const e = this.get("itemId"),
                        t = this.get("lastVisitTime"),
                        n = this.get("title.purchaseDate"),
                        a = this.get("hasBeenHovered"),
                        s = this.get("titleNotificationsById");
                    if (!n || a) return !1;
                    if (s && s[e]) return !0;
                    const i = this.get("tra");
                    return this.get("notificationsService").pipByTimestamp(i, t, n)
                })),
                isChallengeTitle: s.Ember.computed("challengeTitleData", "isDefaultTitle", (function() {
                    const e = this.get("challengeTitleData");
                    return !(!e || !e.challengeName || this.get("isDefaultTitle"))
                })),
                isPlayerTitle: s.Ember.computed("challengeTitleData", "itemId", "isDefaultTitle", (function() {
                    const e = this.get("challengeTitleData");
                    this.get("itemId");
                    return !e && this.get("itemId") !== l.NO_TITLE_DATA_ID && !this.get("isDefaultTitle")
                })),
                mouseUp() {
                    const e = this.get("title");
                    e.isOwned && !this.get("isSelected") && this.sendAction("onClick", e)
                },
                mouseEnter() {
                    this.set("hasBeenHovered", !0)
                }
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "kqSusrcP",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\identity-customizer\\\\identity-customizer-title.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["block",["if"],[["get",["isChallengeTitle"]]],null,13,11],["block",["if"],[["get",["showNotificationPip"]]],null,5],["open-element","div",[]],["dynamic-attr","class",["concat",["title-icon title-icon-acquisition-",["unknown",["titleAcquisitionType"]]]]],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","title-text"],["flush-element"],["append",["unknown",["title","name"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["isChallengeTitle"]]],null,4,2]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","player-title-icon-container"],["flush-element"],["text","\\n        "],["open-element","img",[]],["static-attr","class","player-title-icon"],["dynamic-attr","src",["concat",[["unknown",["title","iconPath"]]]]],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","player-title-data"],["flush-element"],["text","\\n"],["block",["if"],[["get",["title","iconPath"]]],null,0],["text","    "],["open-element","div",[]],["static-attr","class","player-title-details"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","player-title-acquisition-name"],["flush-element"],["append",["unknown",["title","titleAcquisitionName"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isPlayerTitle"]]],null,1]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","challenge-icon"],["dynamic-attr","src",["concat",["/fe/lol-static-assets/images/challenges-shared/icon-token-",["unknown",["challengeLevel"]],".png"]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","challenge-data"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","challenge-icon-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["challengeLevel"]]],null,3],["text","    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","challenge-name"],["flush-element"],["append",["unknown",["challengeTitleData","challengeName"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","notification-pip"],["flush-element"],["append",["unknown",["call-to-action-pip"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["append",["helper",["player-title-tooltip"],null,[["titleData"],[["get",["title"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type","pseudoPartSelector"],["right","system","player-title-tooltip"]],6]],"locals":[]},{"statements":[["block",["if"],[["get",["isPlayerTitle"]]],null,7]],"locals":[]},{"statements":[["text","    "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n      "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","challenges_identity_customizer_default_title_description"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["right","system"]],9]],"locals":[]},{"statements":[["block",["if"],[["get",["isDefaultTitle"]]],null,10,8]],"locals":[]},{"statements":[["text","    "],["append",["helper",["challenge-item-tooltip"],null,[["challengeData","animationsEnabled"],[["get",["title","challengeData"]],false]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type","pseudoPartSelector"],["right","system","challenge-item-tooltip"]],12]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            var a, s = n(1),
                i = (a = n(521)) && a.__esModule ? a : {
                    default: a
                };
            n(522);
            var r = n(114);
            e.exports = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["identity-customizer-token-component"],
                classNameBindings: ["isSelectable:selectable", "isAssigned:selected"],
                notificationsService: s.Ember.inject.service("shared-notifications"),
                challengeData: {},
                isTooltipEnabled: !1,
                isShowIdentityPoints: !1,
                isSelectable: !1,
                selectedTokenIds: [],
                selectedTokenId: null,
                lastTokensVisitTime: null,
                hasBeenHovered: !1,
                challengeId: s.Ember.computed.alias("challengeData.id"),
                currentLevel: s.Ember.computed.alias("challengeData.currentLevel"),
                nextLevel: s.Ember.computed.alias("challengeData.nextLevel"),
                levelToIconPath: s.Ember.computed.alias("challengeData.levelToIconPath"),
                isCapstone: s.Ember.computed.alias("challengeData.isCapstone"),
                currentLevelAchievedTime: s.Ember.computed.alias("challengeData.currentLevelAchievedTime"),
                locale: s.Ember.computed.alias("tra.metadata.bcp47tag"),
                iconPath: s.Ember.computed("currentLevel", "nextLevel", "levelToIconPath", (function() {
                    const e = this.get("currentLevel"),
                        t = e !== r.CHALLENGE_LEVELS.NONE ? e : this.get("nextLevel");
                    return this.get(`levelToIconPath.${t}`) || `/fe/lol-static-assets/images/challenges-shared/icon_achievement_${t}.png`
                })),
                showNotificationPip: s.Ember.computed("lastTokensVisitTime", "currentLevelAchievedTime", "hasBeenHovered", (function() {
                    const e = this.get("lastTokensVisitTime"),
                        t = this.get("currentLevelAchievedTime"),
                        n = this.get("hasBeenHovered");
                    if (!t || n || !e) return !1;
                    const a = this.get("tra");
                    return this.get("notificationsService").pipByTimestamp(a, e, t)
                })),
                isSelectedToken: s.Ember.computed("challengeId", "selectedTokenId", (function() {
                    const e = this.get("challengeId"),
                        t = this.get("selectedTokenId");
                    return !(!t || !e) && e === t
                })),
                isAssigned: s.Ember.computed("selectedTokenIds.[]", "isSelectable", "challengeId", (function() {
                    if (!this.get("isSelectable")) return !1;
                    const e = this.get("selectedTokenIds"),
                        t = this.get("challengeId");
                    return e.includes(t)
                })),
                earnedPoints: s.Ember.computed("locale", "challengeData.currentValue", "challengeData.previousValue", (function() {
                    const e = this.get("locale"),
                        t = this.get("challengeData.currentValue"),
                        n = this.get("challengeData.previousValue"),
                        a = t >= 0 && n >= 0 ? t - n : null;
                    if (a && a > 0) {
                        return a > 999 ? a.toLocaleString(e) : a
                    }
                    return ""
                })),
                mouseUp() {
                    const e = this.get("challengeId");
                    this.get("selectedTokenIds").includes(e) || this.sendAction("onClick", e)
                },
                mouseEnter() {
                    s.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-summoner-icons-grid-hover.ogg"), this.set("hasBeenHovered", !0)
                }
            })
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "vum/MT4o",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\identity-customizer\\\\identity-customizer-token.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["block",["if"],[["get",["isTooltipEnabled"]]],null,5],["block",["if"],[["get",["isAssigned"]]],null,3],["block",["if"],[["get",["isSelectedToken"]]],null,2],["block",["if"],[["get",["showNotificationPip"]]],null,1],["open-element","img",[]],["dynamic-attr","class",["concat",["identity-customizer-token ",["helper",["if"],[["get",["isCapstone"]],"capstone"],null]]]],["dynamic-attr","src",["concat",[["unknown",["iconPath"]]]]],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["isShowIdentityPoints"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["identity-customizer-earned-points\\n      ",["helper",["if"],[["get",["earnedPoints"]],"display-points"],null]]]],["flush-element"],["text","\\n    "],["append",["unknown",["earnedPoints"]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","notification-pip"],["flush-element"],["append",["unknown",["call-to-action-pip"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","identity-customizer-token-border-current"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","identity-customizer-token-border"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["append",["helper",["challenge-item-tooltip"],null,[["challengeData","animationsEnabled"],[["get",["challengeData"]],false]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type","pseudoPartSelector"],["right","system","challenge-item-tooltip"]],4]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(524);
            var s, i = (s = n(525)) && s.__esModule ? s : {
                default: s
            };
            e.exports = a.Ember.Component.extend({
                layout: i.default,
                classNames: ["identity-customizer-tab-icon-component"],
                notificationsService: a.Ember.inject.service("shared-notifications"),
                iconNotificationsById: a.Ember.computed.alias("notificationsService.iconNotificationsById"),
                icon: null,
                lastIconsVisitTime: null,
                shouldShowLegacyInfo: !1,
                hasBeenHovered: !1,
                selectedIconId: null,
                isSelected: a.Ember.computed("selectedIconId", "icon.id", (function() {
                    return this.get("icon.id") === this.get("selectedIconId")
                })),
                showNotificationPip: a.Ember.computed("lastIconsVisitTime", "icon", "hasBeenHovered", "iconNotificationsById", (function() {
                    const e = this.get("icon"),
                        t = e && e.purchaseDate,
                        n = this.get("lastIconsVisitTime"),
                        a = this.get("hasBeenHovered"),
                        s = this.get("iconNotificationsById");
                    if (!t || a || !n) return !1;
                    if (s && s[e.id]) return !0;
                    const i = this.get("tra");
                    return this.get("notificationsService").pipByTimestamp(i, n, t)
                })),
                actions: {
                    onIconHover() {
                        a.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-summoner-icons-grid-hover.ogg"), this.set("hasBeenHovered", !0)
                    },
                    selectIcon(e) {
                        a.Audio.getChannel("sfx-ui").playSound("/fe/lol-static-assets/sounds/sfx-summoner-icons-select.ogg"), this.sendAction("selectIcon", e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "JLDa/E+2",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\identity-customizer\\\\identity-customizer-icon.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["block",["if"],[["get",["showNotificationPip"]]],null,2],["open-element","img",[]],["dynamic-attr","class",["concat",["identity-customizer-icon ",["helper",["if"],[["get",["isSelected"]],"selected"],null]]]],["dynamic-attr","src",["concat",[["unknown",["icon","imagePath"]]]]],["modifier",["action"],[["get",[null]],"onIconHover"],[["on"],["mouseEnter"]]],["modifier",["action"],[["get",[null]],"selectIcon",["get",["icon"]]]],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["icon","rarityIconSrc"]]],null,1],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["append",["helper",["identity-icon-tooltip"],null,[["icon","shouldShowLegacyInfo"],[["get",["icon"]],["get",["shouldShowLegacyInfo"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","img",[]],["static-attr","class","identity-customizer-icon-rarity"],["dynamic-attr","src",["concat",[["unknown",["icon","rarityIconSrc"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","notification-pip"],["flush-element"],["append",["unknown",["call-to-action-pip"]],false],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(527), e.exports = a.Ember.Component.extend({
                layout: n(528),
                classNames: ["identity-icon-tooltip-component"],
                icon: null,
                hasDateOrDesc: a.Ember.computed.or("icon.purchaseDate", "icon.desc"),
                showLegacy: a.Ember.computed.and("shouldShowLegacyInfo", "icon.isLegacy"),
                hasContent: a.Ember.computed.or("hasDateOrDesc", "showLegacy"),
                acquiredDateText: a.Ember.computed("tra.ready", "tra.moment", "icon.purchaseDate", (function() {
                    const e = this.get("icon.purchaseDate");
                    let t = "";
                    if (e) {
                        const n = new Date(e),
                            a = this.get("tra.moment")(n).format(this.get("tra.identity_tooltip_icon_date"));
                        t = this.get("tra.formatString")("identity_tooltip_icon_date_full", {
                            date: a
                        })
                    }
                    return t
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "pXAdtcA1",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\identity-customizer\\\\identity-icon-tooltip.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["block",["if"],[["get",["icon"]]],null,5]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","icon-tooltip-legacy-section"],["flush-element"],["text","\\n        "],["open-element","img",[]],["static-attr","class","icon-tooltip-rarity-icon"],["static-attr","src","/fe/lol-static-assets/images/summoner-icon/icon-legacy.png"],["flush-element"],["close-element"],["text","\\n        "],["append",["unknown",["tra","identity_customizer_icon_legacy"]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","icon-tooltip-date"],["flush-element"],["append",["unknown",["acquiredDateText"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","icon-tooltip-desc"],["flush-element"],["append",["unknown",["icon","desc"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","icon-tooltip-line"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","icon-tooltip-rarity-icon"],["dynamic-attr","src",["concat",[["unknown",["icon","rarityIconSrc"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","identity-customizer-icon-tooltip"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","icon-tooltip-header"],["flush-element"],["text","\\n"],["block",["if"],[["get",["icon","rarityIconSrc"]]],null,4],["text","      "],["open-element","div",[]],["static-attr","class","icon-tooltip-header-title"],["flush-element"],["append",["unknown",["icon","title"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n"],["block",["if"],[["get",["hasContent"]]],null,3],["block",["if"],[["get",["icon","desc"]]],null,2],["block",["if"],[["get",["icon","purchaseDate"]]],null,1],["block",["if"],[["get",["showLegacy"]]],null,0],["text","  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(114);
            n(530);
            var i = n(511);
            e.exports = a.Ember.Component.extend({
                layout: n(531),
                classNames: ["challenges-collection-component"],
                challenges: {},
                summary: {},
                categoryChallenges: {},
                hasChallenges: a.Ember.computed.gt("filteredChallenges.length", 0),
                selectedTab: null,
                riotclientService: a.Ember.inject.service("riotclient"),
                settingsPreferences: a.Ember.inject.service("settings-preferences"),
                animationsEnabled: a.Ember.computed.alias("settingsPreferences.largeAreaAnimationsEnabled"),
                renderEventName: "challenges-collection-screen-render",
                shouldSendTelemetry: !1,
                selectedSortOption: s.CHALLENGE_SORT_TYPES.CAPSTONE,
                sortOptions: a.Ember.computed("selectedSortOption", (function() {
                    const e = this.get("selectedSortOption"),
                        t = [];
                    return Object.keys(s.CHALLENGE_SORT_TYPES).forEach((n => {
                        const a = s.CHALLENGE_SORT_TYPES[n];
                        t.push({
                            name: this.get(`tra.challenges_filter_sort_option_${a.toLowerCase()}`),
                            value: a,
                            isSelected: e === a
                        })
                    })), t
                })),
                isCapstoneGridView: a.Ember.computed("selectedSortOption", "searchFilter", (function() {
                    return !this.get("searchFilter") && this.get("selectedSortOption") === s.CHALLENGE_SORT_TYPES.CAPSTONE
                })),
                init() {
                    this._super(...arguments), this.get("riotclientService").getLocale().then((e => {
                        const t = e.replace("_", "-");
                        this.set("locale", t)
                    }));
                    const e = (0, a.dataBinding)("/lol-challenges", a.socket);
                    e.get("/v1/challenges/local-player", {
                        skipCache: !0
                    }).then((e => {
                        this.set("challenges", e)
                    })), e.get("/v1/summary-player-data/local-player", {
                        skipCache: !0
                    }).then((e => {
                        this.set("summary", e)
                    })), e.get("/v1/challenges/category-data", {
                        skipCache: !0
                    }).then((e => {
                        this.set("categoryChallenges", e)
                    })), a.Telemetry.invokeWithLowProbability((() => {
                        this.set("shouldSendTelemetry", !0), a.Telemetry.startTracingEvent(this.renderEventName)
                    }))
                },
                augmentedChallenges: a.Ember.computed("challenges", (function() {
                    const e = this.get("challenges") || {};
                    return Object.keys(e).forEach((t => {
                        const n = e[t],
                            a = n.thresholds || {},
                            r = n.nextLevel;
                        n.nextMilestoneReward = this._nextMilestoneRewardHelper(a, r) || "", n.nextMilestoneRewardText = this._nextMilestoneRewardTextHelper(n.nextMilestoneReward.reward), n.category === s.CHALLENGE_CATEGORIES.LEGACY && (n.isRetired = (0, i.calculateRetiredStatus)(n))
                    })), e
                })),
                isSelectedCategoryLegacy: a.Ember.computed.equal("selectedTab.value", s.CHALLENGE_CATEGORIES.LEGACY),
                selectedCategoryDescription: a.Ember.computed("selectedTab.value", (function() {
                    return this.get("selectedTab.value") ? this.get("isSelectedCategoryLegacy") ? this.get("tra.challenge_tooltip_legacy_category_description") : this.get("tra").formatString("challenge_tooltip_category_description", {
                        category: this.get(`tra.challenge_category_${this.get("selectedTab.value")}`)
                    }) : ""
                })),
                filteredChallenges: a.Ember.computed("selectedTab", "selectedSortOption", "augmentedChallenges", "searchFilter", "locale", (function() {
                    const e = this.get("selectedTab"),
                        t = this.get("augmentedChallenges") || {},
                        n = this.get("searchFilter");
                    if (!e) return {};
                    let a = Object.fromEntries(Object.entries(t).filter((([, t]) => t.category === e.value)));
                    if (n) {
                        const e = this.get("locale");
                        a = this._matchNameAndDescription(a, n, e)
                    }
                    return a
                })),
                isLoaded: a.Ember.computed("augmentedChallenges", "summary", (function() {
                    const e = this.get("summary"),
                        t = this.get("augmentedChallenges"),
                        n = !!t && Object.keys(t).length > 0;
                    return !!e && Object.keys(e).length > 0 && n
                })),
                nextCrystalThreshold: a.Ember.computed("categoryChallenges", (function() {
                    const e = this.get("categoryChallenges");
                    return e && e[0] ? e[0].nextThreshold : 0
                })),
                _nextMilestoneRewardHelper(e, t) {
                    let n, a = "";
                    for (; t;) {
                        const i = e[t];
                        if (!i) {
                            t = (0, s.getNextLevel)(t);
                            continue
                        }
                        const r = (i.rewards || []).find((e => s.CHALLENGE_MILESTONE_REWARDS.includes(e.category)));
                        if (r) {
                            n = r, a = t;
                            break
                        }
                        t = (0, s.getNextLevel)(t)
                    }
                    return {
                        reward: n,
                        level: a.toLowerCase()
                    }
                },
                _nextMilestoneRewardTextHelper(e) {
                    if (!e) return "";
                    switch (e.category) {
                        case s.CHALLENGE_REWARD_CATEGORIES.TITLE:
                            return e.name || this.get("tra.challenge_new_title");
                        case s.CHALLENGE_REWARD_CATEGORIES.BANNER_ACCENT:
                            return this.get("tra.challenge_new_banner_accent");
                        default:
                            return e.name
                    }
                },
                _matchNameAndDescription(e, t, n) {
                    const a = t.toLocaleLowerCase(n);
                    return Object.fromEntries(Object.entries(e).filter((([, e]) => {
                        const t = e.name.toLocaleLowerCase(n),
                            s = e.description.toLocaleLowerCase(n),
                            i = e.descriptionShort.toLocaleLowerCase(n),
                            r = e.nextMilestoneRewardText.toLocaleLowerCase(n);
                        return t.includes(a) || s.includes(a) || r.includes(a) || i.includes(a)
                    })))
                },
                actions: {
                    setSelectedTab(e) {
                        this.set("selectedTab", e);
                        const t = this.element.getElementsByClassName("challenges-scroll-container")[0];
                        t && t.firstElementChild && t.firstElementChild.scroll({
                            top: 0
                        })
                    },
                    setSortOption(e) {
                        this.set("selectedSortOption", e), a.Telemetry.sendEvent("challenges-collection-sort", e)
                    },
                    onBreakdownClick(e) {
                        this.set("selectedSortOption", s.CHALLENGE_SORT_TYPES.LEVEL), this.set("navigateToLevel", e)
                    },
                    onNavigationComplete() {
                        this.set("navigateToLevel", null)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "GH02WCW/",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\collection\\\\collection-root.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["block",["render-telemetry-sender"],null,[["renderEventName","shouldSendTelemetry"],[["get",["renderEventName"]],["get",["shouldSendTelemetry"]]]],7]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","loading-container"],["flush-element"],["text","\\n        "],["append",["unknown",["hextech-loading-animation"]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["append",["helper",["collection-grid-standard"],null,[["challenges","summary","selectedSortOption","animationsEnabled","navigateToLevel","onNavigationComplete"],[["get",["filteredChallenges"]],["get",["summary"]],["get",["selectedSortOption"]],["get",["animationsEnabled"]],["get",["navigateToLevel"]],["helper",["action"],[["get",[null]],"onNavigationComplete"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["append",["helper",["collection-grid-capstone"],null,[["challenges","summary","selectedSortOption","animationsEnabled"],[["get",["filteredChallenges"]],["get",["summary"]],["get",["selectedSortOption"]],["get",["animationsEnabled"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","                    "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["sortOption","isSelected"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setSortOption",["get",["sortOption","value"]]],null],null],["flush-element"],["text","\\n                      "],["append",["unknown",["sortOption","name"]],false],["text","\\n                    "],["close-element"],["text","\\n"]],"locals":["sortOption"]},{"statements":[["text","              "],["open-element","div",[]],["static-attr","class","challenges-progress-bar-container"],["flush-element"],["text","\\n                "],["open-element","div",[]],["static-attr","class","challenges-progress-bar"],["flush-element"],["text","\\n                  "],["open-element","div",[]],["static-attr","class","challenges-progress-meter-fill"],["dynamic-attr","style",["concat",["transform: scaleX(",["unknown",["selectedTab","percentage"]],"%)"]]],["flush-element"],["close-element"],["text","\\n                  "],["open-element","div",[]],["static-attr","class","challenges-progress-text"],["flush-element"],["append",["unknown",["selectedTab","current"]],false],["text"," / "],["append",["unknown",["selectedTab","next"]],false],["close-element"],["text","\\n                "],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["append",["helper",["collection-category-tabs"],null,[["categories","challenges","selectedTab","setSelectedTab","categoryChallenges"],[["get",["summary","categoryProgress"]],["get",["challenges"]],["get",["selectedTab"]],["helper",["action"],[["get",[null]],"setSelectedTab"],null],["get",["categoryChallenges"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","content"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","control-panel"],["flush-element"],["text","\\n          "],["append",["helper",["collection-crystal"],null,[["currentPoints","nextPointsThreshold","challengeLevel","positionPercentile"],[["get",["summary","totalChallengeScore"]],["get",["nextCrystalThreshold"]],["get",["summary","overallChallengeLevel"]],["get",["summary","positionPercentile"]]]]],false],["text","\\n"],["block",["if"],[["get",["summary","categoryProgress"]]],null,5],["text","        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","grid"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","category-header-container"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","category-name"],["flush-element"],["text","\\n              "],["open-element","img",[]],["dynamic-attr","src",["unknown",["selectedTab","iconPath"]],null],["dynamic-attr","class",["concat",["category-icon color-",["unknown",["selectedTab","level"]]]]],["flush-element"],["close-element"],["text","\\n              "],["append",["unknown",["selectedTab","name"]],false],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","category-description"],["flush-element"],["text","\\n              "],["append",["unknown",["selectedCategoryDescription"]],false],["text","\\n            "],["close-element"],["text","\\n"],["block",["unless"],[["get",["isSelectedCategoryLegacy"]]],null,4],["text","          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","header"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","filters-container"],["flush-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","search-filter-container"],["flush-element"],["text","\\n                "],["open-element","lol-uikit-flat-input",[]],["flush-element"],["text","\\n                  "],["append",["helper",["input"],null,[["type","maxlength","class","value","placeholder"],["search","50","search-filter-input",["get",["searchFilter"]],["get",["tra","challenges_search_placeholder"]]]]],false],["text","\\n                "],["close-element"],["text","\\n              "],["close-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","sort-filter-container"],["flush-element"],["text","\\n                "],["open-element","lol-uikit-framed-dropdown",[]],["flush-element"],["text","\\n"],["block",["each"],[["get",["sortOptions"]]],null,3],["text","                "],["close-element"],["text","\\n              "],["close-element"],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","header-breakdown-container"],["flush-element"],["text","\\n              "],["append",["helper",["collection-challenges-breakdown"],null,[["challenges","onBreakdownClick"],[["get",["filteredChallenges"]],["helper",["action"],[["get",[null]],"onBreakdownClick"],null]]]],false],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","header-divider-line"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenges-grid"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isCapstoneGridView"]]],null,2,1],["text","          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","challenges-collection-component"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","background"],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["isLoaded"]]],null,6,0],["text","  "],["close-element"],["text","\\n  "],["append",["unknown",["collection-intro-modal"]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(114),
                i = n(467);
            n(533), e.exports = a.Ember.Component.extend({
                layout: n(534),
                classNames: ["challenges-collection-category-tabs-component"],
                challenges: [],
                categories: [],
                categoryChallenges: {},
                categoryTabs: a.Ember.computed("selectedTab.value", "hoveredTab.value", "categories.[]", "challenges.[]", "categoryChallenges", (function() {
                    const e = [],
                        t = this.get("selectedTab.value"),
                        n = this.get("hoveredTab.value"),
                        a = this.get("categories") || [],
                        i = this.get("categoryChallenges") || {},
                        r = this.get("challenges") || [];
                    s.SORTED_CHALLENGE_CATEGORIES.forEach((l => {
                        const o = a.find((e => e.category === l)),
                            c = s.CHALLENGE_CATEGORY_IDS[l],
                            d = i[c],
                            u = d ? d.nextThreshold : 0;
                        if (o) {
                            const a = Math.min(u ? o.current / u * 100 : 0, 100),
                                i = o.category || "";
                            e.push({
                                name: this.get(`tra.challenge_category_${i}`),
                                value: i,
                                percentage: a,
                                current: o.current,
                                next: u,
                                iconPath: `/fe/lol-static-assets/images/challenges-shared/icon_category_${i.toLowerCase()}.svg`,
                                level: o.level || s.CHALLENGE_LEVELS.NONE,
                                isLegacy: o.category === s.CHALLENGE_CATEGORIES.LEGACY,
                                selected: o.category === t,
                                hovered: o.category === n,
                                challengesCount: this._countChallengesInCategory(r, o.category),
                                positionPercentile: o.positionPercentile
                            })
                        }
                    }));
                    const l = s.CHALLENGE_CATEGORIES.LEGACY;
                    return e.push({
                        name: this.get(`tra.challenge_category_${l}`),
                        value: l,
                        iconPath: `/fe/lol-static-assets/images/challenges-shared/icon_category_${l.toLowerCase()}.svg`,
                        isLegacy: !0,
                        selected: l === t,
                        hovered: l === n,
                        challengesCount: this._countChallengesInCategory(r, s.CHALLENGE_CATEGORIES.LEGACY, !0)
                    }), e
                })),
                selectedTab: null,
                hoveredTab: null,
                didInsertElement() {
                    this._super(...arguments);
                    const e = this.get("categoryTabs"),
                        t = e && e.length ? e[0] : null;
                    this._selectTab(t)
                },
                _selectTab(e) {
                    this.sendAction("setSelectedTab", e)
                },
                _hoverTab(e) {
                    this.set("hoveredTab", e)
                },
                _countChallengesInCategory(e, t, n = !1) {
                    let a = 0;
                    return e && t ? (Object.keys(e).forEach((s => {
                        e[s].category === t && (!n || e[s].currentValue > 0) && a++
                    })), a) : a
                },
                actions: {
                    selectTab(e) {
                        e && e.value && (this.get("selectedTab.value") !== e.value && this._selectTab(e), a.Audio.getChannel(i.AUDIO_CHANNEL.UI).playSound(i.AUDIO_TYPE.GRID_CLICK), a.Telemetry.sendEvent("challenges-collection-category", e.value))
                    },
                    hoverTab(e) {
                        e && e.value && this.get("selectedTab.value") !== e.value && this._hoverTab(e), a.Audio.getChannel(i.AUDIO_CHANNEL.UI).playSound(i.AUDIO_TYPE.GRID_HOVER)
                    },
                    unhoverTab() {
                        this._hoverTab(null)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "2BCJgXy/",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\collection\\\\collection-category-tabs.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["block",["each"],[["helper",["-each-in"],[["get",["categoryTabs"]]],null]],null,2]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["helper",["collection-category-tooltip"],null,[["tooltipType","tier","category","currentValue","nextValue","challengesCount","positionPercentile"],["CATEGORY",["get",["tab","level"]],["get",["tab","value"]],["get",["tab","current"]],["get",["tab","next"]],["get",["tab","challengesCount"]],["get",["tab","positionPercentile"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","category-tab-horiontal-line"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["tab","isLegacy"]]],null,1],["text","  "],["open-element","div",[]],["static-attr","class","category-tab-container"],["modifier",["action"],[["get",[null]],"selectTab",["get",["tab"]]]],["modifier",["action"],[["get",[null]],"hoverTab",["get",["tab"]]],[["on"],["mouseEnter"]]],["modifier",["action"],[["get",[null]],"unhoverTab"],[["on"],["mouseLeave"]]],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type","pseudoPartSelector"],["right","system","collection-category-tooltip"]],0],["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["category-tab-background-highlight ",["helper",["if"],[["get",["tab","selected"]],"active"],null]," ",["helper",["if"],[["get",["tab","hovered"]],"hover"],null]]]],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["category-tab-wrapper ",["helper",["if"],[["get",["tab","isLegacy"]],"legacy"],null]]]],["flush-element"],["text","\\n      "],["open-element","img",[]],["dynamic-attr","class",["concat",["category-icon category-tab-icon ",["helper",["if"],[["get",["tab","selected"]],"active"],null]," ",["helper",["if"],[["get",["tab","hovered"]],"hover"],null]," color-",["unknown",["tab","level"]]]]],["dynamic-attr","src",["concat",[["unknown",["tab","iconPath"]]]]],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","category-tab-contents-wrapper"],["flush-element"],["text","\\n        "],["open-element","div",[]],["dynamic-attr","class",["concat",["category-tab-name ",["helper",["if"],[["get",["tab","selected"]],"active"],null]," ",["helper",["if"],[["get",["tab","hovered"]],"hover"],null]]]],["flush-element"],["append",["unknown",["tab","name"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":["index","tab"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(114);
            n(536);
            const i = "CRYSTAL",
                r = "CATEGORY";
            e.exports = a.Ember.Component.extend({
                layout: n(537),
                classNames: ["challenges-collection-category-tooltip-component"],
                tooltipType: r,
                tier: null,
                category: null,
                positionPercentile: 100,
                currentValue: 0,
                nextValue: 0,
                challengesCount: 0,
                didInsertElement() {
                    this._super(...arguments), this._setProgressBarFill()
                },
                _setProgressBarFill() {
                    const e = this.get("currentValue"),
                        t = this.get("nextValue"),
                        n = t ? e / t * 100 : 0,
                        a = Math.min(n, 100);
                    if (!this.get("isLegacyTooltip")) {
                        this.element.querySelector(".challenges-progress-meter-fill").style.transform = `scaleX(${a}%)`
                    }
                },
                isCategoryTooltip: a.Ember.computed.equal("tooltipType", r),
                isLegacyTooltip: a.Ember.computed.equal("category", s.CHALLENGE_CATEGORIES.LEGACY),
                assetImagePath: a.Ember.computed("tooltipType", "tier", "category", (function() {
                    if (this.get("tooltipType") === i) {
                        return `/fe/lol-static-assets/images/challenges-shared/crystal_${(this.get("tier")||"iron").toLowerCase()}.png`
                    }
                    return `/fe/lol-static-assets/images/challenges-shared/icon_category_${(this.get("category")||"").toLowerCase()}.svg`
                })),
                txtTitle: a.Ember.computed("tooltipType", "category", (function() {
                    const e = this.get("tooltipType"),
                        t = this.get("category");
                    return e === i ? this.get("tra.challenge_tooltip_crystal_title") : this.get(`tra.challenge_category_${t}`)
                })),
                txtDescription: a.Ember.computed("tooltipType", "category", (function() {
                    const e = this.get("tooltipType"),
                        t = this.get("category");
                    return e === i ? this.get("tra.challenge_tooltip_crystal_description") : this._getCategoryDescription(t)
                })),
                txtChallengesCount: a.Ember.computed("challengesCount", (function() {
                    return this.get("tra").formatString("challenge_tooltip_count_earned", {
                        count: this.get("challengesCount")
                    })
                })),
                localizedChallengeLevel: a.Ember.computed("tra", "tier", (function() {
                    const e = this.get("tier") || s.CHALLENGE_LEVELS.NONE;
                    return this.get(`tra.challenge_level_${e.toLowerCase()}`)
                })),
                challengeCategoryLevel: a.Ember.computed("tier", (function() {
                    return this.get("tier") || s.CHALLENGE_LEVELS.NONE
                })),
                txtPositionPercentile: a.Ember.computed("tra.challenge_percentile_players", "positionPercentile", (function() {
                    const e = this.get("positionPercentile"),
                        t = this.get("tra");
                    return t && e ? t.formatString("challenge_percentile_players", {
                        percentile: e.toFixed(1)
                    }) : ""
                })),
                _getCategoryDescription(e) {
                    return this.get("isLegacyTooltip") ? this.get("tra.challenge_tooltip_legacy_category_description") : this.get("tra").formatString("challenge_tooltip_category_description", {
                        category: this.get(`tra.challenge_category_${e}`)
                    })
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "Gu3bZhGk",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\collection\\\\collection-category-tooltip.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","tooltip-header-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","tooltip-image-container"],["flush-element"],["text","\\n    "],["open-element","img",[]],["dynamic-attr","class",["concat",["tooltip-image category-icon color-",["unknown",["challengeCategoryLevel"]]," ",["helper",["if"],[["get",["isCategoryTooltip"]],"category","crystal"],null]]]],["dynamic-attr","src",["concat",[["unknown",["assetImagePath"]]]]],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","tooltip-details-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","tooltip-title"],["flush-element"],["append",["unknown",["txtTitle"]],false],["close-element"],["text","\\n"],["block",["unless"],[["get",["isLegacyTooltip"]]],null,2,1],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","tooltip-description"],["flush-element"],["append",["unknown",["txtDescription"]],false],["close-element"],["text","\\n"],["block",["unless"],[["get",["isLegacyTooltip"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["open-element","div",[]],["static-attr","class","challenges-progress-bar-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","challenges-progress-bar"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","challenges-progress-meter-fill"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","challenges-progress-text"],["flush-element"],["append",["unknown",["currentValue"]],false],["text"," / "],["append",["unknown",["nextValue"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","tooltip-earned"],["flush-element"],["append",["unknown",["txtChallengesCount"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","tooltip-tier"],["flush-element"],["append",["unknown",["localizedChallengeLevel"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","tooltip-position-percentile"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","icon-people"],["flush-element"],["close-element"],["text","\\n        "],["open-element","div",[]],["flush-element"],["append",["unknown",["txtPositionPercentile"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(114);
            n(539), e.exports = a.Ember.Component.extend({
                layout: n(540),
                classNames: ["career-challenges-breakdown-component"],
                challenges: [],
                levelList: s.SORTED_CHALLENGE_LEVELS,
                challengesByLevel: a.Ember.computed("challenges", (function() {
                    const e = {},
                        t = this.get("challenges");
                    return Object.values(t).forEach((t => {
                        if (t && !t.isTitle) {
                            const n = t.currentLevel || s.CHALLENGE_LEVELS.NONE,
                                a = e[n] || 0;
                            e[n] = a + 1
                        }
                    })), e
                })),
                challengesByLevelList: a.Ember.computed("challengesByLevel", "levelList", (function() {
                    const e = this.get("levelList"),
                        t = this.get("challengesByLevel"),
                        n = [];
                    return e.forEach((e => {
                        const a = t[e] || 0;
                        n.push({
                            name: this.get(`tra.challenge_level_${e.toLowerCase()}`),
                            level: e.toLowerCase(),
                            value: a,
                            isHidden: 0 === a
                        })
                    })), n
                })),
                totalChallengesCount: a.Ember.computed("challenges.[]", (function() {
                    return this.get("challenges.length")
                })),
                startedChallengesCount: a.Ember.computed("challenges.[]", (function() {
                    return (this.get("challenges") || []).filter((e => e.currentLevel !== s.CHALLENGE_LEVELS.NONE)).length
                })),
                actions: {
                    onClick(e) {
                        this.onBreakdownClick && this.onBreakdownClick(e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "cU9C0Tb2",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\collection\\\\collection-challenges-breakdown.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","challenges-breakdown-container"],["flush-element"],["text","\\n"],["block",["each"],[["helper",["-each-in"],[["get",["challengesByLevelList"]]],null]],null,1],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n            "],["open-element","p",[]],["flush-element"],["append",["unknown",["level","name"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["challenges-breakdown ",["helper",["if"],[["get",["level","isHidden"]],"hidden"],null]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"onClick",["get",["level","level"]]],null],null],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","challenges-breakdown-icon-container"],["flush-element"],["text","\\n        "],["open-element","img",[]],["static-attr","class","challenges-breakdown-icon"],["dynamic-attr","src",["concat",["/fe/lol-static-assets/images/challenges-shared/icon-token-",["unknown",["level","level"]],".png"]]],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["offsetY","tooltipPosition","type"],[4,"top","system"]],0],["text","      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","challenges-breakdown-value"],["flush-element"],["append",["unknown",["level","value"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":["index","level"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(467),
                i = n(114);
            n(542), e.exports = a.Ember.Component.extend({
                layout: n(543),
                classNames: ["challenges-collection-crystal-component"],
                currentPoints: 0,
                nextPointsThreshold: 0,
                challengeLevel: null,
                positionPercentile: 100,
                riotclientService: a.Ember.inject.service("riotclient"),
                init() {
                    this._super(...arguments), this.get("riotclientService").getLocale().then((e => {
                        const t = e.replace("_", "-");
                        this.set("locale", t)
                    }))
                },
                overallChallengeProgressPercentage: a.Ember.computed("currentPoints", "nextPointsThreshold", (function() {
                    return this.get("currentPoints") / this.get("nextPointsThreshold") * 100
                })),
                overallChallengePoints: a.Ember.computed("currentPoints", "locale", (function() {
                    const e = this.get("locale");
                    return (this.get("currentPoints") || 0).toLocaleString(e)
                })),
                localizedChallengeLevel: a.Ember.computed("tra", "challengeLevel", (function() {
                    const e = this.get("challengeLevel") || i.CHALLENGE_LEVELS.NONE;
                    return this.get(`tra.challenge_level_${e.toLowerCase()}`)
                })),
                actions: {
                    onHover() {
                        a.Audio.getChannel(s.AUDIO_CHANNEL.UI).playSound(s.AUDIO_TYPE.GRID_HOVER)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "NNV47/uh",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\collection\\\\collection-crystal.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","crystal-wrapper"],["modifier",["action"],[["get",[null]],"onHover"],[["on"],["mouseEnter"]]],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["right","system"]],0],["text","  "],["open-element","div",[]],["static-attr","class","background-ring"],["flush-element"],["close-element"],["text","\\n  "],["open-element","lol-uikit-radial-progress",[]],["static-attr","class","crystal-radial-progress"],["static-attr","type","custom"],["dynamic-attr","percent",["concat",[["unknown",["overallChallengeProgressPercentage"]]]]],["static-attr","start-angle","-95"],["static-attr","end-angle","-445"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","slot","bottom"],["static-attr","class","crystal-radial crystal-radial-bottom "],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","slot","middle"],["static-attr","class","crystal-radial crystal-radial-middle"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","contents"],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["crystal-image ",["unknown",["challengeLevel"]]]]],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","total-points"],["flush-element"],["append",["unknown",["overallChallengePoints"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","level"],["flush-element"],["append",["unknown",["localizedChallengeLevel"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["append",["helper",["collection-category-tooltip"],null,[["tooltipType","tier","currentValue","nextValue","positionPercentile"],["CRYSTAL",["get",["challengeLevel"]],["get",["currentPoints"]],["get",["nextPointsThreshold"]],["get",["positionPercentile"]]]]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(545);
            var s = n(510),
                i = n(114),
                r = n(512),
                l = n(456),
                o = n(511);
            e.exports = a.Ember.Component.extend({
                layout: n(546),
                classNames: ["challenges-collection-grid-standard-component"],
                challenges: {},
                summary: {},
                hasChallenges: a.Ember.computed("challenges", (function() {
                    const e = this.get("challenges") || {};
                    return Object.keys(e).length > 0
                })),
                init: function() {
                    this._super(...arguments), this._checkForNavigation()
                },
                didUpdateAttrs: function() {
                    this._super(...arguments), this._checkForNavigation()
                },
                _checkForNavigation() {
                    const e = this.get("navigateToLevel");
                    e && this._navigateToLevel(e)
                },
                sortedChallenges: a.Ember.computed("challenges", (function() {
                    const e = this.get("challenges");
                    let t = Object.values(e);
                    const n = this.get("selectedSortOption");
                    return (0, s.sortChallenges)(t, n), t = this._groupChallenges(t, n), t
                })),
                itemSizes: a.Ember.computed("sortedChallenges.[]", (function() {
                    const e = this.get("sortedChallenges") || [],
                        t = [];
                    return e.forEach((e => {
                        e.isTitle ? t.push({
                            width: 750,
                            height: 34
                        }) : t.push({
                            width: 197,
                            height: 228
                        })
                    })), t
                })),
                _groupChallenges(e, t) {
                    if (!t || !e) return e;
                    let n;
                    switch (t) {
                        case i.CHALLENGE_SORT_TYPES.RARITY:
                            n = (0, r.groupByRarity)(e);
                            break;
                        case i.CHALLENGE_SORT_TYPES.LEVEL:
                            n = (0, r.groupByLevel)(e);
                            break;
                        case i.CHALLENGE_SORT_TYPES.ACQUIRED:
                            n = (0, r.groupByYearAcquired)(e);
                            break;
                        case i.CHALLENGE_SORT_TYPES.CAPSTONE:
                            n = (0, r.groupByCapstone)(e);
                            break;
                        default:
                            return e
                    }
                    const a = [];
                    let s = 0,
                        l = 0,
                        o = 0;
                    return n.forEach(((e, n) => {
                        a.push({
                            isTitle: !0,
                            ...this._getGroupTitle(n, e, t),
                            headerId: n.toString().toLowerCase(),
                            scrollPos: this._calculateHeaderOffset(s, l)
                        }), s++, l++, o = 0, e.forEach((e => {
                            a.push(e), o++, o > 4 && (o = 1, l++)
                        }))
                    })), a
                },
                _calculateHeaderOffset: (e, t) => 34 * e + 228 * t,
                _getGroupTitle(e, t, n) {
                    if (!n) return {
                        name: e
                    };
                    const a = {};
                    switch (n) {
                        case i.CHALLENGE_SORT_TYPES.RARITY:
                            a.name = e === i.CHALLENGE_SORT_RARITY_OTHER_KEY ? this.get("tra.challenges_progress_summary_other_percentile") : this.get("tra").formatString("challenges_progress_summary_top_percentile", {
                                percentile: e
                            });
                            break;
                        case i.CHALLENGE_SORT_TYPES.LEVEL:
                            a.name = this.get(`tra.challenge_level_${e.toLowerCase()}`);
                            break;
                        case i.CHALLENGE_SORT_TYPES.ACQUIRED:
                            a.name = this.get("tra").formatString("challenge_group_title_year", {
                                year: e
                            });
                            break;
                        case i.CHALLENGE_SORT_TYPES.CAPSTONE:
                            const n = t[0] || {};
                            this._calculateCapstoneGroupTitle(n, a), this._calculateCapstoneGroupSubtext(n, a);
                            break;
                        default:
                            return {
                                name: e
                            }
                    }
                    return a
                },
                _calculateCapstoneGroupTitle(e, t) {
                    const n = e.category === i.CHALLENGE_CATEGORIES.LEGACY,
                        a = (0, o.calculateRetiredStatus)(e),
                        s = n ? this.get("tra.challenge_group_title_legacy") : this.get("tra.challenge_group_title_none"),
                        r = e.capstoneGroupName || s;
                    t.name = a ? this.get("tra").formatString("challenge_group_title_retired", {
                        name: r
                    }) : r
                },
                _calculateCapstoneGroupSubtext(e, t) {
                    const n = (0, o.calculateRetiredStatus)(e),
                        a = e.retireTimestamp - i.CHALLENGES_RETIRE_DISPLAY_THRESHOLD_MS < Date.now();
                    if (e.retireTimestamp && !n && a) {
                        const n = (0, l.convertDateStringToFullDisplayFormat)(e.retireTimestamp, this.get("tra"));
                        t.description = {
                            text: this.get("tra").formatString("challenge_group_description_retiring", {
                                days: (0, l.getDaysUntilTimestamp)(e.retireTimestamp)
                            }),
                            icon: "clock",
                            tooltipTitle: this.get("tra.challenge_group_tooltip_title_retiring"),
                            tooltipText: this.get("tra").formatString("challenge_group_tooltip_description_retiring", {
                                dateText: n.datePortionText,
                                timeText: n.timePortionText
                            })
                        }
                    }
                },
                _navigateToLevel(e) {
                    a.Ember.run.scheduleOnce("afterRender", this, (() => {
                        const t = Object.values(this.get("sortedChallenges") || {}).find((t => t.isTitle && t.headerId === e)),
                            n = this.element.getElementsByClassName("challenges-scroll-container")[0].firstElementChild,
                            a = t ? t.scrollPos : 0;
                        n.scroll({
                            top: a,
                            behavior: "smooth"
                        }), this.sendAction("onNavigationComplete")
                    }))
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "EjgTVtdB",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\collection\\\\collection-grid-standard.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["block",["if"],[["get",["hasChallenges"]]],null,5]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["helper",["challenge-item"],null,[["challengeData","apexLadderUpdateTime","animationsEnabled"],[["get",["entry"]],["get",["summary","apexLadderUpdateTime"]],["get",["animationsEnabled"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","                "],["open-element","lol-uikit-content-block",[]],["static-attr","class","challenge-group-description-tooltip"],["static-attr","type","tooltip-large"],["flush-element"],["text","\\n                  "],["open-element","div",[]],["static-attr","class","challenge-group-description-tooltip-wrapper"],["flush-element"],["text","\\n                    "],["open-element","h5",[]],["static-attr","class","challenge-group-description-tooltip-title"],["flush-element"],["append",["unknown",["entry","description","tooltipTitle"]],false],["close-element"],["text","\\n                    "],["open-element","p",[]],["static-attr","class","challenge-group-description-tooltip-text"],["flush-element"],["append",["unknown",["entry","description","tooltipText"]],false],["close-element"],["text","\\n                  "],["close-element"],["text","\\n                "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","challenge-group-description"],["flush-element"],["text","\\n            "],["open-element","div",[]],["dynamic-attr","class",["concat",["challenge-group-description-icon ",["unknown",["entry","description","icon"]]]]],["flush-element"],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","challenge-group-description-text"],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],1],["text","              "],["append",["unknown",["entry","description","text"]],false],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","challenge-group-title-container"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","challenge-group-title"],["flush-element"],["append",["unknown",["entry","name"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["entry","description"]]],null,2],["text","      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["entry","isTitle"]]],null,3,0]],"locals":["entry","index"]},{"statements":[["block",["ember-collection"],null,[["class","items","cell-layout"],["item-grid-scrollable challenges-scroll-container",["get",["sortedChallenges"]],["helper",["mixed-grid-layout"],[["get",["itemSizes"]]],null]]],4]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(548);
            var s = n(510),
                i = n(511);
            e.exports = a.Ember.Component.extend({
                layout: n(549),
                classNames: ["challenges-collection-grid-capstone-component"],
                challenges: {},
                summary: {},
                hasChallenges: a.Ember.computed.gt("sortedChallenges.length", 0),
                summonerService: a.Ember.inject.service("summoner"),
                puuid: a.Ember.computed.alias("summonerService.puuid"),
                sortedChallenges: a.Ember.computed("challenges", (function() {
                    const e = Object.values(this.get("challenges") || {});
                    (0, s.sortChallenges)(e, this.get("selectedSortOption"));
                    const t = [];
                    return e.forEach((e => {
                        e.childrenIds && e.childrenIds.length && ((0, i.hasCapstoneChildren)(e) && (e.isCapstoneView = !0), t.push(e))
                    })), this._insertTitleEntries(t), this._calculateHeights(t), t
                })),
                itemSizes: a.Ember.computed("sortedChallenges.[]", (function() {
                    const e = this.get("sortedChallenges") || [],
                        t = [];
                    return e.forEach((e => {
                        t.push(e.itemSize)
                    })), t
                })),
                _calculateHeights(e) {
                    let t = 0;
                    e.forEach((e => {
                        e.isTitle ? e.itemSize = {
                            width: 777,
                            height: 40
                        } : e.isCapstoneView ? e.itemSize = {
                            width: 777,
                            height: 176
                        } : e.itemSize = {
                            width: 777,
                            height: this._calculateGroupHeight(e)
                        }, e.scrollPos = t, t += e.itemSize.height
                    }))
                },
                _calculateGroupHeight(e) {
                    let t = 174;
                    const n = e.childrenIds || [];
                    return t += 223 * Math.ceil(n.length / 4), t
                },
                _insertTitleEntries(e) {
                    if (!e) return;
                    const t = e.findIndex((e => !e.isTitle && (0, i.hasCapstoneChildren)(e)));
                    t >= 0 && e.splice(t, 0, {
                        isTitle: !0,
                        title: this.get("tra.challenge_group_title_capstones"),
                        name: this.get("tra.challenge_group_title_capstone_tooltip_name"),
                        description: this.get("tra.challenge_group_title_capstone_tooltip_description"),
                        icon: "capstone-light"
                    });
                    const n = e.findIndex((e => !e.isTitle && !(0, i.hasCapstoneChildren)(e)));
                    n >= 0 && e.splice(n, 0, {
                        isTitle: !0,
                        title: this.get("tra.challenge_group_title_groups"),
                        name: this.get("tra.challenge_group_title_group_tooltip_name"),
                        description: this.get("tra.challenge_group_title_group_tooltip_description"),
                        icon: "medal"
                    })
                },
                _navigateToElement(e) {
                    a.Ember.run.scheduleOnce("afterRender", this, (() => {
                        const t = (this.get("sortedChallenges") || []).find((t => t.id === e));
                        if (t) {
                            const e = this.element.getElementsByClassName("challenges-scroll-container")[0].firstElementChild,
                                n = t.scrollPos;
                            e.scroll({
                                top: n,
                                behavior: "smooth"
                            })
                        }
                    }))
                },
                actions: {
                    onTokenClick(e) {
                        this._navigateToElement(e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "9xq7lH/L",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\collection\\\\collection-grid-capstone.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["block",["if"],[["get",["hasChallenges"]]],null,6]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["helper",["collection-grid-row-group"],null,[["challenges","challenge","summary","puuid","animationsEnabled"],[["get",["challenges"]],["get",["entry"]],["get",["summary"]],["get",["puuid"]],["get",["animationsEnabled"]]]]],false],["text","\\n    "]],"locals":[]},{"statements":[["text","      "],["append",["helper",["collection-grid-row-capstone"],null,[["challenges","challenge","summary","puuid","animationsEnabled","onTokenClick"],[["get",["challenges"]],["get",["entry"]],["get",["summary"]],["get",["puuid"]],["get",["animationsEnabled"]],["helper",["action"],[["get",[null]],"onTokenClick"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["entry","isCapstoneView"]]],null,1,0]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["static-attr","class","capstone-row-title-tooltip"],["flush-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","capstone-row-title-tooltip-container"],["flush-element"],["text","\\n                "],["open-element","div",[]],["static-attr","class","capstone-row-title-tooltip-name"],["flush-element"],["text","\\n                  "],["open-element","div",[]],["static-attr","class","challenges-icon-container"],["flush-element"],["text","\\n                    "],["open-element","div",[]],["dynamic-attr","class",["concat",["challenges-icon ",["unknown",["entry","icon"]]]]],["flush-element"],["close-element"],["text","\\n                  "],["close-element"],["text","\\n                  "],["open-element","div",[]],["flush-element"],["append",["unknown",["entry","name"]],false],["close-element"],["text","\\n                "],["close-element"],["text","\\n                "],["open-element","div",[]],["static-attr","class","capstone-row-title-tooltip-description"],["flush-element"],["append",["unknown",["entry","description"]],false],["close-element"],["text","\\n              "],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","challenge-group-title-container"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","challenge-group-title-icon-container"],["flush-element"],["text","\\n          "],["open-element","div",[]],["dynamic-attr","class",["concat",["challenges-icon ",["unknown",["entry","icon"]]]]],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","challenge-group-title"],["flush-element"],["text","\\n          "],["append",["unknown",["entry","title"]],false],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["bottom","system"]],3],["text","        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","challenge-group-title-horizontal-line"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["entry","isTitle"]]],null,4,2]],"locals":["entry","index"]},{"statements":[["block",["ember-collection"],null,[["class","items","cell-layout"],["item-grid-scrollable challenges-scroll-container",["get",["sortedChallenges"]],["helper",["mixed-grid-layout"],[["get",["itemSizes"]]],null]]],5]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(551);
            var s = n(511),
                i = n(114);
            e.exports = a.Ember.Component.extend({
                layout: n(552),
                classNames: ["challenges-collection-grid-row-capstone-component"],
                challenges: {},
                challenge: {},
                summary: {},
                puuid: null,
                currentLevel: a.Ember.computed.alias("challenge.currentLevel"),
                nextLevel: a.Ember.computed.alias("challenge.nextLevel"),
                levelToIconPath: a.Ember.computed.alias("challenge.levelToIconPath"),
                pointsAwarded: a.Ember.computed.alias("challenge.pointsAwarded"),
                nextMilestoneReward: a.Ember.computed.alias("challenge.nextMilestoneReward"),
                nextMilestoneRewardText: a.Ember.computed.alias("challenge.nextMilestoneRewardText"),
                isInactive: a.Ember.computed.equal("currentLevel", i.CHALLENGE_LEVELS.NONE),
                iconPath: a.Ember.computed("currentLevel", "nextLevel", "levelToIconPath", (function() {
                    return (0, s.getChallengeIcon)(this.get("challenge"))
                })),
                progressCurrentValue: a.Ember.computed.alias("challenge.currentValue"),
                progressNextValue: a.Ember.computed.alias("challenge.nextThreshold"),
                progressBarFill: a.Ember.computed("progressCurrentValue", "progressNextValue", (function() {
                    const e = this.get("progressCurrentValue"),
                        t = this.get("progressNextValue"),
                        n = t ? e / t * 100 : 0;
                    return Math.min(Math.max(n, 0), 100)
                })),
                challengesList: a.Ember.computed("challenge.childrenIds.[]", "challenges", (function() {
                    const e = this.get("challenges"),
                        t = [];
                    return (this.get("challenge.childrenIds") || []).forEach((n => {
                        const a = e[n];
                        a && t.push({
                            challenge: a
                        })
                    })), t
                })),
                backgroundLevel: a.Ember.computed("currentLevel", "nextLevel", (function() {
                    const e = this.get("currentLevel"),
                        t = this.get("nextLevel");
                    return e !== i.CHALLENGE_LEVELS.NONE ? e : t
                })),
                pointsContainerImagePath: a.Ember.computed("backgroundLevel", "isInactive", (function() {
                    const e = this.get("backgroundLevel");
                    if (!e) return "";
                    return this.get("isInactive") ? `${i.IMG_BASE_PATH}/challenge-card-points-container-${e.toLowerCase()}-inactive.png` : `${i.IMG_BASE_PATH}/challenge-card-points-container-${e.toLowerCase()}.png`
                })),
                actions: {
                    onTokenClick(e) {
                        this.sendAction("onTokenClick", e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "Qpqp484E",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\collection\\\\collection-grid-row-capstone.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","collection-grid-row-wrapper"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","collection-grid-row-capstone-background"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["collection-grid-row-capstone-tier ",["unknown",["challenge","currentLevel"]]]]],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","collection-grid-row-capstone-overlay"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","collection-grid-row-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","collection-grid-row-icon-container"],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","challenge-icon"],["dynamic-attr","src",["concat",[["unknown",["iconPath"]]]]],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["right","system"]],3],["text","    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","collection-grid-row-content"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","collection-grid-row-title-container"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","capstone-grid-row-title-wrapper"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","capstone-icon-container"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","challenges-icon capstone-light"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["flush-element"],["append",["unknown",["challenge","name"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","reward-text"],["flush-element"],["text","\\n"],["block",["if"],[["get",["nextMilestoneRewardText"]]],null,2],["text","        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","challenges-progress-bar-container"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","challenges-progress-bar"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenges-progress-meter-fill"],["dynamic-attr","style",["concat",["transform: scaleX(",["unknown",["progressBarFill"]],"%)"]]],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenges-progress-text"],["flush-element"],["text","\\n            "],["append",["unknown",["progressCurrentValue"]],false],["text","\\n            /\\n            "],["append",["unknown",["progressNextValue"]],false],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","collection-grid-row-description"],["flush-element"],["append",["unknown",["tra","challenge_capstone_group_container_description"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","collection-grid-row-challenges"],["flush-element"],["text","\\n"],["block",["each"],[["get",["challengesList"]]],null,1],["text","      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","challenge-card-points-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["pointsContainerImagePath"]]],null,0],["text","    "],["open-element","div",[]],["static-attr","class","challenge-card-points"],["flush-element"],["append",["unknown",["pointsAwarded"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","img",[]],["static-attr","class","challenge-card-points-container-background"],["dynamic-attr","src",["unknown",["pointsContainerImagePath"]],null],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["append",["helper",["collection-grid-row-capstone-token"],null,[["challenge","challenges","onTokenClick"],[["get",["entry","challenge"]],["get",["challenges"]],["helper",["action"],[["get",[null]],"onTokenClick"],null]]]],false],["text","\\n"]],"locals":["entry"]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","milestone-icon-container"],["flush-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","challenges-icon title"],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","title-container"],["flush-element"],["text","\\n              "],["append",["unknown",["nextMilestoneRewardText"]],false],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","level-icon-container"],["flush-element"],["text","\\n              "],["open-element","img",[]],["static-attr","class","level-icon"],["dynamic-attr","src",["concat",["/fe/lol-static-assets/images/challenges-shared/icon-token-",["unknown",["nextMilestoneReward","level"]],".png"]]],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["append",["helper",["challenge-item-tooltip"],null,[["puuid","challengeData","apexLadderUpdateTime","animationsEnabled"],[["get",["puuid"]],["get",["challenge"]],["get",["summary","apexLadderUpdateTime"]],false]]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(554);
            var s = n(511),
                i = n(114);
            e.exports = a.Ember.Component.extend({
                layout: n(555),
                classNames: ["challenges-collection-grid-row-group-component"],
                challenges: {},
                challenge: {},
                summary: {},
                puuid: null,
                currentLevel: a.Ember.computed.alias("challenge.currentLevel"),
                nextLevel: a.Ember.computed.alias("challenge.nextLevel"),
                levelToIconPath: a.Ember.computed.alias("challenge.levelToIconPath"),
                pointsAwarded: a.Ember.computed.alias("challenge.pointsAwarded"),
                nextMilestoneReward: a.Ember.computed.alias("challenge.nextMilestoneReward"),
                nextMilestoneRewardText: a.Ember.computed.alias("challenge.nextMilestoneRewardText"),
                isInactive: a.Ember.computed.equal("currentLevel", i.CHALLENGE_LEVELS.NONE),
                iconPath: a.Ember.computed("currentLevel", "nextLevel", "levelToIconPath", (function() {
                    return (0, s.getChallengeIcon)(this.get("challenge"))
                })),
                progressCurrentValue: a.Ember.computed.alias("challenge.currentValue"),
                progressNextValue: a.Ember.computed.alias("challenge.nextThreshold"),
                progressBarFill: a.Ember.computed("progressCurrentValue", "progressNextValue", (function() {
                    const e = this.get("progressCurrentValue"),
                        t = this.get("progressNextValue"),
                        n = t ? e / t * 100 : 0;
                    return Math.min(Math.max(n, 0), 100)
                })),
                challengesList: a.Ember.computed("challenge.childrenIds.[]", "challenges", (function() {
                    const e = this.get("challenges"),
                        t = [];
                    return (this.get("challenge.childrenIds") || []).forEach((n => {
                        const a = e[n];
                        a && t.push({
                            challenge: a
                        })
                    })), t
                })),
                backgroundLevel: a.Ember.computed("currentLevel", "nextLevel", (function() {
                    const e = this.get("currentLevel"),
                        t = this.get("nextLevel");
                    return e !== i.CHALLENGE_LEVELS.NONE ? e : t
                })),
                pointsContainerImagePath: a.Ember.computed("backgroundLevel", "isInactive", (function() {
                    const e = this.get("backgroundLevel");
                    if (!e) return "";
                    return this.get("isInactive") ? `${i.IMG_BASE_PATH}/challenge-card-points-container-${e.toLowerCase()}-inactive.png` : `${i.IMG_BASE_PATH}/challenge-card-points-container-${e.toLowerCase()}.png`
                }))
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "92UsV2mt",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\collection\\\\collection-grid-row-group.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","collection-grid-row-wrapper"],["flush-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["collection-grid-row-group-background ",["unknown",["challenge","currentLevel"]]]]],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["collection-grid-row-group-tier ",["unknown",["challenge","currentLevel"]]]]],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","collection-grid-row-group-overlay"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","collection-grid-row-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","collection-grid-row-icon-container"],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","challenge-icon"],["dynamic-attr","src",["concat",[["unknown",["iconPath"]]]]],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["right","system"]],3],["text","    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","collection-grid-row-content"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","collection-grid-row-title-container"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","capstone-grid-row-title-wrapper"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","group-icon-container"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","challenges-icon medal"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["flush-element"],["append",["unknown",["challenge","name"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","reward-text"],["flush-element"],["text","\\n"],["block",["if"],[["get",["nextMilestoneRewardText"]]],null,2],["text","        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","challenges-progress-bar-container"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","challenges-progress-bar"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenges-progress-meter-fill"],["dynamic-attr","style",["concat",["transform: scaleX(",["unknown",["progressBarFill"]],"%)"]]],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenges-progress-text"],["flush-element"],["text","\\n            "],["append",["unknown",["progressCurrentValue"]],false],["text","\\n            /\\n            "],["append",["unknown",["progressNextValue"]],false],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","collection-grid-row-description"],["flush-element"],["append",["unknown",["tra","challenge_group_capstone_description"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","collection-grid-individual-challenges"],["flush-element"],["text","\\n"],["block",["each"],[["get",["challengesList"]]],null,1],["text","  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","challenge-card-points-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["pointsContainerImagePath"]]],null,0],["text","    "],["open-element","div",[]],["static-attr","class","challenge-card-points"],["flush-element"],["append",["unknown",["pointsAwarded"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","img",[]],["static-attr","class","challenge-card-points-container-background"],["dynamic-attr","src",["unknown",["pointsContainerImagePath"]],null],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","collection-grid-group-card"],["flush-element"],["text","\\n        "],["append",["helper",["challenge-item"],null,[["challengeData","apexLadderUpdateTime","animationsEnabled"],[["get",["entry","challenge"]],["get",["summary","apexLadderUpdateTime"]],["get",["animationsEnabled"]]]]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":["entry"]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","milestone-icon-container"],["flush-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","challenges-icon title"],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","title-container"],["flush-element"],["text","\\n              "],["append",["unknown",["nextMilestoneRewardText"]],false],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","level-icon-container"],["flush-element"],["text","\\n              "],["open-element","img",[]],["static-attr","class","level-icon"],["dynamic-attr","src",["concat",["/fe/lol-static-assets/images/challenges-shared/icon-token-",["unknown",["nextMilestoneReward","level"]],".png"]]],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["append",["helper",["challenge-item-tooltip"],null,[["puuid","challengeData","apexLadderUpdateTime","animationsEnabled"],[["get",["puuid"]],["get",["challenge"]],["get",["summary","apexLadderUpdateTime"]],false]]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(557);
            var s = n(511);
            e.exports = a.Ember.Component.extend({
                layout: n(558),
                classNames: ["challenges-collection-grid-row-capstone-token-component"],
                challenges: {},
                challenge: null,
                challengeName: a.Ember.computed.alias("challenge.name"),
                pointsAwarded: a.Ember.computed.alias("challenge.pointsAwarded"),
                childrenIds: a.Ember.computed.alias("challenge.childrenIds"),
                iconPath: a.Ember.computed("challenge", (function() {
                    return (0, s.getChallengeIcon)(this.get("challenge"))
                })),
                pointsAwardedOtherTotal: a.Ember.computed("challenges", "childrenIds", (function() {
                    const e = this.get("challenges"),
                        t = this.get("childrenIds") || [];
                    let n = 0;
                    return t.forEach((t => {
                        const a = e[t] || {};
                        n += a.pointsAwarded || 0
                    })), n
                })),
                groupPointsTotal: a.Ember.computed("pointsAwarded", "pointsAwardedOtherTotal", (function() {
                    return (this.get("pointsAwarded") || 0) + (this.get("pointsAwardedOtherTotal") || 0)
                })),
                txtPointsAwarded: a.Ember.computed("tra", "pointsAwarded", (function() {
                    const e = this.get("pointsAwarded");
                    return this.get("tra").formatString("challenge_group_capstone_tooltip_points", {
                        points: e
                    })
                })),
                txtPointsAwardedOtherTotal: a.Ember.computed("tra", "pointsAwardedOtherTotal", (function() {
                    const e = this.get("pointsAwardedOtherTotal");
                    return this.get("tra").formatString("challenge_group_capstone_tooltip_points", {
                        points: e
                    })
                })),
                txtGroupPointsTotal: a.Ember.computed("tra", "groupPointsTotal", (function() {
                    const e = this.get("groupPointsTotal");
                    return this.get("tra").formatString("challenge_group_capstone_tooltip_points", {
                        points: e
                    })
                })),
                mouseUp() {
                    const e = this.get("challenge.id");
                    this.sendAction("onTokenClick", e)
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "HMIJmXZp",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\collection\\\\collection-grid-row-capstone-token.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","img",[]],["static-attr","class","capstone-token"],["dynamic-attr","src",["concat",[["unknown",["iconPath"]]]]],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["right","system"]],0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["static-attr","class","capstone-row-token-tooltip"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","capstone-row-token-tooltip-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","capstone-row-token-tooltip-row"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","capstone-row-token-tooltip-name"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenges-medal-icon-container"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","challenges-icon medal"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["flush-element"],["append",["unknown",["challengeName"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","capstone-row-token-tooltip-value"],["flush-element"],["append",["helper",["sanitize"],[["get",["txtPointsAwarded"]]],null],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","capstone-row-token-tooltip-row"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","capstone-row-token-tooltip-name"],["flush-element"],["append",["unknown",["tra","challenge_group_capstone_tooltip_name_other"]],false],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","capstone-row-token-tooltip-value"],["flush-element"],["append",["helper",["sanitize"],[["get",["txtPointsAwardedOtherTotal"]]],null],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","capstone-row-token-tooltip-horizontal-line"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","capstone-row-token-tooltip-row"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","capstone-row-token-tooltip-name"],["flush-element"],["append",["unknown",["tra","challenge_group_capstone_tooltip_name_total"]],false],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","capstone-row-token-tooltip-value"],["flush-element"],["append",["helper",["sanitize"],[["get",["txtGroupPointsTotal"]]],null],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            n(560);
            const s = "/v2/account/LCUPreferences/lol-challenges",
                i = "/v1/namespaces/Challenges/FeatureIntroEnabled",
                r = "introCollectionModalShown";
            e.exports = a.Ember.Component.extend({
                layout: n(561),
                classNames: ["challenges-collection-intro-modal-component"],
                showIntroModal: !1,
                introEnabledState: !1,
                isIntroModalShowing: a.Ember.computed.and("showIntroModal", "introEnabledState"),
                init() {
                    this._super(...arguments), this.settingsBinding = (0, a.dataBinding)("/lol-settings", a.socket), this.platformConfigBinding = (0, a.dataBinding)("/lol-platform-config", a.socket), this.settingsBinding.addObserver(s, this, this.handleChallengesSettings), this.platformConfigBinding.addObserver(i, this, this.handleIntroEnabled)
                },
                willDestroyElement() {
                    this._super(...arguments), this.settingsBinding.removeObserver(s, this), this.platformConfigBinding.removeObserver(i, this)
                },
                handleIntroEnabled(e) {
                    null == e ? this.set("introEnabledState", !0) : this.set("introEnabledState", !!e)
                },
                handleChallengesSettings(e) {
                    e && e.data && e.data[r] || this.set("showIntroModal", !0)
                },
                actions: {
                    markIntroModalAsRead() {
                        this.settingsBinding.patch(s, {
                            schemaVersion: 1,
                            data: {
                                [r]: !0
                            }
                        })
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "qdcEiGg2",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\collection\\\\collection-intro-modal.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","lc-alert-modal",[]],["dynamic-attr","okText",["concat",[["unknown",["tra","challenge_intro_modal_button"]]]]],["dynamic-attr","onOk",["helper",["action"],[["get",[null]],"markIntroModalAsRead"],null],null],["dynamic-attr","dismissible",true,null],["static-attr","dismissibleType","inside"],["dynamic-attr","open",["unknown",["isIntroModalShowing"]],null],["flush-element"],["text","\\n  "],["open-element","lc-modal-content",[]],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","challenges-intro-modal"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","challenges-intro-modal-header"],["flush-element"],["text","\\n        "],["open-element","img",[]],["static-attr","src","/fe/lol-static-assets/images/challenges-shared/challenge-intro-modal-diamond.png"],["flush-element"],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","challenges-intro-modal-title-wrapper"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenges-intro-modal-line challenges-intro-modal-line-left"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenges-intro-modal-title"],["flush-element"],["append",["unknown",["tra","challenge_intro_modal_title"]],false],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenges-intro-modal-line challenges-intro-modal-line-right"],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","challenges-intro-modal-description"],["flush-element"],["append",["unknown",["tra","challenge_intro_modal_description"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","challenges-intro-modal-tiles"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","challenges-intro-modal-tile challenges-intro-modal-tile-1"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenges-intro-modal-tile-title"],["flush-element"],["append",["unknown",["tra","challenge_intro_modal_tile_1_title"]],false],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenges-intro-modal-tile-description"],["flush-element"],["append",["unknown",["tra","challenge_intro_modal_tile_1_description"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","challenges-intro-modal-tile challenges-intro-modal-tile-2"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenges-intro-modal-tile-title"],["flush-element"],["append",["unknown",["tra","challenge_intro_modal_tile_2_title"]],false],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenges-intro-modal-tile-description"],["flush-element"],["append",["unknown",["tra","challenge_intro_modal_tile_2_description"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","challenges-intro-modal-tile challenges-intro-modal-tile-3"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenges-intro-modal-tile-title"],["flush-element"],["append",["unknown",["tra","challenge_intro_modal_tile_3_title"]],false],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","challenges-intro-modal-tile-description"],["flush-element"],["append",["unknown",["tra","challenge_intro_modal_tile_3_description"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(467),
                s = n(114),
                i = n(493),
                r = {
                    AUDIO_CHANNEL: a.AUDIO_CHANNEL,
                    AUDIO_TYPE: a.AUDIO_TYPE,
                    CHALLENGE_LEVELS: s.CHALLENGE_LEVELS,
                    CHALLENGE_CATEGORIES: s.CHALLENGE_CATEGORIES,
                    CHALLENGE_CATEGORY_IDS: s.CHALLENGE_CATEGORY_IDS,
                    CHALLENGE_MILESTONE_REWARDS: s.CHALLENGE_MILESTONE_REWARDS,
                    CHALLENGE_REWARD_CATEGORIES: s.CHALLENGE_REWARD_CATEGORIES,
                    CHALLENGE_LEVEL_TO_ORDINAL: s.CHALLENGE_LEVEL_TO_ORDINAL,
                    SORTED_CHALLENGE_LEVELS: s.SORTED_CHALLENGE_LEVELS,
                    PRESTIGE_LEVELS: i.PRESTIGE_LEVELS,
                    REKINDLED_MILESTONE_MARKER: s.REKINDLED_MILESTONE_MARKER,
                    CHALLENGE_FLAG_NAMES: s.CHALLENGE_FLAG_NAMES,
                    CHALLENGE_MINI_CRYSTAL_PATH: s.CHALLENGE_MINI_CRYSTAL_PATH,
                    DEFAULT_CHALLENGE_CRYSTAL_LEVEL: s.DEFAULT_CHALLENGE_CRYSTAL_LEVEL,
                    getNextLevel: s.getNextLevel,
                    getFlagValueOrDefault: s.getFlagValueOrDefault,
                    getChallengeMiniCrystal: s.getChallengeMiniCrystal
                };
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = v(n(453)),
                s = v(n(457)),
                i = v(n(460)),
                r = v(n(463)),
                l = v(n(466)),
                o = v(n(470)),
                c = v(n(473)),
                d = v(n(479)),
                u = v(n(476)),
                m = v(n(564)),
                p = v(n(567)),
                h = v(n(482)),
                g = v(n(483)),
                f = v(n(487)),
                _ = v(n(488)),
                A = v(n(490)),
                b = v(n(520));

            function v(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            var E = {
                ChallengeBannerTitleComponent: a.default,
                ChallengeBannerTokenComponent: s.default,
                ChallengeBannerTokenContainerComponent: i.default,
                ChallengeCardHeaderComponent: r.default,
                ChallengeCardComponent: l.default,
                ChallengeItemFooterComponent: o.default,
                ChallengeItemTooltipComponent: c.default,
                ChallengeItemComponent: d.default,
                ChallengeRequirementsGrid: u.default,
                EternalsItemTooltipComponent: m.default,
                EternalsItemComponent: p.default,
                GameDataService: h.default,
                IdentityCustomizerTokenComponent: b.default,
                PlayerTitleTooltipComponent: g.default,
                RiotclientService: f.default,
                SummonerService: _.default,
                SharedNotificationsService: A.default
            };
            t.default = E
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(565)) && a.__esModule ? a : {
                    default: a
                };
            n(566);
            var r = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["eternals-item-tooltip-component"],
                eternal: null,
                isLevelFiveOrGreater: !1,
                categoryLowercase: s.Ember.computed("eternal.category", (function() {
                    return (this.get("eternal.category") || "").toLowerCase()
                })),
                rightHeaderClass: s.Ember.computed("isLevelFiveOrGreater", (function() {
                    return this.get("isLevelFiveOrGreater") ? "eternal-personal-best" : "eternal-dormant"
                })),
                rightHeaderValue: s.Ember.computed("isLevelFiveOrGreater", "eternal.best", (function() {
                    return this.get("isLevelFiveOrGreater") ? this.get("eternal.best") : this.get("tra.postgame_eternals_tooltip_header_dormant")
                })),
                progressBarFillPercent: s.Ember.computed("eternal.totalProgressPercent", (function() {
                    const e = this.get("eternal.totalProgressPercent") || 0;
                    return Math.min(e, 100)
                }))
            });
            t.default = r
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "RN0WSu69",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\eternals-item-tooltip.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\components\\\\eternals-item-tooltip.js\\" "],["text","\\n"],["append",["helper",["challenge-card-header"],null,[["leftDetailClass","leftValue","showLeftHeaderDetail","rightDetailClass","rightValue","showRightHeaderDetail"],["eternal",["get",["leftHeaderValue"]],true,["get",["rightHeaderClass"]],["get",["rightHeaderValue"]],true]]],false],["text","\\n"],["open-element","div",[]],["static-attr","class","eternals-tooltip-body"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","eternals-tooltip-content-container"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","eternals-tooltip-content-icon"],["dynamic-attr","src",["concat",[["unknown",["eternal","imageUrl"]]]]],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","eternals-tooltip-content"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","eternals-tooltip-content-name"],["flush-element"],["append",["unknown",["eternal","statstoneName"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","eternals-tooltip-content-value"],["flush-element"],["append",["unknown",["eternal","value"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","eternals-tooltip-description"],["flush-element"],["append",["unknown",["eternal","description"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","challenges-progress-bar-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","challenges-progress-bar"],["flush-element"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["eternals-progress-meter-fill ",["unknown",["categoryLowercase"]]]]],["dynamic-attr","style",["concat",["transform: scaleX(",["unknown",["progressBarFillPercent"]],"%)"]]],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","challenges-progress-text"],["flush-element"],["append",["unknown",["eternal","value"]],false],["text"," / "],["append",["unknown",["eternal","nextMilestone"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(568)) && a.__esModule ? a : {
                    default: a
                };
            n(569);
            var r = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["eternals-item-component"],
                classNameBindings: ["isRekindled", "isMilestone"],
                animationsEnabled: !0,
                eternal: null,
                willAnimate: !1,
                animateStartDelay: 0,
                isMilestone: s.Ember.computed.bool("eternal.isMilestone"),
                isLevel5OrGreater: s.Ember.computed.gte("eternal.level", 5),
                isNewBest: s.Ember.computed.and("eternal.isNewBest", "isLevel5OrGreater"),
                isRekindled: s.Ember.computed.and("isLevel5OrGreater", "eternal.isMilestone"),
                animationObserver: s.Ember.on("didInsertElement", s.Ember.observer("willAnimate", (function() {
                    this.get("willAnimate") && this._playIntroAnimation()
                }))),
                _playIntroAnimation() {
                    const e = this.get("animateStartDelay") || 0,
                        t = this.element.querySelector(".eternals-progress-bar-fill"),
                        n = this.element.querySelector(".eternals-earned-progress-bar-fill"),
                        a = this.get("progressBarPrevFill"),
                        i = this.get("progressBarTotalFill");
                    s.gsapCustomEase.create("wave", "M 0,0 C0.9,0 0.1,1 1,1");
                    const r = new s.gsap.TimelineMax({
                        paused: !0
                    });
                    t && r.fromTo(t, .25, {
                        scaleX: "0"
                    }, {
                        scaleX: a,
                        ease: "wave"
                    }, `start+=${e+.4}`), n && r.fromTo(n, .25, {
                        scaleX: "0"
                    }, {
                        scaleX: i,
                        ease: "wave"
                    }, `start+=${e+.4}`), r.play()
                },
                headerStyle: s.Ember.computed("isMilestone", (function() {
                    return this.get("isMilestone") ? "eternal-new-milestone" : "eternal"
                })),
                headerValue: s.Ember.computed("isLevel5OrGreater", "eternal.level", (function() {
                    return this.get("isLevel5OrGreater") ? this.get("eternal.level") : `${this.get("eternal.level")}/5`
                })),
                categoryLowercase: s.Ember.computed("eternal.category", (function() {
                    return (this.get("eternal.category") || "").toLowerCase()
                })),
                progressDetailText: s.Ember.computed("isNewBest", "isMilestone", "isRekindled", "eternal.delta", "eternal.level", (function() {
                    const e = this.get("isRekindled"),
                        t = this.get("isMilestone"),
                        n = this.get("isNewBest"),
                        a = 5 === this.get("eternal.level");
                    return e && a ? this.get("tra.career_postgame_challenge_eternal_update_rekindled") : t ? this.get("tra.career_postgame_challenge_eternal_update_milestone_reached") : n ? this.get("tra.career_postgame_challenge_eternal_update_personal_best") : `+${this.get("eternal.delta")}`
                })),
                progressBarPrevFill: s.Ember.computed("eternal.totalProgressPercent", "eternal.newProgressPercent", (function() {
                    const e = this.get("eternal.newProgressPercent") || 0,
                        t = (this.get("eternal.totalProgressPercent") || 0) - e;
                    return Math.min(t, 100) / 100
                })),
                progressBarTotalFill: s.Ember.computed("eternal.newProgressPercent", (function() {
                    const e = this.get("eternal.totalProgressPercent") || 0;
                    return Math.min(e, 100) / 100
                }))
            });
            t.default = r
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "w5nO/xR+",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\templates\\\\components\\\\eternals-item.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\challenges\\\\addon\\\\components\\\\eternals-item.js\\" "],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type","pseudoPartSelector"],["right","system","eternals-item-tooltip"]],3],["block",["challenge-card"],null,[["isLegacyStyle","isEternal","animationsEnabled"],[true,true,["get",["animationsEnabled"]]]],2]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","eternals-item-value"],["flush-element"],["append",["unknown",["eternal","value"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","eternals-item-personal-best-container"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","eternals-item-personal-best-icon"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","eternals-item-personal-best-value"],["flush-element"],["append",["unknown",["eternal","best"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["eternals-item-content ",["helper",["if"],[["get",["isMilestone"]],"is-milestone"],null]," ",["helper",["if"],[["get",["isNewBest"]],"is-new-best"],null]]]],["flush-element"],["text","\\n    "],["append",["helper",["challenge-card-header"],null,[["leftDetailClass","leftValue","showLeftHeaderDetail"],[["get",["headerStyle"]],["get",["headerValue"]],true]]],false],["text","\\n    "],["open-element","img",[]],["static-attr","class","eternals-item-image"],["dynamic-attr","src",["concat",[["unknown",["eternal","imageUrl"]]]]],["flush-element"],["close-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","eternals-progress-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","eternals-progress-detail"],["flush-element"],["append",["unknown",["progressDetailText"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","eternals-item-name"],["flush-element"],["append",["unknown",["eternal","statstoneName"]],false],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["isNewBest"]]],null,1,0],["text","    "],["close-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","eternals-progress-bar-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","eternals-earned-progress-bar-fill"],["dynamic-attr","style",["concat",["transform: matrix(",["unknown",["progressBarTotalFill"]],", 0, 0, 1, 0, 0)"]]],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["eternals-progress-bar-fill ",["unknown",["categoryLowercase"]]]]],["dynamic-attr","style",["concat",["transform: matrix(",["unknown",["progressBarPrevFill"]],", 0, 0, 1, 0, 0)"]]],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["append",["helper",["eternals-item-tooltip"],null,[["eternal","isLevelFiveOrGreater","leftHeaderValue"],[["get",["eternal"]],["get",["isLevel5OrGreater"]],["get",["headerValue"]]]]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            t.default = class {
                constructor() {
                    this._privateApi = n(571).default
                }
                showReportModal(e, t, n, a) {
                    this._privateApi.showReportModal(e, t, n, a)
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = o(n(388)),
                i = o(n(572)),
                r = o(n(575)),
                l = o(n(578));

            function o(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const c = "ReportModal";
            var d = new class {
                constructor() {
                    this._registerReportModalComponent()
                }
                _registerReportModalComponent() {
                    const {
                        PlayerNameComponent: e
                    } = a.SharedComponentsApi.getSharedEmberComponents(), t = {
                        tra: a.traService,
                        ReportModalComponent: s.default,
                        ReportHeaderComponent: i.default,
                        ReportCategoryComponent: r.default,
                        PlayerNameComponent: e,
                        ReportModalDataService: l.default,
                        ComponentFactory: a.ComponentFactory
                    };
                    a.EmberApplicationFactory.setFactoryDefinition(c, t)
                }
                showReportModal(e, t, n, s) {
                    a.logger.trace("Open report modal"), this._reportModalInstance = a.ComponentFactory.create({
                        type: c,
                        data: {
                            reportedPlayer: e,
                            championSquarePortraitPath: t,
                            product: n,
                            reportLocation: s
                        }
                    });
                    const {
                        domNode: i
                    } = this._reportModalInstance, r = a.ModalManager.add({
                        type: "DialogConfirm",
                        data: {
                            contents: i,
                            acceptText: a.traService.get("report_modal_accept_button"),
                            closeButton: !0,
                            enterEnabled: !1
                        }
                    });
                    return i.addEventListener("disableacceptbutton", (e => {
                        r.disableAcceptButton(), e.stopPropagation()
                    })), i.addEventListener("enableacceptbutton", (e => {
                        r.enableAcceptButton(), e.stopPropagation()
                    })), r.acceptPromise.then((() => {
                        i.querySelector(".report-modal").dispatchEvent(new Event("reportPlayerClicked"))
                    }), (() => {
                        i.querySelector(".report-modal").dispatchEvent(new Event("closeModalClicked"))
                    })).catch((() => {})), r
                }
            };
            t.default = d
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(573)) && a.__esModule ? a : {
                    default: a
                };
            n(574);
            var r = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["report-header"],
                hasChampionSquarePortrait: s.Ember.computed.notEmpty("championSquarePortraitPath")
            });
            t.default = r
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "BO7/yyib",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\report-modal\\\\addon\\\\templates\\\\report-header.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\report-modal\\\\addon\\\\styles\\\\report-header.styl\\" js-path=\\"null\\" "],["text","\\n"],["block",["if"],[["get",["hasChampionSquarePortrait"]]],null,1],["text","\\n"],["open-element","div",[]],["static-attr","class","report-header-text"],["flush-element"],["text","\\n  "],["open-element","span",[]],["static-attr","class","report-header-title"],["flush-element"],["text","\\n    "],["append",["unknown",["tra","report_modal_header_title"]],false],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","span",[]],["static-attr","class","report-header-summoner-name"],["flush-element"],["text","\\n    "],["append",["helper",["player-name"],null,[["format","puuid","summonerName"],["full",["get",["reportedPlayer","puuid"]],["get",["reportedPlayer","summonerName"]]]]],false],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    \\t"],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["championSquarePortraitPath"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","report-header-icon"],["flush-element"],["text","\\n"],["block",["uikit-framed-icon"],null,[["borderWidth"],[2]],0],["text","  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(576)) && a.__esModule ? a : {
                    default: a
                };
            n(577);
            var r = s.Ember.Component.extend({
                layout: i.default,
                classNames: ["report-category"],
                tagName: "li",
                hasDescription: s.Ember.computed.notEmpty("category.descriptionKey"),
                categoryCheckboxId: s.Ember.computed("category.categoryId", (function() {
                    return "category-checkbox-" + this.get("category.categoryId").toLowerCase()
                })),
                title: s.Ember.computed("tra", "category.titleKey", (function() {
                    return this.get("tra").get(this.get("category.titleKey"))
                })),
                description: s.Ember.computed("tra", "category.descriptionKey", (function() {
                    return this.get("tra").get(this.get("category.descriptionKey"))
                }))
            });
            t.default = r
        }, (e, t, n) => {
            const a = n(1).Ember;
            e.exports = a.HTMLBars.template({
                id: "6+9wid0y",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\report-modal\\\\addon\\\\templates\\\\report-category.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\__MAIN__\\\\LeagueClientContent_Beta\\\\15692\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-shared-components\\\\src\\\\lib\\\\report-modal\\\\addon\\\\styles\\\\report-category.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","report-category-checkbox"],["flush-element"],["text","\\n  "],["open-element","lol-uikit-flat-checkbox",[]],["static-attr","class","report-category-flat-checkbox"],["flush-element"],["text","\\n      "],["append",["helper",["input"],null,[["slot","type","id","checked","disabled"],["input","checkbox",["get",["categoryCheckboxId"]],["get",["category","isChecked"]],["get",["category","isDisabled"]]]]],false],["text","\\n      "],["open-element","label",[]],["static-attr","slot","label"],["static-attr","class","flat-checkbox-label"],["dynamic-attr","for",["concat",[["unknown",["categoryCheckboxId"]]]]],["flush-element"],["open-element","span",[]],["static-attr","class","flat-checkbox-span"],["flush-element"],["close-element"],["text","\\n        "],["open-element","span",[]],["static-attr","class","report-category-text-title"],["flush-element"],["text","\\n          "],["append",["unknown",["title"]],false],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["hasDescription"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","span",[]],["static-attr","class","report-category-text-description"],["flush-element"],["text","\\n    "],["append",["unknown",["description"]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            var a = n(1),
                s = n(389);
            const i = "couldShowRemedyVerbalAbuseModal";
            e.exports = a.Ember.Service.extend({
                inGameReportData: [],
                gameIdsWithVerbalAbuseReports: [],
                couldShowRemedyVerbalAbuseModalPreference: !0,
                isVerbalAbuseRemedyEnabled: !1,
                isVerbalAbuseRemedyEnabledPath: "/v1/config/is-verbal-abuse-remedy-modal-enabled",
                endOfGameReportPath: "/v1/end-of-game-reports",
                matchHistoryReportPath: "/v1/match-history-reports",
                remedyBasePath: "/lol-remedy",
                settingsBasePath: "/lol-settings",
                playerReportSenderBasePath: "/lol-player-report-sender",
                navigationPreferencesPath: "/v2/account/LCUPreferences/lol-navigation",
                gameIdsWithVerbalAbuseReportPath: "/v1/game-ids-with-verbal-abuse-report",
                init() {
                    this._super(...arguments), this.initDataBindings(), this.getRequisiteModalData(), this.initObservers()
                },
                willDestroy() {
                    this.removeObservers(), this.removeDataBindings()
                },
                initDataBindings() {
                    this.remedyBinding = (0, a.dataBinding)(this.get("remedyBasePath"), a.socket), this.playerReportSenderBinding = (0, a.dataBinding)(this.get("playerReportSenderBasePath"), a.socket), this.settingsBinding = (0, a.dataBinding)(this.get("settingsBasePath"), a.socket)
                },
                getRequisiteModalData() {
                    this.settingsBinding.get(this.get("navigationPreferencesPath")).then((e => {
                        e && e.data && void 0 !== !e.data[i] ? this.set("couldShowRemedyVerbalAbuseModalPreference", e.data[i]) : this.set("couldShowRemedyVerbalAbuseModalPreference", !0)
                    }))
                },
                initObservers() {
                    this.remedyBinding.observe(this.get("isVerbalAbuseRemedyEnabledPath"), this, this._handleIsVerbalAbuseRemedyEnabledUpdate), this.playerReportSenderBinding.observe("/v1/in-game-reports", this, this._handleInGameReportsUpdate), this.playerReportSenderBinding.observe(this.get("gameIdsWithVerbalAbuseReportPath"), this, (e => {
                        this.set("gameIdsWithVerbalAbuseReports", e || [])
                    }))
                },
                removeObservers() {
                    this.playerReportSenderBinding.removeObserver(this.get("playerReportSenderBasePath"), this)
                },
                removeDataBindings() {
                    this.playerReportSenderBinding = null
                },
                sendPlayerReport: function(e, t) {
                    return t === s.CLIENT_REPORT_LOCATIONS.MATCH_HISTORY ? this.playerReportSenderBinding.post(this.get("matchHistoryReportPath"), e) : this.playerReportSenderBinding.post(this.get("endOfGameReportPath"), e)
                },
                _handleInGameReportsUpdate(e) {
                    const t = {};
                    e.forEach((e => {
                        e && e.offenderPuuid && (t[e.offenderPuuid] = e)
                    })), this.set("inGameReportData", t)
                },
                _handleIsVerbalAbuseRemedyEnabledUpdate(e) {
                    this.set("isVerbalAbuseRemedyEnabled", e)
                }
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            t.default = class {
                constructor() {
                    this._privateApi = n(580).default
                }
                showVerbalAbuseRemedyModal() {
                    this._privateApi.showVerbalAbuseRemedyModal()
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a, s = n(1),
                i = (a = n(581)) && a.__esModule ? a : {
                    default: a
                };
            const r = "VerbalAbuseRemedyModal";
            var l = new class {
                constructor() {
                    this._registerVerbalAbuseRemedyModalComponent()
                }
                _registerVerbalAbuseRemedyModalComponent() {
                    const {
                        VerbalAbuseRemedyModalComponent: e,
                        ChatChannelSelectorComponent: t,
                        PlayerBlockSelectorComponent: n,
                        PlayerBlockSelectionComponent: a,
                        PlayerNameComponent: l
                    } = s.SharedComponentsApi.getSharedEmberComponents(), o = {
                        tra: s.traService,
                        VerbalAbuseRemedyModalComponent: e,
                        ChatChannelSelectorComponent: t,
                        PlayerBlockSelectorComponent: n,
                        PlayerBlockSelectionComponent: a,
                        PlayerNameComponent: l,
                        VerbalAbuseRemedyService: i.default,
                        ComponentFactory: s.ComponentFactory
                    };
                    s.EmberApplicationFactory.setFactoryDefinition(r, o)
                }
                showVerbalAbuseRemedyModal() {
                    s.logger.trace("Open report modal"), this._verbalAbuseRemedyModalInstance = s.ComponentFactory.create({
                        type: r
                    });
                    const {
                        domNode: e
                    } = this._verbalAbuseRemedyModalInstance;
                    return s.ModalManager.add({
                        type: "DialogConfirm",
                        data: {
                            contents: e,
                            acceptText: s.traService.get("verbal_abuse_remedy_modal_confirm_button"),
                            closeButton: !0,
                            enterEnabled: !1
                        }
                    })
                }
            };
            t.default = l
        }, (e, t, n) => {
            "use strict";
            var a = n(1);
            const s = "HUD",
                i = "ChatChannelVisibility";
            e.exports = a.Ember.Service.extend({
                chatChannelOnLoad: null,
                blockedPuuidsOnLoad: null,
                selectedChatChannel: "0",
                blockedPuuids: [],
                eogStatsBlock: {},
                chatBasePath: "/lol-chat",
                lolGameSettingsBasePath: "/lol-game-settings",
                eogBasePath: "/lol-end-of-game",
                settingsBasePath: "/lol-settings",
                blockedPlayersPath: "/v1/blocked-players",
                gameSettingsPath: "/v1/game-settings",
                eogStatsBlockPath: "/v1/eog-stats-block",
                navigationPreferencesPath: "/v2/account/LCUPreferences/lol-navigation",
                localPuuid: a.Ember.computed.alias("eogStatsBlock.localPlayer.puuid"),
                playerTeam: a.Ember.computed("eogStatsBlock.teams.[]", (function() {
                    const e = this.get("eogStatsBlock.teams");
                    return e ? e.find((e => e.isPlayerTeam)) : {
                        players: []
                    }
                })),
                enemyTeams: a.Ember.computed("eogStatsBlock.teams.[]", (function() {
                    const e = this.get("eogStatsBlock.teams");
                    return e ? e.filter((e => !e.isPlayerTeam)) : []
                })),
                playerTeamMembers: a.Ember.computed("playerTeam", "localPuuid", (function() {
                    const e = this.get("playerTeam"),
                        t = this.get("localPuuid");
                    return e.players.filter((e => e.puuid !== t))
                })),
                enemyTeamMembers: a.Ember.computed("enemyTeams.[]", (function() {
                    return this.get("enemyTeams").flatMap((e => e.players))
                })),
                init() {
                    this._super(...arguments), this.initDataBindings(), this.getRequisiteModalData(), this.initObservers()
                },
                willDestroy() {
                    this.removeObservers(), this.removeDataBindings()
                },
                initDataBindings() {
                    this.chatBinding = (0, a.dataBinding)(this.get("chatBasePath"), a.socket), this.lolGamesettingsBinding = (0, a.dataBinding)(this.get("lolGameSettingsBasePath"), a.socket), this.eogBinding = (0, a.dataBinding)(this.get("eogBasePath"), a.socket), this.settingsBinding = (0, a.dataBinding)(this.get("settingsBasePath"), a.socket)
                },
                getRequisiteModalData() {
                    this.eogBinding.get(this.get("eogStatsBlockPath")).then((e => {
                        this.set("eogStatsBlock", e)
                    }))
                },
                initObservers() {
                    this.chatBinding.observe(this.get("blockedPlayersPath"), this, this._handleBlockedPlayersUpdate), this.lolGamesettingsBinding.observe(this.get("gameSettingsPath"), this, this._handleGameSettingsUpdate)
                },
                removeObservers() {
                    this.chatBinding.removeObserver(this.get("playerReportSenderBasePath"), this), this.lolGamesettingsBinding.removeObserver(this.get("lolGameSettingsBasePath"), this)
                },
                removeDataBindings() {
                    this.chatBinding = null, this.lolGamesettingsBinding = null, this.eogBinding = null
                },
                togglePlayerBlock(e) {
                    return this.get("blockedPuuids").includes(e) ? this.chatBinding.delete(`${this.get("blockedPlayersPath")}/${e}`) : this.chatBinding.post(this.get("blockedPlayersPath"), {
                        puuid: e
                    })
                },
                setSelectedChatChannel(e) {
                    this.lolGamesettingsBinding.get(this.get("gameSettingsPath")).then((t => {
                        t && t[s] && (t[s][i] = e, this.lolGamesettingsBinding.patch(this.get("gameSettingsPath"), t))
                    }))
                },
                setCouldShowModalPreference(e) {
                    this.settingsBinding.patch(this.get("navigationPreferencesPath"), {
                        data: {
                            couldShowRemedyVerbalAbuseModal: e
                        }
                    })
                },
                _handleBlockedPlayersUpdate(e) {
                    const t = e.map((e => e.puuid));
                    null === this.get("blockedPuuidsOnLoad") && this.set("blockedPuuidsOnLoad", t), this.set("blockedPuuids", t)
                },
                _handleGameSettingsUpdate(e) {
                    e && e[s] && e[s][i] && (null === this.get("chatChannelOnLoad") && this.set("chatChannelOnLoad", e[s][i]), this.set("selectedChatChannel", e[s][i]))
                }
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function() {
                const e = new r.default,
                    t = new i.default(a.UIKit, e);
                return new s.default(t, e)
            };
            var a = n(1);
            n(583);
            var s = l(n(584)),
                i = l(n(585)),
                r = l(n(591));

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            t.default = class {
                constructor(e, t) {
                    this.api = e, this.dataLayer = t, this.openPayments = this.openPayments.bind(this)
                }
                closePaymentsModal = () => {
                    this.api.closeWindowHandler()
                };
                openPayments({
                    action: e,
                    giftMessage: t,
                    gifteeRecipientId: n,
                    accountId: a,
                    openedFrom: s
                }) {
                    return this.api.openPayments({
                        action: e,
                        giftMessage: t,
                        gifteeRecipientId: n,
                        accountId: a,
                        openedFrom: s
                    })
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1),
                s = c(n(586)),
                i = c(n(587)),
                r = c(n(588)),
                l = n(589),
                o = c(n(590));

            function c(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const d = ["ReadyCheck", "GameStart", "InProgress", "FailedToLaunch", "Reconnect", "WaitingForStats", "EndOfGame"];
            t.default = class {
                constructor(e, t) {
                    this.uiKit = e, this.dataLayer = t, this.setPaymentsBaseUrl = this.setPaymentsBaseUrl.bind(this), this.setPaymentsClientConfiguration()
                }
                async setPaymentsClientConfiguration() {
                    if (this.paymentsMode = await this.dataLayer.getPaymentsModeFromClientConfig(), !this.paymentsMode) throw a.logger.error("Error getting payments mode from client config"), new Error("Payments mode is undefined")
                }
                setPaymentsBaseUrl(e) {
                    this.paymentsBaseUrl = e
                }
                initPaymentsWindow(e, t) {
                    if (e = e || {}, !this.paymentsBaseUrl && !e.riotPayEnabled) throw new Error("Invalid paymentsBaseUrl, value cannot be null when not using RiotPay.");
                    switch (a.logger.trace(`Opening ${t} Payments window with base url ${this.paymentsBaseUrl}.`), t) {
                        case r.default.KOREA:
                            this.initKoreaWindow(e);
                            break;
                        case r.default.TENCENT:
                            this.initTencentWindow(e);
                            break;
                        case r.default.RIOT:
                            this.initRiotWindow(e);
                            break;
                        default:
                            throw new RangeError(`Invalid mode, expected one of ${Object.keys(r.default).join(", ")}`)
                    }
                }
                initRiotWindow(e) {
                    e.riotPayEnabled ? this.getTokenizedStartUrl(e).then((t => {
                        this.createWindows(e, i.default.riotpay(t, e))
                    })) : this.createWindows(e, i.default.riot(this.paymentsBaseUrl, e))
                }
                initKoreaWindow(e) {
                    e.riotPayEnabled ? this.getTokenizedStartUrl(e).then((t => {
                        e.onOpen = () => window.open(t, "_blank"), this.createWindows(e, i.default.korea())
                    })) : (e && (e.onOpen = () => window.open(`${this.paymentsBaseUrl}/?payload=${e.payload}`, "_blank")), this.createWindows(e, i.default.korea()))
                }
                initTencentWindow(e) {
                    this.createWindows(e, i.default.tencent(this.paymentsBaseUrl, e))
                }
                openWindowHandler(e) {
                    e && "function" == typeof e && e()
                }
                closeWindowHandler() {
                    this.paymentsActive && this.topManagedWindow && this.bottomManagedWindow && this.paymentsModal && (a.logger.trace("Closing Payments windows."), this.shouldShowOnUnload = !1, this.topManagedWindow.getNativeWindow().close(), this.bottomManagedWindow.getNativeWindow().close(), this.paymentsModal && (this.uiKit.getModalManager().remove(this.paymentsModal), this.onCloseCallback && "function" == typeof this.onCloseCallback && this.onCloseCallback()), this.paymentsActive = !1, a.logger.trace("Payments windows closed."), this.dataLayer.updatePaymentsTelemetry(o.default.PMCOpenToPMCClose))
                }
                createWindows(e, t) {
                    const n = this.uiKit.getWindowManager();
                    this.paymentsActive ? a.logger.trace("Cannot create windows as payments is already active.") : (this.paymentsActive = !0, this.shouldShowOnUnload = !0, this.bottomManagedWindow = n.create(null, "payments-main-bottom", null, {
                        parented: !0
                    }), this.bottomManagedWindow.hide(), this.topManagedWindow = n.create(null, "payments-main-top", this.bottomManagedWindow.getNativeWindow(), {
                        parented: !0
                    }), this.paymentsModal = this.createPaymentsDialog(), this.onCloseCallback = e.onClose, this.paymentsModal.okPromise.then(this.closeWindowHandler.bind(this, e.onClose)), s.default.addRequestHandler("closePaymentsWindow", (() => this.closeWindowHandler(e.onClose))), s.default.addRequestHandler("openPaymentsWindow", (() => this.openWindowHandler(e.onOpen))), this.bottomManagedWindow.getNativeWindow().onbeforeunload = function() {
                        this.shouldShowOnUnload && this.resizeAndShow(this.bottomManagedWindow)
                    }.bind(this), this.dataLayer.addGameflowObserver((t => {
                        this.paymentsActive && t && t.phase && d.includes(t.phase) && (a.logger.trace(`Gameflow phase '${t.phase}' is closing Payments.`), this.closeWindowHandler(e.onClose))
                    })), this.resizeAndShow(this.topManagedWindow, t, (() => this.openWindowHandler(e.onOpen)), !0))
                }
                resizeAndShow(e, t, n, s = !1) {
                    const i = e.getNativeWindow().name;
                    a.logger.trace(`Opening window '${i}'.`), e.setDragBarHeight(0), e.setDragEnabled(!1), e.resizeTo(1058, 596), e.centerWithinParent(), e.show(), s && e.activate(), t && e.setContent(t), n && "function" == typeof n && n(), a.logger.trace(`Window '${i}' opened.`)
                }
                createPaymentsDialog() {
                    const e = document.createElement("div");
                    e.setAttribute("class", "payments-wrapper");
                    return this.uiKit.getModalManager().add({
                        type: "DialogAlert",
                        data: {
                            contents: e,
                            okText: !1,
                            dismissible: !0
                        },
                        show: !0
                    })
                }
                getTokenizedStartUrl(e) {
                    if (!e.rsoToken) throw new Error("RSO Token is null, cannot get tokenized PMC URL");
                    return new Promise(((t, n) => {
                        a.logger.trace("getTokenizedStartUrl starting!");
                        const s = {
                            isPrepaid: "CODES_REDEMPTION" === e.action,
                            localeId: e.locale,
                            summonerLevel: e.summonerLevel,
                            rsoToken: e.rsoToken,
                            usePmcSessions: e.pmcSessionsEnabled,
                            openedFrom: e.openedFrom,
                            game: "lol"
                        };
                        "TC_PURCHASE" === e.action && (s.game = "tft"), e.gifteeAccountId && (s.gifteeAccountId = String(e.gifteeAccountId)), e.giftMessage && (s.gifteeMessage = String(e.giftMessage)), this.dataLayer.getTokenizedPmcUrl(s).then((e => {
                            e ? (a.logger.trace("Got a start URL: " + e.url), t(e.url)) : n()
                        }))
                    }))
                }
                generateGiftPaymentsUrl(e, t, n, a, s) {
                    let i = a,
                        r = `/v1/paymentDetails?action=${n}`;
                    if (e.PaymentsGiftingViaPuuid && (i = t.puuid), r += `&giftRecipientAccountId=${a}`, s) {
                        r += `&giftMessage=${encodeURIComponent(s)}`
                    }
                    return {
                        paymentsDetailsUrl: r,
                        gifteeId: i
                    }
                }
                async getPaymentsEncryptedParameters(e) {
                    try {
                        const t = await this.dataLayer.getStoreEndpoint(e);
                        return JSON.parse(t)
                    } catch (e) {
                        return {
                            hasErrors: !0,
                            err: e
                        }
                    }
                }
                async getPaymentsDetailsUrl(e, t, n) {
                    if (t) {
                        const a = await this.dataLayer.getLcuStoreConfig(),
                            s = await this.dataLayer.getEndpoint("/lol-summoner", `/v1/summoners/${t}`);
                        return this.generateGiftPaymentsUrl(a, s, e, t, n)
                    }
                    return {
                        paymentsDetailsUrl: `/v1/paymentDetails?action=${e}`
                    }
                }
                async openPayments({
                    action: e,
                    giftMessage: t,
                    gifteeRecipientId: n,
                    accountId: s,
                    openedFrom: i
                }) {
                    if (!this.paymentsMode) try {
                        await this.setPaymentsClientConfiguration()
                    } catch (e) {
                        throw a.logger.error("Error getting payments mode from client config: " + e.message), new Error(e.message)
                    }
                    const {
                        paymentsDetailsUrl: r,
                        gifteeId: l
                    } = await this.getPaymentsDetailsUrl(e, n, t), o = await this.getPaymentsEncryptedParameters(r);
                    if (o.hasErrors) throw o.err;
                    let c = e;
                    "CODE_REDEMPTION" === c && (c = "CODES_REDEMPTION");
                    const d = {
                            payload: o.encryptedParameters,
                            action: c,
                            gifteeId: l,
                            giftMessage: t,
                            paymentsMode: this.paymentsMode,
                            playerAccountId: s,
                            openedFrom: i
                        },
                        u = await this.gatherPaymentsWindowOptions(d);
                    this.initPaymentsWindow(u, this.paymentsMode)
                }
                async getGifteeSummoner(e) {
                    return e.gifteeId && (a.logger.trace(`Gift Transaction: Received ID: ${e.gifteeId}, Message: ${e.giftMessage}`), !(0, l.isUuid)(e.gifteeId)) ? await this.dataLayer.getSummonerById(e.gifteeId) : null
                }
                isWhitelisted(e, t) {
                    return e?.includes(t)
                }
                withinThrottle(e) {
                    return e && 1e6 * Math.random() % 100 < e
                }
                async gatherPaymentsWindowOptions(e, t) {
                    const n = t || e;
                    if ("object" != typeof n) throw new TypeError("First or second parameter must be an object");
                    const s = (t ? e : n.mode) || r.default.RIOT;
                    if (!r.default[s]) throw new RangeError(`Payments mode was ${s}, expected one of ${Object.keys(r.default).join(", ")}`);
                    const [i, l, o, c, d, u] = await Promise.all([this.dataLayer.getRegionData(), this.dataLayer.getRegionLocale(), this.dataLayer.getPaymentsPlatformConfig(), this.dataLayer.getRsoAuthToken(), this.dataLayer.getCurrentSummoner(), this.getGifteeSummoner(n)]);
                    return o && o.PmcEdgeHost && o.RiotPayEnabled && (this.isWhitelisted(o.BypassAccountIds, d.accountId) || this.withinThrottle(o.RiotPayThrottle)) ? (a.logger.trace("Using RiotPay for account id: " + d.accountId), n.riotPayEnabled = o.RiotPayEnabled) : this.api.setPaymentsBaseUrl(this.getPayletterHost(o, i, l)), n.pmcSessionsEnabled = !(!o || !o.PmcSessionsEnabled), l && (n.locale = l.locale), c ? n.rsoToken = c.token : a.logger.trace("Rso is null and might not be enabled in this environment"), d && (n.summonerLevel = d.summonerLevel), u && (n.gifteeAccountId = u.accountId), e.openedFrom && (n.openedFrom = e.openedFrom), n
                }
            }
        }, e => {
            "use strict";
            const t = {};
            window.addEventListener("message", (function(e) {
                const n = t[e.data.action];
                "function" == typeof n && n(e)
            })), e.exports = {
                addRequestHandler: function(e, n) {
                    t[e] = n
                },
                removeRequestHandler: function(e) {
                    void 0 !== t[e] && delete t[e]
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0, t.korea = r, t.riot = s, t.riotpay = i, t.tencent = l;
            var a = n(1);

            function s(e, t) {
                const n = o(),
                    a = document.createElement("form");
                a.setAttribute("method", "POST");
                const s = document.createElement("input");
                s.type = "hidden", s.name = "payload", s.value = t.payload;
                const i = document.createElement("input");
                i.type = "hidden", i.name = "lcu", i.value = "1";
                const r = document.createElement("input");
                r.type = "hidden", r.name = "locale", r.value = t.locale;
                const l = document.createElement("input");
                l.type = "hidden", l.name = "summonerLevel", l.value = t.summonerLevel;
                const c = document.createElement("input");
                c.type = "hidden", c.name = "gifteeAccountId", c.value = t.gifteeAccountId;
                const d = document.createElement("input");
                d.type = "hidden", d.name = "giftMessage", d.value = t.giftMessage;
                const u = document.createElement("input");
                if (u.type = "hidden", u.name = "rsoToken", u.value = t.rsoToken, a.appendChild(s), a.appendChild(i), a.appendChild(r), a.appendChild(l), a.appendChild(c), a.appendChild(d), a.appendChild(u), "CODES_REDEMPTION" === t.action) {
                    const e = document.createElement("input");
                    e.type = "hidden", e.name = "storeprepaid", e.value = "true", a.appendChild(e)
                }
                let m = `${e}/session/new/`;
                t.riotPayEnabled && (m = e), a.setAttribute("action", m);
                const p = document.createElement("script");
                return p.setAttribute("type", "text/javascript"), p.innerText = "document.forms[0].submit();", n.appendChild(a), n.appendChild(p), n
            }

            function i(e, t) {
                const n = o(),
                    a = document.createElement("form");
                a.setAttribute("method", "GET");
                const s = c("pid", e);
                if (s) {
                    const e = document.createElement("input");
                    e.type = "hidden", e.name = "pid", e.value = s, a.appendChild(e)
                }
                const i = c("s", e);
                if (i) {
                    const e = document.createElement("input");
                    e.type = "hidden", e.name = "s", e.value = i, a.appendChild(e)
                }
                if (e.includes("/riotpay/psps/vng/")) {
                    const t = c("sfac", e),
                        n = c("puuid", e);
                    if (t && n) {
                        const e = document.createElement("input");
                        e.type = "hidden", e.name = "sfac", e.value = t;
                        const s = document.createElement("input");
                        s.type = "hidden", s.name = "puuid", s.value = n, a.appendChild(s), a.appendChild(e)
                    }
                }
                const r = document.createElement("input");
                r.type = "hidden", r.name = "locale", r.value = c("locale", e);
                const l = document.createElement("input");
                l.type = "hidden", l.name = "t", l.value = c("t", e);
                const d = c("i", e);
                if (d) {
                    const e = document.createElement("input");
                    e.type = "hidden", e.name = "i", e.value = d, a.appendChild(e)
                }
                const u = `${e}`;
                a.setAttribute("action", u);
                const m = document.createElement("script");
                if (m.setAttribute("type", "text/javascript"), m.innerText = "document.forms[0].submit();", a.appendChild(r), a.appendChild(l), "CODES_REDEMPTION" === t.action) {
                    const e = document.createElement("input");
                    e.type = "hidden", e.name = "prepaid", e.value = "true", a.appendChild(e)
                }
                return n.appendChild(a), n.appendChild(m), n
            }

            function r() {
                const e = o(),
                    t = document.createElement("form");
                t.setAttribute("method", "GET");
                t.setAttribute("action", "https://d36939fcigz4eo.cloudfront.net/");
                const n = document.createElement("script");
                return n.setAttribute("type", "text/javascript"), n.innerText = "document.forms[0].submit();", e.appendChild(t), e.appendChild(n), e
            }

            function l(e, t) {
                const n = o(),
                    a = document.createElement("form");
                a.setAttribute("method", "GET");
                const s = `${e}?username=` + t.playerAccountId;
                a.setAttribute("action", s);
                const i = document.createElement("script");
                return i.setAttribute("type", "text/javascript"), i.innerText = "document.forms[0].submit();", n.appendChild(a), n.appendChild(i), n
            }

            function o() {
                const e = document.createElement("div");
                return e.style.width = "1056px", e.style.height = "594px", e
            }

            function c(e, t) {
                const n = t.split("?")[1].split("&");
                for (let t = 0; t < n.length; t++) {
                    const a = n[t].split("=");
                    if (a[0] === e) return a[1]
                }
                a.logger.trace("Couldn't find " + e + " in url: " + t)
            }
            var d = {
                riot: s,
                korea: r,
                tencent: l,
                riotpay: i
            };
            t.default = d
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                RIOT: "RIOT",
                KOREA: "KOREA",
                TENCENT: "TENCENT"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isUuid = function(e) {
                const t = ("" + e).match(n);
                return !!t && 1 === t.length
            };
            const n = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                IdleToPMCOpen: "IdleToPMCOpen",
                PMCOpenToPMCClose: "PMCOpenToPMCClose",
                PMCOpenToPMCComplete: "PMCOpenToPMCComplete",
                PMCClosedToIdle: "PMCClosedToIdle",
                PMCCompleteToIdle: "PMCCompleteToIdle"
            };
            t.default = n
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var a = n(1);
            const s = "/v1/session";
            t.default = class {
                constructor() {
                    const e = (0, a.getProvider)().getSocket();
                    this.bindings = {
                        dataStore: (0, a.dataBinding)("/data-store", e),
                        rclient: (0, a.dataBinding)("/riotclient", e),
                        login: (0, a.dataBinding)("/lol-login", e),
                        gameflow: (0, a.dataBinding)("/lol-gameflow", e),
                        auth: (0, a.dataBinding)("/lol-rso-auth", e),
                        platformConfig: (0, a.dataBinding)("/lol-platform-config", e),
                        summoner: (0, a.dataBinding)("/lol-summoner", e),
                        payments: (0, a.dataBinding)("/payments", e),
                        store: (0, a.dataBinding)("lol-store", e),
                        clientConfig: (0, a.dataBinding)("/lol-client-config/v3/client-config", e)
                    }
                }
                getRegionLocale() {
                    return this.bindings.rclient.get("/region-locale")
                }
                getRegionData() {
                    return this.bindings.dataStore.get("/v1/system-settings/region_data")
                }
                getRsoAuthToken() {
                    return this.bindings.auth.get("/v1/authorization/access-token")
                }
                getPaymentsPlatformConfig() {
                    return this.bindings.platformConfig.get("/v1/namespaces/LcuPayments")
                }
                getSummonerById(e) {
                    return this.bindings.summoner.get(`/v1/summoners/${e}`)
                }
                getCurrentSummoner() {
                    return this.bindings.summoner.get("/v1/current-summoner")
                }
                addLoginObserver(e) {
                    this.bindings.login.observe(s, e)
                }
                addGameflowObserver(e) {
                    this.bindings.gameflow.observe(s, e)
                }
                getTokenizedPmcUrl(e) {
                    return this.bindings.payments.post("/v1/pmc-start-url", e)
                }
                updatePaymentsTelemetry(e) {
                    return this.bindings.payments.post("/v1/updatePaymentTelemetryState", e)
                }
                getLcuStoreConfig() {
                    return this.bindings.platformConfig.get("/v1/namespaces/LCUStore")
                }
                getEndpoint(e, t) {
                    return (0, a.dataBinding)(e).get(t, {
                        skipCache: !0
                    })
                }
                getStoreEndpoint(e) {
                    return this.bindings.store.get(e, {
                        skipCache: !0
                    })
                }
                getPaymentsModeFromClientConfig() {
                    return this.bindings.clientConfig.get("/lol.client_settings.payments.paymentsMode")
                }
            }
        }],
        t = {};

    function n(a) {
        var s = t[a];
        if (void 0 !== s) return s.exports;
        var i = t[a] = {
            id: a,
            exports: {}
        };
        return e[a](i, i.exports, n), i.exports
    }
    n.n = e => {
        var t = e && e.__esModule ? () => e.default : () => e;
        return n.d(t, {
            a: t
        }), t
    }, n.d = (e, t) => {
        for (var a in t) n.o(t, a) && !n.o(e, a) && Object.defineProperty(e, a, {
            enumerable: !0,
            get: t[a]
        })
    }, n.g = function() {
        if ("object" == typeof globalThis) return globalThis;
        try {
            return this || new Function("return this")()
        } catch (e) {
            if ("object" == typeof window) return window
        }
    }(), n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), n.r = e => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }, n.p = "/fe/lol-shared-components/", (() => {
        "use strict";
        var e, t = (e = n(1)) && e.__esModule ? e : {
            default: e
        };
        const a = "rcp-fe-lol-shared-components",
            s = document.currentScript.ownerDocument;
        const i = window.getPluginAnnounceEventName(a);
        s.addEventListener(i, (function(e) {
            (0, e.registrationHandler)((function(e) {
                return t.default.init(e, {
                    Audio: e => e.get("rcp-fe-audio"),
                    Bluebird: e => e.get("rcp-fe-common-libs").getBluebird("3"),
                    ComponentFactory: e => e.get("rcp-fe-common-libs").getComponentFactory("1"),
                    ContextMenuManager: e => e.get("rcp-fe-lol-uikit").getContextMenuManager(),
                    dataBinding: e => e.get("rcp-fe-common-libs").getDataBinding("rcp-fe-lol-shared-components"),
                    Ember: e => e.get("rcp-fe-ember-libs").getEmber(),
                    emberDataBinding: e => e.get("rcp-fe-ember-libs").getEmberDataBinding("rcp-fe-lol-shared-components"),
                    EmberL10n: e => e.get("rcp-fe-ember-libs").getEmberL10n(1),
                    getSwitch: e => e.get("rcp-fe-lol-uikit").getSwitch,
                    gsap: e => e.get("rcp-fe-common-libs").getGsap("1"),
                    gsapCustomEase: e => e.get("rcp-fe-common-libs").getGsapCustomEase("1"),
                    HtmlSanitizer: e => e.get("rcp-fe-common-libs").getHtmlSanitizer(),
                    jquery: e => e.get("rcp-fe-common-libs").getJquery("2"),
                    LayerManager: e => e.get("rcp-fe-lol-uikit").getLayerManager(),
                    lodash: e => e.get("rcp-fe-common-libs").getLodash(4),
                    logger: e => e.get("rcp-fe-common-libs").logging.create(a),
                    Lottie: e => e.get("rcp-fe-common-libs").getLottie("1"),
                    ModalManager: e => e.get("rcp-fe-lol-uikit").getModalManager(),
                    playerNames: e => e.get("rcp-fe-common-libs").playerNames,
                    playerNameComponentLogic: e => e.get("rcp-fe-common-libs").playerNameComponentLogic,
                    ToastManager: e => e.get("rcp-fe-lol-uikit").getToastManager(),
                    TemplateHelper: e => e.get("rcp-fe-lol-uikit").getTemplateHelper(),
                    socket: e => e.getSocket(),
                    Telemetry: e => e.get("rcp-fe-common-libs").getTelemetry("1"),
                    templateHelper: e => e.get("rcp-fe-lol-uikit").getTemplateHelper(),
                    UIKit: e => e.get("rcp-fe-lol-uikit"),
                    VignetteManager: e => e.get("rcp-fe-lol-uikit").getVignetteCelebrationManager(),
                    webComponents: e => e.get("rcp-fe-common-libs").getWebComponents(s),
                    WindowMessenger: e => e.get("rcp-fe-common-libs").getWindowMessenger()
                }).then((() => t.default.add({
                    EmberApplicationFactory: e => e.get("rcp-fe-ember-libs").getEmberApplicationFactory()
                }))).then((() => {
                    (0, n(2).default)();
                    const a = e.get("rcp-fe-lol-l10n").tra().overlay("/fe/lol-l10n/trans.json").overlay("/fe/lol-shared-components/trans.json").overlay("/fe/lol-shared-components/trans-replays.json").overlay("/fe/lol-shared-components/trans-regalia.json").overlay("/fe/lol-shared-components/trans-account-verification.json").overlay("/fe/lol-shared-components/trans-eternals.json").overlay("/fe/lol-shared-components/trans-league-tier-names.json").overlay("/fe/lol-shared-components/trans-challenges.json").overlay("/fe/lol-shared-components/trans-report-modal.json"),
                        s = t.default.EmberL10n(t.default.Ember, a);
                    return t.default.add({
                        tra: a,
                        traService: s
                    })
                })).then((async function() {
                    const {
                        initComponents: e,
                        privateApi: a,
                        publicApi: i
                    } = n(14).default;
                    return t.default.SharedComponentsApi_Private = a, t.default.SharedComponentsApi = i, await e(s, t.default.Ember), t.default.add({
                        SharedChallengesConstants: i.getApi_SharedChallengesConstants()
                    }), i
                }))
            }))
        }), {
            once: !0
        })
    })()
})();