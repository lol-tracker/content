(() => {
    var e = [, e => {
            "use strict";
            let t;

            function n() {
                return t || (console.error("The `provider` object has not been set, please do so by calling the `init` method."), null)
            }
            const s = {
                init: function(e, n) {
                    return t = e, this.add(n)
                },
                _getValue: function(e, n) {
                    let s;
                    return "function" == typeof n ? (s = n(t), s || console.warn("The function for key " + e + " returned a falsy value: ", s)) : "string" == typeof n ? (s = t.get(n), s || console.warn("The provider `get` invocation for the key " + e + " returned a falsy value: ", s)) : "object" == typeof n && (s = n), s
                },
                add: function(e) {
                    e = e || {};
                    const t = [],
                        n = this;
                    return Object.keys(e).forEach((function(s) {
                        const o = e[s],
                            i = n._getValue(s, o);
                        i && i.then ? (i.then((function(e) {
                            e || console.warn("The promise for the key " + s + " resolved with a falsy value: ", e), n._addValue(s, e)
                        })), t.push(i)) : n._addValue(s, i)
                    })), Promise.all(t)
                },
                _addValue: function(e, t) {
                    this[e] = t
                },
                provider: function() {
                    return console.error("The function `provider` has been deprecated, please use `getProvider`", (new Error).stack), n()
                },
                getProvider: function() {
                    return n()
                }
            };
            e.exports = s
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = new class {
                constructor() {
                    this.subDoc = document
                }
                set(e) {
                    this.subDoc = e
                }
                get() {
                    return this.subDoc
                }
            };
            t.default = n
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getVarFromCSS = function(e, t) {
                try {
                    let n = c[e];
                    n || (n = a.exec(e)[1], c[e] = n);
                    let s = new RegExp(`${t}: ([^;]+);`).exec(n)[1];
                    return r.test(s) && (s = parseFloat(s)), s
                } catch (e) {
                    throw new Error("Your css variable cannot be found.")
                }
            }, t.populateShadow = function(e, t, n) {
                const {
                    tagName: s
                } = e;
                let l = o[s];
                if (!l) {
                    t = i.exec(t)[1], l = document.createElement("template"), l.innerHTML = t;
                    const e = document.createElement("style");
                    e.textContent = n, l = document.importNode(l.content, !0), l.insertBefore(e, l.firstChild), o[s] = l
                }
                const a = e.createShadowRoot();
                a && a.appendChild(l.cloneNode(!0))
            }, t.registerCustomElement = function(e) {
                const {
                    TAG_NAME: t
                } = e;
                l[t] || (l[t] = !0, document.registerElement(t, {
                    prototype: Object.create(e.prototype)
                }))
            }, t.registerCustomElements = function() {
                const e = n(4),
                    t = /\/[\w-]+\/index.js$/;
                e.keys().forEach((n => {
                    if (t.test(n)) {
                        const t = e(n).default;
                        s.webComponents.registerCustomElementV1(t)
                    }
                }))
            };
            var s = n(1);
            const o = {},
                i = /<template[^>]*>([^]+)<\/template>/i;
            const l = {};
            const a = /:host {([^}]+)}/,
                r = /^(-?[\d]*\.?[\d]*)(px)?$/,
                c = {}
        }, (e, t, n) => {
            var s = {
                "./garbage-button/index.js": 5,
                "./glowing-dot/index.js": 10,
                "./gradient-ring/index.js": 13,
                "./perk-icon-button/index.js": 16,
                "./progress-icon-button/index.js": 19,
                "./selected-style-icon-button/index.js": 22,
                "./semicircle-comet/index.js": 25,
                "./style-filter-checkbox/index.js": 28,
                "./style-icon-button/index.js": 31,
                "./switch/index.js": 34,
                "./update-ring/index.js": 37,
                "./utils.js": 3
            };

            function o(e) {
                var t = i(e);
                return n(t)
            }

            function i(e) {
                if (!n.o(s, e)) {
                    var t = new Error("Cannot find module '" + e + "'");
                    throw t.code = "MODULE_NOT_FOUND", t
                }
                return s[e]
            }
            o.keys = function() {
                return Object.keys(s)
            }, o.resolve = i, e.exports = o, o.id = 4
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            class o extends s.webComponents.ShadowElement {
                templateMarkup() {
                    return n(6)
                }
                templateStyle() {
                    return n(7)
                }
            }
            t.default = o, o.tagName = "lol-perks-garbage-button"
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <lol-uikit-close-button button-type="delete"></lol-uikit-close-button>\r\n  <slot></slot>\r\n</template>\r\n'
        }, (e, t, n) => {
            var s = n(8),
                o = n(9)(s);
            o.push([e.id, "", ""]), e.exports = o
        }, e => {
            "use strict";
            e.exports = function(e) {
                return e[1]
            }
        }, e => {
            "use strict";
            e.exports = function(e) {
                var t = [];
                return t.toString = function() {
                    return this.map((function(t) {
                        var n = "",
                            s = void 0 !== t[5];
                        return t[4] && (n += "@supports (".concat(t[4], ") {")), t[2] && (n += "@media ".concat(t[2], " {")), s && (n += "@layer".concat(t[5].length > 0 ? " ".concat(t[5]) : "", " {")), n += e(t), s && (n += "}"), t[2] && (n += "}"), t[4] && (n += "}"), n
                    })).join("")
                }, t.i = function(e, n, s, o, i) {
                    "string" == typeof e && (e = [
                        [null, e, void 0]
                    ]);
                    var l = {};
                    if (s)
                        for (var a = 0; a < this.length; a++) {
                            var r = this[a][0];
                            null != r && (l[r] = !0)
                        }
                    for (var c = 0; c < e.length; c++) {
                        var d = [].concat(e[c]);
                        s && l[d[0]] || (void 0 !== i && (void 0 === d[5] || (d[1] = "@layer".concat(d[5].length > 0 ? " ".concat(d[5]) : "", " {").concat(d[1], "}")), d[5] = i), n && (d[2] ? (d[1] = "@media ".concat(d[2], " {").concat(d[1], "}"), d[2] = n) : d[2] = n), o && (d[4] ? (d[1] = "@supports (".concat(d[4], ") {").concat(d[1], "}"), d[4] = o) : d[4] = "".concat(o)), t.push(d))
                    }
                }, t
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            class o extends s.webComponents.ShadowElement {
                templateMarkup() {
                    return n(11)
                }
                templateStyle() {
                    return n(12)
                }
            }
            t.default = o, o.tagName = "lol-perks-glowing-dot"
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <div class="menu-item-call-to-action"></div>\r\n  <div class="menu-item-call-to-action-glow"></div>\r\n</template>\r\n'
        }, (e, t, n) => {
            var s = n(8),
                o = n(9)(s);
            o.push([e.id, "@-moz-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-webkit-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-o-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-moz-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@-webkit-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@-o-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n:host {\n  display: inline-block;\n  height: 8px;\n  position: relative;\n  width: 8px;\n}\n.menu-item-call-to-action,\n.menu-item-call-to-action-glow {\n  border-radius: 50%;\n  height: 100%;\n  position: absolute;\n  width: 100%;\n}\n.menu-item-call-to-action {\n  background-color: #c89b3c;\n}\n.menu-item-call-to-action-glow {\n  animation: glowAnimation 0.92s infinite alternate ease-in-out;\n  background-color: #ffff8f;\n  border: thin solid #b48732;\n  box-sizing: border-box;\n  transform: scale(1.6);\n  -webkit-filter: blur(1px);\n}\n.menu-item-call-to-action-glow::after {\n  animation: innerGlowAnimation 0.92s infinite alternate ease-in-out;\n  background: #ffffe6;\n  border-radius: 50%;\n  content: '';\n  height: 2px;\n  position: absolute;\n  right: calc(50% - $glow-size);\n  top: calc(50% - $glow-sizex);\n  width: 2px;\n}\n@-moz-keyframes glowAnimation {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@-webkit-keyframes glowAnimation {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@-o-keyframes glowAnimation {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes glowAnimation {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@-moz-keyframes innerGlowAnimation {\n  0% {\n    opacity: 0;\n  }\n  30% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@-webkit-keyframes innerGlowAnimation {\n  0% {\n    opacity: 0;\n  }\n  30% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@-o-keyframes innerGlowAnimation {\n  0% {\n    opacity: 0;\n  }\n  30% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes innerGlowAnimation {\n  0% {\n    opacity: 0;\n  }\n  30% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n", ""]), e.exports = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            class o extends s.webComponents.ShadowElement {
                templateMarkup() {
                    return n(14)
                }
                templateStyle() {
                    return n(15)
                }
                constructor() {
                    super(), this.shadowRoot && (this._ringStyle = this.shadowRoot.getElementById("ring").style, this._holderStyle = this.shadowRoot.getElementById("content-holder").style), this._adjustStyles(this.getAttribute("border-width") || "2")
                }
                static get observedAttributes() {
                    return ["border-width"]
                }
                attributeChangedCallback(e, t, n) {
                    "border-width" === e && this._adjustStyles(n)
                }
                _adjustStyles(e) {
                    e && e !== this._borderWidth && (this._ringStyle.WebkitMaskImage = `url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%'><circle fill='none' cx='50%' cy='50%' stroke='black' stroke-width='${e}' style='r: calc(50% - ${e}px * 0.5);' /></svg>")`, this._holderStyle.borderWidth = `${e}px`, this._borderWidth = e)
                }
            }
            t.default = o, o.tagName = "lol-perks-gradient-ring"
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <div id="content-holder">\r\n    <slot></slot>\r\n  </div>\r\n  <div id="ring"></div>\r\n</template>\r\n'
        }, (e, t, n) => {
            var s = n(8),
                o = n(9)(s);
            o.push([e.id, ":host {\n  --gradient: linear-gradient(to bottom, #f00 0%, #0f0 100%);\n  border-radius: 50%;\n  position: relative;\n}\n#content-holder {\n  border: solid transparent;\n  box-sizing: border-box;\n  height: 100%;\n  position: absolute;\n  width: 100%;\n}\n#ring {\n  background: var(--gradient);\n  height: 100%;\n  position: absolute;\n  width: 100%;\n}\n", ""]), e.exports = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            class o extends s.webComponents.ShadowElement {
                templateMarkup() {
                    return n(17)
                }
                templateStyle() {
                    return n(18)
                }
                constructor() {
                    super(), this._setSrc(this.getAttribute("src"))
                }
                static get observedAttributes() {
                    return ["src"]
                }
                attributeChangedCallback(e, t, n) {
                    "src" === e && this._setSrc(n)
                }
                _setSrc(e) {
                    e !== this._src && (this._src = e, this.shadowRoot && e ? this.shadowRoot.getElementById("img").style.backgroundImage = `url(${this._src})` : this.shadowRoot.getElementById("img").style.removeProperty("background-image"))
                }
            }
            t.default = o, o.tagName = "lol-perks-perk-icon-button"
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <div id="opacity">\r\n    <lol-perks-gradient-ring id="hover" border-width="3"></lol-perks-gradient-ring>\r\n    <lol-perks-gradient-ring id="border"></lol-perks-gradient-ring>\r\n    <lol-perks-semicircle-comet id="spinner" spinning></lol-perks-semicircle-comet>\r\n    <div id="img"></div>\r\n  </div>\r\n  <slot></slot>\r\n</template>\r\n'
        }, (e, t, n) => {
            var s = n(8),
                o = n(9)(s);
            o.push([e.id, '#border,\n#spinner {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@-moz-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-webkit-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-o-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-moz-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@-webkit-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@-o-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n:host {\n  --diameter: 47px;\n  --scale-when-open: 0.75;\n  background: #1e2328;\n  border-radius: 50%;\n  cursor: pointer;\n  height: var(--diameter);\n  position: relative;\n  width: var(--diameter);\n}\n:host> * {\n  pointer-events: none;\n}\n:host([disabled]):after {\n  background-image: url("/fe/lol-collections/perks/images/lock.svg");\n  background-size: contain;\n  content: \'\';\n  display: block;\n  height: 40px;\n  left: calc(50% - 27px * 0.5);\n  position: absolute;\n  top: calc(100% - 40px * 0.5);\n  width: 27px;\n}\n:host(:not([disabled]):hover) #hover {\n  opacity: 0.5;\n  transform: scale(1);\n  visibility: visible;\n}\n:host([disabled][faded]:hover) #opacity {\n  opacity: 0.5;\n  -webkit-filter: grayscale(100%);\n}\n:host([faded]:not(:hover)) #opacity {\n  opacity: 0.5;\n  -webkit-filter: grayscale(100%);\n}\n:host(:not([spinning])) #spinner {\n  opacity: 0;\n  visibility: hidden;\n}\n:host([open]) #img {\n  transform: scale(var(--scale-when-open));\n  opacity: 0.5;\n}\n:host([img-hover]:not(:hover)) #img {\n  -webkit-filter: brightness(0.7);\n}\n:host([keystone]:not([invalid])) #img {\n  border: none;\n  border-radius: 0;\n  height: 175%;\n  left: calc(50% - 175% * 0.5);\n  pointer-events: none;\n  position: absolute;\n  top: calc(50% - 175% * 0.5);\n  width: 175%;\n}\n:host([style-name=precision]) #border,\n:host([style-name=precision]) #hover {\n  --gradient: linear-gradient(to bottom, #aea789 0%, #c8aa6e 100%);\n}\n:host([style-name=domination]) #border,\n:host([style-name=domination]) #hover {\n  --gradient: linear-gradient(to bottom, #d44242 0%, #dc4747 100%);\n}\n:host([style-name=sorcery]) #border,\n:host([style-name=sorcery]) #hover {\n  --gradient: linear-gradient(to bottom, #9faafc 0%, #6c75f5 100%);\n}\n:host([style-name=resolve]) #border,\n:host([style-name=resolve]) #hover {\n  --gradient: linear-gradient(to bottom, #a1d586 0%, #a4d08d 100%);\n}\n:host([style-name=inspiration]) #border,\n:host([style-name=inspiration]) #hover {\n  --gradient: linear-gradient(to bottom, #49aab9 0%, #48b4be 100%);\n}\n:host([style-name=stat-shard]) #border,\n:host([style-name=stat-shard]) #hover {\n  --gradient: linear-gradient(to bottom, #cebe83 0%, #dbb062 100%);\n}\n:host([invalid]) #border,\n:host([invalid]) #hover {\n  --gradient: #e62142;\n}\n:host([invalid]) #img {\n  background: #e62142 !important;\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/exclamation.svg");\n  -webkit-mask-position: 50% 45%;\n  -webkit-mask-repeat: no-repeat;\n  -webkit-mask-size: 40%;\n}\n#opacity {\n  height: 100%;\n  transition: opacity 0.15s, -webkit-filter 0.15s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n#img {\n  background-size: cover;\n  background-repeat: no-repeat;\n  border-radius: 50%;\n  box-sizing: border-box;\n  height: calc(100% - 4px);\n  width: calc(100% - 4px);\n  transition: opacity 0.15s, transform 0.15s, -webkit-filter 0.15s;\n}\n#border {\n  --gradient: linear-gradient(to bottom, #cdbe91 0%, #785a28 100%);\n  box-shadow: inset 0 0 7px 2px #000, 0 0 1px #000;\n}\n#hover {\n  --gradient: linear-gradient(to bottom, #cdbe91 0%, #785a28 100%);\n  height: calc(100% + 4px * 2 + 3px * 2);\n  left: -7px;\n  opacity: 0;\n  pointer-events: none;\n  position: absolute;\n  top: -7px;\n  transform: scale(1.1);\n  transition: opacity 0.15s, visibility 0.15s, transform 0.15s;\n  visibility: hidden;\n  width: calc(100% + 4px * 2 + 3px * 2);\n}\n#spinner {\n  transition: opacity 0.15s, visibility 0.15s;\n}\n', ""]), e.exports = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            class o extends s.webComponents.ShadowElement {
                templateMarkup() {
                    return n(20)
                }
                templateStyle() {
                    return n(21)
                }
            }
            t.default = o, o.tagName = "lol-perks-progress-icon-button"
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <lol-perks-gradient-ring></lol-perks-gradient-ring>\r\n  <div id="dot"></div>\r\n  <slot></slot>\r\n</template>\r\n'
        }, (e, t, n) => {
            var s = n(8),
                o = n(9)(s);
            o.push([e.id, "@-moz-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-webkit-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-o-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-moz-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@-webkit-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@-o-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n:host {\n  height: var(--outer-size);\n  position: relative;\n  width: var(--outer-size);\n}\n:host([style-name=precision]) lol-perks-gradient-ring {\n  --gradient: linear-gradient(to bottom, #aea789 0%, #c8aa6e 100%);\n}\n:host([style-name=precision]) #dot {\n  background: linear-gradient(to bottom, #fff 0%, #aea789 100%);\n  -webkit-filter: drop-shadow(0 0 3px #aea789);\n}\n:host([style-name=domination]) lol-perks-gradient-ring {\n  --gradient: linear-gradient(to bottom, #d44242 0%, #dc4747 100%);\n}\n:host([style-name=domination]) #dot {\n  background: linear-gradient(to bottom, #fff 0%, #d44242 100%);\n  -webkit-filter: drop-shadow(0 0 3px #d44242);\n}\n:host([style-name=sorcery]) lol-perks-gradient-ring {\n  --gradient: linear-gradient(to bottom, #9faafc 0%, #6c75f5 100%);\n}\n:host([style-name=sorcery]) #dot {\n  background: linear-gradient(to bottom, #fff 0%, #9faafc 100%);\n  -webkit-filter: drop-shadow(0 0 3px #9faafc);\n}\n:host([style-name=resolve]) lol-perks-gradient-ring {\n  --gradient: linear-gradient(to bottom, #a1d586 0%, #a4d08d 100%);\n}\n:host([style-name=resolve]) #dot {\n  background: linear-gradient(to bottom, #fff 0%, #a1d586 100%);\n  -webkit-filter: drop-shadow(0 0 3px #a1d586);\n}\n:host([style-name=inspiration]) lol-perks-gradient-ring {\n  --gradient: linear-gradient(to bottom, #49aab9 0%, #48b4be 100%);\n}\n:host([style-name=inspiration]) #dot {\n  background: linear-gradient(to bottom, #fff 0%, #49aab9 100%);\n  -webkit-filter: drop-shadow(0 0 3px #49aab9);\n}\n:host([style-name=stat-shard]) lol-perks-gradient-ring {\n  --gradient: linear-gradient(to bottom, #cebe83 0%, #dbb062 100%);\n}\n:host([style-name=stat-shard]) #dot {\n  background: linear-gradient(to bottom, #fff 0%, #cebe83 100%);\n  -webkit-filter: drop-shadow(0 0 3px #cebe83);\n}\n:host([filled]) lol-perks-gradient-ring {\n  height: calc((var(--outer-size)) * 0.75);\n  width: calc((var(--outer-size)) * 0.75);\n}\n:host(:not([filled])) #dot {\n  opacity: 0;\n}\n:host([large]) {\n  --outer-size: 32px;\n}\n:host([large]) #dot {\n  height: 10px;\n  width: 10px;\n}\n:host(:not([large])) {\n  --outer-size: 24px;\n}\n:host(:not([large])) #dot {\n  height: 8px;\n  width: 8px;\n}\nlol-perks-gradient-ring {\n  --gradient: linear-gradient(to bottom, #cdbe91 0%, #785a28 100%);\n  background: #1e2328;\n  height: 100%;\n  left: 50%;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  transition: width 0.2s, height 0.2s;\n  width: 100%;\n}\n#dot {\n  border-radius: 50%;\n  left: 50%;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  transition: opacity 0.2s;\n}\n", ""]), e.exports = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            class o extends s.webComponents.ShadowElement {
                templateMarkup() {
                    return n(23)
                }
                templateStyle() {
                    return n(24)
                }
                constructor() {
                    super(), this._outerRing = this.shadowRoot.getElementById("outer-ring"), this._innerRings = this.shadowRoot.querySelectorAll(".inner-ring"), this._whiteRings = this.shadowRoot.querySelectorAll(".white.ring-svg"), this._setSpinning(null !== this.getAttribute("spinning"))
                }
                static get observedAttributes() {
                    return ["spinning"]
                }
                attributeChangedCallback(e, t, n) {
                    "spinning" === e && this._setSpinning(null !== n)
                }
                disconnectedCallback() {
                    if (super.disconnectedCallback(), this._animations)
                        for (const e of this._animations) e.cancel()
                }
                _setSpinning(e) {
                    if (this._spinning !== e)
                        if (this._spinning = e, e) this._startSpinningAnimation();
                        else {
                            if (this._animations)
                                for (const e of this._animations) e.cancel();
                            this._animations = null, this._stopSpinningAnimation()
                        }
                }
                _startSpinningAnimation() {
                    this._animations = [];
                    this._animations.push(this._outerRing.animate([{
                        transform: "rotate(0deg)"
                    }, {
                        transform: "rotate(-480deg)"
                    }], {
                        duration: 4500,
                        iterations: 1 / 0
                    }));
                    for (const e of this._innerRings) this._animations.push(e.animate([{
                        transform: "rotate(0deg)"
                    }, {
                        transform: "rotate(1080deg)"
                    }], {
                        duration: 4500,
                        iterations: 1 / 0
                    }))
                }
                _stopSpinningAnimation() {
                    const e = 1e3,
                        t = "cubic-bezier(0,1,1,1)";
                    this._outerRing.animate([{
                        transform: "rotate(120deg)"
                    }, {
                        transform: "rotate(0deg)"
                    }], {
                        duration: e,
                        easing: t
                    });
                    for (const t of this._whiteRings) t.animate([{
                        opacity: 1
                    }, {
                        opacity: 0
                    }], {
                        duration: e
                    });
                    for (const n of this._innerRings) n.animate([{
                        transform: "rotate(-720deg)"
                    }, {
                        transform: "rotate(0deg)"
                    }], {
                        duration: e,
                        easing: t
                    })
                }
            }
            t.default = o, o.tagName = "lol-perks-selected-style-icon-button"
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <div id="img"></div>\r\n  <div id="outer-ring">\r\n    <div class="ring">\r\n      <div class="inner-ring">\r\n        <div class="small-box">\r\n          <lol-perks-gradient-ring class="colored gradient"></lol-perks-gradient-ring>\r\n          <lol-perks-gradient-ring class="white gradient"></lol-perks-gradient-ring>\r\n          <lol-perks-semicircle-comet></lol-perks-semicircle-comet>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class="ring">\r\n      <div class="inner-ring">\r\n        <div class="small-box">\r\n          <lol-perks-gradient-ring class="colored gradient"></lol-perks-gradient-ring>\r\n          <lol-perks-gradient-ring class="white gradient"></lol-perks-gradient-ring>\r\n          <lol-perks-semicircle-comet></lol-perks-semicircle-comet>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class="ring">\r\n      <div class="inner-ring">\r\n        <div class="small-box">\r\n          <lol-perks-gradient-ring class="colored gradient"></lol-perks-gradient-ring>\r\n          <lol-perks-gradient-ring class="white gradient"></lol-perks-gradient-ring>\r\n          <lol-perks-semicircle-comet></lol-perks-semicircle-comet>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <slot></slot>\r\n</template>\r\n'
        }, (e, t, n) => {
            var s = n(8),
                o = n(9)(s);
            o.push([e.id, ':host([style-name=domination]) #img {\n  background: linear-gradient(to bottom, #d44242 0%, #dc4747 100%);\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/Domination/domination_icon.svg");\n}\n:host([style-name=inspiration]) #img {\n  background: linear-gradient(to bottom, #49aab9 0%, #48b4be 100%);\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/Inspiration/inspiration_icon.svg");\n}\n:host([style-name=precision]) #img {\n  background: linear-gradient(to bottom, #aea789 0%, #c8aa6e 100%);\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/Precision/precision_icon.svg");\n}\n:host([style-name=resolve]) #img {\n  background: linear-gradient(to bottom, #a1d586 0%, #a4d08d 100%);\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/Resolve/resolve_icon.svg");\n}\n:host([style-name=sorcery]) #img {\n  background: linear-gradient(to bottom, #9faafc 0%, #6c75f5 100%);\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/Sorcery/sorcery_icon.svg");\n}\n@-moz-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-webkit-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-o-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-moz-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@-webkit-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@-o-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n:host {\n  align-items: center;\n  border-radius: 50%;\n  cursor: pointer;\n  display: flex;\n  height: 64px;\n  justify-content: center;\n  position: relative;\n  transition: -webkit-filter 0.2s;\n  width: 64px;\n  z-index: 0;\n}\n:host([disabled]) {\n  pointer-events: none;\n}\n:host([disabled]):before {\n  background-color: #1e2328;\n  background-position: 50% 50%;\n  background-size: 110%;\n  border: 2px solid #cdbe91;\n  border-radius: 50%;\n  bottom: -4px;\n  box-sizing: border-box;\n  content: \'\';\n  display: block;\n  height: 22px;\n  position: absolute;\n  right: 0;\n  width: 22px;\n  z-index: 1;\n}\n:host([disabled]):after {\n  background-color: #aaa;\n  background-size: cover;\n  bottom: -6px;\n  content: \'\';\n  height: 22px;\n  position: absolute;\n  right: -2px;\n  width: 22px;\n  z-index: 1;\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/lock.svg");\n  -webkit-mask-position: -1px -6px;\n  -webkit-mask-size: 20px;\n}\n:host(:not([disabled]):hover) {\n  -webkit-filter: brightness(1.3);\n}\n:host .colored {\n  --gradient: linear-gradient(to bottom, #cdbe91 0%, transparent 70%);\n}\n:host([style-name=precision]) .colored {\n  --gradient: linear-gradient(to bottom, #aea789 0%, transparent 70%);\n}\n:host([style-name=precision][disabled]):after {\n  border-color: #aea789;\n}\n:host([style-name=domination]) .colored {\n  --gradient: linear-gradient(to bottom, #d44242 0%, transparent 70%);\n}\n:host([style-name=domination][disabled]):after {\n  border-color: #d44242;\n}\n:host([style-name=sorcery]) .colored {\n  --gradient: linear-gradient(to bottom, #9faafc 0%, transparent 70%);\n}\n:host([style-name=sorcery][disabled]):after {\n  border-color: #9faafc;\n}\n:host([style-name=resolve]) .colored {\n  --gradient: linear-gradient(to bottom, #a1d586 0%, transparent 70%);\n}\n:host([style-name=resolve][disabled]):after {\n  border-color: #a1d586;\n}\n:host([style-name=inspiration]) .colored {\n  --gradient: linear-gradient(to bottom, #49aab9 0%, transparent 70%);\n}\n:host([style-name=inspiration][disabled]):after {\n  border-color: #49aab9;\n}\n:host(:not([spinning])) lol-perks-semicircle-comet {\n  opacity: 0;\n  visibility: hidden;\n}\n:host([spinning]) lol-perks-semicircle-comet,\n:host([spinning]) .gradient {\n  transform: scale(1.18) rotate(120deg);\n}\n#img {\n  height: 55%;\n  width: 55%;\n  -webkit-mask-position: 50% 50%;\n  -webkit-mask-repeat: no-repeat;\n  -webkit-mask-size: contain;\n}\n.ring {\n  height: 100%;\n  left: 0;\n  position: absolute;\n  transform: translateY(6%);\n  transform-origin: 50% 50%;\n  width: 100%;\n}\n.ring+ .ring {\n  transform: rotate(120deg) translateY(6%);\n}\n.ring+ .ring+ .ring {\n  transform: rotate(240deg) translateY(6%);\n}\n#outer-ring {\n  height: 100%;\n  left: 0;\n  position: absolute;\n  width: 100%;\n}\n.inner-ring {\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  position: absolute;\n  width: 100%;\n}\n.gradient {\n  height: 100%;\n  position: absolute;\n  width: 100%;\n}\n.gradient.white {\n  --gradient: linear-gradient(to bottom, #fff 0%, transparent 70%);\n  opacity: 0;\n}\nlol-perks-semicircle-comet,\n.gradient {\n  transform: rotate(120deg);\n  transition: transform 0.2s;\n}\nlol-perks-semicircle-comet {\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  transition: opacity 0.2s, visibility 0.2s, transform 0.2s;\n  width: 100%;\n}\n.small-box {\n  height: 54px;\n  position: relative;\n  width: 54px;\n}\n', ""]), e.exports = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            class o extends s.webComponents.ShadowElement {
                templateMarkup() {
                    return n(26)
                }
                templateStyle() {
                    return n(27)
                }
                constructor() {
                    super(), this._gradientElement = this.shadowRoot.querySelector("lol-perks-gradient-ring"), this._adjustStyles(this.getAttribute("border-width"))
                }
                static get observedAttributes() {
                    return ["border-width"]
                }
                attributeChangedCallback(e, t, n) {
                    "border-width" === e && this._adjustStyles(n)
                }
                _adjustStyles(e) {
                    e && e !== this._borderWidth && (this._gradientElement.setAttribute("border-width", e), this._borderWidth = e, this.style.removeProperty("--border-width"), this.style.setProperty("--border-width", `${e}px`))
                }
            }
            t.default = o, o.tagName = "lol-perks-semicircle-comet"
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <lol-perks-gradient-ring></lol-perks-gradient-ring>\r\n  <div id="head"></div>\r\n</template>\r\n'
        }, (e, t, n) => {
            var s = n(8),
                o = n(9)(s);
            o.push([e.id, "@-moz-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-webkit-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-o-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-moz-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@-webkit-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@-o-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n:host {\n  --border-width: 2px;\n  --color: #fff;\n  --speed: 2s;\n}\n:host([spinning]) {\n  animation: spin var(--speed) linear infinite;\n}\nlol-perks-gradient-ring {\n  --gradient: linear-gradient(to bottom, var(--color) 0%, transparent 100%);\n  height: 100%;\n  position: absolute;\n  width: 100%;\n  -webkit-clip-path: polygon(0% 0%, 50% 0%, 50% 100%, 0% 100%);\n}\n#head {\n  --box-shadow: 0 0 calc(10 / 3 * var(--border-width)) var(--color), 0 0 calc(10 / 3 * var(--border-width)) var(--color), 0 0 calc(10 / 3 * var(--border-width)) var(--color);\n  background: var(--color);\n  border-radius: 50%;\n  box-shadow: var(--box-shadow);\n  height: calc(2 * var(--border-width));\n  left: 50%;\n  position: absolute;\n  top: 0;\n  transform: translate(-50%, calc(-50% + var(--border-width) * 0.5));\n  width: calc(2 * var(--border-width));\n}\n@-moz-keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@-webkit-keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@-o-keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n", ""]), e.exports = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            class o extends s.webComponents.ShadowElement {
                templateMarkup() {
                    return n(29)
                }
                templateStyle() {
                    return n(30)
                }
            }
            t.default = o, o.tagName = "lol-perks-style-filter-checkbox"
        }, e => {
            "use strict";
            e.exports = '<template>\r\n   <div id="icon">\r\n   </div>\r\n  <slot></slot>\r\n</template>\r\n'
        }, (e, t, n) => {
            var s = n(8),
                o = n(9)(s);
            o.push([e.id, ':host([style-name=domination]) #icon {\n  background: linear-gradient(to bottom, #d44242 0%, #dc4747 100%);\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/Domination/domination_icon.svg");\n}\n:host([style-name=inspiration]) #icon {\n  background: linear-gradient(to bottom, #49aab9 0%, #48b4be 100%);\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/Inspiration/inspiration_icon.svg");\n}\n:host([style-name=precision]) #icon {\n  background: linear-gradient(to bottom, #aea789 0%, #c8aa6e 100%);\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/Precision/precision_icon.svg");\n}\n:host([style-name=resolve]) #icon {\n  background: linear-gradient(to bottom, #a1d586 0%, #a4d08d 100%);\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/Resolve/resolve_icon.svg");\n}\n:host([style-name=sorcery]) #icon {\n  background: linear-gradient(to bottom, #9faafc 0%, #6c75f5 100%);\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/Sorcery/sorcery_icon.svg");\n}\n@-moz-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-webkit-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-o-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-moz-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@-webkit-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@-o-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n:host {\n  border-radius: 50%;\n  box-sizing: border-box;\n  cursor: pointer;\n  height: 42px;\n  position: relative;\n  width: 42px;\n}\n:host(:hover) #icon,\n:host([checked]) #icon {\n  opacity: 1;\n}\n#icon {\n  background: linear-gradient(to bottom, #dfe5e5 0%, #adb2b2 100%);\n  height: 100%;\n  opacity: 0.4;\n  position: absolute;\n  transition: opacity 0.2s;\n  width: 100%;\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/runes.svg");\n  -webkit-mask-position: 50% 50%;\n  -webkit-mask-repeat: no-repeat;\n  -webkit-mask-size: 23px;\n}\n', ""]), e.exports = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            class o extends s.webComponents.ShadowElement {
                templateMarkup() {
                    return n(32)
                }
                templateStyle() {
                    return n(33)
                }
            }
            t.default = o, o.tagName = "lol-perks-style-icon-button"
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <span id="hover">\r\n    <div id="icon"></div>\r\n    <lol-perks-gradient-ring></lol-perks-gradient-ring>\r\n  </span>\r\n  <slot></slot>\r\n</template>\r\n'
        }, (e, t, n) => {
            var s = n(8),
                o = n(9)(s);
            o.push([e.id, ':host([style-name=domination]) #icon {\n  background: linear-gradient(to bottom, #d44242 0%, #dc4747 100%);\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/Domination/domination_icon.svg");\n}\n:host([style-name=inspiration]) #icon {\n  background: linear-gradient(to bottom, #49aab9 0%, #48b4be 100%);\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/Inspiration/inspiration_icon.svg");\n}\n:host([style-name=precision]) #icon {\n  background: linear-gradient(to bottom, #aea789 0%, #c8aa6e 100%);\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/Precision/precision_icon.svg");\n}\n:host([style-name=resolve]) #icon {\n  background: linear-gradient(to bottom, #a1d586 0%, #a4d08d 100%);\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/Resolve/resolve_icon.svg");\n}\n:host([style-name=sorcery]) #icon {\n  background: linear-gradient(to bottom, #9faafc 0%, #6c75f5 100%);\n  -webkit-mask-image: url("/fe/lol-collections/perks/images/Sorcery/sorcery_icon.svg");\n}\n@-moz-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-webkit-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-o-keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@keyframes perks-item-description-fade-in {\n  from {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n}\n@-moz-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@-webkit-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@-o-keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n@keyframes perks-item-description-fade-out {\n  from {\n    opacity: 1;\n    transform: translateX(0);\n    visibility: visible;\n  }\n  to {\n    opacity: 0;\n    transform: translateX(10px);\n    visibility: hidden;\n  }\n}\n:host {\n  border-radius: 50%;\n  box-sizing: border-box;\n  cursor: pointer;\n  height: 45px;\n  position: relative;\n  width: 45px;\n}\n:host(:not([selected])) lol-perks-gradient-ring {\n  opacity: 0;\n  transform: translateX(-50%) scale(1.15);\n  visibility: hidden;\n}\n:host(:not(:hover)) #hover {\n  opacity: 0.5;\n}\n:host(:hover) #hover {\n  opacity: 0.8;\n}\n:host([disabled]) {\n  -webkit-filter: grayscale(1) brightness(0.5);\n}\n#hover {\n  transition: opacity 0.15s;\n}\n#icon {\n  height: 100%;\n  position: absolute;\n  width: 100%;\n  -webkit-mask-position: 50% 50%;\n  -webkit-mask-repeat: no-repeat;\n  -webkit-mask-size: 22px;\n}\nlol-perks-gradient-ring {\n  --gradient: linear-gradient(to bottom, #785a28 0%, #c8aa6e 50%, #785a28 100%);\n  height: 100%;\n  left: 50%;\n  pointer-events: none;\n  position: absolute;\n  transform: translateX(-50%);\n  transition: opacity 0.15s, visibility 0.15s, transform 0.15s;\n  width: 45px;\n}\n', ""]), e.exports = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            class o extends s.webComponents.ShadowElement {
                templateMarkup() {
                    return n(35)
                }
                templateStyle() {
                    return n(36)
                }
            }
            t.default = o, o.tagName = "lol-perks-switch"
        }, e => {
            "use strict";
            e.exports = '<template>\r\n  <div id="green"></div>\r\n  <div id="red">\r\n    <div id="x">\r\n      <div class="kris"></div>\r\n      <div class="kross"></div>\r\n    </div>\r\n  </div>\r\n  <lol-perks-garbage-button></lol-perks-garbage-button>\r\n  <slot></slot>\r\n</template>\r\n'
        }, (e, t, n) => {
            var s = n(8),
                o = n(9)(s);
            o.push([e.id, ":host {\n  background: linear-gradient(to bottom, #c8aa6e 0%, #614a25 100%);\n  border-radius: 12px;\n  box-shadow: 0px 0px 2px 0px rgba(0,0,0,0.85);\n  cursor: pointer;\n  height: 24px;\n  position: relative;\n  transition: -webkit-filter 0.2s;\n  width: 47px;\n}\n:host([disabled]) {\n  -webkit-filter: grayscale(100%);\n}\n:host([active]) #red {\n  -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);\n}\n:host([disabled]) #red,\n:host(:not([active])) #red {\n  -webkit-clip-path: polygon(0% 0%, 0% 0%, 0% 100%, 0% 100%);\n}\n:host([active]:not([disabled])) lol-perks-garbage-button {\n  transform: translateX(23px);\n}\n#green,\n#red {\n  border-radius: 10px;\n  box-shadow: inset 0px 0px 3px 0px rgba(0,0,0,0.35), inset 0px 4px 8px 0px rgba(0,0,0,0.68);\n  height: 20px;\n  left: 2px;\n  position: absolute;\n  top: 2px;\n  width: 43px;\n}\n#green {\n  background: linear-gradient(to right, #175341 0%, #071424 100%);\n}\n#red {\n  background: linear-gradient(to right, #722a2c 0%, #db2234 100%);\n  transition: -webkit-clip-path 0.2s;\n}\n#x {\n  left: 12px;\n  opacity: 0.27;\n  position: absolute;\n  top: 53%;\n  -webkit-filter: drop-shadow(0 0 1px #fff);\n}\n.kris,\n.kross {\n  background: #000;\n  height: 2px;\n  position: absolute;\n  width: 12px;\n}\n.kris {\n  transform: translate(-50%, -50%) rotate(45deg);\n}\n.kross {\n  transform: translate(-50%, -50%) rotate(-45deg);\n}\nlol-perks-garbage-button {\n  left: -2px;\n  position: absolute;\n  top: -2px;\n  transition: transform 0.2s;\n}\n", ""]), e.exports = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            class o extends s.webComponents.ShadowElement {
                templateMarkup() {
                    return n(38)
                }
                templateStyle() {
                    return n(39)
                }
            }
            t.default = o, o.tagName = "lol-perks-update-ring"
        }, e => {
            "use strict";
            e.exports = "<template>\r\n  <lol-perks-gradient-ring>\r\n    <lol-perks-glowing-dot></lol-perks-glowing-dot>\r\n  </lol-perks-gradient-ring>\r\n</template>\r\n"
        }, (e, t, n) => {
            var s = n(8),
                o = n(9)(s);
            o.push([e.id, ":host {\n  height: calc(100% + 26px);\n  left: 50%;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%) rotate(45deg);\n  width: calc(100% + 26px);\n  z-index: 0;\n}\nlol-perks-gradient-ring {\n  --gradient: linear-gradient(to bottom, #c89b3c 0%, rgba(200,155,60,0) 100%);\n  display: block;\n  height: 100%;\n}\nlol-perks-glowing-dot {\n  left: 50%;\n  position: absolute;\n  top: 0;\n  transform: translate(-50%, calc(-50% - 1px));\n  z-index: 1;\n}\n", ""]), e.exports = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(41),
                i = c(n(262)),
                l = c(n(268)),
                a = c(n(275)),
                r = c(n(372));

            function c(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const d = new class {
                constructor() {
                    this._application = null, this._applicationInstance = null, this._applicationRootElement = null, this._screenRoot = this._getScreenRoot(), this._perksApi = null, this._itemSetsApi = null, this._factoryRegistered = !1, this._initObservers(), (0, r.default)(), this._itemSetsApi = (0, i.default)(), this._emotePanelApi = (0, l.default)(), this._perksApi = new a.default
                }
                navigateTo(e, t) {
                    return t || (t = {}), this._screenRoot.bump().then((() => {
                        if (this._application) throw this.hide(), new Error("Collections app already exists, retrying...");
                        const e = this._setupEmberApplication();
                        return this._applicationRootElement = e.domNode, e.emberAppInstancePromise
                    })).then((n => {
                        switch (this._application = n, e) {
                            case "champions":
                                return n.visit(`/champions?group=${t.groupBy}&sort=${t.sortBy}&show_unowned=${t.isUnownedShown}`);
                            case "skins":
                                return n.visit("/skins");
                            case "emotes":
                                return n.visit("/emotes");
                            case "runes":
                                return n.visit("/runes");
                            case "spells":
                                return n.visit("/spells");
                            case "items":
                                return n.visit("/items");
                            case "icons":
                                return n.visit(`/summoner-icons?group=${t.groupBy}&sort=${t.sortBy}&show_unowned=${t.isUnownedShown}&show_unavailable=${t.isUnavailableShown}`);
                            case "wards":
                                return n.visit(`/wards?group=${t.groupBy}&sort=${t.sortBy}&show_unowned=${t.isUnownedShown}&show_unavailable=${t.isUnavailableShown}`);
                            case "chromas":
                                return n.visit(`/chromas?group=${t.groupBy}&sort=${t.sortBy}&show_unowned=${t.isUnownedShown}&show_unavailable=${t.isUnavailableShown}`);
                            default:
                                return n.visit("/")
                        }
                    })).then((e => {
                        this._screenRoot.getElement().appendChild(this._applicationRootElement), this._applicationInstance = e
                    })).catch((n => (s.logger.trace("navigateTo", n), this.navigateTo(e, t))))
                }
                show() {
                    this.navigateTo("index")
                }
                hide() {
                    this._application && (this._screenRoot.release(), this._screenRoot.getElement().contains(this._applicationRootElement) && this._screenRoot.getElement().removeChild(this._applicationRootElement), this._applicationInstance && this._applicationInstance.destroy(), this._application && this._application.destroy(), this._application = null, this._applicationInstance = null, this._applicationRootElement = null)
                }
                perksApi() {
                    return this._perksApi
                }
                getItemSetsApi() {
                    return this._itemSetsApi
                }
                getEmotePanelApi() {
                    return this._emotePanelApi
                }
                _initObservers() {
                    (0, s.dataBinding)("/lol-gameflow", s.socket).observe("/v1/session", this, (e => {
                        e && "ChampSelect" === e.phase && this.hide()
                    }))
                }
                _setupEmberApplication() {
                    if (!this._application || this._application.isDestroyed || this._application.isDestroying) return this._factoryRegistered || ((0, o.registerEmberApplication)(), this._factoryRegistered = !0), (0, o.createEmberApplication)()
                }
                _getScreenRoot() {
                    const e = "rcp-fe-lol-collections",
                        t = s.Viewport.getApiKey(e);
                    return s.Viewport.main().getScreenRoot(t, e)
                }
            };
            Object.seal(d);
            var m = d;
            t.default = m
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.APP_NAME = void 0, t.createEmberApplication = function() {
                return s.ComponentFactory.create(it)
            }, t.registerEmberApplication = function() {
                const e = {
                    ComponentFactory: s.ComponentFactory,
                    disableAutoboot: !0,
                    Router: o.default,
                    IndexRoute: i.default,
                    ChampionsRoute: l.default,
                    SkinsRoute: a.default,
                    RunesRoute: r.default,
                    SpellsRoute: c.default,
                    SummonerIconsRoute: d.default,
                    WardsRoute: m.default,
                    ChromasRoute: p.default,
                    ApplicationController: u.default,
                    ChampionsController: h.default,
                    SkinsController: g.default,
                    SpellsController: f.default,
                    SummonerIconsController: _.default,
                    WardsController: y.default,
                    ChromasController: b.default,
                    LegacyAppMountComponent: S.default,
                    ChampionItemComponent: k.default,
                    InventoryItemComponent: x.default,
                    SkinItemHeaderComponent: v.default,
                    SummonerIconHeaderComponent: E.default,
                    CollectionsSubNavComponent: I.default,
                    CollectionsTooltipComponent: w.default,
                    NumberFanfareComponent: P.default,
                    RenderTelemetrySenderComponent: ot,
                    CollectionDetailsComponent: T.default,
                    CollectionControlsComponent: C.default,
                    CollectionGroupHeaderComponent: R.default,
                    ReplayButtonComponent: O.default,
                    VideoWrapperComponent: A.default,
                    StyleFilterComponent: ke.default,
                    InventoryCardsComponent: ye.default,
                    InventoryCardComponent: _e.default,
                    InventoryPageComponent: be.default,
                    HextechLoadingAnimationComponent: st,
                    EmoteRootComponent: le.default,
                    EmoteInventoryComponent: ae.default,
                    EmoteWheelComponent: re.default,
                    EmoteWheelSlotComponent: ce.default,
                    EmoteDeleteSlotComponent: de.default,
                    EmoteReactionsComponent: me.default,
                    ChampionSelectorComponent: F.default,
                    CircleButtonComponent: U.default,
                    ItemBuildTreeComponent: H.default,
                    ItemFilterPanelComponent: V.default,
                    ItemGridComponent: K.default,
                    ItemSetEditorComponent: G.default,
                    ItemSetImportModalComponent: W.default,
                    ItemSetMenuComponent: Y.default,
                    ItemSetModalRootComponent: q.default,
                    ItemTooltipComponent: X.default,
                    ItemsRootComponent: $.default,
                    PreferredSlotsMenuComponent: z.default,
                    RecommendedSetViewerComponent: Q.default,
                    tra: s.traService,
                    ClientConfigService: D.default,
                    PipNotificationsService: M.default,
                    PlatformConfigService: L.default,
                    RiotclientService: N.default,
                    SettingsPreferencesService: B.default,
                    SummonerService: j.default,
                    StoreService: Ie.default,
                    TutorialService: we.default,
                    PlatformSettingsService: Ee.default,
                    SettingsService: xe.default,
                    AudioService: ve.default,
                    EmotesService: pe.default,
                    LoadoutsService: ue.default,
                    ErrorsHandlerService: ge.default,
                    EmoteSoundsService: he.default,
                    ItemSetsService: Z.default,
                    ExportItemSetHelper: J.default,
                    EqHelper: Se.default,
                    VirtualListHelper: fe.default,
                    BlockEntity: ee.default,
                    ItemSetEntity: te.default,
                    ItemEntity: ne.default,
                    KeyDisplaysEntity: te.default,
                    ModalMixin: se.default,
                    SortableMixin: oe.default,
                    TelemetryMixin: ie.default,
                    TEMPLATES: {
                        application: Pe.default,
                        index: Te.default,
                        loading: Ce.default,
                        runes: Ae.default,
                        champions: Re.default,
                        skins: Oe.default,
                        emotes: De.default,
                        spells: Me.default,
                        items: Le.default,
                        "summoner-icons": Ne.default,
                        wards: Be.default,
                        chromas: je.default,
                        "components/champion-item": Ue.default,
                        "components/legacy-app-mount": Fe.default,
                        "components/inventory-item": He.default,
                        "components/skin-item-header": Ve.default,
                        "components/summoner-icon-header": Ke.default,
                        "components/collections-tooltip": Ge.default,
                        "components/collections-sub-nav": We.default,
                        "components/number-fanfare": Ye.default,
                        "components/collection-details": qe.default,
                        "components/collection-controls": Xe.default,
                        "components/collection-group-header": $e.default,
                        "components/replay-button": ze.default,
                        "components/video-wrapper": Qe.default,
                        "components/style-filter": Je.default,
                        "components/inventory-cards": Ze.default,
                        "components/inventory-card": et.default,
                        "components/inventory-page": tt.default
                    }
                };
                s.SharedComponents.getSharedEmberComponents().EmberCollectionApi.registerToFactoryDefinition(e), s.EmberApplicationFactory.setFactoryDefinition(it, e, {
                    EMBER_CLI_COMPAT: !0
                }), s.EmberApplicationFactory.setFactoryDefinition({
                    name: "SkinsPreview",
                    tra: s.traService,
                    ComponentFactory: s.ComponentFactory,
                    SkinsPreviewComponent: n(259).default,
                    EqHelper: Se.default
                })
            };
            var s = n(1),
                o = nt(n(42)),
                i = nt(n(43)),
                l = nt(n(44)),
                a = nt(n(45)),
                r = nt(n(50)),
                c = nt(n(51)),
                d = nt(n(52)),
                m = nt(n(54)),
                p = nt(n(56)),
                u = nt(n(58)),
                h = nt(n(60)),
                g = nt(n(62)),
                f = nt(n(81)),
                _ = nt(n(83)),
                y = nt(n(84)),
                b = nt(n(85)),
                k = nt(n(86)),
                S = nt(n(87)),
                v = nt(n(88)),
                E = nt(n(89)),
                x = nt(n(90)),
                I = nt(n(91)),
                w = nt(n(92)),
                P = nt(n(93)),
                T = nt(n(96)),
                C = nt(n(97)),
                R = nt(n(98)),
                O = nt(n(99)),
                A = nt(n(100)),
                D = nt(n(101)),
                M = nt(n(102)),
                L = nt(n(103)),
                N = nt(n(104)),
                B = nt(n(105)),
                j = nt(n(106)),
                F = nt(n(107)),
                U = nt(n(113)),
                H = nt(n(116)),
                V = nt(n(122)),
                K = nt(n(125)),
                G = nt(n(129)),
                W = nt(n(140)),
                Y = nt(n(143)),
                q = nt(n(146)),
                X = nt(n(149)),
                $ = nt(n(152)),
                z = nt(n(156)),
                Q = nt(n(159)),
                J = nt(n(138)),
                Z = nt(n(162)),
                ee = nt(n(133)),
                te = nt(n(134)),
                ne = nt(n(132)),
                se = nt(n(135)),
                oe = nt(n(117)),
                ie = nt(n(136)),
                le = nt(n(178)),
                ae = nt(n(183)),
                re = nt(n(187)),
                ce = nt(n(190)),
                de = nt(n(193)),
                me = nt(n(196)),
                pe = nt(n(199)),
                ue = nt(n(200)),
                he = nt(n(180)),
                ge = nt(n(201)),
                fe = nt(n(202)),
                _e = nt(n(204)),
                ye = nt(n(205)),
                be = nt(n(206)),
                ke = nt(n(210)),
                Se = nt(n(211)),
                ve = nt(n(212)),
                Ee = nt(n(214)),
                xe = nt(n(216)),
                Ie = nt(n(217)),
                we = nt(n(229)),
                Pe = nt(n(230)),
                Te = nt(n(231)),
                Ce = nt(n(232)),
                Re = nt(n(233)),
                Oe = nt(n(234)),
                Ae = nt(n(235)),
                De = nt(n(236)),
                Me = nt(n(237)),
                Le = nt(n(238)),
                Ne = nt(n(239)),
                Be = nt(n(240)),
                je = nt(n(241)),
                Fe = nt(n(242)),
                Ue = nt(n(243)),
                He = nt(n(244)),
                Ve = nt(n(245)),
                Ke = nt(n(246)),
                Ge = nt(n(247)),
                We = nt(n(248)),
                Ye = nt(n(249)),
                qe = nt(n(250)),
                Xe = nt(n(251)),
                $e = nt(n(252)),
                ze = nt(n(253)),
                Qe = nt(n(254)),
                Je = nt(n(255)),
                Ze = nt(n(256)),
                et = nt(n(257)),
                tt = nt(n(258));

            function nt(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const {
                HextechLoadingAnimationComponent: st,
                RenderTelemetrySenderComponent: ot
            } = s.SharedComponents.getSharedEmberComponents(), it = "rcp-fe-lol-collections-ember";
            t.APP_NAME = it
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            const s = n(1).Ember.Router.extend({
                location: "none"
            });
            s.map((function() {
                this.route("champions"), this.route("skins"), this.route("emotes"), this.route("runes"), this.route("spells"), this.route("items"), this.route("summoner-icons"), this.route("wards"), this.route("chromas")
            }));
            var o = s;
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1).Ember.Route.extend({
                beforeModel() {
                    this.replaceWith("champions")
                }
            });
            t.default = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const o = "collections-champions-rendered";
            var i = s.Ember.Route.extend({
                platformConfig: s.Ember.inject.service("platform-config"),
                settingsPreferences: s.Ember.inject.service("settings-preferences"),
                shouldFetchPreferences: !0,
                beforeModel(e) {
                    if (e.queryParams) {
                        const t = 0 === Object.keys(e.queryParams).length;
                        this.set("shouldFetchPreferences", t)
                    }
                },
                model() {
                    s.Telemetry.startTracingEvent(o);
                    const e = (0, s.dataBinding)("/lol-login", s.socket).get("/v1/session"),
                        t = this.get("platformConfig").getEternalsConfig();
                    return Promise.all([e, t]).then((e => {
                        const [t, n] = e;
                        if (!t || !t.summonerId || !t.puuid) return null;
                        const o = n ? (0, s.dataBinding)("/lol-statstones", s.socket).get("/v2/player-summary-self") : Promise.resolve(),
                            i = (0, s.dataBinding)("/lol-collections", s.socket).get(`v1/inventories/${t.puuid}/champion-mastery`),
                            l = this.championsObservationPromise(t.summonerId);
                        return Promise.all([l, i, o])
                    })).then((e => {
                        const [t, n, i] = e, l = s.ChampionStatistics.getPlayRates(), a = t.filter((e => e.id > 0)), r = this.mapMasteryById(n), c = this.mapPositionsById(l), d = this.mapEternalsById(i);
                        return {
                            champions: this.combineChampionData(a, r, c, d),
                            renderEventName: o
                        }
                    }))
                },
                setupController(e, t) {
                    this._super(e, t), this.get("shouldFetchPreferences") && this.get("settingsPreferences").getChampionsAccountSettings().then((t => {
                        const n = {
                            groupBy: "allChampions",
                            sortBy: "firstLetterAscending",
                            isUnownedShown: !1
                        };
                        t && t.data && (n.groupBy = t.data.groupingDropdownKey, n.sortBy = t.data.sortingDropdownKey, n.isUnownedShown = "owned" === t.data.unownedFilter), e.setProperties(n)
                    }))
                },
                championsObservationPromise(e) {
                    return new Promise((t => {
                        (0, s.dataBinding)("/lol-champions", s.socket).observe(`/v1/inventories/${e}/champions-minimal`, this, (n => {
                            n && Array.isArray(n) && ((0, s.dataBinding)("/lol-champions", s.socket).unobserve(`/v1/inventories/${e}/champions-minimal`, this), t(n))
                        }))
                    }))
                },
                mapMasteryById(e) {
                    const t = new Map;
                    if (e)
                        for (let n = 0; n < e.length; ++n) t.set(e[n].championId, e[n]);
                    return t
                },
                mapPositionsById(e) {
                    const t = new Map,
                        n = Object.entries(e);
                    for (const [e, s] of n) {
                        const n = Object.keys(s);
                        for (const s of n) {
                            const n = Number.parseInt(s, 10);
                            let o = t.get(n);
                            o ? o.push(e) : o = [e], t.set(n, o)
                        }
                    }
                    return t
                },
                mapEternalsById(e) {
                    const t = new Map;
                    return Array.isArray(e) && e.forEach((e => {
                        t.set(e.championId, e)
                    })), t
                },
                combineChampionData(e, t, n, s) {
                    const o = [];
                    return e.forEach((e => {
                        const i = Object.assign({}, e),
                            l = t.get(i.id),
                            a = s.get(i.id);
                        i.positions = n.get(i.id), l ? (i.masteryLevel = l.championLevel, i.masteryScore = l.championPoints, i.masteryPrimarySort = l.championLevel, i.masterySecondarySort = l.championPoints, i.formattedMasteryScore = l.formattedChampionPoints, i.formattedMasteryGoal = l.formattedMasteryGoal, i.lastPlayedTime = l.lastPlayTime, i.chestGranted = l.chestGranted ? 1 : 0, i.highestGrade = l.highestGrade, i.masteryGoal = l.championPoints + l.championPointsUntilNextLevel, i.masteryLevel < 6 ? i.masteryPercent = l.championPointsSinceLastLevel / i.masteryGoal * 100 : i.masteryPercent = 100) : (i.masteryLevel = 0, i.masteryPrimarySort = 0, i.masterySecondarySort = 0, i.lastPlayedTime = 0, i.chestGranted = 0, i.highestGrade = "", i.formattedMasteryScore = "0", i.formattedMasteryGoal = "0", i.masteryGoal = 0, i.masteryPercent = 0), a ? (i.eternalsOwned = a.stonesOwned, i.eternalsSets = a.sets, i.milestonesPassed = a.milestonesPassed) : (i.eternalsSets = [], i.milestonesPassed = 0), o.push(i)
                    })), o
                },
                setAccountSettingsPreferences() {
                    const e = {
                        groupBy: this.controller.get("groupBy"),
                        sortBy: this.controller.get("sortBy"),
                        isUnownedShown: this.controller.get("isUnownedShown")
                    };
                    this.get("settingsPreferences").setChampionsAccountSettings(e)
                },
                willDestroy() {
                    this._super(...arguments), (0, s.dataBinding)("/lol-champions", s.socket).unobserve(this)
                },
                actions: {
                    refreshCurrentRoute() {
                        this.refresh()
                    },
                    willTransition() {
                        return this.setAccountSettingsPreferences(), !0
                    }
                }
            });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(46),
                i = n(49),
                l = s.Ember.Route.extend({
                    settingsPreferences: s.Ember.inject.service("settings-preferences"),
                    pipNotifications: s.Ember.inject.service("pip-notifications"),
                    riotclient: s.Ember.inject.service("riotclient"),
                    beforeModel(e) {
                        if (e.queryParams) {
                            const t = 0 === Object.keys(e.queryParams).length;
                            this.set("shouldFetchPreferences", t)
                        }
                    },
                    model() {
                        return s.Telemetry.startTracingEvent(o.RENDER_EVENT_NAME), (0, s.dataBinding)("/lol-login", s.socket).get("/v1/session").then((e => {
                            const t = this.get("riotclient").getRegion(),
                                n = this.get("settingsPreferences").getSkinsAccountSettings(),
                                i = (0, s.dataBinding)("/lol-game-data", s.socket).get("/assets/v1/skins.json"),
                                l = (0, s.dataBinding)("/lol-game-data", s.socket).get("/assets/v1/skinlines.json"),
                                a = (0, s.dataBinding)("/lol-game-data", s.socket).get("/assets/v1/universes.json"),
                                r = (0, s.dataBinding)("/lol-inventory", s.socket).get("/v2/inventory/CHAMPION_SKIN"),
                                c = (0, s.dataBinding)("/lol-champions", s.socket).get(`/v1/inventories/${e.summonerId}/champions`),
                                d = (0, s.dataBinding)("/lol-catalog", s.socket).get("/v1/items/SKIN_BORDER"),
                                m = (0, s.dataBinding)("/lol-collections", s.socket).get(`/v1/inventories/${e.puuid}/champion-mastery`),
                                p = (0, s.dataBinding)("/lol-store", s.socket).get(`/v1/catalog?inventoryType=${JSON.stringify([o.CHAMPION_SKIN,o.BUNDLES])}`),
                                u = (0, s.dataBinding)("/lol-loot", s.socket).get("/v1/loot-items");
                            return Promise.all([t, n, i, l, a, r, c, m, p, u, d]).then((e => {
                                const [t, n, s, i, l, a, r, c, d, m, p] = e, u = this.getSkinsById(s, t), {
                                    championBySkinId: h,
                                    championsById: g
                                } = this.getChampionsInfo(r), f = this.getOwnershipById(a), _ = this.getCatalogDataById(d), y = this.getIsInBundleById(_), b = this.getLootItemSet(m), k = this.getOwnedSkinBordersInfo(p);
                                this.joinPurchaseData(u, _, y, b), this.joinOwnershipData(u, f), this.joinChampionData(u, h), this.joinSetData(u, i, l), this.joinSkinBorderData(u, k);
                                const S = this.getSortableMasteries(c, g);
                                return {
                                    skinsById: u,
                                    rarities: this.getRarities(u, t),
                                    sortableMasteries: S,
                                    numOwnedChromas: this.getNumOwnedChromas(u),
                                    region: t,
                                    lastVisitTime: n.data && n.data.lastVisitTime,
                                    renderEventName: o.RENDER_EVENT_NAME
                                }
                            }))
                        }))
                    },
                    setupController(e, t) {
                        this._super(e, t), this.get("pipNotifications.hasSkinsForReview") ? (this.get("pipNotifications").dismissNotification("skins"), e.setProperties({
                            groupBy: "myCollection",
                            sortBy: "acquisitionDate",
                            isUnownedShown: !1
                        })) : this.get("shouldFetchPreferences") && this.get("settingsPreferences").getSkinsAccountSettings().then((t => {
                            const n = {
                                groupBy: "myCollection",
                                sortBy: "acquisitionDate",
                                isUnownedShown: !1
                            };
                            t && t.data && t.schemaVersion === o.SKINS_ACCOUNT_SETTINGS_VERSION ? (n.groupBy = t.data.groupingDropdownKey, n.sortBy = t.data.sortingDropdownKey, n.isUnownedShown = t.data.unownedFilter) : this.get("settingsPreferences").setSkinsAccountSettings(n), e.setProperties(n)
                        }))
                    },
                    getOwnershipById(e) {
                        const t = new Map;
                        return e.forEach((e => {
                            t.set(e.itemId, e)
                        })), t
                    },
                    getNumOwnedChromas(e) {
                        let t = 0;
                        return e.forEach((e => {
                            Array.isArray(e.chromas) && e.chromas.forEach((e => {
                                e.ownership && e.ownership.owned && ++t
                            }))
                        })), t
                    },
                    joinSetData(e, t, n) {
                        const s = new Map,
                            o = new Map;
                        n.forEach((e => {
                            Array.isArray(e.skinSets) && e.skinSets.forEach((t => {
                                s.set(t, e)
                            }))
                        })), t.forEach((e => {
                            o.set(e.id, e)
                        })), e.forEach(((e, t) => {
                            Array.isArray(e.skinLines) && (e.skinLines.forEach((t => {
                                const n = o.get(t.id);
                                t.name = n.name, e.universe = s.get(t.id)
                            })), e.skinSet = e.skinLines[0])
                        }))
                    },
                    joinPurchaseData(e, t, n, s) {
                        e.forEach(((e, o) => {
                            e.isInBundle = n.get(o) || !1, e.lootable = s.has(o);
                            const i = t.get(o);
                            if (i && !0 === i.active) {
                                e.releaseYear = new Date(i.releaseDate).getFullYear(), e.releaseDate = new Date(i.releaseDate);
                                const t = i.prices;
                                t && t.length > 0 && (e.prices = t.filter((e => e.cost > 0))), e.tags = i.tags, e.offerId = i.offerId
                            } else e.releaseYear = 0, e.releaseDate = 0
                        }))
                    },
                    getLootItemSet(e) {
                        const t = new Set;
                        return e.forEach((e => {
                            !e || e.tags && e.tags.includes(o.UNAVAILABLE_LOOT_ITEM_TAG) || e.type === o.CHAMPION_SKIN && t.add(e.storeItemId)
                        })), t
                    },
                    getCatalogDataById(e) {
                        const t = new Map;
                        return e.forEach((e => {
                            e.active && t.set(e.itemId, e)
                        })), t
                    },
                    getIsInBundleById(e) {
                        const t = new Map;
                        return e.forEach(((e, n) => {
                            e.bundled && e.bundled.items.forEach((e => {
                                e.inventoryType === o.CHAMPION_SKIN && t.set(e.itemId, !0)
                            }))
                        })), t
                    },
                    joinOwnershipData(e, t) {
                        e.forEach(((e, n) => {
                            if (e.questSkinInfo && this.addChildSkinOwnershipData(e.questSkinInfo.tiers, t), !t.has(n)) return;
                            const s = t.get(n);
                            e.ownership.rental.purchaseDate = this.get("tra.moment")(s.purchaseDate).valueOf(), e.ownership.owned = "OWNED" === s.ownershipType, e.isVintage = s.payload && s.payload.isVintage, this.addChildSkinOwnershipData(e.chromas, t)
                        }))
                    },
                    addChildSkinOwnershipData(e, t) {
                        Array.isArray(e) && e.forEach((e => {
                            if (e.ownership = {
                                    rental: {},
                                    owned: !1
                                }, !t.has(e.id)) return;
                            const n = t.get(e.id);
                            e.ownership.rental.purchaseDate = this.get("tra.moment")(n.purchaseDate).valueOf(), e.ownership.owned = "OWNED" === n.ownershipType
                        }))
                    },
                    getSortableMasteries(e, t) {
                        const n = [];
                        return Array.isArray(e) ? (e.forEach((e => {
                            const s = Object.assign({}, e);
                            s.name = t[e.championId].name, s.masteryPrimarySort = e.championLevel, s.masterySecondarySort = e.championPoints, n.push(s)
                        })), n) : n
                    },
                    joinChampionData(e, t) {
                        e.forEach(((e, n) => {
                            t.has(n) && (e.champion = t.get(n))
                        }))
                    },
                    getSkinsById(e, t) {
                        const n = new Map;
                        return Object.values(e).forEach((e => {
                            if ((0, i.isBaseSkin)(e.id)) return;
                            const s = Object.assign({}, e);
                            s.ownership = {
                                rental: {
                                    purchaseDate: null
                                }
                            }, s.rarity = this.getRegionalRarityInfo(s, t), n.set(s.id, s)
                        })), n
                    },
                    getRegionalRarityInfo(e, t) {
                        const n = "TENCENT" === t,
                            s = n ? o.TENCENT_SKIN_RARITY_INFORMATION_BY_TIER : o.SKIN_RARITY_INFORMATION_BY_TIER;
                        let i = s[n ? e.regionRarityId : o.SKIN_RARITY_TIER_ORDER_MAP[e.rarity]];
                        return i || (i = s[0]), i
                    },
                    getRarities(e, t) {
                        const n = "TENCENT" === t ? o.TENCENT_SKIN_RARITY_INFORMATION_BY_TIER : o.SKIN_RARITY_INFORMATION_BY_TIER,
                            s = {},
                            i = [];
                        e.forEach((e => {
                            const t = e.rarity.order;
                            0 !== t && (i.includes(t) || (s[t] = Object.assign({}, n[t]), s[t].ownedCount = 0, i.push(t)), e.ownership && e.ownership.owned && s[t].ownedCount++)
                        }));
                        return Object.values(s).sort(((e, t) => t.order - e.order))
                    },
                    getChampionsInfo(e) {
                        const t = new Map,
                            n = new Map;
                        return e.forEach((e => {
                            n[e.id] = e, e.skins && e.skins.forEach((n => {
                                t.set(n.id, e)
                            }))
                        })), {
                            championBySkinId: t,
                            championsById: n
                        }
                    },
                    getOwnedSkinBordersInfo(e) {
                        const t = new Map;
                        return Object.values(e).forEach((e => {
                            if (e.owned && e.metadata) {
                                const n = e.metadata.find((e => "APPLICABLE_SKINS" === e.type));
                                if (n) {
                                    new Map(Object.entries(JSON.parse(n.value))).forEach(((n, s) => {
                                        const o = new Object;
                                        s = parseInt(s), o.skinBorderId = e.itemId, o.image = e.imagePath, o.priority = n.priority, o.layer = n.layer, o.purchaseDate = 1e3 * e.purchaseDate, t.has(s) ? t.get(s).push(o) : t.set(s, [o])
                                    }))
                                }
                            }
                        })), t
                    },
                    joinSkinBorderData(e, t) {
                        e.forEach(((e, n) => {
                            t.has(n) && (e.ownedSkinBorders = t.get(n))
                        }))
                    },
                    setAccountSettings() {
                        const e = {
                            groupBy: this.controller.get("groupBy"),
                            sortBy: this.controller.get("sortBy"),
                            isUnownedShown: this.controller.get("isUnownedShown")
                        };
                        this.get("settingsPreferences").setSkinsAccountSettings(e)
                    },
                    actions: {
                        refreshCurrentRoute() {
                            this.refresh()
                        },
                        willTransition() {
                            return this.setAccountSettings(), !0
                        }
                    }
                });
            t.default = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UNIVERSE_GROUP_HEADING_HEIGHT = t.UNAVAILABLE_LOOT_ITEM_TAG = t.TENCENT_SKIN_RARITY_INFORMATION_BY_TIER = t.SPLASH_VIDEO_CONFIG = t.SKIN_TAGS = t.SKIN_RARITY_TIER_ORDER_MAP = t.SKIN_RARITY_INFORMATION_BY_TIER = t.SKIN_ITEM_WIDTH = t.SKIN_ITEM_HEIGHT = t.SKINS_VIEWER_ASSET_BASE_PATH = t.SKINS_ACCOUNT_SETTINGS_VERSION = t.RENDER_EVENT_NAME = t.ITEMS_PER_ROW = t.GROUP_HEADING_WIDTH = t.GROUP_HEADING_HEIGHT = t.COLLECTION_VIEW_VIDEO_BASE_PATH = t.CHAMPION_SKIN = t.BUNDLES = void 0, t.groupAndSortByChampion = function(e, t, n) {
                e.sort(s.compareAlphabeticalName);
                const i = function(e) {
                        return e.sort(s.compareOwnership), (0, o.createMappingOfArrays)(e, null, (e => e.champion.name))
                    }(e),
                    l = Array.from(i);
                switch (n) {
                    case "alphabetical":
                        l.sort(s.compareGroupAlphabetical);
                        break;
                    case "mastery":
                        ! function(e, t) {
                            const n = function(e) {
                                    const t = new Map;
                                    return e.sort(s.compareChampionMastery), e.forEach((e => {
                                        t.set(e.championId, e)
                                    })), t
                                }(t),
                                o = [...n.keys()];
                            e.sort(((e, t) => {
                                const n = o.indexOf(e[1][0].champion.id),
                                    i = o.indexOf(t[1][0].champion.id);
                                return n === i ? (0, s.compareGroupAlphabetical)(e, t) : -1 === n ? 1 : -1 === i ? -1 : n - i
                            }))
                        }(l, t);
                        break;
                    case "mostComplete":
                        l.sort(s.compareGroupMostComplete);
                        break;
                    default:
                        l.sort(s.compareGroupTotalOwned)
                }
                return new Map(l)
            }, t.groupAndSortBySet = function(e, t) {
                e.sort(s.compareAlphabeticalName);
                const n = function(e) {
                        e.sort(s.compareOwnership);
                        const t = e => e.skinSet && e.skinSet.name,
                            n = (0, o.createMappingOfArrays)(e, null, t);
                        n.has(void 0) && n.delete(void 0);
                        return n
                    }(e),
                    i = r(e),
                    l = "universe" === t ? Array.from(i) : Array.from(n);
                switch (t) {
                    case "mostOwned":
                        l.sort(s.compareGroupTotalOwned);
                        break;
                    case "mostComplete":
                        l.sort(s.compareGroupMostComplete);
                        break;
                    default:
                        l.sort(s.compareGroupAlphabetical)
                }
                return new Map(l)
            }, t.groupAndSortByTier = function(e, t) {
                const n = new Map,
                    o = Object.entries(t),
                    i = o[0][1];
                return o.reverse(), o.forEach((e => {
                    n.set(e[1], [])
                })), e.forEach((e => {
                    const s = e.rarity.order,
                        o = e.rarity.traKey;
                    s ? n.get(t[o]).push(e) : n.get(i).push(e)
                })), n.forEach((e => {
                    e.sort(s.compareOwnership)
                })), n
            }, t.groupByUniverse = r;
            var s = n(47),
                o = n(48);
            t.SKIN_RARITY_TIER_ORDER_MAP = {
                kNoRarity: 0,
                kEpic: 1,
                kLegendary: 2,
                kMythic: 3,
                kUltimate: 4
            };
            t.SKIN_TAGS = {
                QUEST_SKIN: "quest-skin"
            };
            t.SKIN_RARITY_INFORMATION_BY_TIER = {
                0: {
                    order: 0,
                    traKey: "skin_grid_rarity_other",
                    gemIcon: null,
                    borderRarity: "normal"
                },
                1: {
                    order: 1,
                    traKey: "skin_grid_rarity_epic",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/epic.png",
                    borderRarity: "epic",
                    tooltipTraKey: "control_pane_breakdown_tooltip_epic"
                },
                2: {
                    order: 2,
                    traKey: "skin_grid_rarity_legendary",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/legendary.png",
                    borderRarity: "legendary",
                    tooltipTraKey: "control_pane_breakdown_tooltip_legendary"
                },
                3: {
                    order: 3,
                    traKey: "skin_grid_rarity_mythic",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/mythic.png",
                    borderRarity: "mythic",
                    tooltipTraKey: "control_pane_breakdown_tooltip_mythic"
                },
                4: {
                    order: 4,
                    traKey: "skin_grid_rarity_ultimate",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/ultimate.png",
                    borderRarity: "ultimate",
                    tooltipTraKey: "control_pane_breakdown_tooltip_ultimate"
                }
            };
            t.TENCENT_SKIN_RARITY_INFORMATION_BY_TIER = {
                0: {
                    order: 0,
                    traKey: "skin_grid_cn_rarity_0",
                    gemIcon: null,
                    borderRarity: "normal"
                },
                1: {
                    order: 1,
                    traKey: "skin_grid_cn_rarity_1",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/cn-gem-1.png",
                    borderRarity: "epic",
                    tooltipTraKey: "control_pane_breakdown_tooltip_cn_rarity_1"
                },
                2: {
                    order: 2,
                    traKey: "skin_grid_cn_rarity_2",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/cn-gem-2.png",
                    borderRarity: "epic",
                    tooltipTraKey: "control_pane_breakdown_tooltip_cn_rarity_2"
                },
                3: {
                    order: 3,
                    traKey: "skin_grid_cn_rarity_3",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/cn-gem-3.png",
                    borderRarity: "epic",
                    tooltipTraKey: "control_pane_breakdown_tooltip_cn_rarity_3"
                },
                4: {
                    order: 4,
                    traKey: "skin_grid_cn_rarity_4",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/cn-gem-4.png",
                    borderRarity: "legendary",
                    tooltipTraKey: "control_pane_breakdown_tooltip_cn_rarity_4"
                },
                5: {
                    order: 5,
                    traKey: "skin_grid_cn_rarity_5",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/cn-gem-5.png",
                    borderRarity: "legendary",
                    tooltipTraKey: "control_pane_breakdown_tooltip_cn_rarity_5"
                },
                7: {
                    order: 7,
                    traKey: "skin_grid_cn_rarity_7",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/cn-gem-7.png",
                    borderRarity: "mythic",
                    tooltipTraKey: "control_pane_breakdown_tooltip_cn_rarity_7"
                },
                8: {
                    order: 8,
                    traKey: "skin_grid_cn_rarity_8",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/cn-gem-8.png",
                    borderRarity: "mythic",
                    tooltipTraKey: "control_pane_breakdown_tooltip_cn_rarity_8"
                },
                9: {
                    order: 9,
                    traKey: "skin_grid_cn_rarity_9",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/cn-gem-9.png",
                    borderRarity: "ultimate",
                    tooltipTraKey: "control_pane_breakdown_tooltip_cn_rarity_9"
                }
            };
            const i = "/fe/lol-collections/video";
            t.SKINS_VIEWER_ASSET_BASE_PATH = i;
            const l = `${i}/collection`;
            t.COLLECTION_VIEW_VIDEO_BASE_PATH = l;
            const a = {
                37006: {
                    collectionView: {
                        loopVideoPath: `${l}/37006.webm`,
                        loopVideoPosition: "height: 236px; left: 0px; top: 0px"
                    }
                },
                99007: {
                    collectionView: {
                        loopVideoPath: `${l}/99007.webm`,
                        loopVideoPosition: "height: 235px; left: 0px; top: 0px"
                    }
                },
                81005: {
                    collectionView: {
                        loopVideoPath: `${l}/81005.webm`,
                        loopVideoPosition: "width: 130px; left: 0px; top: 0px"
                    }
                },
                77003: {
                    collectionView: {
                        loopVideoPath: `${l}/77003.webm`,
                        loopVideoPosition: "height: 236px; left: 0px; top: -5px"
                    }
                },
                21016: {
                    collectionView: {
                        loopVideoPath: `${l}/21016.webm`,
                        loopVideoPosition: "height: 248px; left: 0px; top: 0px"
                    }
                },
                360030: {
                    collectionView: {
                        loopVideoPath: `${l}/360030.webm`,
                        loopVideoPosition: "height: 236px; left: 0px; top: -5px"
                    }
                }
            };
            t.SPLASH_VIDEO_CONFIG = a;
            t.SKIN_ITEM_WIDTH = 154;
            t.SKIN_ITEM_HEIGHT = 224;
            t.GROUP_HEADING_WIDTH = 753;
            t.GROUP_HEADING_HEIGHT = 54;
            t.UNIVERSE_GROUP_HEADING_HEIGHT = 125;
            t.RENDER_EVENT_NAME = "collections-skins-rendered";
            t.ITEMS_PER_ROW = 5;
            t.CHAMPION_SKIN = "CHAMPION_SKIN";
            t.BUNDLES = "BUNDLES";
            t.UNAVAILABLE_LOOT_ITEM_TAG = "norerolloutput";

            function r(e) {
                e.sort(s.compareOwnership);
                const t = (0, o.createMappingOfArrays)(e, null, (e => e.skinSet && e.skinSet.name));
                return (0, o.createMappingOfArrays)(t, (e => e.length && e[0].universe), (e => e[0].universe.name), (e => Object.create({
                    name: e[0].skinSet.name,
                    items: e
                })))
            }
            t.SKINS_ACCOUNT_SETTINGS_VERSION = 2
        }, (e, t) => {
            "use strict";

            function n(e, t) {
                const n = document.documentElement.lang ? document.documentElement.lang : "en";
                return e.name.localeCompare(t.name, n, {
                    ignorePunctuation: !0
                })
            }

            function s(e, t) {
                const n = document.documentElement.lang ? document.documentElement.lang : "en";
                return e[0].localeCompare(t[0], n, {
                    ignorePunctuation: !0
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.compareAcquisitionDate = function(e, t) {
                const s = e.ownership.rental.purchaseDate ? e.ownership.rental.purchaseDate : -1,
                    o = t.ownership.rental.purchaseDate ? t.ownership.rental.purchaseDate : -1;
                if (s < o) return 1;
                if (s > o) return -1;
                return n(e, t)
            }, t.compareAlphabeticalName = n, t.compareChampionMastery = function(e, t) {
                if (e.masteryPrimarySort > t.masteryPrimarySort) return -1;
                if (e.masteryPrimarySort < t.masteryPrimarySort) return 1;
                if (e.masterySecondarySort > t.masterySecondarySort) return -1;
                if (e.masterySecondarySort < t.masterySecondarySort) return 1;
                return n(e, t)
            }, t.compareChestAvailable = function(e, t) {
                if (e.chestGranted < t.chestGranted) return -1;
                if (e.chestGranted > t.chestGranted) return 1;
                return n(e, t)
            }, t.compareGroupAlphabetical = s, t.compareGroupMostComplete = function(e, t) {
                let n = 0,
                    o = 0,
                    i = 0,
                    l = 0;
                const a = (e, t) => t.ownership && t.ownership.owned ? e + 1 : e;
                e[1].forEach((e => {
                    Array.isArray(e.items) ? (n += e.items.reduce(a, 0), i += e.items.length) : (n = a(n, e), i++)
                })), t[1].forEach((e => {
                    Array.isArray(e.items) ? (o += e.items.reduce(a, 0), l += e.items.length) : (o = a(o, e), l++)
                }));
                const r = o / l - n / i;
                if (0 === r) {
                    const a = o - n;
                    if (0 === a) {
                        const n = l - i;
                        return 0 === n ? s(e, t) : n
                    }
                    return a
                }
                return r
            }, t.compareGroupMostRare = function(e, t) {
                let n = 0,
                    s = 0;
                const o = new Map,
                    i = new Map;
                e[1].forEach((e => {
                    const t = e.rarity.order;
                    n = Math.max(n, t), e.ownership && e.ownership.owned && o.set(t, o.has(t) ? o.get(t) + 1 : 0)
                })), t[1].forEach((e => {
                    const t = e.rarity.order;
                    s = Math.max(s, t), e.ownership && e.ownership.owned && i.set(t, i.has(t) ? i.get(t) + 1 : 0)
                }));
                const l = s - n;
                if (0 === l) return i.get(s) - o.get(n);
                return l
            }, t.compareGroupTotalOwned = function(e, t) {
                let n = 0,
                    o = 0;
                const i = (e, t) => t.ownership && t.ownership.owned ? e + 1 : e;
                e[1].forEach((e => {
                    Array.isArray(e.items) ? n += e.items.reduce(i, 0) : n = i(n, e)
                })), t[1].forEach((e => {
                    Array.isArray(e.items) ? o += e.items.reduce(i, 0) : o = i(o, e)
                }));
                const l = o - n;
                if (0 === l) return s(e, t);
                return l
            }, t.compareMilestonesPassed = function(e, t) {
                if (e.milestonesPassed > t.milestonesPassed) return -1;
                if (e.milestonesPassed < t.milestonesPassed) return 1;
                if (e.eternalsOwned > t.eternalsOwned) return -1;
                if (e.eternalsOwned < t.eternalsOwned) return 1;
                return n(e, t)
            }, t.compareOwnership = function(e, t) {
                const s = e.ownership && e.ownership.owned ? 1 : 0,
                    o = (t.ownership && t.ownership.owned ? 1 : 0) - s;
                if (0 === o) return n(e, t);
                return o
            }, t.compareOwnershipNoTiebreaking = function(e, t) {
                const n = e.ownership && e.ownership.owned ? 1 : 0,
                    s = t.ownership && t.ownership.owned ? 1 : 0;
                return s - n
            }, t.compareRecentlyPlayed = function(e, t) {
                if (e.lastPlayedTime < t.lastPlayedTime) return 1;
                if (e.lastPlayedTime > t.lastPlayedTime) return -1;
                return n(e, t)
            }, t.compareReleaseDate = function(e, t) {
                if (e.releaseDate < t.releaseDate) return 1;
                if (e.releaseDate > t.releaseDate) return -1;
                return n(e, t)
            }, t.compareReleaseYear = function(e, t) {
                if (e.releaseYear < t.releaseYear) return 1;
                if (e.releaseYear > t.releaseYear) return -1;
                return n(e, t)
            }, t.compareTier = function(e, t) {
                if (e.rarity.order < t.rarity.order) return 1;
                if (e.rarity.order > t.rarity.order) return -1;
                return n(e, t)
            }, t.orderMappingOfArrays = function(e, t) {
                const n = new Map;
                return t.forEach((t => {
                    e.has(t) && n.set(t, e.get(t))
                })), n
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createMappingOfArrays = function(e, t, n, s) {
                const o = new Map;
                return e.forEach((e => {
                    if (t && !t(e)) return;
                    const i = (e, t) => {
                            o.has(e) ? o.get(e).push(t) : o.set(e, [t])
                        },
                        l = n(e),
                        a = s ? s(e) : e;
                    Array.isArray(l) ? l.forEach((e => i(e, a))) : i(l, a)
                })), o
            }, t.filterAvailable = l, t.flattenGroups = function(e, t) {
                const n = [];
                return e.forEach(((e, s) => {
                    if (0 === e.length) return;
                    const l = o({
                        id: s
                    });
                    n.push(l), e.forEach((e => {
                        if (Array.isArray(e.items)) {
                            const s = o({
                                id: e.name,
                                isMajor: !1
                            });
                            let a = "";
                            n.push(s), e.items.forEach((e => {
                                e.universe && e.universe.description && (a = e.universe.description), n.push(i(s, e, t))
                            })), l.totalItems += s.totalItems, l.numItemsOwned += s.numItemsOwned, l.availableItems += s.availableItems, l.description = a
                        } else n.push(i(l, e, t))
                    }))
                })), n
            }, t.groupAndSortByAcquisition = function(e, t) {
                const n = new Map,
                    o = t.collectibles_grid_purchase_year_none,
                    i = t.collectibles_grid_purchase_year_header,
                    l = [];
                e.sort(s.compareAcquisitionDate), e.forEach((e => {
                    if (!e.ownership.rental.purchaseDate) return void l.push(e);
                    const t = new Date(e.ownership.rental.purchaseDate).getFullYear(),
                        s = `${i} ${t}`;
                    n.has(s) ? n.get(s).push(e) : n.set(s, [e])
                })), l.length > 0 && n.set(o, l);
                return n
            }, t.groupAndSortByLetter = function(e, t) {
                e.sort(s.compareOwnership);
                const n = document.documentElement.lang ? document.documentElement.lang : "en-US",
                    o = new Map;
                return e.forEach((e => {
                    let s = "";
                    const i = t ? t(e) : e.name;
                    i && "string" == typeof i && (s = i.charAt(0).toLocaleUpperCase(n), s.match(/\d/) && (s = "#")), o.has(s) ? o.get(s).push(e) : o.set(s, [e])
                })), new Map([...o.entries()].sort(((e, t) => e[0].localeCompare(t[0], n))))
            }, t.groupAndSortByRelease = function(e, t, n = !1) {
                const o = new Map,
                    i = t.collectibles_grid_release_year_none,
                    l = t.collectibles_grid_release_year_header,
                    a = [];
                n ? e.sort(s.compareReleaseYear) : e.sort(s.compareReleaseDate);
                e.forEach((e => {
                    const t = e.releaseYear;
                    if (!t) return void a.push(e);
                    const n = `${l} ${t}`;
                    o.has(n) ? o.get(n).push(e) : o.set(n, [e])
                })), a.length > 0 && o.set(i, a);
                return o.forEach((e => {
                    e.sort(s.compareOwnershipNoTiebreaking)
                })), o
            }, t.groupAndSortByTier = function(e, t) {
                const n = new Map;
                return n.set(t.collectibles_grid_rarity_5, []), n.set(t.collectibles_grid_rarity_4, []), n.set(t.collectibles_grid_rarity_3, []), n.set(t.collectibles_grid_rarity_2, []), n.set(t.collectibles_grid_rarity_1, []), n.set(t.collectibles_grid_rarity_none, []), e.forEach((e => {
                    const s = e.rarity.order,
                        o = e.rarity.traKey;
                    s ? n.get(t[o]).push(e) : n.get(t.collectibles_grid_rarity_none).push(e)
                })), n.forEach((e => {
                    e.sort(s.compareOwnership)
                })), n
            };
            var s = n(47);

            function o(e) {
                return Object.assign(Object.create({
                    id: "",
                    isGroup: !0,
                    isMajor: !0,
                    totalItems: 0,
                    numItemsOwned: 0,
                    availableItems: 0,
                    description: ""
                }), e)
            }

            function i(e, t, n) {
                const s = Object.assign({}, t);
                return t.ownership.owned && ++e.numItemsOwned, n && l(t) && ++e.availableItems, ++e.totalItems, s
            }

            function l(e) {
                return e.ownership && e.ownership.owned || !!e.lootable || !!e.prices || !!e.isInBundle
            }
        }, (e, t) => {
            "use strict";

            function n(e) {
                if (!Number.isInteger(e) || e <= 0) throw new TypeError("expected skinId to be a positive number");
                return e % 1e3 == 0
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getInventoryItemPurchaseDates = function(e) {
                const t = [];
                return e.forEach((e => {
                    e && e.ownership && e.ownership.owned && t.push(e.ownership.rental.purchaseDate)
                })), t
            }, t.getLastPurchaseDate = function(e) {
                if (e.length > 0) return e.sort(((e, t) => t - e)), e[0];
                return 0
            }, t.getSkinAndChromaPurchaseDates = function(e) {
                const t = {
                    skinPurchaseDates: [],
                    chromaPurchaseDates: []
                };
                return e.forEach((e => {
                    e.id && e.skins.length && e.skins.forEach((e => {
                        n(e.id) || t.skinPurchaseDates.push(e.ownership.rental.purchaseDate), e.chromas.length && e.chromas.forEach((e => {
                            e.ownership && e.ownership.owned && t.chromaPurchaseDates.push(e.ownership.rental.purchaseDate)
                        }))
                    }))
                })), t
            }, t.isBaseSkin = n
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = s.Ember.Route.extend({
                    pipNotifications: s.Ember.inject.service("pip-notifications"),
                    setupController(e, t) {
                        this._super(e, t);
                        this.get("pipNotifications.hasRunesForReview") && this.get("pipNotifications").dismissNotification("runes")
                    }
                });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const o = "ALL_GAME_MODES_DISABLED_SPELLS_KEY",
                i = ["ARAM", "CLASSIC", "TUTORIAL_MODULE_1"];
            var l = s.Ember.Route.extend({
                model() {
                    const e = (0, s.dataBinding)("/lol-summoner", s.socket).get("/v1/current-summoner"),
                        t = (0, s.dataBinding)("/lol-game-queues", s.socket).get("/v1/queues"),
                        n = (0, s.dataBinding)("/lol-game-data", s.socket).get("/assets/v1/summoner-spells.json"),
                        o = (0, s.dataBinding)("/lol-platform-config", s.socket).get("/v1/namespaces/ClientSystemStates/gameModeToInactiveSpellIds");
                    return Promise.all([e, t, n, o]).then((e => {
                        const [t, n, s, o] = e, i = this.getValidModes(n);
                        if (!t || !i) return [];
                        let l = this.removeDisabledSpells(s, o, i);
                        return l = l.filter((e => e.gameModes && e.gameModes.length > 0)), l = this.addSpellAttributes(l, t), l.sort(((e, t) => e.summonerLevel !== t.summonerLevel ? e.summonerLevel - t.summonerLevel : e.name.localeCompare(t.name))), l
                    }))
                },
                setupController(e, t) {
                    this._super(e, t), t[0].selected = !0, e.set("selectedSpell", t[0])
                },
                getValidModes(e) {
                    const t = new Set;
                    return e.forEach((e => {
                        t.add(e.gameMode)
                    })), i.filter((e => t.has(e)))
                },
                removeDisabledSpells(e, t, n) {
                    if (t && Array.isArray(t[o])) {
                        const n = new Set(t[o]);
                        e = e.filter((e => !n.has(e.id)))
                    }
                    const s = new Set(n);
                    return e.forEach((e => {
                        e.gameModes = e.gameModes.filter((n => {
                            const o = s.has(n);
                            if (!t || !Array.isArray(t[n])) return o;
                            return !new Set(t[n]).has(e.id) && o
                        }))
                    })), e
                },
                addSpellAttributes(e, t) {
                    return e.map((e => {
                        try {
                            e.videoSrc = "/fe/lol-collections/video/spells/spells_" + e.id + ".webm"
                        } catch (t) {
                            s.logger.warning("Spell video absent", {
                                id: e.id,
                                name: e.name
                            })
                        }
                        return e.enabled = t.summonerLevel >= e.summonerLevel, e.selected = !1, e.localizedGameModes = e.gameModes.map((e => {
                            const t = "tra.summoner_spell_game_mode_" + e;
                            return this.get(t)
                        })).sort(((e, t) => e.localeCompare(t))), e
                    }))
                }
            });
            t.default = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(53);
            var i = s.Ember.Route.extend({
                pipNotifications: s.Ember.inject.service("pip-notifications"),
                platformConfig: s.Ember.inject.service("platform-config"),
                riotclient: s.Ember.inject.service("riotclient"),
                settingsPreferences: s.Ember.inject.service("settings-preferences"),
                beforeModel(e) {
                    if (e.queryParams) {
                        const t = 0 === Object.keys(e.queryParams).length;
                        this.set("shouldFetchPreferences", t)
                    }
                },
                model() {
                    s.Telemetry.startTracingEvent(o.RENDER_EVENT_NAME);
                    const e = (0, s.dataBinding)("/lol-inventory", s.socket),
                        t = (0, s.dataBinding)("/lol-game-data", s.socket),
                        n = (0, s.dataBinding)("/lol-store", s.socket),
                        i = (0, s.dataBinding)("/lol-loot", s.socket),
                        l = this.get("riotclient").getRegion(),
                        a = this.get("settingsPreferences").getSummonerIconsAccountSettings(),
                        r = e.get("/v2/inventory/SUMMONER_ICON"),
                        c = t.get("/assets/v1/summoner-icons.json"),
                        d = t.get("/assets/v1/summoner-icon-sets.json"),
                        m = n.get(`/v1/catalog?inventoryType=${JSON.stringify([o.SUMMONER_ICON,o.BUNDLES])}`),
                        p = i.get("/v1/loot-items");
                    return Promise.all([l, a, r, c, d, m, p]).then((e => {
                        const [t, n, s, i, l, a, r] = e, c = this.fillOwnedIcons(s), d = this.fillIconSetsAssetsMap(l), m = this.getLootItemSet(r), p = this.getCatalogDataById(a), u = this.joinSummonerIconData({
                            iconAssets: i,
                            ownedIconsMap: c,
                            iconSetsAssetsMap: d,
                            catalogDataById: p,
                            lootItemSet: m,
                            region: t
                        });
                        return {
                            summonerIconsById: u,
                            rarities: this.getRarities(u),
                            lastVisitTime: n.data && n.data.lastVisitTime,
                            region: t,
                            renderEventName: o.RENDER_EVENT_NAME
                        }
                    }))
                },
                setupController(e, t) {
                    this._super(e, t), this.get("pipNotifications.hasSummonerIconsForReview") ? (this.get("pipNotifications").acknowledgeInventoryNotifications("SUMMONER_ICON"), e.setProperties({
                        groupBy: "myCollection",
                        sortBy: "acquisitionDate",
                        isUnownedShown: !1,
                        isUnavailableShown: !1
                    })) : this.get("shouldFetchPreferences") && this.get("settingsPreferences").getSummonerIconsAccountSettings().then((t => {
                        const n = {
                            groupBy: "myCollection",
                            sortBy: "acquisitionDate",
                            isUnownedShown: !1,
                            isUnavailableShown: !1
                        };
                        t && t.data && t.schemaVersion === o.SUMMONER_ICONS_ACCOUNT_SETTINGS_VERSION ? (n.groupBy = t.data.groupingDropdownKey, n.sortBy = t.data.sortingDropdownKey, n.isUnownedShown = t.data.unownedFilter, n.isUnavailableShown = t.data.unavailableFilter) : this.get("settingsPreferences").setSummonerIconsAccountSettings(n), e.setProperties(n)
                    }))
                },
                getCatalogDataById(e) {
                    const t = new Map;
                    return e.forEach((e => {
                        e.active && t.set(e.itemId, e)
                    })), t
                },
                fillOwnedIcons(e) {
                    const t = new Map;
                    return this.addBaseSetIconsToMap(t), Array.isArray(e) && e.forEach((e => {
                        const n = this.get("tra.moment")(e.purchaseDate).valueOf();
                        t[e.itemId] = {
                            owned: "OWNED" === e.ownershipType,
                            rental: {
                                purchaseDate: n
                            }
                        }
                    })), t
                },
                addBaseSetIconsToMap(e) {
                    if (!e.has(0))
                        for (let t = 0; t <= 28; t++) e[t] = {
                            owned: !0,
                            rental: {}
                        }
                },
                fillIconSetsAssetsMap(e) {
                    const t = new Map;
                    return e && e.forEach((e => {
                        e.icons.forEach((n => {
                            t.set(n, e)
                        }))
                    })), t
                },
                getLootItemSet(e) {
                    const t = new Set;
                    return e.forEach((e => {
                        !e || e.tags && e.tags.includes(o.UNAVAILABLE_LOOT_ITEM_TAG) || "SUMMONERICON" === e.type && t.add(e.storeItemId)
                    })), t
                },
                joinSummonerIconData(e) {
                    const {
                        iconAssets: t,
                        ownedIconsMap: n,
                        iconSetsAssetsMap: i,
                        catalogDataById: l,
                        lootItemSet: a,
                        region: r
                    } = e, c = new Map, d = this.getIsInBundleById(l);
                    return t.filter((e => !o.DISABLED_ICONS.includes(e.id))).filter((e => e.imagePath)).filter((e => !e.disabledRegions || !e.disabledRegions.includes(r))).forEach((e => {
                        const t = Object.assign({}, e),
                            o = t.id,
                            m = l.get(o);
                        if (m && m.active) {
                            t.releaseDate = new Date(m.releaseDate).getTime();
                            const e = m.prices;
                            e && e.length > 0 && e.find((e => e.cost > 0)) && (t.prices = e)
                        } else t.releaseDate = 0;
                        t.releaseYear = t.yearReleased, t.name = t.title, t.isInBundle = d.get(o) || !1;
                        const p = n[o];
                        t.ownership = p || {
                            owned: !1
                        }, t.set = i.get(o), t.lootable = a.has(o), t.rarity = this.getRegionalRarityInfo(t, r), t.description = this.getRegionalDescription(t, r), t.computeds = s.Ember.Object.create({
                            selectedInGrid: !1,
                            profileIconInGrid: !1
                        }), c.set(o, t)
                    })), c
                },
                getRegionalRarityInfo(e, t) {
                    let n = 0;
                    if (Array.isArray(e.rarities)) {
                        let s = e.rarities.find((e => e.region === t));
                        s ? n = s.rarity : (s = e.rarities.find((e => "riot" === e.region)), n = s ? s.rarity : 0)
                    }
                    const s = o.SUMMONER_ICON_RARITY_INFORMATION_BY_TIER[n];
                    return s || o.SUMMONER_ICON_RARITY_INFORMATION_BY_TIER[0]
                },
                getRegionalDescription(e, t) {
                    const n = e.descriptions;
                    if (!Array.isArray(n)) return "";
                    let s = n.find((e => e.region === t));
                    return s ? s.description : (s = n.find((e => "riot" === e.region)), s ? s.description : "")
                },
                getIsInBundleById(e) {
                    const t = new Map;
                    return e.forEach(((e, n) => {
                        e.bundled && e.bundled.items.forEach((e => {
                            e.inventoryType === o.SUMMONER_ICON && t.set(e.itemId, !0)
                        }))
                    })), t
                },
                getRarities(e) {
                    const t = {},
                        n = [];
                    e.forEach((e => {
                        const s = e.rarity.order;
                        0 !== s && (n.includes(s) || (t[s] = Object.assign({}, o.SUMMONER_ICON_RARITY_INFORMATION_BY_TIER[s]), t[s].ownedCount = 0, n.push(s)), e.ownership && e.ownership.owned && t[s].ownedCount++)
                    }));
                    return Object.values(t).sort(((e, t) => t.order - e.order))
                },
                setAccountSettings() {
                    const e = {
                        groupBy: this.controller.get("groupBy"),
                        sortBy: this.controller.get("sortBy"),
                        isUnownedShown: this.controller.get("isUnownedShown"),
                        isUnavailableShown: this.controller.get("isUnavailableShown")
                    };
                    this.get("settingsPreferences").setSummonerIconsAccountSettings(e)
                },
                actions: {
                    refreshCurrentRoute() {
                        this.refresh()
                    },
                    willTransition() {
                        return this.setAccountSettings(), !0
                    }
                }
            });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UNAVAILABLE_LOOT_ITEM_TAG = t.SUMMONER_ICON_RARITY_INFORMATION_BY_TIER = t.SUMMONER_ICON_ITEM_WIDTH = t.SUMMONER_ICON_ITEM_HEIGHT = t.SUMMONER_ICONS_ACCOUNT_SETTINGS_VERSION = t.SUMMONER_ICON = t.RENDER_EVENT_NAME = t.ITEMS_PER_ROW = t.GROUP_HEADING_WIDTH = t.GROUP_HEADING_HEIGHT = t.ESPORTS_EVENT_GROUP_HEADING_HEIGHT = t.DISABLED_ICONS = t.BUNDLES = void 0, t.handleEsportsGroupAndSort = function(e, t, n) {
                (e = e.filter((e => e.set && e.set.hidden))).sort(o.compareOwnership);
                let i = null;
                switch (t) {
                    case "event":
                        i = function(e, t) {
                            const n = [],
                                i = e => e.esportsEvent && e.esportsEvent.trim().length > 0,
                                l = e => e.esportsEvent,
                                a = (0, s.createMappingOfArrays)(e, i, l),
                                r = Array.from(a);
                            return r.sort(o.compareGroupAlphabetical), r.forEach((e => {
                                const o = [];
                                (0, s.groupAndSortByRelease)(e[1], t).forEach(((e, t) => {
                                    o.push({
                                        name: t,
                                        items: e
                                    })
                                })), n.push([e[0], o])
                            })), new Map(n)
                        }(e, n);
                        break;
                    case "team":
                        i = function(e) {
                            const t = e => e.esportsTeam && e.esportsTeam.trim().length > 0,
                                n = e => e.esportsTeam,
                                i = (0, s.createMappingOfArrays)(e, t, n),
                                l = Array.from(i);
                            return l.sort(o.compareGroupAlphabetical), new Map(l)
                        }(e);
                        break;
                    case "releaseDate":
                        i = (0, s.groupAndSortByRelease)(e, n)
                }
                return i
            }, t.handleSetGroupAndSort = function(e, t) {
                const n = (0, s.createMappingOfArrays)(e, (e => e.set && !e.set.hidden), (e => e.set.displayName));
                n.forEach((e => {
                    e.sort(o.compareOwnership)
                }));
                const i = Array.from(n);
                switch (t) {
                    case "mostRare":
                        n.forEach((e => {
                            e.sort(o.compareTier)
                        })), i.sort(o.compareGroupMostRare);
                        break;
                    case "mostOwned":
                        i.sort(o.compareGroupTotalOwned);
                        break;
                    case "mostComplete":
                        i.sort(o.compareGroupMostComplete);
                        break;
                    case "alphabetical":
                        i.sort(o.compareGroupAlphabetical)
                }
                return new Map(i)
            };
            var s = n(48),
                o = n(47);
            t.SUMMONER_ICON_RARITY_INFORMATION_BY_TIER = {
                0: {
                    order: 0,
                    traKey: "collectibles_grid_rarity_none",
                    gemIcon: null,
                    borderRarity: "normal",
                    tooltipType: null
                },
                1: {
                    order: 1,
                    traKey: "collectibles_grid_rarity_1",
                    gemIcon: "/fe/lol-collections/images/gems/rare.png",
                    borderRarity: "rare",
                    tooltipTraKey: "control_panel_breakdown_tooltip_collectibles_grid_rarity_1_summoner_icon"
                },
                2: {
                    order: 2,
                    traKey: "collectibles_grid_rarity_2",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/epic.png",
                    borderRarity: "epic",
                    tooltipTraKey: "control_panel_breakdown_tooltip_collectibles_grid_rarity_2_summoner_icon"
                },
                3: {
                    order: 3,
                    traKey: "collectibles_grid_rarity_3",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/legendary.png",
                    borderRarity: "legendary",
                    tooltipTraKey: "control_panel_breakdown_tooltip_collectibles_grid_rarity_3_summoner_icon"
                },
                4: {
                    order: 4,
                    traKey: "collectibles_grid_rarity_4",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/mythic.png",
                    borderRarity: "mythic",
                    tooltipTraKey: "control_panel_breakdown_tooltip_collectibles_grid_rarity_4_summoner_icon"
                },
                5: {
                    order: 5,
                    traKey: "collectibles_grid_rarity_5",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/ultimate.png",
                    borderRarity: "ultimate",
                    tooltipTraKey: "control_panel_breakdown_tooltip_collectibles_grid_rarity_5_summoner_icon"
                }
            };
            t.SUMMONER_ICON_ITEM_WIDTH = 108;
            t.SUMMONER_ICON_ITEM_HEIGHT = 108;
            t.GROUP_HEADING_WIDTH = 753;
            t.GROUP_HEADING_HEIGHT = 48;
            t.ESPORTS_EVENT_GROUP_HEADING_HEIGHT = 110;
            t.ITEMS_PER_ROW = 7;
            t.DISABLED_ICONS = [1669];
            t.RENDER_EVENT_NAME = "collections-summoner-icons-rendered";
            t.SUMMONER_ICON = "SUMMONER_ICON";
            t.BUNDLES = "BUNDLES";
            t.UNAVAILABLE_LOOT_ITEM_TAG = "norerolloutput";
            t.SUMMONER_ICONS_ACCOUNT_SETTINGS_VERSION = 2
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(55),
                i = s.Ember.Route.extend({
                    pipNotifications: s.Ember.inject.service("pip-notifications"),
                    riotclient: s.Ember.inject.service("riotclient"),
                    settingsPreferences: s.Ember.inject.service("settings-preferences"),
                    beforeModel(e) {
                        if (e.queryParams) {
                            const t = 0 === Object.keys(e.queryParams).length;
                            this.set("shouldFetchPreferences", t)
                        }
                    },
                    model() {
                        s.Telemetry.startTracingEvent(o.RENDER_EVENT_NAME);
                        const e = this.get("riotclient").getRegion(),
                            t = this.get("settingsPreferences").getWardsAccountSettings(),
                            n = (0, s.dataBinding)("/lol-game-data", s.socket).get("/assets/v1/ward-skins.json"),
                            i = (0, s.dataBinding)("/lol-game-data", s.socket).get("/assets/v1/ward-skin-sets.json"),
                            l = (0, s.dataBinding)("/lol-inventory", s.socket).get("/v2/inventory/WARD_SKIN"),
                            a = (0, s.dataBinding)("/lol-store", s.socket).get(`/v1/catalog?inventoryType=${JSON.stringify([o.WARD_SKIN,o.BUNDLES])}`),
                            r = (0, s.dataBinding)("/lol-loot", s.socket).get("/v1/loot-items");
                        return Promise.all([e, t, n, i, l, a, r]).then((e => {
                            const [t, n, s, i, l, a, r] = e, c = this.getWardsById(s, t), d = this.getCatalogDataById(a), m = this.getIsInBundleById(d), p = this.getLootItemSet(r);
                            this.joinPurchaseData(c, d, m, p), this.joinOwnershipData(c, l), this.joinSetData(c, i);
                            return {
                                wardsById: c,
                                rarities: this.getRarities(c),
                                region: t,
                                lastVisitTime: n.data && n.data.lastVisitTime,
                                renderEventName: o.RENDER_EVENT_NAME
                            }
                        }))
                    },
                    getLootItemSet(e) {
                        const t = new Set;
                        return e.forEach((e => {
                            !e || e.tags && e.tags.includes(o.UNAVAILABLE_LOOT_ITEM_TAG) || "WARD_SKIN" === e.type && t.add(e.storeItemId)
                        })), t
                    },
                    getCatalogDataById(e) {
                        const t = new Map;
                        return e.forEach((e => {
                            e.active && t.set(e.itemId, e)
                        })), t
                    },
                    getIsInBundleById(e) {
                        const t = new Map;
                        return e.forEach(((e, n) => {
                            e.bundled && e.bundled.items.forEach((e => {
                                e.inventoryType === o.WARD_SKIN && t.set(e.itemId, !0)
                            }))
                        })), t
                    },
                    joinPurchaseData(e, t, n, s) {
                        e.forEach(((e, o) => {
                            e.isInBundle = n.get(o) || !1, e.lootable = s.has(o);
                            const i = t.get(o);
                            if (i && !0 === i.active) {
                                e.releaseYear = new Date(i.releaseDate).getFullYear(), e.releaseDate = new Date(i.releaseDate);
                                const t = i.prices;
                                t && t.length > 0 && t.find((e => e.cost > 0)) && (e.prices = t)
                            } else e.releaseYear = 0, e.releaseDate = 0
                        }))
                    },
                    joinOwnershipData(e, t) {
                        t.forEach((t => {
                            const n = e.get(t.itemId);
                            "F2P" === t.ownershipType ? (n.ownership.rental.purchaseDate = 0, n.ownership.owned = !0) : (n.ownership.rental.purchaseDate = this.get("tra.moment")(t.purchaseDate).valueOf(), n.ownership.owned = "OWNED" === t.ownershipType)
                        }))
                    },
                    joinSetData(e, t) {
                        t.forEach((t => {
                            t.wards && t.wards.length && t.wards.forEach((n => {
                                e.get(n).setName = t.displayName
                            }))
                        }))
                    },
                    getWardsById(e, t) {
                        const n = new Map;
                        return e.forEach((e => {
                            const s = Object.assign({}, e);
                            s.ownership = {
                                rental: {
                                    purchaseDate: null
                                }
                            }, s.rarity = this.getRegionalRarityInfo(s, t), s.description = this.getRegionalDescription(s, t), n.set(s.id, s)
                        })), n
                    },
                    getRegionalDescription(e, t) {
                        const n = e.regionalDescriptions;
                        if (!Array.isArray(n)) return "";
                        let s = n.find((e => e.region === t));
                        return s ? s.description : (s = n.find((e => "riot" === e.region)), s ? s.description : "")
                    },
                    getRegionalRarityInfo(e, t) {
                        let n = 0;
                        if (Array.isArray(e.rarities)) {
                            let s = e.rarities.find((e => e.region === t));
                            s ? n = s.rarity : (s = e.rarities.find((e => "riot" === e.region)), n = s ? s.rarity : 0)
                        }
                        let s = o.WARD_RARITY_INFORMATION_BY_TIER[n];
                        return s || (s = o.WARD_RARITY_INFORMATION_BY_TIER[0]), s
                    },
                    getRarities(e) {
                        const t = {},
                            n = [];
                        e.forEach((e => {
                            const s = e.rarity.order;
                            0 !== s && (n.includes(s) || (t[s] = Object.assign({}, o.WARD_RARITY_INFORMATION_BY_TIER[s]), t[s].ownedCount = 0, n.push(s)), e.ownership && e.ownership.owned && t[s].ownedCount++)
                        }));
                        return Object.values(t).sort(((e, t) => t.order - e.order))
                    },
                    setupController(e, t) {
                        this._super(e, t), this.get("pipNotifications.hasWardsForReview") ? (this.get("pipNotifications").dismissNotification("wards"), e.setProperties({
                            groupBy: "myCollection",
                            sortBy: "acquisitionDate",
                            isUnownedShown: !1,
                            isUnavailableShown: !1
                        })) : this.get("shouldFetchPreferences") && this.get("settingsPreferences").getWardsAccountSettings().then((t => {
                            const n = {
                                groupBy: "myCollection",
                                sortBy: "acquisitionDate",
                                isUnownedShown: !1,
                                isUnavailableShown: !1
                            };
                            t && t.data && t.schemaVersion === o.WARDS_ACCOUNT_SETTINGS_VERSION ? (n.groupBy = t.data.groupingDropdownKey, n.sortBy = t.data.sortingDropdownKey, n.isUnownedShown = t.data.unownedFilter, n.isUnavailableShown = t.data.unavailableFilter) : this.get("settingsPreferences").setWardsAccountSettings(n), e.setProperties(n)
                        }))
                    },
                    setAccountSettings() {
                        const e = {
                            groupBy: this.controller.get("groupBy"),
                            sortBy: this.controller.get("sortBy"),
                            isUnownedShown: this.controller.get("isUnownedShown"),
                            isUnavailableShown: this.controller.get("isUnavailableShown")
                        };
                        this.get("settingsPreferences").setWardsAccountSettings(e)
                    },
                    actions: {
                        refreshCurrentRoute() {
                            this.refresh()
                        },
                        willTransition() {
                            return this.setAccountSettings(), !0
                        }
                    }
                });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.WARD_SKIN = t.WARD_RARITY_INFORMATION_BY_TIER = t.WARD_ITEM_WIDTH = t.WARD_ITEM_HEIGHT = t.WARDS_ACCOUNT_SETTINGS_VERSION = t.UNAVAILABLE_LOOT_ITEM_TAG = t.TENCENT_REGION_NAME = t.RENDER_EVENT_NAME = t.ITEMS_PER_ROW = t.GROUP_HEADING_WIDTH = t.GROUP_HEADING_HEIGHT = t.BUNDLES = void 0, t.groupAndSortBySet = function(e, t, n) {
                e.sort(s.compareAlphabeticalName);
                const i = n.collectibles_grid_set_none,
                    l = (0, o.createMappingOfArrays)(e, null, (e => e.setName ? e.setName : i)),
                    a = Array.from(l);
                switch (t) {
                    case "mostRare":
                        a.sort(s.compareGroupMostRare);
                        break;
                    case "alphabetical":
                        a.sort(s.compareGroupAlphabetical);
                        break;
                    case "mostOwned":
                        a.sort(s.compareGroupTotalOwned);
                        break;
                    case "mostComplete":
                        a.sort(s.compareGroupMostComplete)
                }
                return new Map(a)
            };
            var s = n(47),
                o = n(48);
            t.WARD_RARITY_INFORMATION_BY_TIER = {
                0: {
                    order: 0,
                    traKey: "collectibles_grid_rarity_none",
                    gemIcon: null,
                    borderRarity: "normal",
                    tooltipType: null,
                    tooltipTraKey: "control_panel_breakdown_tooltip_collectibles_grid_rarity_0_ward_skin"
                },
                1: {
                    order: 1,
                    traKey: "collectibles_grid_rarity_1",
                    gemIcon: "/fe/lol-collections/images/gems/rare.png",
                    borderRarity: "rare",
                    tooltipType: "collectibles_grid_rarity_1",
                    tooltipTraKey: "control_panel_breakdown_tooltip_collectibles_grid_rarity_1_ward_skin"
                },
                2: {
                    order: 2,
                    traKey: "collectibles_grid_rarity_2",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/epic.png",
                    borderRarity: "epic",
                    tooltipType: "collectibles_grid_rarity_2",
                    tooltipTraKey: "control_panel_breakdown_tooltip_collectibles_grid_rarity_2_ward_skin"
                },
                3: {
                    order: 3,
                    traKey: "collectibles_grid_rarity_3",
                    gemIcon: null,
                    borderRarity: null,
                    tooltipType: null,
                    tooltipTraKey: "control_panel_breakdown_tooltip_collectibles_grid_rarity_3_ward_skin"
                },
                4: {
                    order: 4,
                    traKey: "collectibles_grid_rarity_4",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/mythic.png",
                    borderRarity: "mythic",
                    tooltipType: "collectibles_grid_rarity_4",
                    tooltipTraKey: "control_panel_breakdown_tooltip_collectibles_grid_rarity_4_ward_skin"
                },
                5: {
                    order: 5,
                    traKey: "collectibles_grid_rarity_5",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/ultimate.png",
                    borderRarity: "ultimate",
                    tooltipType: "collectibles_grid_rarity_5",
                    tooltipTraKey: "control_panel_breakdown_tooltip_collectibles_grid_rarity_5_ward_skin"
                }
            };
            t.WARDS_ACCOUNT_SETTINGS_VERSION = 3;
            t.RENDER_EVENT_NAME = "collections-wards-rendered";
            t.WARD_ITEM_WIDTH = 150;
            t.WARD_ITEM_HEIGHT = 160;
            t.GROUP_HEADING_WIDTH = 753;
            t.GROUP_HEADING_HEIGHT = 48;
            t.ITEMS_PER_ROW = 5;
            t.WARD_SKIN = "WARD_SKIN";
            t.BUNDLES = "BUNDLES";
            t.UNAVAILABLE_LOOT_ITEM_TAG = "norerolloutput";
            t.TENCENT_REGION_NAME = "TENCENT"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(57),
                i = s.Ember.Route.extend({
                    pipNotifications: s.Ember.inject.service("pip-notifications"),
                    platformConfig: s.Ember.inject.service("platform-config"),
                    riotclient: s.Ember.inject.service("riotclient"),
                    settingsPreferences: s.Ember.inject.service("settings-preferences"),
                    shouldFetchPreferences: !0,
                    beforeModel(e) {
                        if (e.queryParams) {
                            const t = 0 === Object.keys(e.queryParams).length;
                            this.set("shouldFetchPreferences", t)
                        }
                    },
                    model() {
                        return s.Telemetry.startTracingEvent(o.RENDER_EVENT_NAME), (0, s.dataBinding)("/lol-login", s.socket).get("/v1/session").then((e => {
                            const t = this.get("riotclient").getRegion(),
                                n = this.get("platformConfig").getDisabledChromasConfig(),
                                i = this.get("settingsPreferences").getChromasAccountSettings(),
                                l = (0, s.dataBinding)("/lol-champions", s.socket).get(`/v1/inventories/${e.summonerId}/champions`),
                                a = (0, s.dataBinding)("/lol-game-data", s.socket).get("/assets/v1/skins.json"),
                                r = (0, s.dataBinding)("/lol-game-data", s.socket).get("/assets/v1/skinlines.json"),
                                c = (0, s.dataBinding)("/lol-collections", s.socket).get(`v1/inventories/${e.puuid}/champion-mastery`),
                                d = (0, s.dataBinding)("/lol-store", s.socket).get(`/v1/catalog?inventoryType=${JSON.stringify([o.CHAMPION_SKIN,o.BUNDLES])}`),
                                m = (0, s.dataBinding)("/lol-loot", s.socket).get("/v1/loot-items");
                            return Promise.all([t, n, i, l, a, r, c, d, m])
                        })).then((e => {
                            const [t, n, s, i, l, a, r, c, d] = e, m = this.getLootItemSet(d), p = this.getSkinLineById(a), u = this.getStaticChromasById(l, n), {
                                chromaOwnershipById: h,
                                championByChromaId: g,
                                championsById: f
                            } = this.getChampionsInfo(i), _ = this.getCatalogDataById(c), y = this.joinChromaData({
                                staticChromasById: u,
                                chromaOwnershipById: h,
                                championByChromaId: g,
                                catalogDataById: _,
                                lootItemSet: m,
                                skinLineById: p,
                                region: t
                            });
                            return {
                                chromasById: y,
                                rarities: this.getRarities(y),
                                sortableMasteries: this.getSortableMasteries(r, f),
                                lastVisitTime: s.data && s.data.lastVisitTime,
                                renderEventName: o.RENDER_EVENT_NAME,
                                region: t
                            }
                        }))
                    },
                    setupController(e, t) {
                        this._super(e, t), this.get("pipNotifications.hasChromasForReview") ? (this.get("pipNotifications").dismissNotification("chromas"), e.setProperties({
                            groupBy: "myCollection",
                            sortBy: "acquisitionDate",
                            isUnownedShown: !1,
                            isUnavailableShown: !1
                        })) : this.get("shouldFetchPreferences") && this.get("settingsPreferences").getChromasAccountSettings().then((t => {
                            const n = {
                                groupBy: "myCollection",
                                sortBy: "acquisitionDate",
                                isUnownedShown: !1,
                                isUnavailableShown: !1
                            };
                            t && t.data && t.schemaVersion === o.CHROMAS_ACCOUNT_SETTINGS_VERSION ? (n.groupBy = t.data.groupingDropdownKey, n.sortBy = t.data.sortingDropdownKey, n.isUnownedShown = t.data.unownedFilter, n.isUnavailableShown = t.data.unavailableFilter) : this.get("settingsPreferences").setChromaAccountSettings(n), e.setProperties(n)
                        }))
                    },
                    getStaticChromasById(e, t) {
                        const n = new Map;
                        return Object.values(e).forEach((e => {
                            Array.isArray(e.chromas) && e.chromas.forEach((s => {
                                t.includes(s.id) || (s.baseSkinId = e.id, s.skinLines = e.skinLines, n.set(s.id, s))
                            }))
                        })), n
                    },
                    getChampionsInfo(e) {
                        const t = new Map,
                            n = new Map,
                            s = new Map;
                        return e.forEach((e => {
                            s[e.id] = e, e.skins && e.skins.forEach((s => {
                                Array.isArray(s.chromas) && s.chromas.forEach((s => {
                                    n.set(s.id, s.ownership), t.set(s.id, e)
                                }))
                            }))
                        })), {
                            chromaOwnershipById: n,
                            championByChromaId: t,
                            championsById: s
                        }
                    },
                    getCatalogDataById(e) {
                        const t = new Map;
                        return e.forEach((e => {
                            e.active && t.set(e.itemId, e)
                        })), t
                    },
                    getLootItemSet(e) {
                        const t = new Set;
                        return e.forEach((e => {
                            !e || e.tags && e.tags.includes(o.UNAVAILABLE_LOOT_ITEM_TAG) || "SKIN" === e.type && t.add(e.storeItemId)
                        })), t
                    },
                    getSkinLineById(e) {
                        const t = new Map;
                        return e && e.forEach((e => t.set(e.id, e))), t
                    },
                    joinChromaData(e) {
                        const {
                            staticChromasById: t,
                            chromaOwnershipById: n,
                            championByChromaId: s,
                            catalogDataById: o,
                            lootItemSet: i,
                            skinLineById: l,
                            region: a
                        } = e, r = new Map, c = this.getIsInBundleById(o);
                        return t.forEach(((e, t) => {
                            const d = Object.assign({}, e),
                                m = o.get(t);
                            if (m) {
                                d.releaseYear = new Date(m.releaseDate).getFullYear(), d.releaseDate = new Date(m.releaseDate);
                                const e = m.prices;
                                e && e.length > 0 && e.find((e => e.cost > 0)) && (d.prices = e)
                            } else d.releaseYear = 0, d.releaseDate = 0;
                            d.skinLines && d.skinLines.forEach((e => {
                                d.chromaSet = l.get(e.id)
                            })), d.isInBundle = c.get(t) || !1, d.ownership = n.get(t), d.champion = s.get(t), d.lootable = i.has(t), d.rarity = this.getRegionalRarityInfo(d, a), d.description = this.getRegionalDescription(d, a), r.set(d.id, d)
                        })), r
                    },
                    getRegionalRarityInfo(e, t) {
                        let n = 0;
                        if (Array.isArray(e.rarities)) {
                            let s = e.rarities.find((e => e.region === t));
                            s ? n = s.rarity : (s = e.rarities.find((e => "riot" === e.region)), n = s ? s.rarity : 0)
                        }
                        let s = o.CHROMA_RARITY_INFORMATION_BY_TIER[n];
                        return s || (s = o.CHROMA_RARITY_INFORMATION_BY_TIER[0]), s
                    },
                    getRegionalDescription(e, t) {
                        const n = e.descriptions;
                        if (!Array.isArray(n)) return "";
                        let s = n.find((e => e.region === t));
                        return s ? s.description : (s = n.find((e => "riot" === e.region)), s ? s.description : "")
                    },
                    getIsInBundleById(e) {
                        const t = new Map;
                        return e.forEach(((e, n) => {
                            e.bundled && e.bundled.items.forEach((e => {
                                e.inventoryType === o.CHAMPION_SKIN && t.set(e.itemId, !0)
                            }))
                        })), t
                    },
                    getRarities(e) {
                        const t = {},
                            n = [];
                        e.forEach((e => {
                            const s = e.rarity.order;
                            0 !== s && (n.includes(s) || (t[s] = Object.assign({}, o.CHROMA_RARITY_INFORMATION_BY_TIER[s]), t[s].ownedCount = 0, n.push(s)), e.ownership && e.ownership.owned && t[s].ownedCount++)
                        }));
                        return Object.values(t).sort(((e, t) => t.order - e.order))
                    },
                    getSortableMasteries(e, t) {
                        const n = [];
                        return Array.isArray(e) ? (e.forEach((e => {
                            const s = Object.assign({}, e);
                            s.name = t[e.championId].name, s.masteryPrimarySort = e.championLevel, s.masterySecondarySort = e.championPoints, n.push(s)
                        })), n) : n
                    },
                    setAccountSettings() {
                        const e = {
                            groupBy: this.controller.get("groupBy"),
                            sortBy: this.controller.get("sortBy"),
                            isUnownedShown: this.controller.get("isUnownedShown"),
                            isUnavailableShown: this.controller.get("isUnavailableShown")
                        };
                        this.get("settingsPreferences").setChromaAccountSettings(e)
                    },
                    actions: {
                        refreshCurrentRoute() {
                            this.refresh()
                        },
                        willTransition() {
                            return this.setAccountSettings(), !0
                        }
                    }
                });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UNAVAILABLE_LOOT_ITEM_TAG = t.RENDER_EVENT_NAME = t.GROUP_HEADING_WIDTH = t.GROUP_HEADING_HEIGHT = t.CHROMA_RARITY_INFORMATION_BY_TIER = t.CHROMA_ITEM_WIDTH = t.CHROMA_ITEM_HEIGHT = t.CHROMAS_ACCOUNT_SETTINGS_VERSION = t.CHAMPION_SKIN = t.BUNDLES = void 0, t.groupAndSortByChampion = function(e, t, n) {
                e.sort(s.compareAlphabeticalName);
                const i = function(e) {
                        e.sort(s.compareOwnership);
                        const t = (0, o.createMappingOfArrays)(e, null, (e => e.name)),
                            n = e => e.length && e[0].champion,
                            i = e => e[0].champion.name,
                            l = e => Object.create({
                                name: e[0].name,
                                items: e
                            });
                        return (0, o.createMappingOfArrays)(t, n, i, l)
                    }(e),
                    l = Array.from(i);
                switch (n) {
                    case "alphabetical":
                        l.sort(s.compareGroupAlphabetical);
                        break;
                    case "mastery":
                        ! function(e, t) {
                            const n = function(e) {
                                    const t = new Map;
                                    return e.sort(s.compareChampionMastery), e.forEach((e => {
                                        t.set(e.championId, e)
                                    })), t
                                }(t),
                                o = [...n.keys()];
                            e.sort(((e, t) => {
                                const n = o.indexOf(e[1][0].items[0].champion.id),
                                    s = o.indexOf(t[1][0].items[0].champion.id);
                                return n === s ? 0 : -1 === n ? 1 : -1 === s ? -1 : n - s
                            }))
                        }(l, t);
                        break;
                    case "mostComplete":
                        l.sort(s.compareGroupMostComplete);
                        break;
                    default:
                        l.sort(s.compareGroupTotalOwned)
                }
                return new Map(l)
            }, t.groupAndSortBySet = function(e, t) {
                e.sort(s.compareAlphabeticalName);
                const n = function(e) {
                        e.sort(s.compareOwnership);
                        const t = (0, o.createMappingOfArrays)(e, null, (e => e.name)),
                            n = e => e.length && e[0].chromaSet,
                            i = e => e[0].chromaSet.name,
                            l = e => Object.create({
                                name: e[0].name,
                                items: e
                            });
                        return (0, o.createMappingOfArrays)(t, n, i, l)
                    }(e),
                    i = Array.from(n);
                if ("alphabetical" === t) i.sort(s.compareGroupAlphabetical);
                else i.sort(s.compareGroupTotalOwned);
                return new Map(i)
            };
            var s = n(47),
                o = n(48);
            t.CHROMA_RARITY_INFORMATION_BY_TIER = {
                0: {
                    order: 0,
                    traKey: "collectibles_grid_rarity_none",
                    gemIcon: null,
                    borderRarity: "normal",
                    tooltipType: null
                },
                1: {
                    order: 1,
                    traKey: "collectibles_grid_rarity_1",
                    gemIcon: "/fe/lol-collections/images/gems/rare.png",
                    borderRarity: "rare",
                    tooltipTraKey: "control_panel_breakdown_tooltip_collectibles_grid_rarity_1_chroma"
                },
                2: {
                    order: 2,
                    traKey: "collectibles_grid_rarity_2",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/epic.png",
                    borderRarity: "epic",
                    tooltipTraKey: "control_panel_breakdown_tooltip_collectibles_grid_rarity_2_chroma"
                },
                3: {
                    order: 3,
                    traKey: "collectibles_grid_rarity_3",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/legendary.png",
                    borderRarity: "legendary",
                    tooltipTraKey: "control_panel_breakdown_tooltip_collectibles_grid_rarity_3_chroma"
                },
                4: {
                    order: 4,
                    traKey: "collectibles_grid_rarity_4",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/mythic.png",
                    borderRarity: "mythic",
                    tooltipTraKey: "control_panel_breakdown_tooltip_collectibles_grid_rarity_4_chroma"
                },
                5: {
                    order: 5,
                    traKey: "collectibles_grid_rarity_5",
                    gemIcon: "/lol-game-data/assets/v1/rarity-gem-icons/ultimate.png",
                    borderRarity: "ultimate",
                    tooltipTraKey: "control_panel_breakdown_tooltip_collectibles_grid_rarity_5_chroma"
                }
            };
            t.CHROMA_ITEM_WIDTH = 190;
            t.CHROMA_ITEM_HEIGHT = 200;
            t.GROUP_HEADING_WIDTH = 753;
            t.GROUP_HEADING_HEIGHT = 48;
            t.RENDER_EVENT_NAME = "collections-chromas-rendered";
            t.CHAMPION_SKIN = "CHAMPION_SKIN";
            t.BUNDLES = "BUNDLES";
            t.UNAVAILABLE_LOOT_ITEM_TAG = "norerolloutput";
            t.CHROMAS_ACCOUNT_SETTINGS_VERSION = 2
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            n(59);
            var o = s.Ember.Controller.extend({
                actions: {
                    routeTo(e) {
                        this.transitionToRoute(e)
                    }
                }
            });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(48),
                i = n(61);
            const l = s.SharedComponents.getApi_fullPageModalManager();
            var a = s.Ember.Controller.extend({
                queryParams: {
                    searchTerm: "s",
                    sortBy: "sort",
                    groupBy: "group",
                    isUnownedShown: "show_unowned"
                },
                searchTerm: "",
                sortBy: "",
                groupBy: "",
                isUnownedShown: !1,
                platformConfig: s.Ember.inject.service("platform-config"),
                settingsPreferences: s.Ember.inject.service("settings-preferences"),
                isEternalsEnabled: s.Ember.computed.oneWay("platformConfig.isEternalsEnabled"),
                isGroupByAll: s.Ember.computed.equal("groupBy", "allChampions"),
                isGroupByPosition: s.Ember.computed.equal("groupBy", "position"),
                isGroupByRole: s.Ember.computed.equal("groupBy", "role"),
                isGroupByOwnership: s.Ember.computed.equal("groupBy", "ownership"),
                isNotGroupByOwnership: s.Ember.computed.not("isGroupByOwnership"),
                isNotGroupByAll: s.Ember.computed.not("isGroupByAll"),
                isSortByFirstLetterAsc: s.Ember.computed.equal("sortBy", "firstLetterAscending"),
                isSortByRecentlyPlayed: s.Ember.computed.equal("sortBy", "recentlyPlayed"),
                isSortByChampionMastery: s.Ember.computed.equal("sortBy", "championMastery"),
                isSortByMilestonesPassed: s.Ember.computed.equal("sortBy", "milestonesPassed"),
                isSortByChestAvailable: s.Ember.computed.equal("sortBy", "chestAvailable"),
                shouldShowOwnershipCount: s.Ember.computed.and("isUnownedShown", "isNotGroupByOwnership"),
                hasMatchingChamps: s.Ember.computed.notEmpty("filteredChampions"),
                champions: s.Ember.computed.oneWay("model.champions"),
                searchedChampions: s.Ember.computed("champions.[]", "searchTerm", (function() {
                    const e = document.documentElement.lang,
                        t = this.get("champions"),
                        n = this.get("searchTerm").toLocaleLowerCase(e);
                    return t.filter((t => {
                        const s = `champion_local_search_colloq_${t.id}`;
                        return (this.get("tra").exists(s) ? this.get(`tra.${s}`) : t.name).toLocaleLowerCase(e).includes(n)
                    }))
                })),
                filteredChampions: s.Ember.computed("searchedChampions.[]", "isUnownedShown", (function() {
                    const e = this.get("searchedChampions");
                    return this.get("isUnownedShown") ? e.slice() : e.filter((e => e.isFreeToPlay || e.ownership.rental.rented || e.ownership.owned))
                })),
                groupedChampions: s.Ember.computed("filteredChampions.[]", "groupBy", "sortBy", (function() {
                    const e = Array.from(this.get("filteredChampions")),
                        t = this.get("groupBy"),
                        n = this.get("sortBy");
                    (0, i.sortChampions)(e, n);
                    let s = null;
                    switch (t) {
                        case "position":
                            s = (0, i.groupPositions)(e);
                            break;
                        case "role":
                            s = (0, i.groupRoles)(e);
                            break;
                        case "ownership":
                            s = (0, i.groupOwnership)(e);
                            break;
                        default:
                            return e
                    }
                    return (0, o.flattenGroups)(s, !1)
                })),
                itemSizes: s.Ember.computed("groupedChampions.[]", (function() {
                    const e = this.get("groupedChampions"),
                        t = [];
                    return e.forEach((e => {
                        e.isGroup ? t.push({
                            width: i.GROUP_HEADING_WIDTH,
                            height: i.GROUP_HEADING_HEIGHT
                        }) : t.push({
                            width: i.CHAMPION_ITEM_WIDTH,
                            height: i.CHAMPION_ITEM_HEIGHT
                        })
                    })), t
                })),
                totalMasteryPoints: s.Ember.computed("champions.@each.masteryLevel", (function() {
                    let e = 0;
                    return this.get("champions").forEach((t => {
                        e += t.masteryLevel
                    })), e
                })),
                totalEternalsMilestonesPassed: s.Ember.computed("champions.@each.milestonesPassed", (function() {
                    let e = 0;
                    return this.get("champions").forEach((t => {
                        e += t.milestonesPassed
                    })), e
                })),
                noMatchingChampionsString: s.Ember.computed("tra", (function() {
                    return this.get("tra").formatString("collectibles_grid_no_matching_collectibles", {
                        collectibleName: this.get("tra.collectibles_name_champions")
                    })
                })),
                willDestroy() {
                    this._super(...arguments);
                    const e = {
                        groupBy: this.get("groupBy"),
                        sortBy: this.get("sortBy"),
                        isUnownedShown: this.get("isUnownedShown")
                    };
                    this.get("settingsPreferences").setChampionsAccountSettings(e)
                },
                clientConfig: s.Ember.inject.service("client-config"),
                tieredSkinsConfig: s.Ember.computed.alias("clientConfig.tieredSkins"),
                showSkinsPreviewModal: s.Ember.computed.alias("tieredSkinsConfig.showSkinsPreviewModal"),
                openSkinsPreviewModal: s.Ember.observer("showSkinsPreviewModal", (function() {
                    if (this.get("showSkinsPreviewModal")) {
                        l.close(), this._skinsPreviewComponent = s.ComponentFactory.create("SkinsPreview", {});
                        const e = s.ComponentFactory.getDOMNode(this._skinsPreviewComponent);
                        l.open({
                            data: {
                                contents: e
                            }
                        })
                    }
                })),
                actions: {
                    setSortOrder(e) {
                        this.set("sortBy", e)
                    },
                    setGroupBy(e) {
                        "ownership" === e && this.set("isUnownedShown", !0), this.set("groupBy", e)
                    }
                }
            });
            t.default = a
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.GROUP_HEADING_WIDTH = t.GROUP_HEADING_HEIGHT = t.CHAMPION_POSITION_KEYS = t.CHAMPION_OWNERSHIP_KEYS = t.CHAMPION_ITEM_WIDTH = t.CHAMPION_ITEM_HEIGHT = t.CHAMPIONS_ACCOUNT_SETTINGS_VERSION = void 0, t.groupOwnership = function(e) {
                const [t, n, l, a] = i, r = (0, o.createMappingOfArrays)(e, (e => e.freeToPlay || e.ownership), (e => {
                    const s = [];
                    return e.freeToPlay && s.push(t), e.ownership && (e.ownership.rental.rented && s.push(n), e.ownership.owned ? s.push(l) : s.push(a)), s
                }));
                return (0, s.orderMappingOfArrays)(r, [t, n, l, a])
            }, t.groupPositions = function(e) {
                const [t, n, i, a, r] = l, c = [];
                e.forEach((e => {
                    e.positions && e.positions.forEach((t => {
                        const n = {
                            position: t,
                            champion: e
                        };
                        c.push(n)
                    }))
                }));
                const d = (0, o.createMappingOfArrays)(c, null, (e => `collectibles_grid_group_lane_${e.position.toLowerCase()}`), (e => e.champion));
                return (0, s.orderMappingOfArrays)(d, [t, n, i, a, r])
            }, t.groupRoles = function(e) {
                const t = [];
                e.forEach((e => {
                    e.roles && e.roles.forEach((n => {
                        const s = {
                            role: n,
                            champion: e,
                            name: n
                        };
                        t.push(s)
                    }))
                })), t.sort(s.compareAlphabeticalName);
                return (0, o.createMappingOfArrays)(t, null, (e => `collectibles_grid_group_role_${e.role.toLowerCase()}`), (e => e.champion))
            }, t.sortChampions = function(e, t) {
                switch (t) {
                    case "recentlyPlayed":
                        e.sort(s.compareRecentlyPlayed);
                        break;
                    case "championMastery":
                        e.sort(s.compareChampionMastery);
                        break;
                    case "milestonesPassed":
                        e.sort(s.compareMilestonesPassed);
                        break;
                    case "chestAvailable":
                        e.sort(s.compareChestAvailable);
                        break;
                    default:
                        e.sort(s.compareAlphabeticalName)
                }
            };
            var s = n(47),
                o = n(48);
            const i = ["collectibles_grid_group_ownership_1", "collectibles_grid_group_ownership_2", "collectibles_grid_group_ownership_3", "collectibles_grid_group_ownership_4"];
            t.CHAMPION_OWNERSHIP_KEYS = i;
            const l = ["collectibles_grid_group_lane_top", "collectibles_grid_group_lane_jungle", "collectibles_grid_group_lane_middle", "collectibles_grid_group_lane_bottom", "collectibles_grid_group_lane_support"];
            t.CHAMPION_POSITION_KEYS = l;
            t.CHAMPION_ITEM_WIDTH = 154;
            t.CHAMPION_ITEM_HEIGHT = 250;
            t.GROUP_HEADING_WIDTH = 753;
            t.GROUP_HEADING_HEIGHT = 48;
            t.CHAMPIONS_ACCOUNT_SETTINGS_VERSION = 1
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(48),
                i = n(46),
                l = n(63);
            const a = s.AudioPlugin.getChannel("sfx-ui"),
                r = s.SharedComponents.getApi_fullPageModalManager();
            var c = s.Ember.Controller.extend({
                queryParams: {
                    searchTerm: "s",
                    sortBy: "sort",
                    groupBy: "group",
                    isUnownedShown: "show_unowned"
                },
                searchTerm: "",
                sortBy: "acquisitionDate",
                groupBy: "myCollection",
                isUnownedShown: !1,
                controlsConfiguration: {
                    myCollection: ["acquisitionDate", "releaseDate", "alphabetical"],
                    all: ["releaseDate", "alphabetical"],
                    champion: ["mastery", "mostOwned", "mostComplete", "alphabetical"],
                    set: ["mostOwned", "mostComplete", "alphabetical", "universe"],
                    tier: ["tier"]
                },
                isPAWOpen: !1,
                didPurchaseItem: !1,
                disableAvailabilityFilter: !0,
                settingsPreferences: s.Ember.inject.service("settings-preferences"),
                skinsById: s.Ember.computed.alias("model.skinsById"),
                sortableMasteries: s.Ember.computed.alias("model.sortableMasteries"),
                totalOwnedChromas: s.Ember.computed.alias("model.numOwnedChromas"),
                region: s.Ember.computed.alias("model.region"),
                isTencentRegion: s.Ember.computed.equal("region", "TENCENT"),
                shouldShowLegacyInfo: s.Ember.computed.not("isTencentRegion"),
                isGroupByChampion: s.Ember.computed.equal("groupBy", "champion"),
                isGroupBySet: s.Ember.computed.equal("groupBy", "set"),
                isGroupByTier: s.Ember.computed.equal("groupBy", "tier"),
                isGroupWithOwnershipCount: s.Ember.computed.or("isGroupByChampion", "isGroupBySet", "isGroupByTier"),
                shouldShowOwnershipCount: s.Ember.computed.and("isUnownedShown", "isGroupWithOwnershipCount"),
                hasMatchingSkins: s.Ember.computed.notEmpty("filteredSkins"),
                skins: s.Ember.computed("skinsById", (function() {
                    const e = [];
                    return this.get("skinsById").forEach((t => e.push(t))), e
                })),
                searchedSkins: s.Ember.computed("skins.[]", "searchTerm", (function() {
                    const e = document.documentElement.lang,
                        t = this.get("skins"),
                        n = this.get("searchTerm").toLocaleLowerCase(e);
                    return t.filter((t => {
                        const s = `champion_local_search_colloq_${t.champion.id}`,
                            o = this.get("tra").exists(s) ? this.get(`tra.${s}`) : t.champion.name,
                            i = t.name.toLocaleLowerCase(e);
                        return o.toLocaleLowerCase(e).includes(n) || i.includes(n)
                    }))
                })),
                filteredSkins: s.Ember.computed("searchedSkins.[]", "isUnownedShown", (function() {
                    const e = this.get("searchedSkins");
                    return this.get("isUnownedShown") ? e.slice() : e.filter((e => e.ownership.owned || e.ownership.rented))
                })),
                groupedSkins: s.Ember.computed("filteredSkins.[]", "groupBy", "sortBy", "orderedRarityTranslationsByKey", "sortableMasteries", (function() {
                    const e = Array.from(this.get("filteredSkins")),
                        t = this.get("groupBy"),
                        n = this.get("sortBy"),
                        s = this.get("sortableMasteries"),
                        l = {
                            collectibles_grid_release_year_none: this.get("tra.collectibles_grid_release_year_none"),
                            collectibles_grid_release_year_header: this.get("tra.collectibles_grid_release_year_header"),
                            collectibles_grid_purchase_year_none: this.get("tra.collectibles_grid_purchase_year_none"),
                            collectibles_grid_purchase_year_header: this.get("tra.collectibles_grid_purchase_year_header")
                        },
                        a = this.get("orderedRarityTranslationsByKey");
                    Object.assign(l);
                    let r = null;
                    switch (t) {
                        case "myCollection":
                        case "all":
                            "acquisitionDate" === n ? r = (0, o.groupAndSortByAcquisition)(e, l) : "releaseDate" === n ? r = (0, o.groupAndSortByRelease)(e, l) : "alphabetical" === n && (r = (0, o.groupAndSortByLetter)(e));
                            break;
                        case "champion":
                            r = (0, i.groupAndSortByChampion)(e, s, n);
                            break;
                        case "set":
                            r = (0, i.groupAndSortBySet)(e, n, l);
                            break;
                        case "tier":
                            r = (0, i.groupAndSortByTier)(e, a);
                            break;
                        default:
                            return []
                    }
                    return (0, o.flattenGroups)(r, !0)
                })),
                itemSizes: s.Ember.computed("groupedSkins.[]", (function() {
                    const e = this.get("groupedSkins"),
                        t = [];
                    return e.forEach((e => {
                        if (e.isGroup) {
                            const n = "universe" === this.get("sortBy"),
                                s = e.isMajor && n ? i.UNIVERSE_GROUP_HEADING_HEIGHT : i.GROUP_HEADING_HEIGHT;
                            t.push({
                                groupOrIcon: e,
                                width: i.GROUP_HEADING_WIDTH,
                                height: s
                            })
                        } else t.push({
                            groupOrIcon: e,
                            width: i.SKIN_ITEM_WIDTH,
                            height: i.SKIN_ITEM_HEIGHT
                        })
                    })), t
                })),
                orderedRarityTranslationsByKey: s.Ember.computed("tra", "isTencentRegion", (function() {
                    const e = this.get("isTencentRegion"),
                        t = {},
                        n = e ? i.TENCENT_SKIN_RARITY_INFORMATION_BY_TIER : i.SKIN_RARITY_INFORMATION_BY_TIER;
                    return Object.values(n).forEach((e => t[e.traKey] = this.get(`tra.${e.traKey}`))), t
                })),
                totalOwned: s.Ember.computed("model.skinsById", (function() {
                    const e = this.get("model.skinsById");
                    let t = 0;
                    return e.forEach((e => {
                        e.ownership && e.ownership.owned && t++
                    })), t
                })),
                totalOwnedLegacy: s.Ember.computed("model.skinsById", (function() {
                    const e = this.get("model.skinsById");
                    let t = 0;
                    return e.forEach((e => {
                        e.ownership && e.ownership.owned && e.isLegacy && t++
                    })), t
                })),
                noMatchingSkinsString: s.Ember.computed("tra", (function() {
                    return this.get("tra").formatString("collectibles_grid_no_matching_collectibles", {
                        collectibleName: this.get("tra.collectibles_name_collectible")
                    })
                })),
                getTierHeight(e) {
                    const t = this.get("itemSizes"),
                        n = i.ITEMS_PER_ROW;
                    let s = !1,
                        o = 0,
                        l = 0;
                    for (let i = 0; i < t.length; i++) {
                        const a = t[i],
                            r = a.groupOrIcon;
                        if (r.isGroup) {
                            if (o = 0, r.id === e) {
                                s = !0;
                                break
                            }
                            l += a.height
                        } else o++, 1 === o ? l += a.height : n === o && (o = 0)
                    }
                    return s ? l : 0
                },
                handlePAWClosed() {
                    this.isDestroying || this.isDestroyed || (this.set("isPAWOpen", !1), this.get("didPurchaseItem") && this.send("refreshCurrentRoute"))
                },
                handlePAWPurchased() {
                    this.isDestroying || this.isDestroyed || this.set("didPurchaseItem", !0)
                },
                handleSkinDetailsClosed() {
                    this.isDestroying || this.isDestroyed || (this._skinDetailsApplication && this._skinDetailsApplication.onRemove(), this.send("refreshCurrentRoute"), r.removeEventListener("fullPageModalClose", this.handleSkinDetailsClosed))
                },
                init() {
                    this._super(...arguments), this.handlePAWPurchased = this.handlePAWPurchased.bind(this), this.handlePAWClosed = this.handlePAWClosed.bind(this), this.handleSkinDetailsClosed = this.handleSkinDetailsClosed.bind(this)
                },
                willDestroy() {
                    this._super(...arguments);
                    const e = {
                        groupBy: this.get("groupBy"),
                        sortBy: this.get("sortBy"),
                        isUnownedShown: this.get("isUnownedShown")
                    };
                    this.get("settingsPreferences").setSkinsAccountSettings(e), r.removeEventListener("fullPageModalClose", this.handleSkinDetailsClosed)
                },
                actions: {
                    setSortBy(e) {
                        this.set("sortBy", e)
                    },
                    setGroupBy(e) {
                        switch (e) {
                            case "myCollection":
                                this.setProperties({
                                    isUnownedShown: !1,
                                    groupBy: e,
                                    sortBy: "acquisitionDate"
                                });
                                break;
                            case "all":
                                this.setProperties({
                                    groupBy: e,
                                    sortBy: "releaseDate"
                                });
                                break;
                            case "champion":
                                this.setProperties({
                                    groupBy: e,
                                    sortBy: "mastery"
                                });
                                break;
                            case "set":
                                this.setProperties({
                                    groupBy: e,
                                    sortBy: "mostOwned"
                                });
                                break;
                            case "tier":
                                this.setProperties({
                                    groupBy: e,
                                    sortBy: "tier"
                                })
                        }
                    },
                    setScrollToTier(e) {
                        a.playSound("/fe/lol-collections/audio/sfx-uikit-dropdown-select.ogg"), this.setProperties({
                            groupBy: "tier",
                            sortBy: "tier"
                        });
                        const t = this.get(`tra.${e}`),
                            n = this.getTierHeight(t);
                        document.querySelector(".item-grid-scrollable > div:first-child").scrollTo(0, n)
                    },
                    openSkinDetailsModal(e) {
                        const t = s.Ember.Object.create({
                            currentSkinId: e,
                            hasFocus: !0,
                            skins: this.get("skins"),
                            showLegacyInfo: this.get("shouldShowLegacyInfo")
                        });
                        this._skinDetailsApplication = s.ComponentFactory.create("ShowcaseComponent", t);
                        const n = s.ComponentFactory.getDOMNode(this._skinDetailsApplication);
                        r.addEventListener("fullPageModalClose", this.handleSkinDetailsClosed), r.open({
                            data: {
                                contents: n
                            }
                        })
                    },
                    openPAW(e) {
                        const t = l.PAW.INVENTORY_TYPES.CHAMPION_SKIN,
                            n = l.PAW.MODAL_TYPES.SKIN_WITH_DEPENDENCY_MODAL,
                            o = "skins",
                            a = this.handlePAWPurchased,
                            r = this.handlePAWClosed;
                        if (e) {
                            let c = !1;
                            const d = e.id;
                            if (e.tags && e.tags.includes(i.SKIN_TAGS.QUEST_SKIN)) {
                                const t = {
                                    templateType: l.PAW.TEMPLATE_TYPES.LARGE_TWO_COLUMN_LANDSCAPE
                                };
                                c = s.pawApi.createPawTemplateModalAsync(e.offerId, t, o).then((() => {
                                    s.pawApi.getBaseSkinLineData(e.offerId).then((e => {
                                        s.pawApi.populatePawTemplateModal(e)
                                    }))
                                }))
                            } else c = s.pawApi.createPAWModal({
                                itemId: d,
                                inventoryType: t
                            }, o, n, null, a, r);
                            this.set("isPAWOpen", c)
                        }
                    }
                }
            });
            t.default = c
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), Object.defineProperty(t, "PAW", {
                enumerable: !0,
                get: function() {
                    return s.default
                }
            }), Object.defineProperty(t, "PROFILE_PRIVACY", {
                enumerable: !0,
                get: function() {
                    return r.default
                }
            }), Object.defineProperty(t, "QUEUES", {
                enumerable: !0,
                get: function() {
                    return o.default
                }
            }), Object.defineProperty(t, "REWARD_TRACKER", {
                enumerable: !0,
                get: function() {
                    return i.default
                }
            }), Object.defineProperty(t, "SETTINGS", {
                enumerable: !0,
                get: function() {
                    return a.default
                }
            }), Object.defineProperty(t, "SOCIAL", {
                enumerable: !0,
                get: function() {
                    return l.default
                }
            }), Object.defineProperty(t, "TIME", {
                enumerable: !0,
                get: function() {
                    return c.default
                }
            });
            var s = d(n(64)),
                o = d(n(75)),
                i = d(n(76)),
                l = d(n(77)),
                a = d(n(78)),
                r = d(n(79)),
                c = d(n(80));

            function d(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = u(n(65)),
                o = u(n(66)),
                i = u(n(67)),
                l = u(n(68)),
                a = u(n(69)),
                r = u(n(70)),
                c = u(n(71)),
                d = u(n(72)),
                m = u(n(73)),
                p = u(n(74));

            function u(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            var h = {
                COMPONENT_TYPES: s.default,
                CURRENCY_TYPES: o.default,
                INVENTORY_TYPES: i.default,
                MEDIA_TYPES: l.default,
                MEDIA_LOAD_TYPES: a.default,
                MODAL_TYPES: r.default,
                OFFER_PURCHASE_STATES: c.default,
                OFFER_VALIDATION_STATES: d.default,
                SCROLL_LIST_DISPLAY_TYPES: m.default,
                TEMPLATE_TYPES: p.default
            };
            t.default = h
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                TEXT: "TEXT",
                TITLE_SUBTITLE: "TITLE_SUBTITLE",
                PURCHASE: "PURCHASE",
                MEDIA: "MEDIA",
                IMAGE_CAROUSEL: "IMAGE_CAROUSEL",
                SCROLL_LIST: "SCROLL_LIST",
                VERTICAL_LIST: "VERTICAL_LIST"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                RP: "RP",
                IP: "IP",
                BE: "lol_blue_essence"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                CHAMPION: "CHAMPION",
                CHAMPION_SKIN: "CHAMPION_SKIN",
                WARD_SKIN: "WARD_SKIN",
                BATTLE_BOOST: "BATTLE_BOOST",
                GIFT: "GIFT",
                MYSTERY: "MYSTERY",
                BUNDLES: "BUNDLES",
                SUMMONER_ICON: "SUMMONER_ICON",
                STATSTONE: "STATSTONE"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                SVG: "SVG",
                IMAGE: "IMAGE",
                VIDEO: "VIDEO"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                LOCAL_ASSET: "LOCAL_ASSET",
                EXTERNAL_URL: "EXTERNAL_URL",
                GAME_DATA: "GAME_DATA"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                CHAMPION_MODAL: "CHAMPION_MODAL",
                SKIN_VIEWER_MODAL: "SKIN_VIEWER_MODAL",
                MULTIPLE_PURCHASE_MODAL: "MULTIPLE_PURCHASE_MODAL",
                CHROMA_MODAL: "CHROMA_MODAL",
                CHROMA_BUNDLE_MODAL: "CHROMA_BUNDLE_MODAL",
                SUMMONER_ICON_MODAL: "SUMMONER_ICON_MODAL",
                WARD_SKIN_MODAL: "WARD_SKIN_MODAL",
                SKIN_WITH_DEPENDENCY_MODAL: "SKIN_WITH_DEPENDENCY_MODAL",
                PAW_GENERIC_MODAL: "PAW_GENERIC_MODAL"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                NOT_STARTED: "NOT_STARTED",
                IN_PROGRESS: "IN_PROGRESS",
                SUCCESS: "SUCCESS",
                FAIL: "FAIL"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                NOT_STARTED: "NOT_STARTED",
                IN_PROGRESS: "IN_PROGRESS",
                COMPLETED: "COMPLETED"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                EXPANDED: "EXPANDED",
                COMPACT: "COMPACT",
                DETAILED: "DETAILED"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                LARGE_TWO_COLUMN_LANDSCAPE: "LARGE_TWO_COLUMN_LANDSCAPE"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            const n = "RANKED_SOLO_5x5",
                s = "RANKED_FLEX_SR",
                o = "RANKED_FLEX_TT",
                i = "CHERRY",
                l = "RANKED_TFT",
                a = "RANKED_TFT_DOUBLE_UP",
                r = "RANKED_TFT_TURBO",
                c = "RANKED_TFT_PAIRS",
                d = [n, s],
                m = [...d, o],
                p = [i],
                u = [l, a],
                h = [r, c],
                g = [...u, ...h],
                f = [...m, ...u],
                _ = [...h, ...p];
            var y = {
                RANKED_SOLO_5x5_QUEUE_TYPE: n,
                RANKED_FLEX_SR_QUEUE_TYPE: s,
                RANKED_FLEX_TT_QUEUE_TYPE: o,
                RANKED_CHERRY_QUEUE_TYPE: i,
                RANKED_TFT_QUEUE_TYPE: l,
                RANKED_TFT_DOUBLE_UP_QUEUE_TYPE: a,
                RANKED_TFT_TURBO_QUEUE_TYPE: r,
                RANKED_TFT_PAIRS_QUEUE_TYPE: c,
                RANKED_LOL_QUEUE_TYPES: m,
                RANKED_SR_QUEUE_TYPES: d,
                RANKED_TFT_QUEUE_TYPES: u,
                RATED_TFT_QUEUE_TYPES: h,
                RANKED_AND_RATED_TFT_QUEUE_TYPES: g,
                ALL_RANKED_QUEUE_TYPES: f,
                ALL_RATED_QUEUE_TYPES: _,
                ALL_RANKED_AND_RATED_QUEUE_TYPES: [...f, ..._]
            };
            t.default = y
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                REWARD_TAGS: {
                    INSTANT: "Instant",
                    RARE: "Rare",
                    CHOICE: "Choice",
                    MULTIPLE: "Multiple"
                },
                MILESTONE_STAGES: {
                    COMPLETED: "completed",
                    CURRENT: "current",
                    FUTURE: "future",
                    HOVERING_COMPLETED: "future-completed"
                },
                REWARD_STATE: {
                    LOCKED: "Locked",
                    UNLOCKED: "Unlocked",
                    UNSELECTED: "Unselected",
                    SELECTED: "Selected"
                },
                TRACKER_SIZE: {
                    SMALL: "tracker-size-small",
                    MEDIUM: "tracker-size-medium"
                },
                REWARD_OPTION_HEADER_TYPE: {
                    FREE: "FREE",
                    PREMIUM: "PREMIUM",
                    NONE: "NONE"
                }
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                DEFAULT_SUMMONER_ICON_ID: 29
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                AUTO: "auto",
                ALWAYS: "always",
                NEVER: "never"
            };
            t.default = n
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            const n = {
                    UNKNOWN: "UNKNOWN",
                    ENABLED: "ENABLED",
                    DISABLED: "DISABLED"
                },
                s = {
                    PRIVATE: "PRIVATE",
                    PUBLIC: "PUBLIC"
                };
            var o = {
                ProfilePrivacyEnabledState: n,
                ProfilePrivacySetting: s,
                DEFAULT_PROFILE_PRIVACY: {
                    enabledState: n.UNKNOWN,
                    setting: s.PUBLIC
                }
            };
            t.default = o
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = t.TIME_UNITS = t.TIME_CONVERSIONS = void 0;
            const n = {
                MILLISECONDS: "milliseconds",
                SECONDS: "seconds",
                MINUTES: "minutes",
                HOURS: "hours",
                DAYS: "days",
                WEEKS: "weeks",
                MONTHS: "months",
                YEARS: "years"
            };
            t.TIME_UNITS = n;
            const s = 36e5,
                o = 864e5,
                i = 6048e5,
                l = {
                    MILLISECONDS_IN_A_SECOND: 1e3,
                    MILLISECONDS_IN_A_MINUTE: 6e4,
                    MILLISECONDS_IN_A_HOUR: s,
                    MILLISECONDS_IN_A_DAY: o,
                    MILLISECONDS_IN_A_WEEK: i,
                    MILLISECONDS_IN_A_YEAR: 314496e5
                };
            t.TIME_CONVERSIONS = l;
            var a = {
                TIME_UNITS: n,
                TIME_CONVERSIONS: l
            };
            t.default = a
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(82),
                i = s.Ember.Controller.extend({
                    selectedSpell: null,
                    lastFinishedVideo: null,
                    canReplay: !0,
                    selectedSpellModesDisplay: s.Ember.computed("selectedSpell.localizedGameModes", (function() {
                        const e = this.get("selectedSpell.localizedGameModes");
                        return e ? e.join(", ") : ""
                    })),
                    coolDownDisplay: s.Ember.computed("selectedSpell.cooldown", (function() {
                        const e = this.get("selectedSpell.cooldown");
                        return e ? this.get("tra").formatString("summoner_spell_summoner_cooldown_display", {
                            duration: e
                        }) : ""
                    })),
                    actions: {
                        replayVideo() {
                            const e = this.get("lastFinishedVideo");
                            e && (e.currentTime = .1, e.play())
                        },
                        onSetLastPlayedVideo(e) {
                            this.set("lastFinishedVideo", e)
                        },
                        onSetIsPlaying(e) {
                            this.set("canReplay", !e)
                        },
                        hoverSpell() {
                            o.SPELL_SFX.hoverSpell.play()
                        },
                        selectSpell(e) {
                            const t = this.get("selectedSpell");
                            e && t === e || (t && s.Ember.set(t, "selected", !1), s.Ember.set(e, "selected", !0), this.set("selectedSpell", e), o.SPELL_SFX.selectSpell.play())
                        }
                    }
                });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SPELL_SFX = void 0;
            const s = n(1).AudioPlugin.getChannel("sfx-ui"),
                o = {
                    hoverSpell: s.createSound("/fe/lol-collections/audio/sfx-uikit-grid-hover.ogg"),
                    selectSpell: s.createSound("/fe/lol-collections/audio/sfx-uikit-grid-click.ogg"),
                    hoverReplay: s.createSound("/fe/lol-collections/audio/sfx-uikit-button-circlegold-hover.ogg"),
                    clickReplay: s.createSound("/fe/lol-collections/audio/sfx-uikit-button-replay-click.ogg")
                };
            t.SPELL_SFX = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(48),
                i = n(53),
                l = n(63);
            const a = s.AudioPlugin.getChannel("sfx-ui"),
                r = e => Number.isInteger(e) && e >= 0;
            var c = s.Ember.Controller.extend({
                queryParams: {
                    searchTerm: "s",
                    sortBy: "sort",
                    groupBy: "group",
                    isUnownedShown: "show_unowned",
                    isUnavailableShown: "show_unavailable"
                },
                searchTerm: "",
                sortBy: "acquisitionDate",
                groupBy: "myCollection",
                isUnownedShown: !1,
                isUnavailableShown: !1,
                controlsConfiguration: {
                    myCollection: ["acquisitionDate", "releaseDate", "alphabetical"],
                    all: ["releaseDate", "alphabetical"],
                    set: ["mostRare", "mostOwned", "mostComplete", "alphabetical"],
                    esports: ["event", "team", "releaseDate"],
                    tier: ["tier"]
                },
                settingsPreferences: s.Ember.inject.service("settings-preferences"),
                summonerIconsById: s.Ember.computed.oneWay("model.summonerIconsById"),
                region: s.Ember.computed.alias("model.region"),
                isTencentRegion: s.Ember.computed.equal("region", "TENCENT"),
                shouldShowLegacyInfo: s.Ember.computed.not("isTencentRegion"),
                hasMatchingSummonerIcons: s.Ember.computed("filteredSummonerIcons", "groupedSummonerIcons", (function() {
                    const e = this.get("filteredSummonerIcons"),
                        t = this.get("groupedSummonerIcons");
                    return e && e.length > 0 && t && t.length > 0
                })),
                isGroupBySet: s.Ember.computed.equal("groupBy", "set"),
                isGroupByTier: s.Ember.computed.equal("groupBy", "tier"),
                isGroupWithOwnershipCount: s.Ember.computed.or("isGroupBySet", "isGroupByTier"),
                shouldShowOwnershipCount: s.Ember.computed.and("isUnownedShown", "isGroupWithOwnershipCount"),
                shouldShowTotalCount: s.Ember.computed.and("isUnavailableShown", "isGroupWithOwnershipCount"),
                currentSummonerIconId: null,
                selectedSummonerIconId: null,
                isPAWOpen: !1,
                didPurchaseItem: !1,
                handlePAWClosed() {
                    this.isDestroying || this.isDestroyed || (this.set("isPAWOpen", !1), this.get("didPurchaseItem") && this.send("refreshCurrentRoute"))
                },
                handlePAWPurchased() {
                    this.isDestroying || this.isDestroyed || this.set("didPurchaseItem", !0)
                },
                init() {
                    this._super(...arguments), this.handlePAWPurchased = this.handlePAWPurchased.bind(this), this.handlePAWClosed = this.handlePAWClosed.bind(this), (0, s.dataBinding)("/lol-summoner", s.socket).observe("/v1/current-summoner", this, (e => {
                        e && r(e.profileIconId) && this.updateProfileIconInGrid(e.profileIconId)
                    }))
                },
                willDestroy() {
                    this._super(...arguments), (0, s.dataBinding)("/lol-summoner", s.socket).unobserve("/v1/current-summoner", this);
                    const e = {
                        groupBy: this.get("groupBy"),
                        sortBy: this.get("sortBy"),
                        isUnownedShown: this.get("isUnownedShown"),
                        isUnavailableShown: this.get("isUnavailableShown")
                    };
                    this.get("settingsPreferences").setSummonerIconsAccountSettings(e)
                },
                isSaveButtonEnabled: s.Ember.computed("currentSummonerIconId", "selectedSummonerIconId", (function() {
                    const e = this.get("currentSummonerIconId"),
                        t = this.get("selectedSummonerIconId");
                    return !(!r(e) || !r(t)) && e !== t
                })),
                summonerIcons: s.Ember.computed("summonerIconsById", (function() {
                    const e = [];
                    return this.get("summonerIconsById").forEach((t => e.push(t))), e
                })),
                searchedSummonerIcons: s.Ember.computed("summonerIcons.[]", "searchTerm", (function() {
                    const e = document.documentElement.lang,
                        t = this.get("summonerIcons"),
                        n = this.get("searchTerm").toLocaleLowerCase(e);
                    return t.filter((t => t.name.toLocaleLowerCase(e).includes(n)))
                })),
                filteredSummonerIcons: s.Ember.computed("searchedSummonerIcons.[]", "isUnownedShown", "isUnavailableShown", (function() {
                    const e = this.get("searchedSummonerIcons"),
                        t = this.get("isUnownedShown"),
                        n = this.get("isUnavailableShown");
                    return t ? n ? e.slice() : e.filter(o.filterAvailable) : (this.set("isUnavailableShown", !1), e.filter((e => !!e.ownership && (e.ownership.rental && e.ownership.rental.rented || e.ownership.owned))))
                })),
                groupedSummonerIcons: s.Ember.computed("filteredSummonerIcons.[]", "groupBy", "sortBy", (function() {
                    const e = Array.from(this.get("filteredSummonerIcons")),
                        t = this.get("groupBy"),
                        n = this.get("sortBy"),
                        s = {
                            collectibles_grid_release_year_none: this.get("tra.collectibles_grid_release_year_none"),
                            collectibles_grid_release_year_header: this.get("tra.collectibles_grid_release_year_header"),
                            collectibles_grid_purchase_year_none: this.get("tra.collectibles_grid_purchase_year_none"),
                            collectibles_grid_purchase_year_header: this.get("tra.collectibles_grid_purchase_year_header")
                        },
                        l = this.get("orderedRarityTranslationsByKey");
                    Object.assign(s, l);
                    let a = null;
                    switch (t) {
                        case "myCollection":
                        case "all":
                            if ("acquisitionDate" === n) a = (0, o.groupAndSortByAcquisition)(e, s);
                            else if ("releaseDate" === n) {
                                const t = !0;
                                a = (0, o.groupAndSortByRelease)(e, s, t)
                            } else "alphabetical" === n && (a = (0, o.groupAndSortByLetter)(e));
                            break;
                        case "set":
                            a = (0, i.handleSetGroupAndSort)(e, n);
                            break;
                        case "esports":
                            a = (0, i.handleEsportsGroupAndSort)(e, n, s);
                            break;
                        case "tier":
                            a = (0, o.groupAndSortByTier)(e, s);
                            break;
                        default:
                            return []
                    }
                    const r = this.get("currentSummonerIconId");
                    return this.updateProfileIconInGrid(r), (0, o.flattenGroups)(a, !0)
                })),
                totalOwned: s.Ember.computed("model.summonerIconsById", (function() {
                    const e = this.get("model.summonerIconsById");
                    let t = 0;
                    return e.forEach((e => {
                        e.ownership && e.ownership.owned && t++
                    })), t
                })),
                totalOwnedLegacy: s.Ember.computed("model.summonerIconsById", (function() {
                    const e = this.get("model.summonerIconsById");
                    let t = 0;
                    return e.forEach((e => {
                        e.ownership && e.ownership.owned && e.isLegacy && t++
                    })), t
                })),
                itemSizes: s.Ember.computed("groupedSummonerIcons.[]", (function() {
                    const e = this.get("groupedSummonerIcons"),
                        t = [];
                    return e.forEach((e => {
                        if (e.isGroup) {
                            const n = "event" === this.get("sortBy"),
                                s = e.isMajor && n ? i.ESPORTS_EVENT_GROUP_HEADING_HEIGHT : i.GROUP_HEADING_HEIGHT;
                            t.push({
                                groupOrIcon: e,
                                width: i.GROUP_HEADING_WIDTH,
                                height: s
                            })
                        } else t.push({
                            groupOrIcon: e,
                            width: i.SUMMONER_ICON_ITEM_WIDTH,
                            height: i.SUMMONER_ICON_ITEM_HEIGHT
                        })
                    })), t
                })),
                orderedRarityTranslationsByKey: s.Ember.computed("tra", (function() {
                    const e = {};
                    return Object.values(i.SUMMONER_ICON_RARITY_INFORMATION_BY_TIER).forEach((t => e[t.traKey] = this.get(`tra.${t.traKey}`))), e
                })),
                noMatchingSummonerIconsString: s.Ember.computed("tra", (function() {
                    return this.get("tra").formatString("collectibles_grid_no_matching_collectibles", {
                        collectibleName: this.get("tra.collectibles_name_summoner_icon")
                    })
                })),
                getTierHeight(e) {
                    const t = this.get("itemSizes"),
                        n = i.ITEMS_PER_ROW;
                    let s = !1,
                        o = 0,
                        l = 0;
                    for (let i = 0; i < t.length; i++) {
                        const a = t[i],
                            r = a.groupOrIcon;
                        if (r.isGroup) {
                            if (o = 0, r.id === e) {
                                s = !0;
                                break
                            }
                            l += a.height
                        } else o++, 1 === o ? l += a.height : n === o && (o = 0)
                    }
                    return s ? l : 0
                },
                updateProfileIconInGrid(e) {
                    if (!r(e)) return;
                    const t = this.get("currentSummonerIconId"),
                        n = this.get("summonerIconsById");
                    if (n && r(t)) {
                        const e = n.get(t);
                        e && e.computeds.set("profileIconInGrid", !1)
                    }
                    if (this.set("currentSummonerIconId", e), n) {
                        const t = n.get(e);
                        t && t.computeds.set("profileIconInGrid", !0)
                    }
                },
                actions: {
                    setSortBy(e) {
                        this.set("sortBy", e)
                    },
                    setGroupBy(e) {
                        switch (e) {
                            case "myCollection":
                                this.setProperties({
                                    isUnownedShown: !1,
                                    isUnavailableShown: !1,
                                    groupBy: e,
                                    sortBy: "acquisitionDate"
                                });
                                break;
                            case "all":
                                this.setProperties({
                                    groupBy: e,
                                    sortBy: "releaseDate"
                                });
                                break;
                            case "set":
                                this.setProperties({
                                    groupBy: e,
                                    sortBy: "mostRare"
                                });
                                break;
                            case "esports":
                                this.setProperties({
                                    groupBy: e,
                                    sortBy: "event"
                                });
                                break;
                            case "tier":
                                this.setProperties({
                                    groupBy: e,
                                    sortBy: "tier"
                                })
                        }
                    },
                    setScrollToTier(e) {
                        a.playSound("/fe/lol-collections/audio/sfx-uikit-dropdown-select.ogg"), this.setProperties({
                            groupBy: "tier",
                            sortBy: "tier"
                        });
                        const t = this.get(`tra.${e}`),
                            n = this.getTierHeight(t);
                        document.querySelector(".item-grid-scrollable > div:first-child").scrollTo(0, n)
                    },
                    selectSummonerIcon(e) {
                        const t = this.get("selectedSummonerIconId");
                        if (e === t) return;
                        this.set("selectedSummonerIconId", e);
                        const n = this.get("summonerIconsById");
                        if (r(t)) {
                            n.get(t).computeds.set("selectedInGrid", !1)
                        }
                        n.get(e).computeds.set("selectedInGrid", !0)
                    },
                    saveSummonerIcon() {
                        const e = this.get("selectedSummonerIconId"),
                            t = this.get("currentSummonerIconId");
                        r(e) && e !== t && (0, s.dataBinding)("/lol-summoner", s.socket).put("/v1/current-summoner/icon", {
                            profileIconId: e
                        }).catch((t => s.logger.error(`Failed to save icon with id ${e}. ${t}`)))
                    },
                    openPAW(e) {
                        const t = l.PAW.INVENTORY_TYPES.SUMMONER_ICON,
                            n = l.PAW.MODAL_TYPES.SUMMONER_ICON_MODAL,
                            o = this.handlePAWPurchased,
                            i = this.handlePAWClosed,
                            a = e.id;
                        if (a) {
                            const e = s.pawApi.createPAWModal({
                                itemId: a,
                                inventoryType: t
                            }, "summonerIcons", n, null, o, i);
                            this.set("isPAWOpen", e)
                        }
                    }
                }
            });
            t.default = c
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(48),
                i = n(55),
                l = n(63);
            const a = s.AudioPlugin.getChannel("sfx-ui");
            var r = s.Ember.Controller.extend({
                queryParams: {
                    searchTerm: "s",
                    sortBy: "sort",
                    groupBy: "group",
                    isUnownedShown: "show_unowned",
                    isUnavailableShown: "show_unavailable"
                },
                searchTerm: "",
                sortBy: "acquisitionDate",
                groupBy: "myCollection",
                isUnownedShown: !1,
                isUnavailableShown: !1,
                controlsConfiguration: {
                    myCollection: ["acquisitionDate", "alphabetical"],
                    all: ["alphabetical"],
                    set: ["mostRare", "mostOwned", "mostComplete", "alphabetical"],
                    tier: ["tier"]
                },
                isPAWOpen: !1,
                didPurchaseItem: !1,
                settingsPreferences: s.Ember.inject.service("settings-preferences"),
                wardsById: s.Ember.computed.alias("model.wardsById"),
                region: s.Ember.computed.alias("model.region"),
                isTencentRegion: s.Ember.computed.equal("region", "TENCENT"),
                shouldShowLegacyInfo: s.Ember.computed.not("isTencentRegion"),
                isGroupBySet: s.Ember.computed.equal("groupBy", "set"),
                isGroupByTier: s.Ember.computed.equal("groupBy", "tier"),
                isGroupWithOwnershipCount: s.Ember.computed.or("isGroupBySet", "isGroupByTier"),
                shouldShowOwnershipCount: s.Ember.computed.and("isUnownedShown", "isGroupWithOwnershipCount"),
                shouldShowTotalCount: s.Ember.computed.and("isUnavailableShown", "isGroupWithOwnershipCount"),
                hasMatchingWards: s.Ember.computed.notEmpty("filteredWards"),
                wards: s.Ember.computed("wardsById", (function() {
                    const e = [];
                    return this.get("wardsById").forEach((t => e.push(t))), e
                })),
                searchedWards: s.Ember.computed("wards.[]", "searchTerm", (function() {
                    const e = document.documentElement.lang,
                        t = this.get("wards"),
                        n = this.get("searchTerm").toLocaleLowerCase(e);
                    return t.filter((t => t.name.toLocaleLowerCase(e).includes(n)))
                })),
                filteredWards: s.Ember.computed("searchedWards.[]", "isUnownedShown", "isUnavailableShown", (function() {
                    const e = this.get("searchedWards"),
                        t = this.get("isUnownedShown"),
                        n = this.get("isUnavailableShown");
                    return t ? n ? e.slice() : e.filter((e => {
                        const t = e.ownership && e.ownership.owned;
                        return e.lootable || e.prices || e.isInBundle || t
                    })) : (this.set("isUnavailableShown", !1), e.filter((e => e.ownership.owned)))
                })),
                groupedWards: s.Ember.computed("filteredWards.[]", "groupBy", "sortBy", "orderedRarityTranslationsByKey", (function() {
                    const e = Array.from(this.get("filteredWards")),
                        t = this.get("groupBy"),
                        n = this.get("sortBy"),
                        s = {
                            collectibles_grid_wards_my_collection: this.get("tra.collectibles_grid_wards_my_collection"),
                            collectibles_grid_set_none: this.get("tra.collectibles_grid_set_none"),
                            collectibles_grid_purchase_year_none: this.get("tra.collectibles_grid_purchase_year_none"),
                            collectibles_grid_purchase_year_header: this.get("tra.collectibles_grid_purchase_year_header")
                        },
                        l = this.get("orderedRarityTranslationsByKey");
                    Object.assign(s, l);
                    let a = null;
                    switch (t) {
                        case "myCollection":
                        case "all":
                            "acquisitionDate" === n ? a = (0, o.groupAndSortByAcquisition)(e, s) : "alphabetical" === n && (a = (0, o.groupAndSortByLetter)(e));
                            break;
                        case "set":
                            a = (0, i.groupAndSortBySet)(e, n, s);
                            break;
                        case "tier":
                            a = (0, o.groupAndSortByTier)(e, s);
                            break;
                        default:
                            return []
                    }
                    return (0, o.flattenGroups)(a, !0)
                })),
                itemSizes: s.Ember.computed("groupedWards.[]", (function() {
                    const e = this.get("groupedWards"),
                        t = [];
                    return e.forEach((e => {
                        e.isGroup ? t.push({
                            groupOrWard: e,
                            width: i.GROUP_HEADING_WIDTH,
                            height: i.GROUP_HEADING_HEIGHT
                        }) : t.push({
                            groupOrWard: e,
                            width: i.WARD_ITEM_WIDTH,
                            height: i.WARD_ITEM_HEIGHT
                        })
                    })), t
                })),
                orderedRarityTranslationsByKey: s.Ember.computed("tra", (function() {
                    const e = {};
                    return Object.values(i.WARD_RARITY_INFORMATION_BY_TIER).forEach((t => e[t.traKey] = this.get(`tra.${t.traKey}`))), e
                })),
                totalOwnedWards: s.Ember.computed("model.wardsById", (function() {
                    const e = this.get("model.wardsById");
                    let t = 0;
                    return e.forEach((e => {
                        e.ownership && e.ownership.owned && t++
                    })), t
                })),
                totalOwnedLegacyWards: s.Ember.computed("model.wardsById", (function() {
                    const e = this.get("model.wardsById");
                    let t = 0;
                    return e.forEach((e => {
                        e.ownership && e.ownership.owned && e.isLegacy && t++
                    })), t
                })),
                noMatchingWardsString: s.Ember.computed("tra", (function() {
                    return this.get("tra").formatString("collectibles_grid_no_matching_collectibles", {
                        collectibleName: this.get("tra.collectibles_name_ward_skin")
                    })
                })),
                getTierHeight(e) {
                    const t = this.get("itemSizes"),
                        n = i.ITEMS_PER_ROW;
                    let s = !1,
                        o = 0,
                        l = 0;
                    for (let i = 0; i < t.length; i++) {
                        const a = t[i],
                            r = a.groupOrWard;
                        if (r.isGroup) {
                            if (o = 0, r.id === e) {
                                s = !0;
                                break
                            }
                            l += a.height
                        } else o++, 1 === o ? l += a.height : n === o && (o = 0)
                    }
                    return s ? l : 0
                },
                handlePAWClosed() {
                    this.isDestroying || this.isDestroyed || (this.set("isPAWOpen", !1), this.get("didPurchaseItem") && this.send("refreshCurrentRoute"))
                },
                handlePAWPurchased() {
                    this.isDestroying || this.isDestroyed || this.set("didPurchaseItem", !0)
                },
                init() {
                    this._super(...arguments), this.handlePAWPurchased = this.handlePAWPurchased.bind(this), this.handlePAWClosed = this.handlePAWClosed.bind(this)
                },
                willDestroy() {
                    this._super(...arguments);
                    const e = {
                        groupBy: this.get("groupBy"),
                        sortBy: this.get("sortBy"),
                        isUnownedShown: this.get("isUnownedShown"),
                        isUnavailableShown: this.get("isUnavailableShown")
                    };
                    this.get("settingsPreferences").setWardsAccountSettings(e)
                },
                actions: {
                    setSortBy(e) {
                        this.set("sortBy", e)
                    },
                    setGroupBy(e) {
                        switch (e) {
                            case "myCollection":
                                this.setProperties({
                                    isUnownedShown: !1,
                                    isUnavailableShown: !1,
                                    groupBy: e,
                                    sortBy: "acquisitionDate"
                                });
                                break;
                            case "all":
                                this.setProperties({
                                    groupBy: e,
                                    sortBy: "alphabetical"
                                });
                                break;
                            case "set":
                                this.setProperties({
                                    groupBy: e,
                                    sortBy: "mostRare"
                                });
                                break;
                            case "tier":
                                this.setProperties({
                                    groupBy: e,
                                    sortBy: "tier"
                                })
                        }
                    },
                    setScrollToTier(e) {
                        a.playSound("/fe/lol-collections/audio/sfx-uikit-dropdown-select.ogg"), this.setProperties({
                            groupBy: "tier",
                            sortBy: "tier"
                        });
                        const t = this.get(`tra.${e}`),
                            n = this.getTierHeight(t);
                        document.querySelector(".item-grid-scrollable > div:first-child").scrollTo(0, n)
                    },
                    openPAW(e) {
                        const t = l.PAW.INVENTORY_TYPES.WARD_SKIN,
                            n = l.PAW.MODAL_TYPES.WARD_SKIN_MODAL,
                            o = this.handlePAWPurchased,
                            i = this.handlePAWClosed,
                            a = e.id;
                        if (a) {
                            const e = s.pawApi.createPAWModal({
                                itemId: a,
                                inventoryType: t
                            }, "wardSkin", n, null, o, i);
                            this.set("isPAWOpen", e)
                        }
                    }
                }
            });
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(48),
                i = n(57),
                l = n(63);
            const a = s.AudioPlugin.getChannel("sfx-ui");
            var r = s.Ember.Controller.extend({
                queryParams: {
                    searchTerm: "s",
                    sortBy: "sort",
                    groupBy: "group",
                    isUnownedShown: "show_unowned",
                    isUnavailableShown: "show_unavailable"
                },
                searchTerm: "",
                sortBy: "acquisitionDate",
                groupBy: "myCollection",
                isUnownedShown: !1,
                isUnavailableShown: !1,
                controlsConfiguration: {
                    myCollection: ["acquisitionDate", "releaseDate", "alphabetical"],
                    all: ["releaseDate", "alphabetical"],
                    champion: ["mastery", "mostOwned", "mostComplete", "alphabetical"],
                    set: ["mostOwned", "alphabetical"],
                    tier: ["tier"]
                },
                isPAWOpen: !1,
                didPurchaseItem: !1,
                settingsPreferences: s.Ember.inject.service("settings-preferences"),
                region: s.Ember.computed.alias("model.region"),
                isTencentRegion: s.Ember.computed.equal("region", "TENCENT"),
                shouldShowLegacyInfo: s.Ember.computed.not("isTencentRegion"),
                chromasById: s.Ember.computed.oneWay("model.chromasById"),
                sortableMasteries: s.Ember.computed.oneWay("model.sortableMasteries"),
                hasMatchingChromas: s.Ember.computed.notEmpty("filteredChromas"),
                isGroupByChampion: s.Ember.computed.equal("groupBy", "champion"),
                isGroupBySet: s.Ember.computed.equal("groupBy", "set"),
                isGroupByTier: s.Ember.computed.equal("groupBy", "tier"),
                isGroupWithOwnershipCount: s.Ember.computed.or("isGroupByChampion", "isGroupBySet", "isGroupByTier"),
                shouldShowOwnershipCount: s.Ember.computed.and("isUnownedShown", "isGroupWithOwnershipCount"),
                shouldShowTotalCount: s.Ember.computed.and("isUnavailableShown", "isGroupWithOwnershipCount"),
                chromas: s.Ember.computed("chromasById", (function() {
                    const e = [];
                    return this.get("chromasById").forEach((t => e.push(t))), e
                })),
                searchedChromas: s.Ember.computed("chromas.[]", "searchTerm", (function() {
                    const e = document.documentElement.lang,
                        t = this.get("chromas"),
                        n = this.get("searchTerm").toLocaleLowerCase(e);
                    return t.filter((t => {
                        const s = `champion_local_search_colloq_${t.champion.id}`,
                            o = this.get("tra").exists(s) ? this.get(`tra.${s}`) : t.champion.name,
                            i = t.name.toLocaleLowerCase(e);
                        return o.toLocaleLowerCase(e).includes(n) || i.includes(n)
                    }))
                })),
                filteredChromas: s.Ember.computed("searchedChromas.[]", "isUnownedShown", "isUnavailableShown", (function() {
                    const e = this.get("searchedChromas"),
                        t = this.get("isUnownedShown"),
                        n = this.get("isUnavailableShown");
                    return t ? n ? e.slice() : e.filter((e => {
                        const t = e.ownership && e.ownership.owned;
                        return e.lootable || e.prices || e.isInBundle || t
                    })) : (this.set("isUnavailableShown", !1), e.filter((e => e.ownership.loyaltyReward || e.ownership.rental.rented || e.ownership.owned)))
                })),
                groupedChromas: s.Ember.computed("filteredChromas.[]", "groupBy", "sortBy", "sortableMasteries", (function() {
                    const e = Array.from(this.get("filteredChromas")),
                        t = this.get("groupBy"),
                        n = this.get("sortBy"),
                        s = this.get("sortableMasteries"),
                        l = {
                            collectibles_grid_release_year_none: this.get("tra.collectibles_grid_release_year_none"),
                            collectibles_grid_release_year_header: this.get("tra.collectibles_grid_release_year_header"),
                            collectibles_grid_purchase_year_none: this.get("tra.collectibles_grid_purchase_year_none"),
                            collectibles_grid_purchase_year_header: this.get("tra.collectibles_grid_purchase_year_header")
                        },
                        a = this.get("orderedRarityTranslationsByKey");
                    Object.assign(l, a);
                    let r = null;
                    switch (t) {
                        case "myCollection":
                        case "all":
                            "acquisitionDate" === n ? r = (0, o.groupAndSortByAcquisition)(e, l) : "releaseDate" === n ? r = (0, o.groupAndSortByRelease)(e, l) : "alphabetical" === n && (r = (0, o.groupAndSortByLetter)(e, (e => e.champion ? e.champion.name : null)));
                            break;
                        case "champion":
                            r = (0, i.groupAndSortByChampion)(e, s, n);
                            break;
                        case "set":
                            r = (0, i.groupAndSortBySet)(e, n);
                            break;
                        case "tier":
                            r = (0, o.groupAndSortByTier)(e, l);
                            break;
                        default:
                            return []
                    }
                    return (0, o.flattenGroups)(r, !0)
                })),
                totalOwnedChromas: s.Ember.computed("model.chromasById", (function() {
                    const e = this.get("model.chromasById");
                    let t = 0;
                    return e.forEach((e => {
                        e.ownership && e.ownership.owned && t++
                    })), t
                })),
                totalOwnedLegacyChromas: s.Ember.computed("model.chromasById", (function() {
                    const e = this.get("model.chromasById");
                    let t = 0;
                    return e.forEach((e => {
                        e.ownership && e.ownership.owned && e.isLegacy && t++
                    })), t
                })),
                itemSizes: s.Ember.computed("groupedChromas.[]", (function() {
                    const e = this.get("groupedChromas"),
                        t = [];
                    return e.forEach((e => {
                        e.isGroup ? t.push({
                            width: i.GROUP_HEADING_WIDTH,
                            height: i.GROUP_HEADING_HEIGHT
                        }) : t.push({
                            width: i.CHROMA_ITEM_WIDTH,
                            height: i.CHROMA_ITEM_HEIGHT
                        })
                    })), t
                })),
                orderedRarityTranslationsByKey: s.Ember.computed("tra", (function() {
                    const e = {};
                    return Object.values(i.CHROMA_RARITY_INFORMATION_BY_TIER).forEach((t => e[t.traKey] = this.get(`tra.${t.traKey}`))), e
                })),
                noMatchingChromasString: s.Ember.computed("tra", (function() {
                    return this.get("tra").formatString("collectibles_grid_no_matching_collectibles", {
                        collectibleName: this.get("tra.collectibles_name_chroma")
                    })
                })),
                getTierHeight(e) {
                    const t = this.get("groupedChromas");
                    let n = !1,
                        s = 0,
                        o = 0;
                    for (let l = 0; l < t.length; l++)
                        if (t[l].isGroup) {
                            if (s = 0, t[l].id === e) {
                                n = !0;
                                break
                            }
                            o += i.GROUP_HEADING_HEIGHT
                        } else s++, 1 === s ? o += i.CHROMA_ITEM_HEIGHT : 4 === s && (s = 0);
                    return n ? o : 0
                },
                handlePAWClosed() {
                    this.isDestroying || this.isDestroyed || (this.set("isPAWOpen", !1), this.get("didPurchaseItem") && this.send("refreshCurrentRoute"))
                },
                handlePAWPurchased() {
                    this.isDestroying || this.isDestroyed || this.set("didPurchaseItem", !0)
                },
                init() {
                    this._super(...arguments), this.handlePAWPurchased = this.handlePAWPurchased.bind(this), this.handlePAWClosed = this.handlePAWClosed.bind(this)
                },
                willDestroy() {
                    this._super(...arguments);
                    const e = {
                        groupBy: this.get("groupBy"),
                        sortBy: this.get("sortBy"),
                        isUnownedShown: this.get("isUnownedShown"),
                        isUnavailableShown: this.get("isUnavailableShown")
                    };
                    this.get("settingsPreferences").setChromaAccountSettings(e)
                },
                actions: {
                    setSortBy(e) {
                        this.set("sortBy", e)
                    },
                    setGroupBy(e) {
                        switch (e) {
                            case "myCollection":
                                this.setProperties({
                                    isUnownedShown: !1,
                                    isUnavailableShown: !1,
                                    groupBy: e,
                                    sortBy: "acquisitionDate"
                                });
                                break;
                            case "all":
                                this.setProperties({
                                    groupBy: e,
                                    sortBy: "releaseDate"
                                });
                                break;
                            case "champion":
                                this.setProperties({
                                    groupBy: e,
                                    sortBy: "mastery"
                                });
                                break;
                            case "set":
                                this.setProperties({
                                    groupBy: e,
                                    sortBy: "mostOwned"
                                });
                                break;
                            case "tier":
                                this.setProperties({
                                    groupBy: e,
                                    sortBy: "tier"
                                })
                        }
                    },
                    setScrollToTier(e) {
                        a.playSound("/fe/lol-collections/audio/sfx-uikit-dropdown-select.ogg"), this.setProperties({
                            groupBy: "tier",
                            sortBy: "tier"
                        });
                        const t = this.get(`tra.${e}`),
                            n = this.getTierHeight(t);
                        document.querySelector(".item-grid-scrollable > div:first-child").scrollTo(0, n)
                    },
                    openPAW(e) {
                        const t = l.PAW.INVENTORY_TYPES.CHAMPION_SKIN,
                            n = l.PAW.MODAL_TYPES.SKIN_WITH_DEPENDENCY_MODAL,
                            o = this.handlePAWPurchased,
                            i = this.handlePAWClosed,
                            a = e.id;
                        if (a) {
                            const e = s.pawApi.createPAWModal({
                                itemId: a,
                                inventoryType: t
                            }, "chromas", n, null, o, i);
                            this.set("isPAWOpen", e)
                        }
                    }
                }
            });
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(63);
            const i = s.AudioPlugin.getChannel("sfx-ui"),
                l = "/lol-client-config/v3/client-config/lol.client_settings.navigation.enableRewardsProgram",
                a = s.dataBinding.bindTo(s.socket);
            var r = s.Ember.Component.extend({
                classNames: ["rcp-fe-lol-collections-champion-item"],
                classNameBindings: ["isPlayable:unlocked:locked"],
                didPurchaseChampion: !1,
                platformConfig: s.Ember.inject.service("platform-config"),
                milestonesForSetCompletion: 15,
                isEternalsEnabled: s.Ember.computed.oneWay("platformConfig.isEternalsEnabled"),
                hasMastery: s.Ember.computed.gt("champion.masteryLevel", 0),
                isChestGranted: s.Ember.computed.equal("champion.chestGranted", 1),
                isFreeToPlay: s.Ember.computed.bool("champion.freeToPlay"),
                isRented: s.Ember.computed.bool("champion.ownership.rental.rented"),
                isOwned: s.Ember.computed.bool("champion.ownership.owned"),
                isLoyaltyReward: s.Ember.computed.bool("champion.ownership.loyaltyReward"),
                isXboxGPReward: s.Ember.computed.bool("champion.ownership.xboxGPReward"),
                hasEternals: s.Ember.computed.gt("champion.eternalsOwned", 0),
                isRewardsProgramEnabled: null,
                hasMasteryBorder: s.Ember.computed("isOwned", "isFreeToPlay", "isRented", "isLoyaltyReward", "isXboxGPReward", (function() {
                    return this.get("isOwned") || this.get("isFreeToPlay") || this.get("isRented") || this.get("isLoyaltyReward") || this.get("isXboxGPReward")
                })),
                rentalExplanation: s.Ember.computed("champion.ownership.rental", (function() {
                    const e = this.get("champion.ownership.rental");
                    if (!e || !e.rented) return null;
                    const t = e.endDate - Date.now(),
                        n = {
                            wins: e.winCountRemaining || 0,
                            days: Math.floor(t / 864e5),
                            hours: Math.floor(t / 36e5 % 24)
                        };
                    return this.get("tra").formatString(this.getRentalExplanationLocKey(n.days, n.hours, n.wins), n)
                })),
                loyaltyExplanation: s.Ember.computed("champion.ownership", "isRewardsProgramEnabled", (function() {
                    const e = this.get("champion.ownership.loyaltyReward"),
                        t = this.get("isRewardsProgramEnabled");
                    return e ? t ? this.get("tra.collections_champion_grid_mastery_tooltip_rental_expl_loyalty_reward") : this.get("tra.collections_champion_grid_mastery_tooltip_rental_expl_free_to_play_reward") : null
                })),
                xboxExplanation: s.Ember.computed("champion.ownership", "isRewardsProgramEnabled", (function() {
                    const {
                        isXGPReward: e
                    } = this.returnBadgeInformation(), t = this.get("isRewardsProgramEnabled");
                    return e && t ? this.get("tra.collections_champion_grid_mastery_tooltip_rental_expl_xbox_game_pass") : null
                })),
                infoBadgePaths: s.Ember.computed("isOwned", "isFreeToPlay", "isRented", "isChestGranted", "isXboxGPReward", "isLoyaltyReward", "champion", "isRewardsProgramEnabled", (function() {
                    const {
                        isFreeToPlay: e,
                        isRented: t,
                        isOwned: n,
                        isChestGranted: s,
                        isLoyaltyReward: o,
                        isXGPReward: i
                    } = this.returnBadgeInformation(), l = this.get("isRewardsProgramEnabled"), a = [];
                    return (o || i) && l && a.push("/fe/lol-collections/images/item-element/rewards-program-icon.svg"), o && !l && a.push("/fe/lol-collections/images/item-element/Loyalty.png"), t && a.push("/fe/lol-collections/images/item-element/Rental.png"), e && a.push("/fe/lol-collections/images/item-element/Free-Rotation.png"), s && a.push("/fe/lol-collections/images/item-element/Hextech-Chest.png"), a
                })),
                tooltipId: s.Ember.computed("champion.id", (function() {
                    return "champion-" + this.get("champion.id")
                })),
                masteryLevelString: s.Ember.computed("champion.masteryLevel", "tra", (function() {
                    const e = this.get("champion.masteryLevel");
                    return this.get(`tra.collectibles_mastery_level_${e}`)
                })),
                masteryBadgeImgPath: s.Ember.computed("champion.masteryLevel", (function() {
                    return `/fe/lol-collections/images/item-element/mastery-${this.get("champion.masteryLevel")}.png`
                })),
                masteryScore: s.Ember.computed("champion.masteryLevel", "champion.formattedMasteryScore", "champion.formattedMasteryGoal", "tra", (function() {
                    return this.get("champion.masteryLevel") < 5 ? this.get("tra").formatString("collections_champion_grid_mastery_tooltip_points", {
                        current: this.get("champion.formattedMasteryScore"),
                        next: this.get("champion.formattedMasteryGoal")
                    }) : this.get("tra").formatString("collections_champion_grid_mastery_tooltip_points_max", {
                        points: this.get("champion.formattedMasteryScore")
                    })
                })),
                masteryTitle: s.Ember.computed("champion.masteryLevel", "champion.roles", "tra", (function() {
                    const e = this.get("champion.masteryLevel"),
                        t = this.get("champion.roles");
                    return e <= 0 ? "" : this.get(`tra.champion_mastery_role_title_${t[0]}_${e}`)
                })),
                highestGrade: s.Ember.computed("champion.highestGrade", (function() {
                    let e = this.get("champion.highestGrade");
                    return e || (e = this.get("tra.collections_champion_grid_mastery_tooltip_season_no_grade")), this.get("tra").formatString("collections_champion_grid_mastery_tooltip_season_highest_grade", {
                        grade: e
                    })
                })),
                eternalsSets: s.Ember.computed("champion.eternalsSets.[]", (function() {
                    const e = this.get("champion.eternalsSets"),
                        t = [];
                    return e.forEach((e => {
                        const n = {
                            name: e.name,
                            noneOwned: 0 === e.stonesOwned,
                            milestonesPassed: e.milestonesPassed,
                            complete: e.milestonesPassed >= 15
                        };
                        t.push(n)
                    })), t
                })),
                init() {
                    this._super(...arguments), this.playSoundOnEvent = this.playSoundOnEvent.bind(this), this.handlePAWPurchased = this.handlePAWPurchased.bind(this), this.handlePAWClosed = this.handlePAWClosed.bind(this), this.handleChampionDetailsClosed = this.handleChampionDetailsClosed.bind(this), a.observe(l, (e => {
                        this.set("isRewardsProgramEnabled", e)
                    }))
                },
                didInsertElement() {
                    this._super(...arguments);
                    const e = this.element.querySelector(".champion-image-container");
                    e.addEventListener("click", this.playSoundOnEvent), e.addEventListener("mouseenter", this.playSoundOnEvent)
                },
                willDestroy() {
                    this._super(...arguments), a.unobserve(l)
                },
                willDestroyElement() {
                    this._super(...arguments);
                    const e = this.element.querySelector(".champion-image-container");
                    e.removeEventListener("click", this.playSoundOnEvent), e.removeEventListener("mouseenter", this.playSoundOnEvent)
                },
                handlePAWClosed() {
                    this.isDestroying || this.isDestroyed || (this.set("isPAWOpen", !1), this.get("didPurchaseChampion") && this.sendAction("refreshCurrentRoute"))
                },
                handlePAWPurchased() {
                    this.isDestroying || this.isDestroyed || this.set("didPurchaseChampion", !0)
                },
                handleChampionDetailsClosed() {
                    this.isDestroying || this.isDestroyed || this.sendAction("refreshCurrentRoute")
                },
                playSoundOnEvent(e) {
                    let t = "";
                    switch (e.type) {
                        case "click":
                            t = "/fe/lol-collections/audio/sfx-uikit-grid-click.ogg";
                            break;
                        case "mouseenter":
                            t = "/fe/lol-collections/audio/sfx-uikit-grid-hover.ogg";
                            break;
                        default:
                            t = ""
                    }
                    i.playSound(t)
                },
                getRentalExplanationLocKey(e, t, n) {
                    let s = "collections_champion_grid_mastery_tooltip_rental_expl";
                    return e > 0 ? s += "_days_hours" : t > 0 && (s += "_hours"), n > 0 && (s += "_wins"), s
                },
                returnBadgeInformation() {
                    return {
                        isFreeToPlay: this.get("isFreeToPlay"),
                        isRented: this.get("isRented"),
                        isOwned: this.get("isOwned"),
                        isChestGranted: this.get("isChestGranted"),
                        isLoyaltyReward: this.get("isLoyaltyReward"),
                        isXGPReward: this.get("isXboxGPReward")
                    }
                },
                actions: {
                    openDetails() {
                        const e = this.get("champion.id"),
                            t = this.get("isPAWOpen"),
                            n = this.handleChampionDetailsClosed;
                        e && !t && s.ChampionDetails.show({
                            championId: e,
                            onCloseCallback: n
                        })
                    },
                    openPAW() {
                        const e = this.get("champion.id"),
                            t = o.PAW.INVENTORY_TYPES.CHAMPION,
                            n = o.PAW.MODAL_TYPES.CHAMPION_MODAL,
                            i = this.handlePAWPurchased,
                            l = this.handlePAWClosed;
                        if (e) {
                            const o = s.pawApi.createPAWModal({
                                itemId: e,
                                inventoryType: t
                            }, "champions", n, null, i, l);
                            this.set("isPAWOpen", o)
                        }
                    }
                }
            });
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = s.Ember.Component.extend({
                    classNames: ["rcp-fe-lol-collections-legacy-app-mount"],
                    appName: null,
                    didInsertElement() {
                        this._super(...arguments);
                        const e = this.element.querySelector(".legacy-viewport");
                        this.showScreen(e)
                    },
                    willDestroyElement() {
                        this._super(...arguments);
                        const e = this.element.querySelector(".legacy-viewport");
                        this.hideScreen(e)
                    },
                    showScreen(e) {
                        const t = this.get("appName");
                        let n = document.createElement("div");
                        if ("emote-panel" === t) {
                            n = s.EmotePanelApi.getEmotePanel().domNode
                        } else if ("item-sets" === t) {
                            n = s.ItemSetsApi.getItemSetsScreen().domNode
                        }
                        e.appendChild(n)
                    },
                    hideScreen(e) {
                        const t = this.get("appName");
                        for (; e.firstChild;) e.removeChild(e.firstChild);
                        "emote-panel" === t ? s.EmotePanelApi.removeEmotePanel() : "item-sets" === t && s.ItemSetsApi.removeItemSetsScreen()
                    }
                });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = s.Ember.Component.extend({
                    classNames: ["rcp-fe-lol-collections-skin-item-header"],
                    title: "",
                    description: "",
                    isMajor: !0,
                    groupBy: "",
                    sortBy: "",
                    isUniverseMajorHeader: s.Ember.computed("isMajor", "sortBy", (function() {
                        return this.get("isMajor") && "universe" === this.get("sortBy")
                    }))
                });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = s.Ember.Component.extend({
                    classNames: ["rcp-fe-lol-collections-summoner-icon-header"],
                    title: "",
                    isMajor: !0,
                    groupBy: "",
                    sortBy: "",
                    isEventMajorHeader: s.Ember.computed("isMajor", "sortBy", (function() {
                        return this.get("isMajor") && "event" === this.get("sortBy")
                    }))
                });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(46);
            const i = s.AudioPlugin.getChannel("sfx-ui");
            var l = s.Ember.Component.extend({
                classNames: ["rcp-fe-lol-collections-inventory-item"],
                classNameBindings: ["isSkin:rcp-fe-lol-collections-skin-item", "isWard:rcp-fe-lol-collections-ward-item", "isSummonerIcon:rcp-fe-lol-collections-summoner-icon-item", "isChroma:rcp-fe-lol-collections-chroma-item"],
                settingsPreferences: s.Ember.inject.service("settings-preferences"),
                shouldShowLegacyInfo: null,
                itemType: null,
                isSkin: s.Ember.computed.equal("itemType", "skin"),
                isWard: s.Ember.computed.equal("itemType", "ward"),
                isSummonerIcon: s.Ember.computed.equal("itemType", "summoner_icon"),
                isChroma: s.Ember.computed.equal("itemType", "chroma"),
                isOwned: s.Ember.computed.bool("inventoryItem.ownership.owned"),
                isUnowned: s.Ember.computed.not("isOwned"),
                hasPrices: s.Ember.computed.bool("inventoryItem.prices"),
                isInBundle: s.Ember.computed.bool("inventoryItem.isInBundle"),
                isPurchasable: s.Ember.computed.and("isUnowned", "hasPrices"),
                releaseDate: s.Ember.computed.alias("inventoryItem.releaseYear"),
                hasAcquisitionDate: s.Ember.computed.bool("acquisitionDate"),
                hasReleaseDate: s.Ember.computed.bool("inventoryItem.releaseYear"),
                dontShowAcquisitionDate: s.Ember.computed.not("hasAcquisitionDate"),
                showReleaseDate: s.Ember.computed.and("dontShowAcquisitionDate", "hasReleaseDate"),
                computeds: s.Ember.computed.alias("inventoryItem.computeds"),
                isSelectable: s.Ember.computed.and("isOwned", "isSummonerIcon"),
                hasDetailsView: s.Ember.computed.bool("isSkin"),
                hasEmblem: s.Ember.computed.bool("emblemSrc"),
                detailsClassName: s.Ember.computed("hasDetailsView", (function() {
                    return this.get("hasDetailsView") ? "has-details" : "no-details"
                })),
                shouldShowDescription: s.Ember.computed("isSkin", "inventoryItem.description", (function() {
                    return !this.get("isSkin") && this.get("inventoryItem.description")
                })),
                isTieredSkin: s.Ember.computed("isSkin", "inventoryItem", (function() {
                    return this.get("isSkin") && "kTieredSkin" === this.get("inventoryItem.questSkinInfo.productType")
                })),
                hasQuestSkinIndicator: s.Ember.computed("isSkin", "inventoryItem", (function() {
                    const e = this.get("isSkin"),
                        t = this.get("inventoryItem"),
                        n = t.questSkinInfo && Array.isArray(t.questSkinInfo.tiers);
                    return e && !!n && "kQuestSkin" === t?.questSkinInfo?.productType
                })),
                numOwnedQuestSkins: s.Ember.computed("hasQuestSkinIndicator", "inventoryItem", (function() {
                    const e = this.get("inventoryItem"),
                        t = this.get("hasQuestSkinIndicator");
                    let n = 0;
                    return t && e.questSkinInfo.tiers.forEach((e => {
                        e.ownership.owned && ++n
                    })), n
                })),
                totalQuestSkins: s.Ember.computed("hasQuestSkinIndicator", "inventoryItem", (function() {
                    const e = this.get("inventoryItem");
                    return this.get("hasQuestSkinIndicator") ? e.questSkinInfo.tiers.length : 0
                })),
                questSkinProgression: s.Ember.computed("hasQuestSkinIndicator", "numOwnedQuestSkins", "totalQuestSkins", (function() {
                    return this.get("hasQuestSkinIndicator") ? this.get("tra").formatString("skin_grid_progression", {
                        numerator: this.get("numOwnedQuestSkins"),
                        denominator: this.get("totalQuestSkins")
                    }) : ""
                })),
                questSkinProgressionTooltip: s.Ember.computed("hasQuestSkinIndicator", "numOwnedQuestSkins", "totalQuestSkins", (function() {
                    return this.get("hasQuestSkinIndicator") ? this.get("tra").formatString("skin_grid_tooltip_progression", {
                        numerator: this.get("numOwnedQuestSkins"),
                        denominator: this.get("totalQuestSkins")
                    }) : ""
                })),
                hasChromaIndicator: s.Ember.computed("isSkin", "inventoryItem", (function() {
                    const e = this.get("isSkin"),
                        t = this.get("inventoryItem");
                    return !!e && Array.isArray(t.chromas)
                })),
                hasItemVideo: s.Ember.computed("inventoryItem", "isSkin", (function() {
                    if (!this.get("isSkin")) return !1;
                    const e = this.get("inventoryItem"),
                        t = o.SPLASH_VIDEO_CONFIG[e.id];
                    return !!(e.rarity && "ultimate" === e.rarity.borderRarity && t && t.collectionView)
                })),
                itemName: s.Ember.computed("inventoryItem", "hasQuestSkinIndicator", (function() {
                    const e = this.get("inventoryItem"),
                        t = this.get("hasQuestSkinIndicator");
                    return this.get("isTieredSkin") ? e?.questSkinInfo?.tiers?.reduce?.(((e, t) => t.ownership.owned ? t.name : e), e?.questSkinInfo?.tiers?.[0]?.name) : t ? e.questSkinInfo.name : e.name
                })),
                itemVideoPath: s.Ember.computed("hasItemVideo", "inventoryItem.id", (function() {
                    if (!this.get("hasItemVideo")) return "";
                    return o.SPLASH_VIDEO_CONFIG[this.get("inventoryItem.id")].collectionView.loopVideoPath
                })),
                lingerVideoPath: s.Ember.computed("isSkin", (function() {
                    return this.get("isSkin") ? "/fe/lol-collections/video/purchase/skin-linger.webm" : "/fe/lol-collections/video/purchase/linger.webm"
                })),
                isLegacy: s.Ember.computed("inventoryItem.isLegacy", "shouldShowLegacyInfo", (function() {
                    const e = this.get("inventoryItem.isLegacy");
                    return !!this.get("shouldShowLegacyInfo") && e
                })),
                isNew: s.Ember.computed("inventoryItem.ownership.rental.purchaseDate", "lastVisitTime", (function() {
                    return this.get("inventoryItem.ownership.rental.purchaseDate") >= this.get("lastVisitTime")
                })),
                isNewBorder: s.Ember.computed("hasSkinBorders", "skinBorders", "lastVisitTime", (function() {
                    const e = this.get("lastVisitTime");
                    let t = !1;
                    if (this.get("hasSkinBorders")) {
                        t = this.get("skinBorders").some((t => t.purchaseDate >= e))
                    }
                    return t
                })),
                shouldShowNewItemGlow: s.Ember.computed.or("isNew", "isNewBorder"),
                showLimitedLabel: s.Ember.computed("inventoryItem.lootable", "isPurchasable", "isUnowned", "isInBundle", (function() {
                    const e = this.get("inventoryItem.lootable"),
                        t = this.get("isPurchasable"),
                        n = this.get("isUnowned"),
                        s = this.get("isInBundle");
                    return !t && !e && n && !s
                })),
                itemTypeClassString: s.Ember.computed("isSkin", (function() {
                    return this.get("isSkin") ? "item-type-skin" : "item-type-general"
                })),
                rarityClassString: s.Ember.computed("inventoryItem.rarity", "computeds.selectedInGrid", "computeds.profileIconInGrid", "isOwned", (function() {
                    const e = [];
                    return e.push(this.get("inventoryItem.rarity.borderRarity")), e.push(this.get("isOwned") ? "owned" : "unowned"), this.get("computeds.selectedInGrid") && e.push("selected"), this.get("computeds.profileIconInGrid") && e.push("current"), e.join(" ")
                })),
                gemClassString: s.Ember.computed("inventoryItem.rarity", "isTencentRegion", (function() {
                    return this.get("isTencentRegion") ? `cn-gem-${this.get("inventoryItem.rarity.order")}` : this.get("inventoryItem.rarity.borderRarity")
                })),
                emblemSrc: s.Ember.computed("inventoryItem.emblems", (function() {
                    const e = this.get("inventoryItem.emblems");
                    if (Array.isArray(e)) return e[0].emblemPath.small
                })),
                hasSkinBorders: s.Ember.computed("inventoryItem", "isSkin", (function() {
                    const e = this.get("inventoryItem");
                    return !(!this.get("isSkin") || e.isVintage || !e.ownedSkinBorders)
                })),
                skinBorders: s.Ember.computed("inventoryItem.ownedSkinBorders", (function() {
                    const e = this.get("inventoryItem.ownedSkinBorders"),
                        t = new Map;
                    e.forEach((e => {
                        t.has(e.layer) ? t.get(e.layer).priority < e.priority && t.set(e.layer, e) : t.set(e.layer, e)
                    }));
                    const n = new Map([...t.entries()].sort());
                    return Array.from(n.values())
                })),
                acquisitionDate: s.Ember.computed("inventoryItem", (function() {
                    const e = this.get("inventoryItem");
                    if (e && e.ownership && e.ownership.owned) {
                        const e = this.get("inventoryItem.ownership.rental.purchaseDate");
                        return e ? this.get("tra.moment")(new Date(e)).format(this.get("tra.collectibles_acquire_date_format")) : null
                    }
                    return null
                })),
                itemImgPath: s.Ember.computed("inventoryItem", "isSkin", "isWard", "isChroma", "isOwned", (function() {
                    const e = this.get("inventoryItem"),
                        t = this.get("isSkin"),
                        n = this.get("isWard"),
                        s = this.get("isChroma"),
                        o = this.get("isOwned"),
                        i = this.get("hasQuestSkinIndicator");
                    return this.get("isTieredSkin") ? e?.questSkinInfo?.tiers?.reduce?.(((e, t) => t.ownership.owned ? t.loadScreenPath : e), e?.questSkinInfo?.tiers?.[0]?.loadScreenPath) : i ? e.questSkinInfo.collectionCardPath : n ? e.wardImagePath : s ? e.chromaPath : t ? o && e.isVintage && e.loadScreenVintagePath ? e.loadScreenVintagePath : e.loadScreenPath : e.imagePath
                })),
                didInsertElement() {
                    this._super(...arguments);
                    const e = this.element.querySelector(".linger-video");
                    this.get("shouldShowNewItemGlow") && e && e.play()
                },
                playHoverSound() {
                    i.playSound("/fe/lol-collections/audio/sfx-uikit-grid-hover.ogg")
                },
                playClickSound() {
                    i.playSound("/fe/lol-collections/audio/sfx-uikit-grid-click.ogg")
                },
                playItemVideo() {
                    const e = this.element.querySelector(".inventory-item-image"),
                        t = this.element.querySelector(".item-video");
                    e && t && (e.style.display = "none", t.style.display = "block", t.play())
                },
                pauseItemVideo() {
                    const e = this.element.querySelector(".inventory-item-image"),
                        t = this.element.querySelector(".item-video");
                    e && t && (t.pause(), t.style.display = "none", e.style.display = "block")
                },
                actions: {
                    clickTile() {
                        const e = this.get("inventoryItem"),
                            t = this.get("isPurchasable"),
                            n = this.get("isSelectable"),
                            s = this.get("hasDetailsView");
                        this.playClickSound(), s ? this.get("openDetails")(e.id) : t ? this.get("openPAW")(e) : n && this.get("selectItemAction")(e.id)
                    },
                    clickLock() {
                        const e = this.get("inventoryItem");
                        this.get("canClickLockIcon") && this.get("openPAW")(e)
                    },
                    mouseEnter() {
                        const e = this.get("hasItemVideo");
                        this.playHoverSound(), e && this.playItemVideo()
                    },
                    mouseLeave() {
                        this.get("hasItemVideo") && this.pauseItemVideo()
                    },
                    hoverToDismissVideo() {
                        this.set("isNew", !1), this.set("isNewBorder", !1)
                    }
                }
            });
            t.default = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            var o = s.Ember.Component.extend({
                classNames: ["collections-sub-nav-component"],
                summonerService: s.Ember.inject.service("summoner"),
                clientConfig: s.Ember.inject.service("client-config"),
                platformConfig: s.Ember.inject.service("platform-config"),
                pipNotifications: s.Ember.inject.service("pip-notifications"),
                summonerLevel: s.Ember.computed.readOnly("summonerService.summoner.summonerLevel"),
                isSkinsDisabled: s.Ember.computed.not("platformConfig.isSkinsEnabled"),
                hasSkinsForReview: s.Ember.computed.alias("pipNotifications.hasSkinsForReview"),
                isEmotesDisabled: s.Ember.computed.not("platformConfig.isEmotesEnabled"),
                hasEmotesForReview: s.Ember.computed.alias("pipNotifications.hasEmotesForReview"),
                isRunesDisabled: s.Ember.computed("platformConfig.isRunesEnabled", "isUnderRunesLevelRequirement", (function() {
                    const e = this.get("platformConfig.isRunesEnabled"),
                        t = this.get("isUnderRunesLevelRequirement");
                    return !e || t
                })),
                hasRunesForReview: s.Ember.computed.alias("pipNotifications.hasRunesForReview"),
                isSpellsDisabled: s.Ember.computed.not("platformConfig.isSpellsEnabled"),
                hasSpellsForReview: !1,
                isItemsDisabled: s.Ember.computed.not("platformConfig.isItemsEnabled"),
                hasItemsForReview: !1,
                isSummonerIconsDisabled: s.Ember.computed.not("platformConfig.isSummonerIconsEnabled"),
                hasSummonerIconsForReview: s.Ember.computed.alias("pipNotifications.hasSummonerIconsForReview"),
                isChromasDisabled: s.Ember.computed.not("platformConfig.isChromasEnabled"),
                hasChromasForReview: s.Ember.computed.alias("pipNotifications.hasChromasForReview"),
                isWardsDisabled: s.Ember.computed.not("platformConfig.isWardsEnabled"),
                hasWardsForReview: s.Ember.computed.alias("pipNotifications.hasWardsForReview"),
                runesMinimumSummonerLevel: s.Ember.computed("clientConfig.unlockAllRunePageFunctionality", (function() {
                    return this.get("clientConfig.unlockAllRunePageFunctionality") ? 0 : 8
                })),
                isUnderRunesLevelRequirement: s.Ember.computed("summonerLevel", "runesMinimumSummonerLevel", (function() {
                    return this.get("summonerLevel") < this.get("runesMinimumSummonerLevel")
                })),
                init() {
                    this._super(...arguments);
                    const e = this.get("tra").formatString("collections_sub_nav_unlocks_at_level", {
                        level: this.get("runesMinimumSummonerLevel")
                    });
                    this.set("runesTooltipText", e)
                },
                didInsertElement() {
                    this._super(...arguments);
                    const e = this.element.querySelector("lol-uikit-navigation-bar");
                    e.querySelectorAll("lol-uikit-navigation-item").forEach(((t, n) => {
                        t.parentElement.classList.contains("active") && e.setAttribute("selectedindex", n)
                    }))
                }
            });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const o = s.UIKit.getTooltipManager();
            var i = s.Ember.Component.extend({
                classNames: ["rcp-fe-lol-collections-tooltip"],
                init() {
                    this._super(...arguments), this.hideTooltip = this.hideTooltip.bind(this)
                },
                didInsertElement() {
                    this._super(...arguments), this.tooltipSetup()
                },
                willDestroyElement() {
                    this._super(...arguments), this.tooltipTeardown()
                },
                toolTipAttached: !1,
                tooltipSetup() {
                    const e = this.toolTipAttached;
                    this.tooltipHoverElement = this.element.parentElement, !e && this.tooltipHoverElement && (this.tooltipElement = this.element.querySelector("lol-uikit-tooltip"), this.attachTooltip(), this.toolTipAttached = !0, this.tooltipHoverElement.addEventListener("click", this.hideTooltip))
                },
                tooltipTeardown() {
                    this.tooltipHoverElement.removeEventListener("click", this.hideTooltip), this.detachTooltip(), this.tooltipHoverElement = null, this.tooltipElement = null
                },
                attachTooltip() {
                    o.assign(this.tooltipHoverElement, this.tooltipElement, null, {
                        targetAnchor: {
                            x: "center",
                            y: "top"
                        },
                        tooltipAnchor: {
                            x: "center",
                            y: "bottom"
                        },
                        tooltipDirection: "top",
                        showDelay: 150,
                        transitionSpeed: 150
                    })
                },
                detachTooltip() {
                    o.unassign(this.tooltipHoverElement)
                },
                hideTooltip() {
                    o.hide(this.tooltipHoverElement)
                }
            });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(94),
                i = s.Ember.Component.extend({
                    numberCounter: "",
                    total: null,
                    didInsertElement() {
                        this._super(...arguments);
                        const e = this.get("total") || 0;
                        (0, o.CountingElement)(this.element, e)
                    }
                });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            e.exports = {
                CountingElement: n(95)
            }
        }, e => {
            "use strict";
            e.exports = function(e, t, n, s) {
                if (!e) return;
                n = n || 35, s = s || 20;
                let o = 0;
                const i = function() {
                    e.innerText = o
                };
                i();
                const l = Math.max(1, Math.floor(t / n)),
                    a = window.setInterval((function() {
                        o += l, o >= t && (o = t, window.clearInterval(a)), i()
                    }), s)
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = s.Ember.Component.extend({
                    classNames: ["rcp-fe-lol-collections-collection-details"],
                    disableAvailabilityFilter: null,
                    hasLegacySection: null,
                    hasChromasSection: s.Ember.computed.bool("totalOwnedChromas"),
                    hasBottomSection: s.Ember.computed.or("hasLegacySection", "hasChromasSection"),
                    headerString: s.Ember.computed("type", "tra", (function() {
                        switch (this.get("type")) {
                            case "chromas":
                                return this.get("tra.control_panel_total_chromas_owned");
                            case "wards":
                                return this.get("tra.control_panel_total_ward_skins_owned");
                            case "summoner-icons":
                                return this.get("tra.control_panel_total_summoner_icon_owned");
                            case "skins":
                                return this.get("tra.control_pane_total_skin_owned");
                            default:
                                return "TOTAL OWNED"
                        }
                    })),
                    legacyTooltipString: s.Ember.computed("type", "tra", (function() {
                        switch (this.get("type")) {
                            case "chromas":
                                return this.get("tra.control_panel_breakdown_tooltip_legacy_chroma");
                            case "wards":
                                return this.get("tra.control_panel_breakdown_tooltip_legacy_ward_skin");
                            case "summoner-icons":
                                return this.get("tra.control_panel_breakdown_tooltip_legacy_summoner_icon");
                            case "skins":
                                return this.get("tra.control_pane_breakdown_tooltip_legacy");
                            default:
                                return "LEGACY"
                        }
                    })),
                    actions: {
                        clickIcon(e) {
                            this.get("onIconClick")(e)
                        }
                    }
                });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = s.Ember.Component.extend({
                    classNames: ["rcp-fe-lol-collections-collection-controls"],
                    searchTerm: null,
                    isUnownedShown: null,
                    isUnavailableShown: null,
                    groupBy: null,
                    sortBy: null,
                    _groupBy: s.Ember.computed.readOnly("groupBy"),
                    _sortBy: s.Ember.computed.readOnly("sortBy"),
                    isGroupByMyCollection: s.Ember.computed.equal("_groupBy", "myCollection"),
                    isGroupByAll: s.Ember.computed.equal("_groupBy", "all"),
                    isGroupByChampion: s.Ember.computed.equal("_groupBy", "champion"),
                    isGroupBySet: s.Ember.computed.equal("_groupBy", "set"),
                    isGroupByEsports: s.Ember.computed.equal("_groupBy", "esports"),
                    isGroupByTier: s.Ember.computed.equal("_groupBy", "tier"),
                    isSortByAcquisitionDate: s.Ember.computed.equal("_sortBy", "acquisitionDate"),
                    isSortByReleaseDate: s.Ember.computed.equal("_sortBy", "releaseDate"),
                    isSortByMastery: s.Ember.computed.equal("_sortBy", "mastery"),
                    isSortByMostRare: s.Ember.computed.equal("_sortBy", "mostRare"),
                    isSortByMostOwned: s.Ember.computed.equal("_sortBy", "mostOwned"),
                    isSortByMostComplete: s.Ember.computed.equal("_sortBy", "mostComplete"),
                    isSortByAlphabetical: s.Ember.computed.equal("_sortBy", "alphabetical"),
                    isSortByUniverse: s.Ember.computed.equal("_sortBy", "universe"),
                    isSortByTier: s.Ember.computed.equal("_sortBy", "tier"),
                    isSortByEvent: s.Ember.computed.equal("_sortBy", "event"),
                    isSortByTeam: s.Ember.computed.equal("_sortBy", "team"),
                    canSortBy(e) {
                        const t = this.get("controlsConfiguration")[this.get("_groupBy")];
                        return t && t.includes(e)
                    },
                    canSortByAcquisitionDate: s.Ember.computed("controlsConfiguration", "_groupBy", (function() {
                        return this.canSortBy("acquisitionDate")
                    })),
                    canSortByReleaseDate: s.Ember.computed("controlsConfiguration", "_groupBy", (function() {
                        return this.canSortBy("releaseDate")
                    })),
                    canSortByMastery: s.Ember.computed("controlsConfiguration", "_groupBy", (function() {
                        return this.canSortBy("mastery")
                    })),
                    canSortByMostRare: s.Ember.computed("controlsConfiguration", "_groupBy", (function() {
                        return this.canSortBy("mostRare")
                    })),
                    canSortByMostOwned: s.Ember.computed("controlsConfiguration", "_groupBy", (function() {
                        return this.canSortBy("mostOwned")
                    })),
                    canSortByMostComplete: s.Ember.computed("controlsConfiguration", "_groupBy", (function() {
                        return this.canSortBy("mostComplete")
                    })),
                    canSortByAlphabetical: s.Ember.computed("controlsConfiguration", "_groupBy", (function() {
                        return this.canSortBy("alphabetical")
                    })),
                    canSortByUniverse: s.Ember.computed("controlsConfiguration", "_groupBy", (function() {
                        return this.canSortBy("universe")
                    })),
                    canSortByTier: s.Ember.computed("controlsConfiguration", "_groupBy", (function() {
                        return this.canSortBy("tier")
                    })),
                    canSortByEvent: s.Ember.computed("controlsConfiguration", "_groupBy", (function() {
                        return this.canSortBy("event")
                    })),
                    canSortByTeam: s.Ember.computed("controlsConfiguration", "_groupBy", (function() {
                        return this.canSortBy("team")
                    })),
                    init() {
                        this._super(...arguments);
                        const e = this.get("controlsConfiguration");
                        e && this.setInitialGroupingOptions(e)
                    },
                    setInitialGroupingOptions(e) {
                        Object.keys(e).forEach((e => {
                            switch (e) {
                                case "myCollection":
                                    this.set("canGroupByMyCollection", !0);
                                    break;
                                case "all":
                                    this.set("canGroupByAll", !0);
                                    break;
                                case "champion":
                                    this.set("canGroupByChampion", !0);
                                    break;
                                case "set":
                                    this.set("canGroupBySet", !0);
                                    break;
                                case "esports":
                                    this.set("canGroupByEsports", !0);
                                    break;
                                case "tier":
                                    this.set("canGroupByTier", !0)
                            }
                        }))
                    },
                    actions: {
                        select(e, t) {
                            "grouping" === e ? this.get("onSelectGroup")(t) : "sorting" === e && this.get("onSelectSort")(t)
                        }
                    }
                });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = s.Ember.Component.extend({
                    classNames: ["rcp-fe-lol-collections-collection-group-header"],
                    title: "",
                    description: "",
                    index: 0,
                    isMajor: !0,
                    groupBy: "",
                    sortBy: "",
                    shouldShowOwnershipCount: !1,
                    numItemsOwned: 0,
                    availableItems: 0,
                    shouldShowTotalCount: !1,
                    totalItems: 0,
                    customizerComponent: null,
                    hasCustomHeader: s.Ember.computed.bool("customizerComponent")
                });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(82),
                i = s.Ember.Component.extend({
                    classNames: ["replay-button"],
                    canReplay: !1,
                    actions: {
                        hoverButton: function() {
                            this.get("canReplay") && o.SPELL_SFX.hoverReplay.play()
                        },
                        replay: function() {
                            this.get("canReplay") && (this.set("canReplay", !1), this.sendAction("replay"), o.SPELL_SFX.clickReplay.play())
                        }
                    }
                });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const o = {
                    masterSoundEnabled: !0,
                    sfxEnabled: !0,
                    masterVolume: 100,
                    sfxVolume: 100
                },
                i = {
                    muted: "muted",
                    spellVolume: "volume"
                };
            var l = s.Ember.Component.extend({
                classNames: ["video-wrapper"],
                muted: !1,
                spellVolume: 1,
                src: s.Ember.computed.alias("spell.videoSrc"),
                spellId: s.Ember.computed.alias("spell.id"),
                selected: s.Ember.computed.alias("spell.selected"),
                init() {
                    this._super(...arguments), this.videoStartHandler = this.videoStartHandler.bind(this), this.videoFinishHandler = this.videoFinishHandler.bind(this), this.videoFadedOutHandler = this.videoFadedOutHandler.bind(this), this.handleSettings = this.handleSettings.bind(this), this.set("muted", !0), this.set("spellVolume", 0), (0, s.dataBinding)("/lol-settings", s.socket).addObserver("/v1/local/lol-audio", this, this.handleSettings)
                },
                didInsertElement() {
                    this._super(...arguments);
                    const e = this.element.querySelector(".collection-spell-video");
                    this.processAttributes(e), this.initializeVideoForAudio(), e.addEventListener("playing", this.videoStartHandler), e.addEventListener("ended", this.videoFinishHandler), e.addEventListener("animationend", this.videoFadedOutHandler)
                },
                willDestroyElement() {
                    const e = this.element.querySelector(".collection-spell-video");
                    e.pause(), e.src = "", e.load(), e.removeEventListener("playing", this.videoStartHandler), e.removeEventListener("ended", this.videoFinishHandler), e.removeEventListener("animationend", this.videoFadedOutHandler), (0, s.dataBinding)("/lol-settings", s.socket).removeObserver(this), this._super(...arguments)
                },
                processAttributes(e) {
                    for (const t in i) void 0 !== this.get(t) && e.setAttribute(i[t], this.get(t))
                },
                handleSettings(e) {
                    this.isDestroyed || this.isDestroying || (this.initializeAudio(e), this.initializeVideoForAudio())
                },
                initializeAudio(e) {
                    if (e && e.data) {
                        const {
                            masterSoundEnabled: t,
                            masterVolume: n,
                            sfxEnabled: s,
                            sfxVolume: i
                        } = e.data, l = {
                            masterSoundEnabled: t,
                            masterVolume: n,
                            sfxEnabled: s,
                            sfxVolume: i
                        };
                        Object.entries(l).forEach((([e, t]) => {
                            t || (t = o[e])
                        })), this.set("muted", !l.masterSoundEnabled || !l.sfxEnabled), this.set("spellVolume", l.masterVolume * l.sfxVolume / 1e4)
                    }
                },
                initializeVideoForAudio() {
                    if (!this.element) return;
                    const e = this.element.querySelector(".collection-spell-video");
                    if (e) {
                        this.get("muted") ? (e.setAttribute("muted", this.get("muted")), e.muted = this.get("muted")) : (e.removeAttribute("muted"), e.muted = !1);
                        const t = this.get("spellVolume");
                        isNaN(t) || (e.volume = t)
                    }
                },
                videoStartHandler() {
                    this.isDestroyed || this.isDestroying || this.get("onIsPlayingChanged")(!0)
                },
                videoFinishHandler(e) {
                    this.isDestroyed || this.isDestroying || (this.get("onIsPlayingChanged")(!1), this.get("onLastPlayedChanged")(e.target))
                },
                videoFadedOutHandler() {
                    if (this.isDestroyed || this.isDestroying) return;
                    this.element.querySelector(".collection-spell-video").classList.remove("video-fade")
                }
            });
            t.default = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const o = [{
                name: "unlockAllRunePageFunctionality",
                path: "lol.client_settings.perks.unlockAllRunePageFunctionality",
                default: !1
            }, {
                name: "useDefaultPerksPages",
                path: "lol.client_settings.perks.useDefaultPerksPages",
                default: !0
            }, {
                name: "tieredSkins",
                path: "lol.client_settings.tieredSkins",
                default: {}
            }];
            var i = s.Ember.Service.extend({
                init: function() {
                    this._super(...arguments), this.clientConfigDataBinding = (0, s.dataBinding)("/lol-client-config", s.socket), o.forEach((e => {
                        const t = `v3/client-config/${e.path}`;
                        this.clientConfigDataBinding.observe(t, this, (t => this.setProperty(e, t)))
                    }))
                },
                setProperty(e, t) {
                    let n = e.default;
                    "" !== t && (n = t), this.set(e.name, n)
                },
                willDestroy() {
                    this._super(...arguments), o.forEach((e => {
                        const t = `v3/client-config/${e.path}`;
                        this.clientConfigDataBinding.unobserve(t, this)
                    }))
                }
            });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(49),
                i = s.Ember.Service.extend({
                    settingsPreferences: s.Ember.inject.service("settings-preferences"),
                    hasSkinsForReview: !1,
                    hasEmotesForReview: !1,
                    hasRunesForReview: !1,
                    hasSummonerIconsForReview: !1,
                    hasWardsForReview: !1,
                    hasChromasForReview: !1,
                    init() {
                        this._super(...arguments), this.championsBinding = (0, s.dataBinding)("/lol-champions", s.socket), this.inventoryBinding = (0, s.dataBinding)("/lol-inventory", s.socket), this.perksBinding = (0, s.dataBinding)("/lol-perks", s.socket), this.settingsBinding = (0, s.dataBinding)("/lol-settings", s.socket), this.summonerBinding = (0, s.dataBinding)("/lol-summoner", s.socket), this.handleInventoryOwnershipChange = this.handleInventoryOwnershipChange.bind(this), this.handleWardsOwnershipChange = this.handleWardsOwnershipChange.bind(this), this.handleChampionInventoryChange = this.handleChampionInventoryChange.bind(this), this.handleRunesChanges = this.handleRunesChanges.bind(this), this.autoModifiedPagesChange = this.autoModifiedPagesChange.bind(this), this.settingsBinding.addObserver("/v2/account/LCUPreferences/lol-notifications", this, (e => {
                            e && e.data && e.data.disableCollectionsNotifications ? this.tearDownDataBindingObservers() : this.initDataBindingObservers()
                        }))
                    },
                    willDestroy() {
                        this._super(...arguments), this.tearDownDataBindingObservers(), this.settingsBinding.removeObserver(this), this.championsBinding = null, this.inventoryBinding = null, this.perksBinding = null, this.summonerBinding = null, this.settingsBinding = null
                    },
                    initDataBindingObservers() {
                        this.inventoryBinding.addObserver("/v1/notifications/SUMMONER_ICON", this, this.handleInventoryOwnershipChange), this.inventoryBinding.addObserver("/v1/notifications/SKIN_BORDER", this, this.handleInventoryOwnershipChange), this.summonerBinding.get("/v1/current-summoner").then((e => {
                            this.championsBinding.addObserver(`/v1/inventories/${e.summonerId}/champions`, this, this.handleChampionInventoryChange)
                        })), this.inventoryBinding.addObserver("/v2/inventory/WARD_SKIN", this, this.handleWardsOwnershipChange), this.inventoryBinding.addObserver("/v1/notifications/EMOTE", this, this.handleInventoryOwnershipChange), this.perksBinding.addObserver("/v1/pages", this, this.handleRunesChanges), this.perksBinding.addObserver("/v1/show-auto-modified-pages-notification", this, this.autoModifiedPagesChange)
                    },
                    tearDownDataBindingObservers() {
                        this.championsBinding.removeObserver(this), this.inventoryBinding.removeObserver(this), this.perksBinding.removeObserver(this)
                    },
                    autoModifiedPagesChange(e) {
                        !e || this.isDestroyed || this.isDestroying || this.set("hasRunesForReview", !0)
                    },
                    handleInventoryOwnershipChange(e) {
                        if (!e || !e.length || this.isDestroyed || this.isDestroying) return;
                        let t = !1;
                        const n = e[0].inventoryType;
                        for (let n = 0; n < e.length; n++)
                            if ("CREATE" === e[n].type && !e[n].acknowledged) {
                                t = !0;
                                break
                            } switch (n) {
                            case "EMOTE":
                                this.set("hasEmotesForReview", t);
                                break;
                            case "SUMMONER_ICON":
                                this.set("hasSummonerIconsForReview", t);
                                break;
                            case "SKIN_BORDER":
                                this.set("hasSkinsForReview", t)
                        }
                    },
                    handleWardsOwnershipChange(e) {
                        !e || 0 === e.length || this.isDestroying || this.isDestroyed || this.get("settingsPreferences").getWardsAccountSettings().then((t => {
                            const n = t && t.data;
                            if (this.isDestroying || this.isDestroyed || !n) return;
                            const s = t.data.lastVisitTime;
                            for (let t = 0; t < e.length; t++) {
                                const n = this.get("tra.moment")(e[t].purchaseDate).valueOf(),
                                    o = "F2P" === e[t].ownershipType;
                                if (n >= s && !o) {
                                    this.set("hasWardsForReview", !0);
                                    break
                                }
                            }
                        }))
                    },
                    handleChampionInventoryChange(e) {
                        if (!e || 0 === e.length || this.isDestroying || this.isDestroyed) return;
                        const t = this.get("settingsPreferences").getSkinsAccountSettings(),
                            n = this.get("settingsPreferences").getChromasAccountSettings();
                        Promise.all([t, n]).then((t => {
                            if (this.isDestroying || this.isDestroyed) return;
                            const [n, s] = t, i = n && n.data, l = s && s.data, {
                                skinPurchaseDates: a,
                                chromaPurchaseDates: r
                            } = (0, o.getSkinAndChromaPurchaseDates)(e), c = (0, o.getLastPurchaseDate)(a), d = (0, o.getLastPurchaseDate)(r);
                            0 === c && 0 === d || (i && c >= n.data.lastVisitTime && this.set("hasSkinsForReview", !0), l && d > s.data.lastVisitTime && this.set("hasChromasForReview", !0))
                        }))
                    },
                    handleRunesChanges(e) {
                        if (this.isDestroyed || this.isDestroying) return;
                        e.some((e => e.autoModifiedSelections.length > 0)) && this.set("hasRunesForReview", !0)
                    },
                    acknowledgeInventoryNotifications(e) {
                        return this.inventoryBinding.get(`/v1/notifications/${e}`).then((e => {
                            const t = e.map((e => {
                                if (!e.acknowledged) return this.inventoryBinding.post("v1/notification/acknowledge", e.id)
                            }));
                            return Promise.all(t)
                        }))
                    },
                    dismissNotification(e) {
                        switch (e) {
                            case "skins":
                                this.set("hasSkinsForReview", !1);
                                break;
                            case "emotes":
                                this.set("hasEmotesForReview", !1);
                                break;
                            case "runes":
                                this.set("hasRunesForReview", !1);
                                break;
                            case "summoner-icons":
                                this.set("hasSummonerIconsForReview", !1);
                                break;
                            case "wards":
                                this.set("hasWardsForReview", !1);
                                break;
                            case "chromas":
                                this.set("hasChromasForReview", !1)
                        }
                    }
                });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const o = "/lol-platform-config",
                i = "/v1/namespaces/Eternals/Enabled";
            var l = s.SharedComponents.getDataBoundEmberService({
                dataBindingInstance: (0, s.dataBinding)(o, s.socket),
                propertiesToBind: [{
                    propertyName: "isSkinsEnabled",
                    defaultValue: !0,
                    observedPath: "/v1/namespaces/LCUCollections/LCUSkinsViewerEnabled"
                }, {
                    propertyName: "isEmotesEnabled",
                    defaultValue: !0,
                    observedPath: "/v1/namespaces/LCUCollections/LCUEmotesEnabled"
                }, {
                    propertyName: "isRunesEnabled",
                    defaultValue: !0,
                    observedPath: "/v1/namespaces/LCUCollections/LCUPerksEnabled"
                }, {
                    propertyName: "isSpellsEnabled",
                    defaultValue: !0,
                    observedPath: "/v1/namespaces/LCUCollections/LCUSpellsEnabled"
                }, {
                    propertyName: "isItemsEnabled",
                    defaultValue: !0,
                    observedPath: "/v1/namespaces/LCUCollections/LCUItemSetsEnabled"
                }, {
                    propertyName: "isSummonerIconsEnabled",
                    defaultValue: !0,
                    observedPath: "/v1/namespaces/LCUCollections/LCUCollectiblesIconsEnabled"
                }, {
                    propertyName: "isWardsEnabled",
                    defaultValue: !0,
                    observedPath: "/v1/namespaces/LCUCollections/LCUCollectiblesWardSkinsEnabled"
                }, {
                    propertyName: "isChromasEnabled",
                    defaultValue: !0,
                    observedPath: "/v1/namespaces/LCUCollections/LCUCollectiblesChromasEnabled"
                }, {
                    propertyName: "isEternalsEnabled",
                    defaultValue: !1,
                    observedPath: i
                }],
                serviceMethods: {
                    getEternalsConfig: () => (0, s.dataBinding)(o, s.socket).get(i),
                    getDisabledChromasConfig: () => (0, s.dataBinding)(o, s.socket).get("/v1/namespaces/DisabledChampionSkins/DisabledChromas")
                }
            });
            t.default = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const o = "/riotclient",
                i = "/region-locale";
            var l = s.Ember.Service.extend({
                getFullRegionLocaleData: () => (0, s.dataBinding)(o, s.socket).get(i),
                getRegion: () => (0, s.dataBinding)(o, s.socket).get(i).then((e => e.region)),
                getLocale: () => (0, s.dataBinding)(o, s.socket).get(i).then((e => e.locale))
            });
            t.default = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(61),
                i = n(46),
                l = n(53),
                a = n(55),
                r = n(57);
            const c = "/lol-settings/v2/account/LCUPreferences",
                d = "/lol-settings/v2/local",
                m = "/lol-collection-champions",
                p = "/lol-skins-viewer",
                u = "/lol-collection-summoner-icons",
                h = "/lol-collection-wards",
                g = "/lol-collection-chromas";
            var f = s.Ember.Service.extend({
                getChampionsAccountSettings: () => (0, s.dataBinding)(c, s.socket).get(m),
                getSkinsAccountSettings: () => (0, s.dataBinding)(c, s.socket).get(p),
                getSummonerIconsAccountSettings: () => (0, s.dataBinding)(c, s.socket).get(u),
                getWardsAccountSettings: () => (0, s.dataBinding)(c, s.socket).get(h),
                getChromasAccountSettings: () => (0, s.dataBinding)(c, s.socket).get(g),
                getChampionsLocalSettings: () => (0, s.dataBinding)(d, s.socket).get(m),
                getChromasLocalSettings: () => (0, s.dataBinding)(d, s.socket).get(g),
                setChampionsAccountSettings(e) {
                    const {
                        groupBy: t,
                        sortBy: n,
                        isUnownedShown: i
                    } = e;
                    return (0, s.dataBinding)(c, s.socket).put(m, {
                        schemaVersion: o.CHAMPIONS_ACCOUNT_SETTINGS_VERSION,
                        data: {
                            groupingDropdownKey: t,
                            lastVisitTime: Date.now(),
                            sortingDropdownKey: n,
                            unownedFilter: i ? "owned" : "none"
                        }
                    })
                },
                setSkinsAccountSettings(e) {
                    const {
                        groupBy: t,
                        sortBy: n,
                        isUnownedShown: o
                    } = e;
                    return (0, s.dataBinding)(c, s.socket).put(p, {
                        schemaVersion: i.SKINS_ACCOUNT_SETTINGS_VERSION,
                        data: {
                            groupingDropdownKey: t,
                            lastVisitTime: Date.now(),
                            sortingDropdownKey: n,
                            unownedFilter: o
                        }
                    })
                },
                setSummonerIconsAccountSettings(e) {
                    const {
                        groupBy: t,
                        sortBy: n,
                        isUnownedShown: o,
                        isUnavailableShown: i
                    } = e;
                    return (0, s.dataBinding)(c, s.socket).put(u, {
                        schemaVersion: l.SUMMONER_ICONS_ACCOUNT_SETTINGS_VERSION,
                        data: {
                            groupingDropdownKey: t,
                            lastVisitTime: Date.now(),
                            sortingDropdownKey: n,
                            unownedFilter: o,
                            unavailableFilter: i
                        }
                    })
                },
                setWardsAccountSettings(e) {
                    const {
                        groupBy: t,
                        sortBy: n,
                        isUnownedShown: o,
                        isUnavailableShown: i
                    } = e;
                    return (0, s.dataBinding)(c, s.socket).put(h, {
                        schemaVersion: a.WARDS_ACCOUNT_SETTINGS_VERSION,
                        data: {
                            groupingDropdownKey: t,
                            lastVisitTime: Date.now(),
                            sortingDropdownKey: n,
                            unownedFilter: o,
                            unavailableFilter: i
                        }
                    })
                },
                setChromaAccountSettings(e) {
                    const {
                        groupBy: t,
                        sortBy: n,
                        isUnownedShown: o,
                        isUnavailableShown: i
                    } = e;
                    return (0, s.dataBinding)(c, s.socket).put(g, {
                        schemaVersion: r.CHROMAS_ACCOUNT_SETTINGS_VERSION,
                        data: {
                            groupingDropdownKey: t,
                            lastVisitTime: Date.now(),
                            sortingDropdownKey: n,
                            unownedFilter: o,
                            unavailableFilter: i
                        }
                    })
                }
            });
            t.default = f
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const o = "/lol-summoner";
            var i = s.Ember.Service.extend({
                summoner: null,
                init() {
                    this._super(...arguments), this.initDataBindingObservers()
                },
                willDestroy() {
                    this._super(...arguments), this.tearDownDataBindingObservers()
                },
                initDataBindingObservers() {
                    (0, s.dataBinding)(o, s.socket).observe("/v1/current-summoner", this, (e => {
                        !e || this.isDestroying || this.isDestroyed || this.set("summoner", e)
                    }))
                },
                tearDownDataBindingObservers() {
                    (0, s.dataBinding)(o, s.socket).unobserve(this)
                }
            });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(108)) && s.__esModule ? s : {
                    default: s
                };
            n(109);
            var l = n(110),
                a = n(111);
            const r = n(112);
            var c = o.Ember.Component.extend({
                classNames: ["item-set-champion-selector"],
                classNameBindings: ["isSingleSelect"],
                layout: i.default,
                itemSetsService: o.Ember.inject.service("itemSets"),
                isFilteringOwnedChamps: !0,
                isSingleSelect: !1,
                selectedChamps: [],
                maxSelectedChampToDisplay: a.MAX_CHAMPION_SELECTOR_DISPLAY,
                init: function() {
                    this._super.apply(this, arguments), this.set("roleFilters", o.Ember.A(a.CHAMPION_ROLES.map((e => o.Ember.Object.create({
                        name: e,
                        selected: !1,
                        displayName: this.get("tra").get(`collections_champion_grid_role_dropdown_${e}`)
                    })))))
                },
                recentlyPlayedChamps: o.Ember.computed("itemSetsService.championMasteries", "selectedChamps.[]", (function() {
                    const e = this.get("itemSetsService.championMasteries"),
                        t = this.get("selectedChamps"),
                        n = (0, o.Lodash)(e).orderBy(["lastPlayTime"], ["desc"]).take(a.RECENT_CHAMPION_NUM).value();
                    return o.Lodash.each(n, (e => {
                        o.Ember.set(e, "selected", o.Lodash.includes(t, e.championId))
                    })), n
                })),
                allChampions: o.Ember.computed("itemSetsService.sortedChampions", (function() {
                    const e = this.get("itemSetsService.sortedChampions");
                    return o.Ember.A(e.map((e => o.Ember.Object.create(e))))
                })),
                championFilterChanged: o.Ember.on("init", o.Ember.observer("allChampions", "isFilteringOwnedChamps", "currentRoleFilter", "nameFilter", "selectedChamps.[]", (function() {
                    const e = this.get("allChampions"),
                        t = this.get("isFilteringOwnedChamps"),
                        n = this.get("currentRoleFilter"),
                        s = this.get("nameFilter"),
                        i = this.get("selectedChamps");
                    e.forEach((e => {
                        e.set("visible", this._shouldShowChampion(e, s, t, n)), e.set("selected", o.Lodash.includes(i, e.id))
                    }))
                }))),
                selectedChampsDisplay: o.Ember.computed("selectedChamps.[]", "maxSelectedChampToDisplay", (function() {
                    return o.Lodash.take(this.get("selectedChamps"), this.get("maxSelectedChampToDisplay"))
                })),
                moreSelectedChampInfo: o.Ember.computed("selectedChamps.length", "maxSelectedChampToDisplay", (function() {
                    const e = this.get("selectedChamps.length"),
                        t = this.get("maxSelectedChampToDisplay");
                    return o.Ember.Object.create({
                        hasMore: e > this.get("maxSelectedChampToDisplay"),
                        hasMoreText: this.get("tra.formatString")("item_sets_champ_association_has_more", {
                            number: e - t
                        })
                    })
                })),
                _shouldShowChampion: function(e, t, n, s) {
                    return !(r.filter(t, [e.name]).length <= 0) && (!(n && !o.Lodash.get(e, "ownership.owned")) && (!s || o.Lodash.get(e, "roles.0") === s.name))
                },
                nameSearchBlurListener: function(e) {
                    e.relatedTarget || this.sendAction("onNameSearchBlur", e)
                },
                didInsertElement: function() {
                    this._super(...arguments), this.element.querySelector(".champ-selector-name-search").addEventListener("blur", this.nameSearchBlurListener.bind(this))
                },
                willDestroyElement: function() {
                    this._super(...arguments), this.element.querySelector(".champ-selector-name-search").removeEventListener("blur", this.nameSearchBlurListener)
                },
                actions: {
                    toggleRoleFilter: function(e) {
                        l.sfx.genericClickSm.play();
                        const t = o.Ember.get(e, "selected"),
                            n = this.get("currentRoleFilter");
                        t ? this.set("currentRoleFilter", null) : (n && o.Ember.set(n, "selected", !1), this.set("currentRoleFilter", e)), o.Ember.set(e, "selected", !o.Ember.get(e, "selected"))
                    },
                    toggleChampSelection: function(e) {
                        this.sendAction("toggleChampAssociation", e)
                    },
                    clearAllSelected: function() {
                        l.sfx.genericClickSm.play(), this.sendAction("clearAllSelected")
                    },
                    hoverSFX: function() {
                        l.sfx.gridHover.play()
                    }
                }
            });
            t.default = c
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "+NfQvxGp",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\champion-selector-component\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\champion-selector-component\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\champion-selector-component\\\\index.js\\" "],["text","\\n\\n"],["block",["unless"],[["get",["isSingleSelect"]]],null,10],["text","\\n"],["open-element","div",[]],["static-attr","class","champ-selector-filters"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","champ-role-filters"],["flush-element"],["text","\\n"],["block",["each"],[["get",["roleFilters"]]],null,3],["text","  "],["close-element"],["text","\\n  "],["open-element","lol-uikit-flat-checkbox",[]],["static-attr","class","owned-filter"],["flush-element"],["text","\\n    "],["append",["helper",["input"],null,[["slot","type","checked"],["input","checkbox",["get",["isFilteringOwnedChamps"]]]]],false],["text","\\n    "],["open-element","label",[]],["static-attr","slot","label"],["flush-element"],["append",["unknown",["tra","item_sets_champ_selector_owned_only_checkbox"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","lol-uikit-flat-input",[]],["static-attr","class","champ-name-filter"],["flush-element"],["text","\\n      "],["append",["helper",["input"],null,[["type","class","value","placeholder","maxlength"],["search","champ-selector-name-search",["get",["nameFilter"]],["get",["tra","item_sets_champ_selector_name_filter_placeholder"]],20]]],false],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","lol-uikit-scrollable",[]],["static-attr","class","champion-selector-all-champs"],["static-attr","overflow-masks","enabled"],["flush-element"],["text","\\n"],["block",["each"],[["get",["allChampions"]]],null,1],["close-element"],["text","\\n\\n"],["open-element","hr",[]],["static-attr","class","separator separator-bottom"],["flush-element"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","recently-played-champions"],["flush-element"],["text","\\n  "],["open-element","span",[]],["static-attr","class","recently-played-label"],["flush-element"],["append",["unknown",["tra","item_sets_champ_selector_recently_played_label"]],false],["close-element"],["text","\\n"],["block",["each"],[["get",["recentlyPlayedChamps"]]],null,0],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","recently-played-champ"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggleChampSelection",["get",["recentlyPlayedChamp","championId"]]],null],null],["modifier",["action"],[["get",[null]],"hoverSFX"],[["on"],["mouseEnter"]]],["flush-element"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["champ-icon-container ",["helper",["if"],[["get",["recentlyPlayedChamp","selected"]],"selected"],null]]]],["flush-element"],["text","\\n        "],["open-element","img",[]],["static-attr","class","champ-icon"],["dynamic-attr","src",["concat",["/lol-game-data/assets/v1/champion-icons/",["unknown",["recentlyPlayedChamp","championId"]],".png"]]],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":["recentlyPlayedChamp"]},{"statements":[["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["champ-display champ-",["unknown",["champ","id"]]," ",["helper",["unless"],[["get",["champ","visible"]],"hidden"],null]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggleChampSelection",["get",["champ","id"]]],null],null],["modifier",["action"],[["get",[null]],"hoverSFX"],[["on"],["mouseEnter"]]],["flush-element"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["champ-icon-container ",["helper",["if"],[["get",["champ","selected"]],"selected"],null]]]],["flush-element"],["text","\\n        "],["open-element","img",[]],["static-attr","class","champ-icon"],["dynamic-attr","src",["concat",["/lol-game-data/assets/v1/champion-icons/",["unknown",["champ","id"]],".png"]]],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","champ-name"],["flush-element"],["append",["unknown",["champ","name"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":["champ"]},{"statements":[["text","            "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n              "],["open-element","p",[]],["flush-element"],["append",["unknown",["roleFilter","displayName"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",["champ-role-filter ",["unknown",["roleFilter","name"]]," ",["helper",["if"],[["get",["roleFilter","selected"]],"selected"],null]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggleRoleFilter",["get",["roleFilter"]]],null],null],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],2],["text","      "],["close-element"],["text","\\n"]],"locals":["roleFilter"]},{"statements":[["text","        "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n          "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","item_sets_button_tooltip_clear_selected_champ"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","clear-selected-btn"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"clearAllSelected"],null],null],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],4],["text","    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","has-more"],["flush-element"],["append",["unknown",["moreSelectedChampInfo","hasMoreText"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","selected-champ"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggleChampSelection",["get",["selectedChampId"]]],null],null],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","champ-icon-container selected"],["flush-element"],["text","\\n          "],["open-element","img",[]],["static-attr","class","champ-icon"],["dynamic-attr","src",["concat",["/lol-game-data/assets/v1/champion-icons/",["get",["selectedChampId"]],".png"]]],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":["selectedChampId"]},{"statements":[["text","        "],["append",["unknown",["tra","item_sets_champ_selector_no_champ_selected_label"]],false],["text","\\n      "]],"locals":[]},{"statements":[["text","        "],["append",["unknown",["tra","item_sets_champ_selector_currently_selected_label"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","selected-champions"],["flush-element"],["text","\\n    "],["open-element","span",[]],["static-attr","class","selected-label"],["flush-element"],["text","\\n"],["block",["if"],[["get",["selectedChampsDisplay","length"]]],null,9,8],["close-element"],["text","\\n"],["block",["each"],[["get",["selectedChampsDisplay"]]],null,7],["block",["if"],[["get",["moreSelectedChampInfo","hasMore"]]],null,6],["block",["if"],[["get",["selectedChampsDisplay","length"]]],null,5],["text","  "],["close-element"],["text","\\n  "],["open-element","hr",[]],["static-attr","class","separator separator-top"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sfx = void 0;
            const s = n(1).AudioPlugin.getChannel("sfx-ui");

            function o(e) {
                return s.createSound(e, {
                    allowConcurrency: !1
                })
            }
            const i = {
                drag: o("/fe/lol-collections/audio/sfx-uikit-drag.ogg"),
                drop: o("/fe/lol-collections/audio/sfx-uikit-drop.ogg"),
                genericClick: o("/fe/lol-collections/audio/sfx-uikit-click-generic.ogg"),
                genericClickSm: o("/fe/lol-collections/audio/sfx-uikit-generic-click-small.ogg"),
                gridClick: o("/fe/lol-collections/audio/sfx-uikit-grid-click.ogg"),
                gridHover: o("/fe/lol-collections/audio/sfx-uikit-grid-hover.ogg")
            };
            t.sfx = i
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.TITLE_LENGTH_LIMIT = t.TELEMETRY_EVENT_SOURCE_ROOT = t.TELEMETRY_EVENT_SOURCE_PREFERRED_SLOT = t.TELEMETRY_EVENT_SOURCE_EDITOR_MATCH_HISTORY = t.TELEMETRY_EVENT_SOURCE_EDITOR_EOG = t.TELEMETRY_EVENT_SOURCE_EDITOR = t.TELEMETRY_EVENT_SOURCE_DATA_SERVICE = t.TELEMETRY_EVENT_SOURCE_BROWSER = t.TELEMETRY_EVENT_NAME = t.TELEMETRY_EVENT_ID_SAVE_PREFERRED_SLOTS = t.TELEMETRY_EVENT_ID_SAVE_FAILURE = t.TELEMETRY_EVENT_ID_SAVE = t.TELEMETRY_EVENT_ID_MAP_IMPORT = t.TELEMETRY_EVENT_ID_MAP_EXPORT = t.TELEMETRY_EVENT_ID_IMPORT = t.TELEMETRY_EVENT_ID_DUPLICATE_RECOMMENDED = t.TELEMETRY_EVENT_ID_DUPLICATE = t.TELEMETRY_EVENT_ID_DELETE = t.TELEMETRY_EVENT_ID_CREATE_NEW = t.TELEMETRY_EVENT_ID_CLOSE = t.SPECIAL_CHAMP_ALIAS_KEY_MAP = t.SORT_OPTIONS = t.SLOT_TO_DISPLAY_MAP = t.SCROLLABLE_ITEM_BLOCKS_RECT = t.SCROLLABLE_AUTO_SCROLL_STEP = t.SCROLLABLE_AUTO_SCROLL_SENSITIVITY = t.RESTRICTED_PAGE_NAMES_ENABLED = t.RECENT_CHAMPION_NUM = t.PREFERRED_SLOT_ID_MEDIA_TYPE = t.PREFERRED_SLOTS_SORTABLE_GROUP_NAME = t.MAX_ITEM_SETS_PER_PLAYER = t.MAX_ITEM_PER_PREFERRED_SLOT = t.MAX_ITEM_PER_BLOCK = t.MAX_CHAMPION_SELECTOR_DISPLAY = t.MAX_CHAMPION_ASSOCIATION_DISPLAY = t.MAX_BLOCKS_PER_ITEM_SET = t.MAP_ID_TO_RECOMMENDED_KEY_MAPPING = t.ITEM_SET_RENAMING_DISABLED = t.ITEM_SET_JSON_SCHEMA = t.ITEM_MEDIA_TYPE = t.ITEM_GRID_SORTABLE_GROUP_NAME = t.ITEM_EDITOR_BLOCKS_SORTABLE_GROUP_NAME = t.ITEM_CATEGORY_FILTER_GROUPS = t.ITEM_BUILD_PATH_SORTABLE_GROUP_NAME = t.IMPORT_FILE_SIZE_LIMIT = t.EMPTY_AREA_SORTABLE_GROUP_NAME = t.DEFAULT_ITEM_SLOTS = t.CHAMPION_ROLES = t.ASSOCIABLE_MAPS = void 0;
            t.ITEM_MEDIA_TYPE = "application/riot.item+json";
            t.PREFERRED_SLOT_ID_MEDIA_TYPE = "application/riot.preferred.slot.Id";
            t.ITEM_CATEGORY_FILTER_GROUPS = [{
                name: "Damage",
                filters: ["Damage"]
            }, {
                name: "CriticalStrike",
                filters: ["CriticalStrike"]
            }, {
                name: "AttackSpeed",
                filters: ["AttackSpeed"]
            }, {
                name: "OnHit",
                filters: ["OnHit"]
            }, {
                name: "ArmorPenetration",
                filters: ["ArmorPenetration"]
            }, {
                name: "SpellDamage",
                filters: ["SpellDamage"]
            }, {
                name: "Mana",
                filters: ["Mana", "ManaRegen"]
            }, {
                name: "MagicPenetration",
                filters: ["MagicPenetration"]
            }, {
                name: "Health",
                filters: ["Health", "HealthRegen"]
            }, {
                name: "Armor",
                filters: ["Armor"]
            }, {
                name: "SpellBlock",
                filters: ["SpellBlock"]
            }, {
                name: "AbilityHaste",
                filters: ["CooldownReduction", "AbilityHaste"]
            }, {
                name: "Movement",
                filters: ["Boots", "NonbootsMovement"]
            }, {
                name: "LifeSteal",
                filters: ["LifeSteal", "SpellVamp"]
            }];
            t.SORT_OPTIONS = [{
                traKey: "gold_asc",
                fields: ["priceTotal", "id"],
                order: ["asc", "asc"]
            }, {
                traKey: "gold_desc",
                fields: ["priceTotal", "id"],
                order: ["desc", "asc"]
            }, {
                traKey: "name_asc",
                fields: ["name", "id"],
                order: ["asc", "asc"]
            }, {
                traKey: "name_desc",
                fields: ["name", "id"],
                order: ["desc", "asc"]
            }];
            t.ASSOCIABLE_MAPS = [{
                id: 11,
                mapStringId: "SR"
            }, {
                id: 12,
                mapStringId: "HA"
            }];
            t.CHAMPION_ROLES = ["fighter", "tank", "mage", "assassin", "support", "marksman"];
            t.RECENT_CHAMPION_NUM = 7;
            t.MAX_CHAMPION_ASSOCIATION_DISPLAY = 1;
            t.MAX_CHAMPION_SELECTOR_DISPLAY = 8;
            t.MAP_ID_TO_RECOMMENDED_KEY_MAPPING = {
                11: "SR",
                12: "ARAM",
                10: "TT"
            };
            t.MAX_ITEM_SETS_PER_PLAYER = 20;
            t.MAX_BLOCKS_PER_ITEM_SET = 20;
            t.MAX_ITEM_PER_BLOCK = 300;
            t.SPECIAL_CHAMP_ALIAS_KEY_MAP = {
                FiddleSticks: "Fiddle",
                MonkeyKing: "Wukong"
            };
            t.TELEMETRY_EVENT_NAME = "item_sets__item_sets_event";
            t.TELEMETRY_EVENT_ID_CREATE_NEW = "create";
            t.TELEMETRY_EVENT_ID_IMPORT = "import";
            t.TELEMETRY_EVENT_ID_DUPLICATE = "duplicate";
            t.TELEMETRY_EVENT_ID_DUPLICATE_RECOMMENDED = "duplicate_recommended";
            t.TELEMETRY_EVENT_ID_DELETE = "delete";
            t.TELEMETRY_EVENT_ID_SAVE = "save";
            t.TELEMETRY_EVENT_ID_SAVE_FAILURE = "save_failure";
            t.TELEMETRY_EVENT_ID_CLOSE = "close";
            t.TELEMETRY_EVENT_ID_SAVE_PREFERRED_SLOTS = "preferred_slot";
            t.TELEMETRY_EVENT_ID_MAP_IMPORT = {
                clipboard: "import_clipboard",
                file: "import_file"
            };
            t.TELEMETRY_EVENT_ID_MAP_EXPORT = {
                clipboard: "export_clipboard",
                file: "export_file"
            };
            t.TELEMETRY_EVENT_SOURCE_ROOT = "root";
            t.TELEMETRY_EVENT_SOURCE_DATA_SERVICE = "data_service";
            t.TELEMETRY_EVENT_SOURCE_BROWSER = "browser";
            t.TELEMETRY_EVENT_SOURCE_PREFERRED_SLOT = "preferred_slot";
            t.TELEMETRY_EVENT_SOURCE_EDITOR = "editor";
            t.TELEMETRY_EVENT_SOURCE_EDITOR_MATCH_HISTORY = "editor_match_history";
            t.TELEMETRY_EVENT_SOURCE_EDITOR_EOG = "editor_eog";
            t.EMPTY_AREA_SORTABLE_GROUP_NAME = "empty-area";
            t.ITEM_GRID_SORTABLE_GROUP_NAME = "item-list";
            t.ITEM_EDITOR_BLOCKS_SORTABLE_GROUP_NAME = "item-section";
            t.ITEM_BUILD_PATH_SORTABLE_GROUP_NAME = "item-build-path";
            t.PREFERRED_SLOTS_SORTABLE_GROUP_NAME = "preferred-slots";
            t.DEFAULT_ITEM_SLOTS = [0, 1, 2, 3, 4, 5];
            t.SLOT_TO_DISPLAY_MAP = {
                0: 1,
                1: 2,
                2: 3,
                3: 5,
                4: 6,
                5: 7
            };
            t.SCROLLABLE_AUTO_SCROLL_SENSITIVITY = 55;
            t.SCROLLABLE_AUTO_SCROLL_STEP = 25;
            t.SCROLLABLE_ITEM_BLOCKS_RECT = {
                top: 205,
                bottom: 600
            };
            t.MAX_ITEM_PER_PREFERRED_SLOT = 8;
            t.TITLE_LENGTH_LIMIT = 75;
            t.ITEM_SET_JSON_SCHEMA = {
                id: "/ItemSet",
                type: "object",
                properties: {
                    title: {
                        type: "string"
                    },
                    associatedChampions: {
                        type: "array",
                        items: {
                            type: "integer"
                        }
                    },
                    associatedMaps: {
                        type: "array",
                        items: {
                            type: "integer"
                        }
                    },
                    blocks: {
                        type: "array",
                        items: {
                            type: "object",
                            properties: {
                                type: {
                                    type: "string"
                                },
                                items: {
                                    type: "array",
                                    items: {
                                        type: "object",
                                        properties: {
                                            count: {
                                                type: "integer"
                                            },
                                            id: {
                                                type: "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                required: ["title", "associatedChampions", "associatedMaps", "blocks"]
            };
            t.IMPORT_FILE_SIZE_LIMIT = 1048576;
            t.ITEM_SET_RENAMING_DISABLED = !1;
            t.RESTRICTED_PAGE_NAMES_ENABLED = !1
        }, e => {
            var t;
            t = {}, e.exports = t, t.simpleFilter = function(e, n) {
                return n.filter((function(n) {
                    return t.test(e, n)
                }))
            }, t.test = function(e, n) {
                return null !== t.match(e, n)
            }, t.match = function(e, t, n) {
                n = n || {};
                var s, o = 0,
                    i = [],
                    l = t.length,
                    a = 0,
                    r = 0,
                    c = n.pre || "",
                    d = n.post || "",
                    m = n.caseSensitive && t || t.toLowerCase();
                e = n.caseSensitive && e || e.toLowerCase();
                for (var p = 0; p < l; p++) s = t[p], m[p] === e[o] ? (s = c + s + d, o += 1, r += 1 + r) : r = 0, a += r, i[i.length] = s;
                return o === e.length ? (a = m === e ? 1 / 0 : a, {
                    rendered: i.join(""),
                    score: a
                }) : null
            }, t.filter = function(e, n, s) {
                return n && 0 !== n.length ? "string" != typeof e ? n : (s = s || {}, n.reduce((function(n, o, i, l) {
                    var a = o;
                    s.extract && (a = s.extract(o));
                    var r = t.match(e, a, s);
                    return null != r && (n[n.length] = {
                        string: r.rendered,
                        score: r.score,
                        index: i,
                        original: o
                    }), n
                }), []).sort((function(e, t) {
                    var n = t.score - e.score;
                    return n || e.index - t.index
                }))) : []
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            n(114);
            const o = s.UIKit.getTooltipManager();
            var i = s.Ember.Component.extend({
                layout: n(115),
                tagName: "lol-uikit-close-button",
                tooltipManager: o,
                attributeBindings: ["disabled", "click-sfx-src", "button-type", "isLoading:loading"],
                isDisabled: null,
                tooltipContent: null,
                isLoading: !1,
                disabled: s.Ember.computed("isDisabled", (function() {
                    return this.get("isDisabled") ? "disabled" : null
                })),
                click: function() {
                    this.get("isDisabled") || this.sendAction("action", this.get("actionData"))
                }
            });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "uihCuvsV",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\circle-button-component\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\circle-button-component\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\circle-button-component\\\\index.js\\" "],["text","\\n"],["block",["uikit-tooltip"],null,[["targetAnchorX","targetAnchorY","tooltipAnchorX","tooltipAnchorY","type"],["center","top","center","bottom","system"]],0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["static-attr","class","controls-tooltip-content"],["flush-element"],["text","\\n    "],["open-element","p",[]],["flush-element"],["append",["unknown",["tooltipContent"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(117)) && s.__esModule ? s : {
                    default: s
                };
            n(119);
            var l = n(110),
                a = n(111),
                r = n(120);
            const {
                RunMixin: c
            } = o.EmberAddons.EmberLifeline, d = "hasTooltip";
            var m = o.Ember.Component.extend(c, i.default, {
                layout: n(121),
                classNames: ["item-build-tree-component"],
                itemSetsService: o.Ember.inject.service("itemSets"),
                indexedItems: o.Ember.computed.readOnly("itemSetsService.indexedItems"),
                node: null,
                hasChildren: o.Ember.computed.bool("node.from.length"),
                from: o.Ember.computed("node", "indexedItems", (function() {
                    const e = this.get("indexedItems");
                    if (e && this.get("hasChildren")) {
                        const t = this.get("node.from");
                        return o.Ember.A(t.map((t => e[t])))
                    }
                })),
                didInsertElement: function() {
                    this._super(...arguments), this.get("plainDragDrop") || this._createSortable(this.element.querySelector(".build-tree-parent"), {
                        draggable: ".item",
                        sort: !1,
                        forceFallback: !0,
                        fallbackOnBody: !0,
                        group: {
                            name: a.ITEM_BUILD_PATH_SORTABLE_GROUP_NAME,
                            put: !1,
                            pull: "clone",
                            dataIdAttr: "sortable-data-id"
                        },
                        onStart: this._onDragStart.bind(this),
                        onClone: this._onClone.bind(this)
                    })
                },
                _onDragStart: function(e) {
                    if (e.item.children.length > 0) {
                        e.item.children[0].dispatchEvent(new Event("mouseleave"))
                    }
                    l.sfx.drag.play()
                },
                _onClone: function(e) {
                    e.clone.removeAttribute(d), e.clone.addEventListener("mouseenter", (e => {
                        this.send("displayItemTooltip", e.target.getAttribute("item-id"), e)
                    })), e.clone.addEventListener("contextmenu", (e => {
                        const t = e.target.getAttribute("item-id"),
                            n = this.get("itemSetsService.indexedItems")[t];
                        this.send("onItemRightClicked", n)
                    }))
                },
                nodeObserver: o.Ember.observer("node", (function() {
                    this._updateBuildPath.call(this)
                })),
                _updateBuildPath: function() {
                    if (this.element) return this._updateBuildPathParentElement(), new Promise((e => {
                        this.runTask((() => {
                            if (this.get("plainDragDrop") || !this.element && this.element.querySelector(".build-tree-parent")) return;
                            const t = this.element.querySelectorAll(".build-tree-child");
                            o.Lodash.map(t, (e => this._createSortable(e, {
                                draggable: ".item",
                                sort: !1,
                                forceFallback: !0,
                                fallbackOnBody: !0,
                                group: {
                                    name: a.ITEM_BUILD_PATH_SORTABLE_GROUP_NAME,
                                    put: !1,
                                    pull: "clone",
                                    dataIdAttr: "sortable-data-id"
                                },
                                onStart: this._onDragStart.bind(this),
                                onClone: this._onClone.bind(this)
                            }))), e()
                        }), 1)
                    }))
                },
                _updateBuildPathParentElement: function() {
                    const e = this.get("node"),
                        t = o.Lodash.find(this.element.children, (e => e.classList.contains("build-tree-parent"))),
                        n = t ? t.querySelector(".img-border") : void 0;
                    if (e && n) {
                        n.setAttribute("item-id", e.id), n.setAttribute(d, "false");
                        const t = n.querySelector("img");
                        t.setAttribute("src", e.iconPath), t.setAttribute("item-id", e.id)
                    }
                },
                willDestroy: function() {
                    this._super(...arguments), this._destroyAllSortable()
                },
                actions: {
                    selectItem: function(e) {
                        this.sendAction("selectItem", e)
                    },
                    onPlainDragStart: function(e) {
                        event.dataTransfer.setData(a.ITEM_MEDIA_TYPE, JSON.stringify(e)), event.dataTransfer.dropEffect = "copy", event.srcElement.dispatchEvent(new Event("mouseleave")), l.sfx.drag.play()
                    },
                    onItemRightClicked: function(e) {
                        event.preventDefault(), this.sendAction("onItemRightClick", e)
                    },
                    displayItemTooltip: function(e, t) {
                        l.sfx.gridHover.play();
                        const n = t.target,
                            s = this.get("itemSetsService.indexedItems")[e],
                            i = this.get("tooltipSource");
                        if (s && "true" !== n.getAttribute(d)) {
                            const e = document.createElement("div");
                            n.setAttribute(d, "true"), o.TooltipManager.assign(n, e, {}, {
                                ComponentFactory: o.ComponentFactory,
                                targetAnchor: {
                                    x: "left",
                                    y: "center"
                                },
                                tooltipAnchor: {
                                    x: "right",
                                    y: "center"
                                },
                                offset: {
                                    x: 0,
                                    y: 0
                                },
                                hideEvent: "mouseleave"
                            }), n.addEventListener("tooltip:beforeShow", (function() {
                                r.itemTooltipManager.updateTooltip(s, i);
                                const t = r.itemTooltipManager.getDomNode();
                                e.appendChild(t), 0 === this.offsetLeft && 0 === this.offsetWidth && this.dispatchEvent(new Event("mouseleave"))
                            })), o.TooltipManager.show(n)
                        }
                    }
                }
            });
            t.default = m
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(118)) && s.__esModule ? s : {
                    default: s
                };
            var l = o.Ember.Mixin.create({
                _sortablejs: i.default,
                init() {
                    this._super(...arguments), this.set("_sortables", [])
                },
                _createSortable: function(e, t) {
                    const n = this.get("_sortablejs").create(e, t);
                    this.get("_sortables").push(n)
                },
                _destroyAllSortable: function() {
                    this.get("_sortables").forEach((e => e.destroy())), this.set("_sortables", [])
                }
            });
            t.default = l
        }, (e, t, n) => {
            var s, o;
            ! function(i) {
                "use strict";
                void 0 === (o = "function" == typeof(s = i) ? s.call(t, n, t, e) : s) || (e.exports = o)
            }((function() {
                "use strict";
                if ("undefined" == typeof window || !window.document) return function() {
                    throw new Error("Sortable.js requires a window with a document")
                };
                var e, t, n, s, o, i, l, a, r, c, d, m, p, u, h, g, f, _, y, b, k, S, v, E, x, I, w, P, T = [],
                    C = !1,
                    R = !1,
                    O = !1,
                    A = [],
                    D = !1,
                    M = !1,
                    L = [],
                    N = /\s+/g,
                    B = "Sortable" + (new Date).getTime(),
                    j = window,
                    F = j.document,
                    U = j.parseInt,
                    H = j.setTimeout,
                    V = j.jQuery || j.Zepto,
                    K = j.Polymer,
                    G = {
                        capture: !1,
                        passive: !1
                    },
                    W = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\.|msie|iemobile)/i),
                    Y = !!navigator.userAgent.match(/Edge/i),
                    q = !!navigator.userAgent.match(/firefox/i),
                    X = !(!navigator.userAgent.match(/safari/i) || navigator.userAgent.match(/chrome/i) || navigator.userAgent.match(/android/i)),
                    $ = !!navigator.userAgent.match(/iP(ad|od|hone)/i),
                    z = Y || W ? "cssFloat" : "float",
                    Q = "draggable" in F.createElement("div"),
                    J = function() {
                        if (W) return !1;
                        var e = F.createElement("x");
                        return e.style.cssText = "pointer-events:auto", "auto" === e.style.pointerEvents
                    }(),
                    Z = !1,
                    ee = !1,
                    te = Math.abs,
                    ne = Math.min,
                    se = Math.max,
                    oe = [],
                    ie = function(e, t) {
                        var n = Ee(e),
                            s = U(n.width) - U(n.paddingLeft) - U(n.paddingRight) - U(n.borderLeftWidth) - U(n.borderRightWidth),
                            o = Re(e, 0, t),
                            i = Re(e, 1, t),
                            l = o && Ee(o),
                            a = i && Ee(i),
                            r = l && U(l.marginLeft) + U(l.marginRight) + He(o).width,
                            c = a && U(a.marginLeft) + U(a.marginRight) + He(i).width;
                        if ("flex" === n.display) return "column" === n.flexDirection || "column-reverse" === n.flexDirection ? "vertical" : "horizontal";
                        if ("grid" === n.display) return n.gridTemplateColumns.split(" ").length <= 1 ? "vertical" : "horizontal";
                        if (o && "none" !== l.float) {
                            var d = "left" === l.float ? "left" : "right";
                            return !i || "both" !== a.clear && a.clear !== d ? "horizontal" : "vertical"
                        }
                        return o && ("block" === l.display || "flex" === l.display || "table" === l.display || "grid" === l.display || r >= s && "none" === n[z] || i && "none" === n[z] && r + c > s) ? "vertical" : "horizontal"
                    },
                    le = function(e, t) {
                        if (!e || !e.getBoundingClientRect) return ae();
                        var n = e,
                            s = !1;
                        do {
                            if (n.clientWidth < n.scrollWidth || n.clientHeight < n.scrollHeight) {
                                var o = Ee(n);
                                if (n.clientWidth < n.scrollWidth && ("auto" == o.overflowX || "scroll" == o.overflowX) || n.clientHeight < n.scrollHeight && ("auto" == o.overflowY || "scroll" == o.overflowY)) {
                                    if (!n || !n.getBoundingClientRect || n === F.body) return ae();
                                    if (s || t) return n;
                                    s = !0
                                }
                            }
                        } while (n = n.parentNode);
                        return ae()
                    },
                    ae = function() {
                        return W ? F.documentElement : F.scrollingElement
                    },
                    re = function(e, t, n) {
                        e.scrollLeft += t, e.scrollTop += n
                    },
                    ce = Ne((function(e, t, n, s) {
                        if (t.scroll) {
                            var o = n ? n[B] : window,
                                i = t.scrollSensitivity,
                                l = t.scrollSpeed,
                                d = e.clientX,
                                m = e.clientY,
                                p = ae(),
                                u = !1;
                            r !== n && (de(), a = t.scroll, c = t.scrollFn, !0 === a && (a = le(n, !0), r = a));
                            var h = 0,
                                g = a;
                            do {
                                var f, _, y, b, S, v, E, x, I, w = g,
                                    P = He(w),
                                    R = P.top,
                                    O = P.bottom,
                                    A = P.left,
                                    D = P.right,
                                    M = P.width,
                                    L = P.height;
                                if (f = w.scrollWidth, _ = w.scrollHeight, y = Ee(w), x = w.scrollLeft, I = w.scrollTop, w === p ? (v = M < f && ("auto" === y.overflowX || "scroll" === y.overflowX || "visible" === y.overflowX), E = L < _ && ("auto" === y.overflowY || "scroll" === y.overflowY || "visible" === y.overflowY)) : (v = M < f && ("auto" === y.overflowX || "scroll" === y.overflowX), E = L < _ && ("auto" === y.overflowY || "scroll" === y.overflowY)), b = v && (te(D - d) <= i && x + M < f) - (te(A - d) <= i && !!x), S = E && (te(O - m) <= i && I + L < _) - (te(R - m) <= i && !!I), !T[h])
                                    for (var N = 0; N <= h; N++) T[N] || (T[N] = {});
                                T[h].vx == b && T[h].vy == S && T[h].el === w || (T[h].el = w, T[h].vx = b, T[h].vy = S, clearInterval(T[h].pid), !w || 0 == b && 0 == S || (u = !0, T[h].pid = setInterval(function() {
                                    s && 0 === this.layer && (_e.active._emulateDragOver(!0), _e.active._onTouchMove(k, !0));
                                    var t = T[this.layer].vy ? T[this.layer].vy * l : 0,
                                        n = T[this.layer].vx ? T[this.layer].vx * l : 0;
                                    "function" == typeof c && "continue" !== c.call(o, n, t, e, k, T[this.layer].el) || re(T[this.layer].el, n, t)
                                }.bind({
                                    layer: h
                                }), 24))), h++
                            } while (t.bubbleScroll && g !== p && (g = le(g, !1)));
                            C = u
                        }
                    }), 30),
                    de = function() {
                        T.forEach((function(e) {
                            clearInterval(e.pid)
                        })), T = []
                    },
                    me = function(e) {
                        function t(e, n) {
                            return function(s, o, i, l) {
                                var a = s.options.group.name && o.options.group.name && s.options.group.name === o.options.group.name;
                                if (null == e && (n || a)) return !0;
                                if (null == e || !1 === e) return !1;
                                if (n && "clone" === e) return e;
                                if ("function" == typeof e) return t(e(s, o, i, l), n)(s, o, i, l);
                                var r = (n ? s : o).options.group.name;
                                return !0 === e || "string" == typeof e && e === r || e.join && e.indexOf(r) > -1
                            }
                        }
                        var n = {},
                            s = e.group;
                        s && "object" == typeof s || (s = {
                            name: s
                        }), n.name = s.name, n.checkPull = t(s.pull, !0), n.checkPut = t(s.put), n.revertClone = s.revertClone, e.group = n
                    },
                    pe = function(t) {
                        e && e.parentNode && e.parentNode[B] && e.parentNode[B]._computeIsAligned(t)
                    },
                    ue = function() {
                        !J && n && Ee(n, "display", "none")
                    },
                    he = function() {
                        !J && n && Ee(n, "display", "")
                    };
                F.addEventListener("click", (function(e) {
                    if (O) return e.preventDefault(), e.stopPropagation && e.stopPropagation(), e.stopImmediatePropagation && e.stopImmediatePropagation(), O = !1, !1
                }), !0);
                var ge, fe = function(t) {
                    if (e) {
                        var n = function(e, t) {
                            for (var n = 0; n < A.length; n++)
                                if (!Oe(A[n])) {
                                    var s = He(A[n]),
                                        o = A[n][B].options.emptyInsertThreshold,
                                        i = e >= s.left - o && e <= s.right + o,
                                        l = t >= s.top - o && t <= s.bottom + o;
                                    if (o && i && l) return A[n]
                                }
                        }((t = t.touches ? t.touches[0] : t).clientX, t.clientY);
                        if (n) {
                            var s = {};
                            for (var o in t) s[o] = t[o];
                            s.target = s.rootEl = n, s.preventDefault = void 0, s.stopPropagation = void 0, n[B]._onDragOver(s)
                        }
                    }
                };

                function _e(e, t) {
                    if (!e || !e.nodeType || 1 !== e.nodeType) throw "Sortable: `el` must be HTMLElement, not " + {}.toString.call(e);
                    this.el = e, this.options = t = Be({}, t), e[B] = this;
                    var n = {
                        group: null,
                        sort: !0,
                        disabled: !1,
                        store: null,
                        handle: null,
                        scroll: !0,
                        scrollSensitivity: 30,
                        scrollSpeed: 10,
                        bubbleScroll: !0,
                        draggable: /[uo]l/i.test(e.nodeName) ? ">li" : ">*",
                        swapThreshold: 1,
                        invertSwap: !1,
                        invertedSwapThreshold: null,
                        removeCloneOnHide: !0,
                        direction: function() {
                            return ie(e, this.options)
                        },
                        ghostClass: "sortable-ghost",
                        chosenClass: "sortable-chosen",
                        dragClass: "sortable-drag",
                        ignore: "a, img",
                        filter: null,
                        preventOnFilter: !0,
                        animation: 0,
                        easing: null,
                        setData: function(e, t) {
                            e.setData("Text", t.textContent)
                        },
                        dropBubble: !1,
                        dragoverBubble: !1,
                        dataIdAttr: "data-id",
                        delay: 0,
                        delayOnTouchOnly: !1,
                        touchStartThreshold: U(window.devicePixelRatio, 10) || 1,
                        forceFallback: !1,
                        fallbackClass: "sortable-fallback",
                        fallbackOnBody: !1,
                        fallbackTolerance: 0,
                        fallbackOffset: {
                            x: 0,
                            y: 0
                        },
                        supportPointer: !1 !== _e.supportPointer && "PointerEvent" in window,
                        emptyInsertThreshold: 5
                    };
                    for (var s in n) !(s in t) && (t[s] = n[s]);
                    for (var o in me(t), this) "_" === o.charAt(0) && "function" == typeof this[o] && (this[o] = this[o].bind(this));
                    this.nativeDraggable = !t.forceFallback && Q, this.nativeDraggable && (this.options.touchStartThreshold = 1), t.supportPointer ? ke(e, "pointerdown", this._onTapStart) : (ke(e, "mousedown", this._onTapStart), ke(e, "touchstart", this._onTapStart)), this.nativeDraggable && (ke(e, "dragover", this), ke(e, "dragenter", this)), A.push(this.el), t.store && t.store.get && this.sort(t.store.get(this) || [])
                }

                function ye(e, t, n, s) {
                    if (e) {
                        n = n || F;
                        do {
                            if (null != t && (">" === t[0] ? e.parentNode === n && Le(e, t) : Le(e, t)) || s && e === n) return e;
                            if (e === n) break
                        } while (e = be(e))
                    }
                    return null
                }

                function be(e) {
                    return e.host && e !== F && e.host.nodeType ? e.host : e.parentNode
                }

                function ke(e, t, n) {
                    e.addEventListener(t, n, !W && G)
                }

                function Se(e, t, n) {
                    e.removeEventListener(t, n, !W && G)
                }

                function ve(e, t, n) {
                    if (e && t)
                        if (e.classList) e.classList[n ? "add" : "remove"](t);
                        else {
                            var s = (" " + e.className + " ").replace(N, " ").replace(" " + t + " ", " ");
                            e.className = (s + (n ? " " + t : "")).replace(N, " ")
                        }
                }

                function Ee(e, t, n) {
                    var s = e && e.style;
                    if (s) {
                        if (void 0 === n) return F.defaultView && F.defaultView.getComputedStyle ? n = F.defaultView.getComputedStyle(e, "") : e.currentStyle && (n = e.currentStyle), void 0 === t ? n : n[t];
                        t in s || -1 !== t.indexOf("webkit") || (t = "-webkit-" + t), s[t] = n + ("string" == typeof n ? "" : "px")
                    }
                }

                function xe(e) {
                    var t = "";
                    do {
                        var n = Ee(e, "transform");
                        n && "none" !== n && (t = n + " " + t)
                    } while (e = e.parentNode);
                    return window.DOMMatrix ? new DOMMatrix(t) : window.WebKitCSSMatrix ? new WebKitCSSMatrix(t) : window.CSSMatrix ? new CSSMatrix(t) : void 0
                }

                function Ie(e, t, n) {
                    if (e) {
                        var s = e.getElementsByTagName(t),
                            o = 0,
                            i = s.length;
                        if (n)
                            for (; o < i; o++) n(s[o], o);
                        return s
                    }
                    return []
                }

                function we(e, t, n, o, i, l, a, r, c, d, m) {
                    var p, u = (e = e || t[B]).options,
                        h = "on" + n.charAt(0).toUpperCase() + n.substr(1);
                    !window.CustomEvent || W || Y ? (p = F.createEvent("Event")).initEvent(n, !0, !0) : p = new CustomEvent(n, {
                        bubbles: !0,
                        cancelable: !0
                    }), p.to = i || t, p.from = l || t, p.item = o || t, p.clone = s, p.oldIndex = a, p.newIndex = r, p.oldDraggableIndex = c, p.newDraggableIndex = d, p.originalEvent = m, p.pullMode = g ? g.lastPutMode : void 0, t && t.dispatchEvent(p), u[h] && u[h].call(e, p)
                }

                function Pe(e, t, n, s, o, i, l, a) {
                    var r, c, d = e[B],
                        m = d.options.onMove;
                    return !window.CustomEvent || W || Y ? (r = F.createEvent("Event")).initEvent("move", !0, !0) : r = new CustomEvent("move", {
                        bubbles: !0,
                        cancelable: !0
                    }), r.to = t, r.from = e, r.dragged = n, r.draggedRect = s, r.related = o || t, r.relatedRect = i || He(t), r.willInsertAfter = a, r.originalEvent = l, e.dispatchEvent(r), m && (c = m.call(d, r, l)), c
                }

                function Te(e) {
                    e.draggable = !1
                }

                function Ce() {
                    Z = !1
                }

                function Re(t, s, o) {
                    for (var i = 0, l = 0, a = t.children; l < a.length;) {
                        if ("none" !== a[l].style.display && a[l] !== n && a[l] !== e && ye(a[l], o.draggable, t, !1)) {
                            if (i === s) return a[l];
                            i++
                        }
                        l++
                    }
                    return null
                }

                function Oe(e) {
                    for (var t = e.lastElementChild; t && (t === n || "none" === Ee(t, "display"));) t = t.previousElementSibling;
                    return t || null
                }

                function Ae(t) {
                    return Me(e) < Me(t) ? 1 : -1
                }

                function De(e) {
                    for (var t = e.tagName + e.className + e.src + e.href + e.textContent, n = t.length, s = 0; n--;) s += t.charCodeAt(n);
                    return s.toString(36)
                }

                function Me(e, t) {
                    var n = 0;
                    if (!e || !e.parentNode) return -1;
                    for (; e && (e = e.previousElementSibling);) "TEMPLATE" === e.nodeName.toUpperCase() || e === s || t && !Le(e, t) || n++;
                    return n
                }

                function Le(e, t) {
                    if (t) {
                        if (">" === t[0] && (t = t.substring(1)), e) try {
                            if (e.matches) return e.matches(t);
                            if (e.msMatchesSelector) return e.msMatchesSelector(t);
                            if (e.webkitMatchesSelector) return e.webkitMatchesSelector(t)
                        } catch (e) {
                            return !1
                        }
                        return !1
                    }
                }

                function Ne(e, t) {
                    return function() {
                        if (!ge) {
                            var n = arguments,
                                s = this;
                            ge = H((function() {
                                1 === n.length ? e.call(s, n[0]) : e.apply(s, n), ge = void 0
                            }), t)
                        }
                    }
                }

                function Be(e, t) {
                    if (e && t)
                        for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                    return e
                }

                function je(e) {
                    return K && K.dom ? K.dom(e).cloneNode(!0) : V ? V(e).clone(!0)[0] : e.cloneNode(!0)
                }

                function Fe(e) {
                    return H(e, 0)
                }

                function Ue(e) {
                    return clearTimeout(e)
                }

                function He(e, t, n, s) {
                    if (e.getBoundingClientRect || e === j) {
                        var o, i, l, a, r, c, d;
                        if (e !== j && e !== ae() ? (i = (o = e.getBoundingClientRect()).top, l = o.left, a = o.bottom, r = o.right, c = o.height, d = o.width) : (i = 0, l = 0, a = window.innerHeight, r = window.innerWidth, c = window.innerHeight, d = window.innerWidth), s && e !== j && (n = n || e.parentNode, !W))
                            do {
                                if (n && n.getBoundingClientRect && "none" !== Ee(n, "transform")) {
                                    var m = n.getBoundingClientRect();
                                    i -= m.top + U(Ee(n, "border-top-width")), l -= m.left + U(Ee(n, "border-left-width")), a = i + o.height, r = l + o.width;
                                    break
                                }
                            } while (n = n.parentNode);
                        if (t && e !== j) {
                            var p = xe(n || e),
                                u = p && p.a,
                                h = p && p.d;
                            p && (a = (i /= h) + (c /= h), r = (l /= u) + (d /= u))
                        }
                        return {
                            top: i,
                            left: l,
                            bottom: a,
                            right: r,
                            width: d,
                            height: c
                        }
                    }
                }

                function Ve(e, t) {
                    for (var n = le(e, !0), s = He(e)[t]; n;) {
                        var o = He(n)[t];
                        if (!("top" === t || "left" === t ? s >= o : s <= o)) return n;
                        if (n === ae()) break;
                        n = le(n, !1)
                    }
                    return !1
                }

                function Ke(e) {
                    var t = 0,
                        n = 0,
                        s = ae();
                    if (e)
                        do {
                            var o = xe(e),
                                i = o.a,
                                l = o.d;
                            t += e.scrollLeft * i, n += e.scrollTop * l
                        } while (e !== s && (e = e.parentNode));
                    return [t, n]
                }
                return _e.prototype = {
                    constructor: _e,
                    _computeIsAligned: function(t) {
                        var s;
                        if (n && !J ? (ue(), s = F.elementFromPoint(t.clientX, t.clientY), he()) : s = t.target, s = ye(s, this.options.draggable, this.el, !1), !ee && e && e.parentNode === this.el) {
                            for (var o, i, l, a, r, c, d, m, p = this.el.children, u = 0; u < p.length; u++) ye(p[u], this.options.draggable, this.el, !1) && p[u] !== s && (p[u].sortableMouseAligned = (o = t.clientX, i = t.clientY, l = p[u], a = this._getDirection(t, null), this.options, r = void 0, c = void 0, d = void 0, m = void 0, r = He(l), c = "vertical" === a ? r.left : r.top, d = "vertical" === a ? r.right : r.bottom, c < (m = "vertical" === a ? o : i) && m < d));
                            ye(s, this.options.draggable, this.el, !0) || (v = null), ee = !0, H((function() {
                                ee = !1
                            }), 30)
                        }
                    },
                    _getDirection: function(t, n) {
                        return "function" == typeof this.options.direction ? this.options.direction.call(this, t, n, e) : this.options.direction
                    },
                    _onTapStart: function(t) {
                        if (t.cancelable) {
                            var n, s, o = this,
                                i = this.el,
                                a = this.options,
                                r = a.preventOnFilter,
                                c = t.type,
                                d = t.touches && t.touches[0],
                                m = (d || t).target,
                                p = t.target.shadowRoot && (t.path && t.path[0] || t.composedPath && t.composedPath()[0]) || m,
                                u = a.filter;
                            if (function(e) {
                                    oe.length = 0;
                                    var t = e.getElementsByTagName("input"),
                                        n = t.length;
                                    for (; n--;) {
                                        var s = t[n];
                                        s.checked && oe.push(s)
                                    }
                                }(i), !e && !(/mousedown|pointerdown/.test(c) && 0 !== t.button || a.disabled || p.isContentEditable || (m = ye(m, a.draggable, i, !1), l === m))) {
                                if (n = Me(m), s = Me(m, a.draggable), "function" == typeof u) {
                                    if (u.call(this, t, m, this)) return we(o, p, "filter", m, i, i, n, void 0, s), void(r && t.cancelable && t.preventDefault())
                                } else if (u && (u = u.split(",").some((function(e) {
                                        if (e = ye(p, e.trim(), i, !1)) return we(o, e, "filter", m, i, i, n, void 0, s), !0
                                    })))) return void(r && t.cancelable && t.preventDefault());
                                a.handle && !ye(p, a.handle, i, !1) || this._prepareDragStart(t, d, m, n, s)
                            }
                        }
                    },
                    _handleAutoScroll: function(t, n) {
                        if (e && this.options.scroll) {
                            var s = t.clientX,
                                o = t.clientY,
                                i = F.elementFromPoint(s, o),
                                l = this;
                            if (n || Y || W || X) {
                                ce(t, l.options, i, n);
                                var a = le(i, !0);
                                !C || f && s === _ && o === y || (f && clearInterval(f), f = setInterval((function() {
                                    if (e) {
                                        var i = le(F.elementFromPoint(s, o), !0);
                                        i !== a && (a = i, de(), ce(t, l.options, a, n))
                                    }
                                }), 10), _ = s, y = o)
                            } else {
                                if (!l.options.bubbleScroll || le(i, !0) === ae()) return void de();
                                ce(t, l.options, le(i, !1), !1)
                            }
                        }
                    },
                    _prepareDragStart: function(n, s, a, r, c) {
                        var m, u = this,
                            g = u.el,
                            f = u.options,
                            _ = g.ownerDocument;
                        a && !e && a.parentNode === g && (o = g, t = (e = a).parentNode, i = e.nextSibling, l = a, h = f.group, d = r, p = c, b = {
                            target: e,
                            clientX: (s || n).clientX,
                            clientY: (s || n).clientY
                        }, this._lastX = (s || n).clientX, this._lastY = (s || n).clientY, e.style["will-change"] = "all", e.style.transition = "", e.style.transform = "", m = function() {
                            u._disableDelayedDragEvents(), !q && u.nativeDraggable && (e.draggable = !0), u._triggerDragStart(n, s), we(u, o, "choose", e, o, o, d, void 0, p), ve(e, f.chosenClass, !0)
                        }, f.ignore.split(",").forEach((function(t) {
                            Ie(e, t.trim(), Te)
                        })), ke(_, "dragover", fe), ke(_, "mousemove", fe), ke(_, "touchmove", fe), ke(_, "mouseup", u._onDrop), ke(_, "touchend", u._onDrop), ke(_, "touchcancel", u._onDrop), q && this.nativeDraggable && (this.options.touchStartThreshold = 4, e.draggable = !0), !f.delay || f.delayOnTouchOnly && !s || this.nativeDraggable && (Y || W) ? m() : (ke(_, "mouseup", u._disableDelayedDrag), ke(_, "touchend", u._disableDelayedDrag), ke(_, "touchcancel", u._disableDelayedDrag), ke(_, "mousemove", u._delayedDragTouchMoveHandler), ke(_, "touchmove", u._delayedDragTouchMoveHandler), f.supportPointer && ke(_, "pointermove", u._delayedDragTouchMoveHandler), u._dragStartTimer = H(m, f.delay)))
                    },
                    _delayedDragTouchMoveHandler: function(e) {
                        var t = e.touches ? e.touches[0] : e;
                        se(te(t.clientX - this._lastX), te(t.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1)) && this._disableDelayedDrag()
                    },
                    _disableDelayedDrag: function() {
                        e && Te(e), clearTimeout(this._dragStartTimer), this._disableDelayedDragEvents()
                    },
                    _disableDelayedDragEvents: function() {
                        var e = this.el.ownerDocument;
                        Se(e, "mouseup", this._disableDelayedDrag), Se(e, "touchend", this._disableDelayedDrag), Se(e, "touchcancel", this._disableDelayedDrag), Se(e, "mousemove", this._delayedDragTouchMoveHandler), Se(e, "touchmove", this._delayedDragTouchMoveHandler), Se(e, "pointermove", this._delayedDragTouchMoveHandler)
                    },
                    _triggerDragStart: function(t, n) {
                        n = n || ("touch" == t.pointerType ? t : null), !this.nativeDraggable || n ? this.options.supportPointer ? ke(F, "pointermove", this._onTouchMove) : ke(F, n ? "touchmove" : "mousemove", this._onTouchMove) : (ke(e, "dragend", this), ke(o, "dragstart", this._onDragStart));
                        try {
                            F.selection ? Fe((function() {
                                F.selection.empty()
                            })) : window.getSelection().removeAllRanges()
                        } catch (e) {}
                    },
                    _dragStarted: function(t, n) {
                        if (R = !1, o && e) {
                            this.nativeDraggable && (ke(F, "dragover", this._handleAutoScroll), ke(F, "dragover", pe));
                            var s = this.options;
                            !t && ve(e, s.dragClass, !1), ve(e, s.ghostClass, !0), Ee(e, "transform", ""), _e.active = this, t && this._appendGhost(), we(this, o, "start", e, o, o, d, void 0, p, void 0, n)
                        } else this._nulling()
                    },
                    _emulateDragOver: function(t) {
                        if (k) {
                            if (this._lastX === k.clientX && this._lastY === k.clientY && !t) return;
                            this._lastX = k.clientX, this._lastY = k.clientY, ue();
                            for (var n = F.elementFromPoint(k.clientX, k.clientY), s = n; n && n.shadowRoot && (n = n.shadowRoot.elementFromPoint(k.clientX, k.clientY)) !== s;) s = n;
                            if (s)
                                do {
                                    if (s[B])
                                        if (s[B]._onDragOver({
                                                clientX: k.clientX,
                                                clientY: k.clientY,
                                                target: n,
                                                rootEl: s
                                            }) && !this.options.dragoverBubble) break;
                                    n = s
                                } while (s = s.parentNode);
                            e.parentNode[B]._computeIsAligned(k), he()
                        }
                    },
                    _onTouchMove: function(e, t) {
                        if (b) {
                            var s = this.options,
                                o = s.fallbackTolerance,
                                i = s.fallbackOffset,
                                l = e.touches ? e.touches[0] : e,
                                a = n && xe(n),
                                r = n && a && a.a,
                                c = n && a && a.d,
                                d = $ && w && Ke(w),
                                m = (l.clientX - b.clientX + i.x) / (r || 1) + (d ? d[0] - L[0] : 0) / (r || 1),
                                p = (l.clientY - b.clientY + i.y) / (c || 1) + (d ? d[1] - L[1] : 0) / (c || 1),
                                u = e.touches ? "translate3d(" + m + "px," + p + "px,0)" : "translate(" + m + "px," + p + "px)";
                            if (!_e.active && !R) {
                                if (o && ne(te(l.clientX - this._lastX), te(l.clientY - this._lastY)) < o) return;
                                this._onDragStart(e, !0)
                            }!t && this._handleAutoScroll(l, !0), S = !0, k = l, Ee(n, "webkitTransform", u), Ee(n, "mozTransform", u), Ee(n, "msTransform", u), Ee(n, "transform", u), e.cancelable && e.preventDefault()
                        }
                    },
                    _appendGhost: function() {
                        if (!n) {
                            var t = this.options.fallbackOnBody ? F.body : o,
                                s = He(e, !0, t, !$),
                                i = (Ee(e), this.options);
                            if ($) {
                                for (w = t;
                                    "static" === Ee(w, "position") && "none" === Ee(w, "transform") && w !== F;) w = w.parentNode;
                                if (w !== F) {
                                    var l = He(w, !0);
                                    s.top -= l.top, s.left -= l.left
                                }
                                w !== F.body && w !== F.documentElement ? (w === F && (w = ae()), s.top += w.scrollTop, s.left += w.scrollLeft) : w = ae(), L = Ke(w)
                            }
                            ve(n = e.cloneNode(!0), i.ghostClass, !1), ve(n, i.fallbackClass, !0), ve(n, i.dragClass, !0), Ee(n, "box-sizing", "border-box"), Ee(n, "margin", 0), Ee(n, "top", s.top), Ee(n, "left", s.left), Ee(n, "width", s.width), Ee(n, "height", s.height), Ee(n, "opacity", "0.8"), Ee(n, "position", $ ? "absolute" : "fixed"), Ee(n, "zIndex", "100000"), Ee(n, "pointerEvents", "none"), t.appendChild(n)
                        }
                    },
                    _onDragStart: function(t, n) {
                        var i = this,
                            l = t.dataTransfer,
                            a = i.options;
                        (s = je(e)).draggable = !1, s.style["will-change"] = "", this._hideClone(), ve(s, i.options.chosenClass, !1), i._cloneId = Fe((function() {
                            i.options.removeCloneOnHide || o.insertBefore(s, e), we(i, o, "clone", e)
                        })), !n && ve(e, a.dragClass, !0), n ? (O = !0, i._loopId = setInterval(i._emulateDragOver, 50)) : (Se(F, "mouseup", i._onDrop), Se(F, "touchend", i._onDrop), Se(F, "touchcancel", i._onDrop), l && (l.effectAllowed = "move", a.setData && a.setData.call(i, l, e)), ke(F, "drop", i), Ee(e, "transform", "translateZ(0)")), R = !0, i._dragStartId = Fe(i._dragStarted.bind(i, n, t)), ke(F, "selectstart", i), X && Ee(F.body, "user-select", "none")
                    },
                    _onDragOver: function(n) {
                        var s, l, a, r = this.el,
                            c = n.target,
                            m = this.options,
                            u = m.group,
                            f = _e.active,
                            _ = h === u,
                            y = m.sort,
                            b = this;
                        if (!Z) {
                            if (void 0 !== n.preventDefault && n.cancelable && n.preventDefault(), S = !0, c = ye(c, m.draggable, r, !0), e.contains(n.target) || c.animated) return G(!1);
                            if (c !== e && (O = !1), f && !m.disabled && (_ ? y || (a = !o.contains(e)) : g === this || (this.lastPutMode = h.checkPull(this, f, e, n)) && u.checkPut(this, f, e, n))) {
                                var k = this._getDirection(n, c);
                                if (s = He(e), a) return this._hideClone(), t = o, i ? o.insertBefore(e, i) : o.appendChild(e), G(!0);
                                var w = Oe(r);
                                if (!w || function(e, t, n) {
                                        var s = He(Oe(n)),
                                            o = "vertical" === t ? e.clientY : e.clientX,
                                            i = "vertical" === t ? e.clientX : e.clientY,
                                            l = "vertical" === t ? s.bottom : s.right,
                                            a = "vertical" === t ? s.left : s.top,
                                            r = "vertical" === t ? s.right : s.bottom,
                                            c = 10;
                                        return "vertical" === t ? i > r + c || i <= r && o > l && i >= a : o > l && i > a || o <= l && i > r + c
                                    }(n, k, r) && !w.animated) {
                                    if (w && r === n.target && (c = w), c && (l = He(c)), _ ? f._hideClone() : f._showClone(this), !1 !== Pe(o, r, e, s, c, l, n, !!c)) return r.appendChild(e), t = r, P = null, W(), G(!0)
                                } else if (c && c !== e && c.parentNode === r) {
                                    var T, C = 0,
                                        R = c.sortableMouseAligned,
                                        A = e.parentNode !== r,
                                        L = "vertical" === k ? "top" : "left",
                                        N = Ve(c, "top") || Ve(e, "top"),
                                        j = N ? N.scrollTop : void 0;
                                    if (v !== c && (x = null, T = He(c)[L], D = !1), function(t, n, s) {
                                            var o = t === e && P || He(t),
                                                i = n === e && P || He(n),
                                                l = "vertical" === s ? o.left : o.top,
                                                a = "vertical" === s ? o.right : o.bottom,
                                                r = "vertical" === s ? o.width : o.height,
                                                c = "vertical" === s ? i.left : i.top,
                                                d = "vertical" === s ? i.right : i.bottom,
                                                m = "vertical" === s ? i.width : i.height;
                                            return l === c || a === d || l + r / 2 === c + m / 2
                                        }(e, c, k) && R || A || N || m.invertSwap || "insert" === x || "swap" === x ? ("swap" !== x && (M = m.invertSwap || A), C = function(t, n, s, o, i, l, a) {
                                            var r = He(n),
                                                c = "vertical" === s ? t.clientY : t.clientX,
                                                d = "vertical" === s ? r.height : r.width,
                                                m = "vertical" === s ? r.top : r.left,
                                                p = "vertical" === s ? r.bottom : r.right,
                                                u = He(e),
                                                h = !1;
                                            if (!l)
                                                if (a && I < d * o)
                                                    if (!D && (1 === E ? c > m + d * i / 2 : c < p - d * i / 2) && (D = !0), D) h = !0;
                                                    else {
                                                        "vertical" === s ? u.top : u.left, "vertical" === s ? u.bottom : u.right;
                                                        if (1 === E ? c < m + I : c > p - I) return -1 * E
                                                    }
                                            else if (c > m + d * (1 - o) / 2 && c < p - d * (1 - o) / 2) return Ae(n);
                                            if ((h = h || l) && (c < m + d * i / 2 || c > p - d * i / 2)) return c > m + d / 2 ? 1 : -1;
                                            return 0
                                        }(n, c, k, m.swapThreshold, null == m.invertedSwapThreshold ? m.swapThreshold : m.invertedSwapThreshold, M, v === c), x = "swap") : (C = Ae(c), x = "insert"), 0 === C) return G(!1);
                                    P = null, v = c, E = C, l = He(c);
                                    var U = c.nextElementSibling,
                                        V = !1,
                                        K = Pe(o, r, e, s, c, l, n, V = 1 === C);
                                    if (!1 !== K) return 1 !== K && -1 !== K || (V = 1 === K), Z = !0, H(Ce, 30), _ ? f._hideClone() : f._showClone(this), V && !U ? r.appendChild(e) : c.parentNode.insertBefore(e, V ? U : c), N && re(N, 0, j - N.scrollTop), t = e.parentNode, void 0 === T || M || (I = te(T - He(c)[L])), W(), G(!0)
                                }
                                if (r.contains(e)) return G(!1)
                            }
                            return !1
                        }

                        function G(t) {
                            return t && (_ ? f._hideClone() : f._showClone(b), f && (ve(e, g ? g.options.ghostClass : f.options.ghostClass, !1), ve(e, m.ghostClass, !0)), g !== b && b !== _e.active ? g = b : b === _e.active && (g = null), s && b._animate(s, e), c && l && b._animate(l, c)), (c === e && !e.animated || c === r && !c.animated) && (v = null), m.dragoverBubble || n.rootEl || c === F || (b._handleAutoScroll(n), e.parentNode[B]._computeIsAligned(n), !t && fe(n)), !m.dragoverBubble && n.stopPropagation && n.stopPropagation(), !0
                        }

                        function W() {
                            we(b, o, "change", c, r, o, d, Me(e), p, Me(e, m.draggable), n)
                        }
                    },
                    _animate: function(t, n) {
                        var s = this.options.animation;
                        if (s) {
                            var o = He(n);
                            if (n === e && (P = o), 1 === t.nodeType && (t = He(t)), t.left + t.width / 2 !== o.left + o.width / 2 || t.top + t.height / 2 !== o.top + o.height / 2) {
                                var i = xe(this.el),
                                    l = i && i.a,
                                    a = i && i.d;
                                Ee(n, "transition", "none"), Ee(n, "transform", "translate3d(" + (t.left - o.left) / (l || 1) + "px," + (t.top - o.top) / (a || 1) + "px,0)"), this._repaint(n), Ee(n, "transition", "transform " + s + "ms" + (this.options.easing ? " " + this.options.easing : "")), Ee(n, "transform", "translate3d(0,0,0)")
                            }
                            "number" == typeof n.animated && clearTimeout(n.animated), n.animated = H((function() {
                                Ee(n, "transition", ""), Ee(n, "transform", ""), n.animated = !1
                            }), s)
                        }
                    },
                    _repaint: function(e) {
                        return e.offsetWidth
                    },
                    _offMoveEvents: function() {
                        Se(F, "touchmove", this._onTouchMove), Se(F, "pointermove", this._onTouchMove), Se(F, "dragover", fe), Se(F, "mousemove", fe), Se(F, "touchmove", fe)
                    },
                    _offUpEvents: function() {
                        var e = this.el.ownerDocument;
                        Se(e, "mouseup", this._onDrop), Se(e, "touchend", this._onDrop), Se(e, "pointerup", this._onDrop), Se(e, "touchcancel", this._onDrop), Se(F, "selectstart", this)
                    },
                    _onDrop: function(l) {
                        var a = this.el,
                            r = this.options;
                        R = !1, C = !1, M = !1, D = !1, clearInterval(this._loopId), clearInterval(f), de(), clearTimeout(ge), ge = void 0, clearTimeout(this._dragStartTimer), Ue(this._cloneId), Ue(this._dragStartId), Se(F, "mousemove", this._onTouchMove), this.nativeDraggable && (Se(F, "drop", this), Se(a, "dragstart", this._onDragStart), Se(F, "dragover", this._handleAutoScroll), Se(F, "dragover", pe)), X && Ee(F.body, "user-select", ""), this._offMoveEvents(), this._offUpEvents(), l && (S && (l.cancelable && l.preventDefault(), !r.dropBubble && l.stopPropagation()), n && n.parentNode && n.parentNode.removeChild(n), (o === t || g && "clone" !== g.lastPutMode) && s && s.parentNode && s.parentNode.removeChild(s), e && (this.nativeDraggable && Se(e, "dragend", this), Te(e), e.style["will-change"] = "", ve(e, g ? g.options.ghostClass : this.options.ghostClass, !1), ve(e, this.options.chosenClass, !1), we(this, o, "unchoose", e, t, o, d, null, p, null, l), o !== t ? (m = Me(e), u = Me(e, r.draggable), m >= 0 && (we(null, t, "add", e, t, o, d, m, p, u, l), we(this, o, "remove", e, t, o, d, m, p, u, l), we(null, t, "sort", e, t, o, d, m, p, u, l), we(this, o, "sort", e, t, o, d, m, p, u, l)), g && g.save()) : e.nextSibling !== i && (m = Me(e), u = Me(e, r.draggable), m >= 0 && (we(this, o, "update", e, t, o, d, m, p, u, l), we(this, o, "sort", e, t, o, d, m, p, u, l))), _e.active && (null != m && -1 !== m || (m = d, u = p), we(this, o, "end", e, t, o, d, m, p, u, l), this.save()))), this._nulling()
                    },
                    _nulling: function() {
                        o = e = t = n = i = s = l = a = r = T.length = f = _ = y = b = k = S = m = d = v = E = P = g = h = _e.active = null, oe.forEach((function(e) {
                            e.checked = !0
                        })), oe.length = 0
                    },
                    handleEvent: function(t) {
                        switch (t.type) {
                            case "drop":
                            case "dragend":
                                this._onDrop(t);
                                break;
                            case "dragenter":
                            case "dragover":
                                e && (this._onDragOver(t), function(e) {
                                    e.dataTransfer && (e.dataTransfer.dropEffect = "move");
                                    e.cancelable && e.preventDefault()
                                }(t));
                                break;
                            case "selectstart":
                                t.preventDefault()
                        }
                    },
                    toArray: function() {
                        for (var e, t = [], n = this.el.children, s = 0, o = n.length, i = this.options; s < o; s++) ye(e = n[s], i.draggable, this.el, !1) && t.push(e.getAttribute(i.dataIdAttr) || De(e));
                        return t
                    },
                    sort: function(e) {
                        var t = {},
                            n = this.el;
                        this.toArray().forEach((function(e, s) {
                            var o = n.children[s];
                            ye(o, this.options.draggable, n, !1) && (t[e] = o)
                        }), this), e.forEach((function(e) {
                            t[e] && (n.removeChild(t[e]), n.appendChild(t[e]))
                        }))
                    },
                    save: function() {
                        var e = this.options.store;
                        e && e.set && e.set(this)
                    },
                    closest: function(e, t) {
                        return ye(e, t || this.options.draggable, this.el, !1)
                    },
                    option: function(e, t) {
                        var n = this.options;
                        if (void 0 === t) return n[e];
                        n[e] = t, "group" === e && me(n)
                    },
                    destroy: function() {
                        var e = this.el;
                        e[B] = null, Se(e, "mousedown", this._onTapStart), Se(e, "touchstart", this._onTapStart), Se(e, "pointerdown", this._onTapStart), this.nativeDraggable && (Se(e, "dragover", this), Se(e, "dragenter", this)), Array.prototype.forEach.call(e.querySelectorAll("[draggable]"), (function(e) {
                            e.removeAttribute("draggable")
                        })), this._onDrop(), A.splice(A.indexOf(this.el), 1), this.el = e = null
                    },
                    _hideClone: function() {
                        s.cloneHidden || (Ee(s, "display", "none"), s.cloneHidden = !0, s.parentNode && this.options.removeCloneOnHide && s.parentNode.removeChild(s))
                    },
                    _showClone: function(t) {
                        "clone" === t.lastPutMode ? s.cloneHidden && (o.contains(e) && !this.options.group.revertClone ? o.insertBefore(s, e) : i ? o.insertBefore(s, i) : o.appendChild(s), this.options.group.revertClone && this._animate(e, s), Ee(s, "display", ""), s.cloneHidden = !1) : this._hideClone()
                    }
                }, ke(F, "touchmove", (function(e) {
                    (_e.active || R) && e.cancelable && e.preventDefault()
                })), _e.utils = {
                    on: ke,
                    off: Se,
                    css: Ee,
                    find: Ie,
                    is: function(e, t) {
                        return !!ye(e, t, e, !1)
                    },
                    extend: Be,
                    throttle: Ne,
                    closest: ye,
                    toggleClass: ve,
                    clone: je,
                    index: Me,
                    nextTick: Fe,
                    cancelNextTick: Ue,
                    detectDirection: ie,
                    getChild: Re
                }, _e.create = function(e, t) {
                    return new _e(e, t)
                }, _e.version = "1.9.0", _e
            }))
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.itemTooltipManager = void 0;
            var s = n(1);
            const o = new class {
                constructor() {
                    this._emberData = s.Ember.Object.create({
                        item: null,
                        source: null
                    })
                }
                getDomNode() {
                    if (!this._domNode) {
                        const e = s.ComponentFactory.create("ItemTooltipComponent", this._emberData);
                        this._domNode = e.domNode
                    }
                    return this._domNode
                }
                updateTooltip(e, t) {
                    this._emberData.set("item", e), this._emberData.set("source", t)
                }
            };
            t.itemTooltipManager = o
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "LjlEarkS",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-build-tree-component\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-build-tree-component\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-build-tree-component\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["build-tree-parent ",["helper",["unless"],[["get",["node","from","length"]],"no-child"],null]]]],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","img-border item from-build-path"],["dynamic-attr","item-id",["unknown",["node","id"]],null],["dynamic-attr","oncontextmenu",["helper",["action"],[["get",[null]],"onItemRightClicked",["get",["node"]]],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"selectItem",["get",["node"]]],null],null],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"displayItemTooltip",["get",["node","id"]]],null],null],["dynamic-attr","draggable",["helper",["if"],[["get",["plainDragDrop"]],"true","false"],null],null],["dynamic-attr","ondragstart",["helper",["action"],[["get",[null]],"onPlainDragStart",["get",["node"]]],null],null],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","img-border-wrapper"],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","item-set-build-path-icon"],["dynamic-attr","item-id",["unknown",["node","id"]],null],["dynamic-attr","src",["unknown",["node","iconPath"]],null],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","build-tree-children"],["flush-element"],["text","\\n"],["block",["each"],[["get",["from"]]],null,3],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","item-set-build-path img-border item from-build-path"],["dynamic-attr","item-id",["unknown",["item","id"]],null],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","img-border-wrapper"],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"displayItemTooltip",["get",["item","id"]]],null],null],["dynamic-attr","draggable",["helper",["if"],[["get",["plainDragDrop"]],"true","false"],null],null],["dynamic-attr","ondragstart",["helper",["action"],[["get",[null]],"onPlainDragStart",["get",["item"]]],null],null],["dynamic-attr","oncontextmenu",["helper",["action"],[["get",[null]],"onItemRightClicked",["get",["item"]]],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"selectItem",["get",["item"]]],null],null],["flush-element"],["text","\\n            "],["open-element","img",[]],["dynamic-attr","item-id",["unknown",["item","id"]],null],["static-attr","class","item-set-build-path-icon"],["dynamic-attr","src",["unknown",["item","iconPath"]],null],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[],"locals":[]},{"statements":[["block",["item-build-tree"],null,[["node","selectItem","onItemRightClick","tooltipSource","plainDragDrop"],[["get",["item"]],"selectItem","onItemRightClicked",["get",["tooltipSource"]],["get",["plainDragDrop"]]]],1]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","build-tree-child"],["flush-element"],["text","\\n"],["block",["if"],[["get",["item","from","length"]]],null,2,0],["text","    "],["close-element"],["text","\\n"]],"locals":["item"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(123)) && s.__esModule ? s : {
                    default: s
                };
            n(124);
            var l = n(110),
                a = n(111);
            var r = o.Ember.Component.extend({
                classNames: ["item-set-item-filter-panel"],
                layout: i.default,
                currentSelectedFilters: null,
                init: function() {
                    this._super(...arguments), this.set("currentSelectedFilters", o.Ember.A()), this.set("itemCategoryFilterGroups", o.Ember.A(o.Lodash.map(a.ITEM_CATEGORY_FILTER_GROUPS, (e => o.Ember.Object.create({
                        name: e.name,
                        displayName: this.get(`tra.item_sets_filter_name_${e.name}`),
                        on: !1,
                        filters: o.Ember.A(e.filters)
                    }))))), this.send("clearFilters")
                },
                screenReleasedObserver: o.Ember.observer("screenReleased", (function() {
                    this.send("clearFilters")
                })),
                actions: {
                    toggleFilter: function(e) {
                        const t = this.get("currentSelectedFilters");
                        t.includes(e.filters) ? t.removeObject(e.filters) : t.pushObject(e.filters), this.sendAction("onFiltersUpdated", t)
                    },
                    clearFilters: function() {
                        l.sfx.genericClickSm.play();
                        const e = this.get("itemCategoryFilterGroups");
                        o.Lodash.each(e, (e => {
                            e.set("on", !1)
                        })), this.get("currentSelectedFilters").clear()
                    }
                }
            });
            t.default = r
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "a/9yORw9",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-filter-panel-component\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-filter-panel-component\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-filter-panel-component\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","filter-panel-buttons"],["flush-element"],["text","\\n  "],["open-element","span",[]],["static-attr","class","clear-all-button"],["modifier",["action"],[["get",[null]],"clearFilters"]],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],1],["text","    ✕ "],["append",["unknown",["tra","item_sets_filter_clear_button_text"]],false],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","item-set-filter-groups"],["flush-element"],["text","\\n"],["block",["each"],[["get",["itemCategoryFilterGroups"]]],null,0],["close-element"],["text","\\n\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","lol-uikit-flat-checkbox",[]],["dynamic-attr","class",["concat",["item-filter filter-",["unknown",["filter","name"]]]]],["dynamic-attr","disabled",["unknown",["filter","disabled"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggleFilter",["get",["filter"]]],null],null],["flush-element"],["text","\\n      "],["append",["helper",["input"],null,[["slot","type","checked","tabindex"],["input","checkbox",["get",["filter","on"]],"-1"]]],false],["text","\\n      "],["open-element","label",[]],["static-attr","slot","label"],["flush-element"],["append",["unknown",["filter","displayName"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":["filter"]},{"statements":[["text","      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n        "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","item_sets_button_tooltip_clear_filters"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = d(n(117)),
                i = d(n(126)),
                l = d(n(127));
            n(128);
            var a = n(110),
                r = n(111),
                c = n(120);

            function d(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const {
                RunMixin: m
            } = s.EmberAddons.EmberLifeline, p = (e, t) => (t + 1) % 4 == 0 ? `item-set-item-display item-${e.id} end-of-row` : `item-set-item-display item-${e.id}`;
            var u = s.Ember.Component.extend(m, o.default, {
                classNames: ["item-set-item-grid"],
                layout: l.default,
                itemSetsService: s.Ember.inject.service("itemSets"),
                isPotatoModeEnabled: s.Ember.computed.readOnly("itemSetsService.isPotatoModeEnabled"),
                currentLocale: s.Ember.computed.readOnly("itemSetsService.currentLocale"),
                initialNumOfItemsToRender: s.Ember.computed("itemSetsService.items", "isPotatoModeEnabled", (function() {
                    return this.get("isPotatoModeEnabled") ? 28 : this.get("itemSetsService.items") ? this.get("itemSetsService.items").length : 0
                })),
                allItemsChanged: s.Ember.on("init", s.Ember.observer("itemSetsService.items", (function() {
                    this.get("itemSetsService.items") && (this.resetNumOfItemsToRenderToInitial(), this.initialDraw())
                }))),
                filteredAndSortedItems: s.Ember.computed("itemSetsService.items", "textFilter", "categoryFilters.[]", "filterActive", "itemsFilter", "sortOrder", "currentLocale", "hideTrinket", (function() {
                    const e = this.get("itemSetsService.items"),
                        t = this.get("textFilter"),
                        n = this.get("categoryFilters"),
                        s = this.get("filterActive"),
                        o = this.get("itemsFilter"),
                        l = this.get("sortOrder"),
                        a = this.get("currentLocale"),
                        r = this.get("hideTrinket"),
                        c = i.default.filterItems(e, {
                            textFilter: t,
                            categoryFilters: n,
                            itemsFilter: o,
                            filterActive: s,
                            hideTrinket: r
                        });
                    return i.default.sortItems(c, l, a)
                })),
                filteredAndSortedItemsChanged: s.Ember.observer("filteredAndSortedItems", (function() {
                    this.resetNumOfItemsToRenderToInitial(), this.redraw(), this.scrollToTop()
                })),
                resetNumOfItemsToRenderToInitial: function() {
                    const e = this.get("initialNumOfItemsToRender");
                    e > 0 && this.set("numOfItemsToRender", e)
                },
                initialDraw: function() {
                    this.draw(!0)
                },
                redraw: function() {
                    return this.draw(!1)
                },
                draw: function(e) {
                    const t = this.get("element"),
                        n = s.d3.select(t).select(".filtered-items");
                    e && n.selectAll(".item-set-item-display").remove();
                    const o = this.get("filteredAndSortedItems").slice(0, this.get("numOfItemsToRender")),
                        i = n.selectAll(".item-set-item-display").data(o, (e => e.id));
                    return i.enter().call(this.createItemThumbnail.bind(this)), e || i.exit().attr("class", (e => `item-set-item-display item-${e.id} hidden`)), i.attr("class", p), e || i.order(), Promise.resolve()
                },
                createItemThumbnail: function(e) {
                    const t = e.append("li").attr("item-id", (e => e.id)).attr("has-active", (e => e.hasActive)).on("mouseenter", (() => this.send("hoverSFX"))).on("click", (e => this.send("selectItem", e))).on("contextmenu", (e => {
                        event.preventDefault(), this.send("addItemToCurrentBlock", e)
                    }));
                    this.get("plainDragDrop") && (t.attr("draggable", "true"), t.on("dragstart", (e => {
                        event.dataTransfer.setData(r.ITEM_MEDIA_TYPE, JSON.stringify(e)), event.dataTransfer.dropEffect = "copy", event.srcElement.dispatchEvent(new Event("mouseleave")), a.sfx.drag.play()
                    }))), t.append("img").attr("class", "item-icon").attr("src", (e => e.iconPath)).call(this.assignTooltips.bind(this)), t.append("span").attr("class", "item-price").text((e => e.priceTotal ? e.priceTotal : this.get("tra.item_sets_item_price_free")))
                },
                assignTooltips: function(e) {
                    e.each(((t, n, s) => {
                        this.assignTooltip(e[s][n], t)
                    }))
                },
                assignTooltip: function(e, t) {
                    const n = this.get("tooltipSource"),
                        o = document.createElement("div");
                    s.TooltipManager.assign(e, o, {}, {
                        ComponentFactory: s.ComponentFactory,
                        targetAnchor: {
                            x: "left",
                            y: "center"
                        },
                        tooltipAnchor: {
                            x: "right",
                            y: "center"
                        },
                        offset: {
                            x: 0,
                            y: 0
                        },
                        hideEvent: "mouseleave"
                    }), e.addEventListener("tooltip:beforeShow", (function() {
                        c.itemTooltipManager.updateTooltip(t, n);
                        const e = c.itemTooltipManager.getDomNode();
                        o.appendChild(e), 0 === this.x && 0 === this.y && this.dispatchEvent(new Event("mouseleave"))
                    }))
                },
                didInsertElement: function() {
                    this._super(...arguments);
                    const e = this.element.querySelector("lol-uikit-scrollable");
                    e.addEventListener("scroll-change", this._scrollChangeHandler.bind(this)), this.get("plainDragDrop") || this._createSortableForContainer(e)
                },
                sortableEnabledContainers: [{
                    name: "item-set-editor",
                    config: {
                        group: {
                            name: r.ITEM_GRID_SORTABLE_GROUP_NAME,
                            put: [r.ITEM_EDITOR_BLOCKS_SORTABLE_GROUP_NAME, r.ITEM_BUILD_PATH_SORTABLE_GROUP_NAME],
                            pull: "clone",
                            dataIdAttr: "sortable-data-id"
                        }
                    }
                }],
                _createSortableForContainer: function(e) {
                    const t = this.get("container"),
                        n = this.get("sortableEnabledContainers").find((e => e.name === t));
                    if (!n) return;
                    const s = Object.assign({
                        draggable: ".item-set-item-display",
                        sort: !1,
                        forceFallback: !0,
                        fallbackOnBody: !0,
                        onStart: this._onDragStartGridItem.bind(this),
                        onAdd: this._onAddItem.bind(this),
                        onClone: this._onClone.bind(this)
                    }, n.config);
                    this._createSortable(e, s)
                },
                _onDragStartGridItem: function(e) {
                    if (e.item.children.length > 0) {
                        e.item.children[0].dispatchEvent(new Event("mouseleave"))
                    }
                    a.sfx.drag.play()
                },
                _onAddItem: function(e) {
                    if (a.sfx.drop.play(), "item-set-editor" === this.get("container")) {
                        const t = e.item.getAttribute("item-index"),
                            n = e.item.getAttribute("block-index");
                        t && n && this.sendAction("onAddItemToGrid", n, t)
                    }
                    if ("preferred-slots" === this.get("container")) {
                        const t = e.item.getAttribute("item-id"),
                            n = e.item.getAttribute("slot-id");
                        this.sendAction("onAddItemToGrid", parseInt(n), t)
                    }
                    e.item.parentNode.removeChild(e.item)
                },
                _onClone: function(e) {
                    e.clone.__data__ = e.item.__data__, e.clone.addEventListener("contextmenu", (t => {
                        t.preventDefault(), this.sendAction("onItemRightClick", e.item.__data__)
                    })), e.clone.addEventListener("click", (t => {
                        t.preventDefault(), this.send("selectItem", e.item.__data__)
                    }));
                    const t = e.item.getAttribute("item-id"),
                        n = this.get("itemSetsService.indexedItems")[t];
                    this.assignTooltip(e.clone.querySelector("img.item-icon"), n)
                },
                selectedItem: null,
                lastSelectedElement: null,
                _scrollChangeHandler: function() {
                    const e = this.get("filteredAndSortedItems");
                    if (e && this.get("numOfItemsToRender") < e.length) {
                        const t = this.get("numOfItemsToRender") + 12;
                        return this.set("numOfItemsToRender", Math.min(t, e.length)), new Promise((e => {
                            this.runTask((() => this.redraw().then((() => e()))), 1)
                        }))
                    }
                    return Promise.resolve()
                },
                scrollToTop: function() {
                    this.$(".filtered-items") && (this.$(".filtered-items")[0].scrollTop = 0)
                },
                actions: {
                    selectItem: function(e) {
                        this.get("lastSelectedElement") && this.get("lastSelectedElement").removeAttribute("selected"), event.currentTarget.setAttribute("selected", !0), this.set("lastSelectedElement", event.currentTarget), this.sendAction("selectItem", e)
                    },
                    deselectItem: function() {
                        this.get("lastSelectedElement") === event.currentTarget && (this.set("hasItemSelected", !1), this.get("lastSelectedElement").removeAttribute("selected"), this.sendAction("selectItem", null))
                    },
                    addItemToCurrentBlock: function(e) {
                        this.sendAction("onItemRightClick", e)
                    },
                    hoverSFX: function() {
                        a.sfx.gridHover.play()
                    }
                }
            });
            t.default = u
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(112)) && s.__esModule ? s : {
                    default: s
                };
            var l = {
                filterItems: function(e, t = {}) {
                    t.itemsFilter && (e = e.filter((e => t.itemsFilter.has(e.id))));
                    const n = function(e, t, n) {
                            return o.Lodash.filter(e, (e => !e.shouldHideFromItemGrid && (!t || e.hasActive) && (!n || !e.isTrinket)))
                        }(e, t.filterActive, t.hideTrinket),
                        s = function(e, t) {
                            return t ? o.Lodash.filter(e, (e => i.default.filter(t, [e.name]).length > 0 || o.Lodash.includes(e.description.toLocaleLowerCase(), t.toLocaleLowerCase()))) : e
                        }(n, t.textFilter),
                        l = function(e, t) {
                            return t && t.length ? e.filter((e => t.every((t => t.find((t => e.categories.includes(t))))))) : e
                        }(s, t.categoryFilters);
                    return l
                },
                sortItems: function(e, t, n) {
                    return t && t.fields && t.order ? function(e, t, n) {
                        return e.sort(((e, s) => {
                            let i = 0;
                            for (let l = 0; l < t.fields.length; l++) {
                                const a = t.fields[l],
                                    r = o.Lodash.get(e, a),
                                    c = o.Lodash.get(s, a);
                                if (i = o.Lodash.isNumber(r) ? r - c : r.localeCompare(c, n), "desc" === t.order[l] && (i *= -1), 0 !== i) break
                            }
                            return i
                        }))
                    }(e, t, n) : e
                }
            };
            t.default = l
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "boikQNKu",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-grid-component\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-grid-component\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-grid-component\\\\index.js\\" "],["text","\\n"],["open-element","lol-uikit-scrollable",[]],["dynamic-attr","class",["concat",["filtered-items ",["helper",["if"],[["get",["isShowingBuildTree"]],"collapse"],null]]]],["static-attr","overflow-masks","enabled"],["flush-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = f(n(130));
            n(131);
            var i = f(n(132)),
                l = f(n(133)),
                a = f(n(134)),
                r = f(n(135)),
                c = f(n(117)),
                d = f(n(136)),
                m = n(110),
                p = n(111),
                u = n(120),
                h = n(137),
                g = f(n(138));

            function f(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const {
                RunMixin: _
            } = s.EmberAddons.EmberLifeline, y = s.UIKit.getContextualNotificationManager(), b = s.UIKit.getFlyoutManager(), k = s.UIKit.getTemplateHelper();
            var S = s.Ember.Component.extend(_, s.Ember.Mixin.create(r.default, c.default, d.default), {
                classNames: ["item-set-editor-component"],
                classNameBindings: ["isLoaded"],
                layout: o.default,
                modalManager: s.ModalManager,
                _eventSource: p.TELEMETRY_EVENT_SOURCE_EDITOR,
                EmberApplicationFactory: s.EmberApplicationFactory,
                exportItemSets: g.default,
                maxTitleLength: p.TITLE_LENGTH_LIMIT,
                itemSetsService: s.Ember.inject.service("itemSets"),
                cannotCreateSets: s.Ember.computed.readOnly("itemSetsService.cannotAddMoreSets"),
                cannotRemoveSet: s.Ember.computed.readOnly("itemSetsService.isSaving"),
                itemSetsData: s.Ember.computed.readOnly("itemSetsService.itemSetsData"),
                indexedItems: s.Ember.computed.readOnly("itemSetsService.indexedItems"),
                indexedChampions: s.Ember.computed.readOnly("itemSetsService.indexedChampions"),
                indexedMaps: s.Ember.computed.readOnly("itemSetsService.indexedMaps"),
                isLoaded: s.Ember.computed.readOnly("itemSetsService.isLoaded"),
                itemHotkeys: s.Ember.computed.readOnly("itemSetsService.itemHotkeys"),
                exportButtonTooltip: s.Ember.computed("isDirty", "tra.item_sets_button_tooltip_export_single", "tra.item_sets_button_tooltip_save_before_export", (function() {
                    return this.get("isDirty") ? this.get("tra").get("item_sets_button_tooltip_save_before_export") : this.get("tra").get("item_sets_button_tooltip_export_single")
                })),
                preferredSlotsDisabled: s.Ember.computed.bool("itemSetsService.itemSetsConfig.PreferredItemSlotsDisabled"),
                itemSetSharingDisabled: s.Ember.computed.bool("itemSetsService.itemSetsConfig.ItemSetSharingDisabled"),
                itemSetRenamingDisabled: s.Ember.computed.bool("itemSetsService.itemSetsConfig.ItemSetRenamingDisabled"),
                proposedName: "",
                itemSetsSummary: s.Ember.computed("itemSetsData", "currentSet", "currentSet.title", (function() {
                    const {
                        itemSets: e
                    } = this.get("itemSetsData"), t = this.get("currentSet");
                    return s.Ember.A(e.map((e => s.Ember.Object.create({
                        uid: e.uid,
                        title: e.uid === t.get("uid") ? t.get("title") : e.title,
                        current: e.uid === t.get("uid")
                    }))))
                })),
                helmetIcon: n(139),
                _currentBlock: null,
                currentBlock: s.Ember.computed("_currentBlock", "currentSet", {
                    get() {
                        return !this.get("currentSet.blocks").indexOf(this.get("_currentBlock")) > -1 ? this.get("currentSet.blocks.lastObject") : this.get("_currentBlock")
                    },
                    set(e, t) {
                        return this.get("currentSet.blocks") && this.get("currentSet.blocks").forEach((e => e.set("isCurrent", !1))), t && t.set("isCurrent", !0), this.set("_currentBlock", t), t
                    }
                }),
                currentSet: s.Ember.computed("currentSetUid", "itemSetsData", "indexedItems", "indexedChampions", "indexedMaps", (function() {
                    const {
                        itemSets: e
                    } = this.get("itemSetsData"), t = this.get("indexedItems"), n = this.get("indexedChampions"), o = this.get("indexedMaps"), i = this.get("currentSetUid"), l = this._validateCurrentSetData(e, t, n, o, i);
                    if (!l) return s.Ember.Object.create();
                    const r = a.default.create({
                        itemDict: t,
                        indexedChampions: n,
                        indexedMaps: o
                    });
                    return r.setJSON(l), r.get("blocks") && r.get("blocks.lastObject") && r.set("blocks.lastObject.isCurrent", !0), r
                })),
                _validateCurrentSetData: function(e, t, n, s, o) {
                    return t && n && s && e && !(e.length <= 0) ? e.find((e => e.uid === o)) : null
                },
                sortOptions: s.Ember.computed("tra", (function() {
                    const e = p.SORT_OPTIONS;
                    return s.Lodash.each(e, (e => {
                        e.displayName = this.get(`tra.item_sets_sort_option_${e.traKey}`), e.selected = !1
                    })), s.Ember.A(s.Lodash.map(p.SORT_OPTIONS, (e => s.Ember.Object.create(s.Lodash.assign(e, {
                        displayName: this.get(`tra.item_sets_sort_option_${e.traKey}`),
                        selected: !1
                    })))))
                })),
                isShowingSortOptions: !1,
                isShowingChampSelector: !1,
                sortableSections: null,
                hasItemSelected: s.Ember.computed.bool("selectedItem"),
                isDirty: !1,
                noBlocksInSet: s.Ember.computed.equal("currentSet.blocks.length", 0),
                isSaveDisabled: s.Ember.computed.not("isDirty"),
                willDestroyHandlers: s.Ember.A(),
                isAssociatedWithAnyChampion: s.Ember.computed.gt("currentSet.associatedChampions.length", 0),
                isShowingBuildTree: s.Ember.computed("selectedItem.from.length", "buildIntoItemDisplays.length", (function() {
                    return this.get("selectedItem.from.length") > 0 || this.get("buildIntoItemDisplays.length") > 0
                })),
                champAssociations: s.Ember.computed("currentSet.championDisplays.[]", (function() {
                    const e = this.get("currentSet.championDisplays");
                    return s.Ember.Object.create({
                        champions: s.Lodash.take(e, p.MAX_CHAMPION_ASSOCIATION_DISPLAY),
                        hasMore: e.length > p.MAX_CHAMPION_ASSOCIATION_DISPLAY,
                        hasMoreText: this.get("tra.item_sets_champ_association_has_more")
                    })
                })),
                buildIntoItemDisplays: s.Ember.computed("selectedItem.to", "indexedItems", (function() {
                    const e = this.get("indexedItems");
                    return s.Ember.A((0, s.Lodash)(this.get("selectedItem.to")).map((t => e[t])).filter((e => e && !e.shouldHideFromItemGrid)).value())
                })),
                buildIntoItemObserver: s.Ember.on("init", s.Ember.observer("buildIntoItemDisplays.[]", (function() {
                    s.Ember.run.scheduleOnce("afterRender", this, (() => {
                        this.get("isDestroying") || this.get("isDestroyed") || this._createSortable(this.element.querySelector(".build-into-items"), {
                            draggable: ".build-into-item",
                            sort: !1,
                            forceFallback: !0,
                            fallbackOnBody: !0,
                            group: {
                                name: p.ITEM_BUILD_PATH_SORTABLE_GROUP_NAME,
                                put: !1,
                                pull: "clone",
                                dataIdAttr: "sortable-data-id"
                            },
                            onStart: this._onDragStart.bind(this),
                            onClone: this._onCloneBuildIntoItem.bind(this)
                        })
                    }))
                }))),
                _onCloneBuildIntoItem: function(e) {
                    const t = e.clone;
                    t.removeAttribute("hasTooltip");
                    const n = t.getAttribute("item-id"),
                        s = this.get("indexedItems")[n];
                    t.addEventListener("mouseenter", (e => {
                        this.send("displayItemTooltipById", n, "buildInto", e)
                    })), t.addEventListener("contextmenu", (e => {
                        e.preventDefault(), this.send("addItemToCurrentBlock", s)
                    }))
                },
                _createNewBlock: function(e) {
                    m.sfx.drop.play();
                    const t = l.default.create({
                        type: this.get("tra.item_sets_new_item_block_prefix"),
                        items: s.Ember.A(e),
                        itemToPreferredSlotMap: this.get("currentSet.itemToPreferredSlotMap")
                    });
                    return this.get("currentSet.blocks").pushObject(t), this.send("selectBlock", t), this.set("isDirty", !0), t
                },
                screenReleasedObserver: s.Ember.observer("screenReleased", (function() {
                    this.send("selectSortOption", this.get("sortOptions.0")), this.send("deselectItem"), this.set("itemTextFilter", ""), this.set("currentSetUid", null);
                    const e = this.element.querySelectorAll("lol-uikit-scrollable");
                    for (let t = 0; t < e.length; t++) {
                        const n = e[t];
                        n.scrollTop = 0, n.setAttribute("scrolled-top", !0)
                    }
                })),
                didInsertElement() {
                    this._super(...arguments), this.send("selectSortOption", this.get("sortOptions.0")), this._addEscapeListener(".rename-input", "finishRenameBlock"), this._addEscapeListener(".rename-set-input", "finishRenamingSet"), this.set("beforeHide", this._handleBeforeHide.bind(this));
                    const e = this.get("willDestroyHandlers"),
                        t = this.element.querySelector(".item-set-sections"),
                        n = p.SCROLLABLE_ITEM_BLOCKS_RECT,
                        s = this._getItemBlockScrollHandler.bind(this)(t, n, {
                            sensitivity: p.SCROLLABLE_AUTO_SCROLL_SENSITIVITY,
                            step: p.SCROLLABLE_AUTO_SCROLL_STEP
                        });
                    return t.addEventListener("mousemove", s), e.pushObject((() => {
                        t.removeEventListener("mousemove", s)
                    })), this._startTelemetrySession(), new Promise((e => {
                        this.runTask((() => {
                            this._activateSortable.call(this).then((() => e()))
                        }), 1)
                    }))
                },
                _getItemBlockScrollHandler: function(e, t, n) {
                    return s => {
                        s.buttons > 0 && (s.clientY < t.top + n.sensitivity && (e.scrollTop -= n.step), s.clientY > t.bottom - n.sensitivity && (e.scrollTop += n.step))
                    }
                },
                _handleBeforeHide: function() {
                    return this.get("nameErrorNotification") && y.remove(this.get("nameErrorNotification")), this.set("nameErrorNotification", null), this.set("renameIsPending", !1), this._popUpUnsaveDialogIfDirty()
                },
                _popUpUnsaveDialogIfDirty: function(e) {
                    return this.get("isDirty") ? this._popUpDialogue(this.get("dialogueContents.save")).then((() => e && e.skipSave ? this.get("currentSet").toJSON() : this._saveCurrentItemSet())).catch((() => {
                        this.get("currentSet").restore(), this.set("isDirty", !1)
                    })) : Promise.resolve()
                },
                _saveCurrentItemSet: function() {
                    if (this.get("isSaveDisabled")) return Promise.resolve();
                    const e = this.get("currentSet");
                    return this.get("itemSetsService").saveItemSet(e.toJSON()).then((() => {
                        this.set("isDirty", !1)
                    }))
                },
                willDestroy: function() {
                    this._super(...arguments), this.get("willDestroyHandlers").forEach((e => e.call(this))), this._endTelemetrySession()
                },
                _addEscapeListener: function(e, t) {
                    const n = this.$(this.element.querySelector(e));
                    void 0 !== n && n.on("keydown", (e => {
                        27 === e.keyCode && this.send(t)
                    }))
                },
                _activateSortableIfNotDestroying: function() {
                    this.get("isDestroying") || this.get("isDestroyed") || this._activateSortable()
                },
                sortableObserver: s.Ember.observer("currentSet", "currentSet.blocks.[]", (function() {
                    s.Ember.run.scheduleOnce("afterRender", this, this._activateSortableIfNotDestroying)
                })),
                _moveItemBetweenBlock: function(e, t, n, s) {
                    const o = this.get(`currentSet.blocks.${e}`),
                        i = this.get(`currentSet.blocks.${n}`),
                        l = this.get(`currentSet.blocks.${e}.items.${t}`);
                    return o.get("items").removeObject(l), this.set("isDirty", !0), this._safeInsert(i, l, s).catch((e => {
                        if ("MAX_ITEM_PER_BLOCK" === e.type) return this._safeInsert(o, l, t);
                        throw e
                    }))
                },
                _safeInsert: function(e, t, n) {
                    const s = e.get("items");
                    return new Promise(((e, o) => {
                        this.runTask((() => {
                            if (s.length >= p.MAX_ITEM_PER_BLOCK) return o({
                                type: "MAX_ITEM_PER_BLOCK",
                                msg: `block cannot have more than ${p.MAX_ITEM_PER_BLOCK} items`
                            });
                            n < s.length ? s.insertAt(n, t) : s.pushObject(t), e(), this.set("isDirty", !0)
                        }), 1)
                    }))
                },
                _onAddToEmptyArea: function(e) {
                    if (e.from) {
                        e.item.parentNode.removeChild(e.item);
                        const t = e.from.getAttribute("block-index"),
                            n = this.get(`currentSet.blocks.${t}`),
                            {
                                oldIndex: s
                            } = e,
                            o = this.get(`currentSet.blocks.${t}.items.${s}`);
                        n.get("items").removeObject(o), this.set("isDirty", !0)
                    }
                },
                _onAddToEditorBlock: function(e) {
                    e.item.parentNode.removeChild(e.item);
                    const t = this._createNewBlock(),
                        n = e.from.getAttribute("block-index");
                    if (s.Lodash.isNil(n)) {
                        const n = e.item.getAttribute("item-id"),
                            s = i.default.create(this.get("indexedItems")[n]);
                        s.set("preferredSlot", this.get("currentSet.itemToPreferredSlotMap")[n]), t.get("items").pushObject(s)
                    } else this._moveItemBetweenBlock(n, e.oldIndex, this.get("currentSet.blocks").indexOf(t), 0);
                    return this.set("isDirty", !0), new Promise((e => {
                        this.runTask((() => {
                            const t = this.$(this.element.querySelector(".right-container .item-set-sections"));
                            t && t.animate({
                                scrollTop: t[0].scrollHeight
                            }, 100), this._activateSortable.call(this).then((() => e()))
                        }), 100)
                    }))
                },
                _onAddToBlock: function(e) {
                    m.sfx.drop.play();
                    const t = e.from.getAttribute("block-index");
                    if (s.Lodash.isNil(t)) {
                        const t = Array.prototype.indexOf.call(e.item.parentNode.children, e.item),
                            n = this.get("indexedItems"),
                            s = e.item.getAttribute("item-id"),
                            o = e.item.parentNode.getAttribute("block-index"),
                            l = this.get(`currentSet.blocks.${o}`);
                        e.item.parentNode.removeChild(e.item);
                        const a = i.default.create(n[s]);
                        a.set("preferredSlot", this.get("currentSet.itemToPreferredSlotMap")[s]), this._safeInsert(l, a, t)
                    } else {
                        const n = e.to.getAttribute("block-index"),
                            {
                                oldIndex: s
                            } = e,
                            {
                                newIndex: o
                            } = e;
                        e.item.parentNode.removeChild(e.item), this._moveItemBetweenBlock(t, s, n, o)
                    }
                },
                _onUpdateBlock: function(e) {
                    m.sfx.drop.play();
                    const {
                        newIndex: t
                    } = e, {
                        oldIndex: n
                    } = e, s = e.from.getAttribute("block-index");
                    if (e.from === e.to) {
                        const o = this.get(`currentSet.blocks.${s}`),
                            i = o.get("items");
                        e.item.parentNode.removeChild(e.item);
                        const l = i[n];
                        return i.removeAt(n), this.set("isDirty", !0), this._safeInsert(o, l, t)
                    }
                    return Promise.resolve()
                },
                _activateSortable: function() {
                    const e = this.element.querySelectorAll("ul.item-list"),
                        t = this.element.querySelector("div.bottom"),
                        n = this.element.querySelector("div.item-grid-and-build-path");
                    this._createSortable(n, {
                        group: {
                            name: p.EMPTY_AREA_SORTABLE_GROUP_NAME,
                            put: [p.ITEM_EDITOR_BLOCKS_SORTABLE_GROUP_NAME],
                            pull: !1
                        },
                        draggable: ".none",
                        onAdd: this._onAddToEmptyArea.bind(this)
                    }), this._createSortable(t, {
                        group: {
                            name: p.ITEM_EDITOR_BLOCKS_SORTABLE_GROUP_NAME,
                            put: [p.ITEM_EDITOR_BLOCKS_SORTABLE_GROUP_NAME, p.ITEM_GRID_SORTABLE_GROUP_NAME, p.ITEM_BUILD_PATH_SORTABLE_GROUP_NAME],
                            pull: !1
                        },
                        onAdd: this._onAddToEditorBlock.bind(this)
                    });
                    for (let t = 0; t < e.length; t++) {
                        const n = e[t];
                        this._createSortable(n, {
                            sort: !0,
                            animation: 50,
                            forceFallback: !0,
                            fallbackOnBody: !0,
                            group: {
                                name: p.ITEM_EDITOR_BLOCKS_SORTABLE_GROUP_NAME,
                                put: [p.ITEM_EDITOR_BLOCKS_SORTABLE_GROUP_NAME, p.ITEM_GRID_SORTABLE_GROUP_NAME, p.ITEM_BUILD_PATH_SORTABLE_GROUP_NAME],
                                pull: !0
                            },
                            onStart: this._onDragStart.bind(this),
                            onAdd: this._onAddToBlock.bind(this),
                            onUpdate: this._onUpdateBlock.bind(this)
                        })
                    }
                    return Promise.resolve()
                },
                _onDragStart: function(e) {
                    if (e.item.children.length > 0) {
                        e.item.children[0].dispatchEvent(new Event("mouseleave"))
                    }
                    this.set("isDragging", !0), m.sfx.drag.play()
                },
                _getNextItemSetUidAfterRemove: function() {
                    const {
                        itemSets: e
                    } = this.get("itemSetsData");
                    if (e.length <= 1) return null;
                    const t = e.findIndex((e => e.uid === this.get("currentSetUid")));
                    return t === e.length - 1 ? e[t - 1].uid : e[t + 1].uid
                },
                _setPreferredSlot: function(e, t) {
                    this.get("currentSet").setPreferredSlot(e.id, t), this.set("isDirty", !0)
                },
                _exportCurrentSetToClipboard: function() {
                    this._sendEvent({
                        id: p.TELEMETRY_EVENT_ID_MAP_EXPORT.clipboard,
                        size: 1
                    }), this.get("exportItemSets").copyToClipboard(this.get("currentSet")), this._popUpAlert(this.get("dialogueContents.clipboardCoplied"))
                },
                _exportCurrentSetToFile: function() {
                    this._sendEvent({
                        id: p.TELEMETRY_EVENT_ID_MAP_EXPORT.file,
                        size: 1
                    }), this.get("exportItemSets").exportToFile(this.get("currentSet"), this.get("tra.item_sets_export_default_file_name") + ".json")
                },
                getTranslatedErrorMessage: function(e) {
                    return "INAPPROPRIATE" === e ? this.get("tra.item_sets_renaming_inappropriate") : "INVALID_CHARACTER" === e ? this.get("tra.item_sets_renaming_invalid_char") : this.get("tra.item_sets_renaming_service_unavailable")
                },
                showNameErrorNotification: function(e) {
                    this.get("nameErrorNotification") && y.remove(this.get("nameErrorNotification"));
                    const t = k.contentBlockDialogSimple(this.getTranslatedErrorMessage(e), "tooltip-small"),
                        n = this.get("element");
                    if (n) {
                        const e = y.add(t, {
                            target: {
                                domNode: n,
                                anchor: {
                                    x: "center",
                                    y: "center"
                                }
                            },
                            offset: {
                                x: -400,
                                y: -300
                            },
                            anchor: {
                                x: "center",
                                y: "bottom"
                            },
                            orientation: "top"
                        });
                        e.onRemove.then((() => {
                            this.set("nameErrorNotification", null)
                        })), this.set("nameErrorNotification", e)
                    }
                },
                actions: {
                    selectCurrentSet: function(e) {
                        if (this.get("currentSetUid") !== e) return this._popUpUnsaveDialogIfDirty().then((() => {
                            this.set("currentSetUid", e)
                        }))
                    },
                    ascendBlock: function(e, t) {
                        m.sfx.genericClickSm.play(), t.stopPropagation();
                        const n = this.get("currentSet.blocks"),
                            s = n.indexOf(e);
                        0 !== n.indexOf(e) && (n.removeObject(e), n.insertAt(s - 1, e), this.set("isDirty", !0))
                    },
                    descendBlock: function(e, t) {
                        m.sfx.genericClickSm.play(), t.stopPropagation();
                        const n = this.get("currentSet.blocks"),
                            s = n.indexOf(e);
                        n.indexOf(e) !== n.length - 1 && (s + 2 > n.length ? n.pushObject(e) : n.insertAt(s + 2, e), n.removeAt(s, 1), this.set("isDirty", !0))
                    },
                    clearCurrentSet: function() {
                        return this._popUpDialogue(this.get("dialogueContents.clear")).then((() => {
                            this.set("currentSet.blocks", s.Ember.A()), this.set("currentSet.itemToPreferredSlotMap", {}), this.set("currentBlock", null), this.set("isDirty", !0)
                        }))
                    },
                    updateCategoryFilters: function(e) {
                        this.set("selectedCategories", e)
                    },
                    createNewItemSet: function() {
                        return this._popUpUnsaveDialogIfDirty({
                            skipSave: !0
                        }).then((e => this.get("itemSetsService").createEmptyItemSet({
                            unsavedItemSet: e
                        }).then((e => {
                            this.set("isDirty", !1), this.send("selectCurrentSet", e)
                        }))))
                    },
                    renameSet: function() {
                        if (!this.get("itemSetRenamingDisabled")) return this.set("isRenamingSet", !0), this.set("proposedName", this.get("currentSet.title")), new Promise((e => this.runTask((() => {
                            const t = this.element.querySelector(".left-col input");
                            t && t.focus(), e()
                        }), 1)))
                    },
                    finishRenamingSet: function() {
                        if (!this.get("isRenamingSet")) return Promise.resolve();
                        this.set("isRenamingSet", !1);
                        const e = this.get("proposedName");
                        return e && "" !== e ? (this.set("renameIsPending", !0), this.get("itemSetsService").sanitize(e, this.get("currentSetUid")).then((e => {
                            if (this.get("renameIsPending"))
                                if (e.success) {
                                    let t = e.name;
                                    const n = this.get("itemSetsService").checkItemSetTitleRename(t, this.get("currentSetUid"));
                                    n.exists && (t = n.newTitle), this.set("currentSet.title", t), this.set("isDirty", !0)
                                } else this.showNameErrorNotification(e.nameCheckResponse.errors[0]);
                            this.set("renameIsPending", !1), this.set("proposedName", "")
                        }))) : Promise.resolve()
                    },
                    renameBlock: function(e) {
                        return this.set("isRenamingBlock", !0), e.set("isRenaming", !0), this.set("proposedName", e.get("type")), new Promise(((e, t) => s.Ember.run.next(this, (() => this.get("destroyed") || this.get("destroying") ? t() : (this.element.querySelector(".rename-input").focus(), e())))))
                    },
                    finishRenameBlock: function() {
                        if (!this.get("isRenamingBlock")) return Promise.resolve();
                        const e = this.get("proposedName"),
                            t = [];
                        return this.get("currentSet.blocks").forEach((n => {
                            if (n.get("isRenaming")) {
                                let s = Promise.resolve(e);
                                "" !== e.trim() && (this.set("renameIsPending", !0), s = this.get("itemSetsService").sanitize(e)), t.push(s.then((e => {
                                    if (this.get("renameIsPending"))
                                        if (e.success) {
                                            const t = e.name ? e.name.trim() : "";
                                            n.set("type", t), this.set("blockNameChanged", !0)
                                        } else e.nameCheckResponse.errors.length > 0 && this.showNameErrorNotification(e.nameCheckResponse.errors[0]);
                                    this.set("isRenamingBlock", !1), n.set("isRenaming", !1)
                                })))
                            }
                        })), Promise.all(t).then((() => {
                            this.set("isDirty", this.get("blockNameChanged")), this.set("renameIsPending", !1), this.set("blockNameChanged", !1), this.set("proposedName", "")
                        }))
                    },
                    createNewBlock: function(e) {
                        this._createNewBlock(e)
                    },
                    deleteBlock: function(e, t) {
                        return m.sfx.genericClickSm.play(), t.stopPropagation(), this._popUpDialogue(this.get("dialogueContents.removeBlock")).then((() => {
                            this.get("currentSet.blocks").removeObject(e), this.get("currentSet").cleanUpPreferredSlots(), this.get("currentBlock") === e && this.set("currentBlock", null), this.set("isDirty", !0)
                        })).catch((() => {}))
                    },
                    reduceStackOrRemoveItemFromBlock: function(e, t) {
                        const n = e.get("items"),
                            s = n.get(t);
                        s.get("stackable") && s.get("count") > 1 ? s.set("count", s.get("count") - 1) : (n.removeAt(t), this.get("currentSet").cleanUpPreferredSlots()), this.set("isDirty", !0)
                    },
                    onLeftClickBlockItem: function(e) {
                        this.send(e.get("stackable") ? "increaseStack" : "selectItem", e)
                    },
                    openPreferredSlotMenu: function(e, t) {
                        if (!this.get("preferredSlotsDisabled") && !e.isTrinket && !e.shouldHideFromItemGrid) {
                            const n = t.target.parentElement;
                            b.unassignFlyout(n), b.assignFlyout(n, "PreferredSlotsMenuComponent", {
                                itemHotkeys: this.get("itemHotkeys"),
                                setPreferredSlot: t => this._setPreferredSlot(e, t),
                                selectedSlot: e.get("preferredSlot")
                            }, {
                                showEvent: "show",
                                hideEvent: "hide",
                                targetAnchor: {
                                    x: "center",
                                    y: "top"
                                },
                                tooltipAnchor: {
                                    x: "center",
                                    y: "bottom"
                                },
                                orientation: "top",
                                animated: "true",
                                offset: {
                                    x: -2,
                                    y: -17
                                },
                                backdropCutout: !1,
                                closeWhenOutsideClicked: !0,
                                closeWhenInsideClicked: !0,
                                ComponentFactory: s.ComponentFactory
                            }), b.sendEvent(n, "show")
                        }
                    },
                    increaseStack: function(e) {
                        e.get("stackable") && e.get("count") < e.get("maxStacks") && (e.set("count", e.get("count") + 1), this.set("isDirty", !0))
                    },
                    removeItemFromBlockByIndex: function(e, t) {
                        this.get(`currentSet.blocks.${e}`).get("items").removeAt(parseInt(t)), this.get("currentSet").cleanUpPreferredSlots(), this.set("isDirty", !0)
                    },
                    saveCurrentItemSet: function() {
                        return this._saveCurrentItemSet()
                    },
                    removeCurrentSet: function() {
                        return this._popUpDialogue(this.get("dialogueContents.remove")).then((() => {
                            const e = this._getNextItemSetUidAfterRemove();
                            this.get("itemSetsService").removeItemSetByUid(this.get("currentSetUid")).then((() => {
                                this.set("isDirty", !1), e ? this.send("selectCurrentSet", e) : s.ItemSetsApi.hideItemSetModal()
                            }))
                        })).catch((() => {}))
                    },
                    duplicateCurrentSet: function() {
                        const e = this.get("currentSetUid");
                        return this._popUpUnsaveDialogIfDirty({
                            skipSave: !0
                        }).then((t => this.get("itemSetsService").duplicateItemSetByUid(e, {
                            unsavedItemSet: t
                        }).then((e => {
                            this.set("isDirty", !1), this.send("selectCurrentSet", e)
                        }))))
                    },
                    toggleSortOptions: function() {
                        m.sfx.genericClickSm.play();
                        const e = this.get("isShowingSortOptions");
                        e || this.runTask((() => {
                            const e = this.element.querySelector("lol-uikit-dialog-frame.sort-options-dialog");
                            e && e.focus()
                        }), 1), this.set("isShowingSortOptions", !e)
                    },
                    onSortOptionsFocusOut: function() {
                        this.runTask((() => {
                            this.get("isShowingSortOptions") && this.set("isShowingSortOptions", !1)
                        }), 200)
                    },
                    selectSortOption: function(e) {
                        m.sfx.genericClickSm.play();
                        const t = this.get("currentSortOption");
                        t && t.set("selected", !1), e.set("selected", !0), this.set("currentSortOption", e), this.set("isShowingSortOptions", !1)
                    },
                    selectBlock: function(e) {
                        this.set("currentBlock", e)
                    },
                    selectItem: function(e) {
                        this.set("selectedItem", e), this.runTask((() => {
                            const e = this.element.querySelector(".filtered-items");
                            e && e.dispatchEvent(new Event("scroll"))
                        }), 1)
                    },
                    deselectItem: function() {
                        m.sfx.genericClickSm.play(), this.set("selectedItem", null)
                    },
                    toggleChampSelector: function() {
                        m.sfx.genericClickSm.play();
                        const e = this.get("isShowingChampSelector");
                        e || this.runTask((() => {
                            const e = this.element.querySelector("lol-uikit-dialog-frame.champ-selector-dialog");
                            e && e.focus()
                        }), 1), this.set("isShowingChampSelector", !e)
                    },
                    onChampSelectorFocusOut: function(e) {
                        e && !e.relatedTarget && this.runTask((() => {
                            this.get("isShowingChampSelector") && this.set("isShowingChampSelector", !1)
                        }), 200)
                    },
                    toggleMapAssociation: function(e) {
                        m.sfx.genericClickSm.play();
                        const t = this.get("currentSet.associatedMaps");
                        t.includes(e) ? t.removeObject(e) : t.pushObject(e), this.set("isDirty", !0)
                    },
                    toggleChampAssociation: function(e) {
                        m.sfx.gridClick.play();
                        const t = this.get("currentSet.associatedChampions");
                        t.includes(e) ? t.removeObject(e) : t.pushObject(e), this.set("isDirty", !0)
                    },
                    clearChampAssociation: function() {
                        this.get("currentSet.associatedChampions").clear(), this.set("isDirty", !0)
                    },
                    addItemToCurrentBlock: function(e) {
                        m.sfx.drop.play();
                        const t = i.default.create(e);
                        t.set("preferredSlot", this.get("currentSet.itemToPreferredSlotMap")[e.id]);
                        let n = this.get("currentBlock");
                        return n || (n = this._createNewBlock(), this.set("currentBlock", n)), n.addItem(t) && this.set("isDirty", !0), new Promise(((e, t) => {
                            s.Ember.run.next(this, (() => {
                                if (!this.get("destroyed") && !this.get("destroying")) {
                                    const t = this.get("currentSet.blocks").indexOf(n),
                                        s = this.element.querySelector(".item-set-sections"),
                                        o = this.element.querySelector(`li.section[block-index="${t}"]`),
                                        i = o.querySelector(`li.item-set-item[item-index="${n.items.length-1}"]`);
                                    (0, h.IsVisible)(o, s) || o.scrollIntoView(), (0, h.IsVisible)(i, s) || i.scrollIntoView(), e()
                                }
                                t()
                            }))
                        }))
                    },
                    hoverSFX: function() {
                        m.sfx.gridHover.play()
                    },
                    displayItemTooltipById: function(e, t, n) {
                        const s = this.get("indexedItems")[e];
                        this.send("displayItemTooltip", s, t, n)
                    },
                    displayItemTooltip: function(e, t, n) {
                        m.sfx.gridHover.play();
                        const o = n.target;
                        if (e && "true" !== o.getAttribute("hasTooltip")) {
                            const n = document.createElement("div");
                            o.setAttribute("hasTooltip", "true"), s.TooltipManager.assign(o, n, {}, {
                                ComponentFactory: s.ComponentFactory,
                                targetAnchor: {
                                    x: "left",
                                    y: "center"
                                },
                                tooltipAnchor: {
                                    x: "right",
                                    y: "center"
                                },
                                offset: {
                                    x: 0,
                                    y: 0
                                },
                                hideEvent: "mouseleave"
                            }), o.addEventListener("tooltip:beforeShow", (function() {
                                u.itemTooltipManager.updateTooltip(e, t);
                                const s = u.itemTooltipManager.getDomNode();
                                n.appendChild(s), 0 === this.offsetLeft && 0 === this.offsetWidth && this.dispatchEvent(new Event("mouseleave"))
                            })), s.TooltipManager.show(o)
                        }
                    },
                    openExportOptionMenu: function() {
                        const e = event.target;
                        b.unassignFlyout(e), b.assignFlyout(e, "ItemSetMenuComponent", {
                            menuItems: s.Ember.A([{
                                name: "export-clipboard",
                                display: this.get("tra.item_sets_export_menu_clipboard"),
                                disabled: !1,
                                action: () => this._exportCurrentSetToClipboard()
                            }, {
                                name: "export-file",
                                display: this.get("tra.item_sets_export_menu_file"),
                                disabled: !1,
                                action: () => this._exportCurrentSetToFile()
                            }])
                        }, {
                            showEvent: "show",
                            hideEvent: "hide",
                            targetAnchor: {
                                x: "center",
                                y: "bottom"
                            },
                            tooltipAnchor: {
                                x: "center",
                                y: "top"
                            },
                            orientation: "bottom",
                            animated: "true",
                            offset: {
                                x: -2,
                                y: 15
                            },
                            backdropCutout: !1,
                            closeWhenOutsideClicked: !0,
                            closeWhenInsideClicked: !0,
                            ComponentFactory: s.ComponentFactory
                        }), b.sendEvent(e, "show")
                    }
                }
            });
            t.default = S
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "MTAaRZFf",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-set-editor-component\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-set-editor-component\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-set-editor-component\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","body-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","left-container"],["flush-element"],["text","\\n    "],["append",["helper",["item-filter-panel"],null,[["onFiltersUpdated","screenReleased"],["updateCategoryFilters",["get",["screenReleased"]]]]],false],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","mid-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","item-search-and-sort"],["flush-element"],["text","\\n      "],["open-element","lol-uikit-flat-input",[]],["static-attr","class","item-search"],["flush-element"],["text","\\n        "],["append",["helper",["input"],null,[["type","value","autocomplete","placeholder","maxlength"],["search",["get",["itemTextFilter"]],"off",["get",["tra","item_sets_item_search_place_holder"]],25]]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","item-sort"],["flush-element"],["text","\\n        "],["open-element","lol-uikit-framed-dropdown",[]],["static-attr","id","item-set-sort-dropdown"],["static-attr","direction","downward"],["dynamic-attr","disabled",["unknown",["disabled"]],null],["flush-element"],["text","\\n"],["block",["each"],[["get",["sortOptions"]]],null,24],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],23],["text","        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","item-grid-and-build-path"],["flush-element"],["text","\\n      "],["append",["helper",["item-grid"],null,[["class","container","textFilter","categoryFilters","sortOrder","selectItem","tooltipSource","onItemRightClick","onAddItemToGrid"],["editor-item-grid","item-set-editor",["get",["itemTextFilter"]],["get",["selectedCategories"]],["get",["currentSortOption"]],"selectItem","inventory-editor","addItemToCurrentBlock","removeItemFromBlockByIndex"]]],false],["text","\\n\\n      "],["comment","build path here"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["item-build-path ",["helper",["if"],[["get",["isShowingBuildTree"]],"show"],null]]]],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","icon close"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"deselectItem"],null],null],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],22],["text","        "],["close-element"],["text","\\n\\n        "],["open-element","div",[]],["dynamic-attr","class",["concat",["build-into-items ",["helper",["unless"],[["get",["buildIntoItemDisplays","length"]],"hidden"],null]]]],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","build-into-label"],["flush-element"],["append",["unknown",["tra","item_sets_build_into_text"]],false],["close-element"],["text","\\n"],["block",["each"],[["get",["buildIntoItemDisplays"]]],null,21],["text","        "],["close-element"],["text","\\n\\n        "],["append",["helper",["item-build-tree"],null,[["node","selectItem","onItemRightClick","tooltipSource"],[["get",["selectedItem"]],"selectItem","addItemToCurrentBlock","inventory-editor"]]],false],["text","\\n      "],["close-element"],["text","\\n      "],["comment","build path end"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","right-container"],["flush-element"],["text","\\n\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["top ",["helper",["unless"],[["get",["currentSet","blocks","length"]],"empty"],null]]]],["flush-element"],["text","\\n      "],["open-element","lol-uikit-scrollable",[]],["static-attr","class","item-set-sections"],["static-attr","overflow-masks","enabled"],["flush-element"],["text","\\n        "],["comment","item set section component start"],["text","\\n"],["block",["each"],[["get",["currentSet","blocks"]]],null,20],["text","        "],["comment","item set section component end"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","bottom"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","section-edit-panel"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","drop-area-icon"],["flush-element"],["close-element"],["text","\\n        "],["open-element","span",[]],["static-attr","class","panel-caption"],["flush-element"],["append",["unknown",["tra","item_sets_new_block_drop_area_text"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","top-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","left-col"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isRenamingSet"]]],null,9,8],["text","  "],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","right-col"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","champion-map-associations"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","associated-maps"],["flush-element"],["text","\\n"],["block",["each"],[["get",["currentSet","mapDisplays"]]],null,6],["text","      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","associated-champs"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isAssociatedWithAnyChampion"]]],null,5,2],["text","        "],["open-element","lol-uikit-dialog-frame",[]],["static-attr","caret","top"],["dynamic-attr","class",["concat",["champ-selector-dialog ",["helper",["if"],[["get",["isShowingChampSelector"]],"show"],null]]]],["static-attr","tabindex","0"],["dynamic-attr","onblur",["helper",["action"],[["get",[null]],"onChampSelectorFocusOut"],null],null],["flush-element"],["text","\\n          "],["append",["helper",["champion-selector"],null,[["selectedChamps","toggleChampAssociation","clearAllSelected","onNameSearchBlur"],[["get",["currentSet","associatedChampions"]],"toggleChampAssociation","clearChampAssociation","onChampSelectorFocusOut"]]],false],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","toolbox"],["flush-element"],["text","\\n      "],["append",["helper",["circle-button"],null,[["class","button-type","isDisabled","action","tooltipContent"],[["helper",["if"],[["get",["itemSetSharingDisabled"]],"hidden"],null],"export",["get",["isDirty"]],"openExportOptionMenu",["get",["exportButtonTooltip"]]]]],false],["text","\\n      "],["append",["helper",["circle-button"],null,[["button-type","isDisabled","action","tooltipContent"],["duplicate",["get",["cannotCreateSets"]],"duplicateCurrentSet",["get",["tra","item_sets_button_tooltip_duplicate"]]]]],false],["text","\\n      "],["append",["helper",["circle-button"],null,[["button-type","action","tooltipContent","isDisabled"],["clear","clearCurrentSet",["get",["tra","item_sets_button_tooltip_clear"]],["get",["noBlocksInSet"]]]]],false],["text","\\n      "],["append",["helper",["circle-button"],null,[["button-type","action","isDisabled","tooltipContent"],["delete","removeCurrentSet",["get",["cannotRemoveSet"]],["get",["tra","item_sets_button_tooltip_delete"]]]]],false],["text","\\n      "],["open-element","lol-uikit-flat-button",[]],["dynamic-attr","disabled",["unknown",["isSaveDisabled"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"saveCurrentItemSet"],null],null],["static-attr","class","save-btn"],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],0],["text","        "],["append",["unknown",["tra","item_sets_save_button_text"]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n            "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","item_sets_button_tooltip_save"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n                "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","item_sets_champ_selector_apply_to_all_champ_label"]],false],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","associated-champ"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggleChampSelector"],null],null],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"hoverSFX"],null],null],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],1],["text","            "],["open-element","img",[]],["static-attr","class","champ-icon"],["dynamic-attr","src",["unknown",["helmetIcon"]],null],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","has-more"],["flush-element"],["append",["unknown",["champAssociations","hasMoreText"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["dynamic-attr","class",["concat",["associated-champ champ-",["unknown",["champ","id"]]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggleChampSelector"],null],null],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"hoverSFX"],null],null],["flush-element"],["text","\\n              "],["open-element","img",[]],["static-attr","class","champ-icon"],["dynamic-attr","src",["unknown",["champ","iconPath"]],null],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":["champ"]},{"statements":[["block",["each"],[["get",["champAssociations","champions"]]],null,4],["block",["if"],[["get",["champAssociations","hasMore"]]],null,3]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["dynamic-attr","class",["concat",["associated-map map-",["unknown",["map","id"]]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggleMapAssociation",["get",["map","id"]]],null],null],["flush-element"],["text","\\n            "],["open-element","img",[]],["static-attr","class","map-icon"],["dynamic-attr","src",["unknown",["map","iconPath"]],null],["modifier",["action"],[["get",[null]],"hoverSFX"],[["on"],["mouseEnter"]]],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":["map"]},{"statements":[["text","        "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["static-attr","class","list-group-item"],["dynamic-attr","selected",["unknown",["itemSet","current"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"selectCurrentSet",["get",["itemSet","uid"]]],null],null],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","item-set-dropdown-item-text"],["flush-element"],["append",["unknown",["itemSet","title"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":["itemSet"]},{"statements":[["text","    "],["append",["helper",["circle-button"],null,[["action","button-type","tooltipContent","disabled","isLoading"],["renameSet","edit",["get",["tra","item_sets_button_tooltip_rename"]],["get",["itemSetRenamingDisabled"]],["get",["renameIsPending"]]]]],false],["text","\\n    "],["open-element","lol-uikit-flat-dropdown",[]],["static-attr","stylablecontent",""],["static-attr","id","item-set-dropdown"],["static-attr","direction","downward"],["dynamic-attr","disabled",["unknown",["disabled"]],null],["flush-element"],["text","\\n"],["block",["each"],[["get",["itemSetsSummary"]]],null,7],["text","    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-flat-input",[]],["static-attr","class","rename-set-input"],["flush-element"],["text","\\n        "],["append",["helper",["input"],null,[["maxlength","value","autocomplete","focus-out","enter"],[["get",["maxTitleLength"]],["get",["proposedName"]],"off","finishRenamingSet","finishRenamingSet"]]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                      "],["append",["unknown",["tra","item_sets_item_price_free"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","                      "],["append",["unknown",["item","priceTotal"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","                        "],["open-element","div",[]],["dynamic-attr","class",["concat",["indicator slot-",["unknown",["indicator","slotId"]]," ",["helper",["if"],[["get",["indicator","selected"]],"selected"],null]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":["indicator"]},{"statements":[["text","                "],["open-element","li",[]],["dynamic-attr","item-id",["unknown",["item","id"]],null],["dynamic-attr","item-index",["get",["itemIndex"]],null],["dynamic-attr","block-index",["get",["blockIndex"]],null],["dynamic-attr","class",["concat",["item-set-item from-block ",["helper",["if"],[["get",["item","shouldHideFromItemGrid"]],"legacy"],null]]]],["static-attr","draggable","true"],["dynamic-attr","has-active",["unknown",["item","hasActive"]],null],["flush-element"],["text","\\n                  "],["open-element","div",[]],["dynamic-attr","class",["concat",["img-border-wrapper\\n                             ",["helper",["if"],[["get",["item","hasActive"]],"has-active"],null],"\\n                             ",["helper",["unless"],[["get",["preferredSlotsDisabled"]],"preferred-slot-enabled"],null],"\\n                             ",["helper",["unless"],[["get",["item","hasNoPreferredSlot"]],"has-slot"],null],"\\n                             ",["helper",["if"],[["get",["item","isTrinket"]],"hide-indicator"],null]," "]]],["flush-element"],["text","\\n                    "],["open-element","div",[]],["dynamic-attr","class",["concat",["item-click-area ",["helper",["if"],[["get",["item","hasActive"]],"has-active"],null]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"onLeftClickBlockItem",["get",["item"]]],null],null],["dynamic-attr","oncontextmenu",["helper",["action"],[["get",[null]],"reduceStackOrRemoveItemFromBlock",["get",["block"]],["get",["itemIndex"]]],null],null],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"displayItemTooltip",["get",["item"]],"block"],null],null],["flush-element"],["text","\\n                      "],["open-element","img",[]],["static-attr","class","item-icon"],["dynamic-attr","src",["concat",[["unknown",["item","iconPath"]]]]],["flush-element"],["close-element"],["text","\\n                      "],["open-element","div",[]],["dynamic-attr","class",["concat",["item-count ",["helper",["if"],[["get",["item","stackable"]],"show"],null]]]],["flush-element"],["append",["unknown",["item","count"]],false],["close-element"],["text","\\n                    "],["close-element"],["text","\\n                    "],["open-element","div",[]],["dynamic-attr","class",["concat",["preferred-slot-indicator ",["helper",["if"],[["get",["item","isTrinket"]],"hidden"],null]," ",["helper",["if"],[["get",["preferredSlotsDisabled"]],"hidden"],null]," ",["helper",["if"],[["get",["item","hasNoPreferredSlot"]],"no-slot"],null]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"openPreferredSlotMenu",["get",["item"]]],null],null],["flush-element"],["text","\\n"],["block",["each"],[["get",["item","preferredSlotIndicators"]]],null,12],["text","                    "],["close-element"],["text","\\n                  "],["close-element"],["text","\\n                  "],["open-element","span",[]],["flush-element"],["text","\\n"],["block",["if"],[["get",["item","priceTotal"]]],null,11,10],["text","                  "],["close-element"],["text","\\n                "],["close-element"],["text","\\n"]],"locals":["item","itemIndex"]},{"statements":[["text","                      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n                        "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","item_sets_button_tooltip_remove_block"]],false],["close-element"],["text","\\n                      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n                        "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","item_sets_button_tooltip_move_block_down"]],false],["close-element"],["text","\\n                      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n                        "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","item_sets_button_tooltip_move_block_up"]],false],["close-element"],["text","\\n                      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                    "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n                      "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","item_sets_button_tooltip_edit_block_name"]],false],["close-element"],["text","\\n                    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                "],["open-element","div",[]],["static-attr","class","edit-block-title"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"renameBlock",["get",["block"]]],null],null],["dynamic-attr","style",["concat",["display:",["helper",["if"],[["get",["itemSetRenamingDisabled"]],"none",""],null]]]],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],17],["text","                "],["close-element"],["text","\\n                "],["open-element","span",[]],["static-attr","class","title-text"],["dynamic-attr","ondblclick",["helper",["action"],[["get",[null]],"renameBlock",["get",["block"]]],null],null],["flush-element"],["append",["unknown",["block","type"]],false],["close-element"],["text","\\n\\n                "],["open-element","div",[]],["static-attr","class","block-ctrl-btn"],["flush-element"],["text","\\n                  "],["open-element","div",[]],["static-attr","class","icon arrow-up"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"ascendBlock",["get",["block"]]],null],null],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],16],["text","                  "],["close-element"],["text","\\n                  "],["open-element","div",[]],["static-attr","class","icon arrow-down"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"descendBlock",["get",["block"]]],null],null],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],15],["text","                  "],["close-element"],["text","\\n                  "],["open-element","div",[]],["static-attr","class","icon close"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"deleteBlock",["get",["block"]]],null],null],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],14],["text","                  "],["close-element"],["text","\\n                "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                "],["open-element","lol-uikit-flat-input",[]],["static-attr","class","block-title-rename"],["flush-element"],["text","\\n                  "],["append",["helper",["input"],null,[["class","maxlength","value","autocomplete","focus-out","enter"],["rename-input",["get",["maxTitleLength"]],["get",["proposedName"]],"off","finishRenameBlock","finishRenameBlock"]]],false],["text","\\n                "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","li",[]],["dynamic-attr","block-index",["get",["blockIndex"]],null],["dynamic-attr","class",["concat",["section ",["helper",["if"],[["get",["block","isCurrent"]],"high-light"],null]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"selectBlock",["get",["block"]]],null],null],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","title"],["flush-element"],["text","\\n"],["block",["if"],[["get",["block","isRenaming"]]],null,19,18],["text","            "],["close-element"],["text","\\n            "],["open-element","ul",[]],["static-attr","class","item-list"],["dynamic-attr","block-index",["get",["blockIndex"]],null],["flush-element"],["text","\\n"],["block",["each"],[["get",["block","items"]]],null,13],["text","              "],["open-element","li",[]],["static-attr","class","item-anchor-tail"],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":["block","blockIndex"]},{"statements":[["text","            "],["open-element","div",[]],["dynamic-attr","class",["concat",["build-into-item item-",["unknown",["builtIntoItem","id"]]]]],["dynamic-attr","item-id",["unknown",["builtIntoItem","id"]],null],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"displayItemTooltipById",["get",["builtIntoItem","id"]],"editor-build-into"],null],null],["dynamic-attr","oncontextmenu",["helper",["action"],[["get",[null]],"addItemToCurrentBlock",["get",["builtIntoItem"]]],null],null],["flush-element"],["text","\\n              "],["open-element","img",[]],["static-attr","class","item-icon"],["dynamic-attr","src",["unknown",["builtIntoItem","iconPath"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"selectItem",["get",["builtIntoItem"]]],null],null],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":["builtIntoItem"]},{"statements":[["text","            "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n              "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","item_sets_button_tooltip_close_build_path"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n              "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","item_sets_button_tooltip_sort_item_grid"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["option","selected"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"selectSortOption",["get",["option"]]],null],null],["flush-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","item-set-dropdown-item-text"],["flush-element"],["append",["unknown",["option","displayName"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":["option"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(111),
                i = s.Ember.Object.extend({
                    count: 1,
                    hasNoPreferredSlot: s.Ember.computed("preferredSlot", (function() {
                        return void 0 === this.get("preferredSlot")
                    })),
                    preferredSlotIndicators: s.Ember.computed("preferredSlot", (function() {
                        const e = this.get("preferredSlot");
                        return s.Ember.A(o.DEFAULT_ITEM_SLOTS.map((t => ({
                            slotId: t,
                            selected: t === e
                        }))))
                    })),
                    toJSON: function() {
                        return {
                            id: this.get("id").toString(),
                            count: this.get("count")
                        }
                    },
                    setJSON: function(e) {
                        this.set("count", e.count), this.set("id", e.id)
                    }
                });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(132)) && s.__esModule ? s : {
                    default: s
                },
                l = n(111);
            var a = o.Ember.Object.extend({
                addItem: function(e) {
                    return this.get("items.length") < l.MAX_ITEM_PER_BLOCK && (this.get("items").pushObject(e), !0)
                },
                toJSON: function() {
                    return o.Lodash.pick(this, ["items", "type"])
                },
                setJSON: function(e) {
                    o.Lodash.assign(this, e);
                    const t = this.get("itemDict"),
                        n = this.get("itemToPreferredSlotMap"),
                        s = [];
                    return e.items.forEach((e => {
                        if (t[e.id]) {
                            const o = i.default.create(t[e.id]);
                            o.setJSON(e), o.set("preferredSlot", n[e.id]), s.push(o)
                        }
                    })), this.set("items", o.Ember.A(s)), this
                },
                onPreferredSlotsUpdated: function(e) {
                    this.get("items").filter((t => t.id.toString() === e.toString())).forEach((t => t.set("preferredSlot", this.get("itemToPreferredSlotMap")[e])))
                }
            });
            t.default = a
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getNewItemSet = t.default = void 0;
            var s, o = n(1),
                i = (s = n(133)) && s.__esModule ? s : {
                    default: s
                },
                l = n(111);
            var a = o.Ember.Object.extend({
                itemDict: {},
                championDisplays: o.Ember.computed("associatedChampions.[]", "indexedChampions", (function() {
                    const e = this.get("associatedChampions"),
                        t = this.get("indexedChampions");
                    return o.Lodash.map(e, (e => ({
                        id: e,
                        name: t[e].name,
                        iconPath: t[e].squarePortraitPath
                    })))
                })),
                mapDisplays: o.Ember.computed("associatedMaps.[]", "indexedMaps", (function() {
                    const e = this.get("associatedMaps"),
                        t = this.get("indexedMaps");
                    return o.Lodash.map(l.ASSOCIABLE_MAPS, (n => ({
                        id: n.id,
                        name: t[n.id].name,
                        iconPath: t[n.id].assets[0 === e.length || e.includes(n.id) ? "icon-victory" : "icon-empty"]
                    })))
                })),
                toJSON: function() {
                    const e = o.Lodash.pick(this, ["uid", "title", "sortrank", "priority", "isGlobalForChampions", "isGlobalForMaps", "type", "map", "mode"]);
                    return e.blocks = this.get("blocks").map((e => e.toJSON())), e.associatedChampions = o.Lodash.clone(this.get("associatedChampions")), e.associatedMaps = o.Lodash.clone(this.get("associatedMaps")), e.preferredItemSlots = this._convertMapToSlotsJson(this.get("itemToPreferredSlotMap")), e
                },
                restore: function() {
                    const e = this._getDeepClone(this.get("_snapShot"));
                    this._setFieldsFromJson(e, !0)
                },
                setJSON: function(e) {
                    return this._setFieldsFromJson(this._getDeepClone(e)), this._takeSnapshot(), this
                },
                setPreferredSlot: function(e, t) {
                    const n = this.get("itemToPreferredSlotMap");
                    null === t ? delete n[e] : n[e] = t, this.get("blocks").forEach((t => t.onPreferredSlotsUpdated(e)))
                },
                cleanUpPreferredSlots: function() {
                    const e = o.Lodash.union(...this.get("blocks").map((e => e.items.map((e => e.id.toString()))))),
                        t = this.get("itemToPreferredSlotMap");
                    o.Lodash.keys(t).forEach((n => {
                        e.includes(n) || delete t[n]
                    }))
                },
                _takeSnapshot: function() {
                    this.set("_snapShot", this.toJSON())
                },
                _setFieldsFromJson(e, t) {
                    t || o.Lodash.assign(this, e);
                    const n = this._calculateItemToSlotMap(e.preferredItemSlots);
                    this.set("title", e.title), this.set("blocks", o.Ember.A(e.blocks.map((e => {
                        const t = i.default.create({
                            itemDict: this.get("itemDict"),
                            itemToPreferredSlotMap: n
                        });
                        return t.setJSON(e), t
                    })))), this.set("associatedChampions", o.Ember.A(e.associatedChampions)), this.set("associatedMaps", o.Ember.A(e.associatedMaps)), this.set("itemToPreferredSlotMap", n)
                },
                _getDeepClone: e => JSON.parse(JSON.stringify(e)),
                _calculateItemToSlotMap(e) {
                    const t = {};
                    return o.Lodash.each(e, (e => {
                        t[e.id] = e.preferredItemSlot
                    })), t
                },
                _convertMapToSlotsJson(e) {
                    const t = [];
                    return o.Lodash.each(e, ((e, n) => {
                        t.push({
                            id: n,
                            preferredItemSlot: e
                        })
                    })), t
                }
            });
            t.default = a;
            t.getNewItemSet = () => ({
                sortrank: 0,
                priority: !1,
                associatedChampions: [],
                map: "any",
                blocks: [],
                mode: "any",
                isGlobalForMaps: !0,
                type: "custom",
                associatedMaps: [],
                isGlobalForChampions: !0
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = s.Ember.Mixin.create({
                    dialogueContents: s.Ember.computed("tra.metadata.locale.id", (function() {
                        return s.Ember.Object.create({
                            save: {
                                contents: this.get("tra.item_sets_editor_navigate_save_dialogue"),
                                acceptText: this.get("tra.item_sets_editor_dialogue_btn_save"),
                                declineText: this.get("tra.item_sets_editor_dialogue_btn_no")
                            },
                            remove: {
                                contents: this.get("tra.item_sets_editor_delete_dialogue"),
                                acceptText: this.get("tra.item_sets_editor_dialogue_btn_yes"),
                                declineText: this.get("tra.item_sets_editor_dialogue_btn_no")
                            },
                            removeBlock: {
                                contents: this.get("tra.item_sets_editor_delete_block_dialogue"),
                                acceptText: this.get("tra.item_sets_editor_dialogue_btn_yes"),
                                declineText: this.get("tra.item_sets_editor_dialogue_btn_no")
                            },
                            clear: {
                                contents: this.get("tra.item_sets_editor_clear_dialogue"),
                                acceptText: this.get("tra.item_sets_editor_dialogue_btn_yes"),
                                declineText: this.get("tra.item_sets_editor_dialogue_btn_no")
                            },
                            clipboardCoplied: {
                                contents: this.get("tra.item_sets_export_clipboard_copied_alert"),
                                okText: this.get("tra.item_sets_export_clipboard_copied_ok")
                            },
                            noValidImport: {
                                contents: this.get("tra.item_sets_import_no_valid_sets"),
                                okText: this.get("tra.item_sets_import_no_valid_sets_ok")
                            },
                            importFileOversize: {
                                contents: this.get("tra.item_sets_import_file_over_size"),
                                okText: this.get("tra.item_sets_import_file_over_size_ok")
                            }
                        })
                    })),
                    _popUpDialogue: function(e) {
                        const t = {
                            type: "DialogConfirm",
                            data: e,
                            show: !0,
                            closeButton: !0
                        };
                        return this.modalManager.add(t).acceptPromise
                    },
                    _popUpAlert: function(e) {
                        const t = {
                            type: "DialogAlert",
                            data: e
                        };
                        return this.modalManager.add(t).okPromise
                    }
                });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(111);
            const i = (0, s.dataBinding)("/telemetry"),
                l = `/v1/events/${o.TELEMETRY_EVENT_NAME}`;
            var a = s.Ember.Mixin.create({
                _telemetryStartTs: null,
                _eventSource: null,
                _telemetryService: i,
                _startTelemetrySession: function() {
                    s.logger.trace("starting telemetry session"), this.set("_telemetryStartTs", new Date)
                },
                _getSessionTimestamp: function() {
                    return s.Lodash.isNil(this.get("_telemetryStartTs")) ? 0 : new Date - this.get("_telemetryStartTs")
                },
                _endTelemetrySession: function() {
                    this._sendEvent({
                        id: o.TELEMETRY_EVENT_ID_CLOSE
                    }), this.set("_telemetryStartTs", null)
                },
                _sendEvent: function(e) {
                    if (s.Lodash.isNil(e.id)) return s.logger.warning("rejecting malformed telemetry event", e), Promise.reject("Required field: id is absent in the event");
                    const t = Object.assign(e, {
                        sessionTimestamp: this._getSessionTimestamp(),
                        source: this.get("_eventSource")
                    });
                    return this.get("_telemetryService").post(l, t)
                }
            });
            t.default = a
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.IsVisible = function(e, t) {
                if (e.nodeType !== Node.ELEMENT_NODE) return !1;
                const n = e.getBoundingClientRect(),
                    s = t.getBoundingClientRect();
                return n.left < s.right && n.right > s.left && n.top < s.bottom && n.bottom > s.top
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const o = ["title", "associatedMaps", "associatedChampions", "blocks"];

            function i(e) {
                let t;
                return t = e instanceof Array ? e.map((e => s.Lodash.pick(e, o))) : s.Lodash.pick(e, o), JSON.stringify(t)
            }
            const l = {
                copyToClipboard: function(e) {
                    const t = document.createElement("textarea");
                    t.style.position = "fixed", t.style.width = 0, t.style.height = 0, t.style.opacity = 0, t.value = i(e), document.body.appendChild(t), t.select();
                    try {
                        const e = document.execCommand("copy");
                        s.logger.trace(`Copied single item set to clipboard successfully = ${e}`)
                    } catch (e) {
                        s.logger.warning("Error copying single item set to clipboard", e)
                    }
                    document.body.removeChild(t)
                },
                exportToFile: function(e, t) {
                    const n = "data:application/json;base64," + window.btoa(unescape(encodeURIComponent(i(e)))),
                        s = document.createElement("a");
                    s.setAttribute("download", t || "ItemSet.json"), s.setAttribute("href", n), document.body.appendChild(s), s.click(), document.body.removeChild(s)
                }
            };
            t.default = l
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "icon-helmet.png"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = l(n(141));
            n(142);
            var i = l(n(136));

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            var a = s.Ember.Component.extend(s.Ember.Mixin.create(i.default), {
                classNames: ["item-set-import-modal"],
                layout: o.default,
                _closeModalCallback: null,
                modalManager: s.ModalManager,
                didInsertElement: function() {
                    this.set("dismissHandler", this._dismiss.bind(this)), this.element.querySelector("lol-uikit-dialog-frame").addEventListener("dialogFrameDismissed", this.get("dismissHandler"))
                },
                willDestroy: function() {
                    this.element && this.element.querySelector("lol-uikit-dialog-frame").removeEventListener("dialogFrameDismissed", this.get("dismissHandler"))
                },
                _dismiss: function() {
                    this.send("cancel")
                },
                _promptError: function(e) {
                    const t = {
                        type: "DialogAlert",
                        data: {
                            contents: e.message,
                            okText: this.get("tra.item_sets_editor_dialogue_btn_ok"),
                            dismissible: !1
                        },
                        show: !0
                    };
                    return this.get("modalManager").add(t), Promise.resolve()
                },
                actions: {
                    import() {
                        return this._importCallback().catch((e => this._promptError.call(this, e))).finally((() => this._closeModalCallback()))
                    },
                    edit() {
                        return this._importCallback().then((e => this.get("itemSetApi").showItemSetModal({
                            screen: "editor",
                            data: {
                                currentSetUid: e.uid
                            }
                        }))).catch((e => this._promptError.call(this, e))).finally((() => this._closeModalCallback()))
                    },
                    cancel() {
                        return this._closeModalCallback()
                    }
                }
            });
            t.default = a
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "pguSZXEx",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-set-import-modal\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-set-import-modal\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-set-import-modal\\\\index.js\\" "],["text","\\n"],["open-element","lol-uikit-dialog-frame",[]],["static-attr","class","dialog-frame"],["static-attr","close-button",""],["static-attr","orientation","bottom"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","dialog-content"],["flush-element"],["text","\\n    "],["open-element","p",[]],["flush-element"],["append",["unknown",["content"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","lol-uikit-flat-button-group",[]],["static-attr","type","dialog-frame"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-button",[]],["static-attr","tabindex","0"],["static-attr","class","button-accept"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"import"],null],null],["flush-element"],["append",["unknown",["btnTextImport"]],false],["close-element"],["text","\\n    "],["open-element","lol-uikit-flat-button",[]],["static-attr","tabindex","1"],["static-attr","class","button-accept"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"edit"],null],null],["flush-element"],["append",["unknown",["btnTextEdit"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            n(144);
            var o = s.Ember.Component.extend({
                layout: n(145),
                classNames: ["item-set-menu-component"],
                actions: {
                    triggerAction: function(e) {
                        e.disabled || e.action()
                    }
                }
            });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "K4yK+DNp",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-set-menu-component\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-set-menu-component\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-set-menu-component\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","menu-items"],["flush-element"],["text","\\n"],["block",["each"],[["get",["menuItems"]]],null,0],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["menu-item ",["unknown",["menuItem","name"]]," ",["helper",["if"],[["get",["menuItem","disabled"]],"disabled"],null]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"triggerAction",["get",["menuItem"]]],null],null],["flush-element"],["text","\\n      "],["append",["unknown",["menuItem","display"]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":["menuItem"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(147)) && s.__esModule ? s : {
                    default: s
                };
            n(148);
            var l = o.Ember.Component.extend({
                classNames: ["item-set-modal-root-component"],
                layout: i.default,
                screenBumped: !0,
                screenReleased: !0,
                showingItemSetEditor: o.Ember.computed.equal("screen", "editor"),
                showingRecommendedItemSetViewer: o.Ember.computed.equal("screen", "viewer"),
                didInsertElement: function() {
                    this._super(...arguments);
                    const e = o.EmberApplicationFactory.getRootDOMNode(this.element);
                    this.set("rootDOMNode", e), this.set("screenBumpedListener", (() => {
                        this.toggleProperty("screenBumped")
                    })), this.set("screenReleasedListener", (() => {
                        this.toggleProperty("screenReleased")
                    })), e.addEventListener("screenBumped", this.get("screenBumpedListener")), e.addEventListener("screenReleased", this.get("screenReleasedListener"))
                },
                willDestroyElement: function() {
                    this._super(...arguments);
                    const e = this.get("rootDOMNode");
                    e.removeEventListener(this.get("screenBumpedListener")), e.removeEventListener(this.get("screenReleasedListener"))
                },
                actions: {
                    switchToEditor: function(e) {
                        this.set("data.currentSetUid", e), this.set("screen", "editor")
                    }
                }
            });
            t.default = l
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "wrq7H9SJ",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-set-modal-root-component\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-set-modal-root-component\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-set-modal-root-component\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","item-sets-modal-backdrop"],["flush-element"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","item-sets-modal-content"],["flush-element"],["text","\\n"],["block",["if"],[["get",["showingItemSetEditor"]]],null,1],["text","\\n"],["block",["if"],[["get",["showingRecommendedItemSetViewer"]]],null,0],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["append",["helper",["recommended-set-viewer"],null,[["champId","mapId","onCustomSetCreated"],[["get",["data","champId"]],["get",["data","mapId"]],"switchToEditor"]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["append",["helper",["item-set-editor"],null,[["currentSetUid","beforeHide","screenReleased"],[["get",["data","currentSetUid"]],["get",["beforeHide"]],["get",["screenReleased"]]]]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            n(150);
            var o = s.Ember.Component.extend({
                layout: n(151),
                classNames: ["item-sets-item-tooltip"]
            });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "87321KjT",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-tooltip-component\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-tooltip-component\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\item-tooltip-component\\\\index.js\\" "],["text","\\n"],["open-element","lol-uikit-tooltip",[]],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","tooltip-wrapper"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","item-info"],["flush-element"],["text","\\n      "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["item","iconPath"]]]]],["dynamic-attr","class",["concat",["item-icon ",["helper",["if"],[["get",["item","shouldHideFromItemGrid"]],"legacy"],null]]]],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","item-right"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","item-name"],["flush-element"],["append",["unknown",["item","name"]],false],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","item-price"],["flush-element"],["append",["unknown",["item","priceTotal"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","item-description"],["flush-element"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["legacy-description ",["helper",["unless"],[["get",["item","shouldHideFromItemGrid"]],"hidden"],null]]]],["flush-element"],["append",["unknown",["tra","item_sets_item_tooltip_removed_item"]],false],["close-element"],["text","\\n      "],["open-element","lol-uikit-game-data-markup",[]],["static-attr","type","item"],["dynamic-attr","markup",["concat",[["unknown",["item","description"]]]]],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["required-champion ",["helper",["unless"],[["get",["item","requiredChampionDisplay"]],"hidden"],null]]]],["flush-element"],["append",["unknown",["item","requiredChampionDisplay"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["required-ally ",["helper",["unless"],[["get",["item","requiredAllyDisplay"]],"hidden"],null]]]],["flush-element"],["append",["unknown",["item","requiredAllyDisplay"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["item-instructions ",["helper",["if"],[["get",["item","stackable"]],"stackable"],null]]]],["dynamic-attr","source",["unknown",["source"]],null],["dynamic-attr","stackable",["unknown",["item","stackable"]],null],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","instruction drag-drop-add-block"],["flush-element"],["append",["unknown",["tra","item_sets_item_tooltip_drag_drop_to_add_block"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","instruction drag-drop-add-slot"],["flush-element"],["append",["unknown",["tra","item_sets_item_tooltip_drag_drop_to_add_slot"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","instruction click-add-to-highlighted-block"],["flush-element"],["append",["unknown",["tra","item_sets_item_tooltip_right_click_add_to_highlighted_block"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","instruction click-add-to-highlighted-slot"],["flush-element"],["append",["unknown",["tra","item_sets_item_tooltip_right_click_add_to_highlighted_slot"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","instruction click-view-build-path"],["flush-element"],["append",["unknown",["tra","item_sets_item_tooltip_left_click_to_view_build_path"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","instruction change-qty"],["flush-element"],["append",["unknown",["tra","item_sets_item_tooltip_change_quantity"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","instruction remove-from-block-full"],["flush-element"],["append",["unknown",["tra","item_sets_item_tooltip_remove_from_block_full"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","instruction remove-from-block-short"],["flush-element"],["append",["unknown",["tra","item_sets_item_tooltip_remove_from_block_short"]],false],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","instruction remove-from-slot"],["flush-element"],["append",["unknown",["tra","item_sets_item_tooltip_remove_from_slot"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = m(n(153));
            n(154);
            var i = n(110),
                l = n(111),
                a = m(n(135)),
                r = m(n(136)),
                c = m(n(112)),
                d = m(n(138));

            function m(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const {
                RunMixin: p
            } = s.EmberAddons.EmberLifeline, u = s.UIKit.getFlyoutManager();
            var h = s.Ember.Component.extend(s.Ember.Mixin.create(p, a.default, r.default), {
                classNames: ["items-root-component"],
                layout: o.default,
                rootClasses: s.Ember.computed("isLoaded", (function() {
                    return "item-sets-browser " + (this.get("isLoaded") ? "is-loaded" : "")
                })),
                _eventSource: l.TELEMETRY_EVENT_SOURCE_BROWSER,
                modalManager: s.ModalManager,
                exportItemSets: d.default,
                itemSetsService: s.Ember.inject.service("itemSets"),
                cannotCreateSets: s.Ember.computed.readOnly("itemSetsService.cannotAddMoreSets"),
                isSaving: s.Ember.computed.readOnly("itemSetsService.isSaving"),
                isLoaded: s.Ember.computed.readOnly("itemSetsService.isLoaded"),
                indexedChampions: s.Ember.computed.readOnly("itemSetsService.indexedChampions"),
                indexedMaps: s.Ember.computed.readOnly("itemSetsService.indexedMaps"),
                isShowingChampSelector: !1,
                maxChampionsToShowInRow: 4,
                selectedItemSetUids: s.Ember.A([]),
                cannotExportSets: s.Ember.computed.equal("selectedItemSetUids.length", 0),
                itemSetSharingDisabled: s.Ember.computed.bool("itemSetsService.itemSetsConfig.ItemSetSharingDisabled"),
                recommendedSetChampId: null,
                recommendedSetChamp: s.Ember.computed("indexedChampions", "recommendedSetChampId", (function() {
                    const e = this.get("indexedChampions"),
                        t = this.get("recommendedSetChampId");
                    if (!t || !e) return s.Ember.Object.create({
                        id: "none",
                        iconPath: n(155)
                    });
                    const o = e[t];
                    return s.Ember.Object.create({
                        id: o.id,
                        iconPath: o.squarePortraitPath
                    })
                })),
                recommendedSetMapId: 11,
                recommendedSetMapDisplays: s.Ember.computed("indexedMaps", "recommendedSetMapId", (function() {
                    const e = this.get("indexedMaps");
                    if (!e) return null;
                    const t = this.get("recommendedSetMapId");
                    return s.Ember.A(s.Lodash.map(l.ASSOCIABLE_MAPS, (n => s.Ember.Object.create({
                        id: n.id,
                        name: e[n.id].name,
                        iconPath: e[n.id].assets[n.id === t ? "icon-victory" : "icon-empty"],
                        selected: n.id === t
                    }))))
                })),
                cannotViewRecommendedSet: s.Ember.computed("recommendedSetChampId", "recommendedSetMapId", (function() {
                    return null === this.get("recommendedSetChampId") || null === this.get("recommendedSetMapId")
                })),
                cannotCreateFromRecommended: s.Ember.computed.or("cannotViewRecommendedSet", "cannotCreateSets"),
                customItemSets: s.Ember.computed("itemSetsService.itemSetsData", "indexedChampions", "indexedMaps", "maxChampionsToShowInRow", (function() {
                    const {
                        itemSets: e
                    } = this.get("itemSetsService.itemSetsData"), t = this.get("indexedChampions"), n = this.get("indexedMaps");
                    if (!e || !t || !n) return s.Ember.A();
                    const o = this.get("maxChampionsToShowInRow");
                    return this.get("selectedItemSetUids").clear(), this.set("selectedAllChecked", !1), s.Ember.A(e.map((e => s.Ember.Object.create({
                        uid: e.uid,
                        title: e.title,
                        championDisplays: s.Ember.A(s.Lodash.take(e.associatedChampions, o).map((e => ({
                            id: e,
                            iconPath: t[e].squarePortraitPath
                        })))),
                        hasMoreChampions: e.associatedChampions.length > o,
                        hasMoreText: this.get("tra.formatString")("item_sets_champ_association_has_more", {
                            number: e.associatedChampions.length - o
                        }),
                        mapDisplays: s.Ember.A(l.ASSOCIABLE_MAPS.map((t => ({
                            id: t.id,
                            name: n[t.id].name,
                            isAssociated: 0 === e.associatedMaps.length || e.associatedMaps.includes(t.id)
                        }))))
                    }))))
                })),
                filteredCustomSets: s.Ember.computed("customItemSets", "searchCustomSetText", (function() {
                    return s.Lodash.filter(this.get("customItemSets"), (e => c.default.filter(this.get("searchCustomSetText"), [e.title]).length > 0))
                })),
                didInsertElement: function() {
                    this._super(...arguments), this._startTelemetrySession()
                },
                willDestroy: function() {
                    this._super(...arguments), this._endTelemetrySession()
                },
                _duplicateItemSet: function(e) {
                    return this.get("itemSetsService").duplicateItemSetByUid(e).then((e => {
                        this.send("editItemSet", e)
                    }))
                },
                _removeItemSet: function(e) {
                    return this._popUpDialogue(this.get("dialogueContents.remove")).then((() => {
                        this.get("itemSetsService").removeItemSetByUid(e), this.get("selectedItemSetUids").removeObject(e)
                    })).catch((() => {}))
                },
                _exportSetsToClipboard: function() {
                    const e = this._getSelectedSets();
                    this._sendEvent({
                        id: l.TELEMETRY_EVENT_ID_MAP_EXPORT.clipboard,
                        size: e.length
                    }), this.get("exportItemSets").copyToClipboard(e), this._popUpAlert(this.get("dialogueContents.clipboardCoplied"))
                },
                _exportSetsToFile: function() {
                    const e = this._getSelectedSets();
                    this._sendEvent({
                        id: l.TELEMETRY_EVENT_ID_MAP_EXPORT.file,
                        size: e.length
                    }), this.get("exportItemSets").exportToFile(e, this.get("tra.item_sets_export_default_file_name") + ".json")
                },
                _showPasteArea: function() {
                    this.set("isPasting", !0), this.runTask((() => {
                        this.element.querySelector(".paste-textarea").focus()
                    }), 1)
                },
                _showFileLocator: function() {
                    this.element.querySelector(".item-set-file-input").click()
                },
                _getSelectedSets: function() {
                    const e = this.get("selectedItemSetUids");
                    return this.get("itemSetsService.itemSetsData").itemSets.filter((t => e.includes(t.uid)))
                },
                _importItemSets: function(e, t) {
                    let n;
                    try {
                        n = JSON.parse(e)
                    } catch (e) {
                        n = []
                    }
                    return this.get("itemSetsService").validateItemSetsBlob(n).then((e => {
                        const n = this.get("itemSetsService.itemSetsData").itemSets.length,
                            s = this.get("itemSetsService.maxItemSets");
                        return 0 === e.length ? this._popUpAlert(this.get("dialogueContents.noValidImport")) : e.length + n > s ? this._popUpAlert({
                            contents: this.get("tra.formatString")("item_sets_import_over_size", {
                                overBy: e.length + n - s
                            }),
                            okText: this.get("tra.item_sets_import_over_size_ok")
                        }) : this.get("itemSetsService").importItemSets(e, t).then((e => {
                            1 === e.length ? this.send("editItemSet", e[0]) : this._popUpAlert({
                                contents: this.get("tra.formatString")("item_sets_imported_multiple", {
                                    number: e.length
                                }),
                                okText: this.get("tra.item_sets_import_over_size_ok")
                            })
                        }))
                    }))
                },
                _showItemSetMenu: function(e, t, n) {
                    u.unassignFlyout(e), u.assignFlyout(e, "ItemSetMenuComponent", t, Object.assign({
                        showEvent: "show",
                        hideEvent: "hide",
                        targetAnchor: {
                            x: "center",
                            y: "bottom"
                        },
                        tooltipAnchor: {
                            x: "center",
                            y: "top"
                        },
                        orientation: "bottom",
                        animated: "true",
                        offset: {
                            x: -2,
                            y: -7
                        },
                        backdropCutout: !1,
                        closeWhenOutsideClicked: !0,
                        closeWhenInsideClicked: !0,
                        ComponentFactory: s.ComponentFactory
                    }, n)), u.sendEvent(e, "show")
                },
                actions: {
                    editItemSet: function(e, t) {
                        void 0 !== t && i.sfx.gridClick.play(), s.ItemSetsApi.showItemSetModal({
                            screen: "editor",
                            data: {
                                currentSetUid: e
                            }
                        })
                    },
                    toggleItemSet: function(e) {
                        const t = this.get("selectedItemSetUids");
                        t.includes(e) ? (t.removeObject(e), 0 === t.length && this.set("selectedAllChecked", !1)) : (t.pushObject(e), t.length === this.get("itemSetsService.itemSetsData").itemSets.length && this.set("selectedAllChecked", !0))
                    },
                    toggleAllSelection: function() {
                        const e = this.get("selectedItemSetUids"),
                            t = !this.get("selectedAllChecked"),
                            n = this.element.querySelectorAll(".item-set-selector input");
                        for (const e of n) e.checked = t;
                        e.clear(), t && e.pushObjects(this.get("itemSetsService.itemSetsData").itemSets.map((e => e.uid)))
                    },
                    createEmptyItemSet: function() {
                        return this.get("itemSetsService").createEmptyItemSet().then((e => {
                            this.send("editItemSet", e)
                        }))
                    },
                    toggleChampSelector: function() {
                        const e = this.get("isShowingChampSelector");
                        e || (i.sfx.gridClick.play(), this.runTask((() => {
                            const e = this.element.querySelector("lol-uikit-dialog-frame.champ-selector-dialog");
                            e && e.focus()
                        }), 1)), this.set("isShowingChampSelector", !e)
                    },
                    onChampSelectorFocusOut: function(e) {
                        e && !e.relatedTarget && this.runTask((() => {
                            this.get("isShowingChampSelector") && this.set("isShowingChampSelector", !1)
                        }), 200)
                    },
                    openActionMenu: function(e, t) {
                        const n = t.target;
                        this._showItemSetMenu(n, {
                            menuItems: s.Ember.A([{
                                name: "duplicate",
                                display: this.get("tra.item_sets_browser_menu_duplicate"),
                                disabled: this.get("cannotCreateSets"),
                                action: () => this._duplicateItemSet(e)
                            }, {
                                name: "delete",
                                display: this.get("tra.item_sets_browser_menu_delete"),
                                disabled: !1,
                                action: () => this._removeItemSet(e)
                            }])
                        })
                    },
                    selectChampionForRecommendedSet: function(e) {
                        i.sfx.genericClickSm.play(), this.set("recommendedSetChampId", e), this.send("toggleChampSelector")
                    },
                    selectMapForRecommendedSet: function(e) {
                        i.sfx.gridClick.play(), this.set("recommendedSetMapId", e)
                    },
                    viewRecommendedItemSet: function() {
                        this.get("cannotViewRecommendedSet") || s.ItemSetsApi.showItemSetModal({
                            screen: "viewer",
                            data: {
                                champId: this.get("recommendedSetChampId"),
                                mapId: this.get("recommendedSetMapId")
                            }
                        })
                    },
                    duplicateFromRecommendedItemSet: function() {
                        if (!this.get("cannotCreateFromRecommended")) return this.get("itemSetsService").duplicateFromRecommendedSet(this.get("recommendedSetChampId"), this.get("recommendedSetMapId")).then((e => {
                            this.send("editItemSet", e)
                        }))
                    },
                    hoverSFX: function() {
                        i.sfx.gridHover.play()
                    },
                    openExportOptionMenu: function() {
                        const e = event.target;
                        this._showItemSetMenu(e, {
                            menuItems: s.Ember.A([{
                                name: "export-clipboard",
                                display: this.get("tra.item_sets_export_menu_clipboard"),
                                disabled: !1,
                                action: () => this._exportSetsToClipboard()
                            }, {
                                name: "export-file",
                                display: this.get("tra.item_sets_export_menu_file"),
                                disabled: !1,
                                action: () => this._exportSetsToFile()
                            }])
                        }, {
                            offset: {
                                x: -2,
                                y: 15
                            }
                        })
                    },
                    openImportOptionMenu: function() {
                        const e = event.target;
                        this._showItemSetMenu(e, {
                            menuItems: s.Ember.A([{
                                name: "import-clipboard",
                                display: this.get("tra.item_sets_import_menu_clipboard"),
                                disabled: !1,
                                action: () => this._showPasteArea()
                            }, {
                                name: "import-file",
                                display: this.get("tra.item_sets_import_menu_file"),
                                disabled: !1,
                                action: () => this._showFileLocator()
                            }])
                        }, {
                            offset: {
                                x: -2,
                                y: 15
                            }
                        })
                    },
                    importItemSetsFromClipboard: function(e) {
                        this.runTask((() => {
                            const t = e.target;
                            this._importItemSets(t.value, "clipboard").then((() => {
                                this.set("isPasting", !1), t.value = ""
                            }))
                        }), 1)
                    },
                    importItemSetsFromFile: function(e) {
                        const t = e.target.files[0];
                        if (t.size > l.IMPORT_FILE_SIZE_LIMIT) return this._popUpAlert(this.get("dialogueContents.importFileOversize"));
                        const n = new FileReader;
                        n.onload = () => {
                            this._importItemSets(n.result, "file").then((() => {
                                e.target.value = ""
                            }))
                        }, n.readAsText(t)
                    },
                    leavePasteArea: function(e) {
                        this.set("isPasting", !1), e.target.value = ""
                    }
                }
            });
            t.default = h
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "OxHJR4y8",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\items-root-component\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\items-root-component\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\items-root-component\\\\index.js\\" "],["text","\\n"],["block",["if"],[["get",["isLoaded"]]],null,11,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","loading-spinner"],["flush-element"],["text","\\n    "],["append",["helper",["uikit-spinner"],null,[["width","height"],["50px","50px"]]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","no-item-sets-row"],["flush-element"],["text","\\n          "],["open-element","span",[]],["static-attr","class","title"],["flush-element"],["append",["unknown",["tra","item_sets_browser_no_items_message_title"]],false],["close-element"],["text","\\n          "],["open-element","span",[]],["static-attr","class","content"],["flush-element"],["append",["unknown",["tra","item_sets_browser_no_items_message_content"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","item-sets-create-new-row"],["flush-element"],["text","\\n          "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","create-new-set-button"],["dynamic-attr","disabled",["unknown",["cannotCreateSets"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"createEmptyItemSet"],null],null],["flush-element"],["text","\\n            "],["append",["unknown",["tra","item_sets_browser_create_blank_set_button_text"]],false],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","lol-uikit-flat-button",[]],["dynamic-attr","class",["concat",["import-set-button ",["helper",["if"],[["get",["itemSetSharingDisabled"]],"hidden"],null]]]],["dynamic-attr","disabled",["unknown",["cannotCreateSets"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"openImportOptionMenu"],null],null],["flush-element"],["text","\\n            "],["append",["unknown",["tra","item_sets_browser_import_set_button_text"]],false],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["dynamic-attr","class",["concat",["map-display map-",["unknown",["map","id"]]," ",["helper",["if"],[["get",["map","isAssociated"]],"associated"],null]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":["map"]},{"statements":[["text","            "],["open-element","span",[]],["static-attr","class","all-champ-text"],["flush-element"],["append",["unknown",["tra","item_sets_browser_table_row_champions_all"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["open-element","div",[]],["static-attr","class","more-champs"],["flush-element"],["append",["unknown",["itemSet","hasMoreText"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["open-element","div",[]],["dynamic-attr","class",["concat",["champ-display champ-",["unknown",["champ","id"]]]]],["flush-element"],["text","\\n                "],["open-element","img",[]],["static-attr","class","champ-icon"],["dynamic-attr","src",["unknown",["champ","iconPath"]],null],["flush-element"],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":["champ"]},{"statements":[["block",["each"],[["get",["itemSet","championDisplays"]]],null,5],["block",["if"],[["get",["itemSet","hasMoreChampions"]]],null,4]],"locals":[]},{"statements":[["text","              "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n                "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","item_sets_export_toggle_tooltip_single"]],false],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","item-sets-table-row"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","item-sets-table-row-background"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"editItemSet",["get",["itemSet","uid"]]],null],null],["flush-element"],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","item-sets-title item-sets-table-cell col-1"],["flush-element"],["text","\\n          "],["open-element","lol-uikit-flat-checkbox",[]],["dynamic-attr","class",["concat",["item-set-selector ",["helper",["if"],[["get",["itemSetSharingDisabled"]],"hidden"],null]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggleItemSet",["get",["itemSet","uid"]]],null],null],["flush-element"],["text","\\n            "],["append",["helper",["input"],null,[["slot","type","tabindex"],["input","checkbox","-1"]]],false],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type","offsetY","restrictArea"],["top","system",25,"whole-window"]],7],["text","          "],["close-element"],["text","\\n          "],["open-element","span",[]],["static-attr","class","title-text"],["flush-element"],["append",["unknown",["itemSet","title"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n\\n        "],["open-element","div",[]],["static-attr","class","item-sets-champs item-sets-table-cell col-2"],["flush-element"],["text","\\n"],["block",["if"],[["get",["itemSet","championDisplays","length"]]],null,6,3],["text","        "],["close-element"],["text","\\n\\n        "],["open-element","div",[]],["static-attr","class","item-sets-maps item-sets-table-cell col-3"],["flush-element"],["text","\\n"],["block",["each"],[["get",["itemSet","mapDisplays"]]],null,2],["text","        "],["close-element"],["text","\\n        \\n        "],["open-element","div",[]],["static-attr","class","item-sets-actions item-sets-table-cell col-4"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","more-button"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"openActionMenu",["get",["itemSet","uid"]]],null],null],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":["itemSet"]},{"statements":[["text","            "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n              "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","item_sets_export_toggle_tooltip_all"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-flat-input",[]],["static-attr","class","item-sets-search"],["flush-element"],["text","\\n        "],["append",["helper",["input"],null,[["maxlength","type","value","autocomplete","placeholder"],["30","search",["get",["searchCustomSetText"]],"off",["get",["tra","item_sets_browser_table_search_place_holder"]]]]],false],["text","\\n      "],["close-element"],["text","\\n      "],["append",["helper",["circle-button"],null,[["class","button-type","isDisabled","action","tooltipContent"],["action-button create-empty","add",["get",["cannotCreateSets"]],"createEmptyItemSet",["get",["tra","item_sets_button_tooltip_create_empty"]]]]],false],["text","\\n      "],["append",["helper",["circle-button"],null,[["class","button-type","isDisabled","action","tooltipContent"],[["helper",["if"],[["get",["itemSetSharingDisabled"]],"action-button hidden","action-button export"],null],"export",["get",["cannotExportSets"]],"openExportOptionMenu",["get",["tra","item_sets_button_tooltip_export_multiple"]]]]],false],["text","\\n      "],["append",["helper",["circle-button"],null,[["class","button-type","isDisabled","action","tooltipContent"],[["helper",["if"],[["get",["itemSetSharingDisabled"]],"action-button hidden","action-button import"],null],"import",["get",["cannotCreateSets"]],"openImportOptionMenu",["get",["tra","item_sets_button_tooltip_import"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["open-element","div",[]],["dynamic-attr","class",["unknown",["rootClasses"]],null],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","item-sets-top-container"],["flush-element"],["text","\\n"],["block",["if"],[["get",["customItemSets","length"]]],null,10],["text","    "],["open-element","input",[]],["static-attr","class","item-set-file-input"],["static-attr","type","file"],["static-attr","name","name"],["static-attr","accept",".json"],["dynamic-attr","onchange",["helper",["action"],[["get",[null]],"importItemSetsFromFile"],null],null],["flush-element"],["close-element"],["text","\\n    "],["open-element","lol-uikit-flat-textarea",[]],["dynamic-attr","class",["concat",["paste-area ",["helper",["unless"],[["get",["isPasting"]],"hidden"],null]," ",["helper",["unless"],[["get",["customItemSets","length"]],"fresh-start"],null]]]],["flush-element"],["text","\\n      "],["open-element","textarea",[]],["static-attr","class","paste-textarea"],["dynamic-attr","placeholder",["unknown",["tra","item_sets_import_clipboard_placeholder"]],null],["dynamic-attr","onpaste",["helper",["action"],[["get",[null]],"importItemSetsFromClipboard"],null],null],["dynamic-attr","onblur",["helper",["action"],[["get",[null]],"leavePasteArea"],null],null],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","custom-item-sets-table"],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["item-sets-table-headers ",["helper",["unless"],[["get",["customItemSets","length"]],"transparent"],null]]]],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","item-sets-table-header col-1"],["flush-element"],["text","\\n        "],["open-element","lol-uikit-flat-checkbox",[]],["dynamic-attr","class",["concat",["item-set-selector-all ",["helper",["if"],[["get",["itemSetSharingDisabled"]],"hidden"],null]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggleAllSelection"],null],null],["flush-element"],["text","\\n          "],["append",["helper",["input"],null,[["slot","type","tabindex","checked"],["input","checkbox","-1",["get",["selectedAllChecked"]]]]],false],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type","offsetY","restrictArea"],["top","system",15,"whole-window"]],9],["text","        "],["close-element"],["text","\\n        "],["open-element","span",[]],["static-attr","class","title-text"],["flush-element"],["append",["unknown",["itemSet","title"]],false],["close-element"],["text","\\n        "],["append",["unknown",["tra","item_sets_browser_table_title_name"]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","item-sets-table-header col-2"],["flush-element"],["text","\\n        "],["append",["unknown",["tra","item_sets_browser_table_title_champions"]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","item-sets-table-header col-3"],["flush-element"],["text","\\n        "],["append",["unknown",["tra","item_sets_browser_table_title_maps"]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","item-sets-table-header col-4"],["flush-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","lol-uikit-scrollable",[]],["static-attr","class","item-sets-table-rows"],["static-attr","overflow-masks","enabled"],["flush-element"],["text","\\n"],["block",["each"],[["get",["filteredCustomSets"]]],null,8],["block",["unless"],[["get",["customItemSets","length"]]],null,1],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","view-recommended-sets-top"],["flush-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            e.exports = n.p + "no_champ.png"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(111);
            n(157);
            var i = s.Ember.Component.extend({
                layout: n(158),
                classNames: ["preferred-slots-menu-component"],
                slotDisplays: s.Ember.computed("selectedSlot", "itemHotkeys", (function() {
                    return s.Ember.A(o.DEFAULT_ITEM_SLOTS.map((e => {
                        const t = this.get("itemHotkeys")[e];
                        return {
                            id: e,
                            keyDisplay: t,
                            keyLength: t.length < 3 ? "short" : t.length > 5 ? "long" : "medium",
                            selected: e === this.get("selectedSlot")
                        }
                    })))
                })),
                actions: {
                    selectSlot: function(e) {
                        this.sendAction("setPreferredSlot", e === this.get("selectedSlot") ? null : e)
                    }
                }
            });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Uad7suJw",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\preferred-slots-menu-component\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\preferred-slots-menu-component\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\preferred-slots-menu-component\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","title"],["flush-element"],["append",["unknown",["tra","item_sets_preferred_slots_menu_title"]],false],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","preferred-slots"],["flush-element"],["text","\\n"],["block",["each"],[["get",["slotDisplays"]]],null,0],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["slot ",["helper",["if"],[["get",["slot","selected"]],"selected"],null]," key-",["unknown",["slot","keyLength"]]]]],["dynamic-attr","slot-id",["unknown",["slot","id"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"selectSlot",["get",["slot","id"]]],null],null],["flush-element"],["text","\\n      "],["append",["unknown",["slot","keyDisplay"]],false],["text","\\n    "],["close-element"],["text"," \\n"]],"locals":["slot"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(160)) && s.__esModule ? s : {
                    default: s
                };
            n(161);
            var l = n(110),
                a = n(111),
                r = n(120);
            const {
                RunMixin: c
            } = o.EmberAddons.EmberLifeline;
            var d = o.Ember.Component.extend(c, o.EmberAddons, {
                classNameBindings: ["isLoaded"],
                classNames: ["recommended-set-viewer"],
                layout: i.default,
                itemSetsService: o.Ember.inject.service("itemSets"),
                cannotCreateSets: o.Ember.computed.readOnly("itemSetsService.cannotAddMoreSets"),
                isLoaded: o.Ember.computed.readOnly("itemSetsService.isLoaded"),
                championDisplay: o.Ember.computed("itemSetsService.indexedChampions", "champId", (function() {
                    const e = this.get("itemSetsService.indexedChampions");
                    if (!e) return null;
                    const t = e[this.get("champId")];
                    return o.Ember.Object.create({
                        id: t.id,
                        name: t.name,
                        iconPath: t.squarePortraitPath
                    })
                })),
                mapDisplays: o.Ember.computed("itemSetsService.indexedMaps", "mapId", (function() {
                    const e = this.get("itemSetsService.indexedMaps");
                    if (!e) return null;
                    const t = this.get("mapId");
                    return o.Ember.A(o.Lodash.map(a.ASSOCIABLE_MAPS, (n => o.Ember.Object.create({
                        id: n.id,
                        name: e[n.id].name,
                        iconPath: e[n.id].assets[n.id === t ? "icon-victory" : "icon-empty"],
                        selected: n.id === t
                    }))))
                })),
                isShowingChampSelector: !1,
                displayChangeObserver: o.Ember.on("init", o.Ember.observer("isLoaded", "itemSetsService.indexedItems", "champId", "mapId", (function() {
                    if (!this.get("isLoaded")) return;
                    const e = this.get("itemSetsService.indexedItems"),
                        t = this.get("champId"),
                        n = this.get("mapId");
                    this.get("itemSetsService").getRecommendedItemSets(t, n).then((s => {
                        if (!s) return o.logger.warning(`no recommended item sets for champ id ${t} on map id ${n}`), o.Ember.A();
                        this.set("blockDisplays", o.Ember.A(o.Lodash.map(s.blocks, (t => o.Ember.Object.create({
                            type: this.get("tra").get(`item_sets_recommended_set_viewer_section_name_${t.type}`),
                            items: o.Ember.A(o.Lodash.map(t.items, (t => {
                                const n = parseInt(t.id);
                                return o.Ember.Object.create({
                                    id: n,
                                    count: t.count,
                                    showCount: t.count > 1,
                                    meta: e[n]
                                })
                            })))
                        })))))
                    }))
                }))),
                actions: {
                    toggleChampSelector: function() {
                        const e = this.get("isShowingChampSelector");
                        l.sfx.genericClickSm.play(), e || this.runTask((() => {
                            const e = this.element.querySelector("lol-uikit-dialog-frame.champ-selector-dialog");
                            e && e.focus()
                        }), 1), this.set("isShowingChampSelector", !e)
                    },
                    onChampSelectorFocusOut: function(e) {
                        e && !e.relatedTarget && this.runTask((() => {
                            this.get("isShowingChampSelector") && this.set("isShowingChampSelector", !1)
                        }), 200)
                    },
                    selectChampion: function(e) {
                        this.set("champId", e), this.send("toggleChampSelector")
                    },
                    selectMap: function(e) {
                        l.sfx.genericClickSm.play(), this.set("mapId", e)
                    },
                    duplicateSet: function() {
                        if (!this.get("cannotCreateSets")) return this.get("itemSetsService").duplicateFromRecommendedSet(this.get("champId"), this.get("mapId")).then((e => {
                            this.sendAction("onCustomSetCreated", e)
                        }))
                    },
                    displayItemTooltip: function(e, t) {
                        l.sfx.gridHover.play();
                        const n = t.target,
                            s = this.get("itemSetsService.indexedItems")[e];
                        if (s && !n.hasAttribute("hasTooltip")) {
                            const e = document.createElement("div");
                            n.setAttribute("hasTooltip", "true"), n.addEventListener("tooltip:beforeShow", (() => {
                                r.itemTooltipManager.updateTooltip(s);
                                const t = r.itemTooltipManager.getDomNode();
                                e.appendChild(t)
                            })), o.TooltipManager.assign(n, e, {}, {
                                ComponentFactory: o.ComponentFactory,
                                targetAnchor: {
                                    x: "left",
                                    y: "center"
                                },
                                tooltipAnchor: {
                                    x: "right",
                                    y: "center"
                                },
                                offset: {
                                    x: 0,
                                    y: 0
                                },
                                hideEvent: "mouseleave"
                            }), o.TooltipManager.show(n)
                        }
                    },
                    hoverSFX: function() {
                        l.sfx.gridHover.play()
                    }
                }
            });
            t.default = d
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "ofn+r4hL",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\recommended-set-viewer-component\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\recommended-set-viewer-component\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\item-sets\\\\addon\\\\app\\\\components\\\\recommended-set-viewer-component\\\\index.js\\" "],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","viewer-controls"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","viewer-title"],["flush-element"],["append",["unknown",["tra","item_sets_recommended_set_viewer_title"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","champion-display"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","selected-champ-display"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"toggleChampSelector"],null],null],["modifier",["action"],[["get",[null]],"hoverSFX"],[["on"],["mouseEnter"]]],["flush-element"],["text","\\n      "],["open-element","img",[]],["dynamic-attr","class",["concat",["champ-icon champ-",["unknown",["championDisplay","id"]]]]],["dynamic-attr","src",["unknown",["championDisplay","iconPath"]],null],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","lol-uikit-dialog-frame",[]],["static-attr","caret","top"],["dynamic-attr","class",["concat",["champ-selector-dialog ",["helper",["if"],[["get",["isShowingChampSelector"]],"show"],null]]]],["static-attr","layer-position","above-menus"],["static-attr","tabindex","0"],["dynamic-attr","onblur",["helper",["action"],[["get",[null]],"onChampSelectorFocusOut"],null],null],["flush-element"],["text","\\n      "],["append",["helper",["champion-selector"],null,[["isSingleSelect","toggleChampAssociation","onNameSearchBlur"],[true,"selectChampion","onChampSelectorFocusOut"]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","map-displays"],["flush-element"],["text","\\n"],["block",["each"],[["get",["mapDisplays"]]],null,4],["text","  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","control-buttons"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","duplicate-recommended-button"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"duplicateSet"],null],null],["dynamic-attr","disabled",["unknown",["cannotCreateSets"]],null],["flush-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],2],["text","      "],["append",["unknown",["tra","item_sets_recommended_set_viewer_create_set_button"]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","lol-uikit-scrollable",[]],["static-attr","class","item-blocks-container"],["static-attr","overflow-masks","enabled"],["flush-element"],["text","\\n"],["block",["each"],[["get",["blockDisplays"]]],null,1],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["dynamic-attr","class",["concat",["item-display item-",["unknown",["item","id"]]]]],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","item-icon-container"],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"displayItemTooltip",["get",["item","id"]]],null],null],["flush-element"],["text","\\n            "],["open-element","img",[]],["static-attr","class","item-icon"],["dynamic-attr","src",["unknown",["item","meta","iconPath"]],null],["flush-element"],["close-element"],["text","\\n            "],["open-element","div",[]],["dynamic-attr","class",["concat",["item-count ",["helper",["if"],[["get",["item","showCount"]],"show"],null]]]],["flush-element"],["append",["unknown",["item","count"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","span",[]],["static-attr","class","item-price"],["flush-element"],["append",["unknown",["item","meta","priceTotal"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":["item"]},{"statements":[["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["item-block block-",["get",["blockIndex"]]]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","block-title"],["flush-element"],["text","\\n      "],["open-element","span",[]],["static-attr","class","title-text"],["flush-element"],["append",["unknown",["block","type"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","block-items"],["flush-element"],["text","\\n"],["block",["each"],[["get",["block","items"]]],null,0],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":["block","blockIndex"]},{"statements":[["text","        "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n          "],["open-element","p",[]],["flush-element"],["append",["unknown",["tra","item_sets_button_tooltip_create_from_recommended"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n            "],["open-element","p",[]],["flush-element"],["append",["unknown",["map","name"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",["map-display map-",["unknown",["map","id"]]," ",["helper",["if"],[["get",["map","selected"]],"is-selected"],null]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"selectMap",["get",["map","id"]]],null],null],["modifier",["action"],[["get",[null]],"hoverSFX"],[["on"],["mouseEnter"]]],["flush-element"],["text","\\n        "],["open-element","img",[]],["static-attr","class","map-icon"],["dynamic-attr","src",["unknown",["map","iconPath"]],null],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],3],["text","      "],["close-element"],["text","\\n"]],"locals":["map"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(111),
                i = r(n(136)),
                l = n(134),
                a = r(n(163));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const c = new(n(164).Validator),
                d = n(175),
                m = (0, s.emberDataBinding)({
                    Ember: s.Ember,
                    websocket: (0, s.getProvider)().getSocket(),
                    basePaths: {
                        summoner: "/lol-summoner",
                        champions: "/lol-champions",
                        collections: "/lol-collections",
                        gameData: "/lol-game-data",
                        itemSets: "/lol-item-sets",
                        settings: "/lol-settings",
                        gameSettings: "/lol-game-settings",
                        platformConfig: "/lol-platform-config",
                        mapApi: "/lol-maps"
                    },
                    boundProperties: {
                        currentSummoner: {
                            api: "summoner",
                            path: "/v1/current-summoner"
                        },
                        userExperience: {
                            api: "settings",
                            path: "/v2/local/lol-user-experience"
                        },
                        chatSettings: {
                            api: "settings",
                            path: "/v2/account/LCUPreferences/lol-chat"
                        },
                        itemSetsConfig: {
                            api: "platformConfig",
                            path: "/v1/namespaces/ItemSets"
                        },
                        maps: {
                            api: "mapApi",
                            path: "/v2/maps"
                        }
                    }
                });
            var p = s.Ember.Service.extend(s.Ember.Mixin.create(m, i.default), {
                isSaving: !1,
                _eventSource: o.TELEMETRY_EVENT_SOURCE_DATA_SERVICE,
                currentSummonerId: s.Ember.computed.readOnly("currentSummoner.summonerId"),
                currentSummonerPuuid: s.Ember.computed.readOnly("currentSummoner.puuid"),
                isPotatoModeEnabled: s.Ember.computed.alias("userExperience.data.potatoModeEnabled"),
                itemSetsData: {
                    itemSets: []
                },
                isLoaded: s.Ember.computed.and("isGameDataLoaded", "isItemSetsLoaded"),
                restrictedPageNamesEnabled: s.Ember.computed("itemSetsConfig.RestrictedPageNamesEnabled", (function() {
                    const e = this.get("itemSetsConfig.RestrictedPageNamesEnabled");
                    return void 0 === e ? o.RESTRICTED_PAGE_NAMES_ENABLED : e
                })),
                itemSetRenamingDisabled: s.Ember.computed("itemSetsConfig.ItemSetRenamingDisabled", (function() {
                    const e = this.get("itemSetsConfig.ItemSetRenamingDisabled");
                    return void 0 === e ? o.ITEM_SET_RENAMING_DISABLED : e
                })),
                useDefaultedNames: s.Ember.computed("restrictedPageNamesEnabled", "itemSetRenamingDisabled", (function() {
                    return this.get("restrictedPageNamesEnabled") && this.get("itemSetRenamingDisabled")
                })),
                init: function() {
                    this._super.apply(this, arguments), this._startTelemetrySession(), this.set("isGameDataLoaded", !1), this.set("isItemSetsLoaded", !1), this._loadGameData()
                },
                willDestroy: function() {
                    this._super(...arguments);
                    const e = this.get("api.champions"),
                        t = this.get("api.collections"),
                        n = this.get("api.itemSets"),
                        s = this.get("api.gameSettings");
                    e.unobserve(this), t.unobserve(this), n.unobserve(this), s.unobserve(this)
                },
                _loadGameData: function() {
                    return Promise.all([this.get("api.gameData").get("/assets/v1/items.json").then((e => {
                        this.set("itemsData", e)
                    })), this.get("api.gameData").get("/assets/v1/champion-summary.json").then((e => {
                        const t = e.filter((e => e.id > 0));
                        this.set("championSummary", t), this.set("indexedChampions", s.Lodash.reduce(t, ((e, t) => (e[t.id] = t, e)), {}))
                    }))]).then((() => {
                        this.set("isGameDataLoaded", !0)
                    }))
                },
                maxBlocksPerSet: s.Ember.computed("itemSetsConfig.MaxBlocksPerSet", (function() {
                    const e = this.get("itemSetsConfig.MaxBlocksPerSet");
                    return void 0 === e ? o.MAX_BLOCKS_PER_ITEM_SET : e
                })),
                maxItemSets: s.Ember.computed("itemSetsConfig.MaxItemSets", (function() {
                    const e = this.get("itemSetsConfig.MaxItemSets");
                    return void 0 === e ? o.MAX_ITEM_SETS_PER_PLAYER : e
                })),
                cannotAddMoreSets: s.Ember.computed("isSaving", "itemSetsData", "maxItemSets", (function() {
                    return !!this.get("isSaving") || this.get("itemSetsData").itemSets.length >= this.get("maxItemSets")
                })),
                items: s.Ember.computed("itemsData", "championSummary", "tra.formatString", (function() {
                    const e = this.get("itemsData"),
                        t = this.get("championSummary"),
                        n = this.get("tra.formatString");
                    return e && t && n ? s.Lodash.map(e, (e => {
                        if (e.requiredChampion) {
                            const o = s.Lodash.find(t, (t => t.alias === e.requiredChampion));
                            o || s.logger.error(`Item id=${e.id} has requiredChampion=${e.requiredChampion} which is not found in champion-summary!`), e.requiredChampionDisplay = n("item_sets_item_tooltip_required_champion", {
                                champion: o && o.name
                            })
                        }
                        if (e.requiredAlly) {
                            const o = s.Lodash.find(t, (t => t.alias === e.requiredAlly));
                            o || s.logger.error(`Item id=${e.id} has requiredAlly=${e.requiredAlly} which is not found in champion-summary!`), e.requiredAllyDisplay = n("item_sets_item_tooltip_required_ally", {
                                champion: o && o.name
                            })
                        }
                        const o = e.id >= 22e4 && e.id <= 229999 || [1040, 2049, 2050, 2141, 2142, 2143, 2144, 3005, 3039, 3430, 4004, 4010].includes(e.id);
                        return e.shouldHideFromItemGrid = !(e.inStore && !e.isEnchantment) || o, e.stackable = e.maxStacks > 1, e.isTrinket = e.categories.includes("Trinket"), e.hasActive = e.active && !e.isTrinket, e
                    })) : []
                })),
                indexedItems: s.Ember.computed("items", (function() {
                    return s.Lodash.reduce(this.get("items"), ((e, t) => (e[t.id] = t, e)), {})
                })),
                indexedMaps: s.Ember.computed("maps", (function() {
                    const e = this.get("maps");
                    if (!e) return null;
                    return e.reduce(((e, t) => (!e[t.id] && t.isDefault && o.ASSOCIABLE_MAPS.find((e => e.id === t.id)) && (e[t.id] = t), e)), {})
                })),
                currentSummonerIdChanged: s.Ember.on("init", s.Ember.observer("currentSummonerId", (function() {
                    const e = this.get("currentSummonerId"),
                        t = this.get("currentSummonerPuuid"),
                        n = this.get("api.champions"),
                        s = this.get("api.collections"),
                        o = this.get("api.itemSets"),
                        i = this.get("api.gameSettings");
                    t && e && (n.observe(`/v1/inventories/${e}/champions`, this, (e => {
                        this.handleGetChampionInventory(e)
                    })), s.observe(`/v1/inventories/${t}/champion-mastery`, this, (e => {
                        this.handleGetChampionMasteries(e)
                    })), o.observe(`/v1/item-sets/${e}/sets`, this, (e => {
                        if (this.set("itemSetsData", e), this.get("restrictedPageNamesEnabled")) {
                            const e = this.get("itemSetsData.itemSets"),
                                t = this.get("tra.item_sets_new_item_block_prefix"),
                                n = [];
                            if (!this.get("isItemSetsLoaded") && e) {
                                let s = !1;
                                e.forEach((e => {
                                    n.push(this.sanitize(e.title).then((t => {
                                        t.success || (e.title = this._findNewTitle(), s = !0)
                                    }))), e.blocks && e.blocks.forEach((e => {
                                        n.push(this.sanitize(e.type).then((n => {
                                            n.success || (e.type = t, s = !0)
                                        })))
                                    }))
                                })), Promise.all(n).then((e => {
                                    e && this._saveItemSets(this.get("itemSetsData"))
                                }))
                            }
                        }
                        this.set("isItemSetsLoaded", !0)
                    })), i.observe("/v1/input-settings", this, (e => {
                        this.set("hotkeySettings", e)
                    })))
                }))),
                itemHotkeys: s.Ember.computed("hotkeySettings", (function() {
                    const e = this.get("hotkeySettings"),
                        t = {};
                    return e && e.GameEvents && o.DEFAULT_ITEM_SLOTS.forEach((n => {
                        const s = e.GameEvents[`evtUseItem${n+1}`],
                            o = s.slice(s.lastIndexOf("[", s.length - 3));
                        t[n] = a.default[o]
                    })), t
                })),
                currentLocale: s.Ember.computed("tra.metadata.locale.id", (function() {
                    const e = this.get("tra.metadata.locale.id"),
                        t = e ? e.substr(0, 2).toLowerCase() : "en";
                    return "cs" === t ? "en" : t
                })),
                sortedChampions: s.Ember.computed("indexedChampions", "championInventory", (function() {
                    const e = this.get("indexedChampions"),
                        t = this.get("championInventory");
                    return e && t ? (s.Lodash.each(t, (t => {
                        e[t.id] && (e[t.id].freeToPlay = t.freeToPlay, e[t.id].ownership = t.ownership)
                    })), s.Lodash.values(e).sort(((e, t) => e.name.localeCompare(t.name, this.get("currentLocale"))))) : []
                })),
                saveItemSet: function(e) {
                    this.set("isSaving", !0), this._sendEvent({
                        id: o.TELEMETRY_EVENT_ID_SAVE
                    });
                    const t = this._getDeepCloneObject(this.get("itemSetsData")),
                        n = t.itemSets.findIndex((t => t.uid === e.uid));
                    return n < 0 ? (this.set("isSaving", !1), Promise.resolve()) : (t.itemSets[n] = e, this._saveItemSets(t))
                },
                removeItemSetByUid: function(e) {
                    this.set("isSaving", !0), this._sendEvent({
                        id: o.TELEMETRY_EVENT_ID_DELETE
                    });
                    const t = this._getDeepCloneObject(this.get("itemSetsData"));
                    return t.itemSets = t.itemSets.filter((t => t.uid !== e)), this._saveItemSets(t)
                },
                duplicateItemSetByUid: function(e, t) {
                    this.set("isSaving", !0), this._sendEvent({
                        id: o.TELEMETRY_EVENT_ID_DUPLICATE
                    });
                    let n = this._getDeepCloneObject(this.get("itemSetsData"));
                    n = this._checkUnsavedOptions(n, t);
                    const s = n.itemSets.find((t => t.uid === e));
                    if (!s) return this.set("isSaving", !1), Promise.resolve(e);
                    const i = this._getDeepCloneObject(s);
                    return i.uid = d(), i.title = this._findNewTitle(i.title), n.itemSets.push(i), this._saveItemSets(n).then((() => i.uid))
                },
                createEmptyItemSet: function(e) {
                    this.set("isSaving", !0), this._sendEvent({
                        id: o.TELEMETRY_EVENT_ID_CREATE_NEW
                    });
                    let t = this._getDeepCloneObject(this.get("itemSetsData"));
                    t = this._checkUnsavedOptions(t, e);
                    const n = (0, l.getNewItemSet)();
                    return n.uid = d(), n.title = this._findNewTitle(), n.associatedMaps = Object.keys(this.get("indexedMaps")).map((e => parseInt(e))), t.itemSets.push(n), this._saveItemSets(t).then((() => n.uid))
                },
                getRecommendedItemSets: function(e, t) {
                    const n = this.get("indexedChampions")[e].alias;
                    let s = n;
                    o.SPECIAL_CHAMP_ALIAS_KEY_MAP[n] && (s = o.SPECIAL_CHAMP_ALIAS_KEY_MAP[n]);
                    const i = o.MAP_ID_TO_RECOMMENDED_KEY_MAPPING[t];
                    return this.get("api.gameData").get(`/assets/DATA/Characters/${n}/Recommended/${s}${i}.json`)
                },
                duplicateFromRecommendedSet: function(e, t) {
                    return this.set("isSaving", !0), this._sendEvent({
                        id: o.TELEMETRY_EVENT_ID_DUPLICATE_RECOMMENDED
                    }), this.getRecommendedItemSets(e, t).then((n => {
                        const s = this.get("tra"),
                            o = Object.assign((0, l.getNewItemSet)(), {
                                associatedChampions: [e],
                                associatedMaps: [t],
                                blocks: n.blocks.map((e => ({
                                    type: s.get(`item_sets_recommended_set_viewer_section_name_${e.type}`),
                                    items: e.items
                                })))
                            });
                        o.uid = d(), o.title = this._findNewTitle(s.get("formatString")("item_sets_browser_duplicated_recommended_set_default_name", {
                            champion: this.get("indexedChampions")[e].name
                        }));
                        const i = this._getDeepCloneObject(this.get("itemSetsData"));
                        return i.itemSets.push(o), this._saveItemSets(i).then((() => o.uid))
                    }))
                },
                checkItemSetTitleRename: function(e, t) {
                    const n = this.get("itemSetsData.itemSets");
                    return s.Lodash.some(n, (n => n.title === e && n.uid !== t)) ? {
                        exists: !0,
                        newTitle: this._findNewTitle(e, t)
                    } : {
                        exists: !1
                    }
                },
                importItemSets: function(e, t) {
                    this.set("isSaving", !0), this._sendEvent({
                        id: o.TELEMETRY_EVENT_ID_MAP_IMPORT[t],
                        size: e.length
                    });
                    const n = [],
                        s = this._getDeepCloneObject(this.get("itemSetsData"));
                    return e.forEach((e => {
                        e.uid = d(), this.sanitize(e.title).then((t => {
                            t.success ? e.title = t.name : e.title = this._findNewTitle()
                        })), s.itemSets.push(e), n.push(e.uid)
                    })), this._saveItemSets(s).then((() => n))
                },
                validateItemSetsBlob: function(e) {
                    if (e) {
                        const t = [];
                        return (e instanceof Array ? e : e.itemSets instanceof Array ? e.itemSets : [e]).forEach((e => {
                            const n = c.validate(e, o.ITEM_SET_JSON_SCHEMA);
                            n.valid ? t.push(this._getImportableItemSetContent(e)) : (s.logger.warning("Item set failed validation", e), s.logger.warning("Item set validation errors", n.errors))
                        })), Promise.all(t)
                    }
                    return Promise.resolve([])
                },
                handleGetChampionInventory: function(e) {
                    let t = [];
                    e ? t = e.filter((e => e.id > 0)) : s.logger.warn("Unable to retrieve champion inventory"), this.set("championInventory", t)
                },
                handleGetChampionMasteries: function(e) {
                    this.set("championMasteries", e || [])
                },
                async sanitize(e) {
                    const t = {
                        name: e,
                        success: !1,
                        nameCheckResponse: {
                            errors: []
                        }
                    };
                    if (this.get("restrictedPageNamesEnabled")) {
                        try {
                            const {
                                success: n,
                                nameCheckResponse: s
                            } = await this.get("api.itemSets").post("/v1/item-sets/validate", {
                                name: e
                            });
                            t.success = n, t.nameCheckResponse = s
                        } catch (e) {
                            t.success = !1
                        }
                        t.success || (t.name = self.name), this.set("clean", !t.success)
                    } else t.success = !0;
                    return t
                },
                _getImportableItemSetContent: function(e) {
                    const t = [],
                        n = this.get("useDefaultedNames");
                    return e.blocks.forEach((e => t.push(e.type))), this._sanitizeTitles(t, e.title, o.TITLE_LENGTH_LIMIT).then((t => {
                        const o = {};
                        return o.title = t[0], o.associatedChampions = e.associatedChampions, o.associatedMaps = e.associatedMaps, o.blocks = [], e.blocks.forEach(((e, i) => {
                            o.blocks.push({
                                type: n ? this.get("tra.item_sets_new_item_block_prefix") : t[i + 1],
                                items: e.items.map((e => s.Lodash.pick(e, ["id", "count"])))
                            })
                        })), o
                    }))
                },
                _sanitizeTitles: function(e, t, n) {
                    const s = [];
                    s.push(this.sanitize(t).then((e => {
                        let t = e.name;
                        return t = e.success ? this._findNewTitle(t) : this._findNewTitle(), t
                    })));
                    const o = this.get("tra.item_sets_new_item_block_prefix");
                    return e.forEach((e => {
                        s.push(this.sanitize(e).then((e => {
                            let t = e.name;
                            return e.success || (t = o), t
                        })))
                    })), Promise.all(s).then((e => e.map((e => e.substring(0, n)))))
                },
                _saveItemSets: function(e) {
                    return this.get("api.itemSets").put(`/v1/item-sets/${this.get("currentSummonerId")}/sets`, e).catch((e => {
                        s.logger.error("unable to save item sets", e), this._sendEvent({
                            id: o.TELEMETRY_EVENT_ID_SAVE_FAILURE
                        })
                    })).then((() => {
                        this.set("isSaving", !1)
                    }))
                },
                _checkUnsavedOptions(e, t) {
                    if (t && t.unsavedItemSet) {
                        const {
                            unsavedItemSet: n
                        } = t, s = e.itemSets.findIndex((e => e.uid === n.uid));
                        e.itemSets[s] = n
                    }
                    return e
                },
                _getDeepCloneObject: function(e) {
                    return JSON.parse(JSON.stringify(e))
                },
                _findNewTitle: function(e, t) {
                    void 0 === e && (e = this.get("tra.item_sets_new_empty_set_prefix"));
                    const n = this.get("itemSetsData.itemSets");
                    let o = 1,
                        i = e = e.replace(/[\s]\([0-9]+\)$/, "");
                    for (; s.Lodash.some(n, (e => e.title === i && e.uid !== t));) i = `${e} (${o++})`;
                    return i
                }
            });
            t.default = p
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            t.default = {
                "[Esc]": "Esc",
                "[1]": "1",
                "[2]": "2",
                "[3]": "3",
                "[4]": "4",
                "[5]": "5",
                "[6]": "6",
                "[7]": "7",
                "[8]": "8",
                "[9]": "9",
                "[0]": "0",
                "[-]": "-",
                "[=]": "=",
                "[Back]": "Bk",
                "[Tab]": "Tab",
                "[TAB]": "Tab",
                "[q]": "Q",
                "[w]": "W",
                "[e]": "E",
                "[r]": "R",
                "[t]": "T",
                "[y]": "Y",
                "[u]": "U",
                "[i]": "I",
                "[o]": "O",
                "[p]": "P",
                "[[]": "[",
                "[]]": "]",
                "[Return]": "Rtn",
                "[a]": "A",
                "[s]": "S",
                "[d]": "D",
                "[f]": "F",
                "[g]": "G",
                "[h]": "H",
                "[j]": "J",
                "[k]": "K",
                "[l]": "L",
                "[Semicolon]": ";",
                "[']": "'",
                "[`]": "`",
                "[Backslash]": "Bkslash",
                "[z]": "Z",
                "[x]": "X",
                "[c]": "C",
                "[v]": "V",
                "[b]": "B",
                "[n]": "N",
                "[m]": "M",
                "[,]": ",",
                "[.]": ".",
                "[/]": "/",
                "[*]": "*",
                "[Space]": "Spce",
                "[CapsLock]": "CapsLk",
                "[F1]": "F1",
                "[F2]": "F2",
                "[F3]": "F3",
                "[F4]": "F4",
                "[F5]": "F5",
                "[F6]": "F6",
                "[F7]": "F7",
                "[F8]": "F8",
                "[F9]": "F9",
                "[F10]": "F10",
                "[NumLock]": "NumLk",
                "[ScrollLock]": "ScrollLk",
                "[Num7]": "Num7",
                "[Num8]": "Num8",
                "[Num9]": "Num9",
                "[Num-]": "Num-",
                "[Num4]": "Num4",
                "[Num5]": "Num5",
                "[Num6]": "Num6",
                "[Num+]": "Num+",
                "[Num1]": "Num1",
                "[Num2]": "Num2",
                "[Num3]": "Num3",
                "[Num0]": "Num0",
                "[Num.]": "Num.",
                "[F11]": "F11",
                "[F12]": "F12",
                "[jYen]": "jKana",
                "[Num=]": "Num=",
                "[NumEnter]": "NumEnter",
                "[Mute]": "Mute",
                "[Vol-]": "Vol-",
                "[Vol+]": "Vol+",
                "[Num,]": "Num,",
                "[Num/]": "Num/",
                "[Home]": "webHome",
                "[Up Arrow]": "Up",
                "[PgUp]": "PgUp",
                "[Left Arrow]": "Left",
                "[Right Arrow]": "Rght",
                "[End]": "End",
                "[Down Arrow]": "Down",
                "[PgDn]": "PgDn",
                "[Ins]": "Ins",
                "[Del]": "Del",
                "[L Win]": "Win",
                "[R Win]": "Win",
                "[Button 1]": "MB1",
                "[Button 2]": "MB2",
                "[Button 3]": "MB3",
                "[Button 4]": "MB4",
                "[Button 5]": "MB5",
                "[Button 6]": "MB6",
                "[Button 7]": "MB7",
                "[Button 8]": "MB8",
                "[<Unbound>]": ""
            }
        }, (e, t, n) => {
            "use strict";
            var s = e.exports.Validator = n(165);
            e.exports.ValidatorResult = n(173).ValidatorResult, e.exports.ValidationError = n(173).ValidationError, e.exports.SchemaError = n(173).SchemaError, e.exports.SchemaScanResult = n(174).SchemaScanResult, e.exports.scan = n(174).scan, e.exports.validate = function(e, t, n) {
                return (new s).validate(e, t, n)
            }
        }, (e, t, n) => {
            "use strict";
            var s = n(166),
                o = n(172),
                i = n(173),
                l = n(174).scan,
                a = i.ValidatorResult,
                r = i.SchemaError,
                c = i.SchemaContext,
                d = function e() {
                    this.customFormats = Object.create(e.prototype.customFormats), this.schemas = {}, this.unresolvedRefs = [], this.types = Object.create(p), this.attributes = Object.create(o.validators)
                };

            function m(e) {
                var t = "string" == typeof e ? e : e.$ref;
                return "string" == typeof t && t
            }
            d.prototype.customFormats = {}, d.prototype.schemas = null, d.prototype.types = null, d.prototype.attributes = null, d.prototype.unresolvedRefs = null, d.prototype.addSchema = function(e, t) {
                var n = this;
                if (!e) return null;
                var s = l(t || "/", e),
                    o = t || e.id;
                for (var i in s.id) this.schemas[i] = s.id[i];
                for (var i in s.ref) this.unresolvedRefs.push(i);
                return this.unresolvedRefs = this.unresolvedRefs.filter((function(e) {
                    return void 0 === n.schemas[e]
                })), this.schemas[o]
            }, d.prototype.addSubSchemaArray = function(e, t) {
                if (t instanceof Array)
                    for (var n = 0; n < t.length; n++) this.addSubSchema(e, t[n])
            }, d.prototype.addSubSchemaObject = function(e, t) {
                if (t && "object" == typeof t)
                    for (var n in t) this.addSubSchema(e, t[n])
            }, d.prototype.setSchemas = function(e) {
                this.schemas = e
            }, d.prototype.getSchema = function(e) {
                return this.schemas[e]
            }, d.prototype.validate = function(e, t, n, o) {
                n || (n = {});
                var i = n.propertyName || "instance",
                    a = s.resolve(n.base || "/", t.id || "");
                if (!o) {
                    (o = new c(t, n, i, a, Object.create(this.schemas))).schemas[a] || (o.schemas[a] = t);
                    var d = l(a, t);
                    for (var m in d.id) {
                        var p = d.id[m];
                        o.schemas[m] = p
                    }
                }
                if (t) {
                    var u = this.validateSchema(e, t, n, o);
                    if (!u) throw new Error("Result undefined");
                    return u
                }
                throw new r("no schema specified", t)
            }, d.prototype.validateSchema = function(e, t, n, s) {
                var l, d = new a(e, t, n, s);
                if ("boolean" == typeof t) !0 === t ? t = {} : !1 === t && (t = {
                    type: []
                });
                else if (!t) throw new Error("schema is undefined");
                if (t.extends)
                    if (t.extends instanceof Array) {
                        var p = {
                            schema: t,
                            ctx: s
                        };
                        t.extends.forEach(this.schemaTraverser.bind(this, p)), t = p.schema, p.schema = null, p.ctx = null, p = null
                    } else t = i.deepMerge(t, this.superResolve(t.extends, s));
                if (l = m(t)) {
                    var u = this.resolve(t, l, s),
                        h = new c(u.subschema, n, s.propertyPath, u.switchSchema, s.schemas);
                    return this.validateSchema(e, u.subschema, n, h)
                }
                var g = n && n.skipAttributes || [];
                for (var f in t)
                    if (!o.ignoreProperties[f] && g.indexOf(f) < 0) {
                        var _ = null,
                            y = this.attributes[f];
                        if (y) _ = y.call(this, e, t, n, s);
                        else if (!1 === n.allowUnknownAttributes) throw new r("Unsupported attribute: " + f, t);
                        _ && d.importErrors(_)
                    } if ("function" == typeof n.rewrite) {
                    var b = n.rewrite.call(this, e, t, n, s);
                    d.instance = b
                }
                return d
            }, d.prototype.schemaTraverser = function(e, t) {
                e.schema = i.deepMerge(e.schema, this.superResolve(t, e.ctx))
            }, d.prototype.superResolve = function(e, t) {
                var n;
                return (n = m(e)) ? this.resolve(e, n, t).subschema : e
            }, d.prototype.resolve = function(e, t, n) {
                if (t = n.resolve(t), n.schemas[t]) return {
                    subschema: n.schemas[t],
                    switchSchema: t
                };
                var o = s.parse(t),
                    l = o && o.hash,
                    a = l && l.length && t.substr(0, t.length - l.length);
                if (!a || !n.schemas[a]) throw new r("no such schema <" + t + ">", e);
                var c = i.objectGetPath(n.schemas[a], l.substr(1));
                if (void 0 === c) throw new r("no such schema " + l + " located in <" + a + ">", e);
                return {
                    subschema: c,
                    switchSchema: t
                }
            }, d.prototype.testType = function(e, t, n, s, o) {
                if ("function" == typeof this.types[o]) return this.types[o].call(this, e);
                if (o && "object" == typeof o) {
                    var i = this.validateSchema(e, o, n, s);
                    return void 0 === i || !(i && i.errors.length)
                }
                return !0
            };
            var p = d.prototype.types = {};
            p.string = function(e) {
                return "string" == typeof e
            }, p.number = function(e) {
                return "number" == typeof e && isFinite(e)
            }, p.integer = function(e) {
                return "number" == typeof e && e % 1 == 0
            }, p.boolean = function(e) {
                return "boolean" == typeof e
            }, p.array = function(e) {
                return Array.isArray(e)
            }, p.null = function(e) {
                return null === e
            }, p.date = function(e) {
                return e instanceof Date
            }, p.any = function(e) {
                return !0
            }, p.object = function(e) {
                return e && "object" == typeof e && !(e instanceof Array) && !(e instanceof Date)
            }, e.exports = d
        }, (e, t, n) => {
            "use strict";
            const s = n(167);
            s.URL = URL, e.exports = s
        }, (e, t, n) => {
            "use strict";
            var s = n(168);

            function o() {
                this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null
            }
            var i = /^([a-z0-9.+-]+:)/i,
                l = /:[0-9]*$/,
                a = /^(\/\/?(?!\/)[^?\s]*)(\?[^\s]*)?$/,
                r = ["{", "}", "|", "\\", "^", "`"].concat(["<", ">", '"', "`", " ", "\r", "\n", "\t"]),
                c = ["'"].concat(r),
                d = ["%", "/", "?", ";", "#"].concat(c),
                m = ["/", "?", "#"],
                p = /^[+a-z0-9A-Z_-]{0,63}$/,
                u = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
                h = {
                    javascript: !0,
                    "javascript:": !0
                },
                g = {
                    javascript: !0,
                    "javascript:": !0
                },
                f = {
                    http: !0,
                    https: !0,
                    ftp: !0,
                    gopher: !0,
                    file: !0,
                    "http:": !0,
                    "https:": !0,
                    "ftp:": !0,
                    "gopher:": !0,
                    "file:": !0
                },
                _ = n(169);

            function y(e, t, n) {
                if (e && "object" == typeof e && e instanceof o) return e;
                var s = new o;
                return s.parse(e, t, n), s
            }
            o.prototype.parse = function(e, t, n) {
                if ("string" != typeof e) throw new TypeError("Parameter 'url' must be a string, not " + typeof e);
                var o = e.indexOf("?"),
                    l = -1 !== o && o < e.indexOf("#") ? "?" : "#",
                    r = e.split(l);
                r[0] = r[0].replace(/\\/g, "/");
                var y = e = r.join(l);
                if (y = y.trim(), !n && 1 === e.split("#").length) {
                    var b = a.exec(y);
                    if (b) return this.path = y, this.href = y, this.pathname = b[1], b[2] ? (this.search = b[2], this.query = t ? _.parse(this.search.substr(1)) : this.search.substr(1)) : t && (this.search = "", this.query = {}), this
                }
                var k = i.exec(y);
                if (k) {
                    var S = (k = k[0]).toLowerCase();
                    this.protocol = S, y = y.substr(k.length)
                }
                if (n || k || y.match(/^\/\/[^@/]+@[^@/]+/)) {
                    var v = "//" === y.substr(0, 2);
                    !v || k && g[k] || (y = y.substr(2), this.slashes = !0)
                }
                if (!g[k] && (v || k && !f[k])) {
                    for (var E, x, I = -1, w = 0; w < m.length; w++) {
                        -1 !== (P = y.indexOf(m[w])) && (-1 === I || P < I) && (I = P)
                    } - 1 !== (x = -1 === I ? y.lastIndexOf("@") : y.lastIndexOf("@", I)) && (E = y.slice(0, x), y = y.slice(x + 1), this.auth = decodeURIComponent(E)), I = -1;
                    for (w = 0; w < d.length; w++) {
                        var P; - 1 !== (P = y.indexOf(d[w])) && (-1 === I || P < I) && (I = P)
                    } - 1 === I && (I = y.length), this.host = y.slice(0, I), y = y.slice(I), this.parseHost(), this.hostname = this.hostname || "";
                    var T = "[" === this.hostname[0] && "]" === this.hostname[this.hostname.length - 1];
                    if (!T)
                        for (var C = this.hostname.split(/\./), R = (w = 0, C.length); w < R; w++) {
                            var O = C[w];
                            if (O && !O.match(p)) {
                                for (var A = "", D = 0, M = O.length; D < M; D++) O.charCodeAt(D) > 127 ? A += "x" : A += O[D];
                                if (!A.match(p)) {
                                    var L = C.slice(0, w),
                                        N = C.slice(w + 1),
                                        B = O.match(u);
                                    B && (L.push(B[1]), N.unshift(B[2])), N.length && (y = "/" + N.join(".") + y), this.hostname = L.join(".");
                                    break
                                }
                            }
                        }
                    this.hostname.length > 255 ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), T || (this.hostname = s.toASCII(this.hostname));
                    var j = this.port ? ":" + this.port : "",
                        F = this.hostname || "";
                    this.host = F + j, this.href += this.host, T && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), "/" !== y[0] && (y = "/" + y))
                }
                if (!h[S])
                    for (w = 0, R = c.length; w < R; w++) {
                        var U = c[w];
                        if (-1 !== y.indexOf(U)) {
                            var H = encodeURIComponent(U);
                            H === U && (H = escape(U)), y = y.split(U).join(H)
                        }
                    }
                var V = y.indexOf("#"); - 1 !== V && (this.hash = y.substr(V), y = y.slice(0, V));
                var K = y.indexOf("?");
                if (-1 !== K ? (this.search = y.substr(K), this.query = y.substr(K + 1), t && (this.query = _.parse(this.query)), y = y.slice(0, K)) : t && (this.search = "", this.query = {}), y && (this.pathname = y), f[S] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
                    j = this.pathname || "";
                    var G = this.search || "";
                    this.path = j + G
                }
                return this.href = this.format(), this
            }, o.prototype.format = function() {
                var e = this.auth || "";
                e && (e = (e = encodeURIComponent(e)).replace(/%3A/i, ":"), e += "@");
                var t = this.protocol || "",
                    n = this.pathname || "",
                    s = this.hash || "",
                    o = !1,
                    i = "";
                this.host ? o = e + this.host : this.hostname && (o = e + (-1 === this.hostname.indexOf(":") ? this.hostname : "[" + this.hostname + "]"), this.port && (o += ":" + this.port)), this.query && "object" == typeof this.query && Object.keys(this.query).length && (i = _.stringify(this.query));
                var l = this.search || i && "?" + i || "";
                return t && ":" !== t.substr(-1) && (t += ":"), this.slashes || (!t || f[t]) && !1 !== o ? (o = "//" + (o || ""), n && "/" !== n.charAt(0) && (n = "/" + n)) : o || (o = ""), s && "#" !== s.charAt(0) && (s = "#" + s), l && "?" !== l.charAt(0) && (l = "?" + l), t + o + (n = n.replace(/[?#]/g, (function(e) {
                    return encodeURIComponent(e)
                }))) + (l = l.replace("#", "%23")) + s
            }, o.prototype.resolve = function(e) {
                return this.resolveObject(y(e, !1, !0)).format()
            }, o.prototype.resolveObject = function(e) {
                if ("string" == typeof e) {
                    var t = new o;
                    t.parse(e, !1, !0), e = t
                }
                for (var n = new o, s = Object.keys(this), i = 0; i < s.length; i++) {
                    var l = s[i];
                    n[l] = this[l]
                }
                if (n.hash = e.hash, "" === e.href) return n.href = n.format(), n;
                if (e.slashes && !e.protocol) {
                    for (var a = Object.keys(e), r = 0; r < a.length; r++) {
                        var c = a[r];
                        "protocol" !== c && (n[c] = e[c])
                    }
                    return f[n.protocol] && n.hostname && !n.pathname && (n.pathname = "/", n.path = n.pathname), n.href = n.format(), n
                }
                if (e.protocol && e.protocol !== n.protocol) {
                    if (!f[e.protocol]) {
                        for (var d = Object.keys(e), m = 0; m < d.length; m++) {
                            var p = d[m];
                            n[p] = e[p]
                        }
                        return n.href = n.format(), n
                    }
                    if (n.protocol = e.protocol, e.host || g[e.protocol]) n.pathname = e.pathname;
                    else {
                        for (var u = (e.pathname || "").split("/"); u.length && !(e.host = u.shift()););
                        e.host || (e.host = ""), e.hostname || (e.hostname = ""), "" !== u[0] && u.unshift(""), u.length < 2 && u.unshift(""), n.pathname = u.join("/")
                    }
                    if (n.search = e.search, n.query = e.query, n.host = e.host || "", n.auth = e.auth, n.hostname = e.hostname || e.host, n.port = e.port, n.pathname || n.search) {
                        var h = n.pathname || "",
                            _ = n.search || "";
                        n.path = h + _
                    }
                    return n.slashes = n.slashes || e.slashes, n.href = n.format(), n
                }
                var y = n.pathname && "/" === n.pathname.charAt(0),
                    b = e.host || e.pathname && "/" === e.pathname.charAt(0),
                    k = b || y || n.host && e.pathname,
                    S = k,
                    v = n.pathname && n.pathname.split("/") || [],
                    E = (u = e.pathname && e.pathname.split("/") || [], n.protocol && !f[n.protocol]);
                if (E && (n.hostname = "", n.port = null, n.host && ("" === v[0] ? v[0] = n.host : v.unshift(n.host)), n.host = "", e.protocol && (e.hostname = null, e.port = null, e.host && ("" === u[0] ? u[0] = e.host : u.unshift(e.host)), e.host = null), k = k && ("" === u[0] || "" === v[0])), b) n.host = e.host || "" === e.host ? e.host : n.host, n.hostname = e.hostname || "" === e.hostname ? e.hostname : n.hostname, n.search = e.search, n.query = e.query, v = u;
                else if (u.length) v || (v = []), v.pop(), v = v.concat(u), n.search = e.search, n.query = e.query;
                else if (null != e.search) {
                    if (E) n.host = v.shift(), n.hostname = n.host, (T = !!(n.host && n.host.indexOf("@") > 0) && n.host.split("@")) && (n.auth = T.shift(), n.hostname = T.shift(), n.host = n.hostname);
                    return n.search = e.search, n.query = e.query, null === n.pathname && null === n.search || (n.path = (n.pathname ? n.pathname : "") + (n.search ? n.search : "")), n.href = n.format(), n
                }
                if (!v.length) return n.pathname = null, n.search ? n.path = "/" + n.search : n.path = null, n.href = n.format(), n;
                for (var x = v.slice(-1)[0], I = (n.host || e.host || v.length > 1) && ("." === x || ".." === x) || "" === x, w = 0, P = v.length; P >= 0; P--) "." === (x = v[P]) ? v.splice(P, 1) : ".." === x ? (v.splice(P, 1), w++) : w && (v.splice(P, 1), w--);
                if (!k && !S)
                    for (; w--; w) v.unshift("..");
                !k || "" === v[0] || v[0] && "/" === v[0].charAt(0) || v.unshift(""), I && "/" !== v.join("/").substr(-1) && v.push("");
                var T, C = "" === v[0] || v[0] && "/" === v[0].charAt(0);
                E && (n.hostname = C ? "" : v.length ? v.shift() : "", n.host = n.hostname, (T = !!(n.host && n.host.indexOf("@") > 0) && n.host.split("@")) && (n.auth = T.shift(), n.hostname = T.shift(), n.host = n.hostname));
                return (k = k || n.host && v.length) && !C && v.unshift(""), v.length > 0 ? n.pathname = v.join("/") : (n.pathname = null, n.path = null), null === n.pathname && null === n.search || (n.path = (n.pathname ? n.pathname : "") + (n.search ? n.search : "")), n.auth = e.auth || n.auth, n.slashes = n.slashes || e.slashes, n.href = n.format(), n
            }, o.prototype.parseHost = function() {
                var e = this.host,
                    t = l.exec(e);
                t && (":" !== (t = t[0]) && (this.port = t.substr(1)), e = e.substr(0, e.length - t.length)), e && (this.hostname = e)
            }, t.parse = y, t.resolve = function(e, t) {
                return y(e, !1, !0).resolve(t)
            }, t.resolveObject = function(e, t) {
                return e ? y(e, !1, !0).resolveObject(t) : t
            }, t.format = function(e) {
                return "string" == typeof e && (e = y(e)), e instanceof o ? e.format() : o.prototype.format.call(e)
            }, t.Url = o
        }, function(e, t, n) {
            var s;
            e = n.nmd(e),
                function(o) {
                    t && t.nodeType, e && e.nodeType;
                    var i = "object" == typeof n.g && n.g;
                    i.global !== i && i.window !== i && i.self;
                    var l, a = 2147483647,
                        r = 36,
                        c = 1,
                        d = 26,
                        m = 38,
                        p = 700,
                        u = 72,
                        h = 128,
                        g = "-",
                        f = /^xn--/,
                        _ = /[^\x20-\x7E]/,
                        y = /[\x2E\u3002\uFF0E\uFF61]/g,
                        b = {
                            overflow: "Overflow: input needs wider integers to process",
                            "not-basic": "Illegal input >= 0x80 (not a basic code point)",
                            "invalid-input": "Invalid input"
                        },
                        k = r - c,
                        S = Math.floor,
                        v = String.fromCharCode;

                    function E(e) {
                        throw new RangeError(b[e])
                    }

                    function x(e, t) {
                        for (var n = e.length, s = []; n--;) s[n] = t(e[n]);
                        return s
                    }

                    function I(e, t) {
                        var n = e.split("@"),
                            s = "";
                        return n.length > 1 && (s = n[0] + "@", e = n[1]), s + x((e = e.replace(y, ".")).split("."), t).join(".")
                    }

                    function w(e) {
                        for (var t, n, s = [], o = 0, i = e.length; o < i;)(t = e.charCodeAt(o++)) >= 55296 && t <= 56319 && o < i ? 56320 == (64512 & (n = e.charCodeAt(o++))) ? s.push(((1023 & t) << 10) + (1023 & n) + 65536) : (s.push(t), o--) : s.push(t);
                        return s
                    }

                    function P(e) {
                        return x(e, (function(e) {
                            var t = "";
                            return e > 65535 && (t += v((e -= 65536) >>> 10 & 1023 | 55296), e = 56320 | 1023 & e), t += v(e)
                        })).join("")
                    }

                    function T(e, t) {
                        return e + 22 + 75 * (e < 26) - ((0 != t) << 5)
                    }

                    function C(e, t, n) {
                        var s = 0;
                        for (e = n ? S(e / p) : e >> 1, e += S(e / t); e > k * d >> 1; s += r) e = S(e / k);
                        return S(s + (k + 1) * e / (e + m))
                    }

                    function R(e) {
                        var t, n, s, o, i, l, m, p, f, _, y, b = [],
                            k = e.length,
                            v = 0,
                            x = h,
                            I = u;
                        for ((n = e.lastIndexOf(g)) < 0 && (n = 0), s = 0; s < n; ++s) e.charCodeAt(s) >= 128 && E("not-basic"), b.push(e.charCodeAt(s));
                        for (o = n > 0 ? n + 1 : 0; o < k;) {
                            for (i = v, l = 1, m = r; o >= k && E("invalid-input"), ((p = (y = e.charCodeAt(o++)) - 48 < 10 ? y - 22 : y - 65 < 26 ? y - 65 : y - 97 < 26 ? y - 97 : r) >= r || p > S((a - v) / l)) && E("overflow"), v += p * l, !(p < (f = m <= I ? c : m >= I + d ? d : m - I)); m += r) l > S(a / (_ = r - f)) && E("overflow"), l *= _;
                            I = C(v - i, t = b.length + 1, 0 == i), S(v / t) > a - x && E("overflow"), x += S(v / t), v %= t, b.splice(v++, 0, x)
                        }
                        return P(b)
                    }

                    function O(e) {
                        var t, n, s, o, i, l, m, p, f, _, y, b, k, x, I, P = [];
                        for (b = (e = w(e)).length, t = h, n = 0, i = u, l = 0; l < b; ++l)(y = e[l]) < 128 && P.push(v(y));
                        for (s = o = P.length, o && P.push(g); s < b;) {
                            for (m = a, l = 0; l < b; ++l)(y = e[l]) >= t && y < m && (m = y);
                            for (m - t > S((a - n) / (k = s + 1)) && E("overflow"), n += (m - t) * k, t = m, l = 0; l < b; ++l)
                                if ((y = e[l]) < t && ++n > a && E("overflow"), y == t) {
                                    for (p = n, f = r; !(p < (_ = f <= i ? c : f >= i + d ? d : f - i)); f += r) I = p - _, x = r - _, P.push(v(T(_ + I % x, 0))), p = S(I / x);
                                    P.push(v(T(p, 0))), i = C(n, k, s == o), n = 0, ++s
                                }++ n, ++t
                        }
                        return P.join("")
                    }
                    l = {
                        version: "1.4.1",
                        ucs2: {
                            decode: w,
                            encode: P
                        },
                        decode: R,
                        encode: O,
                        toASCII: function(e) {
                            return I(e, (function(e) {
                                return _.test(e) ? "xn--" + O(e) : e
                            }))
                        },
                        toUnicode: function(e) {
                            return I(e, (function(e) {
                                return f.test(e) ? R(e.slice(4).toLowerCase()) : e
                            }))
                        }
                    }, void 0 === (s = function() {
                        return l
                    }.call(t, n, t, e)) || (e.exports = s)
                }()
        }, (e, t, n) => {
            "use strict";
            t.decode = t.parse = n(170), t.encode = t.stringify = n(171)
        }, e => {
            "use strict";

            function t(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
            }
            e.exports = function(e, n, s, o) {
                n = n || "&", s = s || "=";
                var i = {};
                if ("string" != typeof e || 0 === e.length) return i;
                var l = /\+/g;
                e = e.split(n);
                var a = 1e3;
                o && "number" == typeof o.maxKeys && (a = o.maxKeys);
                var r = e.length;
                a > 0 && r > a && (r = a);
                for (var c = 0; c < r; ++c) {
                    var d, m, p, u, h = e[c].replace(l, "%20"),
                        g = h.indexOf(s);
                    g >= 0 ? (d = h.substr(0, g), m = h.substr(g + 1)) : (d = h, m = ""), p = decodeURIComponent(d), u = decodeURIComponent(m), t(i, p) ? Array.isArray(i[p]) ? i[p].push(u) : i[p] = [i[p], u] : i[p] = u
                }
                return i
            }
        }, e => {
            "use strict";
            var t = function(e) {
                switch (typeof e) {
                    case "string":
                        return e;
                    case "boolean":
                        return e ? "true" : "false";
                    case "number":
                        return isFinite(e) ? e : "";
                    default:
                        return ""
                }
            };
            e.exports = function(e, n, s, o) {
                return n = n || "&", s = s || "=", null === e && (e = void 0), "object" == typeof e ? Object.keys(e).map((function(o) {
                    var i = encodeURIComponent(t(o)) + s;
                    return Array.isArray(e[o]) ? e[o].map((function(e) {
                        return i + encodeURIComponent(t(e))
                    })).join(n) : i + encodeURIComponent(t(e[o]))
                })).join(n) : o ? encodeURIComponent(t(o)) + s + encodeURIComponent(t(e)) : ""
            }
        }, (e, t, n) => {
            "use strict";
            var s = n(173),
                o = s.ValidatorResult,
                i = s.SchemaError,
                l = {
                    ignoreProperties: {
                        id: !0,
                        default: !0,
                        description: !0,
                        title: !0,
                        exclusiveMinimum: !0,
                        exclusiveMaximum: !0,
                        additionalItems: !0,
                        $schema: !0,
                        $ref: !0,
                        extends: !0
                    }
                },
                a = l.validators = {};

            function r(e, t, n, s, o) {
                var i = t.throwError;
                t.throwError = !1;
                var l = this.validateSchema(e, o, t, n);
                return t.throwError = i, !l.valid && s instanceof Function && s(l), l.valid
            }

            function c(e, t, n, s, o, i) {
                if (this.types.object(e) && (!t.properties || void 0 === t.properties[o]))
                    if (!1 === t.additionalProperties) i.addError({
                        name: "additionalProperties",
                        argument: o,
                        message: "additionalProperty " + JSON.stringify(o) + " exists in instance when not allowed"
                    });
                    else {
                        var l = t.additionalProperties || {};
                        "function" == typeof n.preValidateProperty && n.preValidateProperty(e, o, l, n, s);
                        var a = this.validateSchema(e[o], l, n, s.makeChild(l, o));
                        a.instance !== i.instance[o] && (i.instance[o] = a.instance), i.importErrors(a)
                    }
            }
            a.type = function(e, t, n, s) {
                if (void 0 === e) return null;
                var i = new o(e, t, n, s),
                    l = Array.isArray(t.type) ? t.type : [t.type];
                if (!l.some(this.testType.bind(this, e, t, n, s))) {
                    var a = l.map((function(e) {
                        return e.id && "<" + e.id + ">" || e + ""
                    }));
                    i.addError({
                        name: "type",
                        argument: a,
                        message: "is not of a type(s) " + a
                    })
                }
                return i
            }, a.anyOf = function(e, t, n, s) {
                if (void 0 === e) return null;
                var l = new o(e, t, n, s),
                    a = new o(e, t, n, s);
                if (!Array.isArray(t.anyOf)) throw new i("anyOf must be an array");
                if (!t.anyOf.some(r.bind(this, e, n, s, (function(e) {
                        a.importErrors(e)
                    })))) {
                    var c = t.anyOf.map((function(e, t) {
                        return e.id && "<" + e.id + ">" || e.title && JSON.stringify(e.title) || e.$ref && "<" + e.$ref + ">" || "[subschema " + t + "]"
                    }));
                    n.nestedErrors && l.importErrors(a), l.addError({
                        name: "anyOf",
                        argument: c,
                        message: "is not any of " + c.join(",")
                    })
                }
                return l
            }, a.allOf = function(e, t, n, s) {
                if (void 0 === e) return null;
                if (!Array.isArray(t.allOf)) throw new i("allOf must be an array");
                var l = new o(e, t, n, s),
                    a = this;
                return t.allOf.forEach((function(t, o) {
                    var i = a.validateSchema(e, t, n, s);
                    if (!i.valid) {
                        var r = t.id && "<" + t.id + ">" || t.title && JSON.stringify(t.title) || t.$ref && "<" + t.$ref + ">" || "[subschema " + o + "]";
                        l.addError({
                            name: "allOf",
                            argument: {
                                id: r,
                                length: i.errors.length,
                                valid: i
                            },
                            message: "does not match allOf schema " + r + " with " + i.errors.length + " error[s]:"
                        }), l.importErrors(i)
                    }
                })), l
            }, a.oneOf = function(e, t, n, s) {
                if (void 0 === e) return null;
                if (!Array.isArray(t.oneOf)) throw new i("oneOf must be an array");
                var l = new o(e, t, n, s),
                    a = new o(e, t, n, s),
                    c = t.oneOf.filter(r.bind(this, e, n, s, (function(e) {
                        a.importErrors(e)
                    }))).length,
                    d = t.oneOf.map((function(e, t) {
                        return e.id && "<" + e.id + ">" || e.title && JSON.stringify(e.title) || e.$ref && "<" + e.$ref + ">" || "[subschema " + t + "]"
                    }));
                return 1 !== c && (n.nestedErrors && l.importErrors(a), l.addError({
                    name: "oneOf",
                    argument: d,
                    message: "is not exactly one from " + d.join(",")
                })), l
            }, a.properties = function(e, t, n, s) {
                if (this.types.object(e)) {
                    var i = new o(e, t, n, s),
                        l = t.properties || {};
                    for (var a in l) {
                        "function" == typeof n.preValidateProperty && n.preValidateProperty(e, a, l[a], n, s);
                        var r = Object.hasOwnProperty.call(e, a) ? e[a] : void 0,
                            c = this.validateSchema(r, l[a], n, s.makeChild(l[a], a));
                        c.instance !== i.instance[a] && (i.instance[a] = c.instance), i.importErrors(c)
                    }
                    return i
                }
            }, a.patternProperties = function(e, t, n, s) {
                if (this.types.object(e)) {
                    var i = new o(e, t, n, s),
                        l = t.patternProperties || {};
                    for (var a in e) {
                        var r = !0;
                        for (var d in l) {
                            if (new RegExp(d).test(a)) {
                                r = !1, "function" == typeof n.preValidateProperty && n.preValidateProperty(e, a, l[d], n, s);
                                var m = this.validateSchema(e[a], l[d], n, s.makeChild(l[d], a));
                                m.instance !== i.instance[a] && (i.instance[a] = m.instance), i.importErrors(m)
                            }
                        }
                        r && c.call(this, e, t, n, s, a, i)
                    }
                    return i
                }
            }, a.additionalProperties = function(e, t, n, s) {
                if (this.types.object(e)) {
                    if (t.patternProperties) return null;
                    var i = new o(e, t, n, s);
                    for (var l in e) c.call(this, e, t, n, s, l, i);
                    return i
                }
            }, a.minProperties = function(e, t, n, s) {
                if (this.types.object(e)) {
                    var i = new o(e, t, n, s);
                    return Object.keys(e).length >= t.minProperties || i.addError({
                        name: "minProperties",
                        argument: t.minProperties,
                        message: "does not meet minimum property length of " + t.minProperties
                    }), i
                }
            }, a.maxProperties = function(e, t, n, s) {
                if (this.types.object(e)) {
                    var i = new o(e, t, n, s);
                    return Object.keys(e).length <= t.maxProperties || i.addError({
                        name: "maxProperties",
                        argument: t.maxProperties,
                        message: "does not meet maximum property length of " + t.maxProperties
                    }), i
                }
            }, a.items = function(e, t, n, s) {
                var i = this;
                if (this.types.array(e) && t.items) {
                    var l = new o(e, t, n, s);
                    return e.every((function(e, o) {
                        var a = Array.isArray(t.items) ? t.items[o] || t.additionalItems : t.items;
                        if (void 0 === a) return !0;
                        if (!1 === a) return l.addError({
                            name: "items",
                            message: "additionalItems not permitted"
                        }), !1;
                        var r = i.validateSchema(e, a, n, s.makeChild(a, o));
                        return r.instance !== l.instance[o] && (l.instance[o] = r.instance), l.importErrors(r), !0
                    })), l
                }
            }, a.minimum = function(e, t, n, s) {
                if (this.types.number(e)) {
                    var i = new o(e, t, n, s);
                    return (t.exclusiveMinimum && !0 === t.exclusiveMinimum ? e > t.minimum : e >= t.minimum) || i.addError({
                        name: "minimum",
                        argument: t.minimum,
                        message: "must have a minimum value of " + t.minimum
                    }), i
                }
            }, a.maximum = function(e, t, n, s) {
                if (this.types.number(e)) {
                    var i = new o(e, t, n, s);
                    return (t.exclusiveMaximum && !0 === t.exclusiveMaximum ? e < t.maximum : e <= t.maximum) || i.addError({
                        name: "maximum",
                        argument: t.maximum,
                        message: "must have a maximum value of " + t.maximum
                    }), i
                }
            };
            var d = function(e, t, n, l, a, r) {
                if (this.types.number(e)) {
                    var c = t[a];
                    if (0 == c) throw new i(a + " cannot be zero");
                    var d = new o(e, t, n, l),
                        m = s.getDecimalPlaces(e),
                        p = s.getDecimalPlaces(c),
                        u = Math.max(m, p),
                        h = Math.pow(10, u);
                    return Math.round(e * h) % Math.round(c * h) != 0 && d.addError({
                        name: a,
                        argument: c,
                        message: r + JSON.stringify(c)
                    }), d
                }
            };

            function m(e, t, n) {
                var o, i = n.length;
                for (o = t + 1; o < i; o++)
                    if (s.deepCompareStrict(e, n[o])) return !1;
                return !0
            }
            a.multipleOf = function(e, t, n, s) {
                return d.call(this, e, t, n, s, "multipleOf", "is not a multiple of (divisible by) ")
            }, a.divisibleBy = function(e, t, n, s) {
                return d.call(this, e, t, n, s, "divisibleBy", "is not divisible by (multiple of) ")
            }, a.required = function(e, t, n, s) {
                var i = new o(e, t, n, s);
                return void 0 === e && !0 === t.required ? i.addError({
                    name: "required",
                    message: "is required"
                }) : this.types.object(e) && Array.isArray(t.required) && t.required.forEach((function(t) {
                    void 0 === e[t] && i.addError({
                        name: "required",
                        argument: t,
                        message: "requires property " + JSON.stringify(t)
                    })
                })), i
            }, a.pattern = function(e, t, n, s) {
                if (this.types.string(e)) {
                    var i = new o(e, t, n, s);
                    return e.match(t.pattern) || i.addError({
                        name: "pattern",
                        argument: t.pattern,
                        message: "does not match pattern " + JSON.stringify(t.pattern)
                    }), i
                }
            }, a.format = function(e, t, n, i) {
                if (void 0 !== e) {
                    var l = new o(e, t, n, i);
                    return l.disableFormat || s.isFormat(e, t.format, this) || l.addError({
                        name: "format",
                        argument: t.format,
                        message: "does not conform to the " + JSON.stringify(t.format) + " format"
                    }), l
                }
            }, a.minLength = function(e, t, n, s) {
                if (this.types.string(e)) {
                    var i = new o(e, t, n, s),
                        l = e.match(/[\uDC00-\uDFFF]/g);
                    return e.length - (l ? l.length : 0) >= t.minLength || i.addError({
                        name: "minLength",
                        argument: t.minLength,
                        message: "does not meet minimum length of " + t.minLength
                    }), i
                }
            }, a.maxLength = function(e, t, n, s) {
                if (this.types.string(e)) {
                    var i = new o(e, t, n, s),
                        l = e.match(/[\uDC00-\uDFFF]/g);
                    return e.length - (l ? l.length : 0) <= t.maxLength || i.addError({
                        name: "maxLength",
                        argument: t.maxLength,
                        message: "does not meet maximum length of " + t.maxLength
                    }), i
                }
            }, a.minItems = function(e, t, n, s) {
                if (this.types.array(e)) {
                    var i = new o(e, t, n, s);
                    return e.length >= t.minItems || i.addError({
                        name: "minItems",
                        argument: t.minItems,
                        message: "does not meet minimum length of " + t.minItems
                    }), i
                }
            }, a.maxItems = function(e, t, n, s) {
                if (this.types.array(e)) {
                    var i = new o(e, t, n, s);
                    return e.length <= t.maxItems || i.addError({
                        name: "maxItems",
                        argument: t.maxItems,
                        message: "does not meet maximum length of " + t.maxItems
                    }), i
                }
            }, a.uniqueItems = function(e, t, n, i) {
                if (this.types.array(e)) {
                    var l = new o(e, t, n, i);
                    return e.every((function(e, t, n) {
                        for (var o = t + 1; o < n.length; o++)
                            if (s.deepCompareStrict(e, n[o])) return !1;
                        return !0
                    })) || l.addError({
                        name: "uniqueItems",
                        message: "contains duplicate item"
                    }), l
                }
            }, a.uniqueItems = function(e, t, n, s) {
                if (this.types.array(e)) {
                    var i = new o(e, t, n, s);
                    return e.every(m) || i.addError({
                        name: "uniqueItems",
                        message: "contains duplicate item"
                    }), i
                }
            }, a.dependencies = function(e, t, n, s) {
                if (this.types.object(e)) {
                    var i = new o(e, t, n, s);
                    for (var l in t.dependencies)
                        if (void 0 !== e[l]) {
                            var a = t.dependencies[l],
                                r = s.makeChild(a, l);
                            if ("string" == typeof a && (a = [a]), Array.isArray(a)) a.forEach((function(t) {
                                void 0 === e[t] && i.addError({
                                    name: "dependencies",
                                    argument: r.propertyPath,
                                    message: "property " + t + " not found, required by " + r.propertyPath
                                })
                            }));
                            else {
                                var c = this.validateSchema(e, a, n, r);
                                i.instance !== c.instance && (i.instance = c.instance), c && c.errors.length && (i.addError({
                                    name: "dependencies",
                                    argument: r.propertyPath,
                                    message: "does not meet dependency required by " + r.propertyPath
                                }), i.importErrors(c))
                            }
                        } return i
                }
            }, a.enum = function(e, t, n, l) {
                if (void 0 === e) return null;
                if (!Array.isArray(t.enum)) throw new i("enum expects an array", t);
                var a = new o(e, t, n, l);
                return t.enum.some(s.deepCompareStrict.bind(null, e)) || a.addError({
                    name: "enum",
                    argument: t.enum,
                    message: "is not one of enum values: " + t.enum.map(String).join(",")
                }), a
            }, a.const = function(e, t, n, i) {
                if (void 0 === e) return null;
                var l = new o(e, t, n, i);
                return s.deepCompareStrict(t.const, e) || l.addError({
                    name: "const",
                    argument: t.const,
                    message: "does not exactly match expected constant: " + t.const
                }), l
            }, a.not = a.disallow = function(e, t, n, s) {
                var i = this;
                if (void 0 === e) return null;
                var l = new o(e, t, n, s),
                    a = t.not || t.disallow;
                return a ? (Array.isArray(a) || (a = [a]), a.forEach((function(o) {
                    if (i.testType(e, t, n, s, o)) {
                        var a = o && o.id && "<" + o.id + ">" || o;
                        l.addError({
                            name: "not",
                            argument: a,
                            message: "is of prohibited type " + a
                        })
                    }
                })), l) : null
            }, e.exports = l
        }, (e, t, n) => {
            "use strict";
            var s = n(166),
                o = t.ValidationError = function(e, t, n, s, o, i) {
                    s && (this.property = s), e && (this.message = e), n && (n.id ? this.schema = n.id : this.schema = n), t && (this.instance = t), this.name = o, this.argument = i, this.stack = this.toString()
                };
            o.prototype.toString = function() {
                return this.property + " " + this.message
            };
            var i = t.ValidatorResult = function(e, t, n, s) {
                this.instance = e, this.schema = t, this.propertyPath = s.propertyPath, this.errors = [], this.throwError = n && n.throwError, this.disableFormat = n && !0 === n.disableFormat
            };

            function l(e, t) {
                return t + ": " + e.toString() + "\n"
            }
            i.prototype.addError = function(e) {
                var t;
                if ("string" == typeof e) t = new o(e, this.instance, this.schema, this.propertyPath);
                else {
                    if (!e) throw new Error("Missing error detail");
                    if (!e.message) throw new Error("Missing error message");
                    if (!e.name) throw new Error("Missing validator type");
                    t = new o(e.message, this.instance, this.schema, this.propertyPath, e.name, e.argument)
                }
                if (this.throwError) throw t;
                return this.errors.push(t), t
            }, i.prototype.importErrors = function(e) {
                "string" == typeof e || e && e.validatorType ? this.addError(e) : e && e.errors && Array.prototype.push.apply(this.errors, e.errors)
            }, i.prototype.toString = function(e) {
                return this.errors.map(l).join("")
            }, Object.defineProperty(i.prototype, "valid", {
                get: function() {
                    return !this.errors.length
                }
            });
            var a = t.SchemaError = function e(t, n) {
                this.message = t, this.schema = n, Error.call(this, t), Error.captureStackTrace(this, e)
            };
            a.prototype = Object.create(Error.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1
                },
                name: {
                    value: "SchemaError",
                    enumerable: !1
                }
            });
            var r = t.SchemaContext = function(e, t, n, s, o) {
                this.schema = e, this.options = t, this.propertyPath = n, this.base = s, this.schemas = o
            };
            r.prototype.resolve = function(e) {
                return s.resolve(this.base, e)
            }, r.prototype.makeChild = function(e, t) {
                var n = void 0 === t ? this.propertyPath : this.propertyPath + d(t),
                    o = s.resolve(this.base, e.id || ""),
                    i = new r(e, this.options, n, o, Object.create(this.schemas));
                return e.id && !i.schemas[o] && (i.schemas[o] = e), i
            };
            var c = t.FORMAT_REGEXPS = {
                "date-time": /^\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\.\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,
                date: /^\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,
                time: /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,
                email: /^(?:[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+\.)*[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-](?!\.)){0,61}[a-zA-Z0-9]?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\[(?:(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\]))$/,
                "ip-address": /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,
                ipv6: /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/,
                uri: /^[a-zA-Z][a-zA-Z0-9+-.]*:[^\s]*$/,
                color: /^(#?([0-9A-Fa-f]{3}){1,2}\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\(\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*,\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*,\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*\))|(rgb\(\s*(\d?\d%|100%)+\s*,\s*(\d?\d%|100%)+\s*,\s*(\d?\d%|100%)+\s*\)))$/,
                hostname: /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\.?$/,
                "host-name": /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\.?$/,
                alpha: /^[a-zA-Z]+$/,
                alphanumeric: /^[a-zA-Z0-9]+$/,
                "utc-millisec": function(e) {
                    return "string" == typeof e && parseFloat(e) === parseInt(e, 10) && !isNaN(e)
                },
                regex: function(e) {
                    var t = !0;
                    try {
                        new RegExp(e)
                    } catch (e) {
                        t = !1
                    }
                    return t
                },
                style: /\s*(.+?):\s*([^;]+);?/g,
                phone: /^\+(?:[0-9] ?){6,14}[0-9]$/
            };
            c.regexp = c.regex, c.pattern = c.regex, c.ipv4 = c["ip-address"], t.isFormat = function(e, t, n) {
                if ("string" == typeof e && void 0 !== c[t]) {
                    if (c[t] instanceof RegExp) return c[t].test(e);
                    if ("function" == typeof c[t]) return c[t](e)
                } else if (n && n.customFormats && "function" == typeof n.customFormats[t]) return n.customFormats[t](e);
                return !0
            };
            var d = t.makeSuffix = function(e) {
                return (e = e.toString()).match(/[.\s\[\]]/) || e.match(/^[\d]/) ? e.match(/^\d+$/) ? "[" + e + "]" : "[" + JSON.stringify(e) + "]" : "." + e
            };

            function m(e, t, n, s) {
                "object" == typeof n ? t[s] = h(e[s], n) : -1 === e.indexOf(n) && t.push(n)
            }

            function p(e, t, n) {
                t[n] = e[n]
            }

            function u(e, t, n, s) {
                "object" == typeof t[s] && t[s] && e[s] ? n[s] = h(e[s], t[s]) : n[s] = t[s]
            }

            function h(e, t) {
                var n = Array.isArray(t),
                    s = n && [] || {};
                return n ? (e = e || [], s = s.concat(e), t.forEach(m.bind(null, e, s))) : (e && "object" == typeof e && Object.keys(e).forEach(p.bind(null, e, s)), Object.keys(t).forEach(u.bind(null, e, t, s))), s
            }

            function g(e) {
                return "/" + encodeURIComponent(e).replace(/~/g, "%7E")
            }
            t.deepCompareStrict = function e(t, n) {
                if (typeof t != typeof n) return !1;
                if (t instanceof Array) return n instanceof Array && (t.length === n.length && t.every((function(s, o) {
                    return e(t[o], n[o])
                })));
                if ("object" == typeof t) {
                    if (!t || !n) return t === n;
                    var s = Object.keys(t),
                        o = Object.keys(n);
                    return s.length === o.length && s.every((function(s) {
                        return e(t[s], n[s])
                    }))
                }
                return t === n
            }, e.exports.deepMerge = h, t.objectGetPath = function(e, t) {
                for (var n, s = t.split("/").slice(1);
                    "string" == typeof(n = s.shift());) {
                    var o = decodeURIComponent(n.replace(/~0/, "~").replace(/~1/g, "/"));
                    if (!(o in e)) return;
                    e = e[o]
                }
                return e
            }, t.encodePath = function(e) {
                return e.map(g).join("")
            }, t.getDecimalPlaces = function(e) {
                var t = 0;
                if (isNaN(e)) return t;
                "number" != typeof e && (e = Number(e));
                var n = e.toString().split("e");
                if (2 === n.length) {
                    if ("-" !== n[1][0]) return t;
                    t = Number(n[1].slice(1))
                }
                var s = n[0].split(".");
                return 2 === s.length && (t += s[1].length), t
            }
        }, (e, t, n) => {
            var s = n(166),
                o = n(173);

            function i(e, t) {
                this.id = e, this.ref = t
            }
            e.exports.SchemaScanResult = i, e.exports.scan = function(e, t) {
                function n(e, t) {
                    if (t && "object" == typeof t)
                        if (t.$ref) {
                            var i = s.resolve(e, t.$ref);
                            c[i] = c[i] ? c[i] + 1 : 0
                        } else {
                            var d = t.id ? s.resolve(e, t.id) : e;
                            if (d) {
                                if (d.indexOf("#") < 0 && (d += "#"), r[d]) {
                                    if (!o.deepCompareStrict(r[d], t)) throw new Error("Schema <" + t + "> already exists with different definition");
                                    return r[d]
                                }
                                r[d] = t, "#" == d[d.length - 1] && (r[d.substring(0, d.length - 1)] = t)
                            }
                            l(d + "/items", t.items instanceof Array ? t.items : [t.items]), l(d + "/extends", t.extends instanceof Array ? t.extends : [t.extends]), n(d + "/additionalItems", t.additionalItems), a(d + "/properties", t.properties), n(d + "/additionalProperties", t.additionalProperties), a(d + "/definitions", t.definitions), a(d + "/patternProperties", t.patternProperties), a(d + "/dependencies", t.dependencies), l(d + "/disallow", t.disallow), l(d + "/allOf", t.allOf), l(d + "/anyOf", t.anyOf), l(d + "/oneOf", t.oneOf), n(d + "/not", t.not)
                        }
                }

                function l(e, t) {
                    if (t instanceof Array)
                        for (var s = 0; s < t.length; s++) n(e + "/" + s, t[s])
                }

                function a(e, t) {
                    if (t && "object" == typeof t)
                        for (var s in t) n(e + "/" + s, t[s])
                }
                var r = {},
                    c = {};
                return n(e, t), new i(r, c)
            }
        }, (e, t, n) => {
            var s, o, i = n(176),
                l = n(177),
                a = 0,
                r = 0;
            e.exports = function(e, t, n) {
                var c = t && n || 0,
                    d = t || [],
                    m = (e = e || {}).node || s,
                    p = void 0 !== e.clockseq ? e.clockseq : o;
                if (null == m || null == p) {
                    var u = i();
                    null == m && (m = s = [1 | u[0], u[1], u[2], u[3], u[4], u[5]]), null == p && (p = o = 16383 & (u[6] << 8 | u[7]))
                }
                var h = void 0 !== e.msecs ? e.msecs : (new Date).getTime(),
                    g = void 0 !== e.nsecs ? e.nsecs : r + 1,
                    f = h - a + (g - r) / 1e4;
                if (f < 0 && void 0 === e.clockseq && (p = p + 1 & 16383), (f < 0 || h > a) && void 0 === e.nsecs && (g = 0), g >= 1e4) throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
                a = h, r = g, o = p;
                var _ = (1e4 * (268435455 & (h += 122192928e5)) + g) % 4294967296;
                d[c++] = _ >>> 24 & 255, d[c++] = _ >>> 16 & 255, d[c++] = _ >>> 8 & 255, d[c++] = 255 & _;
                var y = h / 4294967296 * 1e4 & 268435455;
                d[c++] = y >>> 8 & 255, d[c++] = 255 & y, d[c++] = y >>> 24 & 15 | 16, d[c++] = y >>> 16 & 255, d[c++] = p >>> 8 | 128, d[c++] = 255 & p;
                for (var b = 0; b < 6; ++b) d[c + b] = m[b];
                return t || l(d)
            }
        }, e => {
            var t = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || "undefined" != typeof msCrypto && "function" == typeof window.msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto);
            if (t) {
                var n = new Uint8Array(16);
                e.exports = function() {
                    return t(n), n
                }
            } else {
                var s = new Array(16);
                e.exports = function() {
                    for (var e, t = 0; t < 16; t++) 0 == (3 & t) && (e = 4294967296 * Math.random()), s[t] = e >>> ((3 & t) << 3) & 255;
                    return s
                }
            }
        }, e => {
            for (var t = [], n = 0; n < 256; ++n) t[n] = (n + 256).toString(16).substr(1);
            e.exports = function(e, n) {
                var s = n || 0,
                    o = t;
                return [o[e[s++]], o[e[s++]], o[e[s++]], o[e[s++]], "-", o[e[s++]], o[e[s++]], "-", o[e[s++]], o[e[s++]], "-", o[e[s++]], o[e[s++]], "-", o[e[s++]], o[e[s++]], o[e[s++]], o[e[s++]], o[e[s++]], o[e[s++]]].join("")
            }
        }, (e, t, n) => {
            "use strict";
            var s = n(1),
                o = n(179);
            n(180);
            n(181);
            const i = {
                EMOTE_WHEEL: "emotewheel",
                REACTIONS: "reactions"
            };
            e.exports = s.Ember.Component.extend({
                classNames: ["emote-root-component"],
                layout: n(182),
                emotesService: s.Ember.inject.service("emotes"),
                loadoutsService: s.Ember.inject.service("loadouts"),
                errorsHandler: s.Ember.inject.service("errors-handler"),
                emotesLoadout: s.Ember.computed.alias("loadoutsService.localEmoteLoadout"),
                isLoaded: s.Ember.computed.alias("emotesService.isLoaded"),
                selectedTab: i.EMOTE_WHEEL,
                tabs: null,
                isEmoteWheelTabSelected: s.Ember.computed.equal("selectedTab", i.EMOTE_WHEEL),
                isReactionTabSelected: s.Ember.computed.equal("selectedTab", i.REACTIONS),
                shouldActivateDeleteSlot: !1,
                dragStart(e) {
                    this.get("emotesService").setIsDragging(!0), (0, o.shouldActivateDeleteButton)(e.target) && this.set("shouldActivateDeleteSlot", !0)
                },
                dragEnd() {
                    this.set("shouldActivateDeleteSlot", !1), this.get("emotesService").setIsDragging(!1)
                },
                init: function() {
                    this._super(...arguments);
                    const e = [];
                    Object.values(i).forEach((t => {
                        const n = this.get("selectedTab") === t;
                        e.push({
                            name: this.get(`tra.emotes_tab_${t}_name`),
                            selected: n,
                            value: t
                        })
                    })), this.set("tabs", e)
                },
                contextMenu(e) {
                    e.preventDefault()
                },
                actions: {
                    selectTab: function(e) {
                        this.set("selectedTab", e.value)
                    }
                },
                didInsertElement: function() {
                    this._super(...arguments), s.inventoryNotificationsHandler.acknowledgeEmoteNotifications(), this.set("telemetryTimer", Date.now()), this.get("emotesService.isFromExternalSource") ? this.set("telemetryTimerId", "champion_select_session_time") : this.set("telemetryTimerId", "collections_session_time"), this.get("errorsHandler").checkAndDisplayErrors()
                },
                willDestroyElement: function() {
                    this._super(...arguments);
                    const e = this.get("telemetryTimer"),
                        t = this.get("telemetryTimerId");
                    if (e && t) {
                        const n = {
                            id: t,
                            value: Date.now() - e
                        };
                        s.Telemetry.sendCustomData("emote_panel_v2_event", n)
                    }
                }
            })
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.shouldActivateDeleteButton = t.EMPTY_EMOTE_SLOT_ITEM_ID = t.EMOTE_SLOTS_AS_LIST = t.EMOTE_SLOTS = void 0;
            const n = {
                CENTER: {
                    name: "EMOTES_WHEEL_CENTER"
                },
                NORTH: {
                    name: "EMOTES_WHEEL_UPPER"
                },
                EAST: {
                    name: "EMOTES_WHEEL_RIGHT"
                },
                NORTH_EAST: {
                    name: "EMOTES_WHEEL_UPPER_RIGHT"
                },
                NORTH_WEST: {
                    name: "EMOTES_WHEEL_UPPER_LEFT"
                },
                SOUTH: {
                    name: "EMOTES_WHEEL_LOWER"
                },
                WEST: {
                    name: "EMOTES_WHEEL_LEFT"
                },
                SOUTH_EAST: {
                    name: "EMOTES_WHEEL_LOWER_RIGHT"
                },
                SOUTH_WEST: {
                    name: "EMOTES_WHEEL_LOWER_LEFT"
                },
                SPAWN: {
                    name: "EMOTES_START"
                },
                FIRST_BLOOD: {
                    name: "EMOTES_FIRST_BLOOD"
                },
                ACE: {
                    name: "EMOTES_ACE"
                },
                VICTORY: {
                    name: "EMOTES_VICTORY"
                }
            };
            t.EMOTE_SLOTS = n;
            const s = Object.keys(n).map((e => n[e]));
            t.EMOTE_SLOTS_AS_LIST = s;
            t.EMPTY_EMOTE_SLOT_ITEM_ID = -1;
            const o = new Set(["emote-dropzone"]);
            t.shouldActivateDeleteButton = e => !!e && [...e.classList].some((e => o.has(e)))
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.EMOTE_SFX = void 0;
            const s = n(1).AudioPlugin.getChannel("sfx-ui");

            function o(e, t) {
                return s.createSound(e, t)
            }
            const i = {
                    allowConcurrency: !1
                },
                l = {
                    empty: o("/fe/lol-collections/audio/sfx-empty.ogg", i),
                    circleXClick: o("/fe/lol-collections/audio/sfx-uikit-button-circlex-click.ogg", i),
                    emotesPlace: o("/fe/lol-collections/audio/sfx-emotes-place.ogg", i),
                    emotesPlaceAll: o("/fe/lol-collections/audio/sfx-emotes-place-all.ogg", i),
                    emotesReset: o("/fe/lol-collections/audio/sfx-emotes-button-reset-click.ogg", i),
                    emotesFull: o("/fe/lol-collections/audio/sfx-emotes-full.ogg", i),
                    emotesPickup: o("/fe/lol-collections/audio/sfx-emotes-pickup.ogg", i),
                    emotesRemove: o("/fe/lol-collections/audio/sfx-emotes-remove.ogg", i)
                };
            t.EMOTE_SFX = l
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "2iQtnKwi",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-root\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-root\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-root\\\\index.js\\" "],["text","\\n"],["block",["unless"],[["get",["emotesService","isLoaded"]]],null,4],["open-element","div",[]],["dynamic-attr","class",["concat",["emotes-root ",["helper",["if"],[["get",["emotesService","isLoaded"]],"loaded","loading"],null]]]],["flush-element"],["text","\\n  "],["append",["unknown",["emote-inventory"]],false],["text","\\n"],["block",["if"],[["get",["emotesLoadout"]]],null,3],["text","\\n  "],["open-element","div",[]],["static-attr","class","nav-container"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-navigation-bar",[]],["static-attr","type","nav-bar-secondary"],["flush-element"],["text","\\n"],["block",["each"],[["get",["tabs"]]],null,0],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["append",["helper",["emote-delete-slot"],null,[["isActive"],[["get",["shouldActivateDeleteSlot"]]]]],false],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["modifier",["action"],[["get",[null]],"selectTab",["get",["tab"]]]],["flush-element"],["text","\\n          "],["open-element","lol-uikit-navigation-item",[]],["dynamic-attr","active",["concat",[["helper",["if"],[["get",["tab","selected"]],"true"],null]]]],["flush-element"],["text","\\n            "],["append",["unknown",["tab","name"]],false],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":["tab"]},{"statements":[["text","      "],["append",["unknown",["emote-reactions"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["append",["unknown",["emote-wheel"]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isEmoteWheelTabSelected"]]],null,2],["text","    \\n"],["block",["if"],[["get",["isReactionTabSelected"]]],null,1]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","emotes-loading-section"],["flush-element"],["text","\\n    "],["append",["helper",["uikit-spinner"],null,[["width","height"],["50px","50px"]]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var s = n(1),
                o = n(180);
            n(184);
            var i, l = (i = n(185)) && i.__esModule ? i : {
                    default: i
                },
                a = n(179);
            const r = s.UIKit.getTooltipManager();
            e.exports = s.Ember.Component.extend({
                layout: n(186),
                classNames: ["emote-inventory"],
                classNameBindings: ["isEmotesInventoryLoaded:emote-inventory-loaded"],
                loadoutsService: s.Ember.inject.service("loadouts"),
                emotesLoadout: s.Ember.computed.alias("loadoutsService.localEmoteLoadout"),
                emotesService: s.Ember.inject.service("emotes"),
                _isVirtualListDataInitialized: !1,
                nEmotesOwned: s.Ember.computed.readOnly("emotesService.ownedEmotesInventory.length"),
                nTotalEmotes: s.Ember.computed.readOnly("emotesService.emotesInventory.length"),
                searchTerm: "",
                searchedEmotes: s.Ember.computed("searchTerm", "emotesService.isLoaded", "emotesService.sortedEmotesInventory", "emotesService.sortedEmotesInventory.[]", (function() {
                    if (!!!this.get("emotesService.isLoaded")) return [];
                    const e = document.documentElement.lang,
                        t = this.get("emotesService.sortedEmotesInventory"),
                        n = this.get("searchTerm").toLocaleLowerCase(e);
                    return t.filter((t => t.name.toLocaleLowerCase(e).includes(n)))
                })),
                emotesInventoryRows: s.Ember.computed("searchedEmotes.[]", (function() {
                    const e = this.get("searchedEmotes");
                    if (e) {
                        const t = [];
                        let n;
                        for (let s = 0; s < e.length; s++) {
                            const o = e[s];
                            s % 4 == 0 && (n = [], t.push(n), n.height = 85, n.type = "EMOTES"), n.push(o)
                        }
                        return t
                    }
                })),
                isEmotesInventoryLoaded: s.Ember.computed("virtualList", "emotesInventoryRows", "emotesInventoryRows.[]", (function() {
                    const e = this.get("virtualList"),
                        t = this.get("emotesInventoryRows.length") > 0;
                    return e && t ? e.data = this.get("emotesInventoryRows") : e && (e.data = []), t
                })),
                isShowUnownedCheckboxChecked: s.Ember.computed.not("emotesService.filterUnownedEmotes"),
                init: function() {
                    this._super(...arguments);
                    const e = s.Ember.A([{
                        type: "SORT_BY_PURCHASE_DATE",
                        isSelected: !0
                    }, {
                        type: "SORT_BY_NAME"
                    }]);
                    this.set("sortTypes", e)
                },
                didInsertElement: function() {
                    this._super(...arguments);
                    const e = new l.default({
                            renderContext: this,
                            onItemClick: this.onItemClick.bind(this),
                            onItemRightClick: this.onItemRightClick.bind(this),
                            onItemDragStart: this.onItemDragStart.bind(this),
                            onItemMouseOver: this.onItemMouseOver.bind(this)
                        }),
                        t = this.element.querySelector(".emote-inventory-grid-wrapper"),
                        n = document.createElement("lol-uikit-virtual-list");
                    n.container = t, n.containerHeightPx = 502, n.classList.add("emote-inventory-virtual-list"), n.createElement = e.createElement, n.updateElement = e.updateElement, n.resetElement = e.resetElement, n.deleteElement = e.deleteElement, t.appendChild(n), this.set("virtualList", n)
                },
                decoratedSortTypes: s.Ember.computed("tra.emotes_sort_by_purchase_date", "tra.emotes_sort_by_name", "sortTypes.[]", (function() {
                    const e = this.get("sortTypes");
                    return e.set("0.name", this.get("tra.emotes_sort_by_purchase_date")), e.set("1.name", this.get("tra.emotes_sort_by_name")), e
                })),
                onItemClick: function(e) {
                    const t = e.currentTarget.querySelector(".emote-item-icon"),
                        n = t.getAttribute("data-emoteid");
                    if (t.classList.contains("unowned")) {
                        const e = {
                            id: "emote-panel-unowned-emote-click",
                            value: n
                        };
                        s.Telemetry.sendCustomData("emote_panel_v2_event", e), s.Router.navigateTo("rcp-fe-lol-store", {
                            page: "emotes",
                            items: [{
                                itemId: n,
                                inventoryType: "EMOTE"
                            }]
                        })
                    }
                },
                onItemRightClick: function(e) {
                    e.preventDefault();
                    const t = e.currentTarget.querySelector(".emote-item-icon"),
                        n = parseInt(t.getAttribute("data-emoteid"));
                    if (t.classList.contains("unowned")) return;
                    a.EMOTE_SLOTS_AS_LIST.some((e => {
                        const t = this.get(`emotesLoadout.${e.name}.itemId`);
                        if (!(t && -1 !== t || isNaN(n))) {
                            o.EMOTE_SFX.emotesPlace.play(), this.set(`emotesLoadout.${e.name}.itemId`, n), this.set("dragActive", "inactive"), this.set("dragstart", "dragout");
                            const t = {
                                id: "emote-panel-emote-equip",
                                value: n,
                                emotePosition: e.name
                            };
                            return s.Telemetry.sendCustomData("emote_panel_v2_event", t), this.get("loadoutsService").saveEmotesLoadout(), !0
                        }
                    })) || o.EMOTE_SFX.emotesFull.play()
                },
                onItemMouseOver: function(e) {
                    const t = e.currentTarget.querySelector(".emote-item-icon"),
                        n = t.getAttribute("data-emoteid");
                    if (t.classList.contains("is-new")) {
                        this.get("emotesService").getEmoteData(n).set("isNew", !1), t.classList.remove("is-new"), this.get("emotesService").removePlayerPreferenceNewEmote(n)
                    }
                },
                onItemDragStart: function(e) {
                    const t = e.currentTarget.querySelector(".emote-item-icon"),
                        n = t.getAttribute("data-emoteid"),
                        s = t.querySelector(".emote-item-image");
                    if (!t.classList.contains("unowned")) return r.hide(t), o.EMOTE_SFX.emotesPickup.play(), e.dataTransfer.setDragImage(s, 35, 35), e.dataTransfer.setData("text/data", n);
                    e.preventDefault()
                },
                dragOver(e) {
                    e.preventDefault()
                },
                drop(e) {
                    const t = e.dataTransfer.getData("emoteLoadoutPosition");
                    t && (o.EMOTE_SFX.emotesRemove.play(), this.set("emotesLoadout." + t + ".itemId", a.EMPTY_EMOTE_SLOT_ITEM_ID)), this.get("loadoutsService").saveEmotesLoadout(), e.preventDefault()
                },
                actions: {
                    setSortType: function(e) {
                        this.get("emotesService").set("inventorySortType", e)
                    },
                    toggleUnownedFilter: function(e) {
                        e.preventDefault(), this.get("emotesService").set("filterUnownedEmotes", !this.get("emotesService.filterUnownedEmotes"))
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            var o = class {
                constructor(e) {
                    this.renderContext = e.renderContext, this.onItemClick = e.onItemClick, this.onItemDragStart = e.onItemDragStart, this.onItemDragEnd = e.onItemDragEnd, this.onItemMouseOver = e.onItemMouseOver, this.onItemMouseLeave = e.onItemMouseLeave, this.onItemRightClick = e.onItemRightClick, this.createElement = this.createElement.bind(this), this.updateElement = this.updateElement.bind(this), this.resetElement = this.resetElement.bind(this), this.deleteElement = this.deleteElement.bind(this), this._createBaseRow = this._createBaseRow.bind(this), this._updateRowElements = this._updateRowElements.bind(this)
                }
                createElement(e) {
                    const t = this._createBaseRow(e.length);
                    return this._updateRowElements(t, e), t
                }
                updateElement(e, t) {
                    this._updateRowElements(e, t)
                }
                resetElement(e) {
                    Array.from(e.children).forEach((e => {
                        const t = e.querySelector(".emote-item-icon"),
                            n = e.querySelector(".emote-item-image"),
                            o = e.querySelector(".on-sale-ribbon");
                        t.classList.remove("interactive"), t.classList.remove("unowned"), t.classList.remove("is-new"), o.classList.remove("display-on-sale"), t.removeAttribute("data-emoteid"), t.removeAttribute("data-emote-img"), n.removeAttribute("src");
                        s.UIKit.getTooltipManager().unassign(t)
                    }))
                }
                deleteElement(e) {
                    Array.from(e.children).forEach((e => {
                        const t = e.querySelector(".emote-item-icon");
                        s.UIKit.getTooltipManager().unassign(t)
                    }))
                }
                _createBaseRow(e) {
                    const t = document.createElement("div");
                    t.classList.add("emote-row");
                    for (let n = 0; n < e; n++) {
                        const e = document.createElement("div");
                        e.setAttribute("draggable", !0), e.classList.add("emote-item"), e.innerHTML = '\n        <div class="emote-item-icon interactive">\n          <img class="emote-item-image" />\n        </div>\n        <div class="on-sale-ribbon"></div>\n      ', e.addEventListener("contextmenu", this.onItemRightClick), e.addEventListener("dblclick", this.onItemRightClick), e.addEventListener("click", this.onItemClick), e.addEventListener("dragstart", this.onItemDragStart), e.addEventListener("mouseover", this.onItemMouseOver), e.addEventListener("mouseleave", this.onItemMouseLeave), t.appendChild(e)
                    }
                    return t
                }
                _updateRowElements(e, t) {
                    t.forEach(((t, n) => {
                        const o = e.children[n],
                            i = o.querySelector(".emote-item-icon"),
                            l = o.querySelector(".emote-item-image"),
                            a = o.querySelector(".on-sale-ribbon");
                        if (t.ownershipType) i.classList.add("interactive");
                        else {
                            i.classList.add("unowned");
                            this._emoteContainsValidSaleData(t.prices) && a.classList.add("display-on-sale")
                        }
                        i.setAttribute("data-emoteid", t.itemId), t.isNew && i.classList.add("is-new"), t.imagePath && (l.setAttribute("src", t.imagePath), i.setAttribute("data-emote-img", t.imagePath));
                        s.UIKit.getTooltipManager().assign(i, this._tooltipRenderer, t, {
                            tooltipAnchor: {
                                x: "left",
                                y: "center"
                            }
                        })
                    }))
                }
                _emoteContainsValidSaleData(e) {
                    return e.some((e => !!e.sale))
                }
                _tooltipRenderer(e, t) {
                    const n = document.createElement("lol-uikit-tooltip");
                    let o = "";
                    t.prices && !t.ownershipType && (o += "<hr />", t.prices.forEach((e => {
                        let t;
                        if (e.sale) {
                            const n = Math.round(100 * (e.cost - e.sale.cost) / e.cost);
                            t = `\n            ${e.sale.cost}\n            <span class="price-currency-sale">\n              ${s.tra.formatString("emotes_tooltip_sale_percent_off",{percentOff:n})}\n              <span class="price-currency-old">${e.cost}</span>\n            </span>\n          `
                        } else t = e.cost;
                        o += `\n          <div class="price-currency-type-${e.currency}">\n            ${t}\n          </div>\n          `
                    })));
                    const i = s.UIKit.getTemplateHelper().contentBlockTooltip(t.name, o, "tooltip-medium", "rcp-fe-lol-emote-inventory-tooltip");
                    return n.appendChild(i), n
                }
            };
            t.default = o
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Qboe1rqu",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-inventory\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-inventory\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-inventory\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","display-category-section"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","display-category-section-title"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","title-text"],["flush-element"],["append",["unknown",["tra","emotes_tab_title"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","title-numbers"],["flush-element"],["append",["unknown",["nEmotesOwned"]],false],["text"," / "],["append",["unknown",["nTotalEmotes"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","display-category-section-search"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-input",[]],["flush-element"],["text","\\n      "],["append",["helper",["input"],null,[["type","maxlength","class","value","placeholder"],["search","50","display-category-section-search-box",["get",["searchTerm"]],["get",["tra","control_panel_search_placeholder"]]]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","display-category-section-options"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-framed-dropdown",[]],["static-attr","class","display-category-section-sort-types-dropdown"],["flush-element"],["text","\\n"],["block",["each"],[["get",["decoratedSortTypes"]]],null,0],["text","      "],["close-element"],["text","\\n\\n    "],["open-element","lol-uikit-flat-checkbox",[]],["flush-element"],["text","\\n      "],["open-element","input",[]],["static-attr","slot","input"],["static-attr","id","showUnowned"],["static-attr","type","checkbox"],["dynamic-attr","onchange",["helper",["action"],[["get",[null]],"toggleUnownedFilter"],null],null],["dynamic-attr","checked",["unknown",["isShowUnownedCheckboxChecked"]],null],["dynamic-attr","disabled",["unknown",["emotesService","isFromExternalSource"]],null],["flush-element"],["close-element"],["text","\\n      "],["open-element","label",[]],["static-attr","slot","label"],["static-attr","for","showUnowned"],["flush-element"],["append",["unknown",["tra","emotes_show_unowned"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","lol-uikit-scrollable",[]],["static-attr","class","emote-inventory-grid-wrapper"],["static-attr","overflow-masks","enabled"],["flush-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setSortType",["get",["sortType","type"]]],null],null],["dynamic-attr","selected",["unknown",["sortType","isSelected"]],null],["flush-element"],["append",["unknown",["sortType","name"]],false],["close-element"],["text","\\n"]],"locals":["sortType"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var s = n(1);
            n(188);
            var o = n(179);
            e.exports = s.Ember.Component.extend({
                layout: n(189),
                emotesService: s.Ember.inject.service("emotes"),
                loadoutsService: s.Ember.inject.service("loadouts"),
                emotesLoadout: s.Ember.computed.alias("loadoutsService.localEmoteLoadout"),
                classNames: ["emote-wheel-wrapper-v2"],
                EMOTE_SLOTS: o.EMOTE_SLOTS,
                emotesWheelCenter: s.Ember.computed(`emotesLoadout.${o.EMOTE_SLOTS.CENTER.name}.itemId`, "emotesService.emotesInventory.[]", (function() {
                    return this.getEmoteSlotData(o.EMOTE_SLOTS.CENTER.name)
                })),
                emotesWheelTop: s.Ember.computed(`emotesLoadout.${o.EMOTE_SLOTS.NORTH.name}.itemId`, "emotesService.emotesInventory.[]", (function() {
                    return this.getEmoteSlotData(o.EMOTE_SLOTS.NORTH.name)
                })),
                emotesWheelTopRight: s.Ember.computed(`emotesLoadout.${o.EMOTE_SLOTS.NORTH_EAST.name}.itemId`, "emotesService.emotesInventory.[]", (function() {
                    return this.getEmoteSlotData(o.EMOTE_SLOTS.NORTH_EAST.name)
                })),
                emotesWheelTopLeft: s.Ember.computed(`emotesLoadout.${o.EMOTE_SLOTS.NORTH_WEST.name}.itemId`, "emotesService.emotesInventory.[]", (function() {
                    return this.getEmoteSlotData(o.EMOTE_SLOTS.NORTH_WEST.name)
                })),
                emotesWheelRight: s.Ember.computed(`emotesLoadout.${o.EMOTE_SLOTS.EAST.name}.itemId`, "emotesService.emotesInventory.[]", (function() {
                    return this.getEmoteSlotData(o.EMOTE_SLOTS.EAST.name)
                })),
                emotesWheelBottom: s.Ember.computed(`emotesLoadout.${o.EMOTE_SLOTS.SOUTH.name}.itemId`, "emotesService.emotesInventory.[]", (function() {
                    return this.getEmoteSlotData(o.EMOTE_SLOTS.SOUTH.name)
                })),
                emotesWheelBottomLeft: s.Ember.computed(`emotesLoadout.${o.EMOTE_SLOTS.SOUTH_WEST.name}.itemId`, "emotesService.emotesInventory.[]", (function() {
                    return this.getEmoteSlotData(o.EMOTE_SLOTS.SOUTH_WEST.name)
                })),
                emotesWheelBottomRight: s.Ember.computed(`emotesLoadout.${o.EMOTE_SLOTS.SOUTH_EAST.name}.itemId`, "emotesService.emotesInventory.[]", (function() {
                    return this.getEmoteSlotData(o.EMOTE_SLOTS.SOUTH_EAST.name)
                })),
                emotesWheelLeft: s.Ember.computed(`emotesLoadout.${o.EMOTE_SLOTS.WEST.name}.itemId`, "emotesService.emotesInventory.[]", (function() {
                    return this.getEmoteSlotData(o.EMOTE_SLOTS.WEST.name)
                })),
                emotesWheelStart: s.Ember.computed(`emotesLoadout.${o.EMOTE_SLOTS.SPAWN.name}.itemId`, "emotesService.emotesInventory.[]", (function() {
                    return this.getEmoteSlotData(o.EMOTE_SLOTS.SPAWN.name)
                })),
                emotesWheelVictory: s.Ember.computed(`emotesLoadout.${o.EMOTE_SLOTS.VICTORY.name}.itemId`, "emotesService.emotesInventory.[]", (function() {
                    return this.getEmoteSlotData(o.EMOTE_SLOTS.VICTORY.name)
                })),
                emotesWheelFirstBlood: s.Ember.computed(`emotesLoadout.${o.EMOTE_SLOTS.FIRST_BLOOD.name}.itemId`, "emotesService.emotesInventory.[]", (function() {
                    return this.getEmoteSlotData(o.EMOTE_SLOTS.FIRST_BLOOD.name)
                })),
                emotesWheelAce: s.Ember.computed(`emotesLoadout.${o.EMOTE_SLOTS.ACE.name}.itemId`, "emotesService.emotesInventory.[]", (function() {
                    return this.getEmoteSlotData(o.EMOTE_SLOTS.ACE.name)
                })),
                getEmoteSlotData: function(e) {
                    const t = this.get(`emotesLoadout.${e}`);
                    if (t) {
                        const e = t.itemId;
                        return this.get("emotesService").getEmoteData(e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "KBG0ugPJ",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-wheel\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-wheel\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-wheel\\\\index.js\\" "],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","emote-main-wheel-frame"],["flush-element"],["text","\\n    "],["append",["helper",["emote-wheel-slot"],null,[["emoteLoadoutPosition","position","emoteInventoryIcon","emoteId"],[["get",["EMOTE_SLOTS","NORTH","name"]],"top",["get",["emotesWheelTop","imagePath"]],["get",["emotesWheelTop","itemId"]]]]],false],["text","\\n    "],["append",["helper",["emote-wheel-slot"],null,[["emoteLoadoutPosition","position","emoteInventoryIcon","emoteId"],[["get",["EMOTE_SLOTS","EAST","name"]],"right",["get",["emotesWheelRight","imagePath"]],["get",["emotesWheelRight","itemId"]]]]],false],["text","\\n    "],["append",["helper",["emote-wheel-slot"],null,[["emoteLoadoutPosition","position","emoteInventoryIcon","emoteId"],[["get",["EMOTE_SLOTS","SOUTH","name"]],"bottom",["get",["emotesWheelBottom","imagePath"]],["get",["emotesWheelBottom","itemId"]]]]],false],["text","\\n    "],["append",["helper",["emote-wheel-slot"],null,[["emoteLoadoutPosition","position","emoteInventoryIcon","emoteId"],[["get",["EMOTE_SLOTS","WEST","name"]],"left",["get",["emotesWheelLeft","imagePath"]],["get",["emotesWheelLeft","itemId"]]]]],false],["text","\\n    "],["append",["helper",["emote-wheel-slot"],null,[["emoteLoadoutPosition","position","emoteInventoryIcon","emoteId"],[["get",["EMOTE_SLOTS","CENTER","name"]],"center",["get",["emotesWheelCenter","imagePath"]],["get",["emotesWheelCenter","itemId"]]]]],false],["text","\\n    "],["append",["helper",["emote-wheel-slot"],null,[["emoteLoadoutPosition","position","emoteInventoryIcon","emoteId"],[["get",["EMOTE_SLOTS","NORTH_WEST","name"]],"top-left",["get",["emotesWheelTopLeft","imagePath"]],["get",["emotesWheelTopLeft","itemId"]]]]],false],["text","\\n    "],["append",["helper",["emote-wheel-slot"],null,[["emoteLoadoutPosition","position","emoteInventoryIcon","emoteId"],[["get",["EMOTE_SLOTS","NORTH_EAST","name"]],"top-right",["get",["emotesWheelTopRight","imagePath"]],["get",["emotesWheelTopRight","itemId"]]]]],false],["text","\\n    "],["append",["helper",["emote-wheel-slot"],null,[["emoteLoadoutPosition","position","emoteInventoryIcon","emoteId"],[["get",["EMOTE_SLOTS","SOUTH_WEST","name"]],"bottom-left",["get",["emotesWheelBottomLeft","imagePath"]],["get",["emotesWheelBottomLeft","itemId"]]]]],false],["text","\\n    "],["append",["helper",["emote-wheel-slot"],null,[["emoteLoadoutPosition","position","emoteInventoryIcon","emoteId"],[["get",["EMOTE_SLOTS","SOUTH_EAST","name"]],"bottom-right",["get",["emotesWheelBottomRight","imagePath"]],["get",["emotesWheelBottomRight","itemId"]]]]],false],["text","    \\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var s = n(1),
                o = n(180),
                i = n(179);
            n(191), e.exports = s.Ember.Component.extend({
                layout: n(192),
                classNames: ["emote-dropzone"],
                classNameBindings: ["emoteTrayPosition", "dragClass.emote-tray:dragstart"],
                attributeBindings: ["draggable"],
                draggable: "true",
                emotesService: s.Ember.inject.service("emotes"),
                loadoutsService: s.Ember.inject.service("loadouts"),
                emotesLoadout: s.Ember.computed.alias("loadoutsService.localEmoteLoadout"),
                isDragging: s.Ember.computed.alias("emotesService.isDragging"),
                actions: {
                    clearSlot: function(e) {
                        if (e) {
                            event.preventDefault(), o.EMOTE_SFX.emotesRemove.play();
                            const e = this.get("emoteLoadoutPosition");
                            this.set("emotesLoadout." + e + ".itemId", i.EMPTY_EMOTE_SLOT_ITEM_ID), this.get("isEmoteWheelEnabled") && this.get("loadoutsService").saveEmotesLoadout()
                        }
                    }
                },
                didRender() {
                    this._super(...arguments);
                    const e = !!this.get("emoteId");
                    this.set("draggable", e)
                },
                dragStart(e) {
                    const t = this.$(e.target).find(".emote").attr("data-emoteid"),
                        n = this.get("position"),
                        s = this.get("emoteLoadoutPosition"),
                        i = this.element.querySelector(".emote-item-image");
                    return this.set("dragSource", "dragsource"), o.EMOTE_SFX.emotesPickup.play(), t && e.dataTransfer.setDragImage(i, 35, 35), e.dataTransfer.setData("position", n), e.dataTransfer.setData("emoteId", t), e.dataTransfer.setData("emoteLoadoutPosition", s), e.dataTransfer.setData("text/data", t)
                },
                dragEnd() {
                    this.set("dragSource", "dragsourced")
                },
                dragLeave(e) {
                    e.preventDefault(), this.set("dragstart", "dragout")
                },
                dragOver(e) {
                    e.preventDefault(), this.set("dragstart", "dragstart")
                },
                drop(e) {
                    const t = parseInt(e.dataTransfer.getData("text/data")),
                        n = this.get("emotesService").getEmoteData(t),
                        l = n ? n.itemId : i.EMPTY_EMOTE_SLOT_ITEM_ID,
                        a = e.dataTransfer.getData("emoteLoadoutPosition"),
                        r = this.$(e.target).attr("data-loadout-position");
                    this.set("emotesLoadout." + r + ".itemId", l);
                    const c = {
                        id: "emote-panel-emote-equip",
                        value: l,
                        emotePosition: r
                    };
                    if (s.Telemetry.sendCustomData("emote_panel_v2_event", c), o.EMOTE_SFX.emotesPlace.play(), a) {
                        const t = this.$(e.target).attr("data-emoteid"),
                            n = t ? parseInt(t) : i.EMPTY_EMOTE_SLOT_ITEM_ID;
                        this.set("emotesLoadout." + a + ".itemId", n)
                    }
                    this.set("dragSource", "dragsourced"), this.get("loadoutsService").saveEmotesLoadout(), setTimeout((() => {
                        this.set("dragstart", "dragout"), this.get("emotesService").setIsDragging(!1)
                    }), 100)
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "bdNg/SFB",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-wheel-slot\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-wheel-slot\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-wheel-slot\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["emote-tray emote-tray__",["unknown",["position"]]," ",["unknown",["dragstart"]]," ",["helper",["if"],[["get",["isDragging"]],"active","inactive"],null]," ",["unknown",["dragActive"]]," ",["unknown",["dragSource"]]]]],["dynamic-attr","data-emoteid",["concat",[["unknown",["emoteId"]]]]],["dynamic-attr","data-loadout-position",["concat",[["unknown",["emoteLoadoutPosition"]]]]],["modifier",["action"],[["get",[null]],"clearSlot",["get",["emoteLoadoutPosition"]]],[["on"],["contextMenu"]]],["modifier",["action"],[["get",[null]],"clearSlot",["get",["emoteId"]]],[["on"],["doubleClick"]]],["flush-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","data-emoteid",["concat",[["unknown",["emoteId"]]]]],["dynamic-attr","data-loadout-position",["concat",[["unknown",["emoteLoadoutPosition"]]]]],["dynamic-attr","data-emote-position",["concat",[["unknown",["position"]]]]],["dynamic-attr","class",["concat",["emote emote__",["unknown",["position"]]]]],["flush-element"],["text","\\n    "],["open-element","img",[]],["dynamic-attr","src",["unknown",["emoteInventoryIcon"]],null],["static-attr","class","emote-item-image"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var s = n(1),
                o = n(179),
                i = n(180);
            n(194), e.exports = s.Ember.Component.extend({
                layout: n(195),
                loadoutsService: s.Ember.inject.service("loadouts"),
                emotesService: s.Ember.inject.service("emotes"),
                emotesLoadout: s.Ember.computed.alias("loadoutsService.localEmoteLoadout"),
                classNames: ["emote-delete-slot"],
                classNameBindings: ["isActive:active"],
                dragOver(e) {
                    e.preventDefault(), e.dataTransfer.dropEffect = "move"
                },
                drop(e) {
                    const t = e.dataTransfer.getData("emoteLoadoutPosition");
                    t && (i.EMOTE_SFX.emotesRemove.play(), this.set("emotesLoadout." + t + ".itemId", o.EMPTY_EMOTE_SLOT_ITEM_ID), this.get("loadoutsService").saveEmotesLoadout())
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "c7t2yuRx",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-delete-slot\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-delete-slot\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-delete-slot\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","trash-icon"],["flush-element"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var s = n(1),
                o = n(179);
            n(197), e.exports = s.Ember.Component.extend({
                classNames: ["emote-reaction-wrapper"],
                layout: n(198),
                emotesService: s.Ember.inject.service("emotes"),
                loadoutsService: s.Ember.inject.service("loadouts"),
                emotesLoadout: s.Ember.computed.alias("loadoutsService.localEmoteLoadout"),
                EMOTE_SLOTS: o.EMOTE_SLOTS,
                emotesWheelStart: s.Ember.computed(`emotesLoadout.${o.EMOTE_SLOTS.SPAWN.name}.itemId`, "emotesService.emotesInventory.[]", (function() {
                    return this.getEmoteSlotData(o.EMOTE_SLOTS.SPAWN.name)
                })),
                emotesWheelVictory: s.Ember.computed(`emotesLoadout.${o.EMOTE_SLOTS.VICTORY.name}.itemId`, "emotesService.emotesInventory.[]", (function() {
                    return this.getEmoteSlotData(o.EMOTE_SLOTS.VICTORY.name)
                })),
                emotesWheelFirstBlood: s.Ember.computed(`emotesLoadout.${o.EMOTE_SLOTS.FIRST_BLOOD.name}.itemId`, "emotesService.emotesInventory.[]", (function() {
                    return this.getEmoteSlotData(o.EMOTE_SLOTS.FIRST_BLOOD.name)
                })),
                emotesWheelAce: s.Ember.computed(`emotesLoadout.${o.EMOTE_SLOTS.ACE.name}.itemId`, "emotesService.emotesInventory.[]", (function() {
                    return this.getEmoteSlotData(o.EMOTE_SLOTS.ACE.name)
                })),
                getEmoteSlotData: function(e) {
                    const t = this.get(`emotesLoadout.${e}`);
                    if (t) {
                        const e = t.itemId;
                        return this.get("emotesService").getEmoteData(e)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "5Ro5+tzY",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-reactions\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-reactions\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\components\\\\emote-reactions\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","reactions-outer-container"],["flush-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","emote-slots-grid-container"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","emote-slot emote-slot_start"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","emote-label"],["flush-element"],["append",["unknown",["tra","emotes_wheel_start"]],false],["close-element"],["text","\\n            "],["append",["helper",["emote-wheel-slot"],null,[["emoteLoadoutPosition","position","emoteInventoryIcon","emoteId"],[["get",["EMOTE_SLOTS","SPAWN","name"]],"start",["get",["emotesWheelStart","imagePath"]],["get",["emotesWheelStart","itemId"]]]]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","emote-slot emote-slot_first-blood"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","emote-label"],["flush-element"],["append",["unknown",["tra","emotes_wheel_first_blood"]],false],["close-element"],["text","\\n            "],["append",["helper",["emote-wheel-slot"],null,[["emoteLoadoutPosition","position","emoteInventoryIcon","emoteId"],[["get",["EMOTE_SLOTS","FIRST_BLOOD","name"]],"firstBlood",["get",["emotesWheelFirstBlood","imagePath"]],["get",["emotesWheelFirstBlood","itemId"]]]]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","emote-slot emote-slot_ace"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","emote-label"],["flush-element"],["append",["unknown",["tra","emotes_wheel_ace"]],false],["close-element"],["text","\\n            "],["append",["helper",["emote-wheel-slot"],null,[["emoteLoadoutPosition","position","emoteInventoryIcon","emoteId"],[["get",["EMOTE_SLOTS","ACE","name"]],"ace",["get",["emotesWheelAce","imagePath"]],["get",["emotesWheelAce","itemId"]]]]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","emote-slot emote-slot_victory"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","emote-label"],["flush-element"],["append",["unknown",["tra","emotes_wheel_victory"]],false],["close-element"],["text","\\n            "],["append",["helper",["emote-wheel-slot"],null,[["emoteLoadoutPosition","position","emoteInventoryIcon","emoteId"],[["get",["EMOTE_SLOTS","VICTORY","name"]],"victory",["get",["emotesWheelVictory","imagePath"]],["get",["emotesWheelVictory","itemId"]]]]],false],["text","\\n        "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","reactions-main-cross-bg"],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var s = n(1);
            const o = (0, s.emberDataBinding)({
                Ember: s.Ember,
                websocket: (0, s.getProvider)().getSocket(),
                logPrefix: "service:emotes",
                boundProperties: {
                    catalogEmotes: "/lol-catalog/v1/items/EMOTE"
                }
            });
            e.exports = s.Ember.Service.extend(o, {
                loadouts: s.Ember.inject.service("loadouts"),
                newEmotes: null,
                settingsLoaded: !1,
                inventorySortType: "SORT_BY_PURCHASE_DATE",
                isFromExternalSource: !1,
                filterUnownedEmotes: !1,
                isDragging: !1,
                init: function() {
                    this._super.apply(this, arguments), s.inventoryNotificationsHandler.getPlayerPreferencesNewEmotes().then((e => {
                        this.set("newEmotes", s.Ember.A(e)), this.set("settingsLoaded", !0)
                    }))
                },
                isLoaded: s.Ember.computed("emotesInventory.[]", "loadouts.remoteEmoteLoadout", "settingsLoaded", (function() {
                    return this.get("emotesInventory") && this.get("loadouts.remoteEmoteLoadout") && this.get("settingsLoaded")
                })),
                ownedOrPurchaseableEmotes: s.Ember.computed("catalogEmotes.@each.prices", "catalogEmotes.@each.ownershipType", (function() {
                    const e = this.get("catalogEmotes");
                    return e ? e.filter((e => !!e.get("ownershipType") || e.get("prices.0"))) : s.Ember.A()
                })),
                emotesInventory: s.Ember.computed("ownedOrPurchaseableEmotes.@each.itemId", "settingsLoaded", (function() {
                    const e = this.get("ownedOrPurchaseableEmotes"),
                        t = this.get("settingsLoaded");
                    if (e && t) {
                        const t = this.get("newEmotes");
                        e.forEach((e => {
                            t.includes(e.itemId) && e.set("isNew", !0)
                        }))
                    }
                    return e
                })),
                ownedEmotesInventory: s.Ember.computed("catalogEmotes.@each.ownershipType", (function() {
                    const e = this.get("catalogEmotes");
                    return e ? e.filter((e => !!e.get("ownershipType"))) : s.Ember.A()
                })),
                filteredEmotesInventory: s.Ember.computed("filterUnownedEmotes", "emotesInventory.[]", "ownedEmotesInventory.[]", (function() {
                    return this.get("filterUnownedEmotes") ? this.get("ownedEmotesInventory") : this.get("emotesInventory")
                })),
                sortedEmotesInventory: s.Ember.computed("filteredEmotesInventory.[]", "inventorySortType", (function() {
                    const e = this.get("filteredEmotesInventory");
                    return e && "SORT_BY_PURCHASE_DATE" === this.get("inventorySortType") ? e.sort(this._sortByOwnedThenPurchaseDateThenReleaseDate) : e && "SORT_BY_NAME" === this.get("inventorySortType") ? e.sort(this._sortByName) : e
                })),
                _sortByOwnedThenPurchaseDateThenReleaseDate(e, t) {
                    const n = e.purchaseDate || 0,
                        s = t.purchaseDate || 0;
                    return e.ownershipType && !t.ownershipType ? -1 : t.ownershipType && !e.ownershipType ? 1 : n === s ? t.releaseDate - e.releaseDate : 0 === n ? 1 : 0 === s ? -1 : s - n
                },
                _sortByName(e, t) {
                    const n = e.name || "",
                        o = t.name || "",
                        i = s.tra.metadata(),
                        l = i && i.bcp47Tag || "en-US";
                    return n.localeCompare(o, l, {
                        numeric: !0,
                        sensitivity: "base"
                    })
                },
                getEmoteData(e) {
                    e = parseInt(e);
                    const t = this.get("emotesInventory");
                    let n;
                    return t && (n = t.find((t => t.itemId === e))), n
                },
                removePlayerPreferenceNewEmote(e) {
                    const t = parseInt(e),
                        n = this.get("newEmotes").filter((e => e !== t));
                    s.inventoryNotificationsHandler.updatePlayerPreferencesNewEmotes(n), this.set("newEmotes", n)
                },
                setIsDragging(e) {
                    this.set("isDragging", e)
                }
            })
        }, (e, t, n) => {
            "use strict";
            var s = n(1),
                o = n(179);
            const i = (0, s.emberDataBinding)({
                Ember: s.Ember,
                websocket: (0, s.getProvider)().getSocket(),
                logPrefix: "service:emotes",
                boundProperties: {
                    v4EmotesLoadout: {
                        path: "/lol-loadouts/v4/loadouts/scope/account",
                        keepOldProperties: !1
                    }
                }
            });
            e.exports = s.Ember.Service.extend(i, {
                accountLoadout: s.Ember.computed.readOnly("v4EmotesLoadout.firstObject"),
                localEmoteLoadout: null,
                remoteEmoteLoadout: s.Ember.computed("accountLoadout.loadout", (function() {
                    const e = this.get("accountLoadout.loadout"),
                        t = this.get("localEmoteLoadout");
                    return e && !t && this.initializeLocalEmoteLoadout(e), e
                })),
                initializeLocalEmoteLoadout: function(e) {
                    const t = this._getNewEmoteLoadout();
                    for (const n in o.EMOTE_SLOTS) {
                        const s = o.EMOTE_SLOTS[n].name,
                            i = e.get(`${s}.itemId`);
                        t.set(`${s}.itemId`, i || o.EMPTY_EMOTE_SLOT_ITEM_ID)
                    }
                    this.set("localEmoteLoadout", t)
                },
                isLocalEmotesSaved: s.Ember.computed(`remoteEmoteLoadout.${o.EMOTE_SLOTS.CENTER.name}.itemId`, `remoteEmoteLoadout.${o.EMOTE_SLOTS.NORTH.name}.itemId`, `remoteEmoteLoadout.${o.EMOTE_SLOTS.SOUTH.name}.itemId`, `remoteEmoteLoadout.${o.EMOTE_SLOTS.EAST.name}.itemId`, `remoteEmoteLoadout.${o.EMOTE_SLOTS.WEST.name}.itemId`, `remoteEmoteLoadout.${o.EMOTE_SLOTS.SPAWN.name}.itemId`, `remoteEmoteLoadout.${o.EMOTE_SLOTS.VICTORY.name}.itemId`, `remoteEmoteLoadout.${o.EMOTE_SLOTS.FIRST_BLOOD.name}.itemId`, `remoteEmoteLoadout.${o.EMOTE_SLOTS.ACE.name}.itemId`, `localEmoteLoadout.${o.EMOTE_SLOTS.CENTER.name}.itemId`, `localEmoteLoadout.${o.EMOTE_SLOTS.NORTH.name}.itemId`, `localEmoteLoadout.${o.EMOTE_SLOTS.SOUTH.name}.itemId`, `localEmoteLoadout.${o.EMOTE_SLOTS.EAST.name}.itemId`, `localEmoteLoadout.${o.EMOTE_SLOTS.WEST.name}.itemId`, `localEmoteLoadout.${o.EMOTE_SLOTS.SPAWN.name}.itemId`, `localEmoteLoadout.${o.EMOTE_SLOTS.VICTORY.name}.itemId`, `localEmoteLoadout.${o.EMOTE_SLOTS.FIRST_BLOOD.name}.itemId`, `localEmoteLoadout.${o.EMOTE_SLOTS.ACE.name}.itemId`, (function() {
                    for (const e in o.EMOTE_SLOTS) {
                        const t = o.EMOTE_SLOTS[e],
                            n = this.get(`localEmoteLoadout.${t.name}.itemId`) || o.EMPTY_EMOTE_SLOT_ITEM_ID,
                            s = this.get(`remoteEmoteLoadout.${t.name}.itemId`) || o.EMPTY_EMOTE_SLOT_ITEM_ID;
                        if (s && n !== s) return !1
                    }
                    return !0
                })),
                saveEmotesLoadout: function() {
                    return this.saveLoadout().catch((() => {
                        this._displayErrorMessage()
                    }))
                },
                saveLoadout: function() {
                    const e = this.get("accountLoadout.id"),
                        t = {
                            loadout: this.get("localEmoteLoadout")
                        };
                    return e ? this.updateLoadout(e, t) : (t.scope = "ACCOUNT", this.createLoadout(t))
                },
                updateLoadout: function(e, t) {
                    return (0, s.dataBinding)("/lol-loadouts").patch(`/v4/loadouts/${e}`, t)
                },
                createLoadout: function(e) {
                    return (0, s.dataBinding)("/lol-loadouts").post("/v4/loadouts", e)
                },
                _getNewEmoteLoadout: function() {
                    const e = s.Ember.Object.create();
                    return o.EMOTE_SLOTS_AS_LIST.forEach((t => e.set(`${t.name}`, {
                        inventoryType: "EMOTE",
                        itemId: o.EMPTY_EMOTE_SLOT_ITEM_ID
                    }))), e
                },
                _displayErrorMessage() {
                    const e = s.UIKit.getTemplateHelper().contentBlockDialogSimple(this.get("tra.emotes_server_generic_error_message"), "dialog-medium", "emotes-panel-generic-error-modal");
                    s.UIKit.getModalManager().add({
                        type: "DialogAlert",
                        data: {
                            contents: e,
                            okText: this.get("tra.emotes_server_generic_error_message_button")
                        }
                    })
                }
            })
        }, (e, t, n) => {
            "use strict";
            var s = n(1);
            e.exports = s.Ember.Service.extend({
                checkAndDisplayErrors: function() {
                    const e = (0, s.dataBinding)("lol-game-data").get("/assets/v1/summoner-emotes.json"),
                        t = (0, s.dataBinding)("lol-catalog").get("/v1/items/EMOTE"),
                        n = (0, s.dataBinding)("lol-loadouts").get("/v4/loadouts/scope/account");
                    this._checkDataPromise(e, "emotes_server_game_data_error_message"), this._checkDataPromise(t, "emotes_server_catalog_error_message"), this._checkDataPromise(n, "emotes_server_loadouts_error_message")
                },
                _checkDataPromise(e, t) {
                    const n = new Promise((function(e, t) {
                        window.setTimeout((function() {
                            t("TIMEOUT")
                        }), 1e4)
                    }));
                    Promise.race([e, n]).then((e => {
                        if (!e) {
                            const e = {
                                id: `emote-panel-${t}`
                            };
                            s.Telemetry.sendCustomData("emote_panel_v2_event", e), this._displayErrorMessage(t)
                        }
                    })).catch((() => {
                        const e = {
                            id: `emote-panel-${t}`
                        };
                        s.Telemetry.sendCustomData("emote_panel_v2_event", e), this._displayErrorMessage(t)
                    }))
                },
                _displayErrorMessage(e) {
                    const t = s.UIKit.getTemplateHelper().contentBlockDialogSimple(this.get("tra." + e), "dialog-medium", "emotes-panel-generic-error-modal");
                    s.UIKit.getModalManager().add({
                        type: "DialogAlert",
                        data: {
                            contents: t,
                            okText: this.get("tra.emotes_server_generic_error_message_button")
                        }
                    })
                }
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            class o extends s.webComponents.ShadowElement {
                templateMarkup() {
                    return n(203)
                }
                constructor() {
                    super(), this._resetDefaultValues(), this._cacheSize = 1, this._containerHeightPx = 0, this._createListElement = () => {}, this._updateListElement = () => {}, this._resetListElement = () => {}, this._deleteListElement = () => {};
                    const e = this._handleScroll.bind(this);
                    this._registerScrollEventListener = () => {
                        this._pendingScrollEventListenerRaf = void 0, this._container.addEventListener("scroll", e)
                    }, this._clearScrollEventListener = () => {
                        this._container.removeEventListener("scroll", e)
                    }, this._destroy = () => {
                        this._pendingScrollEventListenerRaf && cancelAnimationFrame(this._pendingScrollEventListenerRaf);
                        for (const e of this._invisibleElementsByType.keys()) {
                            const t = this._invisibleElementsByType.get(e);
                            for (const n of t.keys()) {
                                const s = t.get(n);
                                this._deleteListElement(s, e)
                            }
                        }
                        this._deleteVisibleElements(), this._resetDefaultValues(), this._container = null, this._containerHeightPx = 0, this._createListElement = null, this._updateListElement = null, this._resetListElement = null, this._deleteListElement = null
                    }
                }
                connectedCallback() {
                    super.connectedCallback(), this._registerScrollEventListener(), this._updateElementsAtPosition(this._currentPosition())
                }
                disconnectedCallback() {
                    super.disconnectedCallback(), this._clearScrollEventListener()
                }
                destroy() {
                    this._destroy()
                }
                refresh() {
                    const e = this._currentPosition(),
                        t = this._firstVisibleElementIndex(e),
                        n = this._visibleItemCount(e);
                    for (let e = t; e < t + n; e++) {
                        const t = this._data[e],
                            n = this._elementsByType.get(t.type).get(e);
                        this._updateListElement(n, t)
                    }
                }
                set container(e) {
                    if (!(e instanceof HTMLElement)) throw new TypeError("expected container to be a HTMLElement");
                    this._container = e
                }
                set data(e) {
                    if (!Array.isArray(e)) throw new TypeError("expected data to be an Array");
                    const t = this._totalItemCount();
                    this._resetDefaultValues(), this._data = e;
                    let n = 0;
                    e.forEach((e => {
                        n += e.height - 1, this._elementBottomPositions.push(n), n++, this._totalItemHeightPx += e.height
                    })), t > 0 ? (this._deleteVisibleElements(), this._createVisibleElements()) : this._createVisibleElements(), this._container.scrollTop = 0
                }
                set createElement(e) {
                    if ("function" != typeof e) throw new TypeError("expected createElement to be a function");
                    this._createListElement = e
                }
                set updateElement(e) {
                    if ("function" != typeof e) throw new TypeError("expected updateElement to be a function");
                    this._updateListElement = e
                }
                set resetElement(e) {
                    if ("function" != typeof e) throw new TypeError("expected resetElement to be a function");
                    this._resetListElement = e
                }
                set deleteElement(e) {
                    if ("function" != typeof e) throw new TypeError("expected deleteElement to be a function");
                    this._deleteListElement = e
                }
                set containerHeightPx(e) {
                    if (!Number.isInteger(e) || e < 0) throw new TypeError("expected containerHeightPx to be a positive number");
                    this._containerHeightPx = e
                }
                set cacheSize(e) {
                    if (!Number.isInteger(e) || e < 0) throw new TypeError("expected cacheSize to be a positive number");
                    this._cacheSize = e
                }
                _resetDefaultValues() {
                    this._data = [], this._elementBottomPositions = [], this._elementsByType = new Map, this._invisibleElementsByType = new Map, this._idxFirstVisible = 0, this._idxLastVisible = 0, this._totalItemHeightPx = 0
                }
                _firstVisibleElementIndex(e) {
                    let t = this._elementBottomPositions.findIndex((t => t >= e));
                    if (-1 === t) {
                        const n = this._elementBottomPositions.length - 1,
                            s = this._elementBottomPositions[n] - this._containerHeightPx;
                        t = e > s ? this._firstVisibleElementIndex(s) : 0
                    }
                    return t
                }
                _lastVisibleElementIndex(e) {
                    let t = this._elementBottomPositions.findIndex((t => e + this._containerHeightPx - 1 <= t));
                    return -1 === t && (t = this._elementBottomPositions.length - 1), t
                }
                _visibleItemCount(e) {
                    const t = this._firstVisibleElementIndex(e);
                    return this._lastVisibleElementIndex(e) - t + 1
                }
                _totalItemCount() {
                    return this._data.length
                }
                _createSpacer(e) {
                    const t = document.createElement("div");
                    return t.style.height = e + "px", t
                }
                _updatePosition(e, t, n) {
                    e.dataset.rowId = t, e.dataset.type = n;
                    const s = t > 0 ? this._elementBottomPositions[t - 1] + 1 : 0;
                    e.style.transform = `translate3d(0, ${s}px, 0)`
                }
                _recycleFromCachedElements(e, t, n, s, o) {
                    const i = Array.from(n.keys()).sort(((e, t) => e - t));
                    if (i.length > 0) {
                        let l;
                        e < t ? l = i.shift() : e > t && (l = i.pop());
                        const a = n.get(l);
                        if (this._stillInViewport(this._elementBottomPositions[l], s, o)) return;
                        return n.delete(l), a
                    }
                }
                _stillInViewport(e, t, n) {
                    return e >= t && e - n <= t + this._containerHeightPx
                }
                _updateElementsAtPosition(e) {
                    let t = this._firstVisibleElementIndex(e);
                    const n = this._lastVisibleElementIndex(e);
                    if (this._idxFirstVisible === t && this._idxLastVisible === n) return;
                    this._reclaimInvisibleElements(e);
                    const s = Array.from(this._elementsByType.values()).reduce(((e, t) => e + Array.from(t.keys()).length), 0);
                    t > this._data.length - s && (t = this._data.length - s);
                    const o = this._visibleItemCount(e),
                        i = Math.max(o, s),
                        l = new Map;
                    for (let n = t; n < t + i; n++) {
                        const s = this._data[n];
                        let o = l.get(s.type);
                        o || (o = new Map, l.set(s.type, o));
                        let i = this._elementsByType.get(s.type);
                        i || (i = new Map, this._elementsByType.set(s.type, i));
                        let a = i.get(n);
                        if (!a) {
                            let o = this._recycleFromCachedElements(this._idxFirstVisible, t, i, e, s.height);
                            o || (o = this._popInvisibleElement(s.type, n)), o || (o = this._createListElement(s), this._cacheElement(o, s.type, n), this.insertBefore(o, this.firstChild)), a = o, this._updateListElement(a, s), this._updatePosition(a, n, s.type)
                        }
                        o.set(n, a)
                    }
                    this._mergeElementsByType(this._elementsByType, l), this._elementsByType = l, this._idxFirstVisible = t, this._idxLastVisible = n
                }
                _reclaimInvisibleElements(e) {
                    for (const t of this._elementsByType.keys())
                        for (const n of this._elementsByType.get(t).keys()) {
                            const s = this._data[n].height;
                            if (!this._stillInViewport(this._elementBottomPositions[n], e, s)) {
                                const e = this._elementsByType.get(t),
                                    s = e.get(n);
                                this._resetListElement(s, this._data[n]), this._pushInvisibleElement(t, n, s), e.delete(n)
                            }
                        }
                }
                _pushInvisibleElement(e, t, n) {
                    if (!e || !n) return;
                    let s = this._invisibleElementsByType.get(e);
                    s || (s = new Map, this._invisibleElementsByType.set(e, s)), s.set(t, n)
                }
                _popInvisibleElement(e, t) {
                    if (!e) return;
                    const n = this._invisibleElementsByType.get(e);
                    if (n) {
                        const e = n.get(t);
                        if (e) return n.delete(t), e;
                        if (n.size) {
                            const [e, t] = n.entries().next().value;
                            return n.delete(e), t
                        }
                    } else;
                }
                _mergeElementsByType(e, t) {
                    for (const n of e.keys()) {
                        const s = e.get(n),
                            o = t.get(n);
                        s.size > 0 && t.set(n, new Map([...s, ...o]))
                    }
                }
                _currentPosition() {
                    return this._container.scrollTop
                }
                _handleScroll() {
                    this._updateElementsAtPosition(this._currentPosition()), this._clearScrollEventListener(), this._pendingScrollEventListenerRaf || (this._pendingScrollEventListenerRaf = requestAnimationFrame(this._registerScrollEventListener))
                }
                _createVisibleElements() {
                    if (this._totalItemCount() > 0) {
                        const e = this._createSpacer(0);
                        e.style.height = this._totalItemHeightPx + "px";
                        const t = this._visibleItemCount(0) + this._cacheSize;
                        for (let e = 0; e < t && e < this._data.length; e++) {
                            const t = this._data[e],
                                n = this._createListElement(t);
                            this._updateListElement(n, t), this._updatePosition(n, e, t.type), this._cacheElement(n, t.type, e), this.appendChild(n)
                        }
                        this.appendChild(e)
                    }
                }
                _deleteVisibleElements() {
                    for (; this.firstChild;) {
                        if (void 0 !== this.firstChild.dataset.rowId) {
                            const e = this.firstChild.dataset.type;
                            this._deleteListElement(this.firstChild, e)
                        }
                        this.removeChild(this.firstChild)
                    }
                }
                _cacheElement(e, t, n) {
                    let s = this._elementsByType.get(t);
                    s || (s = new Map, this._elementsByType.set(t, s)), s.set(n, e)
                }
            }
            o.tagName = "lol-uikit-virtual-list";
            var i = o;
            t.default = i
        }, e => {
            "use strict";
            e.exports = "<template>\r\n    <slot></slot>\r\n</template>"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const {
                Component: o
            } = s.Ember, i = o.extend({
                classNames: ["inventory-card"],
                classNameBindings: ["primaryStyle", "isValid::invalid", "dragging:dragging"],
                primaryStyle: s.Ember.computed("createNew", "page.primaryStyle.idName", (function() {
                    return this.get("createNew") ? "create-new" : this.get("page.primaryStyle.idName")
                })),
                dragging: !1,
                index: 0,
                useDefaultCustomPageName: s.Ember.computed("restrictedPageNamesEnabled", "customPageRenamingDisabled", (function() {
                    return this.get("restrictedPageNamesEnabled") && this.get("customPageRenamingDisabled")
                })),
                isCustomPage: s.Ember.computed.alias("page.isEditable"),
                defaultCustomPageName: s.Ember.computed("tra", "index", (function() {
                    return this.get("tra").formatString("perks_new_page_name", {
                        count: this.get("index") + 1
                    })
                })),
                pageName: s.Ember.computed("createNew", "useDefaultCustomPageName", "isCustomPage", "defaultCustomPageName", "page.name", (function() {
                    return this.get("createNew") ? this.get("tra.perks_page_add_button_label") : this.get("useDefaultCustomPageName") && this.get("isCustomPage") ? this.get("defaultCustomPageName") : this.get("page.name")
                })),
                isValid: s.Ember.computed("createNew", "page.isValid", (function() {
                    return !!this.get("createNew") || this.get("page.isValid")
                })),
                audio: s.Ember.inject.service(),
                click: function() {
                    this.get("audio.gridSelectDefault").play()
                },
                mouseEnter: function() {
                    this.get("audio.gridHover").play()
                },
                backgroundStyle: s.Ember.computed("page.primaryStyle.id", "page.subStyle.id", "page.keystone.id", (function() {
                    const e = this.get("page.primaryStyle.id"),
                        t = this.get("page.subStyle.id") || 0,
                        n = this.get("page.keystone.id") || 0;
                    let s = this.get(`page.primaryStyle.assetMap.p${e}_s${t}_k${n}`);
                    return n && !s && (s = this.get(`page.primaryStyle.assetMap.p${e}_s${t}_k0`)), `background-image: url(${s});`
                })),
                showCometBorder: s.Ember.computed("createNew", "page.autoModifiedSelections.[]", (function() {
                    return this.get("createNew") || this.get("page.autoModifiedSelections.length") > 0
                }))
            });
            i.reopenClass({
                positionalParams: ["page", "index", "customPageRenamingDisabled", "restrictedPageNamesEnabled", "dragging"]
            });
            var l = i;
            t.default = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(118)) && s.__esModule ? s : {
                    default: s
                };
            const {
                RunMixin: l
            } = o.EmberAddons.EmberLifeline, a = o.Ember.Component.extend(l, {
                classNames: ["inventory-cards"],
                dragging: !1,
                init() {
                    this._super(...arguments);
                    const e = this.get("customPages");
                    e && e.length && this.setProperties({
                        customPagesLength: e.length,
                        shouldRenderList: !0
                    })
                },
                didInsertElement() {
                    this._super(...arguments), this._initSortable(), this.lastScrollTop = 0
                },
                didUpdateAttrs() {
                    this._super(...arguments);
                    const e = this.get("customPagesLength"),
                        t = this.get("customPages"),
                        n = this.get("lastCustomPagesOrder"),
                        s = t.map((e => e.order)).join("-");
                    !t || t.length === e && s === n || (this.setProperties({
                        customPagesLength: t.length,
                        shouldRenderList: !1,
                        lastCustomPagesOrder: s
                    }), this.lastScrollTop = this.element.scrollTop, this.runTask((function() {
                        this.set("shouldRenderList", !0), o.Ember.run.scheduleOnce("afterRender", this, this._initSortable)
                    }), 1))
                },
                _initSortable() {
                    this._destroySortable();
                    const e = this.element.querySelector("#inventory-cards-sortable");
                    e && (this._sortable = new i.default(e, {
                        animation: 200,
                        draggable: this.get("reorderingEnabled") ? ".sortable" : "",
                        onChoose: e => {
                            this.set("dragging", !0)
                        },
                        onUnchoose: e => {
                            this.set("dragging", !1)
                        },
                        onEnd: e => {
                            this.set("dragging", !1), this._reorderPage(e.oldIndex, e.newIndex)
                        }
                    })), this.element.scrollTop = this.lastScrollTop
                },
                _destroySortable() {
                    this._sortable && (this._sortable.destroy(), this._sortable = null)
                },
                _reorderPage(e, t) {
                    this.get("perksBook").reorderPage(e, t, this.get("customPages"))
                },
                willDestroyElement() {
                    this._super(...arguments), this._destroySortable()
                },
                actions: {
                    addPage() {
                        o.CollectionsApi.perksApi().create()
                    },
                    editPage(e) {
                        o.CollectionsApi.perksApi().edit(e)
                    },
                    deletePageClick(e) {
                        this.get("perksBook").deletePage(e).then(this.deletePageClick)
                    }
                }
            });
            a.reopenClass({
                positionalParams: ["perksBook", "customPages", "defaultPages", "showAddPageCard", "massDeleteEnabled", "restrictedPageNamesEnabled", "reorderingEnabled", "customPageRenamingDisabled", "deletePageClick"]
            });
            var r = a;
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(207);
            n(209);
            const {
                RunMixin: i
            } = s.EmberAddons.EmberLifeline, l = s.UIKit.getContextualNotificationManager(), a = s.UIKit.getTemplateHelper();

            function r(e) {
                return e >= 10 ? e : `0${e}`
            }
            var c = s.Ember.Component.extend(i, {
                clientConfig: s.Ember.inject.service(),
                platformSettings: s.Ember.inject.service(),
                store: s.Ember.inject.service(),
                settings: s.Ember.inject.service(),
                tutorial: s.Ember.inject.service(),
                canAddPage: s.Ember.computed.and("store.perksBook.canAddPage", "tutorial.basicEditingUnlocked"),
                restrictedPageNamesEnabled: s.Ember.computed.alias("platformSettings.RestrictedPageNamesEnabled"),
                customPageRenamingDisabled: s.Ember.computed.alias("platformSettings.PageRenamingDisabled"),
                reorderingEnabled: s.Ember.computed.not("platformSettings.PageRenamingDisabled"),
                showHidePresetPagesCheckbox: s.Ember.computed.and("tutorial.basicEditingUnlocked", "clientConfig.useDefaultPerksPages"),
                showPresetPages: !0,
                hidePresetPages: s.Ember.computed("showPresetPages", "tutorial.basicEditingUnlocked", (function() {
                    const e = this.get("showPresetPages");
                    return !!this.get("tutorial.basicEditingUnlocked") && !e
                })),
                customPages: s.Ember.computed("store.perksBook.pages", "searchValue", "filteredStyle", (function() {
                    let e = this.get("store.perksBook.customPages");
                    const t = (this.get("searchValue") || "").toLowerCase();
                    t && (e = e.filter((function(e) {
                        return e.name.toLowerCase().includes(t)
                    })));
                    const n = this.get("filteredStyle");
                    return n && (e = e.filter((function(e) {
                        return e.primaryStyle.get("idName").toLowerCase() === n
                    }))), e
                })),
                defaultPages: s.Ember.computed("store.perksBook.pages", "searchValue", "filteredStyle", "hidePresetPages", (function() {
                    if (this.get("hidePresetPages")) return [];
                    let e = (0, o.sortStyles)(this.get("store.perksBook.defaultPages"));
                    const t = (this.get("searchValue") || "").toLowerCase();
                    t && (e = e.filter((function(e) {
                        return e.name.toLowerCase().includes(t)
                    })));
                    const n = this.get("filteredStyle");
                    return n && (e = e.filter((function(e) {
                        return e.primaryStyle.get("idName").toLowerCase() === n
                    }))), e
                })),
                filteredStyle: null,
                numPages: s.Ember.computed("store.perksBook.numCustomPages", (function() {
                    return r(this.get("store.perksBook.numCustomPages"))
                })),
                maxPages: s.Ember.computed("store.perksBook.maxPages", (function() {
                    return r(this.get("store.perksBook.maxPages") || 0)
                })),
                showAddPageCard: s.Ember.computed("store.perksBook.numCustomPages", "canAddPage", (function() {
                    return this.get("store.perksBook.numCustomPages") <= 0 && this.get("canAddPage")
                })),
                addPageDisabledTooltipText: s.Ember.computed("tra.perks_page_adding_disabled_level", "tutorial.platformSettings.MinSummonerLevelBasicEditing", "canAddPage", (function() {
                    return this.get("tutorial.basicEditingUnlocked") ? this.get("canAddPage") ? void 0 : this.get("tra.perks_page_adding_disabled") : this.tra.formatString("perks_page_adding_disabled_level", {
                        level: this.get("tutorial.platformSettings.MinSummonerLevelBasicEditing")
                    })
                })),
                checkAndShowTutorialNotifications() {
                    if (!this.get("tutorial.perksPresetPagesSeen")) {
                        const e = a.contentBlockTooltip(this.get("tra.perks_tutorial_preset_pages_title"), this.get("tra.perks_tutorial_preset_pages_body"), "tooltip-small", "perks-tutorial-tooltip perks-tutorial-tooltip-preset-pages"),
                            t = document.querySelector(".inventory-controls");
                        t && l.add(e, {
                            target: {
                                domNode: t,
                                anchor: {
                                    x: "center",
                                    y: "top"
                                }
                            },
                            offset: {
                                x: -370,
                                y: -140
                            },
                            anchor: {
                                x: "center",
                                y: "bottom"
                            },
                            orientation: "top",
                            dismissOnTargetHide: !0
                        }), this.set("tutorial.perksPresetPagesSeen", !0)
                    }
                    if (!this.get("tutorial.perksCreateNewPageSeen") && this.get("tutorial.basicEditingUnlocked")) {
                        const e = a.contentBlockTooltip(this.get("tra.perks_tutorial_create_new_page_title"), this.get("tra.perks_tutorial_create_new_page_body"), "tooltip-small", "perks-tutorial-tooltip perks-tutorial-tooltip-new-page"),
                            t = document.getElementById("inventory-hide-preset-toggle");
                        t && l.add(e, {
                            target: {
                                domNode: t,
                                anchor: {
                                    x: "left",
                                    y: "center"
                                }
                            },
                            offset: {
                                x: 0,
                                y: 0
                            },
                            anchor: {
                                x: "right",
                                y: "center"
                            },
                            orientation: "left",
                            dismissOnTargetHide: !0
                        }), this.set("tutorial.perksCreateNewPageSeen", !0)
                    }
                },
                init() {
                    this._super(...arguments), (0, s.dataBinding)("/lol-perks", s.socket).post("/v1/show-auto-modified-pages-notification"), this.runTask("checkAndShowTutorialNotifications", 1e3), this.get("settings").getSetting("showPresetPages").then((e => {
                        void 0 !== e && this.set("showPresetPages", e)
                    }))
                },
                massDeleteEnabled: !1,
                showMassDeleteButton: s.Ember.computed.gt("store.perksBook.customPages.length", 0),
                massDeleteTooltip: s.Ember.computed("massDeleteEnabled", "showMassDeleteButton", (function() {
                    return this.get("showMassDeleteButton") ? this.get("massDeleteEnabled") ? this.get("tra.perks_page_mass_delete_on") : this.get("tra.perks_page_mass_delete_off") : this.get("tra.perks_page_mass_delete_disabled")
                })),
                actions: {
                    styleFilterClick(e) {
                        this.set("filteredStyle", e)
                    },
                    toggleShowPresetPages(e) {
                        e.preventDefault();
                        const t = !this.get("showPresetPages");
                        this.set("showPresetPages", t), this.get("settings").setSetting("showPresetPages", t)
                    },
                    massDeleteButtonClick() {
                        this.get("showMassDeleteButton") && !this.get("massDeleteDelay") && (this.set("massDeleteDelay", setTimeout((() => this.set("massDeleteDelay", null)), 100)), this.toggleProperty("massDeleteEnabled"))
                    },
                    deletePageClick() {
                        this.get("store.perksBook.customPages.length") || this.set("massDeleteEnabled", !1)
                    },
                    addPage() {
                        this.get("canAddPage") && s.CollectionsApi.perksApi().create()
                    }
                }
            });
            t.default = c
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.PerkValidationResult = void 0, t.isPerkSelectionValid = function(e, t, n, s, i) {
                if (!e) return o.PerkDoesNotExist;
                let l = 0;
                if (s.forEach((t => {
                        t === e.id && l++
                    })), l > 1) return o.PerkSelectedMultipleTimes;
                if (i.includes(e.get("id"))) return o.PerkDisabled;
                const a = function(e, t, n) {
                        if (!t) return !1;
                        for (let s = 0; s < t.length; s++) {
                            const i = t[s];
                            if (!i || !i.perks) continue;
                            if (i.perks.indexOf(e.id) >= 0) return n.indexOf(e.id) === s ? o.PerkSelectionValid : o.PerkInWrongSlot
                        }
                        return !1
                    }(e, t, s),
                    r = function(e, t, n, s) {
                        if (!n) return !1;
                        for (let i = 0; i < n.length; i++) {
                            const l = n[i];
                            if (!l || !l.perks) continue;
                            const a = l.perks;
                            if (a.indexOf(e.id) >= 0) {
                                let n = 0;
                                for (let e = 0; e < s.length; e++) a.indexOf(s[e]) >= 0 && n++;
                                const i = s.indexOf(e.id);
                                return n <= 1 || i === t.length ? o.PerkSelectionValid : o.MultipleSelectionsInSlot
                            }
                        }
                        return !1
                    }(e, t, n, s);
                return !1 !== a ? a : !1 !== r ? r : o.PerkDoesNotExist
            }, t.isValidStatModPerkSelection = function(e, t, n, s) {
                if (!e) return o.PerkDoesNotExist;
                if (s.includes(e.get("id"))) return o.PerkDisabled;
                const i = n[t];
                if (!i) return o.PerkInWrongSlot;
                return i.get("perks").includes(e.get("id")) ? o.PerkSelectionValid : o.PerkDoesNotExist
            }, t.sortStyles = function(e) {
                if (!e) return e;
                const t = [],
                    n = {};
                for (const t of e) {
                    n[t.primaryStyleId || t.id] = t
                }
                for (const e of s.STYLES_ORDER) {
                    const s = n[e];
                    s && t.push(s)
                }
                return t
            };
            var s = n(208);
            const o = {
                PerkSelectionValid: {
                    code: 0,
                    trakey: "perks_perk_selection_valid"
                },
                PerkDoesNotExist: {
                    code: 1,
                    trakey: "perks_perk_does_not_exist"
                },
                PerkDisabled: {
                    code: 2,
                    trakey: "perks_perk_disabled"
                },
                PerkInWrongSlot: {
                    code: 3,
                    trakey: "perks_perk_in_wrong_slot"
                },
                MultipleSelectionsInSlot: {
                    code: 4,
                    trakey: "perks_multiple_selections_in_slot"
                },
                PerkSelectedMultipleTimes: {
                    code: 5,
                    trakey: "perks_perk_selected_multiple_times"
                },
                InvalidData: {
                    code: 6,
                    trakey: "perks_invalid_data"
                },
                NoPerkSelected: {
                    code: 7,
                    trakey: "perks_no_perk_selected"
                }
            };
            t.PerkValidationResult = o
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.VALID_POSITIONS = t.TOTAL_STAT_MOD_PERKS = t.TOTAL_SECONDARY_PERKS = t.TOTAL_PRIMARY_PERKS = t.STYLES_ORDER = t.STAT_MOD_PERK_DRAWER_INDEX = t.STAT_MOD_PERKS_INDEX = t.SR_MAP_ID = t.SLOT_TYPES = t.SECONDARY_STYLE_DRAWER_INDEX = t.SECONDARY_PERKS_INDEX = t.PRIMARY_STYLE_DRAWER_INDEX = t.PRIMARY_PERKS_INDEX = t.POSITION_SUPPORT = t.POSITION_NONE = t.LCU_VIEWPORTS = t.INVALID_CHAMPION_ID = t.INSPIRATION_STYLE_ID = t.IMG_FOLDER = t.FIRST_SECONDARY_PERK_DRAWER_INDEX = t.FIRST_PRIMARY_PERK_DRAWER_INDEX = void 0;
            t.SLOT_TYPES = {
                kRegular: "kRegular",
                kSplashable: "kSplashable",
                kKeyStone: "kKeyStone",
                kMixedRegularSplashable: "kMixedRegularSplashable",
                kStatMod: "kStatMod"
            };
            const n = function e(t) {
                if ("object" == typeof t && null !== t) {
                    for (const n in t) e(t[n]);
                    Object.freeze(t)
                }
                return t
            }({
                "rcp-fe-lol-collections": "rcp-fe-lol-collections",
                "rcp-fe-lol-champ-select": "rcp-fe-lol-champ-select"
            });
            t.LCU_VIEWPORTS = n;
            t.TOTAL_PRIMARY_PERKS = 4;
            t.TOTAL_SECONDARY_PERKS = 2;
            t.TOTAL_STAT_MOD_PERKS = 3;
            t.PRIMARY_PERKS_INDEX = {
                first: 0,
                last: 3
            };
            t.SECONDARY_PERKS_INDEX = {
                first: 4,
                last: 5
            };
            t.STAT_MOD_PERKS_INDEX = {
                first: 6,
                last: 8
            };
            t.PRIMARY_STYLE_DRAWER_INDEX = 0;
            t.FIRST_PRIMARY_PERK_DRAWER_INDEX = 1;
            t.SECONDARY_STYLE_DRAWER_INDEX = 5;
            t.FIRST_SECONDARY_PERK_DRAWER_INDEX = 6;
            t.STAT_MOD_PERK_DRAWER_INDEX = 7;
            t.INSPIRATION_STYLE_ID = 8300;
            t.IMG_FOLDER = "/fe/lol-collections/perks/images/";
            const s = Object.freeze([8e3, 8100, 8200, 8400, 8300]);
            t.STYLES_ORDER = s;
            t.SR_MAP_ID = 11;
            t.VALID_POSITIONS = {
                top: "TOP",
                jungle: "JUNGLE",
                middle: "MIDDLE",
                bottom: "BOTTOM",
                utility: "UTILITY"
            };
            t.POSITION_SUPPORT = "SUPPORT";
            t.POSITION_NONE = "NONE";
            t.INVALID_CHAMPION_ID = -1
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(207);
            const i = s.Ember.Component.extend({
                classNames: ["perks-style-filter"],
                store: s.Ember.inject.service(),
                styles: s.Ember.computed("store.perksStaticData.perkStylesMap", (function() {
                    const e = [],
                        t = this.get("store.perksStaticData.perkStylesMap"),
                        {
                            formatString: n
                        } = this.get("tra");
                    for (const s in t) {
                        const o = t[s];
                        e.push({
                            id: o.get("id"),
                            idName: o.get("idName"),
                            tooltip: n("perks_show", {
                                name: o.get("name")
                            })
                        })
                    }
                    return (0, o.sortStyles)(e)
                })),
                didInsertElement() {
                    this._super(...arguments), this._adjustUnderline(this.get("filteredStyle"))
                },
                _adjustUnderline(e) {
                    const {
                        style: t
                    } = this.element;
                    t.removeProperty("--selectedX");
                    const n = this.get("styles").findIndex((t => t.idName === e));
                    t.setProperty("--selectedX", 100 * (n + 1) + "%")
                },
                styleFilterClick() {
                    throw new Error("`styleFilterClick` must be overridden")
                },
                actions: {
                    onStyleClick(e) {
                        this.styleFilterClick(e), this._adjustUnderline(e)
                    }
                }
            });
            i.reopenClass({
                positionalParams: ["filteredStyle", "styleFilterClick"]
            });
            var l = i;
            t.default = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1).Ember.Helper.helper((function(e) {
                return e[0] === e[1]
            }));
            t.default = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(213)) && s.__esModule ? s : {
                    default: s
                };
            const l = o.AudioPlugin.getChannel("sfx-ui"),
                a = o.AudioPlugin.getChannel("sfx-ambience-perks");
            var r = o.Ember.Service.extend({
                _primaryIntroSound: void 0,
                _primaryAmbSound: void 0,
                _secondaryIntroSound: void 0,
                _secondaryAmbSound: void 0,
                stopAll() {
                    this.stopPrimaryStyleSounds(), this.stopSecondaryStyleSounds()
                },
                stopPrimaryStyleSounds() {
                    this._primaryIntroSound && this._primaryIntroSound.isPlaying() && this._primaryIntroSound.stop(), this._primaryAmbSound && this._primaryAmbSound.isPlaying() && this._primaryAmbSound.stop()
                },
                stopSecondaryStyleSounds() {
                    this._secondaryIntroSound && this._secondaryIntroSound.isPlaying() && this._secondaryIntroSound.stop(), this._secondaryAmbSound && this._secondaryAmbSound.isPlaying() && this._secondaryAmbSound.stop()
                },
                playPrimaryStyleSounds(e, t) {
                    (o.CollectionsApi.perksApi().isPlaybackEnabled() || t) && (this._primaryIntroSound = this.getPrimaryPerkIntroSound(e), this._primaryAmbSound = this.getPrimaryPerkAmbSound(e), this._primaryIntroSound.play(), this._primaryAmbSound.play())
                },
                playSecondaryStyleSounds(e, t) {
                    (o.CollectionsApi.perksApi().isPlaybackEnabled() || t) && (this._secondaryIntroSound = this.getSecondaryPerkIntroSound(e), this._secondaryAmbSound = this.getSecondaryPerkAmbSound(e), this._secondaryIntroSound.play(), this._secondaryAmbSound.play())
                },
                playPerkLockin(e) {
                    if (!o.CollectionsApi.perksApi().isPlaybackEnabled()) return;
                    this.getPerksLockin(e).play()
                },
                playPerkSound(e) {
                    this.getPerkSound(e).play()
                },
                playLightsaberSound() {
                    o.CollectionsApi.perksApi().isPlaybackEnabled() && this.lightsaber.play()
                },
                getPrimaryPerkIntroSound(e) {
                    const t = "perkPrimaryIntro" + e;
                    return this[t] ? this[t] : this.defaultPerkPrimaryIntro
                },
                getPrimaryPerkAmbSound(e) {
                    const t = "perkPrimaryAmb" + e;
                    return this[t] ? this[t] : this.defaultPerkPrimaryAmb
                },
                getSecondaryPerkIntroSound(e) {
                    const t = "perkSecondaryIntro" + e;
                    return this[t] ? this[t] : this.defaultPerkSecondaryIntro
                },
                getSecondaryPerkAmbSound(e) {
                    const t = "perkSecondaryAmb" + e;
                    return this[t] ? this[t] : this.defaultPerkSecondaryAmb
                },
                getPerkSound(e) {
                    const t = "perk" + e;
                    return this[t] ? this[t] : this.defaultPerk
                },
                getPerksLockin(e) {
                    const t = "perksLockin" + e;
                    return this[t] ? this[t] : this.defaultPerkSecondary
                },
                elementClick: l.createSound(i.default.sfxMasteriesButtonGeneric),
                gridHover: l.createSound(i.default.sfxUIKitGridHover),
                gridSelectDefault: l.createSound(i.default.sfxgridSelectDefault),
                buttonEdit: l.createSound(i.default.sfxUIKitEdit),
                drawerOpen: l.createSound(i.default.sfxUIKitDrawerOpen),
                lightsaber: l.createSound(i.default.sfxLightsaber),
                perk8229: l.createSound(i.default.sfxPerksSorcKeystoneAc),
                perk8230: l.createSound(i.default.sfxPerksSorcKeystonePr),
                perk8214: l.createSound(i.default.sfxPerksSorcKeystoneSk),
                perk8437: l.createSound(i.default.sfxPerksResKeystoneGotu),
                perk8439: l.createSound(i.default.sfxPerksResKeystoneA),
                perk8465: l.createSound(i.default.sfxPerksResKeystoneG),
                perk8112: l.createSound(i.default.sfxPerksDomKeystoneElec),
                perk8124: l.createSound(i.default.sfxPerksDomKeystonePred),
                perk8128: l.createSound(i.default.sfxPerksDomKeystoneDh),
                perk9923: l.createSound(i.default.sfxPerksDomKeystoneHoB),
                perk8021: l.createSound(i.default.sfxPerksPrecKeystoneFf),
                perk8005: l.createSound(i.default.sfxPerksPrecKeystonePta),
                perk8008: l.createSound(i.default.sfxPerksPrecKeystoneLt),
                perk8010: l.createSound(i.default.sfxPerksPrecKeystoneCon),
                perk8360: l.createSound(i.default.sfxPerksInspKeystoneSs),
                perk8351: l.createSound(i.default.sfxPerksInspKeystoneGa),
                perk8369: l.createSound(i.default.sfxPerksInspKeystoneVp),
                perkPrimaryIntro8300: l.createSound(i.default.sfxPerksInspPrimaryIntro),
                perkPrimaryAmb8300: a.createSound(i.default.sfxPerksInspPrimaryAmb, {
                    isLoop: !0
                }),
                perkPrimaryIntro8200: l.createSound(i.default.sfxPerksSorcPrimaryIntro),
                perkPrimaryAmb8200: a.createSound(i.default.sfxPerksSorcPrimaryAmb, {
                    isLoop: !0
                }),
                perkPrimaryIntro8100: l.createSound(i.default.sfxPerksDomPrimaryIntro),
                perkPrimaryAmb8100: a.createSound(i.default.sfxPerksDomPrimaryAmb, {
                    isLoop: !0
                }),
                perkPrimaryIntro8400: l.createSound(i.default.sfxPerksResPrimaryIntro),
                perkPrimaryAmb8400: a.createSound(i.default.sfxPerksResPrimaryAmb, {
                    isLoop: !0
                }),
                perkPrimaryIntro8000: l.createSound(i.default.sfxPerksPrecPrimaryIntro),
                perkPrimaryAmb8000: a.createSound(i.default.sfxPerksPrecPrimaryAmb, {
                    isLoop: !0
                }),
                perkSecondaryIntro8300: l.createSound(i.default.sfxPerksInspSecondaryIntro),
                perkSecondaryAmb8300: a.createSound(i.default.sfxPerksInspSecondaryAmb, {
                    isLoop: !0
                }),
                perkSecondaryIntro8200: l.createSound(i.default.sfxPerksSorcSecondaryIntro),
                perkSecondaryAmb8200: a.createSound(i.default.sfxPerksSorcSecondaryAmb, {
                    isLoop: !0
                }),
                perkSecondaryIntro8100: l.createSound(i.default.sfxPerksDomSecondaryIntro),
                perkSecondaryAmb8100: a.createSound(i.default.sfxPerksDomSecondaryAmb, {
                    isLoop: !0
                }),
                perkSecondaryIntro8400: l.createSound(i.default.sfxPerksResSecondaryIntro),
                perkSecondaryAmb8400: a.createSound(i.default.sfxPerksResSecondaryAmb, {
                    isLoop: !0
                }),
                perkSecondaryIntro8000: l.createSound(i.default.sfxPerksPrecSecondaryIntro),
                perkSecondaryAmb8000: a.createSound(i.default.sfxPerksPrecSecondaryAmb, {
                    isLoop: !0
                }),
                perk8345: l.createSound(i.default.sfxPerksRunesBd),
                perk8306: l.createSound(i.default.sfxPerksRunesCb),
                perk8446: l.createSound(i.default.sfxPerksRunesD),
                perk8120: l.createSound(i.default.sfxPerksRunesGp),
                perk8316: l.createSound(i.default.sfxPerksRunesMa),
                perk8321: l.createSound(i.default.sfxPerksRunesSc),
                perk8136: l.createSound(i.default.sfxPerksRunesZw),
                perk8313: l.createSound(i.default.sfxPerksRunesPt),
                perk8473: l.createSound(i.default.sfxPerksRunesBp),
                perk8224: l.createSound(i.default.sfxPerksRunesNo),
                defaultPerkPrimaryIntro: l.createSound(i.default.sfxPerksDefaultPrimaryIntro),
                defaultPerkPrimaryAmb: a.createSound(i.default.sfxPerksDefaultPrimaryAmb),
                defaultPerkSecondaryaryIntro: l.createSound(i.default.sfxPerksDefaultSecondaryIntro),
                defaultPerkSecondayAmb: a.createSound(i.default.sfxPerksDefaultSecondaryAmb),
                defaultPerk: l.createSound(i.default.sfxPerksDefault),
                defaultPerkSecondary: l.createSound(i.default.sfxPerksSecondaryDefault),
                perksLockinprimary8000: l.createSound(i.default.sfxPerksLockinPrimary8000),
                perksLockinprimary8100: l.createSound(i.default.sfxPerksLockinPrimary8100),
                perksLockinprimary8200: l.createSound(i.default.sfxPerksLockinPrimary8200),
                perksLockinprimary8300: l.createSound(i.default.sfxPerksLockinPrimary8300),
                perksLockinprimary8400: l.createSound(i.default.sfxPerksLockinPrimary8400),
                perksLockinsecondary8000: l.createSound(i.default.sfxPerksLockinSecondary8000),
                perksLockinsecondary8100: l.createSound(i.default.sfxPerksLockinSecondary8100),
                perksLockinsecondary8200: l.createSound(i.default.sfxPerksLockinSecondary8200),
                perksLockinsecondary8300: l.createSound(i.default.sfxPerksLockinSecondary8300),
                perksLockinsecondary8400: l.createSound(i.default.sfxPerksLockinSecondary8400),
                perksLockinkeystone8021: l.createSound(i.default.sfxPerksLockinKeystone8021),
                perksLockinkeystone8003: l.createSound(i.default.sfxPerksLockinKeystone8003),
                perksLockinkeystone8008: l.createSound(i.default.sfxPerksLockinKeystone8008),
                perksLockinkeystone8112: l.createSound(i.default.sfxPerksLockinKeystone8112),
                perksLockinkeystone8124: l.createSound(i.default.sfxPerksLockinKeystone8124),
                perksLockinkeystone8128: l.createSound(i.default.sfxPerksLockinKeystone8128),
                perksLockinkeystone9923: l.createSound(i.default.sfxPerksLockinKeystone9923),
                perksLockinkeystone8229: l.createSound(i.default.sfxPerksLockinKeystone8229),
                perksLockinkeystone8230: l.createSound(i.default.sfxPerksLockinKeystone8230),
                perksLockinkeystone8214: l.createSound(i.default.sfxPerksLockinKeystone8214),
                perksLockinkeystone8360: l.createSound(i.default.sfxPerksLockinKeystone8360),
                perksLockinkeystone8351: l.createSound(i.default.sfxPerksLockinKeystone8351),
                perksLockinkeystone8369: l.createSound(i.default.sfxPerksLockinKeystone8369),
                perksLockinkeystone8437: l.createSound(i.default.sfxPerksLockinKeystone8437),
                perksLockinkeystone8439: l.createSound(i.default.sfxPerksLockinKeystone8439),
                perksLockinkeystone8465: l.createSound(i.default.sfxPerksLockinKeystone8465)
            });
            t.default = r
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            t.default = {
                sfxMasteriesButtonGeneric: "/fe/lol-collections/perks/audio/sfx-masteries-button-generic-click.ogg",
                sfxUIKitGridHover: "/fe/lol-collections/perks/audio/sfx-uikit-grid-hover.ogg",
                sfxgridSelectDefault: "/fe/lol-collections/perks/audio/sfx-perks-grid-select-default.ogg",
                sfxUIKitEdit: "/fe/lol-collections/perks/audio/sfx-perks-edit-click.ogg",
                sfxUIKitDrawerOpen: "/fe/lol-collections/perks/audio/sfx-perks-drawer-open.ogg",
                sfxLightsaber: "/fe/lol-collections/perks/audio/sfx-perks-lightsaber.ogg",
                sfxPerksSorcKeystoneAc: "/fe/lol-collections/perks/audio/sfx-perks-sorc-keystone-ac.ogg",
                sfxPerksSorcKeystonePr: "/fe/lol-collections/perks/audio/sfx-perks-sorc-keystone-pr.ogg",
                sfxPerksSorcKeystoneSk: "/fe/lol-collections/perks/audio/sfx-perks-sorc-keystone-sk.ogg",
                sfxPerksResKeystoneGotu: "/fe/lol-collections/perks/audio/sfx-perks-res-keystone-gotu.ogg",
                sfxPerksResKeystoneA: "/fe/lol-collections/perks/audio/sfx-perks-res-keystone-a.ogg",
                sfxPerksResKeystoneG: "/fe/lol-collections/perks/audio/sfx-perks-res-keystone-g.ogg",
                sfxPerksDomKeystoneElec: "/fe/lol-collections/perks/audio/sfx-perks-dom-keystone-elec.ogg",
                sfxPerksDomKeystonePred: "/fe/lol-collections/perks/audio/sfx-perks-dom-keystone-pred.ogg",
                sfxPerksDomKeystoneDh: "/fe/lol-collections/perks/audio/sfx-perks-dom-keystone-dh.ogg",
                sfxPerksDomKeystoneHoB: "/fe/lol-collections/perks/audio/sfx-perks-dom-keystone-hob.ogg",
                sfxPerksPrecKeystonePta: "/fe/lol-collections/perks/audio/sfx-perks-prec-keystone-pta.ogg",
                sfxPerksPrecKeystoneFf: "/fe/lol-collections/perks/audio/sfx-perks-prec-keystone-ff.ogg",
                sfxPerksPrecKeystoneLt: "/fe/lol-collections/perks/audio/sfx-perks-prec-keystone-lt.ogg",
                sfxPerksPrecKeystoneCon: "/fe/lol-collections/perks/audio/sfx-perks-prec-keystone-con.ogg",
                sfxPerksInspKeystoneSs: "/fe/lol-collections/perks/audio/sfx-perks-insp-keystone-ss.ogg",
                sfxPerksInspKeystoneGa: "/fe/lol-collections/perks/audio/sfx-perks-insp-keystone-ga.ogg",
                sfxPerksInspKeystoneVp: "/fe/lol-collections/perks/audio/sfx-perks-insp-keystone-vp.ogg",
                sfxPerksInspPrimaryIntro: "/fe/lol-collections/perks/audio/sfx-perks-insp-primary-intro.ogg",
                sfxPerksInspPrimaryAmb: "/fe/lol-collections/perks/audio/sfx-perks-insp-primary-amb.ogg",
                sfxPerksSorcPrimaryIntro: "/fe/lol-collections/perks/audio/sfx-perks-sorc-primary-intro.ogg",
                sfxPerksSorcPrimaryAmb: "/fe/lol-collections/perks/audio/sfx-perks-sorc-primary-amb.ogg",
                sfxPerksDomPrimaryIntro: "/fe/lol-collections/perks/audio/sfx-perks-dom-primary-intro.ogg",
                sfxPerksDomPrimaryAmb: "/fe/lol-collections/perks/audio/sfx-perks-dom-primary-amb.ogg",
                sfxPerksResPrimaryIntro: "/fe/lol-collections/perks/audio/sfx-perks-res-primary-intro.ogg",
                sfxPerksResPrimaryAmb: "/fe/lol-collections/perks/audio/sfx-perks-res-primary-amb.ogg",
                sfxPerksPrecPrimaryIntro: "/fe/lol-collections/perks/audio/sfx-perks-prec-primary-intro.ogg",
                sfxPerksPrecPrimaryAmb: "/fe/lol-collections/perks/audio/sfx-perks-prec-primary-amb.ogg",
                sfxPerksInspSecondaryIntro: "/fe/lol-collections/perks/audio/sfx-perks-insp-secondary-intro.ogg",
                sfxPerksInspSecondaryAmb: "/fe/lol-collections/perks/audio/sfx-perks-insp-secondary-amb.ogg",
                sfxPerksSorcSecondaryIntro: "/fe/lol-collections/perks/audio/sfx-perks-sorc-secondary-intro.ogg",
                sfxPerksSorcSecondaryAmb: "/fe/lol-collections/perks/audio/sfx-perks-sorc-secondary-amb.ogg",
                sfxPerksDomSecondaryIntro: "/fe/lol-collections/perks/audio/sfx-perks-dom-secondary-intro.ogg",
                sfxPerksDomSecondaryAmb: "/fe/lol-collections/perks/audio/sfx-perks-dom-secondary-amb.ogg",
                sfxPerksResSecondaryIntro: "/fe/lol-collections/perks/audio/sfx-perks-res-secondary-intro.ogg",
                sfxPerksResSecondaryAmb: "/fe/lol-collections/perks/audio/sfx-perks-res-secondary-amb.ogg",
                sfxPerksPrecSecondaryIntro: "/fe/lol-collections/perks/audio/sfx-perks-prec-secondary-intro.ogg",
                sfxPerksPrecSecondaryAmb: "/fe/lol-collections/perks/audio/sfx-perks-prec-secondary-amb.ogg",
                sfxPerksRunesSecondaryBd: "/fe/lol-collections/perks/audio/sfx-perks-runes-secondary-bd.ogg",
                sfxPerksRunesSecondaryCb: "/fe/lol-collections/perks/audio/sfx-perks-runes-secondary-cb.ogg",
                sfxPerksRunesSecondaryD: "/fe/lol-collections/perks/audio/sfx-perks-runes-secondary-d.ogg",
                sfxPerksRunesSecondaryGp: "/fe/lol-collections/perks/audio/sfx-perks-runes-secondary-gp.ogg",
                sfxPerksRunesSecondaryMa: "/fe/lol-collections/perks/audio/sfx-perks-runes-secondary-ma.ogg",
                sfxPerksRunesSecondarySc: "/fe/lol-collections/perks/audio/sfx-perks-runes-secondary-sc.ogg",
                sfxPerksRunesSecondaryZw: "/fe/lol-collections/perks/audio/sfx-perks-runes-secondary-zw.ogg",
                sfxPerksRunesSecondaryPt: "/fe/lol-collections/perks/audio/sfx-perks-runes-secondary-pt.ogg",
                sfxPerksRunesSecondaryBp: "/fe/lol-collections/perks/audio/sfx-perks-runes-secondary-bp.ogg",
                sfxPerksRunesSecondaryNo: "/fe/lol-collections/perks/audio/sfx-perks-runes-secondary-no.ogg",
                sfxPerksRunesBd: "/fe/lol-collections/perks/audio/sfx-perks-runes-bd.ogg",
                sfxPerksRunesCb: "/fe/lol-collections/perks/audio/sfx-perks-runes-cb.ogg",
                sfxPerksRunesD: "/fe/lol-collections/perks/audio/sfx-perks-runes-d.ogg",
                sfxPerksRunesGp: "/fe/lol-collections/perks/audio/sfx-perks-runes-gp.ogg",
                sfxPerksRunesMa: "/fe/lol-collections/perks/audio/sfx-perks-runes-ma.ogg",
                sfxPerksRunesSc: "/fe/lol-collections/perks/audio/sfx-perks-runes-sc.ogg",
                sfxPerksRunesZw: "/fe/lol-collections/perks/audio/sfx-perks-runes-zw.ogg",
                sfxPerksRunesPt: "/fe/lol-collections/perks/audio/sfx-perks-runes-pt.ogg",
                sfxPerksRunesBp: "/fe/lol-collections/perks/audio/sfx-perks-runes-Bp.ogg",
                sfxPerksRunesNo: "/fe/lol-collections/perks/audio/sfx-perks-runes-No.ogg",
                sfxPerksDefaultPrimaryIntro: "/fe/lol-collections/perks/audio/sfx-perks-default-primary-intro.ogg",
                sfxPerksDefaultPrimaryAmb: "/fe/lol-collections/perks/audio/sfx-perks-default-primary-amb.ogg",
                sfxPerksDefaultSecondaryIntro: "/fe/lol-collections/perks/audio/sfx-perks-default-secondary-intro.ogg",
                sfxPerksDefaultSecondaryAmb: "/fe/lol-collections/perks/audio/sfx-perks-default-seondary-amb.ogg",
                sfxPerksDefault: "/fe/lol-collections/perks/audio/sfx-perks-runes-default.ogg",
                sfxPerksSecondaryDefault: "/fe/lol-collections/perks/audio/sfx-perks-runes-secondary-default.ogg",
                sfxPerksLockinPrimary8000: "/fe/lol-collections/perks/audio/sfx-perks-lockin-primary-8000.ogg",
                sfxPerksLockinPrimary8100: "/fe/lol-collections/perks/audio/sfx-perks-lockin-primary-8100.ogg",
                sfxPerksLockinPrimary8200: "/fe/lol-collections/perks/audio/sfx-perks-lockin-primary-8200.ogg",
                sfxPerksLockinPrimary8300: "/fe/lol-collections/perks/audio/sfx-perks-lockin-primary-8300.ogg",
                sfxPerksLockinPrimary8400: "/fe/lol-collections/perks/audio/sfx-perks-lockin-primary-8400.ogg",
                sfxPerksLockinSecondary8000: "/fe/lol-collections/perks/audio/sfx-perks-lockin-secondary-8000.ogg",
                sfxPerksLockinSecondary8100: "/fe/lol-collections/perks/audio/sfx-perks-lockin-secondary-8100.ogg",
                sfxPerksLockinSecondary8200: "/fe/lol-collections/perks/audio/sfx-perks-lockin-secondary-8200.ogg",
                sfxPerksLockinSecondary8300: "/fe/lol-collections/perks/audio/sfx-perks-lockin-secondary-8300.ogg",
                sfxPerksLockinSecondary8400: "/fe/lol-collections/perks/audio/sfx-perks-lockin-secondary-8400.ogg",
                sfxPerksLockinKeystone8021: "/fe/lol-collections/perks/audio/sfx-perks-lockin-keystone-8021.ogg",
                sfxPerksLockinKeystone8003: "/fe/lol-collections/perks/audio/sfx-perks-lockin-keystone-8003.ogg",
                sfxPerksLockinKeystone8008: "/fe/lol-collections/perks/audio/sfx-perks-lockin-keystone-8008.ogg",
                sfxPerksLockinKeystone8112: "/fe/lol-collections/perks/audio/sfx-perks-lockin-keystone-8112.ogg",
                sfxPerksLockinKeystone8124: "/fe/lol-collections/perks/audio/sfx-perks-lockin-keystone-8124.ogg",
                sfxPerksLockinKeystone8128: "/fe/lol-collections/perks/audio/sfx-perks-lockin-keystone-8128.ogg",
                sfxPerksLockinKeystone8229: "/fe/lol-collections/perks/audio/sfx-perks-lockin-keystone-8229.ogg",
                sfxPerksLockinKeystone8230: "/fe/lol-collections/perks/audio/sfx-perks-lockin-keystone-8230.ogg",
                sfxPerksLockinKeystone8214: "/fe/lol-collections/perks/audio/sfx-perks-lockin-keystone-8214.ogg",
                sfxPerksLockinKeystone8360: "/fe/lol-collections/perks/audio/sfx-perks-lockin-keystone-8360.ogg",
                sfxPerksLockinKeystone8351: "/fe/lol-collections/perks/audio/sfx-perks-lockin-keystone-8351.ogg",
                sfxPerksLockinKeystone8369: "/fe/lol-collections/perks/audio/sfx-perks-lockin-keystone-8369.ogg",
                sfxPerksLockinKeystone8437: "/fe/lol-collections/perks/audio/sfx-perks-lockin-keystone-8437.ogg",
                sfxPerksLockinKeystone8439: "/fe/lol-collections/perks/audio/sfx-perks-lockin-keystone-8439.ogg",
                sfxPerksLockinKeystone8465: "/fe/lol-collections/perks/audio/sfx-perks-lockin-keystone-8465.ogg",
                sfxPerksLockinKeystone9923: "/fe/lol-collections/perks/audio/sfx-perks-lockin-keystone-9923.ogg"
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = function(e, t) {
                    if (!t && e && e.__esModule) return e;
                    if (null === e || "object" != typeof e && "function" != typeof e) return {
                        default: e
                    };
                    var n = l(t);
                    if (n && n.has(e)) return n.get(e);
                    var s = {},
                        o = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var i in e)
                        if ("default" !== i && Object.prototype.hasOwnProperty.call(e, i)) {
                            var a = o ? Object.getOwnPropertyDescriptor(e, i) : null;
                            a && (a.get || a.set) ? Object.defineProperty(s, i, a) : s[i] = e[i]
                        } s.default = e, n && n.set(e, s);
                    return s
                }(n(1)),
                i = (s = n(215)) && s.__esModule ? s : {
                    default: s
                };

            function l(e) {
                if ("function" != typeof WeakMap) return null;
                var t = new WeakMap,
                    n = new WeakMap;
                return (l = function(e) {
                    return e ? n : t
                })(e)
            }
            const a = void 0,
                r = {
                    PerksEnabled: !0,
                    StyleBackgroundVideosEnabled: !1,
                    MinSummonerLevelUnlockCustomPages: 10,
                    PageRenamingDisabled: !1,
                    RestrictedPageNamesEnabled: !1
                },
                c = (0, o.emberDataBinding)({
                    Ember: o.Ember,
                    websocket: o.default.getProvider().getSocket(),
                    boundProperties: {
                        platform: {
                            path: "/lol-platform-config/v1/namespaces/Perks",
                            default: a
                        }
                    }
                });
            var d = o.Ember.Service.extend(c, i.default, {
                readyProperties: ["platform"],
                clientConfig: o.Ember.inject.service(),
                MinSummonerLevelBasicEditing: o.Ember.computed("MinSummonerLevelUnlockCustomPages", "clientConfig.unlockAllRunePageFunctionality", (function() {
                    return this.get("clientConfig.unlockAllRunePageFunctionality") ? 0 : this.get("MinSummonerLevelUnlockCustomPages")
                })),
                MinSummonerLevelEditFullPrimaryPath: o.Ember.computed.alias("MinSummonerLevelBasicEditing"),
                MinSummonerLevelEditSecondaryPath: o.Ember.computed.alias("MinSummonerLevelBasicEditing"),
                MinSummonerLevelUnlockInspiration: o.Ember.computed.alias("MinSummonerLevelBasicEditing"),
                MinSummonerLevelEditStatMods: o.Ember.computed.alias("MinSummonerLevelEditSecondaryPath"),
                getOrDefault: function(e, t) {
                    if (this.get("platform") === a) return t;
                    const n = this.get("platform." + e);
                    return null == n ? t : n
                },
                _populateDefaults: function(e) {
                    e || (e = r);
                    for (const t in e) o.Ember.defineProperty(this, t, o.Ember.computed("platform." + t, (function() {
                        return this.getOrDefault(t, e[t])
                    })))
                },
                init() {
                    this._super(...arguments), this._populateDefaults()
                }
            });
            t.default = d
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            var o = s.Ember.Mixin.create({
                readyPromiseResolve: null,
                readyPromise: null,
                readyProperties: s.Ember.computed((function() {
                    return s.Ember.A()
                })),
                init: function() {
                    this._super(...arguments), this.readyPromise = new Promise((e => {
                        this.readyPromiseResolve = e
                    }));
                    const e = this.readyObserverHandler.bind(this);
                    this.get("readyProperties").forEach((t => {
                        s.Ember.addObserver(this, t, this, e)
                    })), this.set("readyHandler", e)
                },
                ready: function() {
                    return this.readyPromise
                },
                _isAllReady: function() {
                    return -1 === this.get("readyProperties").map((e => undefined === this.get(e))).indexOf(!0)
                },
                readyObserverHandler: function() {
                    if (!this._isAllReady()) return;
                    this.readyPromiseResolve(this);
                    const e = this.get("readyHandler");
                    this.get("readyProperties").forEach((t => {
                        s.Ember.removeObserver(this, t, this, e)
                    })), delete this.readyHandler
                }
            });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const {
                Service: o
            } = s.Ember, i = "/lol-perks", l = "/v1/settings";
            var a = o.extend({
                init: function() {
                    this._super(...arguments)
                },
                getSetting: function(e) {
                    return this.getAllSettings().then((t => t ? t[e] : void 0))
                },
                getAllSettings: function() {
                    return (0, s.dataBinding)(i, s.socket).get(l)
                },
                setSetting: function(e, t) {
                    this.getAllSettings().then((n => {
                        n && (n[e] = t, s.Ember.$.ajax({
                            url: i + l,
                            contentType: "application/json",
                            dataType: "json",
                            data: JSON.stringify(n),
                            method: "PUT"
                        }))
                    }))
                }
            });
            t.default = a
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = r(n(218)),
                i = r(n(221)),
                l = n(225),
                a = n(226);

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const {
                Service: c
            } = s.Ember;
            var d = c.extend({
                perksBook: null,
                perksStaticData: i.default.create(),
                entityCache: {},
                recentlySeenPerkIds: [],
                tutorial: s.Ember.inject.service(),
                init: function() {
                    this._super(...arguments);
                    const e = this.get("tra");
                    this.perksBook = o.default.create({
                        tra: e
                    })
                },
                getAll: function(e) {
                    return (0, s.dataBinding)("/lol-perks/v1", s.socket).get(e)
                },
                getRecord: function(e, t) {
                    t = Number(t), s.Ember.assert("recordId is a number", Number.isInteger(t));
                    const n = (0, a.getResourcePath)(e);
                    return this.getAll(n).then((function(n) {
                        for (const e of n) {
                            if (Number(e.id) === t) return e
                        }
                        s.logger.trace("Could not find a record", {
                            entityName: e,
                            recordId: t
                        })
                    }))
                },
                observeRecord: function() {},
                observePageRecord: function(e) {
                    const t = this.get("perksBook"),
                        n = t.ready().then((function() {
                            return t.get("staticData").ready().then((function() {
                                return t.setCurrentPage(e)
                            }))
                        }));
                    return this.get("tutorial").ready().then((function() {
                        return n
                    }))
                },
                getFactoryKey: function(e) {
                    return "entity:" + e
                },
                findAll: function(e) {
                    const t = this.getFactoryKey(e);
                    this.entityCache[t] || (this.entityCache[t] = (0, l.buildEntity)(e));
                    return this.entityCache[t]
                },
                peekAll: function(e) {
                    const t = "entity:" + e;
                    return this.entityCache[t]
                },
                peekRecord: function(e, t) {
                    const n = this.peekAll(e);
                    for (const e of n) {
                        if (e.get("id") === t) return e
                    }
                },
                willDestroy: function() {
                    this._super(...arguments);
                    for (const e of Object.keys(this.entityCache)) delete this.entityCache[e]
                }
            });
            t.default = d
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(208),
                i = a(n(219)),
                l = a(n(221));

            function a(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const r = "/lol-perks",
                c = {
                    tra: void 0,
                    staticData: l.default.create(),
                    summonerId: null,
                    dataService: null,
                    canEdit: !1,
                    _originalPageLength: null,
                    perks: s.Ember.computed.alias("staticData.perks"),
                    perkStyles: s.Ember.computed.alias("staticData.perkStyles"),
                    disabledPerks: s.Ember.computed.alias("staticData.disabledPerks"),
                    perksMap: s.Ember.computed.alias("staticData.perksMap"),
                    perkStylesMap: s.Ember.computed.alias("staticData.perkStylesMap"),
                    readyPromiseResolve: null,
                    readyPromise: null,
                    ready: function() {
                        return this.readyPromise
                    },
                    init: function() {
                        this._super(...arguments), s.Ember.assert("`this.tra` must be passed as an attribute.", !!this.tra), this.initDataBindings()
                    },
                    initDataBindings() {
                        this.readyPromise = new Promise((e => {
                            this.readyPromiseResolve = e
                        })), this.set("pagesPOJOs", []), (0, s.dataBinding)(r, s.socket).observe("/v1/pages", this, (function(e) {
                            this.isDestroyed || this.isDestroying || (this.set("pagesPOJOs", s.Ember.A(e)), this.readyPromiseResolve && (this.readyPromiseResolve(), delete this.readyPromiseResolve))
                        })), (0, s.dataBinding)(r, s.socket).observe("/v1/currentpage", this, (function(e) {
                            if (!e || this.isDestroyed || this.isDestroying) return;
                            const t = this.get("currentPageId"),
                                n = e.id;
                            t !== n ? this.set("currentPageId", n) : (this.pagesEntities[n] = this.createPageEntity(e), this.get("pages"));
                            const s = this.get("recentPageIds");
                            for (-1 !== s.indexOf(n) && s.splice(s.indexOf(n), 1), s.push(n); s.length > 2;) s.shift()
                        })), (0, s.dataBinding)(r, s.socket).observe("/v1/inventory", this, (function(e) {
                            this.isDestroyed || this.isDestroying || this.set("inventory", e)
                        }))
                    },
                    pagesPOJOs: s.Ember.A(),
                    pagesEntities: {},
                    recentPageIds: [],
                    recentPages: s.Ember.computed("recentPageIds", (function() {
                        return this.get("recentPageIds").map((e => this.getPageEntity(e)))
                    })),
                    lastSetCurrentPage: void 0,
                    pages: s.Ember.computed("pagesPOJOs", "staticData.perkStylesMap", (function() {
                        const e = this.get("pagesPOJOs"),
                            t = this.ormPages(e);
                        return s.Ember.A(t)
                    })),
                    ormPages(e) {
                        const t = [];
                        for (const n of e) {
                            this.ormPage(n);
                            const e = s.Ember.Object.create(n);
                            t.push(e)
                        }
                        return t
                    },
                    ormPage(e) {
                        const t = this.get("staticData.perkStylesMap");
                        e.primaryStyle = t[e.primaryStyleId], e.subStyle = t[e.subStyleId];
                        const n = this.get("staticData.perksMap"),
                            s = e.selectedPerkIds[o.PRIMARY_PERKS_INDEX.first];
                        e.keystone = n[s];
                        const i = [];
                        for (let t = o.PRIMARY_PERKS_INDEX.first; t <= o.PRIMARY_PERKS_INDEX.last; t++) {
                            const s = n[e.selectedPerkIds[t]];
                            s && i.push(s)
                        }
                        e.selectedPrimaryPerks = i;
                        const l = [];
                        for (let t = o.SECONDARY_PERKS_INDEX.first; t <= o.SECONDARY_PERKS_INDEX.last; t++) {
                            const s = n[e.selectedPerkIds[t]];
                            s && l.push(s)
                        }
                        e.selectedSplashedPerks = l;
                        const a = [];
                        for (let t = o.STAT_MOD_PERKS_INDEX.first; t <= o.STAT_MOD_PERKS_INDEX.last; t++) {
                            const s = n[e.selectedPerkIds[t]];
                            s && a.push(s)
                        }
                        e.selectedStatModPerks = a;
                        const {
                            id: r
                        } = e;
                        r >= 50 && r <= 54 && (e.isDefaultPage = !0)
                    },
                    getPageEntity(e) {
                        const t = this.pagesEntities[e];
                        if (t) return t;
                        const n = this.get("pagesPOJOs").findBy("id", e);
                        if (!n) return s.logger.error(`A page with id \`${e}\` does not exist.`), null;
                        const o = this.createPageEntity(n);
                        return this.pagesEntities[o.get("id")] = o, this.get("pages"), o
                    },
                    deletePage(e) {
                        if (this.set("lastSetCurrentPage", null), e instanceof i.default) {
                            const t = e.get("id");
                            return e._delete().then((() => {
                                delete this.pagesEntities[t]
                            })).catch((function(e) {
                                s.logger.error(`Failed to delete page with id '${t}', reason=${e}`)
                            }))
                        }
                        return new Promise(((t, n) => {
                            const o = "/lol-perks/v1/pages/" + e.id;
                            s.Ember.$.ajax({
                                url: o,
                                contentType: "application/json",
                                method: "DELETE"
                            }).done(t).fail((function(e, t, s) {
                                n(s)
                            }))
                        }))
                    },
                    currentPageId: -1,
                    currentPage: s.Ember.computed("pages.[]", "currentPageId", (function() {
                        const e = this.get("pages");
                        s.Ember.assert("`entities:perks-book`: the `pages` list has been computed.", e.length);
                        const t = this.get("currentPageId"),
                            n = this.get("pages").findBy("id", t),
                            o = n ? n.id : this.get("pages.firstObject.id");
                        return this.getPageEntity(o)
                    })),
                    setCurrentPage: function(e) {
                        const t = this.getPageEntity(e);
                        return t ? (this.httpPutCurrentPageId(e), this.set("lastSetCurrentPage", this.getPageEntity(e)), t) : (s.logger.error("The requested page was not found."), null)
                    },
                    httpPutCurrentPageId: function(e) {
                        if (!e) return;
                        s.Ember.$.ajax({
                            url: "/lol-perks/v1/currentpage",
                            contentType: "application/json",
                            dataType: "json",
                            data: `${e}`,
                            method: "PUT"
                        })
                    },
                    pageDirtyStateObserver: s.Ember.observer("pages.@each.clean", (function() {
                        if (!this.get("pages")) return;
                        const e = s.Lodash.reduce(this.get("pages"), ((e, t) => e && t.clean), !0);
                        this.set("clean", e && this.get("clean"))
                    })),
                    pageLengthObserver: s.Ember.observer("pages.length", (function() {
                        const e = this.get("_originalPageLength");
                        e && this.get("pages.length") !== e && this.set("clean", !1), this.set("_originalPageLength", this.get("pages.length"))
                    })),
                    willDestroy: function() {
                        this._super(...arguments), this.dataService.removeObserver(this), (0, s.dataBinding)(r, s.socket).unobserve("/v1/pages", this), (0, s.dataBinding)(r, s.socket).unobserve("/v1/currentpage", this), (0, s.dataBinding)(r, s.socket).unobserve("/v1/inventory", this)
                    },
                    restore: function() {
                        for (const e of this.get("pages")) e.restore()
                    },
                    maxPages: s.Ember.computed.alias("inventory.ownedPageCount"),
                    numCustomPages: s.Ember.computed.alias("inventory.customPageCount"),
                    canAddPage: s.Ember.computed.alias("inventory.canAddCustomPage"),
                    customPages: s.Ember.computed("pages.@each.isDefaultPage", (function() {
                        return this.get("pages").filter((e => !(e.get ? e.get("isDefaultPage") : e.isDefaultPage)))
                    })),
                    defaultPages: s.Ember.computed("pages.@each.isDefaultPage", (function() {
                        return this.get("pages").filter((e => e.get ? e.get("isDefaultPage") : e.isDefaultPage))
                    })),
                    _getNewPageName: function(e) {
                        e = e || this.get("pages").length + 1;
                        const t = this.get("defaultPages.length") || 0,
                            n = this.tra.formatString("perks_new_page_name", {
                                count: e - t
                            });
                        return this.get("pages").find((e => e.name === n)) ? this._getNewPageName(e + 1) : n
                    },
                    buildPageAttributes: function(e) {
                        if (e) {
                            if (e.useDefaultPerks && e.primaryStyleId) {
                                const t = (this.get("perkStylesMap") || {})[e.primaryStyleId];
                                e.selectedPerkIds = t.defaultPerks, e.subStyleId = t.defaultSubStyle
                            }
                            e.keystoneId && (e.selectedPerkIds = e.selectedPerkIds || [], e.selectedPerkIds[0] = e.keystoneId, delete e.keystoneId)
                        }
                        const t = {
                            name: this._getNewPageName(),
                            isEditable: !0
                        };
                        return Object.assign(t, e)
                    },
                    createPage: function(e) {
                        this.set("clean", !1);
                        const t = this.buildPageAttributes(e || {});
                        return this.set("lastSetCurrentPage", null), this.httpPostNewPage(t).then((e => e))
                    },
                    httpPostNewPage: e => new Promise((function(t, n) {
                        s.Ember.$.ajax({
                            url: "/lol-perks/v1/pages/",
                            contentType: "application/json",
                            dataType: "json",
                            data: JSON.stringify(e),
                            method: "POST"
                        }).done((function(e) {
                            t(e)
                        })).fail((function() {
                            n(!1)
                        }))
                    })),
                    reorderPage: function(e, t, n = this.get("pages")) {
                        if (e === t) return;
                        const o = n[e],
                            i = n[t];
                        if (!o || !i) return;
                        let l;
                        l = e > t ? -1 : 1;
                        const a = {
                            destinationPageId: i.id,
                            offset: l,
                            targetPageId: o.id
                        };
                        s.Ember.$.ajax({
                            contentType: "application/json",
                            data: JSON.stringify(a),
                            dataType: "json",
                            method: "POST",
                            url: "/lol-perks/v1/update-page-order"
                        })
                    },
                    createPageEntity: function(e) {
                        const t = {
                            id: e.id,
                            isValid: e.isValid,
                            isEditable: e.isEditable,
                            isDeletable: e.isDeletable,
                            isTemporary: e.isTemporary,
                            runeRecommendationId: e.runeRecommendationId,
                            recommendationChampionId: e.recommendationChampionId,
                            isRecommendationOverride: e.isRecommendationOverride,
                            recommendationIndex: e.recommendationIndex,
                            quickPlayChampionIds: e.quickPlayChampionIds,
                            order: e.order,
                            primaryStyleId: e.primaryStyleId,
                            subStyleId: e.subStyleId,
                            name: e.name,
                            selectedPerkIds: e.selectedPerkIds,
                            perksBook: this,
                            tra: this.tra
                        };
                        return i.default.create(t)
                    }
                };
            let d = null;
            var m = {
                create: function(e) {
                    return e && e.dataBindingDisabled ? (delete e.dataBindingDisabled, function(e) {
                        return c.initDataBindings = function() {}, s.Ember.Object.extend(c).create(e)
                    }(e)) : function() {
                        const e = arguments[0];
                        if (e.newInstance && (delete e.newInstance, d = null), !d) {
                            const t = s.Ember.Object.extend(c);
                            d = t.create(e)
                        }
                        return d
                    }(e)
                }
            };
            t.default = m
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(207),
                i = n(208),
                l = r(n(220)),
                a = r(n(221));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const c = i.TOTAL_PRIMARY_PERKS + i.TOTAL_SECONDARY_PERKS,
                d = -1,
                m = ["primaryStyleId", "subStyleId", "selectedPerkIds", "order", "name"],
                p = "/lol-perks",
                u = s.Ember.Object.extend({
                    id: 0,
                    name: null,
                    lastModified: 0,
                    type: null,
                    clean: !0,
                    isEditable: !0,
                    isValid: !1,
                    selectedPerkIds: null,
                    primaryStyleId: d,
                    subStyleId: d,
                    autoModifiedSelections: [],
                    staticData: a.default.create(),
                    subPath: s.Ember.computed("id", (function() {
                        return "/v1/pages/" + this.get("id")
                    })),
                    isDefaultPage: s.Ember.computed("id", (function() {
                        const e = this.get("id");
                        return e >= 50 && e <= 54
                    })),
                    perkStyles: s.Ember.computed.alias("staticData.perkStyles"),
                    perksMap: s.Ember.computed.alias("staticData.perksMap"),
                    disabledPerks: s.Ember.computed.alias("staticData.disabledPerks"),
                    perkStylesMap: s.Ember.computed.alias("staticData.perkStylesMap"),
                    current: s.Ember.computed("perksBook.currentPageId", (function() {
                        return this.get("perksBook.currentPageId") === this.get("id")
                    })),
                    allSelectablePerkIds: s.Ember.computed("perkSlots.[]", (function() {
                        return s.Ember.A(s.Lodash.flattenDeep(this.get("perkSlots").map((e => e.perks))))
                    })),
                    perkSlots: s.Ember.computed("primaryPerkSlots", "subStyle.splashableSlots", "statModSlots", (function() {
                        const e = this.get("primaryPerkSlots"),
                            t = this.get("subStyle.splashableSlots"),
                            n = this.get("statModSlots");
                        return e.concat(t, n).filter((e => e))
                    })),
                    init: function() {
                        this._super(...arguments), this.selectedPerkIds = this.selectedPerkIds || s.Ember.A([]), this._setRestorePoint(), this._internalEntity = this._buildInternalEntity(m), this.addBindings()
                    },
                    addBindings() {
                        this.get("id") && (0, s.dataBinding)(p, s.socket).observe(this.get("subPath"), this, (function(e) {
                            this.set("isValid", e.isValid), this.set("isEditable", e.isEditable), this.set("isDeletable", e.isDeletable), this.set("order", e.order), this.set("autoModifiedSelections", e.autoModifiedSelections)
                        }))
                    },
                    removeBindings() {
                        (0, s.dataBinding)(p, s.socket).unobserve(this.get("subPath"), this)
                    },
                    willDestroy: function() {
                        this._super(...arguments), this.removeBindings()
                    },
                    _buildInternalEntity(e) {
                        const t = {};
                        for (const n of e) {
                            const e = this.get(n);
                            e instanceof s.Ember.ArrayProxy ? t[n] = e : Array.isArray(e) ? t[n] = s.Ember.A(e) : t[n] = e
                        }
                        return t
                    },
                    intEntSelectedPerkIds: s.Ember.computed("primaryStyleId", "subStyleId", "selectedPerkIds.[]", (function() {
                        const e = this.get("primaryStyleId"),
                            t = this.get("subStyleId"),
                            n = this.get("selectedPerkIds");
                        return this.calcIntEntSelectedPerkIds(e, t, n)
                    })),
                    _internalEntity: void 0,
                    calcIntEntSelectedPerkIds(e, t, n) {
                        const s = this._internalEntity || {};
                        if (this._areBothNewStylePicks(e, t)) return s.primaryStyleId = e, s.subStyleId = t, s.selectedPerkIds = n, s.selectedPerkIds;
                        if ((n || n.length) && (s.selectedPerkIds = n), s.primaryStyleId && s.primaryStyleId !== d) {
                            if (e !== s.primaryStyleId) {
                                s.primaryStyleId = e;
                                const t = s.selectedPerkIds,
                                    n = Array(i.TOTAL_PRIMARY_PERKS).fill(null);
                                t.replace(i.PRIMARY_PERKS_INDEX.first, i.TOTAL_PRIMARY_PERKS, n), this.set("clean", !1)
                            }
                        } else s.primaryStyleId = e;
                        if (s.subStyleId && s.subStyleId !== d) {
                            if (t !== s.subStyleId) {
                                s.subStyleId = t;
                                const e = s.selectedPerkIds,
                                    n = Array(i.TOTAL_SECONDARY_PERKS).fill(null);
                                e.replace(i.SECONDARY_PERKS_INDEX.first, i.TOTAL_SECONDARY_PERKS, n), this.set("clean", !1)
                            }
                        } else s.subStyleId = t;
                        return this._internalEntity = s, this._internalEntity.selectedPerkIds
                    },
                    _areBothNewStylePicks(e, t) {
                        return e !== this._internalEntity.primaryStyleId && t !== this._internalEntity.subStyleId && e !== d
                    },
                    normalizedSelectedPerkIds: s.Ember.computed("selectedPrimaryPerkIds.[]", "selectedSplashedPerkIds.[]", "selectedStatModPerkIds.[]", (function() {
                        const e = this.get("selectedPrimaryPerkIds").concat(this.get("selectedSplashedPerkIds")).concat(this.get("selectedStatModPerkIds"));
                        return s.Ember.A(e)
                    })),
                    setSelectedPerkIds(e) {
                        if (!e) return;
                        const t = this.get("selectedPerkIds");
                        t.length || (t[0] = null);
                        const n = Math.min(c, e.length);
                        t.replace(0, n, e.splice(0, n)), this.set("clean", !1)
                    },
                    clearSelectedPerkIds() {
                        const e = Array(c).fill(null);
                        this.setSelectedPerkIds(e)
                    },
                    isPerkSelectionValid: function(e) {
                        const t = this.get("primaryPerkSlots"),
                            n = this.get("subStyle.splashableSlots"),
                            s = this.get("normalizedSelectedPerkIds"),
                            i = this.get("disabledPerks");
                        return (0, o.isPerkSelectionValid)(e, t, n, s, i)
                    },
                    isPerkSelected: function(e) {
                        if (!e || e === d) return !1;
                        const t = this.get("normalizedSelectedPerkIds");
                        return t && t.indexOf(e) !== d
                    },
                    findSlotIndex: function(e) {
                        const t = this.get("perkSlots");
                        for (let n = 0; n < t.length; n++)
                            if (t[n].perks.indexOf(e) !== d) return n;
                        return d
                    },
                    selectPerk: function(e) {
                        const t = this.findSlotIndex(e);
                        if (t >= i.SECONDARY_PERKS_INDEX.first) return this.setSplashedPerk(this.get("perksMap")[e]);
                        if (t >= 0 && t < c) {
                            const n = this.get("selectedPerkIds");
                            for (; n.length <= t;) n.pushObject(null);
                            return n.replace(t, 1, e), this.set("clean", !1), !0
                        }
                        return !1
                    },
                    setPrimaryStyleId: function(e, t) {
                        const n = this.get("primaryStyleId");
                        if (!e || n === e) return;
                        this.set("primaryStyleId", e);
                        const s = this.get("subStyleId");
                        if (!0 === t) {
                            const e = this.get("primaryStyle.defaultSubStyle"),
                                t = this.get("primaryStyle.defaultPerks").slice();
                            this.set("subStyleId", e), this.setSelectedPerkIds(t)
                        } else if (s === e) {
                            this.set("subStyleId", d);
                            const e = Array(c).fill(null);
                            this.setSelectedPerkIds(e)
                        } else {
                            const e = this.get("selectedPerkIds"),
                                t = Array(c).fill(null);
                            for (let n = i.SECONDARY_PERKS_INDEX.first; n <= i.SECONDARY_PERKS_INDEX.last; n++) t[n] = e[n];
                            this.setSelectedPerkIds(t)
                        }
                    },
                    primaryStyle: s.Ember.computed("primaryStyleId", "staticData.perkStylesMap", (function() {
                        return this._perkStyleFromId(this.get("primaryStyleId"))
                    })),
                    primaryStyleBackground: s.Ember.computed("primaryStyleId", (function() {
                        let e = "unselected";
                        const t = this._perkStyleFromId(this.get("primaryStyleId"));
                        return t && (e = t.name.toLowerCase()), e
                    })),
                    selectedPrimaryPerkIds: s.Ember.computed("intEntSelectedPerkIds.[]", (function() {
                        const e = this.get("intEntSelectedPerkIds").slice(i.PRIMARY_PERKS_INDEX.first, i.PRIMARY_PERKS_INDEX.last + 1);
                        for (let t = e.length; t < i.TOTAL_PRIMARY_PERKS; t++) e[t] = null;
                        return e
                    })),
                    selectedPrimaryPerks: s.Ember.computed("selectedPrimaryPerkIds.[]", "staticData.perksMap.@each", (function() {
                        const e = this.get("selectedPrimaryPerkIds"),
                            t = this.get("staticData.perksMap");
                        return e.map((function(e) {
                            return t[e]
                        }))
                    })),
                    allPrimaryPerksAreSelected: s.Ember.computed("normalizedSelectedPerkIds.[]", (function() {
                        const e = this.get("normalizedSelectedPerkIds");
                        return s.Lodash.compact(s.Lodash.slice(e, 0, i.TOTAL_PRIMARY_PERKS)).length >= i.TOTAL_PRIMARY_PERKS
                    })),
                    getPrimaryPerk: function(e) {
                        const t = this._getPrimaryPerkSlotIndex(e);
                        if (t < 0) return null;
                        const n = this.get("selectedPrimaryPerkIds");
                        if (t < n.length) {
                            const e = n[t];
                            if (e) return this._perkFromId(e)
                        }
                        return null
                    },
                    isKeystoneSlot: function(e) {
                        return l.default.create(e).isKeystone()
                    },
                    primaryPerkSlots: s.Ember.computed("primaryStyle.primarySlots.[]", (function() {
                        const e = this.get("primaryStyle.primarySlots");
                        if (!e) return [];
                        e.length > i.TOTAL_PRIMARY_PERKS && e.removeAt(i.TOTAL_PRIMARY_PERKS, e.length - i.TOTAL_PRIMARY_PERKS);
                        for (const [t, n] of e.entries()) n.set("slotIndex", t);
                        return e
                    })),
                    _getPrimaryPerkSlotIndex: function(e) {
                        if (!e) return d;
                        const t = this.get("perkSlots");
                        for (let n = 0; n < t.length; n++)
                            if (e.perks === t[n].perks) return n;
                        return d
                    },
                    keystoneId: s.Ember.computed("intEntSelectedPerkIds.[]", {
                        get: function() {
                            return this.get("intEntSelectedPerkIds")[i.PRIMARY_PERKS_INDEX.first]
                        },
                        set: function(e, t) {
                            return this.get("selectedPerkIds").replace(i.PRIMARY_PERKS_INDEX.first, 1, [t]), this.set("clean", !1), t
                        }
                    }),
                    keystone: s.Ember.computed("keystoneId", (function() {
                        const e = this.get("keystoneId");
                        return this._perkFromId(e)
                    })),
                    subStyle: s.Ember.computed("subStyleId", "staticData.perkStylesMap", (function() {
                        return this._perkStyleFromId(this.get("subStyleId"))
                    })),
                    allowedSubStyles: s.Ember.computed("primaryStyle", "perkStyles", (function() {
                        const e = this.get("primaryStyle"),
                            t = this.get("perkStyles").compact();
                        if (e) {
                            const n = t.filter((t => t.id !== e.id && (!e.allowedSubStyles || e.allowedSubStyles.length <= 0 || e.allowedSubStyles.indexOf(t.id) >= 0)));
                            return s.Ember.A(n)
                        }
                        return t
                    })),
                    selectedSplashedPerkIds: s.Ember.computed("intEntSelectedPerkIds.[]", (function() {
                        const e = this.get("intEntSelectedPerkIds").slice(i.SECONDARY_PERKS_INDEX.first, i.SECONDARY_PERKS_INDEX.last + 1);
                        for (let t = e.length; t < i.TOTAL_SECONDARY_PERKS; t++) e[t] = null;
                        return e
                    })),
                    selectedSplashedPerks: s.Ember.computed("selectedSplashedPerkIds.[]", "staticData.perksMap.@each", (function() {
                        const e = this.get("selectedSplashedPerkIds"),
                            t = this.get("staticData.perksMap");
                        return e.map((function(e) {
                            return t[e]
                        }))
                    })),
                    splashableSlots: s.Ember.computed.alias("subStyle.splashableSlots"),
                    splashedPerkOptions: s.Ember.computed("splashableSlots.[]", (function() {
                        const e = this.get("splashableSlots");
                        return s.Ember.A(e ? e.map((e => e.get("perkObjects"))) : [])
                    })),
                    splashedPerkIndexes: s.Ember.computed("splashedPerkOptions", (function() {
                        const e = s.Ember.A([]),
                            t = i.TOTAL_SECONDARY_PERKS;
                        for (let n = 0; n < t; n++) e[n] = n;
                        return e
                    })),
                    getSplashedPerk: function(e) {
                        let t = null;
                        if (e < 0) return null;
                        return t = this.get("selectedSplashedPerkIds")[e], this._perkFromId(t)
                    },
                    setSplashedPerk: function(e, t = !0) {
                        if (!e) return !1;
                        const n = this.get("selectedPerkIds").slice(i.SECONDARY_PERKS_INDEX.first, i.SECONDARY_PERKS_INDEX.last + 1).filter((e => e && e !== d)),
                            s = e.get("id");
                        if (n.includes(s)) return !1;
                        const o = this._getSplashedOptionIndex(s),
                            l = n.map((e => this._getSplashedOptionIndex(e))).filter((e => -1 !== e && null !== e));
                        if (l.includes(o)) {
                            if (t) return n[l.indexOf(o)] = s, this.setSplashedPerkIds(n), !0;
                            n.splice(l.indexOf(o), 1)
                        }
                        return n.push(s), n.length > i.TOTAL_SECONDARY_PERKS && n.shift(), this.setSplashedPerkIds(n), !0
                    },
                    setSplashedPerkIds(e) {
                        s.Ember.assert(`setSplashedPerkIds \`ids\` <= \`${i.TOTAL_SECONDARY_PERKS}\``, e.length <= i.TOTAL_SECONDARY_PERKS);
                        const t = this.get("selectedPerkIds");
                        for (; t.length < i.SECONDARY_PERKS_INDEX.first + e.length;) t.pushObject(null);
                        t.replace(i.SECONDARY_PERKS_INDEX.first, e.length, e), this.set("clean", !1)
                    },
                    _setSplashedAllPickState(e) {
                        const t = this.get("splashedPerkOptions");
                        if (t && t.length > 0)
                            for (let n = 0; n < t.length; n++)
                                for (let s = 0; s < t[n].length; s++) t[n][s].set("pickState", e)
                    },
                    _getSplashedOptionIndex: function(e) {
                        const t = this.get("splashedPerkOptions");
                        for (let n = 0; n < t.length; n++)
                            for (let s = 0; s < t[n].length; s++) {
                                if (t[n][s].id === e) return n
                            }
                        return d
                    },
                    _setSplashedPerksDefault: function() {
                        let e = this.get("selectedSplashedPerkIds");
                        if (!e || e.length !== i.TOTAL_SECONDARY_PERKS) {
                            for (e || (e = s.Ember.A()); e.length < i.TOTAL_SECONDARY_PERKS;) e.pushObject(null);
                            this._setSplashedAllPickState("available")
                        }
                    },
                    subStyleBonuses: s.Ember.computed("primaryStyle.subStyleBonus.[]", "substyle.id", "perksMap", "statModSlots.[]", (function() {
                        const e = this.get("primaryStyle.subStyleBonus"),
                            t = this.get("subStyle.id"),
                            n = this.get("perksMap"),
                            s = this.get("statModSlots");
                        if (!e || !t || !n || s && s.length) return {};
                        const o = {};
                        return e.forEach((e => {
                            o[e.styleId] = n[e.perkId]
                        })), o
                    })),
                    subStyleBonus: s.Ember.computed("subStyle.id", "subStyleBonuses", (function() {
                        return this.get("subStyleBonuses")[this.get("subStyle.id")]
                    })),
                    statModSlots: s.Ember.computed.alias("primaryStyle.statModSlots"),
                    statModPerkSlots: s.Ember.computed("primaryStyle.statModSlots.[]", (function() {
                        const e = this.get("primaryStyle.statModSlots");
                        if (!e) return [];
                        for (const [t, n] of e.entries()) n.set("slotIndex", t);
                        return e
                    })),
                    isStatModPerkSelectionValid: function(e, t) {
                        return (0, o.isValidStatModPerkSelection)(e, t, this.get("statModPerkSlots"), this.get("disabledPerks"))
                    },
                    getStatModPerk: function(e) {
                        let t = null;
                        if (e < 0) return null;
                        return t = this.get("selectedStatModPerkIds")[e], this._perkFromId(t)
                    },
                    selectStatModPerk: function(e, t) {
                        if (!e) return !1;
                        if (t < 0 || t >= i.TOTAL_STAT_MOD_PERKS) return !1;
                        if (this.isStatModPerkSelectionValid(e, t) !== o.PerkValidationResult.PerkSelectionValid) return !1;
                        const n = this.get("selectedStatModPerkIds");
                        return n[t] = e.get("id"), this._setStatModPerkIds(n), !0
                    },
                    _setStatModPerkIds: function(e) {
                        s.Ember.assert(`_setStatModPerkIds \`ids\` <= \`${i.TOTAL_STAT_MOD_PERKS}\``, e.length <= i.TOTAL_STAT_MOD_PERKS);
                        const t = this.get("selectedPerkIds");
                        for (; t.length < i.STAT_MOD_PERKS_INDEX.first + e.length;) t.pushObject(null);
                        t.replace(i.STAT_MOD_PERKS_INDEX.first, e.length, e), this.set("clean", !1)
                    },
                    selectedStatModPerkIds: s.Ember.computed("intEntSelectedPerkIds.[]", (function() {
                        const e = this.get("intEntSelectedPerkIds").slice(i.STAT_MOD_PERKS_INDEX.first, i.STAT_MOD_PERKS_INDEX.last + 1);
                        for (let t = e.length; t < i.TOTAL_STAT_MOD_PERKS; t++) e[t] = null;
                        return e
                    })),
                    save: function() {
                        if (!this.get("isEditable")) return Promise.reject("Page is not editable");
                        let e = !1;
                        const t = this.get("id");
                        t || (e = !0);
                        const {
                            setPerksPage: n
                        } = s.CollectionsApi.perksApi().getRuneRecommenderContext(), o = this, i = e ? "/lol-perks/v1/pages/" : "/lol-perks/v1/pages/" + t, l = new Promise((function(t, n) {
                            s.Ember.$.ajax({
                                url: i,
                                contentType: "application/json",
                                dataType: e ? "json" : "text",
                                data: JSON.stringify(o.toJSON()),
                                method: e ? "POST" : "PUT"
                            }).done((function(e) {
                                t(e), o.set("clean", !0), o._setRestorePoint()
                            })).fail((function() {
                                n(!1)
                            }))
                        }));
                        return n && l.then((e => {
                            const s = o.toJSON();
                            return s.id = t, n(s), e
                        })), l.then((t => (e && this.set("id", t.id), this.set("clean", !0), this._setRestorePoint(), this)))
                    },
                    _delete: function() {
                        if (!this.get("isDeletable")) return Promise.reject("Page is not deletable.");
                        const e = this.get("id");
                        if (!e) return Promise.reject("Page has no `id`.");
                        const t = "/lol-perks/v1/pages/" + e;
                        return new Promise(((e, n) => {
                            s.Ember.$.ajax({
                                url: t,
                                contentType: "application/json",
                                method: "DELETE"
                            }).done((() => {
                                this.destroy(), e(!0)
                            })).fail((function(e, t, s) {
                                n(s)
                            }))
                        }))
                    },
                    clearAutoModifiedSelections: function() {
                        const e = this.get("id");
                        this.autoModifiedSelections = [];
                        const t = "/lol-perks/v1/pages/" + e + "/auto-modified-selections";
                        s.Ember.$.ajax({
                            url: t,
                            contentType: "application/json",
                            method: "DELETE"
                        })
                    },
                    clearGameplayUpdatedPerks: function() {
                        const e = this.get("allSelectablePerkIds"),
                            t = this.get("staticData.gameplayUpdatedPerks"),
                            n = s.Lodash.intersection(e, t);
                        return n.length > 0 && s.Ember.$.ajax({
                            url: "/lol-perks/v1/perks/ack-gameplay-updated",
                            contentType: "application/json",
                            dataType: "json",
                            data: JSON.stringify(n),
                            method: "PUT"
                        }), n
                    },
                    _perkStyleFromId: function(e) {
                        const t = this.get("perkStylesMap");
                        return e in t ? t[e] : null
                    },
                    _perkFromId: function(e) {
                        const t = this.get("perksMap");
                        return e in t ? t[e] : null
                    },
                    toJSON: function() {
                        const e = {};
                        return e.isTemporary = this.get("isTemporary"), e.runeRecommendationId = this.get("runeRecommendationId"), e.recommendationChampionId = this.get("recommendationChampionId"), e.isRecommendationOverride = this.get("isRecommendationOverride"), e.recommendationIndex = this.get("recommendationIndex"), e.quickPlayChampionids = this.get("quickPlayChampionIds"), e.primaryStyleId = this.get("primaryStyleId"), e.subStyleId = this.get("subStyleId"), e.name = this.get("name"), e.selectedPerkIds = this.get("intEntSelectedPerkIds"), e.order = this.get("order"), e
                    },
                    _lastSavedData: null,
                    _setRestorePoint() {
                        const e = m,
                            t = {};
                        for (const n of e) {
                            const e = this.get(n);
                            Array.isArray(e) ? t[n] = s.Ember.A(Array.from(e)) : t[n] = e
                        }
                        this._lastSavedData = t
                    },
                    restore() {
                        const e = this._lastSavedData;
                        if (!e) return;
                        const t = m;
                        for (const n of t) {
                            const t = e[n];
                            Array.isArray(t) ? this.set(n, s.Ember.A(Array.from(t))) : this.set(n, t)
                        }
                        this.set("clean", !0)
                    }
                });
            u.reopen({
                clone: function(e) {
                    const t = u.create({
                        primaryStyleId: this.get("primaryStyleId"),
                        subStyleId: this.get("subStyleId"),
                        selectedPerkIds: this.get("normalizedSelectedPerkIds").slice(),
                        name: this.get("name")
                    });
                    for (const n in e) t.set(n, e[n]);
                    return t
                }
            });
            var h = u;
            t.default = h
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(208);
            var i = s.Ember.Object.extend({
                type: null,
                perks: null,
                perkObjects: null,
                allowedPerkIDs: s.Ember.A(),
                isPrimary: function() {
                    return [o.SLOT_TYPES.kRegular, o.SLOT_TYPES.kKeyStone, o.SLOT_TYPES.kMixedRegularSplashable].indexOf(this.get("type")) >= 0
                },
                isSplashable: function() {
                    return [o.SLOT_TYPES.kSplashable, o.SLOT_TYPES.kMixedRegularSplashable].indexOf(this.get("type")) >= 0
                },
                isKeystone: function() {
                    return [o.SLOT_TYPES.kKeyStone].indexOf(this.get("type")) >= 0
                },
                isStatMod: function() {
                    return this.get("type") === o.SLOT_TYPES.kStatMod
                }
            });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = c(n(222)),
                o = c(n(223)),
                i = c(n(220)),
                l = function(e, t) {
                    if (!t && e && e.__esModule) return e;
                    if (null === e || "object" != typeof e && "function" != typeof e) return {
                        default: e
                    };
                    var n = r(t);
                    if (n && n.has(e)) return n.get(e);
                    var s = {},
                        o = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var i in e)
                        if ("default" !== i && Object.prototype.hasOwnProperty.call(e, i)) {
                            var l = o ? Object.getOwnPropertyDescriptor(e, i) : null;
                            l && (l.get || l.set) ? Object.defineProperty(s, i, l) : s[i] = e[i]
                        } s.default = e, n && n.set(e, s);
                    return s
                }(n(1)),
                a = c(n(224));

            function r(e) {
                if ("function" != typeof WeakMap) return null;
                var t = new WeakMap,
                    n = new WeakMap;
                return (r = function(e) {
                    return e ? n : t
                })(e)
            }

            function c(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const d = (0, l.emberDataBinding)({
                    Ember: l.Ember,
                    websocket: l.default.getProvider().getSocket(),
                    basePaths: {
                        perksEndpoint: "/lol-perks"
                    },
                    boundProperties: {
                        perkStyles: {
                            api: "perksEndpoint",
                            path: "/v1/styles",
                            objectTypes: {
                                "[]": o.default
                            },
                            default: l.Ember.A()
                        },
                        gameplayUpdatedPerks: {
                            api: "perksEndpoint",
                            path: "/v1/perks/gameplay-updated",
                            default: []
                        },
                        perks: {
                            api: "perksEndpoint",
                            path: "/v1/perks",
                            objectTypes: {
                                "[]": s.default
                            },
                            default: l.Ember.A()
                        },
                        disabledPerks: {
                            api: "perksEndpoint",
                            path: "/v1/perks/disabled",
                            default: []
                        }
                    }
                }),
                m = {
                    perksMap: l.Ember.computed("perks.[]", (function() {
                        const e = {},
                            t = this.get("perks");
                        if (!t) return e;
                        for (const n of t) e[n.id] = n;
                        return e
                    })),
                    perkStylesMap: l.Ember.computed("perkStyles.[]", "perksMap.[]", (function() {
                        const e = {};
                        let t = this.get("perkStyles");
                        if (!t) return e;
                        const n = this.get("perksMap");
                        return t.forEach((function(t) {
                            const s = t.get("slots").map((function(e) {
                                const t = i.default.create(e),
                                    s = e.get("perks").map((e => n[e]));
                                return t.set("perkObjects", s), t
                            }));
                            t.set("slotObjects", s), e[t.id] = t
                        })), t = (0, a.default)(t), e
                    })),
                    ready: function() {
                        return this.readyPromise
                    },
                    readyPromise: null,
                    readyPromiseResolve: null,
                    initReadyPromise: function() {
                        this.readyPromise = new Promise((e => {
                            this.readyPromiseResolve = e
                        }))
                    },
                    readyObserver: l.Ember.on("init", l.Ember.observer("perkStyles.[]", "perks.[]", "disabledPerks.[]", (function() {
                        this.get("perkStyles") && this.get("perkStyles").length && this.get("perks") && this.get("perks").length && (this.readyPromiseResolve(), delete this.initReadyPromise, delete this.readyObserver)
                    }))),
                    init: function() {
                        this._super(...arguments), this.get("perkStyles"), this.get("perks"), this.get("disabledPerks"), this.initReadyPromise()
                    }
                };
            let p = null;
            var u = {
                create: function(e) {
                    return e && e.dataBindingDisabled ? (delete e.dataBindingDisabled, function(e) {
                        return l.Ember.Object.extend(m).create(e)
                    }(e)) : function(e) {
                        if (!p) {
                            const t = l.Ember.Object.extend(d, m);
                            p = t.create(e)
                        }
                        return p
                    }(e)
                }
            };
            t.default = u
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const o = "Missing Rune Title",
                i = "Missing short description",
                l = "Missing long description";
            var a = s.Ember.Object.extend({
                id: null,
                name: o,
                shortDesc: i,
                longDesc: l,
                description: null,
                iconPath: null,
                imagePath: s.Ember.computed.alias("iconPath"),
                init() {
                    ["shortDesc", "longDesc"].forEach((e => {
                        this.set(e, this.convertNewlines(this.get(e)))
                    }))
                },
                convertNewlines: e => e && e.replace ? e.replace(/(?:\r\n|\r|\n)/g, "<br>") : e
            });
            t.default = a
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1);
            var i = ((s = n(222)) && s.__esModule ? s : {
                default: s
            }).default.extend({
                slots: o.Ember.A(),
                slotObjects: o.Ember.A(),
                primarySlots: o.Ember.computed("slotObjects.[]", (function() {
                    return o.Ember.A(this.get("slotObjects").filter((e => e.isPrimary())))
                })),
                splashableSlots: o.Ember.computed("slotObjects.[]", (function() {
                    const e = o.Ember.A(this.get("slotObjects").filter((e => e.isSplashable())));
                    for (let t = 0; t < e.length; t++)
                        if (e[t].get("perkObjects"))
                            for (let n = 0; n < e[t].get("perkObjects").length; n++) e[t].get("perkObjects")[n].set("optionIndex", t), e[t].get("perkObjects")[n].set("selectionIndex", n);
                    return e
                })),
                statModSlots: o.Ember.computed("slotObjects.[]", (function() {
                    return o.Ember.A(this.get("slotObjects").filter((e => e.isStatMod())))
                })),
                containsPerk: function(e) {
                    const t = this.get("slots");
                    for (const n of t)
                        if (-1 !== n.perks.indexOf(e)) return !0;
                    return !1
                },
                isKeystonePerk: function(e) {
                    const t = this.get("slotObjects").filter((e => e.isKeystone()));
                    for (const n of t)
                        if (-1 !== n.perks.indexOf(e)) return !0;
                    return !1
                },
                isPrimaryPerk: function(e) {
                    const t = this.get("slotObjects").filter((e => e.isPrimary()));
                    for (const n of t)
                        if (-1 !== n.perks.indexOf(e)) return !0;
                    return !1
                },
                isSplashablePerk: function(e) {
                    const t = this.get("slotObjects").filter((e => e.isSplashable()));
                    for (const n of t)
                        if (-1 !== n.perks.indexOf(e)) return !0;
                    return !1
                },
                isStatModPerk: function(e) {
                    const t = this.get("slotObjects").filter((e => e.isStatMod()));
                    for (const n of t)
                        if (-1 !== n.perks.indexOf(e)) return !0;
                    return !1
                }
            });
            t.default = i
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function(e) {
                for (const t of e) {
                    const e = "perks_" + t.idName + "_short_desc_";
                    t.description = {
                        s1: e + "1",
                        s2: e + "2"
                    }
                }
                return e
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.buildEntity = function(e) {
                const t = {
                        Ember: o.Ember,
                        websocket: o.socket,
                        boundProperties: {}
                    },
                    n = (0, i.interpolateResourceName)(e),
                    s = (0, i.getResourcePath)(e);
                t.boundProperties[n] = {
                    path: "/lol-perks/v1" + s,
                    objectTypes: {
                        "[]": (0, i.requireEntity)("./" + e + ".js")
                    },
                    default: []
                };
                const a = (0, o.emberDataBinding)(t);
                return l.default.extend(a).create()
            };
            var s, o = n(1),
                i = n(226),
                l = (s = n(228)) && s.__esModule ? s : {
                    default: s
                }
        }, (e, t, n) => {
            "use strict";

            function s(e) {
                return e + "s"
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getResourcePath = function(e) {
                return "/" + s(e)
            }, t.interpolateResourceName = s, t.requireEntity = void 0;
            const o = n(227);
            t.requireEntity = o
        }, (e, t, n) => {
            var s = {
                "./page.js": 219,
                "./perk.js": 222,
                "./perks-book.js": 218,
                "./perks-static-data.js": 221,
                "./slot.js": 220,
                "./style.js": 223,
                "./utils.js": 207
            };

            function o(e) {
                var t = i(e);
                return n(t)
            }

            function i(e) {
                if (!n.o(s, e)) {
                    var t = new Error("Cannot find module '" + e + "'");
                    throw t.code = "MODULE_NOT_FOUND", t
                }
                return s[e]
            }
            o.keys = function() {
                return Object.keys(s)
            }, o.resolve = i, e.exports = o, o.id = 227
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1).Ember.Object.extend({
                id: void 0,
                init: function() {
                    this._super(...arguments)
                }
            });
            t.default = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = function(e, t) {
                    if (!t && e && e.__esModule) return e;
                    if (null === e || "object" != typeof e && "function" != typeof e) return {
                        default: e
                    };
                    var n = l(t);
                    if (n && n.has(e)) return n.get(e);
                    var s = {},
                        o = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var i in e)
                        if ("default" !== i && Object.prototype.hasOwnProperty.call(e, i)) {
                            var a = o ? Object.getOwnPropertyDescriptor(e, i) : null;
                            a && (a.get || a.set) ? Object.defineProperty(s, i, a) : s[i] = e[i]
                        } s.default = e, n && n.set(e, s);
                    return s
                }(n(1)),
                i = (s = n(215)) && s.__esModule ? s : {
                    default: s
                };

            function l(e) {
                if ("function" != typeof WeakMap) return null;
                var t = new WeakMap,
                    n = new WeakMap;
                return (l = function(e) {
                    return e ? n : t
                })(e)
            }
            const a = void 0,
                r = (0, o.emberDataBinding)({
                    Ember: o.Ember,
                    websocket: o.default.getProvider().getSocket(),
                    boundProperties: {
                        currentSummoner: {
                            path: "/lol-summoner/v1/current-summoner",
                            default: a
                        },
                        tutorial: {
                            path: "/lol-settings/v1/account/lol-tutorial",
                            default: a
                        }
                    }
                });
            var c = o.Ember.Service.extend(r, i.default, {
                readyProperties: ["tutorial", "currentSummoner"],
                platformSettings: o.Ember.inject.service(),
                basicEditingUnlocked: o.Ember.computed("currentSummoner.summonerLevel", (function() {
                    return this.get("currentSummoner.summonerLevel") >= this.get("platformSettings.MinSummonerLevelBasicEditing")
                })),
                fullPrimaryPathEditingUnlocked: o.Ember.computed("currentSummoner.summonerLevel", (function() {
                    return this.get("currentSummoner.summonerLevel") >= this.get("platformSettings.MinSummonerLevelEditFullPrimaryPath")
                })),
                secondaryPathEditingUnlocked: o.Ember.computed("currentSummoner.summonerLevel", (function() {
                    return this.get("currentSummoner.summonerLevel") >= this.get("platformSettings.MinSummonerLevelEditSecondaryPath")
                })),
                statModsEditingUnlocked: o.Ember.computed("currentSummoner.summonerLevel", (function() {
                    return this.get("currentSummoner.summonerLevel") >= this.get("platformSettings.MinSummonerLevelEditStatMods")
                })),
                fullCustomPageEditingUnlocked: o.Ember.computed.readOnly("secondaryPathEditingUnlocked"),
                inspirationUnlocked: o.Ember.computed("currentSummoner.summonerLevel", (function() {
                    return this.get("currentSummoner.summonerLevel") >= this.get("platformSettings.MinSummonerLevelUnlockInspiration")
                })),
                perksPresetPagesSeen: o.Ember.computed("tutorial.data.perksPresetPagesSeen", {
                    get() {
                        return !!this.get("tutorial.data.perksPresetPagesSeen")
                    },
                    set(e, t) {
                        return this.markTutorialAsSeen(e, t), t
                    }
                }),
                perksCreateNewPageSeen: o.Ember.computed("tutorial.data.perksCreateNewPageSeen", {
                    get() {
                        return !!this.get("tutorial.data.perksCreateNewPageSeen")
                    },
                    set(e, t) {
                        return this.markTutorialAsSeen(e, t), t
                    }
                }),
                perksPrimaryPathSeen: o.Ember.computed("tutorial.data.perksPrimaryPathSeen", {
                    get() {
                        return !!this.get("tutorial.data.perksPrimaryPathSeen")
                    },
                    set(e, t) {
                        return this.markTutorialAsSeen(e, t), t
                    }
                }),
                perksSecondaryPathSeen: o.Ember.computed("tutorial.data.perksSecondaryPathSeen", {
                    get() {
                        return !!this.get("tutorial.data.perksSecondaryPathSeen")
                    },
                    set(e, t) {
                        return this.markTutorialAsSeen(e, t), t
                    }
                }),
                perksStatModsSeen: o.Ember.computed("tutorial.data.perksStatModsSeen", {
                    get() {
                        return !!this.get("tutorial.data.perksStatModsSeen")
                    },
                    set(e, t) {
                        return this.markTutorialAsSeen(e, t), t
                    }
                }),
                markTutorialAsSeen: function(e, t) {
                    const n = {};
                    n[e] = !!t, (0, o.dataBinding)("/lol-settings", o.socket).patch("/v1/account/lol-tutorial", {
                        data: n,
                        schemaVersion: 1
                    })
                }
            });
            t.default = c
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "omzM61re",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\application.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","collections-application"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","collections-routes"],["flush-element"],["text","\\n    "],["append",["unknown",["outlet"]],false],["text","\\n  "],["close-element"],["text","\\n  "],["append",["unknown",["collections-sub-nav"]],false],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "IIhQ68ja",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\index.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","collections-index-route"],["flush-element"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Fa7FIqmZ",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\loading.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["append",["unknown",["hextech-loading-animation"]],false],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "xhuQp/6m",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\champions.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","champions-route"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","control-panel"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","collection-details"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","top-frame champions-frame"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","collection-totals"],["flush-element"],["text","\\n        "],["append",["helper",["number-fanfare"],null,[["total","class"],[["get",["totalMasteryPoints"]],"total-owned total-count"]]],false],["text","\\n        "],["open-element","div",[]],["static-attr","class","total-label"],["flush-element"],["append",["unknown",["tra","control_panel_total_champion_mastery"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["isEternalsEnabled"]]],null,10],["text","      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","bottom-frame champions-frame"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","collection-search-panel"],["flush-element"],["text","\\n      "],["open-element","lol-uikit-flat-input",[]],["flush-element"],["text","\\n        "],["append",["helper",["input"],null,[["type","maxlength","class","value","placeholder"],["search","50","collection-search-text",["get",["searchTerm"]],["get",["tra","control_panel_search_placeholder"]]]]],false],["text","\\n      "],["close-element"],["text","\\n"],["block",["unless"],[["get",["isGroupByOwnership"]]],null,9],["text","      "],["open-element","lol-uikit-framed-dropdown",[]],["static-attr","class","collection-grouping-options"],["flush-element"],["text","\\n        "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isGroupByAll"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setGroupBy","allChampions"],null],null],["flush-element"],["text","\\n          "],["append",["unknown",["tra","control_panel_grouping_all_champions"]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isGroupByPosition"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setGroupBy","position"],null],null],["flush-element"],["text","\\n          "],["append",["unknown",["tra","control_panel_grouping_lane"]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isGroupByRole"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setGroupBy","role"],null],null],["flush-element"],["text","\\n          "],["append",["unknown",["tra","control_panel_grouping_role"]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isGroupByOwnership"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setGroupBy","ownership"],null],null],["flush-element"],["text","\\n          "],["append",["unknown",["tra","control_panel_grouping_ownership"]],false],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","lol-uikit-framed-dropdown",[]],["static-attr","class","collection-sort-options"],["flush-element"],["text","\\n        "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortByAlphabetical"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setSortOrder","firstLetterAscending"],null],null],["flush-element"],["text","\\n          "],["append",["unknown",["tra","control_panel_sorting_alphabetical_ascending"]],false],["close-element"],["text","\\n        "],["open-element","lol-uikit-dropdown-option",[]],["dynamic-attr","selected",["unknown",["isSortByRecentlyPlayed"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setSortOrder","recentlyPlayed"],null],null],["flush-element"],["text","\\n          "],["append",["unknown",["tra","control_panel_sorting_recently_played"]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortByChampionMastery"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setSortOrder","championMastery"],null],null],["flush-element"],["text","\\n          "],["append",["unknown",["tra","control_panel_sorting_champion_mastery"]],false],["text","\\n        "],["close-element"],["text","\\n"],["block",["if"],[["get",["isEternalsEnabled"]]],null,8],["text","        "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortByChestAvailable"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setSortOrder","chestAvailable"],null],null],["flush-element"],["text","\\n          "],["append",["unknown",["tra","control_panel_sorting_chest_available"]],false],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","champion-grid"],["flush-element"],["text","\\n"],["block",["render-telemetry-sender"],null,[["renderEventName"],[["get",["model","renderEventName"]]]],7],["text","  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","no-matching-champions"],["flush-element"],["text","\\n          "],["open-element","span",[]],["static-attr","class","message"],["flush-element"],["append",["unknown",["noMatchingChampionsString"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["append",["helper",["champion-item"],null,[["champion","refreshCurrentRoute"],[["get",["championOrGroup"]],"refreshCurrentRoute"]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","                  "],["open-element","div",[]],["static-attr","class","group-breakdown"],["flush-element"],["text","\\n                    "],["open-element","span",[]],["static-attr","class","group-owned-count"],["flush-element"],["append",["unknown",["championOrGroup","numItemsOwned"]],false],["text"," / "],["append",["unknown",["championOrGroup","totalItems"]],false],["close-element"],["text","\\n                    "],["open-element","span",[]],["static-attr","class","group-total-count"],["flush-element"],["text","("],["append",["unknown",["championOrGroup","totalItems"]],false],["text",")"],["close-element"],["text","\\n                  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                "],["open-element","div",[]],["static-attr","class","group-separator"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["index"]]],null,3],["text","              "],["open-element","div",[]],["static-attr","class","group-wrapper"],["flush-element"],["text","\\n                "],["open-element","h4",[]],["static-attr","class","group-name"],["flush-element"],["append",["helper",["get"],[["get",["tra"]],["get",["championOrGroup","id"]]],null],false],["close-element"],["text","\\n"],["block",["if"],[["get",["shouldShowOwnershipCount"]]],null,2],["text","              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["championOrGroup","isGroup"]]],null,4,1]],"locals":["championOrGroup","index"]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","item-grid"],["flush-element"],["text","\\n"],["block",["ember-collection"],null,[["class","items","cell-layout"],["item-grid-scrollable",["get",["groupedChampions"]],["helper",["mixed-grid-layout"],[["get",["itemSizes"]]],null]]],5],["text","        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["hasMatchingChamps"]]],null,6,0]],"locals":[]},{"statements":[["text","          "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortByMilestonesPassed"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"setSortOrder","milestonesPassed"],null],null],["flush-element"],["text","\\n            "],["append",["unknown",["tra","control_panel_sorting_eternals_milestones_passed"]],false],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","lol-uikit-flat-checkbox",[]],["static-attr","class","collection-ownership-filter"],["flush-element"],["text","\\n          "],["append",["helper",["input"],null,[["slot","type","name","checked"],["input","checkbox","isUnowned",["get",["isUnownedShown"]]]]],false],["text","\\n          "],["open-element","label",[]],["static-attr","slot","label"],["static-attr","class","collection-checkbox-label"],["static-attr","for","isUnowned"],["flush-element"],["append",["unknown",["tra","control_panel_show_unowned"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["append",["helper",["number-fanfare"],null,[["total","class"],[["get",["totalEternalsMilestonesPassed"]],"total-owned eternals-count"]]],false],["text","\\n          "],["open-element","div",[]],["static-attr","class","total-label"],["flush-element"],["text","\\n            "],["append",["unknown",["tra","control_panel_total_eternals_milestones_passed"]],false],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Ysyg979a",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\skins.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","skins-route"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","collection-side-panel"],["flush-element"],["text","\\n    "],["append",["helper",["collection-details"],null,[["type","rarities","totalOwned","totalOwnedLegacy","totalOwnedChromas","hasLegacySection","onIconClick"],["skins",["get",["model","rarities"]],["get",["totalOwned"]],["get",["totalOwnedLegacy"]],["get",["totalOwnedChromas"]],["get",["shouldShowLegacyInfo"]],["helper",["action"],[["get",[null]],"setScrollToTier"],null]]]],false],["text","\\n\\n    "],["append",["helper",["collection-controls"],null,[["controlsConfiguration","searchTerm","isUnownedShown","disableAvailabilityFilter","groupBy","sortBy","onSelectGroup","onSelectSort"],[["get",["controlsConfiguration"]],["get",["searchTerm"]],["get",["isUnownedShown"]],["get",["disableAvailabilityFilter"]],["get",["groupBy"]],["get",["sortBy"]],["helper",["action"],[["get",[null]],"setGroupBy"],null],["helper",["action"],[["get",[null]],"setSortBy"],null]]]],false],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","skins-grid"],["flush-element"],["text","\\n"],["block",["render-telemetry-sender"],null,[["renderEventName"],[["get",["model","renderEventName"]]]],5],["text","  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","no-matching-skins"],["flush-element"],["text","\\n          "],["open-element","span",[]],["static-attr","class","message"],["flush-element"],["append",["unknown",["noMatchingSkinsString"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["append",["helper",["inventory-item"],null,[["inventoryItem","itemType","lastVisitTime","shouldShowLegacyInfo","canClickLockIcon","isTencentRegion","openDetails","openPAW"],[["get",["skinOrGroup"]],"skin",["get",["model","lastVisitTime"]],["get",["shouldShowLegacyInfo"]],"true",["get",["isTencentRegion"]],["helper",["action"],[["get",[null]],"openSkinDetailsModal"],null],["helper",["action"],[["get",[null]],"openPAW"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["append",["helper",["collection-group-header"],null,[["isMajor","title","description","index","groupBy","sortBy","customizerComponent","shouldShowOwnershipCount","numItemsOwned","availableItems","totalItems"],[["get",["skinOrGroup","isMajor"]],["get",["skinOrGroup","id"]],["get",["skinOrGroup","description"]],["get",["index"]],["get",["groupBy"]],["get",["sortBy"]],"skin-item-header",["get",["shouldShowOwnershipCount"]],["get",["skinOrGroup","numItemsOwned"]],["get",["skinOrGroup","totalItems"]],["get",["skinOrGroup","totalItems"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["skinOrGroup","isGroup"]]],null,2,1]],"locals":["skinOrGroup","index"]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","item-grid"],["flush-element"],["text","\\n"],["block",["ember-collection"],null,[["class","items","cell-layout"],["item-grid-scrollable",["get",["groupedSkins"]],["helper",["mixed-grid-layout"],[["get",["itemSizes"]]],null]]],3],["text","        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["hasMatchingSkins"]]],null,4,0]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Bn/SE/Sp",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\runes.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","runes-route"],["flush-element"],["text","\\n  "],["append",["unknown",["inventory-page"]],false],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "o4iHx3pb",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\emotes.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","collections__emotes-route"],["flush-element"],["text","\\n"],["text","  "],["append",["unknown",["emote-root"]],false],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "N8EiYIoG",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\spells.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","spells-route"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","summoner-spells-root-component"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","collection-spell-container loading-fade-in"],["flush-element"],["text","\\n"],["block",["if"],[["get",["selectedSpell"]]],null,2],["text","      "],["open-element","div",[]],["static-attr","class","collection-spell-icons"],["flush-element"],["text","\\n"],["block",["each"],[["get",["model"]]],null,1],["text","      "],["close-element"],["text","\\n\\n      "],["open-element","div",[]],["static-attr","class","collection-spell-description"],["flush-element"],["text","\\n        "],["open-element","hr",[]],["static-attr","class","collection-spell-description-separator"],["flush-element"],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","collection-spell-title-container"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","collection-spell-name-container"],["flush-element"],["text","\\n            "],["open-element","span",[]],["static-attr","class","collection-spell-text collection-spell-name"],["flush-element"],["append",["unknown",["selectedSpell","name"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","collection-spell-level-container"],["flush-element"],["text","\\n            "],["open-element","span",[]],["static-attr","class","collection-spell-text collection-spell-level"],["flush-element"],["append",["unknown",["tra","summoner_spell_summoner_level"]],false],["text","\\n              "],["append",["unknown",["selectedSpell","summonerLevel"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n\\n        "],["append",["helper",["replay-button"],null,[["canReplay","replay"],[["get",["canReplay"]],"replayVideo"]]],false],["text","\\n\\n        "],["open-element","div",[]],["static-attr","class","collection-spell-gametypes-container"],["flush-element"],["text","\\n          "],["open-element","span",[]],["static-attr","class","collection-spell-text collection-spell-gametypes"],["flush-element"],["append",["unknown",["selectedSpellModesDisplay"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n\\n        "],["open-element","div",[]],["static-attr","class","collection-spell-desc-container"],["flush-element"],["text","\\n          "],["open-element","p",[]],["static-attr","class","collection-spell-desc"],["flush-element"],["append",["unknown",["selectedSpell","description"]],false],["close-element"],["text","\\n          "],["open-element","p",[]],["static-attr","class","collection-spell-desc"],["flush-element"],["append",["unknown",["coolDownDisplay"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","              "],["open-element","div",[]],["static-attr","class","collection-champion-lock-icon"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","collection-spell-icon-container"],["flush-element"],["text","\\n            "],["open-element","div",[]],["dynamic-attr","class",["concat",["collection-spell-",["unknown",["spell","id"]]," collection-spell-icon ",["helper",["if"],[["get",["spell","selected"]],"collection-spell-icon-selected"],null]]]],["flush-element"],["text","\\n              "],["open-element","img",[]],["dynamic-attr","class",["concat",["collection-spell-icon-img ",["helper",["if"],[["get",["spell","selected"]],"collection-spell-icon-img-selected"],null]," ",["helper",["unless"],[["get",["spell","enabled"]],"collection-spell-icon-locked"],null]]]],["static-attr","draggable","false"],["dynamic-attr","src",["unknown",["spell","iconPath"]],null],["modifier",["action"],[["get",[null]],"selectSpell",["get",["spell"]]],[["on"],["click"]]],["modifier",["action"],[["get",[null]],"hoverSpell"],[["on"],["mouseEnter"]]],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n"],["block",["unless"],[["get",["spell","enabled"]]],null,0],["text","            "],["open-element","div",[]],["static-attr","class","collection-spell-icon-label"],["flush-element"],["text","\\n              "],["open-element","span",[]],["static-attr","class","collection-spell-icon-label-text"],["flush-element"],["append",["unknown",["spell","name"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":["spell"]},{"statements":[["text","        "],["append",["helper",["video-wrapper"],null,[["spell","onLastPlayedChanged","onIsPlayingChanged"],[["get",["selectedSpell"]],["helper",["action"],[["get",[null]],"onSetLastPlayedVideo"],null],["helper",["action"],[["get",[null]],"onSetIsPlaying"],null]]]],false],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "MpTJsP0f",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\items.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","collections__items-route"],["flush-element"],["text","\\n"],["text","  "],["append",["unknown",["items-root"]],false],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Yqn9aucQ",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\summoner-icons.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","summoner-icons-route"],["flush-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","collection-side-panel"],["flush-element"],["text","\\n    "],["append",["helper",["collection-details"],null,[["type","rarities","totalOwned","totalOwnedLegacy","hasLegacySection","onIconClick"],["summoner-icons",["get",["model","rarities"]],["get",["totalOwned"]],["get",["totalOwnedLegacy"]],["get",["shouldShowLegacyInfo"]],["helper",["action"],[["get",[null]],"setScrollToTier"],null]]]],false],["text","\\n\\n    "],["append",["helper",["collection-controls"],null,[["controlsConfiguration","searchTerm","isUnownedShown","isUnavailableShown","groupBy","sortBy","onSelectGroup","onSelectSort"],[["get",["controlsConfiguration"]],["get",["searchTerm"]],["get",["isUnownedShown"]],["get",["isUnavailableShown"]],["get",["groupBy"]],["get",["sortBy"]],["helper",["action"],[["get",[null]],"setGroupBy"],null],["helper",["action"],[["get",[null]],"setSortBy"],null]]]],false],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","sumoner-icon-grid"],["flush-element"],["text","\\n"],["block",["render-telemetry-sender"],null,[["renderEventName"],[["get",["model","renderEventName"]]]],5],["text","    "],["open-element","div",[]],["static-attr","class","save-summoner-icon-button"],["flush-element"],["text","\\n      "],["open-element","lol-uikit-flat-button",[]],["dynamic-attr","disabled",["helper",["unless"],[["get",["isSaveButtonEnabled"]],"true"],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"saveSummonerIcon"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","collectibles_summoner_icons_save_button"]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","no-matching-summoner-icons"],["flush-element"],["text","\\n          "],["open-element","span",[]],["static-attr","class","message"],["flush-element"],["append",["unknown",["noMatchingSummonerIconsString"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["append",["helper",["inventory-item"],null,[["inventoryItem","itemType","lastVisitTime","shouldShowLegacyInfo","selectItemAction","openPAW"],[["get",["iconOrGroup"]],"summoner_icon",["get",["model","lastVisitTime"]],["get",["shouldShowLegacyInfo"]],["helper",["action"],[["get",[null]],"selectSummonerIcon"],null],["helper",["action"],[["get",[null]],"openPAW"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["append",["helper",["collection-group-header"],null,[["isMajor","title","index","groupBy","sortBy","customizerComponent","shouldShowOwnershipCount","numItemsOwned","availableItems","shouldShowTotalCount","totalItems"],[["get",["iconOrGroup","isMajor"]],["get",["iconOrGroup","id"]],["get",["index"]],["get",["groupBy"]],["get",["sortBy"]],"summoner-icon-header",["get",["shouldShowOwnershipCount"]],["get",["iconOrGroup","numItemsOwned"]],["get",["iconOrGroup","availableItems"]],["get",["shouldShowTotalCount"]],["get",["iconOrGroup","totalItems"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["iconOrGroup","isGroup"]]],null,2,1]],"locals":["iconOrGroup","index"]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","item-grid"],["flush-element"],["text","\\n"],["block",["ember-collection"],null,[["class","items","cell-layout"],["item-grid-scrollable",["get",["groupedSummonerIcons"]],["helper",["mixed-grid-layout"],[["get",["itemSizes"]]],null]]],3],["text","        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["hasMatchingSummonerIcons"]]],null,4,0]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "MEcSKusv",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\wards.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","wards-route"],["flush-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","collection-side-panel"],["flush-element"],["text","\\n    "],["append",["helper",["collection-details"],null,[["type","rarities","totalOwned","totalOwnedLegacy","hasLegacySection","onIconClick"],["wards",["get",["model","rarities"]],["get",["totalOwnedWards"]],["get",["totalOwnedLegacyWards"]],["get",["shouldShowLegacyInfo"]],["helper",["action"],[["get",[null]],"setScrollToTier"],null]]]],false],["text","\\n\\n    "],["append",["helper",["collection-controls"],null,[["controlsConfiguration","searchTerm","isUnownedShown","isUnavailableShown","groupBy","sortBy","onSelectGroup","onSelectSort"],[["get",["controlsConfiguration"]],["get",["searchTerm"]],["get",["isUnownedShown"]],["get",["isUnavailableShown"]],["get",["groupBy"]],["get",["sortBy"]],["helper",["action"],[["get",[null]],"setGroupBy"],null],["helper",["action"],[["get",[null]],"setSortBy"],null]]]],false],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","wards-grid"],["flush-element"],["text","\\n"],["block",["render-telemetry-sender"],null,[["renderEventName"],[["get",["model","renderEventName"]]]],8],["text","  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","no-matching-wards"],["flush-element"],["text","\\n          "],["open-element","span",[]],["static-attr","class","message"],["flush-element"],["append",["unknown",["noMatchingWardsString"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["append",["helper",["inventory-item"],null,[["inventoryItem","itemType","lastVisitTime","shouldShowLegacyInfo","openPAW"],[["get",["wardOrGroup"]],"ward",["get",["model","lastVisitTime"]],["get",["shouldShowLegacyInfo"]],["helper",["action"],[["get",[null]],"openPAW"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","                      "],["open-element","span",[]],["static-attr","class","group-total-count"],["flush-element"],["text","("],["append",["unknown",["wardOrGroup","totalItems"]],false],["text",")"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                  "],["open-element","div",[]],["dynamic-attr","class",["concat",["group-breakdown ",["helper",["unless"],[["get",["wardOrGroup","isMajor"]],"minor-breakdown"],null]]]],["flush-element"],["text","\\n                    "],["open-element","span",[]],["static-attr","class","group-owned-count"],["flush-element"],["append",["unknown",["wardOrGroup","numItemsOwned"]],false],["text"," / "],["append",["unknown",["wardOrGroup","availableItems"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["shouldShowTotalCount"]]],null,2],["text","                  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                "],["open-element","div",[]],["static-attr","class","group-separator"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["index"]]],null,4],["text","              "],["open-element","div",[]],["static-attr","class","group-wrapper"],["flush-element"],["text","\\n                "],["open-element","h4",[]],["static-attr","class","group-name-major"],["flush-element"],["append",["unknown",["wardOrGroup","id"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["shouldShowOwnershipCount"]]],null,3],["text","              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["wardOrGroup","isGroup"]]],null,5,1]],"locals":["wardOrGroup","index"]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","item-grid"],["flush-element"],["text","\\n"],["block",["ember-collection"],null,[["class","items","cell-layout"],["item-grid-scrollable",["get",["groupedWards"]],["helper",["mixed-grid-layout"],[["get",["itemSizes"]]],null]]],6],["text","        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["hasMatchingWards"]]],null,7,0]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "5PwLv2as",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\chromas.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","chromas-route"],["flush-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","collection-side-panel"],["flush-element"],["text","\\n    "],["append",["helper",["collection-details"],null,[["type","rarities","totalOwned","totalOwnedLegacy","hasLegacySection","onIconClick"],["chromas",["get",["model","rarities"]],["get",["totalOwnedChromas"]],["get",["totalOwnedLegacyChromas"]],["get",["shouldShowLegacyInfo"]],["helper",["action"],[["get",[null]],"setScrollToTier"],null]]]],false],["text","\\n\\n    "],["append",["helper",["collection-controls"],null,[["controlsConfiguration","searchTerm","isUnownedShown","isUnavailableShown","groupBy","sortBy","onSelectGroup","onSelectSort"],[["get",["controlsConfiguration"]],["get",["searchTerm"]],["get",["isUnownedShown"]],["get",["isUnavailableShown"]],["get",["groupBy"]],["get",["sortBy"]],["helper",["action"],[["get",[null]],"setGroupBy"],null],["helper",["action"],[["get",[null]],"setSortBy"],null]]]],false],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","chroma-grid"],["flush-element"],["text","\\n"],["block",["render-telemetry-sender"],null,[["renderEventName"],[["get",["model","renderEventName"]]]],11],["text","  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","no-matching-chromas"],["flush-element"],["text","\\n          "],["open-element","span",[]],["static-attr","class","message"],["flush-element"],["append",["unknown",["noMatchingChromasString"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["append",["helper",["inventory-item"],null,[["inventoryItem","itemType","lastVisitTime","shouldShowLegacyInfo","openPAW"],[["get",["chromaOrGroup"]],"chroma",["get",["model","lastVisitTime"]],["get",["shouldShowLegacyInfo"]],["helper",["action"],[["get",[null]],"openPAW"],null]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","                      "],["open-element","span",[]],["static-attr","class","group-total-count"],["flush-element"],["text","("],["append",["unknown",["chromaOrGroup","totalItems"]],false],["text",")"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                  "],["open-element","div",[]],["dynamic-attr","class",["concat",["group-breakdown ",["helper",["unless"],[["get",["chromaOrGroup","isMajor"]],"minor-breakdown"],null]]]],["flush-element"],["text","\\n                    "],["open-element","span",[]],["static-attr","class","group-owned-count"],["flush-element"],["append",["unknown",["chromaOrGroup","numItemsOwned"]],false],["text"," / "],["append",["unknown",["chromaOrGroup","availableItems"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["shouldShowTotalCount"]]],null,2],["text","                  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                  "],["open-element","h5",[]],["static-attr","class","group-name-minor"],["flush-element"],["append",["unknown",["chromaOrGroup","id"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                  "],["open-element","h4",[]],["static-attr","class","group-name-major"],["flush-element"],["append",["unknown",["chromaOrGroup","id"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                  "],["open-element","div",[]],["static-attr","class","group-separator"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["index"]]],null,6]],"locals":[]},{"statements":[["block",["if"],[["get",["chromaOrGroup","isMajor"]]],null,7],["text","              "],["open-element","div",[]],["static-attr","class","group-wrapper"],["flush-element"],["text","\\n"],["block",["if"],[["get",["chromaOrGroup","isMajor"]]],null,5,4],["block",["if"],[["get",["shouldShowOwnershipCount"]]],null,3],["text","              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["chromaOrGroup","isGroup"]]],null,8,1]],"locals":["chromaOrGroup","index"]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","item-grid"],["flush-element"],["text","\\n"],["block",["ember-collection"],null,[["class","items","cell-layout"],["item-grid-scrollable",["get",["groupedChromas"]],["helper",["mixed-grid-layout"],[["get",["itemSizes"]]],null]]],9],["text","        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["hasMatchingChromas"]]],null,10,0]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Iu1GU8He",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\components\\\\legacy-app-mount.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\styles\\\\components\\\\legacy-app-mount.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\components\\\\legacy-app-mount.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","legacy-viewport"],["flush-element"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "4O3CNLtg",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\components\\\\champion-item.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\styles\\\\components\\\\champion-item.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\components\\\\champion-item.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","champion-thumbnail"],["modifier",["action"],[["get",[null]],"openDetails"]],["flush-element"],["text","\\n"],["block",["collections-tooltip"],null,[["tooltipId"],[["get",["tooltipId"]]]],16],["text","  "],["open-element","div",[]],["static-attr","class","champion-image-container"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","champion-image"],["dynamic-attr","src",["unknown",["champion","baseLoadScreenPath"]],null],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["block",["each"],[["get",["infoBadgePaths"]]],null,4],["block",["if"],[["get",["hasMasteryBorder"]]],null,3,0],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","champion-name-container"],["flush-element"],["text","\\n  "],["open-element","p",[]],["static-attr","class","champion-name"],["flush-element"],["text","\\n    "],["append",["unknown",["champion","name"]],false],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","lock-wrapper"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","lock-icon"],["modifier",["action"],[["get",[null]],"openPAW",["get",["champion","id"]]]],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","champion-mastery-info"],["flush-element"],["text","\\n        "],["open-element","div",[]],["dynamic-attr","class",["concat",["champion-mastery-badge-container ",["helper",["if"],[["get",["hasMastery"]],"is-flag"],null]]]],["flush-element"],["text","\\n          "],["open-element","img",[]],["dynamic-attr","class",["concat",["champion-mastery-badge ",["helper",["if"],[["get",["hasMastery"]],"is-flag"],null]]]],["dynamic-attr","src",["unknown",["masteryBadgeImgPath"]],null],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","champion-mastery-description-container"],["flush-element"],["text","\\n          "],["open-element","p",[]],["static-attr","class","champion-mastery-description"],["flush-element"],["append",["unknown",["masteryLevelString"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","champion-mastery-info"],["flush-element"],["text","\\n        "],["open-element","div",[]],["dynamic-attr","class",["concat",["champion-mastery-badge-container ",["helper",["if"],[["get",["hasMastery"]],"is-flag"],null]]]],["flush-element"],["text","\\n          "],["open-element","img",[]],["dynamic-attr","class",["concat",["champion-mastery-badge ",["helper",["if"],[["get",["hasMastery"]],"is-flag"],null]]]],["dynamic-attr","src",["unknown",["masteryBadgeImgPath"]],null],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["dynamic-attr","class",["concat",["eternals-description-container ",["helper",["if"],[["get",["hasEternals"]],"owned","unowned"],null]]]],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","eternals-icon"],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","eternals-description"],["flush-element"],["append",["unknown",["champion","milestonesPassed"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isEternalsEnabled"]]],null,2,1]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["info-badge-wrapper badge-",["get",["index"]]]]],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","info-badge"],["dynamic-attr","src",["get",["path"]],null],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":["path","index"]},{"statements":[["text","                  "],["open-element","div",[]],["static-attr","class","eternals-set-complete-wrapper"],["flush-element"],["text","\\n                    "],["open-element","div",[]],["static-attr","class","eternals-set-icon incomplete"],["flush-element"],["close-element"],["text","\\n                    "],["open-element","div",[]],["static-attr","class","eternals-set-count"],["flush-element"],["append",["unknown",["set","milestonesPassed"]],false],["text"," / "],["append",["unknown",["milestonesForSetCompletion"]],false],["close-element"],["text","\\n                  "],["close-element"],["text","\\n                "]],"locals":[]},{"statements":[["text","                  "],["open-element","div",[]],["static-attr","class","eternals-set-complete-wrapper"],["flush-element"],["text","\\n                    "],["open-element","div",[]],["static-attr","class","eternals-set-icon complete"],["flush-element"],["close-element"],["text","\\n                    "],["open-element","div",[]],["static-attr","class","set-complete"],["flush-element"],["append",["unknown",["set","milestonesPassed"]],false],["close-element"],["text","\\n                  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["set","complete"]]],null,6,5]],"locals":[]},{"statements":[["text","                  "],["open-element","div",[]],["static-attr","class","eternals-set-lock"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["open-element","div",[]],["static-attr","class","eternals-set"],["flush-element"],["text","\\n                "],["open-element","div",[]],["static-attr","class","eternals-set-name"],["flush-element"],["append",["unknown",["set","name"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["set","noneOwned"]]],null,8,7],["text","              "],["close-element"],["text","\\n"]],"locals":["set"]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","eternals-container"],["flush-element"],["text","\\n            "],["open-element","h6",[]],["flush-element"],["append",["unknown",["tra","collectibles_champion_tooltip_eternal_series"]],false],["close-element"],["text","\\n"],["block",["each"],[["get",["eternalsSets"]]],null,9],["text","          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","info-badge chest-granted-container"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","info-badge-icon chest-granted-icon"],["flush-element"],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","info-badge-text"],["flush-element"],["append",["unknown",["tra","collections_champion_grid_mastery_tooltip_chest_acquired"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","info-badge free-to-play-container"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","info-badge-icon free-to-play-icon"],["flush-element"],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","info-badge-text"],["flush-element"],["append",["unknown",["tra","collections_champion_grid_mastery_tooltip_rental_expl_free_to_play"]],false],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","info-badge rental-container"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","info-badge-icon rental-icon"],["flush-element"],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","info-badge-text"],["flush-element"],["append",["unknown",["rentalExplanation"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","info-badge rental-container"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","info-badge-icon xbox-icon"],["flush-element"],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","info-badge-text"],["flush-element"],["append",["unknown",["xboxExplanation"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","info-badge rental-container"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","info-badge-icon loyalty-icon"],["flush-element"],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","info-badge-text"],["flush-element"],["append",["unknown",["loyaltyExplanation"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["static-attr","class","champion-item-tooltip-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","top-content"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","name-progress-container"],["flush-element"],["text","\\n          "],["open-element","lol-uikit-radial-progress",[]],["static-attr","type","blue"],["dynamic-attr","percent",["concat",[["unknown",["champion","masteryPercent"]]]]],["static-attr","start-angle","270deg"],["static-attr","end-angle","-90deg"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","slot","top"],["static-attr","class","top"],["flush-element"],["text","\\n              "],["open-element","h4",[]],["static-attr","class","mastery-level"],["flush-element"],["append",["unknown",["champion","masteryLevel"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","h4",[]],["static-attr","class","champion-name"],["flush-element"],["append",["unknown",["champion","name"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","info-container separator"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","mastery-container"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","mastery-score"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","mastery-icon"],["flush-element"],["close-element"],["text","\\n            "],["open-element","span",[]],["static-attr","class","mastery-score"],["flush-element"],["append",["unknown",["masteryScore"]],false],["close-element"],["text","\\n            "],["open-element","span",[]],["static-attr","class","mastery-title"],["flush-element"],["append",["unknown",["masteryTitle"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","mastery-grade"],["flush-element"],["append",["unknown",["highestGrade"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["loyaltyExplanation"]]],null,15],["text","\\n"],["block",["if"],[["get",["xboxExplanation"]]],null,14],["text","\\n"],["block",["if"],[["get",["rentalExplanation"]]],null,13],["text","\\n"],["block",["if"],[["get",["isFreeToPlay"]]],null,12],["text","\\n"],["block",["if"],[["get",["chestGranted"]]],null,11],["text","\\n"],["block",["if"],[["get",["isEternalsEnabled"]]],null,10],["text","      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "N+5GUdpi",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\components\\\\inventory-item.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\styles\\\\components\\\\inventory-item.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\components\\\\inventory-item.js\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["inventory-item-thumbnail ",["unknown",["detailsClassName"]]," ",["helper",["if"],[["get",["isUnowned"]],"unowned","owned"],null]," ",["helper",["if"],[["get",["isPurchasable"]],"available","unavailable"],null]]]],["modifier",["action"],[["get",[null]],"clickTile"]],["modifier",["action"],[["get",[null]],"mouseEnter"],[["on"],["mouseEnter"]]],["modifier",["action"],[["get",[null]],"mouseLeave"],[["on"],["mouseLeave"]]],["flush-element"],["text","\\n"],["block",["collections-tooltip"],null,null,17],["block",["if"],[["get",["hasQuestSkinIndicator"]]],null,7],["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["inventory-item-image-container ",["unknown",["rarityClassString"]]," ",["helper",["if"],[["get",["isUnowned"]],"unowned","owned"],null]]]],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","inventory-item-image"],["dynamic-attr","src",["unknown",["itemImgPath"]],null],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["hasSkinBorders"]]],null,6],["block",["if"],[["get",["hasItemVideo"]]],null,4],["block",["if"],[["get",["hasEmblem"]]],null,3],["text","  "],["close-element"],["text","\\n"],["block",["if"],[["get",["isPurchasable"]]],null,2,1],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","linger-video-wrapper"],["flush-element"],["text","\\n            "],["open-element","video",[]],["static-attr","class","linger-video"],["dynamic-attr","src",["concat",[["unknown",["lingerVideoPath"]]]]],["static-attr","loop",""],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["border-wrapper ",["unknown",["rarityClassString"]]]]],["dynamic-attr","onmouseenter",["helper",["if"],[["get",["shouldShowNewItemGlow"]],["helper",["action"],[["get",[null]],"hoverToDismissVideo"],null]],null],null],["flush-element"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["border ",["unknown",["rarityClassString"]]," ",["unknown",["itemTypeClassString"]]]]],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","gem-wrapper"],["flush-element"],["text","\\n          "],["open-element","div",[]],["dynamic-attr","class",["concat",["gem ",["unknown",["gemClassString"]]]]],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n"],["block",["if"],[["get",["shouldShowNewItemGlow"]]],null,0],["text","      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","lock-wrapper"],["flush-element"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["lock-icon ",["unknown",["detailsClassName"]]]]],["modifier",["action"],[["get",[null]],"clickLock"],[["bubbles"],[false]]],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","emblem"],["flush-element"],["text","\\n        "],["open-element","img",[]],["static-attr","class","emblem-img"],["dynamic-attr","src",["concat",[["unknown",["emblemSrc"]]]]],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","video",[]],["static-attr","class","item-video"],["dynamic-attr","src",["concat",[["unknown",["itemVideoPath"]]]]],["static-attr","loop",""],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","img",[]],["static-attr","class","skin-border-image"],["dynamic-attr","src",["unknown",["skinBorder","image"]],null],["flush-element"],["close-element"],["text","\\n"]],"locals":["skinBorder"]},{"statements":[["block",["each"],[["get",["skinBorders"]]],null,5]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["quest-skin-info badge ",["helper",["if"],[["get",["numOwnedQuestSkins"]],"owned","unowned"],null]]]],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","quest-skin-icon"],["flush-element"],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","quest-skin-ownership"],["flush-element"],["append",["unknown",["questSkinProgression"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","chroma-info"],["flush-element"],["text","\\n            "],["open-element","img",[]],["static-attr","class","icon chroma-icon"],["static-attr","src","/fe/lol-collections/images/skins-viewer/icon-chroma.png"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","limited-label"],["flush-element"],["text","\\n            "],["open-element","p",[]],["static-attr","class","gold-text"],["flush-element"],["append",["unknown",["tra","collectibles_grid_tooltip_limited_label"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","                "],["open-element","div",[]],["dynamic-attr","class",["concat",["currency icon ",["unknown",["price","currency"]]]]],["flush-element"],["close-element"],["text","\\n                "],["open-element","p",[]],["dynamic-attr","class",["concat",["initial-cost ",["helper",["unless"],[["get",["price","initialCost"]],"hidden"],null]]]],["flush-element"],["append",["unknown",["price","initialCost"]],false],["close-element"],["text","\\n                "],["open-element","p",[]],["dynamic-attr","class",["concat",["cost ",["unknown",["price","currency"]]]]],["flush-element"],["append",["unknown",["price","cost"]],false],["close-element"],["text","\\n"]],"locals":["price"]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","price"],["flush-element"],["text","\\n"],["block",["each"],[["get",["inventoryItem","prices"]]],[["key"],["currency"]],10],["text","            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","quest-skin-info"],["flush-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","quest-skin-icon"],["flush-element"],["close-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","quest-skin-ownership"],["flush-element"],["append",["unknown",["questSkinProgressionTooltip"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","row legacy-info"],["flush-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","icon legacy-icon"],["flush-element"],["close-element"],["text","\\n              "],["open-element","p",[]],["static-attr","class","label"],["flush-element"],["append",["unknown",["tra","collectibles_grid_tooltip_legacy_label"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","row acquisition-date"],["flush-element"],["text","\\n            "],["open-element","p",[]],["static-attr","class","gold-text"],["flush-element"],["append",["unknown",["tra","collectibles_grid_tooltip_acquire_date_label"]],false],["text"," "],["append",["unknown",["acquisitionDate"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","row description"],["flush-element"],["text","\\n            "],["open-element","p",[]],["flush-element"],["append",["unknown",["inventoryItem","description"]],false],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","img",[]],["static-attr","class","gem"],["dynamic-attr","src",["unknown",["inventoryItem","rarity","gemIcon"]],null],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["static-attr","class","inventory-item-tooltip-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","top-content"],["flush-element"],["text","\\n"],["block",["if"],[["get",["inventoryItem","rarity","gemIcon"]]],null,16],["text","        "],["open-element","div",[]],["static-attr","class","inventory-item-name"],["flush-element"],["text","\\n          "],["open-element","h5",[]],["static-attr","class","name"],["flush-element"],["append",["unknown",["itemName"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","info-container separator"],["flush-element"],["text","\\n"],["block",["if"],[["get",["shouldShowDescription"]]],null,15],["block",["if"],[["get",["hasAcquisitionDate"]]],null,14],["text","        "],["open-element","div",[]],["static-attr","class","bottom-row"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isLegacy"]]],null,13],["block",["if"],[["get",["hasQuestSkinIndicator"]]],null,12],["block",["if"],[["get",["isPurchasable"]]],null,11],["text","        "],["close-element"],["text","\\n"],["block",["if"],[["get",["showLimitedLabel"]]],null,9],["block",["if"],[["get",["hasChromaIndicator"]]],null,8],["text","      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "UZHQNwHI",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\components\\\\skin-item-header.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\styles\\\\components\\\\skin-item-header.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\components\\\\skin-item-header.js\\" "],["text","\\n"],["block",["if"],[["get",["isUniverseMajorHeader"]]],null,5,4]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["open-element","span",[]],["static-attr","class","group-total-count"],["flush-element"],["text","("],["append",["unknown",["totalItems"]],false],["text",")"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",["group-breakdown ",["helper",["unless"],[["get",["isMajor"]],"minor-breakdown"],null]]]],["flush-element"],["text","\\n        "],["open-element","span",[]],["static-attr","class","group-owned-count"],["flush-element"],["append",["unknown",["numItemsOwned"]],false],["text"," / "],["append",["unknown",["availableItems"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["shouldShowTotalCount"]]],null,0],["text","      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","group-name-minor"],["flush-element"],["append",["unknown",["title"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","group-name-major"],["flush-element"],["append",["unknown",["title"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","group-wrapper"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isMajor"]]],null,3,2],["block",["if"],[["get",["shouldShowOwnershipCount"]]],null,1],["text","  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","group-wrapper-universe"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","universe-decorator"],["static-attr","src","/fe/lol-collections/images/grid/esport-event-name-decorator.png"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","group-name-major universe-title"],["flush-element"],["append",["unknown",["title"]],false],["close-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","universe-decorator"],["static-attr","src","/fe/lol-collections/images/grid/esport-event-name-decorator.png"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","group-description-major universe-description"],["flush-element"],["append",["unknown",["description"]],false],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "qdLD3XQD",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\components\\\\summoner-icon-header.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\styles\\\\components\\\\summoner-icon-header.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\components\\\\summoner-icon-header.js\\" "],["text","\\n"],["block",["if"],[["get",["isEventMajorHeader"]]],null,3,2]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","group-name-minor"],["flush-element"],["append",["unknown",["title"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","group-name-major"],["flush-element"],["append",["unknown",["title"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","group-wrapper"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isMajor"]]],null,1,0],["text","  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","group-wrapper-esports-event"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","esports-event-decorator"],["static-attr","src","/fe/lol-collections/images/grid/esport-event-name-decorator.png"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","group-name-major esports-event-title"],["flush-element"],["append",["unknown",["title"]],false],["close-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","esports-event-decorator"],["static-attr","src","/fe/lol-collections/images/grid/esport-event-name-decorator.png"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "E+kBlOOd",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\components\\\\collections-tooltip.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\components\\\\collections-tooltip.js\\" "],["text","\\n"],["open-element","lol-uikit-tooltip",[]],["flush-element"],["text","\\n  "],["yield","default"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":["default"],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "pzB3+mAa",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\components\\\\collections-sub-nav.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\styles\\\\components\\\\collections-sub-nav.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\components\\\\collections-sub-nav.js\\" "],["text","\\n"],["open-element","lol-uikit-navigation-bar",[]],["static-attr","type","nav-bar-secondary"],["static-attr","class","collections-sub-nav-container"],["flush-element"],["text","\\n"],["block",["link-to"],["champions"],null,10],["block",["link-to"],["skins"],[["disabledWhen"],[["get",["isSkinsDisabled"]]]],9],["block",["link-to"],["emotes"],[["disabledWhen"],[["get",["isEmotesDisabled"]]]],8],["block",["link-to"],["runes"],[["disabledWhen"],[["get",["isRunesDisabled"]]]],7],["block",["link-to"],["spells"],[["disabledWhen"],[["get",["isSpellsDisabled"]]]],4],["block",["link-to"],["items"],[["disabledWhen"],[["get",["isItemsDisabled"]]]],3],["block",["link-to"],["summoner-icons"],[["disabledWhen"],[["get",["isSummonerIconsDisabled"]]]],2],["block",["link-to"],["wards"],[["disabledWhen"],[["get",["isWardsDisabled"]]]],1],["block",["link-to"],["chromas"],[["disabledWhen"],[["get",["isChromasDisabled"]]]],0],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","lol-uikit-navigation-item",[]],["dynamic-attr","disabled",["unknown",["isChromasDisabled"]],null],["dynamic-attr","alert",["unknown",["hasChromasForReview"]],null],["flush-element"],["text","\\n      "],["append",["unknown",["tra","collections_sub_nav_collectibles_chromas"]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","lol-uikit-navigation-item",[]],["dynamic-attr","disabled",["unknown",["isWardsDisabled"]],null],["dynamic-attr","alert",["unknown",["hasWardsForReview"]],null],["flush-element"],["text","\\n      "],["append",["unknown",["tra","collections_sub_nav_collectibles_wards"]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","lol-uikit-navigation-item",[]],["dynamic-attr","disabled",["unknown",["isSummonerIconsDisabled"]],null],["dynamic-attr","alert",["unknown",["hasSummonerIconsForReview"]],null],["flush-element"],["text","\\n      "],["append",["unknown",["tra","collections_sub_nav_collectibles_icons"]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","lol-uikit-navigation-item",[]],["dynamic-attr","disabled",["unknown",["isItemsDisabled"]],null],["dynamic-attr","alert",["unknown",["hasItemsForReview"]],null],["flush-element"],["text","\\n      "],["append",["unknown",["tra","collections_sub_nav_items"]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","lol-uikit-navigation-item",[]],["dynamic-attr","disabled",["unknown",["isSpellsDisabled"]],null],["dynamic-attr","alert",["unknown",["hasSpellsForReview"]],null],["flush-element"],["text","\\n      "],["append",["unknown",["tra","collections_sub_nav_summoner_spells"]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n            "],["open-element","p",[]],["flush-element"],["text","\\n              "],["append",["unknown",["runesTooltipText"]],false],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["collections-tooltip"],null,[["tooltipId"],["level-requirement"]],5]],"locals":[]},{"statements":[["text","    "],["open-element","lol-uikit-navigation-item",[]],["dynamic-attr","disabled",["unknown",["isRunesDisabled"]],null],["dynamic-attr","alert",["unknown",["hasRunesForReview"]],null],["flush-element"],["text","\\n      "],["append",["unknown",["tra","collections_sub_nav_rune_book"]],false],["text","\\n"],["block",["if"],[["get",["isUnderRunesLevelRequirement"]]],null,6],["text","    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","lol-uikit-navigation-item",[]],["dynamic-attr","disabled",["unknown",["isEmotesDisabled"]],null],["dynamic-attr","alert",["unknown",["hasEmotesForReview"]],null],["flush-element"],["text","\\n      "],["append",["unknown",["tra","collections_sub_nav_emotes"]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","lol-uikit-navigation-item",[]],["dynamic-attr","disabled",["unknown",["isSkinsDisabled"]],null],["dynamic-attr","alert",["unknown",["hasSkinsForReview"]],null],["flush-element"],["text","\\n      "],["append",["unknown",["tra","collections_sub_nav_skins_viewer"]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","lol-uikit-navigation-item",[]],["flush-element"],["text","\\n      "],["append",["unknown",["tra","collections_sub_nav_collectibles_champions"]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Or2vKsCu",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\components\\\\number-fanfare.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\components\\\\number-fanfare.js\\" "],["text","\\n"],["append",["unknown",["numberCounter"]],false]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Ss54Cwdo",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\components\\\\collection-details.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\styles\\\\components\\\\collection-details.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\components\\\\collection-details.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","top-frame"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","collection-owned-totals"],["flush-element"],["text","\\n  "],["append",["helper",["number-fanfare"],null,[["class","total"],["total-owned total-count",["get",["totalOwned"]]]]],false],["text","\\n  "],["open-element","h6",[]],["static-attr","class","owned-total-header"],["flush-element"],["text","\\n    "],["append",["unknown",["headerString"]],false],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","collection-info-breakdown"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","collection-tier-information"],["flush-element"],["text","\\n"],["block",["each"],[["get",["rarities"]]],[["key"],["order"]],6],["text","  "],["close-element"],["text","\\n"],["block",["if"],[["get",["hasBottomSection"]]],null,4],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","bottom-frame"],["flush-element"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","              "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["static-attr","padding","small"],["flush-element"],["text","\\n                "],["open-element","p",[]],["static-attr","class","tooltip-content"],["flush-element"],["append",["unknown",["tra","control_pane_breakdown_tooltip_chroma"]],false],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","collection-chroma-info"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","icon-wrapper"],["flush-element"],["text","\\n"],["block",["collections-tooltip"],null,null,0],["text","            "],["open-element","img",[]],["static-attr","class","icon icon-chroma"],["static-attr","src","/fe/lol-collections/images/skins-viewer/icon-chroma.png"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","p",[]],["static-attr","class","legacy-count"],["flush-element"],["append",["unknown",["totalOwnedChromas"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["static-attr","padding","small"],["flush-element"],["text","\\n                "],["open-element","p",[]],["static-attr","class","tooltip-content"],["flush-element"],["append",["unknown",["legacyTooltipString"]],false],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","collection-legacy-info"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","icon-wrapper"],["flush-element"],["text","\\n"],["block",["collections-tooltip"],null,[["tooltipId"],["legacy-chroma-tooltip"]],2],["text","            "],["open-element","img",[]],["static-attr","class","icon icon-legacy"],["static-attr","src","/fe/lol-collections/images/control-panel/icon-legacy.png"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","p",[]],["static-attr","class","legacy-count"],["flush-element"],["append",["unknown",["totalOwnedLegacy"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","hr",[]],["static-attr","class","breakdown-separator separator"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","collection-bottom-info"],["flush-element"],["text","\\n"],["block",["if"],[["get",["hasLegacySection"]]],null,3],["block",["if"],[["get",["hasChromasSection"]]],null,1],["text","    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["static-attr","padding","small"],["flush-element"],["text","\\n              "],["open-element","p",[]],["static-attr","class","tooltip-content"],["flush-element"],["append",["helper",["get"],[["get",["tra"]],["get",["rarity","tooltipTraKey"]]],null],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","item"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","icon-wrapper"],["flush-element"],["text","\\n"],["block",["collections-tooltip"],null,[["tooltipId"],[["get",["rarity","borderRarity"]]]],5],["text","          "],["open-element","img",[]],["static-attr","class","icon clickable-icon"],["dynamic-attr","src",["unknown",["rarity","gemIcon"]],null],["modifier",["action"],[["get",[null]],"clickIcon",["get",["rarity","traKey"]]]],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","p",[]],["static-attr","class","count"],["flush-element"],["append",["unknown",["rarity","ownedCount"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":["rarity"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "xy6AlSO5",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\components\\\\collection-controls.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\styles\\\\components\\\\collection-controls.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\components\\\\collection-controls.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","collection-search"],["flush-element"],["text","\\n  "],["open-element","lol-uikit-flat-input",[]],["flush-element"],["text","\\n    "],["append",["helper",["input"],null,[["type","maxlength","class","value","placeholder"],["search","50","collection-search-input",["get",["searchTerm"]],["get",["tra","control_panel_search_placeholder"]]]]],false],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["block",["unless"],[["get",["isGroupByMyCollection"]]],null,18],["text","\\n"],["open-element","div",[]],["static-attr","class","collection-grouping-sorting"],["flush-element"],["text","\\n  "],["open-element","lol-uikit-framed-dropdown",[]],["static-attr","class","collection-grouping-options"],["flush-element"],["text","\\n"],["block",["if"],[["get",["canGroupByMyCollection"]]],null,16],["block",["if"],[["get",["canGroupByAll"]]],null,15],["block",["if"],[["get",["canGroupByChampion"]]],null,14],["block",["if"],[["get",["canGroupBySet"]]],null,13],["block",["if"],[["get",["canGroupByEsports"]]],null,12],["block",["if"],[["get",["canGroupByTier"]]],null,11],["text","  "],["close-element"],["text","\\n\\n  "],["open-element","lol-uikit-framed-dropdown",[]],["static-attr","class","collection-sort-options"],["flush-element"],["text","\\n"],["block",["if"],[["get",["canSortByAcquisitionDate"]]],null,10],["block",["if"],[["get",["canSortByEvent"]]],null,9],["block",["if"],[["get",["canSortByTeam"]]],null,8],["block",["if"],[["get",["canSortByReleaseDate"]]],null,7],["block",["if"],[["get",["canSortByMastery"]]],null,6],["block",["if"],[["get",["canSortByMostRare"]]],null,5],["block",["if"],[["get",["canSortByMostOwned"]]],null,4],["block",["if"],[["get",["canSortByMostComplete"]]],null,3],["block",["if"],[["get",["canSortByAlphabetical"]]],null,2],["block",["if"],[["get",["canSortByUniverse"]]],null,1],["block",["if"],[["get",["canSortByTier"]]],null,0],["text","  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortByTier"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"select","sorting","tier"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","control_pane_sorting_rarity_descending"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortByUniverse"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"select","sorting","universe"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","control_pane_sorting_universe_title_alpha_ascending"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortByAlphabetical"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"select","sorting","alphabetical"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","control_pane_sorting_alphabetical_ascending"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortByMostComplete"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"select","sorting","mostComplete"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","control_pane_sorting_most_complete_percentage"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortByMostOwned"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"select","sorting","mostOwned"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","control_pane_sorting_most_owned"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortByMostRare"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"select","sorting","mostRare"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","control_pane_sorting_most_rare"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortByMastery"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"select","sorting","mastery"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","control_pane_sorting_mastery_descending"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortByReleaseDate"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"select","sorting","releaseDate"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","control_pane_sorting_release_date_descending"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortByTeam"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"select","sorting","team"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","control_panel_sorting_team_name_ascending"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortByEvent"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"select","sorting","event"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","control_panel_sorting_event_name_ascending"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isSortByAcquisitionDate"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"select","sorting","acquisitionDate"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","control_pane_sorting_purchase_date_descending"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isGroupByTier"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"select","grouping","tier"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","control_panel_grouping_by_tier"]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isGroupByEsports"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"select","grouping","esports"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","control_panel_grouping_by_esports"]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isGroupBySet"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"select","grouping","set"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","control_panel_grouping_by_set"]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isGroupByChampion"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"select","grouping","champion"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","control_panel_grouping_by_champion"]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isGroupByAll"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"select","grouping","all"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","control_panel_grouping_all"]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","selected",["unknown",["isGroupByMyCollection"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"select","grouping","myCollection"],null],null],["flush-element"],["text","\\n        "],["append",["unknown",["tra","control_panel_grouping_my_collection"]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-flat-checkbox",[]],["dynamic-attr","class",["concat",["collection-availability-filter ",["helper",["unless"],[["get",["isUnownedShown"]],"disabled"],null]]]],["flush-element"],["text","\\n        "],["append",["helper",["input"],null,[["slot","type","name","checked","disabled"],["input","checkbox","isUnavailableShown",["get",["isUnavailableShown"]],["helper",["unless"],[["get",["isUnownedShown"]],"true"],null]]]],false],["text","\\n        "],["open-element","label",[]],["static-attr","slot","label"],["static-attr","class","collection-checkbox-label"],["static-attr","for","isUnavailableShown"],["flush-element"],["append",["unknown",["tra","control_panel_show_unavailable"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","collection-filters"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-checkbox",[]],["static-attr","class","collection-ownership-filter"],["flush-element"],["text","\\n      "],["append",["helper",["input"],null,[["slot","type","name","checked"],["input","checkbox","isUnownedShown",["get",["isUnownedShown"]]]]],false],["text","\\n      "],["open-element","label",[]],["static-attr","slot","label"],["static-attr","class","collection-checkbox-label"],["static-attr","for","isUnownedShown"],["flush-element"],["append",["unknown",["tra","control_panel_show_unowned"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n"],["block",["unless"],[["get",["disableAvailabilityFilter"]]],null,17],["text","  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "U+ob3DWU",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\components\\\\collection-group-header.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\components\\\\collection-group-header.js\\" "],["text","\\n"],["block",["if"],[["get",["isMajor"]]],null,7],["text","\\n"],["block",["if"],[["get",["hasCustomHeader"]]],null,5,4]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["open-element","span",[]],["static-attr","class","group-total-count"],["flush-element"],["text","("],["append",["unknown",["totalItems"]],false],["text",")"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",["group-breakdown ",["helper",["unless"],[["get",["isMajor"]],"minor-breakdown"],null]]]],["flush-element"],["text","\\n        "],["open-element","span",[]],["static-attr","class","group-owned-count"],["flush-element"],["append",["unknown",["numItemsOwned"]],false],["text"," / "],["append",["unknown",["availableItems"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["shouldShowTotalCount"]]],null,0],["text","      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","group-name-minor"],["flush-element"],["append",["unknown",["title"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","group-name-major"],["flush-element"],["append",["unknown",["title"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\n  "],["open-element","div",[]],["static-attr","class","group-wrapper"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isMajor"]]],null,3,2],["block",["if"],[["get",["shouldShowOwnershipCount"]]],null,1],["text","  "],["close-element"],["text","\\n\\n"]],"locals":[]},{"statements":[["text","\\n  "],["append",["helper",["component"],[["get",["customizerComponent"]]],[["title","description","shouldShowOwnershipCount","numItemsOwned","availableItems","totalItems","isMajor","groupBy","sortBy"],[["get",["title"]],["get",["description"]],["get",["shouldShowOwnershipCount"]],["get",["numItemsOwned"]],["get",["availableItems"]],["get",["totalItems"]],["get",["isMajor"]],["get",["groupBy"]],["get",["sortBy"]]]]],false],["text","\\n\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","group-separator"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["index"]]],null,6]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "vbteehg5",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\components\\\\replay-button.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\styles\\\\components\\\\replay-button.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\components\\\\replay-button.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","replay-button-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","id","replay-button-preload"],["flush-element"],["close-element"],["text","\\n    "],["open-element","span",[]],["static-attr","draggable","false"],["dynamic-attr","class",["concat",["replay-button-img ",["helper",["if"],[["get",["canReplay"]],"enabled","disabled"],null]]]],["modifier",["action"],[["get",[null]],"replay"],[["on"],["click"]]],["modifier",["action"],[["get",[null]],"hoverButton"],[["on"],["mouseEnter"]]],["flush-element"],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "3IQKeMP8",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\components\\\\video-wrapper.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\styles\\\\components\\\\video-wrapper.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\components\\\\video-wrapper.js\\" "],["text","\\n"],["open-element","video",[]],["dynamic-attr","class",["concat",["collection-spell-video spell-video-",["unknown",["spellId"]]," video-fade"]]],["dynamic-attr","src",["concat",[["unknown",["src"]]]]],["static-attr","autoplay","true"],["static-attr","preload","auto"],["flush-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "AdQSGL26",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\style-filter.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\style-filter.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\style-filter.js\\" "],["text","\\n"],["open-element","lol-perks-style-filter-checkbox",[]],["dynamic-attr","checked",["helper",["if"],[["get",["filteredStyle"]],null,""],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"onStyleClick",null],null],null],["flush-element"],["text","\\n"],["block",["collections-tooltip"],null,[["tooltipId"],["show-all-tooltip"]],2],["close-element"],["text","\\n"],["block",["each"],[["get",["styles"]]],null,1]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["static-attr","padding","none"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","perks-style-filter-tooltip"],["flush-element"],["text","\\n          "],["append",["unknown",["style","tooltip"]],false],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","lol-perks-style-filter-checkbox",[]],["dynamic-attr","style-name",["unknown",["style","idName"]],null],["dynamic-attr","checked",["helper",["if"],[["helper",["eq"],[["get",["style","idName"]],["get",["filteredStyle"]]],null],"",null],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"onStyleClick",["get",["style","idName"]]],null],null],["flush-element"],["text","\\n"],["block",["collections-tooltip"],null,[["tooltipId"],[["helper",["concat"],["show-tooltip",["get",["style","idName"]]],null]]],0],["text","  "],["close-element"],["text","\\n"]],"locals":["style"]},{"statements":[["text","    "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["static-attr","padding","none"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","perks-style-filter-tooltip"],["flush-element"],["text","\\n        "],["append",["unknown",["tra","perks_show_all_pages"]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "tkOWG7Bd",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\inventory-cards.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\inventory-cards.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\inventory-cards.js\\" "],["text","\\n"],["comment"," ugly markup eliminates spaces in inline-block "],["text","\\n"],["block",["if"],[["get",["showAddPageCard"]]],null,5],["block",["if"],[["get",["shouldRenderList"]]],null,4]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","inventory-card-wrapper"],["flush-element"],["text","\\n      "],["open-element","a",[]],["static-attr","href","#"],["modifier",["action"],[["get",[null]],"editPage",["get",["page","id"]]]],["flush-element"],["text","\\n      "],["append",["helper",["inventory-card"],[["get",["page"]],["get",["index"]],["get",["customPageRenamingDisabled"]],["get",["restrictedPageNamesEnabled"]]],null],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":["page","index"]},{"statements":[["text","              "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n                "],["open-element","p",[]],["flush-element"],["text","\\n                  "],["append",["unknown",["tra","perks_page_mass_delete_x"]],false],["text","\\n                "],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","lol-perks-garbage-button",[]],["static-attr","class","inventory-cards-delete"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"deletePageClick",["get",["page"]]],null],null],["flush-element"],["text","\\n"],["block",["collections-tooltip"],null,[["tooltipId"],[["helper",["concat"],["inventory-cards-delete",["get",["page","id"]]],null]]],1],["text","          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","inventory-card-wrapper sortable"],["flush-element"],["text","\\n        "],["open-element","a",[]],["static-attr","href","#"],["modifier",["action"],[["get",[null]],"editPage",["get",["page","id"]]]],["flush-element"],["text","\\n          "],["append",["helper",["inventory-card"],[["get",["page"]],["get",["index"]],["get",["customPageRenamingDisabled"]],["get",["restrictedPageNamesEnabled"]],["get",["dragging"]]],null],false],["text","\\n        "],["close-element"],["text","\\n"],["block",["if"],[["get",["massDeleteEnabled"]]],null,2],["text","      "],["close-element"],["text","\\n"]],"locals":["page","index"]},{"statements":[["text","  "],["open-element","span",[]],["static-attr","id","inventory-cards-sortable"],["flush-element"],["text","\\n"],["block",["each"],[["get",["customPages"]]],[["key"],["id"]],3],["text","  "],["close-element"],["text","\\n\\n"],["block",["each"],[["get",["defaultPages"]]],null,0]],"locals":[]},{"statements":[["text","  "],["open-element","a",[]],["static-attr","href","#"],["static-attr","class","inventory-card-wrapper"],["modifier",["action"],[["get",[null]],"addPage"]],["flush-element"],["text","\\n    "],["append",["helper",["inventory-card"],null,[["createNew"],[true]]],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "xBsXWvdN",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\inventory-card.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\inventory-card.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\inventory-card.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","inventory-card-bg-mask"],["flush-element"],["text","\\n"],["block",["if"],[["get",["createNew"]]],null,12,11],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","inventory-card-gradient"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["inventory-card-content ",["unknown",["primaryStyle"]]]]],["flush-element"],["text","\\n\\n"],["block",["unless"],[["get",["createNew"]]],null,10],["text","\\n\\n"],["block",["if"],[["get",["page","isDefaultPage"]]],null,7],["block",["if"],[["get",["page","autoModifiedSelections","length"]]],null,6],["text","  "],["open-element","div",[]],["static-attr","class","inventory-card-title"],["flush-element"],["text","\\n    "],["append",["unknown",["pageName"]],false],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["inventory-card-icons ",["unknown",["primaryStyle"]]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["page","keystone"]]],null,5],["block",["if"],[["get",["page","subStyle"]]],null,4],["block",["if"],[["get",["createNew"]]],null,3],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["block",["unless"],[["get",["isValid"]]],null,2],["text","\\n"],["block",["if"],[["get",["showCometBorder"]]],null,1],["text","\\n"],["block",["if"],[["get",["page","isDefaultPage"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","inventory-card-default"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","lol-uikit-comet-border",[]],["static-attr","class","inventory-card-create-border"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","inventory-card-invalid"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","inventory-card-choose-your-runes"],["flush-element"],["append",["unknown",["tra","perks_page_add_button_sub_label"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","inventory-card-substyle"],["flush-element"],["text","\\n        "],["open-element","div",[]],["dynamic-attr","class",["concat",["inventory-card-substyle-inner ",["unknown",["page","subStyle","idName"]]]]],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","inventory-card-keystone"],["dynamic-attr","style",["concat",["background-image: url(",["unknown",["page","keystone","iconPath"]],")"]]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","inventory-card-updated"],["flush-element"],["open-element","lol-perks-glowing-dot",[]],["static-attr","class","inventory-card-dot"],["flush-element"],["close-element"],["append",["unknown",["tra","perks_updated"]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","inventory-card-preset"],["flush-element"],["text","[ "],["append",["unknown",["tra","perks_preset"]],false],["text"," ]"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","li",[]],["static-attr","class","inventory-card-li"],["flush-element"],["append",["unknown",["perk","name"]],false],["close-element"],["text","\\n"]],"locals":["perk"]},{"statements":[["text","          "],["open-element","li",[]],["dynamic-attr","class",["concat",["inventory-card-li ",["helper",["if"],[["helper",["eq"],[["get",["perk","id"]],["get",["page","keystone","id"]]],null],"keystone"],null]]]],["flush-element"],["append",["unknown",["perk","name"]],false],["close-element"],["text","\\n"]],"locals":["perk"]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","inventory-card-details"],["flush-element"],["text","\\n      "],["open-element","span",[]],["dynamic-attr","class",["concat",["inventory-card-style-name ",["unknown",["primaryStyle"]]]]],["flush-element"],["append",["unknown",["page","primaryStyle","name"]],false],["close-element"],["text","\\n      "],["open-element","ul",[]],["static-attr","class","inventory-card-ul"],["flush-element"],["text","\\n"],["block",["each"],[["get",["page","selectedPrimaryPerks"]]],null,9],["text","      "],["close-element"],["text","\\n      "],["open-element","span",[]],["dynamic-attr","class",["concat",["inventory-card-style-name ",["unknown",["page","subStyle","idName"]]]]],["flush-element"],["append",["unknown",["page","subStyle","name"]],false],["close-element"],["text","\\n      "],["open-element","ul",[]],["static-attr","class","inventory-card-ul"],["flush-element"],["text","\\n"],["block",["each"],[["get",["page","selectedSplashedPerks"]]],null,8],["text","      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","inventory-card-bg"],["dynamic-attr","style",["unknown",["backgroundStyle"]],null],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","video",[]],["static-attr","class","inventory-card-bg"],["static-attr","autoplay",""],["static-attr","loop",""],["flush-element"],["text","\\n      "],["open-element","source",[]],["static-attr","src","/fe/lol-collections/perks/video/inventory-card/CreateCard.webm"],["static-attr","type","video/webm"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Nqvsoat5",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\inventory-page.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\inventory-page.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\inventory-page.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","inventory-controls"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","inventory-controls-left"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","inventory-search-holder"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","inventory-magnifier"],["flush-element"],["close-element"],["text","\\n      "],["append",["helper",["input"],null,[["class","placeholder","value"],["inventory-search",["get",["tra","perks_search"]],["get",["searchValue"]]]]],false],["text","\\n    "],["close-element"],["text","\\n    "],["append",["helper",["style-filter"],[["get",["filteredStyle"]],["helper",["action"],[["get",[null]],"styleFilterClick"],null]],null],false],["text","\\n"],["block",["if"],[["get",["showHidePresetPagesCheckbox"]]],null,4],["text","  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","inventory-controls-right"],["flush-element"],["text","\\n    "],["open-element","p",[]],["static-attr","class","inventory-controls-counter"],["flush-element"],["text","\\n      "],["append",["unknown",["numPages"]],false],["text","\\n      "],["open-element","span",[]],["static-attr","class","inventory-controls-counter-divider"],["flush-element"],["text","\\n        /\\n      "],["close-element"],["text","\\n      "],["append",["unknown",["maxPages"]],false],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","lol-uikit-flat-button",[]],["static-attr","id","inventory-create-new-button"],["dynamic-attr","disabled",["helper",["if"],[["get",["canAddPage"]],false,true],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"addPage"],null],null],["flush-element"],["text","\\n"],["block",["if"],[["get",["showAddPageCard"]]],null,3],["text","      "],["append",["unknown",["tra","perks_page_add_button_label"]],false],["text","\\n    "],["close-element"],["text","\\n"],["block",["unless"],[["get",["canAddPage"]]],null,2],["text","    "],["open-element","lol-perks-switch",[]],["dynamic-attr","active",["helper",["if"],[["get",["massDeleteEnabled"]],"",null],null],null],["static-attr","class","inventory-mass-delete-button"],["dynamic-attr","disabled",["helper",["if"],[["get",["showMassDeleteButton"]],null,""],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"massDeleteButtonClick"],null],null],["flush-element"],["text","\\n"],["block",["collections-tooltip"],null,[["tooltipId"],["mass-delete-tooltip"]],0],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["append",["helper",["inventory-cards"],[["get",["store","perksBook"]],["get",["customPages"]],["get",["defaultPages"]],["get",["showAddPageCard"]],["get",["massDeleteEnabled"]],["get",["restrictedPageNamesEnabled"]],["get",["reorderingEnabled"]],["get",["customPageRenamingDisabled"]],["helper",["action"],[["get",[null]],"deletePageClick"],null]],null],false]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n          "],["open-element","p",[]],["flush-element"],["text","\\n            "],["append",["unknown",["massDeleteTooltip"]],false],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n          "],["open-element","p",[]],["flush-element"],["text","\\n            "],["append",["unknown",["addPageDisabledTooltipText"]],false],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["collections-tooltip"],null,[["tooltipId"],["add-page-disabled-tooltip"]],1]],"locals":[]},{"statements":[["text","        "],["open-element","lol-uikit-comet-border",[]],["static-attr","slot","comet-border"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-flat-checkbox",[]],["static-attr","class","inventory-controls-preset-toggle"],["static-attr","id","inventory-hide-preset-toggle"],["flush-element"],["text","\\n        "],["open-element","input",[]],["static-attr","slot","input"],["static-attr","type","checkbox"],["dynamic-attr","onchange",["helper",["action"],[["get",[null]],"toggleShowPresetPages"],null],null],["dynamic-attr","checked",["unknown",["hidePresetPages"]],null],["flush-element"],["close-element"],["text","\\n        "],["open-element","label",[]],["static-attr","slot","label"],["static-attr","for","hidePresetPages"],["flush-element"],["text","\\n          "],["append",["unknown",["tra","perks_hide_preset_pages"]],false],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(260)) && s.__esModule ? s : {
                    default: s
                };
            n(261);
            const l = (0, o.dataBinding)("/lol-game-data", o.socket),
                a = o.AudioPlugin.getChannel("sfx-ui");
            var r = o.Ember.Component.extend({
                layout: i.default,
                classNames: ["skins-preview"],
                name: "SkinsPreview",
                loaded: !1,
                spellsOrder: ["P", "Q", "W", "E", "R"],
                videoPlaying: !0,
                selectedSkinIndex: null,
                selectedSkinTierIndex: null,
                selectedSpellKey: "P",
                skins: [],
                cdn: "https://d28xe8vt774jo5.cloudfront.net/",
                spells: o.Ember.computed("selectedSkin", (function() {
                    const e = this.get("selectedSkin");
                    return {
                        P: e?.passive,
                        Q: e?.spells?.[0],
                        W: e?.spells?.[1],
                        E: e?.spells?.[2],
                        R: e?.spells?.[3]
                    }
                })),
                selectedSpell: o.Ember.computed("selectedSpellKey", "spells", (function() {
                    const e = this.get("selectedSpellKey"),
                        t = this.get("spells"),
                        n = t?.[e],
                        s = `${this.get("cdn")}${n?.abilityVideoPath}`,
                        o = n?.abilityIconPath;
                    return {
                        video: s,
                        image: o
                    }
                })),
                selectedSkin: o.Ember.computed("selectedSkinIndex", "skins", (function() {
                    return this.get("skins")?.[this.get("selectedSkinIndex")]
                })),
                splash: o.Ember.computed("selectedSkinTier", (function() {
                    return this.get("selectedSkinTier")?.splashPath
                })),
                skinTiers: o.Ember.computed.alias("selectedSkin.questSkinInfo.tiers"),
                selectedSkinTier: o.Ember.computed("selectedSkinTierIndex", "skinTiers", (function() {
                    return this.get("skinTiers")?.[this.get("selectedSkinTierIndex")]
                })),
                skinName: o.Ember.computed("selectedSkin", (function() {
                    return this.get("selectedSkin")?.questSkinInfo?.name.replace(this.get("selectedSkin.championName"), "")
                })),
                async init() {
                    this._super(...arguments);
                    const e = await l.get("/assets/v1/champions/147.json"),
                        t = await l.get("/assets/v1/champions/103.json"),
                        n = {
                            ...t.skins.find((e => "kTieredSkin" === e?.questSkinInfo?.productType || "kQuestSkin" === e?.questSkinInfo?.productType)),
                            championName: t.name,
                            spells: t.spells,
                            passive: t.passive
                        },
                        s = {
                            ...e.skins.find((e => "kTieredSkin" === e?.questSkinInfo?.productType || "kQuestSkin" === e?.questSkinInfo?.productType)),
                            championName: e.name,
                            spells: e.spells,
                            passive: e.passive
                        };
                    this.set("skins", [s, n]), this.set("selectedSkinIndex", 0), this.set("selectedSkinTierIndex", 0)
                },
                didInsertElement() {
                    this.element.querySelector("#skins-preview-video-element").addEventListener("ended", (() => {
                        this.set("videoPlaying", !1)
                    })), setTimeout((() => {
                        this.set("loaded", !0)
                    }), 0)
                },
                willDestroyElement() {
                    this.element.querySelector("#skins-preview-video-element").removeEventListener("ended")
                },
                actions: {
                    tierClicked(e) {
                        e !== this.get("selectedSkinTierIndex") && (a.playSound("/fe/lol-collections/audio/sfx-uikit-grid-click.ogg"), this.set("selectedSkinTierIndex", e))
                    },
                    skinClicked(e) {
                        e !== this.get("selectedSkinIndex") && (a.playSound("/fe/lol-collections/audio/sfx-uikit-grid-click.ogg"), this.set("selectedSkinIndex", e), this.set("selectedSkinTierIndex", 0), this.set("selectedSpellKey", "P"), this.set("videoPlaying", !0))
                    },
                    toggleVideo() {
                        const e = this.get("videoPlaying");
                        this.set("videoPlaying", !e), e ? this.element.querySelector("#skins-preview-video-element").pause() : this.element.querySelector("#skins-preview-video-element").play()
                    },
                    setSelectedSpellKey(e) {
                        this.set("selectedSpellKey", e), this.set("videoPlaying", !0)
                    }
                }
            });
            t.default = r
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "gBDQMJt3",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\templates\\\\components\\\\skins-preview.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\styles\\\\components\\\\skins-preview.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\app\\\\components\\\\skins-preview.js\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["skins-preview__container ",["helper",["if"],[["get",["loaded"]],"loaded"],null]]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","skins-preview__background"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","skins-preview__background-gradient-right"],["flush-element"],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","skins-preview__background-gradient-bottom"],["flush-element"],["close-element"],["text","\\n        "],["append",["helper",["uikit-background-switcher"],null,[["src"],[["get",["splash"]]]]],false],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","skins-preview__left"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","skins-preview__transformations-container"],["flush-element"],["text","\\n            "],["open-element","hr",[]],["static-attr","class","skins-preview__transformations-bar"],["flush-element"],["close-element"],["text","\\n"],["block",["each"],[["get",["skinTiers"]]],null,3],["text","        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","skins-preview__left-title-container"],["flush-element"],["text","\\n            "],["open-element","h5",[]],["static-attr","class","typekit-h5"],["flush-element"],["append",["unknown",["skinName"]],false],["close-element"],["text","\\n            "],["open-element","h2",[]],["static-attr","class","typekit-h2"],["flush-element"],["append",["unknown",["selectedSkin","championName"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","skins-preview__left-skin-picker-container"],["flush-element"],["text","\\n"],["block",["each"],[["get",["skins"]]],null,2],["text","        "],["close-element"],["text","\\n    "],["close-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","skins-preview__right"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","skins-preview__video"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","skins-preview__video-container"],["flush-element"],["text","\\n                "],["open-element","video",[]],["static-attr","id","skins-preview-video-element"],["dynamic-attr","src",["unknown",["selectedSpell","video"]],null],["static-attr","preload",""],["static-attr","autoplay",""],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","div",[]],["dynamic-attr","class",["concat",["skins-preview__video-controls ",["helper",["if"],[["get",["videoPlaying"]]," pause","play"],null]]]],["dynamic-attr","onClick",["helper",["action"],[["get",[null]],"toggleVideo"],null],null],["flush-element"],["text","\\n            "],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","skins-preview__abilities"],["flush-element"],["text","\\n"],["block",["each"],[["get",["spellsOrder"]]],null,1],["text","        "],["close-element"],["text","\\n\\n        "],["open-element","img",[]],["static-attr","class","skins-preview__section-separator"],["static-attr","src","/fe/lol-static-assets/images/skins-preview/section-separator.svg"],["flush-element"],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","skins-preview__description"],["flush-element"],["text","\\n            "],["open-element","lol-uikit-scrollable",[]],["flush-element"],["text","\\n                "],["append",["unknown",["selectedSkinTier","description"]],false],["text","\\n            "],["close-element"],["text","\\n        "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","            "],["open-element","img",[]],["static-attr","src","/fe/lol-static-assets/images/skins-preview/separator.svg"],["static-attr","class","separator"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","ability"],["dynamic-attr","onClick",["helper",["action"],[["get",[null]],"setSelectedSpellKey",["get",["spell"]]],null],null],["flush-element"],["text","\\n                "],["open-element","div",[]],["dynamic-attr","class",["concat",["ability-frame ",["helper",["if"],[["helper",["eq"],[["get",["selectedSpellKey"]],["get",["spell"]]],null]," selected"],null]]]],["flush-element"],["open-element","img",[]],["dynamic-attr","src",["helper",["get"],[["helper",["get"],[["get",["spells"]],["get",["spell"]]],null],"abilityIconPath"],null],null],["flush-element"],["close-element"],["close-element"],["text","\\n                "],["open-element","h4",[]],["flush-element"],["append",["get",["spell"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n"],["block",["if"],[["helper",["eq"],[["get",["spell"]],"P"],null]],null,0]],"locals":["spell"]},{"statements":[["text","            "],["open-element","div",[]],["dynamic-attr","class",["concat",["skins-preview__left-skin-picker-image-container ",["helper",["if"],[["helper",["eq"],[["get",["selectedSkinIndex"]],["get",["index"]]],null]," active"],null]]]],["dynamic-attr","onClick",["helper",["action"],[["get",[null]],"skinClicked",["get",["index"]]],null],null],["flush-element"],["text","\\n                "],["open-element","div",[]],["static-attr","class","overlay"],["flush-element"],["close-element"],["text","\\n                "],["open-element","img",[]],["dynamic-attr","src",["unknown",["skin","questSkinInfo","tilePath"]],null],["dynamic-attr","alt",["unknown",["skin","questSkinInfo","name"]],null],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":["skin","index"]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","skins-preview__transformations-item"],["flush-element"],["text","\\n                "],["open-element","div",[]],["dynamic-attr","class",["concat",["image ",["helper",["if"],[["helper",["eq"],[["get",["selectedSkinTierIndex"]],["get",["index"]]],null]," selected"],null]]]],["dynamic-attr","onClick",["helper",["action"],[["get",[null]],"tierClicked",["get",["index"]]],null],null],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":["tier","index"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function() {
                const e = new o.default;
                return s.default.add({
                    ItemSetsApi: e
                }), e
            };
            var s = i(n(1)),
                o = i(n(263));

            function i(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = (s = n(264)) && s.__esModule ? s : {
                default: s
            };
            t.default = class {
                constructor() {
                    this._privateApi = (0, o.default)()
                }
                getItemSetsScreen() {
                    return this._privateApi.getMainEmberApplication()
                }
                removeItemSetsScreen() {
                    this._privateApi.destroyMainEmberApplication()
                }
                saveItemSet(e) {
                    return this._privateApi.saveItemSet(e)
                }
                showItemSetModal(e) {
                    this._privateApi.showItemSetModal(e)
                }
                hideItemSetModal(e) {
                    this._privateApi.hideItemSetModal(e)
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function() {
                void 0 === r && (r = new a);
                return r
            };
            var s, o = n(1),
                i = n(266),
                l = (s = n(267)) && s.__esModule ? s : {
                    default: s
                };
            class a {
                constructor() {
                    this._tra = o.tra, this._traService = o.traService, this._application = null, (0, i.registerEmberApplication)(o.traService), this._registerStandaloneComponents(o.traService)
                }
                getMainEmberApplication() {
                    return this._application || (this._application = (0, i.createEmberApplication)()), this._application
                }
                destroyMainEmberApplication() {
                    this._application && (this._application.onRemove(), this._application = null)
                }
                saveItemSet(e) {
                    return (0, l.default)(this._tra, e)
                }
                showItemSetModal(e) {
                    this._itemSetModalApp ? this._itemSetModalApp.show(e) : this._initItemSetModalApp().then((t => t.show(e)))
                }
                hideItemSetModal(e) {
                    this._itemSetModalApp && this._itemSetModalApp.hide(e)
                }
                _initItemSetModalApp() {
                    return this._itemSetModalApp ? Promise.resolve(this._itemSetModalApp) : new Promise((e => {
                        Promise.resolve().then((() => {
                            e(n(265).default)
                        }).bind(null, n)).catch(n.oe)
                    })).then((e => (this._itemSetModalApp = new e(this._traService), this._itemSetModalApp)))
                }
                _registerStandaloneComponents(e) {
                    o.EmberApplicationFactory.setFactoryDefinition({
                        name: "ItemTooltipComponent",
                        ComponentFactory: o.ComponentFactory,
                        tra: e,
                        ItemTooltipComponent: n(149).default
                    }), o.EmberApplicationFactory.setFactoryDefinition({
                        name: "ItemSetMenuComponent",
                        ComponentFactory: o.ComponentFactory,
                        tra: e,
                        ItemSetMenuComponent: n(143).default
                    }), o.EmberApplicationFactory.setFactoryDefinition({
                        name: "PreferredSlotsMenuComponent",
                        ComponentFactory: o.ComponentFactory,
                        tra: e,
                        ItemSetMenuComponent: n(156).default
                    }), o.EmberApplicationFactory.setFactoryDefinition({
                        name: "rcp-fe-lol-item-set-import-modal",
                        tra: e,
                        ComponentFactory: o.ComponentFactory,
                        RcpFeLolItemSetImportModalComponent: n(140).default
                    })
                }
            }
            let r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const o = (0, s.dataBinding)("/lol-gameflow", (0, s.getProvider)().getSocket()),
                i = new CustomEvent("screenBumped"),
                l = new CustomEvent("screenReleased");
            t.default = class {
                constructor(e) {
                    this._init(e)
                }
                show(e) {
                    if (this._component) this._componentParams.setProperties(e);
                    else {
                        e.beforeHide || (e.beforeHide = Promise.resolve()), this._componentParams.setProperties(e);
                        const t = s.ComponentFactory.create("ItemSetModalRootComponent", this._componentParams);
                        this._contentElement.appendChild(t.domNode), this._component = t
                    }
                    this._screenRoot.bump(), this._component.domNode.dispatchEvent(i)
                }
                hide(e) {
                    if (e && e.forceHide) this._screenRoot.release();
                    else {
                        const e = this._componentParams.get("beforeHide");
                        (e instanceof Function ? e() : Promise.resolve()).then((() => {
                            this._screenRoot.release(), this._component.domNode.dispatchEvent(l)
                        })).catch((e => {
                            s.logger.warning("Error in before hide promise for item set modal: ", e), this._screenRoot.release()
                        }))
                    }
                }
                _init(e) {
                    const t = s.Viewport.getApiKey("rcp-fe-lol-item-sets_api_key");
                    this._screenRoot = s.Viewport.overlay().getScreenRoot(t, "rcp-fe-lol-item-sets-modal"), this._contentElement = document.createElement("lol-uikit-full-page-modal"), this._contentElement.className = "rcp-fe-lol-item-sets-modal-content", this._screenRoot.getElement().appendChild(this._contentElement), this._contentElement.addEventListener("close-modal", (() => this.hide())), s.EmberApplicationFactory.setFactoryDefinition({
                        name: "ItemSetModalRootComponent",
                        tra: e,
                        ComponentFactory: s.ComponentFactory,
                        ItemSetModalRootComponent: n(146).default,
                        ItemBuildTreeComponent: n(116).default,
                        ItemSetEditorComponent: n(129).default,
                        RecommendedSetViewerComponent: n(159).default,
                        ItemFilterPanelComponent: n(122).default,
                        ItemGridComponent: n(125).default,
                        ChampionSelectorComponent: n(107).default,
                        CircleButtonComponent: n(113).default,
                        ItemSetsService: n(162).default
                    }), this._componentParams = s.Ember.Object.create(), this._subscribeNavigationEvents()
                }
                _subscribeNavigationEvents() {
                    o.observe("/v1/session", this, (e => {
                        const t = e && e.phase,
                            n = this._gameFlowPhase;
                        "ChampSelect" === t && "ChampSelect" !== n && this.hide(), "Lobby" === t && "Lobby" !== n && this.hide(), this._gameFlowPhase = t
                    }))
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createEmberApplication = function() {
                return s.ComponentFactory.create(c)
            }, t.registerEmberApplication = function(e) {
                s.EmberApplicationFactory.setFactoryDefinition(c, {
                    ComponentFactory: s.ComponentFactory,
                    ItemsRootComponent: o.default,
                    ChampionSelectorComponent: i.default,
                    CircleButtonComponent: l.default,
                    tra: e,
                    ItemSetsService: a.default
                })
            };
            var s = n(1),
                o = r(n(152)),
                i = r(n(107)),
                l = r(n(113)),
                a = r(n(162));

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const c = "rcp-fe-lol-item-sets-ember"
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function(e, t) {
                const n = (0, s.dataBinding)("/lol-item-sets", (0, s.getProvider)().getSocket()),
                    i = (0, s.dataBinding)("/telemetry", (0, s.getProvider)().getSocket()),
                    l = (0, s.dataBinding)("/lol-platform-config", (0, s.getProvider)().getSocket()),
                    c = (0, s.dataBinding)("/lol-summoner", (0, s.getProvider)().getSocket());
                return s.bluebird.resolve().then((() => c.get("/v1/current-summoner"))).then((e => s.bluebird.props({
                    summonerId: s.bluebird.resolve(e.summonerId),
                    myItemSets: n.get(`/v1/item-sets/${e.summonerId}/sets`),
                    maxItemSets: l.get("/v1/namespaces/ItemSets/MaxItemSets").then((e => e || o.MAX_ITEM_SETS_PER_PLAYER)).catch((() => (s.logger.warning(`Can't get platform config ItemSets/MaxItemSets, using default ${o.MAX_ITEM_SETS_PER_PLAYER}`), o.MAX_ITEM_SETS_PER_PLAYER)))
                }))).then((o => {
                    const l = JSON.parse(JSON.stringify(o));
                    t.name = r(l.myItemSets.itemSets.map((e => e.title)), t.name);
                    const c = s.UIKit.getTemplateHelper().contentBlockDialog(e.get("item_sets_import_confirm_title"), e.formatString("item_sets_import_confirm_text", {
                            name: t.name
                        }), "dialog-medium", "confirm-friend-actions"),
                        d = s.ModalManager.add({
                            type: "rcp-fe-lol-item-set-import-modal",
                            data: {
                                _closeModalCallback: () => {
                                    s.ModalManager.remove(d)
                                },
                                _importCallback: () => a(e, t, l, n, i),
                                content: c,
                                itemSetApi: s.ItemSetsApi,
                                btnTextImport: e.get("item_sets_import_btn_import"),
                                btnTextEdit: e.get("item_sets_import_btn_edit"),
                                btnTextCancel: e.get("item_sets_import_btn_cancel")
                            },
                            ComponentFactory: s.ComponentFactory
                        });
                    return s.bluebird.resolve()
                }))
            }, t.importSet = a, t.mergeBlocksAndItems = l, t.suffixDuplicateName = r;
            var s = n(1),
                o = n(111);
            const i = n(175);

            function l(e, t, n) {
                const o = s.Lodash.isNil(t) ? [] : t;
                return s.Lodash.isNil(n) || o.push({
                    type: e.formatString("item_sets_import_block_name"),
                    items: s.Lodash.compact(n).map((e => ({
                        id: e.toString(),
                        count: 1
                    })))
                }), o
            }

            function a(e, t, n, a, r) {
                const {
                    summonerId: c,
                    maxItemSets: d
                } = n;
                let m = n.myItemSets;
                const p = l(e, t.blocks, t.items);
                void 0 !== m && void 0 !== m.itemSets || (m = {
                    itemSets: []
                });
                const u = {
                    uid: i(),
                    title: t.name,
                    associatedChampions: t.champions,
                    associatedMaps: t.maps,
                    blocks: p
                };
                return m.itemSets.push(u), m.itemSets.length <= d ? s.bluebird.all([a.put(`/v1/item-sets/${c}/sets`, m).catch((e => s.logger.error("Failed to save item set", e))), r.post("/v1/events/item_sets__item_sets_event", {
                    id: o.TELEMETRY_EVENT_ID_IMPORT,
                    source: t.source
                }).catch((e => s.logger.error("Failed to send import telemetry", e)))]).then((() => s.bluebird.resolve(u))) : s.bluebird.reject(new Error(e.formatString("item_sets_import_error_limit_exceeded", {
                    max: d
                })))
            }

            function r(e, t) {
                const n = /.*(?= \(([0-9]*)\))|.*/,
                    s = e.reduce(((e, t) => {
                        const s = t.match(n);
                        if (s) {
                            const t = s[0],
                                n = void 0 === s[1] ? 0 : parseInt(s[1]);
                            e[t] || (e[t] = []), e[t].push(n), e[t].sort(((e, t) => e - t))
                        }
                        return e
                    }), {});
                if (s[t]) {
                    const e = s[t];
                    return `${t} (${e[e.length-1]+1})`
                }
                return t
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function() {
                c(l.default);
                const e = new o.default;
                return s.default.add({
                    inventoryNotificationsHandler: new i.default,
                    EmotePanelApi: e
                }), e
            };
            var s = a(n(1)),
                o = a(n(269)),
                i = a(n(274)),
                l = a(n(202));

            function a(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const {
                webComponents: r
            } = s.default, {
                registerCustomElementV1: c
            } = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = function(e, t) {
                    if (!t && e && e.__esModule) return e;
                    if (null === e || "object" != typeof e && "function" != typeof e) return {
                        default: e
                    };
                    var n = i(t);
                    if (n && n.has(e)) return n.get(e);
                    var s = {},
                        o = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var l in e)
                        if ("default" !== l && Object.prototype.hasOwnProperty.call(e, l)) {
                            var a = o ? Object.getOwnPropertyDescriptor(e, l) : null;
                            a && (a.get || a.set) ? Object.defineProperty(s, l, a) : s[l] = e[l]
                        } s.default = e, n && n.set(e, s);
                    return s
                }(n(270));

            function i(e) {
                if ("function" != typeof WeakMap) return null;
                var t = new WeakMap,
                    n = new WeakMap;
                return (i = function(e) {
                    return e ? n : t
                })(e)
            }
            t.default = class {
                constructor() {
                    this._handleLoginSession = this._handleLoginSession.bind(this), this._application = null, this._setEmberFactoryDefinition(), this._startObservers()
                }
                getCurrentPlayerEmotePanel() {
                    return new Promise((e => {
                        e(s.ComponentFactory.create(o.EMBER_APP_NAME, {
                            isFromExternalSource: !0
                        }))
                    }))
                }
                willHide() {}
                getEmotePanel() {
                    return this._application || (this._application = s.ComponentFactory.create(o.EMBER_APP_NAME)), this._application
                }
                removeEmotePanel() {
                    this._application && (this._application.onRemove(), this._application = null)
                }
                _startObservers() {
                    this.loginBinding = (0, s.dataBinding)("/lol-login", (0, s.getProvider)().getSocket()), this.loginBinding.observe("v1/session", this, this._handleLoginSession)
                }
                _handleLoginSession(e) {
                    e && "SUCCEEDED" === e.state && (s.inventoryNotificationsHandler.initObservers(), this.loginBinding.unobserve("v1/session", this))
                }
                _setEmberFactoryDefinition() {
                    this._emberAppDefinition = (0, o.default)();
                    s.EmberApplicationFactory.setFactoryDefinition(o.EMBER_APP_NAME, this._emberAppDefinition, {
                        EMBER_CLI_COMPAT: !0
                    })
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.EMBER_APP_NAME = void 0, t.default = function(e) {
                0;
                return function() {
                    const e = function() {
                        const e = s.Ember.Router.extend({
                            location: "none"
                        });
                        return e.map((function() {})), e
                    }();
                    return {
                        name: o,
                        tra: s.traService,
                        ComponentFactory: s.ComponentFactory,
                        Router: e,
                        EmoteRootComponent: n(178),
                        EmoteInventoryComponent: n(183),
                        EmoteWheelComponent: n(187),
                        EmoteWheelSlotComponent: n(190),
                        EmoteDeleteSlotComponent: n(193),
                        EmoteReactionsComponent: n(196),
                        EmotesService: n(199),
                        LoadoutsService: n(200),
                        ErrorsHandlerService: n(201),
                        IndexRoute: n(271),
                        TEMPLATES: {
                            application: n(272),
                            index: n(273)
                        }
                    }
                }()
            };
            var s = n(1);
            const o = "EmotesPlugin";
            t.EMBER_APP_NAME = o
        }, (e, t, n) => {
            "use strict";
            var s = n(1);
            const {
                Route: o
            } = s.Ember;
            e.exports = o.extend({
                emotesService: s.Ember.inject.service("emotes"),
                init: function() {
                    this._super(...arguments);
                    const e = this.componentFactoryApp.model && this.componentFactoryApp.model.isFromExternalSource;
                    this.get("emotesService").set("isFromExternalSource", !!e), this.get("emotesService").set("filterUnownedEmotes", !!e)
                }
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "jqpaZl3k",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\templates\\\\application.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["append",["unknown",["outlet"]],false],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "NDOWJ2Hj",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\emote-panel\\\\addon\\\\app\\\\templates\\\\index.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["append",["unknown",["emote-root"]],false],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            var o = class {
                constructor() {
                    this.handledNotificationIds = [], this.emotesNotificationIdsToAcknowledge = [], this._handleInventoryNotifications = this._handleInventoryNotifications.bind(this)
                }
                initObservers() {
                    this.inventoryBinding = (0, s.dataBinding)("/lol-inventory", (0, s.getProvider)().getSocket()), this.settingsBinding = (0, s.dataBinding)("/lol-settings"), this.inventoryBinding.observe("v1/notifications/EMOTE", this._handleInventoryNotifications)
                }
                acknowledgeEmoteNotifications() {
                    const e = [];
                    this.emotesNotificationIdsToAcknowledge.forEach((t => {
                        e.push(this.inventoryBinding.post("v1/notification/acknowledge", t))
                    })), Promise.all(e).then((() => {
                        this.emotesNotificationIdsToAcknowledge = []
                    }))
                }
                getPlayerPreferencesNewEmotes() {
                    return this.settingsBinding.get("/v2/account/LCUPreferences/emotes", {
                        skipCache: !0
                    }).then((e => e.data && e.data.newEmotes ? e.data.newEmotes : [])).catch((() => []))
                }
                updatePlayerPreferencesNewEmotes(e) {
                    this.settingsBinding.patch("/v2/account/LCUPreferences/emotes", {
                        data: {
                            newEmotes: e
                        },
                        schemaVersion: 1
                    })
                }
                _handleInventoryNotifications(e) {
                    let t = [];
                    e && e.forEach((e => {
                        const n = "CREATE" === e.type && !e.acknowledged,
                            s = this.handledNotificationIds.includes(e.id);
                        n && !s && (t.push(e), this.handledNotificationIds.push(e.id), this.emotesNotificationIdsToAcknowledge.push(e.id));
                        "DELETE" === e.type && !e.acknowledged && !s && (this.handledNotificationIds.push(e.id), this.emotesNotificationIdsToAcknowledge.push(e.id), this.acknowledgeEmoteNotifications(), t = [])
                    })), this._handleNewEmoteNotifications(t)
                }
                _handleNewEmoteNotifications(e) {
                    e.length && this._addNewEmotesToPlayerPreferences(e)
                }
                _addNewEmotesToPlayerPreferences(e) {
                    const t = e.map((e => e.itemId));
                    this.getPlayerPreferencesNewEmotes().then((e => {
                        e.forEach((e => {
                            t.includes(e) || t.push(e)
                        })), this.updatePlayerPreferencesNewEmotes(t)
                    })).catch((() => {
                        this.updatePlayerPreferencesNewEmotes(t)
                    }))
                }
            };
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = n(276),
                l = (s = n(371)) && s.__esModule ? s : {
                    default: s
                };
            t.default = class {
                app = void 0;
                domNode = void 0;
                removeModal = void 0;
                tutorialEnabled = !0;
                playbackEnabled = !0;
                constructor() {
                    this.traService = o.traService, (0, i.registerEmberApplication)(o.traService)
                }
                _setupEmberApplication = async () => {
                    if (!this.app || !this.domNode) {
                        const {
                            emberAppInstancePromise: e,
                            domNode: t
                        } = (0, i.createEmberApplication)();
                        this.app = await e, this.domNode = t
                    }
                };
                _show = async (e, t, n, s) => {
                    try {
                        await this._navigateTo(e)
                    } catch (t) {
                        o.logger.error(`Failed to navigate perks app to ${e}`, t)
                    }
                    return t ? this._showModal(this.domNode, n, s) : this._showFullPageModal(this.domNode, n)
                };
                _showModal = (e, t, n) => {
                    this.tutorialEnabled = !1, this.playbackEnabled = !1, this.runeRecommenderContext = n;
                    const s = o.UIKit.getModalManager(),
                        i = s.add({
                            type: "DialogAlert",
                            data: {
                                contents: e,
                                okText: !1,
                                dismissible: !0
                            }
                        });
                    i.okPromise.then((() => {
                        t(), this.hide()
                    })), i.domNode.style.top = "unset", this.removeModal = () => {
                        s.remove(i)
                    }
                };
                _showFullPageModal = (e, t) => {
                    this.tutorialEnabled = !0, this.playbackEnabled = !0, this.runeRecommenderContext = {};
                    const n = o.SharedComponents.getApi_fullPageModalManager(),
                        s = () => {
                            t(), this.hide(), n.removeEventListener("fullPageModalClose", s)
                        };
                    n.addEventListener("fullPageModalClose", s), n.open({
                        data: {
                            contents: e
                        }
                    }), this.removeModal = () => {
                        n.close()
                    }
                };
                _navigateTo = async e => {
                    await this._setupEmberApplication();
                    this.app.__container__.lookup("router:main").replaceWith(e)
                };
                create = async (e = !1, t = (() => {}), n) => await this._show("/style-picker", e, t, n);
                edit = async (e, t = !1, n = (() => {}), s) => e ? await this._show(`/page/${e}`, t, n, s) : this.create(t, n, s);
                runeRecommender = async (e = !1, t = (() => {}), n) => await this._show("/runes-recommender", e, t, n);
                preload = async () => {
                    await this._navigateTo("/")
                };
                hide = async () => {
                    this.removeModal && (this.removeModal(), this.removeModal = void 0, await this._navigateTo("/"))
                };
                getRuneSwapAndNotifyString = () => (0, l.default)(this.traService);
                isTutorialEnabled = () => this.tutorialEnabled;
                isPlaybackEnabled = () => this.playbackEnabled;
                getRuneRecommenderContext = () => this.runeRecommenderContext
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.registerEmberApplication = t.createEmberApplication = void 0;
            var s = n(1),
                o = ie(n(277)),
                i = ie(n(278)),
                l = ie(n(281)),
                a = ie(n(282)),
                r = ie(n(284)),
                c = ie(n(285)),
                d = ie(n(287)),
                m = ie(n(288)),
                p = ie(n(289)),
                u = ie(n(212)),
                h = (ie(n(101)), ie(n(214))),
                g = ie(n(216)),
                f = ie(n(217)),
                _ = ie(n(229)),
                y = ie(n(290)),
                b = ie(n(291)),
                k = ie(n(293)),
                S = ie(n(92)),
                v = ie(n(294)),
                E = ie(n(296)),
                x = ie(n(297)),
                I = ie(n(299)),
                w = ie(n(301)),
                P = ie(n(302)),
                T = ie(n(303)),
                C = ie(n(304)),
                R = ie(n(305)),
                O = ie(n(306)),
                A = ie(n(307)),
                D = ie(n(308)),
                M = ie(n(309)),
                L = ie(n(310)),
                N = ie(n(311)),
                B = ie(n(312)),
                j = ie(n(313)),
                F = ie(n(314)),
                U = ie(n(315)),
                H = ie(n(316)),
                V = ie(n(317)),
                K = ie(n(318)),
                G = ie(n(319)),
                W = ie(n(320)),
                Y = ie(n(321)),
                q = ie(n(322)),
                X = ie(n(323)),
                $ = ie(n(324)),
                z = ie(n(325)),
                Q = ie(n(326)),
                J = ie(n(327)),
                Z = ie(n(328)),
                ee = ie(n(329)),
                te = ie(n(330)),
                ne = ie(n(331)),
                se = ie(n(211)),
                oe = ie(n(332));

            function ie(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const {
                FramedIconButtonComponent: le,
                ButtonMaskIconComponent: ae
            } = s.SharedComponents.getSharedEmberComponents(), re = "rcp-fe-lol-perks-addon";
            t.createEmberApplication = () => s.ComponentFactory.create(re);
            t.registerEmberApplication = e => {
                s.Ember.LinkComponent.reopen({
                    attributeBindings: ["style", "src", "style-name", "disabledAttr:disabled"],
                    linkClickEventHandler: null,
                    didInsertElement() {
                        this._super(...arguments), this.linkClickEventHandler = function(e) {
                            (e.shiftKey || e.ctrlKey || 1 === e.button) && e.preventDefault()
                        }.bind(this), this.element.addEventListener("click", this.linkClickEventHandler)
                    },
                    willDestroyElement() {
                        this._super(...arguments), this.element.removeEventListener("click", this.linkClickEventHandler)
                    },
                    disabledAttr: s.Ember.computed("disabled", (function() {
                        return this.get("disabled") ? "" : null
                    }))
                }), s.EmberApplicationFactory.setFactoryDefinition(re, {
                    tra: e,
                    ComponentFactory: s.ComponentFactory,
                    Router: o.default,
                    StylePickerRoute: r.default,
                    RunesRecommenderRoute: a.default,
                    PageCreateRoute: l.default,
                    PageEditRoute: i.default,
                    ApplicationController: c.default,
                    StylePickerController: p.default,
                    PageEditController: d.default,
                    RunesRecommenderController: m.default,
                    StoreService: f.default,
                    TutorialService: _.default,
                    PlatformSettingsService: h.default,
                    SettingsService: g.default,
                    AudioService: u.default,
                    AddPageButtonComponent: y.default,
                    ButtonMaskIconComponent: ae,
                    CircleButtonComponent: b.default,
                    ClickableIconLabelComponent: k.default,
                    DeletePageButtonComponent: E.default,
                    FramedIconButtonComponent: le,
                    FramedPerkIconComponent: x.default,
                    KeystoneIconComponent: I.default,
                    LinkToPageComponent: w.default,
                    LongDescriptionsCheckboxComponent: P.default,
                    NameTextFieldComponent: T.default,
                    PageEditorComponent: C.default,
                    PagesDropdownComponent: O.default,
                    PagesDropdownOptionComponent: R.default,
                    PerkIconButtonComponent: A.default,
                    PerkOptionComponent: D.default,
                    PerksTooltipComponent: M.default,
                    PrimaryPerkSelectorComponent: L.default,
                    PrimarySelectedPerkComponent: N.default,
                    PrimaryStyleSelectorComponent: B.default,
                    RunesRecommenderControlsComponent: U.default,
                    RunesRecommenderPageComponent: V.default,
                    RunesRecommenderPageSummaryComponent: H.default,
                    RunesRecommenderPositionFiltersComponent: K.default,
                    RunesRecommenderSpellComponent: G.default,
                    SavePageButtonComponent: W.default,
                    SplashedPerkOptionComponent: Y.default,
                    SplashedPerkSelectorComponent: q.default,
                    SplashedSelectedPerkIconComponent: X.default,
                    SplashedStyleSelectorComponent: $.default,
                    StatModPerkSelectorComponent: z.default,
                    StyleKeystonesComponent: Q.default,
                    StyleOptionComponent: J.default,
                    StylePickerColumnComponent: Z.default,
                    ToggleButtonComponent: ee.default,
                    ToggleRenameButtonComponent: te.default,
                    ProgressBarComponent: j.default,
                    RunesDrawerComponent: F.default,
                    ConstructMinspecComponent: v.default,
                    CollectionsTooltipComponent: S.default,
                    AddHelper: ne.default,
                    EqHelper: se.default,
                    ValueFromArrayHelper: oe.default,
                    TEMPLATES: {
                        application: n(333),
                        "style-picker": n(334),
                        "runes-recommender": n(335),
                        "page-create": n(336),
                        "page-edit": n(337),
                        "components/collections-tooltip": n(247),
                        "components/circle-button": n(338),
                        "components/clickable-icon-label": n(339),
                        "components/delete-page-button": n(340),
                        "components/framed-perk-icon": n(341),
                        "components/keystone-icon": n(342),
                        "components/link-to-page": n(343),
                        "components/long-descriptions-checkbox": n(344),
                        "components/page-editor": n(345),
                        "components/pages-dropdown-option": n(346),
                        "components/pages-dropdown": n(347),
                        "components/perk-icon-button": n(348),
                        "components/perk-option": n(349),
                        "components/perks-tooltip": n(350),
                        "components/primary-perk-selector": n(351),
                        "components/primary-selected-perk": n(352),
                        "components/primary-style-selector": n(353),
                        "components/runes-recommender-controls": n(354),
                        "components/runes-recommender-page": n(355),
                        "components/runes-recommender-page-summary": n(356),
                        "components/runes-recommender-position-filters": n(357),
                        "components/runes-recommender-spell": n(358),
                        "components/save-page-button": n(359),
                        "components/splashed-perk-option": n(360),
                        "components/splashed-perk-selector": n(361),
                        "components/splashed-selected-perk-icon": n(362),
                        "components/splashed-style-selector": n(363),
                        "components/style-keystones": n(364),
                        "components/style-option": n(365),
                        "components/style-picker-column": n(366),
                        "components/toggle-button": n(367),
                        "components/progress-bar": n(368),
                        "components/runes-drawer": n(369),
                        "components/construct-minspec": n(370)
                    }
                }, {
                    EMBER_CLI_COMPAT: !0
                })
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            const s = n(1).Ember.Router.extend({
                location: "none"
            });
            s.map((function() {
                this.route("style-picker"), this.route("page-create", {
                    path: "/page"
                }), this.route("page-edit", {
                    path: "/page/:page_id"
                }), this.route("runes-recommender")
            }));
            var o = s;
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(279);
            const {
                RunMixin: i
            } = s.EmberAddons.EmberLifeline;
            var l = s.Ember.Route.extend(i, {
                store: s.Ember.inject.service(),
                perksBook: s.Ember.computed.alias("store.perksBook"),
                settings: s.Ember.inject.service(),
                model(e) {
                    const t = this.get("store"),
                        n = s.CollectionsApi.perksApi().getRuneRecommenderContext(),
                        {
                            champId: i,
                            position: l,
                            mapId: a,
                            spellIds: r,
                            setPerksPage: c
                        } = n,
                        d = (0, o.getRuneRecommenderPagesData)(i, l, a, r, this.get("tra")),
                        m = parseInt(e.page_id),
                        p = (0, s.dataBinding)("/lol-champ-select").get("/v1/session/my-selection", {
                            skipCache: !0
                        }).then((e => e), (() => {})),
                        u = (0, s.dataBinding)("/lol-gameflow").get("/v1/session", {
                            skipCache: !0
                        }).then((e => e), (() => {})),
                        h = t.observePageRecord(m).then((e => {
                            if (c) {
                                const t = e.toJSON();
                                return t.id = e.id, c(t).then((() => e))
                            }
                            return e
                        }));
                    return s.Ember.RSVP.hash({
                        page: h,
                        settings: this.get("settings").getAllSettings(),
                        champSelectPlayer: p,
                        gameflowSession: u,
                        runeRecommenderData: d,
                        setPerksPage: c
                    })
                },
                _showSaveModal: function() {
                    return s.UIKit.getModalManager().add({
                        type: "DialogConfirm",
                        data: {
                            contents: this.get("tra.perks_page_unsaved_confirm"),
                            acceptText: this.get("tra.lib_ui_dialog_confirm_accept"),
                            declineText: this.get("tra.lib_ui_dialog_confirm_decline")
                        },
                        show: !0
                    })
                },
                actions: {
                    refreshPageEditRoute() {
                        this.refresh()
                    },
                    willTransition(e) {
                        const t = this.get("perksBook.currentPage");
                        t && !t.clean && (e.abort(), this._showSaveModal().acceptPromise.then((() => t.save())).catch((() => {
                            t.restore && t.restore()
                        })).finally((() => {
                            this.runTask((() => {
                                t.clean = !0, e.retry()
                            }), 1)
                        })))
                    }
                }
            });
            t.default = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getPerksPageResourceFromRecommendedPage = function(e, t) {
                const {
                    name: n,
                    primaryPerkStyleId: s,
                    secondaryPerkStyleId: o,
                    perks: i
                } = e, l = (i || []).map((e => e.id));
                return {
                    name: n,
                    selectedPerkIds: l,
                    order: t,
                    primaryStyleId: s,
                    subStyleId: o,
                    isTemporary: !0,
                    runeRecommendationId: e.recommendationId,
                    isRecommendationOverride: e.isRecommendationOverride,
                    recommendationChampionId: e.recommendationChampionId,
                    recommendationIndex: e.recommendationIndex
                }
            }, t.getRuneRecommenderPagesData = function(e, t, n, c, d) {
                const g = (0, s.dataBinding)("/lol-gameflow").get("/v1/session", {
                        skipCache: !0
                    }),
                    f = (0, s.dataBinding)("/lol-summoner").get("/v1/current-summoner", {
                        skipCache: !0
                    }).then((e => e.summonerLevel || 1)),
                    _ = (0, s.dataBinding)("/lol-perks").get("/v1/currentpage", {
                        skipCache: !0
                    }).then((e => e), (() => {}));
                return g.then((g => {
                    if (!e) return {
                        recommendedPages: [],
                        shouldShowPositionSelector: !1
                    };
                    const y = (0, s.dataBinding)("/lol-game-data").get(`/assets/v1/champions/${e}.json`).then((e => {
                        const t = e && e.skins && e.skins[0].splashPath || "";
                        return {
                            id: e.id,
                            name: e.name,
                            roles: e.roles,
                            baseSplashPath: t
                        }
                    }));
                    let b = function(e, t, n) {
                        const o = function(e) {
                                const t = s.ChampionStatistics.getPreferredPosition(e);
                                if (t === i.POSITION_SUPPORT) return i.VALID_POSITIONS.utility;
                                return t
                            }(n),
                            l = p(t),
                            a = l && e === i.POSITION_NONE;
                        return a ? o : e
                    }((t || i.POSITION_NONE).toUpperCase(), n, e);
                    const k = (0, s.dataBinding)("/lol-perks").get(`v1/recommended-pages-position/champion/${e}`, {
                        skipCache: !0
                    }).then((t => (b = t || b, (0, s.dataBinding)("/lol-perks").get(`/v1/recommended-pages/champion/${e}/position/${b}/map/${n}`))));
                    return Promise.all([k, y, f, m, _]).then((e => {
                        const t = e[0],
                            s = e[1],
                            m = e[2],
                            f = e[3],
                            _ = e[4],
                            y = c || [];
                        if (n === i.SR_MAP_ID && b === i.POSITION_NONE) {
                            const e = t.find((e => e.isDefaultPosition));
                            b = e && e.position || i.POSITION_NONE
                        }
                        const k = function(e, t, n, s, c, d, m, p, g) {
                            const f = !d || (0, o.isFlashOnF)(d[0], d[1]),
                                _ = n.roles.includes(l),
                                y = g && g.selectedPerkIds || [];
                            return (t || []).map(((t, l) => {
                                const g = t.keystone.id === a && _ ? e.get("rune_recommender_attributes_descriptor_keystone_aery_override") : t.keystone.recommendationDescriptor,
                                    b = e.get(`rune_recommender_attributes_descriptor_${t.primaryRecommendationAttribute}`),
                                    k = e.formatString("rune_recommender_attributes_page_summary", {
                                        keystoneDescriptor: g,
                                        primaryAttribute: b
                                    }),
                                    S = s.gameData && s.gameData.queue && s.gameData.queue.gameMode;
                                let v = [...t.summonerSpellIds];
                                v = (0, o.normalizeSpellSelections)(v), v = c === i.VALID_POSITIONS.jungle ? (0, o.ensureSmite)(v) : (0, o.substituteSmite)(c, v), S === r && (v = (0, o.getUrfSpells)(v));
                                const E = (0, o.isEligibleToUseSpells)(p, v, m, S);
                                return {
                                    name: e.formatString("rune_recommender_page_name", {
                                        keystoneName: t.keystone.name,
                                        champName: n.name
                                    }),
                                    attributesLoc: k,
                                    primaryPerkStyleId: t.primaryPerkStyleId,
                                    secondaryPerkStyleId: t.secondaryPerkStyleId,
                                    keystone: t.keystone,
                                    summonerSpells: d ? u(d, v, E, f) : [],
                                    perks: t.perks,
                                    isSelected: h(y, t.perks.map((e => e.id))),
                                    recommendationId: t.recommendationId,
                                    recommendationChampionId: n.id,
                                    isRecommendationOverride: t.isRecommendationOverride,
                                    recommendationIndex: l
                                }
                            }))
                        }(d, t, s, g, b, y, f, m, _);
                        return {
                            recommendedPages: k,
                            champData: s,
                            mapId: n,
                            position: b,
                            shouldShowPositionSelector: p(n),
                            currentPage: _
                        }
                    }))
                }), (() => ({
                    recommendedPages: [],
                    shouldShowPositionSelector: !1
                })))
            };
            var s = n(1),
                o = n(280),
                i = n(208);
            const l = "support",
                a = 8214,
                r = "URF",
                c = {},
                d = 6,
                m = (0, s.dataBinding)("/lol-game-data").get("/assets/v1/summoner-spells.json").then((e => ((e || []).forEach((e => {
                    const {
                        id: t,
                        name: n,
                        description: s,
                        iconPath: o,
                        gameModes: i
                    } = e;
                    c[t] = {
                        id: t,
                        name: n,
                        description: s,
                        iconPath: o,
                        gameModes: i
                    }
                })), e)));

            function p(e) {
                return e === i.SR_MAP_ID
            }

            function u(e, t, n, s) {
                let o;
                return o = n ? t : e, s && (o = [...o].reverse()), o.map((e => c[e]))
            }

            function h(e, t) {
                if (e.length < d || t.length < d) return !1;
                for (let n = 0; n < d; n++)
                    if (e[n] !== t[n]) return !1;
                return !0
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SPELL_IDS = t.LANE_TO_SMITE_REPLACEMENT_SPELL_ID = void 0, t.ensureSmite = function(e) {
                const t = e[0];
                if (e.includes(n.SMITE)) return e;
                e.includes(n.FLASH) ? t === n.FLASH ? e[1] = n.SMITE : e[0] = n.SMITE : e[1] = n.SMITE;
                return e
            }, t.getUrfSpells = function(e) {
                const t = e.includes(n.IGNITE),
                    s = e.indexOf(n.TELEPORT);
                return t && -1 !== s ? (e[s] = n.FLASH, e) : -1 !== s ? (e[s] = n.IGNITE, e) : e
            }, t.isEligibleToUseSpells = function(e, t, n, s) {
                return 2 === t.map((e => n.find((t => t.id === e)))).filter((t => {
                    const n = e >= (t && t.summonerLevel),
                        o = t && t.gameModes.includes(s);
                    return n && o
                })).length
            }, t.isFlashOnF = function(e, t) {
                return o(e, t)
            }, t.normalizeSpellSelections = function(e) {
                const t = e[0],
                    n = e[1];
                return o(t, n) ? [...e.reverse()] : e
            }, t.substituteSmite = function(e, t) {
                const o = t.indexOf(n.SMITE),
                    i = s[e]; - 1 !== o && (t.includes(i) && i !== n.SMITE ? t[o] = n.FLASH : t[o] = i);
                return t
            };
            const n = {
                EXHAUST: 3,
                FLASH: 4,
                GHOST: 6,
                HEAL: 7,
                SMITE: 11,
                TELEPORT: 12,
                IGNITE: 14
            };
            t.SPELL_IDS = n;
            const s = {
                TOP: n.TELEPORT,
                JUNGLE: n.SMITE,
                MIDDLE: n.IGNITE,
                BOTTOM: n.HEAL,
                UTILITY: n.EXHAUST,
                NONE: n.HEAL
            };

            function o(e, t) {
                const s = e === n.FLASH || t === n.FLASH;
                let o = n.FLASH;
                s || (o = n.GHOST);
                if (e === o || t === o) return t === o;
                return !(e !== n.SMITE && t !== n.SMITE) && e === n.SMITE
            }
            t.LANE_TO_SMITE_REPLACEMENT_SPELL_ID = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = s.Ember.Route.extend({
                    queryParams: {
                        primaryStyleId: {
                            refreshModel: !0
                        },
                        keystoneId: {
                            refreshModel: !0
                        }
                    },
                    settings: s.Ember.inject.service(),
                    store: s.Ember.inject.service(),
                    tutorial: s.Ember.inject.service(),
                    model(e) {
                        const t = this.get("store");
                        this.get("tutorial.fullCustomPageEditingUnlocked") || (e.useDefaultPerks = !0);
                        const n = t.perksBook.createPage(e);
                        return s.Ember.RSVP.hash({
                            page: n.then((function(e) {
                                return e ? t.observePageRecord(e.id) : null
                            })),
                            bandaidForAsync: this.get("tutorial").ready(),
                            settings: this.get("settings").getAllSettings()
                        })
                    },
                    afterModel(e, t) {
                        e.page && e.page.id ? this.transitionTo("page-edit", e.page.id) : this.transitionTo("style-picker")
                    }
                });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(279),
                i = n(283);
            var l = s.Ember.Route.extend({
                getSettingOrDefault(e, t, n) {
                    let s = n;
                    return e && e.data && e.data.hasOwnProperty(t) && (s = e.data[t]), s
                },
                model() {
                    const e = s.CollectionsApi.perksApi().getRuneRecommenderContext(),
                        {
                            champId: t,
                            position: n,
                            mapId: l,
                            spellIds: a,
                            setRecommendedPage: r,
                            setPerksPage: c
                        } = e,
                        d = (0, s.dataBinding)("/lol-summoner").get("/v1/current-summoner", {
                            skipCache: !0
                        }).then((e => e.summonerLevel || 1)),
                        m = (0, s.dataBinding)("/lol-perks").get("/v1/currentpage", {
                            skipCache: !0
                        }).then((e => e), (() => {})),
                        p = (0, s.dataBinding)("/lol-game-settings").get("/v1/input-settings", {
                            skipCache: !0
                        }).then((e => e && e.GameEvents ? [e.GameEvents.evtCastAvatarSpell1, e.GameEvents.evtCastAvatarSpell2] : ["[d]", "[f]"])).then((e => e.map((e => (0, i.formatAdditionalKeyBindings)([e]))))),
                        u = Promise.all([(0, s.dataBinding)("/lol-settings").get("/v2/account/LCUPreferences/lol-perks", {
                            skipCache: !0
                        }), d]).then((e => {
                            const t = e[0],
                                n = e[1] >= 15;
                            return {
                                shouldEditAfterSelection: this.getSettingOrDefault(t, "shouldEditAfterSelection", n),
                                shouldIncludeSummonerSpells: this.getSettingOrDefault(t, "shouldIncludeSummonerSpells", !0)
                            }
                        }));
                    return s.Ember.RSVP.hash({
                        runeRecommenderData: (0, o.getRuneRecommenderPagesData)(t, n, l, a, this.get("tra")),
                        myPages: (0, s.dataBinding)("/lol-perks").get("/v1/pages", {
                            skipCache: !0
                        }),
                        swapSummonerSpellPositions: !1,
                        spellHotkeys: p,
                        runesRecommenderSettings: u,
                        currentPage: m,
                        setRecommendedPage: r,
                        setPerksPage: c
                    })
                }
            });
            t.default = l
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAdditionalKeyBindings = function(e) {
                if (void 0 === e || void 0 === e[0]) return "";
                if (void 0 === e[1]) return o(e[0]);
                return o(function(e) {
                    const t = e.split(",");
                    return -1 === e.indexOf("[,]") ? t : function(e) {
                        let t, n = e.indexOf(",");
                        for (; - 1 !== n;) {
                            if (0 === n) {
                                t = ["", e.slice(1)];
                                break
                            }
                            if ("[" !== e.charAt(n - 1)) {
                                t = [e.slice(0, n), e.slice(n + 1)];
                                break
                            }
                            n = e.indexOf(",", n + 1)
                        } - 1 === n && (t = [e]);
                        return t
                    }(e)
                }(e[0])[e[1] - 1])
            }, t.normalizeKeybindingString = function(e) {
                let t = e;
                t = t.toLowerCase();
                const n = function(e) {
                    const t = [];
                    let n = e.indexOf("[");
                    for (; - 1 !== n;) {
                        let s = e.indexOf("]", n + 1);
                        if (-1 === s) return "";
                        s + 1 < e.length && "]" === e.charAt(s + 1) && (s += 1);
                        const o = e.substr(n, s - n + 1);
                        t.push(o), n = e.indexOf("[", s + 1)
                    }
                    return t
                }(t);
                n.length > 2 && n.sort(i);
                let s = "";
                for (let e = 0; e < n.length; e++) s += n[e];
                return s
            };
            const n = "null",
                s = {
                    "[Esc]": "Esc",
                    "[1]": "1",
                    "[2]": "2",
                    "[3]": "3",
                    "[4]": "4",
                    "[5]": "5",
                    "[6]": "6",
                    "[7]": "7",
                    "[8]": "8",
                    "[9]": "9",
                    "[0]": "0",
                    "[-]": "-",
                    "[=]": "=",
                    "[Back]": "Bk",
                    "[Tab]": "Tab",
                    "[TAB]": "Tab",
                    "[q]": "Q",
                    "[w]": "W",
                    "[e]": "E",
                    "[r]": "R",
                    "[t]": "T",
                    "[y]": "Y",
                    "[u]": "U",
                    "[i]": "I",
                    "[o]": "O",
                    "[p]": "P",
                    "[[]": "[",
                    "[]]": "]",
                    "[Return]": "Rtn",
                    "[a]": "A",
                    "[s]": "S",
                    "[d]": "D",
                    "[f]": "F",
                    "[g]": "G",
                    "[h]": "H",
                    "[j]": "J",
                    "[k]": "K",
                    "[l]": "L",
                    "[Semicolon]": ";",
                    "[']": "'",
                    "[`]": "`",
                    "[Backslash]": "Bkslash",
                    "[z]": "Z",
                    "[x]": "X",
                    "[c]": "C",
                    "[v]": "V",
                    "[b]": "B",
                    "[n]": "N",
                    "[m]": "M",
                    "[,]": ",",
                    "[.]": ".",
                    "[/]": "/",
                    "[*]": "*",
                    "[Space]": "Spce",
                    "[CapsLock]": "CapsLk",
                    "[F1]": "F1",
                    "[F2]": "F2",
                    "[F3]": "F3",
                    "[F4]": "F4",
                    "[F5]": "F5",
                    "[F6]": "F6",
                    "[F7]": "F7",
                    "[F8]": "F8",
                    "[F9]": "F9",
                    "[F10]": "F10",
                    "[NumLock]": "NumLk",
                    "[ScrollLock]": "ScrollLk",
                    "[Num7]": "Num7",
                    "[Num8]": "Num8",
                    "[Num9]": "Num9",
                    "[Num-]": "Num-",
                    "[Num4]": "Num4",
                    "[Num5]": "Num5",
                    "[Num6]": "Num6",
                    "[Num+]": "Num+",
                    "[Num1]": "Num1",
                    "[Num2]": "Num2",
                    "[Num3]": "Num3",
                    "[Num0]": "Num0",
                    "[Num.]": "Num.",
                    "[F11]": "F11",
                    "[F12]": "F12",
                    "[jYen]": "jKana",
                    "[Num=]": "Num=",
                    "[NumEnter]": "NumEnter",
                    "[Mute]": "Mute",
                    "[Vol-]": "Vol-",
                    "[Vol+]": "Vol+",
                    "[Num,]": "Num,",
                    "[Num/]": "Num/",
                    "[Home]": "webHome",
                    "[Up Arrow]": "Up",
                    "[PgUp]": "PgUp",
                    "[Left Arrow]": "Left",
                    "[Right Arrow]": "Rght",
                    "[End]": "End",
                    "[Down Arrow]": "Down",
                    "[PgDn]": "PgDn",
                    "[Ins]": "Ins",
                    "[Del]": "Del",
                    "[L Win]": "Win",
                    "[R Win]": "Win",
                    "[Button 1]": "MB1",
                    "[Button 2]": "MB2",
                    "[Button 3]": "MB3",
                    "[Button 4]": "MB4",
                    "[Button 5]": "MB5",
                    "[Button 6]": "MB6",
                    "[Button 7]": "MB7",
                    "[Button 8]": "MB8",
                    "[<Unbound>]": ""
                };

            function o(e) {
                if (e === n || void 0 === e) return "";
                const t = e.slice(e.lastIndexOf("[", e.length - 3)),
                    o = e.slice(0, e.lastIndexOf("[", e.length - 3)),
                    i = s[t];
                return void 0 === i ? e : function(e, t = " ") {
                    if (0 === e.length) return "";
                    let n = e.replace("[Cmd]", "Cmd" + t).replace("[Alt]", "Alt" + t);
                    return n = n.replace("[alt]", "Alt" + t).replace("[ctrl]", "Ctrl" + t), n = n.replace("[Shift]", "Shift" + t).replace("[Ctrl]", "Ctrl" + t), n
                }(o, " + ") + i
            }

            function i(e, t) {
                return l(e) - l(t)
            }

            function l(e) {
                return "[ctrl]" === e ? 1 : "[alt]" === e ? 2 : "[shift]" === e ? 3 : "[cmd]" === e || "[win]" === e ? 4 : 5
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = s.Ember.Route.extend({
                    store: s.Ember.inject.service(),
                    tutorial: s.Ember.inject.service(),
                    model() {
                        const e = this.get("store.perksBook");
                        return s.Ember.RSVP.hash({
                            tutorial: this.get("tutorial").ready(),
                            styles: e.get("perkStyles"),
                            perks: e.get("perks")
                        })
                    }
                });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            n(286);
            var o = s.Ember.Controller.extend({});
            t.default = o
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(279),
                i = s.Ember.Controller.extend({
                    createPerksPage: e => (0, s.dataBinding)("/lol-perks").post("/v1/pages", e),
                    actions: {
                        runeRecommenderPageClicked: function(e) {
                            const t = this.get("model.pages") || [],
                                n = (0, o.getPerksPageResourceFromRecommendedPage)(e, t.length),
                                s = this.get("model.runeRecommenderData.currentPage.id"),
                                i = this.createPerksPage(n),
                                l = this.get("model.setPerksPage") || (() => Promise.resolve());
                            return i.then((e => l(e).then((() => {
                                e.id === s ? this.send("refreshPageEditRoute") : this.transitionToRoute("page-edit", e.id)
                            }))))
                        },
                        positionFilterClicked: function(e) {
                            const t = this.get("model.runeRecommenderData.champData.id");
                            return (0, s.dataBinding)("/lol-perks").post(`v1/recommended-pages-position/champion/${t}/position/${e}`).then((() => {
                                const t = s.CollectionsApi.perksApi().getRuneRecommenderContext(),
                                    {
                                        champId: n,
                                        mapId: i,
                                        spellIds: l
                                    } = t;
                                return (0, o.getRuneRecommenderPagesData)(n, e, i, l, this.get("tra")).then((e => {
                                    this.set("model.runeRecommenderData", e)
                                }))
                            }))
                        },
                        transitionToStylesPreview: function() {
                            this.transitionToRoute("style-picker")
                        },
                        transitionToPage: function(e) {
                            this.transitionToRoute("page-edit", e)
                        },
                        transitionToRecommender: function() {
                            this.transitionToRoute("/runes-recommender")
                        }
                    }
                });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(279);
            var i = s.Ember.Controller.extend({
                getSummonerSpells(e) {
                    const t = (e.summonerSpells || []).map((e => e.id));
                    return this.get("model.swapSummonerSpellPositions") && t.reverse(), t
                },
                createPerksPage: e => (0, s.dataBinding)("/lol-perks").post("/v1/pages", e),
                sanitizeSettingName: function(e) {
                    return e.replace("model.", "").replace("runesRecommenderSettings.", "")
                },
                persistRuneRecommenderSetting(e, t) {
                    const n = {};
                    return n[this.sanitizeSettingName(e)] = t, (0, s.dataBinding)("/lol-settings").patch("/v2/account/LCUPreferences/lol-perks", {
                        data: n,
                        schemaVersion: 1
                    })
                },
                getPerkSettingsFromPage: e => ({
                    perkIds: e.selectedPerkIds,
                    perkStyle: e.primaryStyleId,
                    perkSubStyle: e.subStyleId
                }),
                actions: {
                    selectRecommendedPage: function(e, t) {
                        const n = this.get("model.myPages") || [],
                            s = (0, o.getPerksPageResourceFromRecommendedPage)(e, n.length),
                            i = this.createPerksPage(s),
                            l = this.get("model.setRecommendedPage") || (() => Promise.resolve());
                        return i.then((n => {
                            const s = this.getPerkSettingsFromPage(n),
                                o = t ? this.getSummonerSpells(e) : [];
                            return l(s, o).then((() => {
                                this.get("model.runesRecommenderSettings.shouldEditAfterSelection") && this.transitionToRoute("page-edit", n.id)
                            }))
                        }))
                    },
                    positionFilterClicked: function(e) {
                        const t = this.get("model.runeRecommenderData.champData.id");
                        return (0, s.dataBinding)("/lol-perks").post(`v1/recommended-pages-position/champion/${t}/position/${e}`).then((() => {
                            const t = s.CollectionsApi.perksApi().getRuneRecommenderContext(),
                                {
                                    champId: n,
                                    mapId: i,
                                    spellIds: l
                                } = t;
                            return (0, o.getRuneRecommenderPagesData)(n, e, i, l, this.get("tra")).then((e => {
                                this.set("model.runeRecommenderData", e)
                            }))
                        }))
                    },
                    toggleProperty: function(e, t) {
                        const n = !this.get(e);
                        this.set(e, n), t && this.persistRuneRecommenderSetting(e, n)
                    },
                    editorTabClick: function() {
                        const e = this.get("model.runeRecommenderData.currentPage.id");
                        e ? this.transitionToRoute("page-edit", e) : this.transitionToRoute("page-create")
                    }
                }
            });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(224)) && s.__esModule ? s : {
                    default: s
                },
                l = n(207),
                a = n(208);
            var r = o.Ember.Controller.extend({
                store: o.Ember.inject.service(),
                tutorial: o.Ember.inject.service(),
                platformSettings: o.Ember.inject.service(),
                queryParams: ["pageId"],
                pageId: 0,
                init() {
                    this._super(...arguments), this._uxSettingsObserver = e => {
                        this.set("uxSettings", e)
                    }, o.UXSettings.addObserver(this._uxSettingsObserver)
                },
                willDestroy() {
                    this._super(...arguments), o.UXSettings.removeObserver(this._uxSettingsObserver)
                },
                stylesDeco: o.Ember.computed("model.styles.[]", (function() {
                    return this.massageStyles(this.get("model"))
                })),
                minSummonerLevelUnlockInspiration: o.Ember.computed.alias("platformSettings.MinSummonerLevelUnlockInspiration"),
                massageStyles(e) {
                    if (!e) return [];
                    let {
                        styles: t
                    } = e;
                    return t ? (t = (0, i.default)(t), t.forEach(((e, t) => {
                        const n = e.get("description.s1"),
                            s = e.get("description.s2");
                        e.set("description.s1", this.get("tra." + n)), e.set("description.s2", this.get("tra." + s));
                        const o = 1 === t && !this.get("tutorial.perksPrimaryPathSeen");
                        e.set("showTutorial", o)
                    })), this.addKeyStones((0, l.sortStyles)(t))) : []
                },
                showInspirationPlaceholder: o.Ember.computed("stylesDeco", (function() {
                    return !this.get("stylesDeco").find((e => e.id === a.INSPIRATION_STYLE_ID))
                })),
                showLongDescriptions: !1,
                addKeyStones(e) {
                    const t = this.get("store.perksStaticData.disabledPerks"),
                        n = this.get("store.perksStaticData.perksMap");
                    for (const s of e) {
                        const e = s.get("slots")[0].perks,
                            o = [];
                        for (const s of e) - 1 === t.indexOf(s) && o.push(n[s]);
                        s.set("keyStones", {
                            first: o[0],
                            second: o[1],
                            third: o[2],
                            fourth: o[3]
                        })
                    }
                    return e
                },
                actions: {
                    transitionToStylesPreview: function() {
                        this.transitionToRoute("style-picker")
                    },
                    showLongDescriptionsChanged: function(e) {
                        this.set("showLongDescriptions", e)
                    }
                }
            });
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1);
            var i = ((s = n(291)) && s.__esModule ? s : {
                default: s
            }).default.extend({
                classNames: ["add-page"],
                layoutName: "components/circle-button",
                tutorial: o.Ember.inject.service(),
                platformSettings: o.Ember.inject.service(),
                attributeBindings: ["buttonType:button-type"],
                buttonType: "plus",
                disabled: o.Ember.computed("canAddPage", "tutorial.basicEditingUnlocked", (function() {
                    return !this.get("canAddPage") || !this.get("tutorial.basicEditingUnlocked")
                })),
                tooltip: o.Ember.computed.alias("tra.perks_page_add_page_label"),
                disabledTooltip: o.Ember.computed("canAddPage", "tutorial.basicEditingUnlocked", "platformSettings.MinSummonerLevelBasicEditing", (function() {
                    return this.get("tutorial.basicEditingUnlocked") ? this.get("tra.perks_page_adding_disabled") : this.get("tra").formatString("perks_page_adding_disabled_level", {
                        level: this.get("platformSettings.MinSummonerLevelBasicEditing")
                    })
                }))
            });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(292)) && s.__esModule ? s : {
                    default: s
                };
            var l = o.Ember.Component.extend((0, i.default)("disabled"), {
                tagName: "lol-uikit-close-button",
                attributeBindings: ["click-sfx-src", "disabled", "isLoading:loading"],
                isLoading: !1,
                didInsertElement() {
                    this._super(...arguments), this.element.addEventListener("closeButtonClick", (function(e) {
                        e.stopPropagation()
                    }))
                },
                click: function() {
                    this.get("disabled") || this.sendAction()
                }
            });
            t.default = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function(e, t = e) {
                const n = `_${t}Attr`;
                return s.Ember.Mixin.create({
                    attributeBindings: [`${n}:${t}`],
                    [n]: s.Ember.computed(e, (function() {
                        return this.get(e) ? "" : null
                    }))
                })
            };
            var s = n(1)
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = s.Ember.Component.extend({
                    classNames: ["clickable-icon-label-component"],
                    classNameBindings: ["disabled", "selected"],
                    audio: s.Ember.inject.service(),
                    showDisabledTooltip: s.Ember.computed.and("disabled", "disabledTooltipText"),
                    actions: {
                        onContainerHover() {
                            if (!this.get("disabled") && !this.get("selected")) {
                                const e = this.get("hoverSfxEvent");
                                e && this.get(`audio.${e}`).play()
                            }
                        },
                        onContainerClick() {
                            if (!this.get("disabled")) {
                                const e = this.get("clickSfxEvent");
                                e && this.get(`audio.${e}`).play(), this.sendAction("handleClick")
                            }
                        }
                    }
                });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(295)) && s.__esModule ? s : {
                    default: s
                },
                l = n(208);
            const a = 8e3,
                r = 8100,
                c = 8200,
                d = 8300,
                m = 8400,
                p = `${l.IMG_FOLDER}construct/`,
                u = ["construct", "construct_bg1", "construct_bg2", "construct_bg3", "construct_fg1", "construct_fg2", "construct_fg3", "environment_fg1", "environment_fg2", "environment_fg3", "keystone_bg1", "keystone_fg1", "keystone_fg2", "splash_bg1", "splash_bg3"];

            function h(e) {
                switch (e) {
                    case o.gsap.Circ.easeIn:
                        return "cubic-bezier(1,0,1,1)";
                    case o.gsap.Circ.easeOut:
                        return "cubic-bezier(0,1,1,1)";
                    case o.gsap.Power3.easeOut:
                        return "cubic-bezier(0.2, 0.85, 0.35, 1)";
                    default:
                        return e
                }
            }

            function g(e, t) {
                e.style.backgroundImage = t ? `url(${p}${t})` : null
            }
            var f = o.Ember.Component.extend({
                tagName: "lol-perks-construct-minspec",
                classNames: ["lol-perks-construct-minspec-component"],
                attributeBindings: ["canAnimate:can-animate", "primary"],
                init() {
                    this._super(...arguments), this.setProperties({
                        _primaryId: null,
                        _secondaryId: null,
                        _keystoneId: null,
                        _animations: []
                    })
                },
                didInsertElement() {
                    this._super(...arguments), this._getNodeRefs(), o.Ember.run.scheduleOnce("afterRender", this, this._checkAllAttributes)
                },
                didUpdateAttrs() {
                    this._super(...arguments), o.Ember.run.scheduleOnce("afterRender", this, this._checkAllAttributes)
                },
                willDestroyElement() {
                    this._tlMaster && this._tlMaster.kill(), this._tlSplash && this._tlSplash.kill(), this._tlConstruct && this._tlConstruct.kill(), this._tlKeystone && this._tlKeystone.kill();
                    for (const e of this._animations) e.animation.cancel();
                    this._super(...arguments)
                },
                _checkAllAttributes() {
                    const e = parseInt(this.get("primary")) || null,
                        t = e !== this._primaryId;
                    t && (this._primaryId = this._secondaryId = this._keystoneId = null);
                    const n = parseInt(this.get("secondary")) || null,
                        s = n !== this._secondaryId,
                        o = parseInt(this.get("keystone")) || null,
                        i = o !== this._keystoneId,
                        l = "" === this.get("canAnimate");
                    t && this._clearMaster(e), l && e && (this._primaryId = e, this._secondaryId = n, this._keystoneId = o, this._updatePrimaryNodes(), s && this._updateSplash(), i && this._updateKeystone(), t && this._updatePrimary())
                },
                _clearMaster(e) {
                    this._tlConstruct && this._tlConstruct.kill(), this._tlMaster && this._tlMaster.kill(), this._tlConstruct = null, this._tlMaster = null, this._clearNodes(), this._clearElement(this._nodes.splash), this._clearElement(this._nodes.keystone), e && g(this.element, `${e}/environment.jpg`)
                },
                _clearElement(e) {
                    e.removeAttribute("style");
                    for (const t of this._animations)
                        if (t.element === e) return t.animation.cancel(), void this._animations.splice(this._animations.indexOf(t))
                },
                _getNodeRefs() {
                    this._nodes = {};
                    const e = this.element.querySelectorAll("div");
                    for (let t = 0; t < e.length; t++) {
                        const n = e[t],
                            s = n.getAttribute("id");
                        this._nodes[s] = n
                    }
                },
                _animateScale(e, t, n, s, o, i) {
                    const {
                        length: l
                    } = e;
                    if (l) {
                        for (let i = 0; i < l; i++) this._animateScale(e[i], t, n, s, o);
                        return
                    }
                    const a = e.animate([{
                            transform: `scale(${t})`
                        }, {
                            transform: `scale(${n})`
                        }], {
                            duration: 1e3 * s,
                            easing: h(o)
                        }),
                        r = {
                            animation: a,
                            element: e
                        };
                    this._animations.push(r), a.addEventListener("finish", (() => {
                        this._animations.splice(this._animations.indexOf(r), 1), i ? i() : 1 !== n && (e.style.transform = `scale(${n})`)
                    }))
                },
                _animateScaleX(e, t, n, s, o) {
                    const i = e.animate([{
                            transform: `scaleX(${t})`
                        }, {
                            transform: `scaleX(${n})`
                        }], {
                            duration: 1e3 * s,
                            easing: h(o)
                        }),
                        l = {
                            animation: i,
                            element: e
                        };
                    this._animations.push(l), i.addEventListener("finish", (() => {
                        this._animations.splice(this._animations.indexOf(l), 1), 1 !== n && (e.style.transform = `scaleX(${n})`)
                    }))
                },
                _updatePrimary() {
                    switch (this._playSound(`primary${this._primaryId}`), this._tlConstruct = new o.gsap.TimelineLite({
                            onComplete: () => {
                                this._tlConstruct = null
                            }
                        }), this._tlMaster = new o.gsap.TimelineLite({
                            onComplete: () => {
                                this._tlMaster = null
                            }
                        }), this._primaryId) {
                        case r:
                            this._animateDominationConstruct(), this._animateDominationMaster();
                            break;
                        case d:
                            this._animateInspirationConstruct(), this._animateInspirationMaster();
                            break;
                        case a:
                            this._animatePrecisionConstruct(), this._animatePrecisionMaster();
                            break;
                        case m:
                            this._animateResolveConstruct(), this._animateResolveMaster();
                            break;
                        case c:
                            this._animateSorceryConstruct(), this._animateSorceryMaster()
                    }
                },
                _clearNodes() {
                    for (let e = 0, {
                            length: t
                        } = u; e < t; e++) this._nodes[u[e]].style.display = "none", o.gsap.TweenLite.set(this._nodes[u[e]], {
                        clearProps: "all"
                    })
                },
                _updatePrimaryNodes() {
                    const e = i.default[this._primaryId];
                    for (const t in e) {
                        const n = this._nodes[t];
                        o.gsap.TweenLite.set(n, {
                            clearProps: "all"
                        }), n.style.width = e[t].width + "px", n.style.height = e[t].height + "px", n.style.left = e[t].x + "px", n.style.top = e[t].y + "px", n.style.transformOrigin = e[t].origin, n.style.transform = "rotate(" + e[t].rotation + "deg)", g(n, e[t].image)
                    }
                    g(this._nodes.construct, `${this._primaryId}/construct.png`)
                },
                _updateSplash() {
                    this._playSound(`secondary${this._secondaryId}`);
                    const {
                        splash: e
                    } = this._nodes;
                    if (!this._secondaryId) return e.style.backgroundImage = null, void(this._tlSplash && (this._tlSplash.kill(), this._tlSplash = null));
                    switch (g(e, `${this._primaryId}/second/${this._secondaryId}.png`), this._tlSplash && this._tlSplash.kill(), this._tlSplash = new o.gsap.TimelineLite({
                            onComplete: () => {
                                this._tlSplash = null
                            }
                        }), this._primaryId) {
                        case r:
                            this._animateDominationSplash();
                            break;
                        case d:
                            this._animateInspirationSplash();
                            break;
                        case a:
                            this._animatePrecisionSplash();
                            break;
                        case m:
                            this._animateResolveSplash();
                            break;
                        case c:
                            this._animateSorcerySplash()
                    }
                },
                _updateKeystone() {
                    const {
                        keystone: e
                    } = this._nodes;
                    if (!this._keystoneId) return e.style.backgroundImage = null, void(this._tlKeystone && (this._tlKeystone.kill(), this._tlKeystone = null));
                    switch (g(e, `${this._primaryId}/keystones/${this._keystoneId}.png`), this._tlKeystone && this._tlKeystone.kill(), this._tlKeystone = new o.gsap.TimelineLite({
                            onComplete: () => {
                                this._tlKeystone = null
                            }
                        }), this._primaryId) {
                        case r:
                            this._animateDominationKeystone();
                            break;
                        case d:
                            this._animateInspirationKeystone();
                            break;
                        case a:
                            this._animatePrecisionKeystone();
                            break;
                        case m:
                            this._animateResolveKeystone();
                            break;
                        case c:
                            this._animateSorceryKeystone()
                    }
                },
                _animateDominationConstruct() {
                    const {
                        construct: e
                    } = this._nodes, t = o.CustomEase.create("custom", "M0,0 C0.084,0.61 0.086,0.946 0.152,1 0.228,1.062 0.374,1 1,1");
                    e.style.transformOrigin = "53% 50%", this._tlConstruct.add("intro", 0).fromTo(e, .4, {
                        display: "none",
                        opacity: 0
                    }, {
                        display: "inline",
                        ease: o.gsap.Circ.easeOut,
                        opacity: 1
                    }, "intro").fromTo(e, 1.2, {
                        y: 65,
                        scaleX: .5
                    }, {
                        y: 0,
                        scaleX: 1,
                        ease: t
                    }, "intro").set(e, {
                        WebkitFilter: "brightness(0.5) sepia(0%)"
                    }, "intro").fromTo(e, 1, {
                        WebkitFilter: "brightness(4.0) sepia(100%)"
                    }, {
                        ease: o.gsap.Circ.easeOut,
                        WebkitFilter: "brightness(1.0) sepia(0%)"
                    }, "intro+=.20")
                },
                _animateInspirationConstruct() {
                    const {
                        construct: e
                    } = this._nodes;
                    this._tlConstruct.add("intro", 0).fromTo(e, .8, {
                        display: "none",
                        opacity: 0
                    }, {
                        display: "inline",
                        ease: o.gsap.Circ.easeOut,
                        opacity: 1
                    }, "intro").call(this._animateScale, [e, .9, 1, 1.4, o.gsap.Circ.easeOut], this, "intro").fromTo(e, 2, {
                        WebkitFilter: "brightness(4.5)"
                    }, {
                        ease: o.gsap.Expo.easeOut,
                        WebkitFilter: "brightness(1)"
                    }, "intro")
                },
                _animatePrecisionConstruct() {
                    const {
                        construct: e
                    } = this._nodes, t = o.CustomEase.create("custom", "M0,0 C0.084,0.61 0.086,0.946 0.152,1 0.228,1.062 0.374,1 1,1");
                    this._tlConstruct.add("intro", 0).fromTo(e, .8, {
                        display: "none",
                        opacity: 0
                    }, {
                        display: "inline",
                        ease: o.gsap.Circ.easeOut,
                        opacity: 1
                    }, "intro").fromTo(e, 1.2, {
                        y: -140
                    }, {
                        ease: t,
                        y: 0
                    }, "intro").fromTo(e, 1, {
                        WebkitFilter: "brightness(2.5)"
                    }, {
                        ease: o.gsap.Expo.easeOut,
                        WebkitFilter: "brightness(1)"
                    }, "intro+=.2")
                },
                _animateResolveConstruct() {
                    const {
                        construct: e
                    } = this._nodes;
                    this._tlConstruct.add("intro", 0).fromTo(e, .8, {
                        display: "none"
                    }, {
                        display: "inline",
                        ease: o.gsap.Circ.easeOut
                    }, "intro").fromTo(e, .12, {
                        y: -340
                    }, {
                        ease: o.gsap.Linear.easeNone,
                        y: 0
                    }, "intro").fromTo(e, 2, {
                        WebkitFilter: "brightness(1.5)"
                    }, {
                        ease: o.gsap.Expo.easeOut,
                        WebkitFilter: "brightness(1)"
                    }, "intro+=.3")
                },
                _animateSorceryConstruct() {
                    const {
                        construct: e
                    } = this._nodes;
                    this._tlConstruct.add("intro", 0).fromTo(e, .01, {
                        display: "none",
                        opacity: 0
                    }, {
                        display: "inline",
                        ease: o.gsap.Circ.easeOut,
                        opacity: 1
                    }, "intro").call(this._animateScale, [e, .97, 1, 1.2, o.gsap.Circ.easeOut], this, "intro").fromTo(e, 1, {
                        WebkitFilter: "brightness(2.5)"
                    }, {
                        WebkitFilter: "brightness(1)"
                    }, "intro+=.1")
                },
                _animateDominationSplash() {
                    const {
                        splash: e
                    } = this._nodes;
                    this._tlSplash.add("intro", 0).fromTo(e, .5, {
                        opacity: 0
                    }, {
                        opacity: 1,
                        ease: o.gsap.Circ.easeOut
                    }, "intro").fromTo(e, .8, {
                        display: "none"
                    }, {
                        display: "block",
                        ease: o.gsap.Circ.easeOut,
                        onStart: this._animateScale.bind(this, e, .88, 1, .8, o.gsap.Circ.easeOut)
                    }, "intro").fromTo(e, 1, {
                        WebkitFilter: "brightness(4)"
                    }, {
                        ease: o.gsap.Circ.easeOut,
                        WebkitFilter: "brightness(1)"
                    }, "intro")
                },
                _animateInspirationSplash() {
                    const {
                        splash: e
                    } = this._nodes;
                    this._tlSplash.add("intro", 0).fromTo(e, 1, {
                        display: "none",
                        opacity: .5
                    }, {
                        display: "inline",
                        ease: o.gsap.Circ.easeOut,
                        onStart: this._animateScale.bind(this, e, .88, 1, 1, o.gsap.Circ.easeOut),
                        opacity: 1
                    }, "intro").fromTo(e, 1, {
                        WebkitFilter: "brightness(4)"
                    }, {
                        ease: o.gsap.Circ.easeOut,
                        WebkitFilter: "brightness(1)"
                    }, "intro")
                },
                _animatePrecisionSplash() {
                    const {
                        splash: e
                    } = this._nodes;
                    this._tlSplash.add("intro", 0).fromTo(e, .5, {
                        opacity: 0
                    }, {
                        opacity: 1,
                        ease: o.gsap.Circ.easeOut
                    }, "intro").fromTo(e, .8, {
                        display: "none"
                    }, {
                        display: "inline",
                        ease: o.gsap.Circ.easeOut,
                        onStart: this._animateScale.bind(this, e, .88, 1, .8, o.gsap.Circ.easeOut)
                    }, "intro").fromTo(e, 1, {
                        WebkitFilter: "brightness(4)"
                    }, {
                        ease: o.gsap.Circ.easeOut,
                        WebkitFilter: "brightness(1)"
                    }, "intro")
                },
                _animateResolveSplash() {
                    const {
                        splash: e
                    } = this._nodes;
                    this._tlSplash.add("intro", 0).fromTo(e, .5, {
                        opacity: 0
                    }, {
                        opacity: 1,
                        ease: o.gsap.Circ.easeOut
                    }, "intro").fromTo(e, .8, {
                        display: "none"
                    }, {
                        display: "inline",
                        ease: o.gsap.Circ.easeOut,
                        onStart: this._animateScale.bind(this, e, .88, 1, .8, o.gsap.Circ.easeOut)
                    }, "intro").fromTo(e, 1, {
                        WebkitFilter: "brightness(4)"
                    }, {
                        ease: o.gsap.Circ.easeOut,
                        WebkitFilter: "brightness(1)"
                    }, "intro")
                },
                _animateSorcerySplash() {
                    const {
                        splash: e
                    } = this._nodes, t = o.CustomEase.create("custom", "M0,0 C0.084,0.61 0.024,0.906 0.09,0.96 0.166,1.022 0.374,1 1,1"), n = this._animateScale.bind(this, e, 1.004, 1, 1.82, "cubic-bezier(0.04, 1.51, 0.08, 1.03)");
                    this._tlSplash.add("intro", 0).fromTo(e, 2, {
                        display: "none",
                        opacity: 0
                    }, {
                        display: "inline",
                        ease: t,
                        onStart: this._animateScale.bind(this, e, 1.1, 1.004, .18, "cubic-bezier(0.97, 0.58, 0.27, 0.95)", n),
                        opacity: 1
                    }, "intro").fromTo(e, 1, {
                        WebkitFilter: "brightness(4)"
                    }, {
                        ease: o.gsap.Circ.easeOut,
                        WebkitFilter: "brightness(1)"
                    }, "intro")
                },
                _animateDominationKeystone() {
                    const {
                        keystone: e
                    } = this._nodes;
                    e.style.transformOrigin = "56% 62%", this._tlKeystone.add("intro", 0).fromTo(e, .5, {
                        opacity: 0
                    }, {
                        opacity: 1,
                        ease: o.gsap.Circ.easeOut
                    }, "intro").call(this._animateScale, [e, 2, 1, .3, o.gsap.Circ.easeIn], this, "intro").fromTo(e, 1, {
                        WebkitFilter: "brightness(2.5)"
                    }, {
                        ease: o.gsap.Circ.easeOut,
                        immediateRender: !1,
                        WebkitFilter: "brightness(1)"
                    }, "intro+=.3")
                },
                _animateInspirationKeystone() {
                    const {
                        keystone: e
                    } = this._nodes;
                    e.style.transformOrigin = "55% 50%", this._tlKeystone.add("intro", 0).fromTo(e, .8, {
                        opacity: 0
                    }, {
                        ease: o.gsap.Circ.easeOut,
                        opacity: 1,
                        onStart: this._animateScale.bind(this, e, .88, 1, .8, o.gsap.Circ.easeOut)
                    }, "intro").fromTo(e, 1, {
                        WebkitFilter: "brightness(2.5)"
                    }, {
                        ease: o.gsap.Circ.easeOut,
                        WebkitFilter: "brightness(1)"
                    }, "intro+=.1")
                },
                _animatePrecisionKeystone() {
                    const {
                        keystone: e
                    } = this._nodes;
                    this._tlKeystone.set(e, {
                        transformOrigin: "54% 44%"
                    }).add("intro", 0).fromTo(e, .8, {
                        display: "none",
                        opacity: 0
                    }, {
                        display: "inline",
                        ease: o.gsap.Circ.easeOut,
                        opacity: 1,
                        onStart: this._animateScale.bind(this, e, 1.35, 1, .8, o.gsap.Circ.easeOut)
                    }, "intro").fromTo(e, 1, {
                        WebkitFilter: "brightness(2.5)"
                    }, {
                        ease: o.gsap.Expo.easeOut,
                        WebkitFilter: "brightness(1)"
                    }, "intro+=.1")
                },
                _animateResolveKeystone() {
                    const {
                        keystone: e
                    } = this._nodes;
                    this._tlKeystone.set(e, {
                        transformOrigin: "59% 55%"
                    }).add("intro", 0).fromTo(e, .5, {
                        opacity: 0,
                        display: "none"
                    }, {
                        opacity: 1,
                        display: "inline",
                        ease: o.gsap.Circ.easeOut
                    }, "intro").call(this._animateScale, [e, 1.4, 1, .3, o.gsap.Circ.easeIn], this, "intro").fromTo(e, 1, {
                        WebkitFilter: "brightness(2.5)"
                    }, {
                        ease: o.gsap.Circ.easeOut,
                        immediateRender: !1,
                        WebkitFilter: "brightness(1)"
                    }, "intro+=.3")
                },
                _animateSorceryKeystone() {
                    const {
                        keystone: e
                    } = this._nodes;
                    this._tlKeystone.set(e, {
                        transformOrigin: "52% 52%"
                    }).add("intro", 0).fromTo(e, .65, {
                        opacity: 0
                    }, {
                        ease: o.gsap.Circ.easeOut,
                        onStart: this._animateScale.bind(this, e, 1.8, 1, .65, o.gsap.Circ.easeOut),
                        opacity: 1
                    }, "intro").fromTo(e, 1, {
                        WebkitFilter: "brightness(3.5)"
                    }, {
                        WebkitFilter: "brightness(1)",
                        ease: o.gsap.Circ.easeOut
                    }, "intro+=.2")
                },
                _animateDominationMaster() {
                    const e = this._nodes.keystone_bg1,
                        t = this._nodes.construct_bg1,
                        n = this._nodes.environment_fg1;
                    this._tlMaster.add("complete", 0).fromTo(n, .25, {
                        display: "none",
                        opacity: 0
                    }, {
                        display: "block",
                        ease: o.gsap.Linear.easeNone,
                        opacity: 1
                    }, "complete").fromTo(n, 1, {
                        opacity: 1
                    }, {
                        ease: o.gsap.Linear.easeNone,
                        immediateRender: !1,
                        opacity: 0
                    }, "complete+=.25").fromTo(this._nodes.construct_fg1, 1.2, {
                        display: "none"
                    }, {
                        display: "block",
                        onStart: this._animateScale.bind(this, this._nodes.construct_fg1, .5, 1.3, 1.2, o.gsap.Circ.easeOut)
                    }, "complete+=10.25").fromTo(this._nodes.construct_fg1, 1.2, {
                        opacity: 2
                    }, {
                        opacity: 0
                    }, "complete+=.25").fromTo(t, 1.2, {
                        display: "none",
                        scaleY: .5
                    }, {
                        display: "block",
                        ease: o.gsap.Circ.easeOut,
                        scaleY: 1
                    }, "complete+=.25").fromTo(t, 1.2, {
                        opacity: 1.5
                    }, {
                        opacity: 0
                    }, "complete+=.25").fromTo(this._nodes.construct_bg2, .57, {
                        opacity: 1,
                        display: "none"
                    }, {
                        display: "block",
                        ease: o.gsap.Linear.easeNone,
                        onStart: this._animateScale.bind(this, this._nodes.construct_bg2, .5, 1, .57, o.gsap.Circ.easeOut),
                        opacity: 0
                    }, "complete+=.45").fromTo(this._nodes.construct_bg3, .57, {
                        opacity: 1,
                        display: "none"
                    }, {
                        display: "block",
                        ease: o.gsap.Linear.easeNone,
                        onStart: this._animateScale.bind(this, this._nodes.construct_bg3, .5, .8, .57, o.gsap.Circ.easeOut),
                        opacity: 0
                    }, "complete+=.45").fromTo(this._nodes.construct_fg2, .57, {
                        y: .5
                    }, {
                        ease: o.gsap.Circ.easeOut,
                        onStart: this._animateScale.bind(this, this._nodes.construct_fg2, 1, .8, .57, o.gsap.Circ.easeOut)
                    }, "complete+=.45").add(this._tlConstruct, "complete+=.25"), this._tlSplash && this._tlMaster.add(this._tlSplash, "complete+=.65"), this._tlKeystone && this._tlMaster.add(this._tlKeystone, "complete+=.75"), this._keystoneId && this._tlMaster.fromTo(e, .57, {
                        display: "none",
                        opacity: 1
                    }, {
                        display: "block",
                        ease: o.gsap.Linear.easeNone,
                        opacity: 0
                    }, "complete+=1.1").call(this._animateScale, [e, .5, 1, .57, o.gsap.Circ.easeOut], this, "complete+=1.1")
                },
                _animateInspirationMaster() {
                    const e = this._nodes.environment_fg1,
                        t = this._nodes.construct_fg2,
                        n = this._nodes.construct_fg3,
                        s = o.CustomEase.create("custom", "0,0,.67,1"),
                        i = [this._nodes.construct, t, n];
                    this._tlMaster.add("complete", 0).call(this._animateScale, [i, .9, 1, 1.4, o.gsap.Circ.easeOut], this, "intro").fromTo(t, .17, {
                        opacity: 0,
                        display: "none"
                    }, {
                        opacity: 1,
                        display: "inline",
                        ease: s
                    }, "complete").to(t, 1.5, {
                        opacity: 0
                    }, "complete+=.37").fromTo(n, .17, {
                        opacity: 0,
                        display: "none"
                    }, {
                        opacity: 1,
                        display: "inline",
                        ease: s
                    }, "complete").to(n, .63, {
                        opacity: 0,
                        ease: s
                    }, "complete+=.17").fromTo(e, .2, {
                        opacity: 0,
                        display: "none"
                    }, {
                        opacity: .5,
                        display: "inline",
                        ease: s
                    }, "complete+=.1").to(e, 1, {
                        opacity: 0
                    }, "complete+=.37").fromTo(this._nodes.construct_bg1, .57, {
                        display: "none"
                    }, {
                        display: "inline",
                        ease: o.gsap.Circ.easeOut,
                        onStart: this._animateScale.bind(this, this._nodes.construct_bg1, .48, 1.35, .57, o.gsap.Circ.easeOut)
                    }, "complete").fromTo(this._nodes.construct_bg1, .57, {
                        opacity: 1
                    }, {
                        opacity: 0,
                        ease: o.gsap.Linear.easeNone
                    }, "complete").fromTo(this._nodes.construct_bg2, .57, {
                        display: "none"
                    }, {
                        display: "inline",
                        ease: o.gsap.Circ.easeOut,
                        onStart: this._animateScale.bind(this, this._nodes.construct_bg2, .48, 1, .57, o.gsap.Circ.easeOut)
                    }, "complete").fromTo(this._nodes.construct_bg2, .57, {
                        opacity: 1
                    }, {
                        opacity: 0,
                        ease: o.gsap.Linear.easeNone
                    }, "complete").add(this._tlConstruct, "complete+=.18"), this._tlSplash && this._tlMaster.add(this._tlSplash, "complete+=.27"), this._tlKeystone && this._tlMaster.add(this._tlKeystone, "complete+=.55"), this._keystoneId && this._tlMaster.fromTo(this._nodes.keystone_bg1, .57, {
                        display: "none"
                    }, {
                        display: "inline",
                        ease: o.gsap.Circ.easeOut,
                        onStart: this._animateScale.bind(this, this._nodes.keystone_bg1, 1, 1.5, .57, o.gsap.Circ.easeOut)
                    }, "complete+=.55").fromTo(this._nodes.keystone_bg1, .57, {
                        opacity: 1
                    }, {
                        opacity: 0,
                        ease: o.gsap.Linear.easeNone
                    }, "complete+=.55")
                },
                _animatePrecisionMaster() {
                    const e = o.CustomEase.create("custom", "M0,0 C0.084,0.61 0.086,0.946 0.152,1 0.228,1.062 0.374,1 1,1"),
                        t = o.CustomEase.create("custom", "M0,0 C0,0.582 0.137,1 0.33,1 0.474,1 0.588,0 1,0"),
                        n = this._nodes.environment_fg1,
                        s = this._nodes.environment_fg2,
                        i = this._nodes.environment_fg3,
                        l = this._nodes.construct_fg1,
                        a = this._nodes.construct_fg2,
                        r = this._nodes.construct_fg3,
                        c = [i, n, s, l, a, r];
                    this._tlMaster.add("complete", 0).fromTo(c, 1, {
                        display: "none"
                    }, {
                        display: "inline"
                    }, "complete").fromTo(l, 1.2, {
                        y: -140
                    }, {
                        y: 0,
                        force3D: !0,
                        ease: e
                    }, "complete").fromTo(l, 1.5, {
                        opacity: 1
                    }, {
                        opacity: 0
                    }, "complete+=.5").fromTo(a, .4, {
                        y: -200
                    }, {
                        y: 100
                    }, "complete").fromTo(a, .4, {
                        opacity: 0
                    }, {
                        opacity: 1,
                        ease: t
                    }, "complete").fromTo(r, .4, {
                        y: -200
                    }, {
                        y: 100
                    }, "complete+=.2").fromTo(r, .4, {
                        opacity: 0
                    }, {
                        opacity: 1,
                        ease: t
                    }, "complete").fromTo(i, .2, {
                        opacity: 0
                    }, {
                        opacity: 1
                    }, "complete").to(i, 1, {
                        opacity: 0
                    }, "complete+=.3").call(this._animateScaleX, [i, 1, 1.2, 1, void 0], this, "complete").call(this._animateScale, [n, .5, 1, .4], this, "complete").fromTo(n, .4, {
                        opacity: 0
                    }, {
                        opacity: 1,
                        ease: t
                    }, "complete").call(this._animateScale, [s, .5, 1, .4], this, "complete+=0.2").fromTo(s, .4, {
                        opacity: 0
                    }, {
                        opacity: .8,
                        ease: t
                    }, "complete+=.2").call(this._animateScale, [n, .5, 1, .5], this, "complete+=0.4").fromTo(n, .5, {
                        opacity: 0
                    }, {
                        opacity: .65,
                        ease: t
                    }, "complete+=.4").add(this._tlConstruct, "complete"), this._tlSplash && this._tlMaster.add(this._tlSplash, "complete+=.3"), this._tlKeystone && this._tlMaster.add(this._tlKeystone, "complete+=.6")
                },
                _animateResolveMaster() {
                    this._tlMaster.add("complete", 0).fromTo(this._nodes.construct_fg1, .8, {
                        display: "none"
                    }, {
                        display: "inline"
                    }, "complete+=.25").fromTo(this._nodes.construct_fg1, .12, {
                        y: -340
                    }, {
                        ease: o.gsap.Linear.easeNone,
                        force3D: !0,
                        y: 0
                    }, "complete+=.25").fromTo(this._nodes.construct_fg2, .8, {
                        display: "none"
                    }, {
                        display: "inline"
                    }, "complete+=.38").fromTo(this._nodes.construct_fg1, 1, {
                        opacity: 1
                    }, {
                        opacity: 0
                    }, "complete+=.8").fromTo(this._nodes.keystone_fg1, .8, {
                        display: "none"
                    }, {
                        display: "inline"
                    }, "complete+=.4").call(this._animateScale, [this._nodes.keystone_fg1, 1, 1.2, 1, o.gsap.Power3.easeOut], this, "complete+=0.4").fromTo(this._nodes.keystone_fg1, .9, {
                        opacity: 1
                    }, {
                        opacity: 0
                    }, "complete+=.5").fromTo(this._nodes.keystone_fg2, .8, {
                        display: "none"
                    }, {
                        display: "inline"
                    }, "complete+=.4").call(this._animateScale, [this._nodes.keystone_fg2, .5, 1.1, 1.1, o.gsap.Power3.easeOut], this, "complete+=0.4").fromTo(this._nodes.keystone_fg2, 1, {
                        opacity: 1
                    }, {
                        opacity: 0
                    }, "complete+=.5").add(this._tlConstruct, "complete+=.25"), this._tlSplash && this._tlMaster.add(this._tlSplash, "complete+=.65"), this._tlKeystone && this._tlMaster.add(this._tlKeystone, "complete+=.85")
                },
                _animateSorceryMaster() {
                    const e = o.CustomEase.create("custom", "M0,0,C0.164,0,0.293,1,0.42,1,0.59,1,0.408,0,1,0"),
                        t = o.CustomEase.create("custom", "M0,0.5 C0.08,0.797 0.034,1 0.162,1 0.332,1 0.408,0 1,0"),
                        n = o.CustomEase.create("custom", "M0,0 C0,0.638 0,1.61 0.256,1.61 1.01,1.61 1,1 1,1"),
                        s = this._nodes.environment_fg1,
                        i = this._nodes.environment_fg2,
                        l = this._nodes.splash_bg3,
                        a = this._nodes.environment_fg3,
                        r = this._nodes.construct_bg1,
                        c = this._nodes.construct_bg2,
                        d = this._nodes.construct_bg3,
                        m = this._nodes.construct_fg1,
                        p = this._nodes.construct_fg2,
                        u = [d, c, r, m],
                        h = this._animateScale.bind(this, a, .8, 0, .138, "cubic-bezier(0.04, 1.51, 0.08, 1.03)");
                    this._tlMaster.add("complete", 0).fromTo([s, i, l], .8, {
                        display: "none"
                    }, {
                        display: "inline"
                    }, "complete").fromTo(s, 1.6, {
                        opacity: 0
                    }, {
                        opacity: 1,
                        ease: e
                    }, "complete").fromTo(s, 1.5, {
                        opacity: 0
                    }, {
                        opacity: .5,
                        ease: t
                    }, "complete+=.9").call(this._animateScale, [i, 0, 1, .35, o.gsap.Circ.easeIn], this, "complete").fromTo(i, .1, {
                        display: "inline"
                    }, {
                        display: "none"
                    }, "complete+=.35").call(this._animateScale, [l, 0, 1.2, .5, o.gsap.Circ.easeOut], this, "complete+=0.4").fromTo(l, .5, {
                        opacity: 1
                    }, {
                        opacity: 0
                    }, "complete+=.45").fromTo(a, .8, {
                        display: "none"
                    }, {
                        display: "inline"
                    }, "complete+=.4").call(this._animateScale, [a, 0, .8, .362, "cubic-bezier(0.97, 0.58, 0.27, 0.95)", h], this, "complete+=0.4").fromTo(a, .4, {
                        backgroundPosition: "0px"
                    }, {
                        backgroundPosition: "-552px",
                        ease: o.gsap.SteppedEase.config(4)
                    }, "complete+=.5").fromTo(u, .8, {
                        display: "none"
                    }, {
                        display: "inline"
                    }, "complete+=.4").fromTo(u, 0, {
                        display: "inline"
                    }, {
                        display: "none"
                    }, "complete+=.9").fromTo(d, .5, {
                        x: 72,
                        y: 45,
                        rotation: -20
                    }, {
                        x: 0,
                        y: 0,
                        rotation: 0,
                        ease: n
                    }, "complete+=.4").fromTo(c, .5, {
                        x: 30,
                        y: -115,
                        rotation: 20
                    }, {
                        x: 0,
                        y: 0,
                        rotation: 0,
                        ease: n
                    }, "complete+=.4").fromTo(r, .5, {
                        x: -50,
                        y: -45,
                        rotation: -20
                    }, {
                        x: 0,
                        y: 0,
                        rotation: 0,
                        ease: n
                    }, "complete+=.4").fromTo(m, .5, {
                        x: -25,
                        y: 100,
                        rotation: 20
                    }, {
                        x: 0,
                        y: 0,
                        rotation: 0,
                        ease: n
                    }, "complete+=.4").fromTo(p, .2, {
                        backgroundPosition: "0px",
                        display: "none"
                    }, {
                        backgroundPosition: "-978px",
                        display: "inline",
                        ease: o.gsap.SteppedEase.config(3)
                    }, "complete+=1.3").fromTo(p, 0, {
                        display: "inline"
                    }, {
                        display: "none",
                        immediateRender: !1
                    }, "complete+=1.6").add(this._tlConstruct, "complete+=.9"), this._tlSplash && this._tlMaster.add(this._tlSplash, "complete+=1"), this._tlKeystone && this._tlMaster.add(this._tlKeystone, "complete+=1")
                },
                _playSound(e) {
                    this.element.dispatchEvent(new CustomEvent("play-sound", {
                        detail: {
                            str: e
                        }
                    }))
                }
            });
            t.default = f
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            t.default = {
                8e3: {
                    construct_fg1: {
                        image: "8000/auxillary/p-construct_light.png",
                        width: 342,
                        height: 492,
                        x: 656,
                        y: 120,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    construct_fg2: {
                        image: "8000/auxillary/p-particles1.png",
                        width: 310,
                        height: 580,
                        x: 674,
                        y: 70,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    construct_fg3: {
                        image: "8000/auxillary/p-particles1.png",
                        width: 310,
                        height: 580,
                        x: 674,
                        y: 70,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    environment_fg1: {
                        image: "8000/auxillary/p-construct_blast1.png",
                        width: 408,
                        height: 130,
                        x: 620,
                        y: 538,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    environment_fg2: {
                        image: "8000/auxillary/p-construct_blast2.png",
                        width: 408,
                        height: 130,
                        x: 620,
                        y: 538,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    environment_fg3: {
                        image: "8000/auxillary/p-beam1.png",
                        width: 310,
                        height: 668,
                        x: 674,
                        y: 0,
                        origin: "50% 50%",
                        rotation: 0
                    }
                },
                8100: {
                    environment_fg1: {
                        image: "8100/auxillary/d-welllight.png",
                        width: 494,
                        height: 540,
                        x: 581,
                        y: 180,
                        origin: "50% 80%",
                        rotation: 0
                    },
                    construct_bg3: {
                        image: "8100/auxillary/d-shockwave1.png",
                        width: 597,
                        height: 554,
                        x: 530,
                        y: 130,
                        origin: "50% 50%",
                        rotation: 90
                    },
                    construct_bg2: {
                        image: "8100/auxillary/d-shockwave1.png",
                        width: 597,
                        height: 554,
                        x: 530,
                        y: 130
                    },
                    construct_bg1: {
                        image: "8100/auxillary/d-vapor2.png",
                        width: 334,
                        height: 670,
                        x: 663,
                        y: 110,
                        origin: "50% 80%",
                        rotation: 0
                    },
                    construct_fg1: {
                        image: "8100/auxillary/d-vapor1.png",
                        width: 334,
                        height: 670,
                        x: 663,
                        y: 50,
                        origin: "50% 80%",
                        rotation: 0
                    },
                    environment_fg2: {
                        image: "8100/auxillary/d-vapor1.png",
                        width: 334,
                        height: 670,
                        x: 663,
                        y: 50,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    keystone_bg1: {
                        image: "8100/auxillary/d-shockwave2.png",
                        width: 149,
                        height: 139,
                        x: 755,
                        y: 390,
                        origin: "50% 80%",
                        rotation: 0
                    }
                },
                8200: {
                    environment_fg1: {
                        image: "8200/auxillary/s-bg_light.png",
                        width: 644,
                        height: 536,
                        x: 518,
                        y: 184,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    environment_fg2: {
                        image: "8200/auxillary/s-spark.png",
                        width: 152,
                        height: 160,
                        x: 751,
                        y: 309,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    environment_fg3: {
                        image: "8200/auxillary/s-core.png",
                        width: 138,
                        height: 142,
                        x: 759,
                        y: 319,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    construct_bg3: {
                        image: "8200/auxillary/s-conrock1.png",
                        width: 142,
                        height: 194,
                        x: 685,
                        y: 250,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    construct_bg2: {
                        image: "8200/auxillary/s-conrock2.png",
                        width: 160,
                        height: 210,
                        x: 717,
                        y: 400,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    construct_bg1: {
                        image: "8200/auxillary/s-conrock3.png",
                        width: 160,
                        height: 194,
                        x: 815,
                        y: 358,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    construct_fg1: {
                        image: "8200/auxillary/s-conrock4.png",
                        width: 180,
                        height: 194,
                        x: 771,
                        y: 188,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    construct_fg2: {
                        image: "8200/auxillary/s-aftershocks.png",
                        width: 326,
                        height: 396,
                        x: 666,
                        y: 226,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    splash_bg3: {
                        image: "8200/auxillary/s-shockwave.png",
                        width: 558,
                        height: 616,
                        x: 550,
                        y: 65,
                        origin: "50% 50%",
                        rotation: 0
                    }
                },
                8300: {
                    environment_fg1: {
                        image: "8300/auxillary/i-lightborder.png",
                        width: 621,
                        height: 665,
                        x: 460,
                        y: 55,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    construct_fg2: {
                        image: "8300/auxillary/i-lighttrace1.png",
                        width: 504,
                        height: 504,
                        x: 582,
                        y: 134,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    construct_fg3: {
                        image: "8300/auxillary/i-construct_rays.png",
                        width: 479,
                        height: 484,
                        x: 591,
                        y: 141,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    construct_bg1: {
                        image: "8300/auxillary/i-_shockwave.png",
                        width: 597,
                        height: 554,
                        x: 532,
                        y: 95,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    construct_bg2: {
                        image: "8300/auxillary/i-_shockwave.png",
                        width: 597,
                        height: 554,
                        x: 532,
                        y: 95,
                        origin: "50% 50%",
                        rotation: 270
                    },
                    keystone_bg1: {
                        image: "8300/auxillary/i-_shockwave2.png",
                        width: 150,
                        height: 150,
                        x: 762,
                        y: 300,
                        origin: "50% 50%",
                        rotation: 0
                    }
                },
                8400: {
                    construct_fg1: {
                        image: "8400/auxillary/r-construct_light.png",
                        width: 360,
                        height: 492,
                        x: 648,
                        y: 195,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    construct_fg2: {
                        image: "8400/auxillary/r-plateau.png",
                        width: 570,
                        height: 222,
                        x: 568,
                        y: 497,
                        origin: "50% 50%",
                        rotation: 0
                    },
                    keystone_fg1: {
                        image: "8400/auxillary/r-plumes1.png",
                        width: 746,
                        height: 444,
                        x: 420,
                        y: 191,
                        origin: "50% 80%",
                        rotation: 0
                    },
                    keystone_fg2: {
                        image: "8400/auxillary/r-plumes2.png",
                        width: 1129,
                        height: 617,
                        x: 170,
                        y: 255,
                        origin: "55% 50%",
                        rotation: 0
                    }
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = s.Ember.Component.extend({
                    classNames: ["perks-delete-page-button"],
                    tagName: "lol-perks-garbage-button",
                    tooltip: s.Ember.computed.alias("tra.perks_page_delete_page"),
                    disabledTooltip: s.Ember.computed.alias("tra.perks_page_deleting_disabled")
                });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(298)) && s.__esModule ? s : {
                    default: s
                };
            var l = o.Ember.Component.extend({
                classNames: ["framed-perk-icon-component"],
                classNameBindings: ["styleIdName", "isStatMod:stat-shard"],
                sanitizeOverride: (0, i.default)()
            });
            t.default = l
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function() {
                return {
                    allowedTags: ["p", "em", "i", "br", "b", "strong", "hr", "h1", "h2", "h3", "a", "h4", "h5", "strike", "code", "ul", "ol", "li", "blockquote", "lol-uikit-tooltipped-keyword"],
                    allowedAttributes: {
                        "lol-uikit-tooltipped-keyword": ["key"]
                    }
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = l(n(298)),
                i = l(n(300));

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const a = s.Ember.Component.extend(i.default, {
                classNames: ["keystone_icon"],
                classNameBindings: ["hasContainer"],
                sanitizeOverride: (0, o.default)(),
                showGamePlayUpdateDot: s.Ember.computed("hasGameplayUpdate", "hideGamePlayUpdateDot", (function() {
                    return this.get("hasGameplayUpdate") && !this.get("hideGamePlayUpdateDot")
                })),
                description: s.Ember.computed("showLongDescriptions", "keystone.shortDesc", "keystone.longDesc", (function() {
                    return this.get("showLongDescriptions") ? this.get("keystone.longDesc") : this.get("keystone.shortDesc")
                })),
                perk: s.Ember.computed.alias("keystone")
            });
            a.reopenClass({
                positionalParams: ["keystone", "showLongDescriptions"]
            });
            var r = a;
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = function(e, t) {
                if (!t && e && e.__esModule) return e;
                if (null === e || "object" != typeof e && "function" != typeof e) return {
                    default: e
                };
                var n = o(t);
                if (n && n.has(e)) return n.get(e);
                var s = {},
                    i = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var l in e)
                    if ("default" !== l && Object.prototype.hasOwnProperty.call(e, l)) {
                        var a = i ? Object.getOwnPropertyDescriptor(e, l) : null;
                        a && (a.get || a.set) ? Object.defineProperty(s, l, a) : s[l] = e[l]
                    } s.default = e, n && n.set(e, s);
                return s
            }(n(1));

            function o(e) {
                if ("function" != typeof WeakMap) return null;
                var t = new WeakMap,
                    n = new WeakMap;
                return (o = function(e) {
                    return e ? n : t
                })(e)
            }
            const i = (0, s.emberDataBinding)({
                Ember: s.Ember,
                websocket: s.default.getProvider().getSocket(),
                basePaths: {
                    perksEndpoint: "/lol-perks"
                },
                boundProperties: {
                    gameplayUpdatedPerks: {
                        api: "perksEndpoint",
                        path: "/v1/perks/gameplay-updated",
                        default: []
                    }
                }
            });
            var l = s.Ember.Mixin.create(i, {
                hasGameplayUpdate: s.Ember.computed("perk", "gameplayUpdatedPerks.[]", (function() {
                    return this.get("gameplayUpdatedPerks").includes(this.get("perk.id"))
                }))
            });
            t.default = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            var o = s.Ember.Component.extend({
                tagName: "",
                classNames: ["link_to_page"],
                pageId: void 0,
                primaryStyleId: void 0,
                keystone: void 0,
                class: void 0,
                isEditing: s.Ember.computed.bool("pageId"),
                isCreating: s.Ember.computed("primaryStyleId", "keystone", (function() {
                    return !(!this.get("primaryStyleId") && !this.get("keystone"))
                }))
            });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            var o = s.Ember.Component.extend({
                tagName: "lol-uikit-flat-checkbox",
                attributeBindings: ["showLongDescriptions:checked"],
                classNames: ["longDescriptions"],
                draggable: !1,
                settings: s.Ember.inject.service(),
                forceLongDescriptions: !1,
                longDescriptionsSoftEnabled: !1,
                showLongDescriptions: s.Ember.computed("forceLongDescriptions", {
                    get() {
                        const e = this.get("longDescriptionsSoftEnabled") || this.get("forceLongDescriptions");
                        return this.showLongDescriptionsChanged(e), e
                    },
                    set(e, t) {
                        this.set("longDescriptionsSoftEnabled", t), this.get("settings").setSetting("showLongDescriptions", t);
                        const n = this.get("longDescriptionsSoftEnabled") || this.get("forceLongDescriptions");
                        return this.showLongDescriptionsChanged(n), n
                    }
                }),
                didInsertElement() {
                    this._super(...arguments), this.get("settings").getSetting("showLongDescriptions").then((e => {
                        this.set("showLongDescriptions", e)
                    })), this.set("_keyDown", this.keyDown.bind(this)), this.set("_keyUp", this.keyUp.bind(this)), document.addEventListener("keydown", this.get("_keyDown")), document.addEventListener("keyup", this.get("_keyUp"))
                },
                willDestroyElement() {
                    this._super(...arguments), document.removeEventListener("keydown", this.get("_keyDown")), document.removeEventListener("keyup", this.get("_keyUp"))
                },
                keyDown: function(e) {
                    16 === e.keyCode && this.set("forceLongDescriptions", !0)
                },
                keyUp: function(e) {
                    16 === e.keyCode && this.set("forceLongDescriptions", !1)
                },
                showLongDescriptionsDidChange: function() {
                    s.logger.warning("LongDescriptionsCheckboxComponent.showLongDescriptionsChanged() was not overridden by caller.")
                },
                actions: {
                    showLongDescriptionsDidChange: function() {
                        this.toggleProperty("showLongDescriptions")
                    }
                }
            });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const o = 13,
                i = 27,
                l = s.UIKit.getContextualNotificationManager(),
                a = s.UIKit.getTemplateHelper();
            let r;
            const c = s.Ember.TextField.extend({
                classNames: ["name-text-field", "page-name"],
                attributeBindings: ["maxlength", "initialValue:data-initialvalue"],
                maxlength: 25,
                isComponentActive: void 0,
                initialValue: s.Ember.computed.alias("page.name"),
                pageNamesSet: s.Ember.computed("pages.@each.name", (function() {
                    const e = this.get("pages"),
                        t = new Set;
                    for (const n of e) t.add(n.name.toLocaleLowerCase().trim());
                    return t
                })),
                focusOut() {
                    this._super(...arguments), this.makeInactive()
                },
                makeInactive() {
                    this.get("isComponentActive") && (this.checkForRename(), this.set("isComponentActive", !1))
                },
                willDestroyElement() {
                    s.Ember.run.cancel(r);
                    this.get("nameErrorNotification") && l.remove(this.get("nameErrorNotification")), this.set("nameErrorNotification", null)
                },
                didUpdateAttrs() {
                    this.copyInitialValue()
                },
                keyDown(e) {
                    this._super(...arguments), this.checkForSpecialKeys(e)
                },
                checkForSpecialKeys(e) {
                    e.keyCode === o ? (this.checkForRename(), this.set("isComponentActive", !1)) : e.keyCode === i && (this.copyInitialValue(), s.Ember.run.scheduleOnce("afterRender", this, (() => {
                        this.set("isComponentActive", !1)
                    })))
                },
                getTranslatedErrorMessage: function(e) {
                    return "INAPPROPRIATE" === e ? this.get("tra.perks_page_renaming_inappropriate") : "INVALID_CHARACTER" === e ? this.get("tra.perks_page_renaming_invalid_char") : ""
                },
                showNameErrorNotification: function(e) {
                    this.get("nameErrorNotification") && l.remove(this.get("nameErrorNotification"));
                    const t = a.contentBlockDialogSimple(this.getTranslatedErrorMessage(e), "tooltip-small"),
                        n = this.get("element");
                    if (n) {
                        const e = l.add(t, {
                            target: {
                                domNode: n,
                                anchor: {
                                    x: "center",
                                    y: "center"
                                }
                            },
                            offset: {
                                x: 100,
                                y: 100
                            },
                            anchor: {
                                x: "center",
                                y: "bottom"
                            },
                            orientation: "top"
                        });
                        e.onRemove.then((() => {
                            this.set("nameErrorNotification", null)
                        })), this.set("nameErrorNotification", e)
                    }
                },
                checkForRename: function() {
                    const e = this.get("initialValue"),
                        t = this.get("value") ? this.get("value").trim() : "";
                    if (t === e) return;
                    this.get("onRenamePending")(t);
                    const n = this.get("page.id"),
                        s = this.get("page"),
                        o = this.checkName(t, s).then((t => {
                            n === this.get("page.id") && (t.success ? this.consumeSanitizedText(e, t.name) : this.showNameErrorNotification(t.nameCheckResponse.errors[0]), this.get("onRenameComplete")(this.get("value")))
                        })),
                        i = this.get("pendingChangesPromise") || Promise.resolve();
                    return this.set("pendingChangesPromise", i.then((() => o)).catch((e => {
                        this.set("clean", !0), this.get("onRenameComplete")(this.get("value"))
                    }))), o
                },
                checkName: function(e, t) {
                    if (null !== t && !t.get("isEditable")) return Promise.reject("Page is not editable");
                    if (this.get("customPageRenamingDisabled")) return Promise.reject("Page renaming is disabled");
                    if (!this.get("restrictedPageNamesEnabled")) {
                        const t = {
                            success: !0,
                            name: e
                        };
                        return Promise.resolve(t)
                    }
                    const n = {
                        id: t.id,
                        name: e
                    };
                    return new Promise((function(e, t) {
                        (0, s.dataBinding)("/lol-perks", s.socket).put("/v1/pages/validate/", n).then((t => {
                            e(t)
                        })).catch((e => {
                            t("Cannot rename page")
                        }))
                    })).then((function(n) {
                        return t.set("clean", !n.success), t._setRestorePoint(), n.name = n.success ? e : t.name, n
                    }))
                },
                consumeSanitizedText: function(e, t) {
                    const n = this._getNewNameIfDuplicated(t, this.get("page.name"), this.get("pageNamesSet"));
                    n.length > 0 && n.length <= this.get("maxlength") && this.setPageName(n), this.copyInitialValue()
                },
                setPageName: function(e) {
                    this.set("page.name", e), this.set("page.clean", !1)
                },
                copyInitialValue: function() {
                    this.set("value", this.get("initialValue")), this.get("isComponentActive") && (r = s.Ember.run.scheduleOnce("afterRender", this, (() => {
                        this.element.focus()
                    })))
                },
                _getNewNameIfDuplicated: function(e, t, n) {
                    const s = e ? e.toLocaleLowerCase().trim() : "";
                    if (s !== (t ? t.toLocaleLowerCase().trim() : "") && n.has(s)) {
                        let t = 1,
                            s = `${e} (${t})`;
                        for (; n.has(s);) t++, s = `${e} (${t})`;
                        return s
                    }
                    return e
                },
                onRenamePending: () => {},
                onRenameComplete: () => {}
            });
            c.reopenClass({
                positionalParams: ["page", "pages"]
            });
            var d = c;
            t.default = d
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = n(207),
                l = n(208),
                a = (s = n(219)) && s.__esModule ? s : {
                    default: s
                };
            const {
                RunMixin: r
            } = o.EmberAddons.EmberLifeline, c = o.UIKit.getContextualNotificationManager(), d = o.UIKit.getTemplateHelper(), m = o.UIKit.getModalManager(), p = o.Ember.Component.extend(r, {
                classNames: ["page_editor", "perks-panel"],
                classNameBindings: ["canEdit:can-edit:cannot-edit", "styleBackgroundVideosEnabled", "_drawerIndexToBeOpen"],
                store: o.Ember.inject.service(),
                platformSettings: o.Ember.inject.service(),
                perksBook: o.Ember.computed.alias("store.perksBook"),
                staticData: o.Ember.computed.alias("store.perksStaticData"),
                settings: o.Ember.inject.service(),
                tutorial: o.Ember.inject.service(),
                audio: o.Ember.inject.service(),
                renameIsPending: !1,
                pendingChangesPromise: Promise.resolve(),
                selectableSplashedPerkSlots: o.Ember.computed("splashablePerkSlots", "subStyleSelectionCount", (function() {
                    const e = this.get("splashablePerkSlots"),
                        t = this.get("subStyleSelectionCount"),
                        n = [];
                    if (null !== e)
                        for (let s = 0; s < t && s < e.length; s++) n[s] = e[s], n[s].subStyleSlotIndex = s;
                    return n
                })),
                forceLongDescriptions: !1,
                _showLongDescriptions: o.Ember.computed.oneWay("initialSettings.showLongDescriptions"),
                showLongDescriptions: o.Ember.computed("_showLongDescriptions", "forceLongDescriptions", {
                    get() {
                        return this.get("_showLongDescriptions") || this.get("forceLongDescriptions")
                    },
                    set(e, t) {
                        return this.set("_showLongDescriptions", t) || this.get("forceLongDescriptions")
                    }
                }),
                gridModeEnabled: o.Ember.computed.oneWay("initialSettings.gridModeEnabled"),
                notGridModeEnabled: o.Ember.computed.not("gridModeEnabled"),
                restrictedPageNamesEnabled: o.Ember.computed.alias("platformSettings.RestrictedPageNamesEnabled"),
                customPageRenamingDisabled: o.Ember.computed.alias("platformSettings.PageRenamingDisabled"),
                customPageReorderingEnabled: o.Ember.computed.not("platformSettings.PageRenamingDisabled"),
                styleBackgroundVideosEnabled: !1,
                canAddPage: o.Ember.computed.and("perksBook.canAddPage", "tutorial.basicEditingUnlocked"),
                cannotAddPage: o.Ember.computed.not("canAddPage"),
                canSavePage: o.Ember.computed.alias("page.isEditable"),
                renameIsNotPending: o.Ember.computed.not("renameIsPending"),
                canEditPageName: o.Ember.computed("canSavePage", "customPageRenamingDisabled", "renameIsNotPending", (function() {
                    return this.get("canSavePage") && !this.get("customPageRenamingDisabled") && this.get("renameIsNotPending")
                })),
                _playedPrimaryProgressSound: !1,
                primaryMaxProgress: l.TOTAL_PRIMARY_PERKS + 1,
                primaryProgress: o.Ember.computed("page.normalizedSelectedPerkIds.[]", (function() {
                    let e = 1;
                    const t = this.get("page.normalizedSelectedPerkIds");
                    if (!t) return this._playedPrimaryProgressSound = !1, e;
                    for (let n = 0; n < l.TOTAL_PRIMARY_PERKS && t[n]; n++) e++;
                    const n = e === l.TOTAL_PRIMARY_PERKS + 1;
                    return !this._playedPrimaryProgressSound && n && this.get("audio").playLightsaberSound(), this._playedPrimaryProgressSound = n, e
                })),
                _playedSecondaryProgressSound: !1,
                secondaryMaxProgress: l.TOTAL_SECONDARY_PERKS + 1,
                secondaryProgress: o.Ember.computed("page.normalizedSelectedPerkIds.[]", "page.subStyleId", (function() {
                    let e = this.get("page.subStyleId") < 0 ? 0 : 1;
                    const t = this.get("page.normalizedSelectedPerkIds");
                    if (e && t)
                        for (let n = l.TOTAL_PRIMARY_PERKS; n < l.TOTAL_PRIMARY_PERKS + l.TOTAL_SECONDARY_PERKS && t[n]; n++) e++;
                    const n = e === l.TOTAL_SECONDARY_PERKS + 1;
                    return !this._playedSecondaryProgressSound && n && this.get("audio").playLightsaberSound(), this._playedSecondaryProgressSound = n, e
                })),
                champOrPickIntent: o.Ember.computed("champSelectPlayer.championId", "champSelectPlayer.championPickIntent", (function() {
                    const e = this.get("champSelectPlayer.championId"),
                        t = this.get("champSelectPlayer.championPickIntent");
                    return e || t
                })),
                statModMaxProgress: l.TOTAL_STAT_MOD_PERKS,
                statModProgress: o.Ember.computed("page.selectedStatModPerkIds.[]", (function() {
                    return (this.get("page.selectedStatModPerkIds") || []).filter((e => !!e)).length
                })),
                allowedSubStyles: o.Ember.computed("page.allowedSubStyles", "subStyle", (function() {
                    const e = this.get("page.allowedSubStyles"),
                        t = this.get("subStyle");
                    if (e)
                        for (let n = 0; n < e.length; n++) e[n].set("styleState", "unselected"), t && t.id && e[n].id === t.id && e[n].set("styleState", "selected");
                    return (0, i.sortStyles)(e)
                })),
                perkStyles: o.Ember.computed("staticData.perkStyles", "page.primaryStyle", (function() {
                    const e = this.get("staticData.perkStyles"),
                        t = this.get("page.primaryStyle");
                    if (e)
                        for (let n = 0; n < e.length; n++) {
                            const s = e[n];
                            s.set("styleState", "unselected"), t && t.id && s.id === t.id && s.set("styleState", "selected")
                        }
                    return (0, i.sortStyles)(e)
                })),
                page: o.Ember.computed("pageAttr", {
                    get: function() {
                        let e = null;
                        const t = this.get("pageAttr");
                        return e = t || this.get("perksBook.currentPage"), o.Ember.assert("The `page` is an instance of PageEntity", e instanceof a.default), e
                    },
                    set: function(e, t) {
                        const n = this.get(e);
                        if (!t) return this.get("perksBook.currentPage");
                        const s = t.get("id");
                        if (n && n.get("id") === s) return n;
                        return this.get("perksBook").setCurrentPage(s)
                    }
                }),
                animateAttr: o.Ember.computed("page.normalizedSelectedPerkIds.[]", "primaryStyle.id", "subStyle.id", (function() {
                    const e = this.get("page.normalizedSelectedPerkIds");
                    if (!e) return null;
                    const t = this.get("primaryStyle.id"),
                        n = this.get("subStyle.id");
                    for (const t of e)
                        if (!t || t <= 0) return null;
                    return t && n ? "" : null
                })),
                primaryStyle: o.Ember.computed.alias("page.primaryStyle"),
                subStyle: o.Ember.computed.alias("page.subStyle"),
                subStyleNameAttr: o.Ember.computed("page.subStyle.idName", (function() {
                    const e = this.get("page.subStyle.idName");
                    return e || null
                })),
                splashablePerkSlots: o.Ember.computed.alias("subStyle.splashableSlots"),
                selectedPerkIds: o.Ember.computed.alias("page.normalizedSelectedPerkIds"),
                splashedPerkIndexes: o.Ember.computed.alias("page.splashedPerkIndexes"),
                splashedPerkOptions: o.Ember.computed.alias("page.splashedPerkOptions"),
                pages: o.Ember.computed.alias("perksBook.pages"),
                notEditingPageName: o.Ember.computed.not("editingPageName"),
                dataService: null,
                summonerId: null,
                canEdit: !0,
                editingPageName: !1,
                isSaveDisabled: o.Ember.computed("page.clean", "canSavePage", (function() {
                    return this.get("page.clean") || !this.get("canSavePage")
                })),
                deleteDisabled: o.Ember.computed("pages.[]", (function() {
                    return !0
                })),
                checkAndShowTutorialNotifications: function() {
                    if (o.CollectionsApi.perksApi().isTutorialEnabled()) {
                        if (!this.get("tutorial.perksPrimaryPathSeen") && this.get("tutorial.basicEditingUnlocked")) {
                            const e = d.contentBlockTooltip(this.get("tra.perks_tutorial_primary_path_title"), this.get("tra.perks_tutorial_primary_path_body"), "tooltip-small", "perks-tutorial-tooltip perks-tutorial-tooltip-primary-path"),
                                t = o.Ember.$(".primary-style-selector")[0];
                            t && (c.add(e, {
                                target: {
                                    domNode: t,
                                    anchor: {
                                        x: "center",
                                        y: "top"
                                    }
                                },
                                offset: {
                                    x: 20,
                                    y: -200
                                },
                                anchor: {
                                    x: "center",
                                    y: "bottom"
                                },
                                orientation: "top",
                                dismissOnTargetHide: !0
                            }), this.set("tutorial.perksPrimaryPathSeen", !0))
                        }
                        if (this.get("tutorial.statModsEditingUnlocked") && !this.get("tutorial.perksStatModsSeen")) {
                            const e = d.contentBlockTooltip(this.get("tra.perks_tutorial_stat_mods_title"), this.get("tra.perks_tutorial_stat_mods_body"), "tooltip-small", "perks-tutorial-tooltip perks-tutorial-tooltip-stat-mods"),
                                t = o.Ember.$(".stat-mod-perk-selector")[0];
                            t && (c.add(e, {
                                target: {
                                    domNode: t,
                                    anchor: {
                                        x: "right",
                                        y: "center"
                                    }
                                },
                                offset: {
                                    x: 30
                                },
                                anchor: {
                                    x: "left",
                                    y: "center"
                                },
                                orientation: "right",
                                dismissOnTargetHide: !0
                            }), this.set("tutorial.perksStatModsSeen", !0))
                        }
                    }
                },
                init: function() {
                    this._super(...arguments);
                    const e = this.get("pageAttr");
                    this.set("page", e), this.sfxAudioChannel = o.AudioPlugin.getChannel("sfx-ui"), this._playSoundFromElement = this._playSoundFromElement.bind(this), this._uxSettingsObserver = e => {
                        this.set("uxSettings", e)
                    }, o.UXSettings.addObserver(this._uxSettingsObserver)
                },
                _playSoundFromElement(e) {
                    const {
                        str: t
                    } = e.detail;
                    this.get("audio").playPerkLockin(t)
                },
                backgroundVideo: o.Ember.computed("styleBackgroundVideosEnabled", "primaryStyle.idName", (function() {
                    const e = Boolean(this.get("styleBackgroundVideosEnabled")),
                        t = this.get("primaryStyle.idName");
                    return e && t ? `/fe/lol-collections/perks/video/${t}/background_loop.webm` : ""
                })),
                _stopStyleBackgroundVideo() {
                    const e = this.element && this.element.querySelector("uikit-video.perks-background-video");
                    e && e.pause()
                },
                _clearHighlightingIfNeeded: function() {
                    const e = this.get("page");
                    if (e) {
                        e.autoModifiedSelections.length > 0 && e.clearAutoModifiedSelections();
                        const t = e.clearGameplayUpdatedPerks();
                        this.set("store.recentlySeenPerkIds", t)
                    } else this.set("store.recentlySeenPerkIds", [])
                },
                onKeyDown: function(e) {
                    16 === e.keyCode && this.set("forceLongDescriptions", !0)
                },
                onKeyUp: function(e) {
                    16 === e.keyCode && this.set("forceLongDescriptions", !1)
                },
                didInsertElement: function() {
                    this._super(...arguments), o.Telemetry.endTracingEvent("champ-select-runes-init"), this.set("_keyDown", this.onKeyDown.bind(this)), this.set("_keyUp", this.onKeyUp.bind(this)), document.addEventListener("keydown", this.get("_keyDown")), document.addEventListener("keyup", this.get("_keyUp"));
                    this.element.querySelector("lol-perks-construct-minspec").addEventListener("play-sound", this._playSoundFromElement), this.runTask("checkAndShowTutorialNotifications", 1)
                },
                didUpdateAttrs: function({
                    oldAttrs: e,
                    newAttrs: t
                }) {
                    this._super(...arguments), e.pageAttr.value !== t.pageAttr.value && this._onPageOpened()
                },
                _onPageOpened: function() {
                    this.set("renameIsPending", !1), this._setInitialDrawerOverride()
                },
                _showDeleteConfirmationDialog: function() {
                    return m.add({
                        type: "DialogConfirm",
                        data: {
                            contents: this.get("tra.perks_page_delete_confirm"),
                            acceptText: this.get("tra.lib_ui_dialog_confirm_accept"),
                            declineText: this.get("tra.lib_ui_dialog_confirm_decline")
                        },
                        show: !0
                    }).acceptPromise
                },
                _deletePage: function(e, t) {
                    if (!e) return Promise.reject("No page was passed in.");
                    const n = this.get("perksBook"),
                        s = this.get("perksBook.pages.length") || 0;
                    if (!t) {
                        return this._showDeleteConfirmationDialog().then((() => n.deletePage(e).then((() => {
                            this.set("page", null)
                        })).then((() => {
                            1 === s && this.transitionToStylesPreview()
                        }))))
                    }
                    return n.deletePage(e).then((() => {
                        this.set("page", null)
                    })).then((() => {
                        1 === s && this.transitionToStylesPreview()
                    }))
                },
                _canDoBasicEdit: function(e) {
                    const t = this.get("tutorial.basicEditingUnlocked"),
                        n = this.get("primaryStyle"),
                        s = !!n && n.isKeystonePerk(e);
                    return !(!t && s)
                },
                _canEditNonKeystonePrimaryPerks: function(e) {
                    const t = this.get("primaryStyle"),
                        n = this.get("tutorial.fullPrimaryPathEditingUnlocked"),
                        s = !!t && t.isKeystonePerk(e);
                    return !(!n && !s && t && t.isPrimaryPerk(e))
                },
                _canEditSplashedPerks: function(e) {
                    const t = this.get("tutorial.secondaryPathEditingUnlocked"),
                        n = this.get("subStyle");
                    return !(!t && n && n.isSplashablePerk(e))
                },
                _canEditStatModPerks: function(e) {
                    const t = this.get("primaryStyle");
                    return !(!this.get("tutorial.statModsEditingUnlocked") && t && t.isStatModPerk(e))
                },
                _canSelectInspirationPerks: function(e) {
                    if (!this.get("tutorial.inspirationUnlocked")) {
                        const t = (this.get("staticData.perkStylesMap") || {})[l.INSPIRATION_STYLE_ID];
                        if (t && t.isPrimaryPerk(e)) return !1
                    }
                    return !0
                },
                _userIsHighEnoughLevelToSelectPerk: function(e) {
                    return this._canDoBasicEdit(e) && this._canEditNonKeystonePrimaryPerks(e) && this._canEditSplashedPerks(e) && this._canEditSplashedPerks(e) && this._canEditStatModPerks(e) && this._canSelectInspirationPerks(e)
                },
                PRIMARY_STYLE_DRAWER_INDEX: l.PRIMARY_STYLE_DRAWER_INDEX,
                FIRST_PRIMARY_PERK_DRAWER_INDEX: l.FIRST_PRIMARY_PERK_DRAWER_INDEX,
                SECONDARY_STYLE_DRAWER_INDEX: l.SECONDARY_STYLE_DRAWER_INDEX,
                FIRST_SECONDARY_PERK_DRAWER_INDEX: l.FIRST_SECONDARY_PERK_DRAWER_INDEX,
                STAT_MOD_PERK_DRAWER_INDEX: l.STAT_MOD_PERK_DRAWER_INDEX,
                _drawerOverride: [],
                _setInitialDrawerOverride() {
                    const e = [],
                        t = this.get("staticData.perkStyles"),
                        n = this.get("store.recentlySeenPerkIds"),
                        s = this.get("staticData.gameplayUpdatedPerks").filter((e => !n.includes(e))),
                        o = t.findBy("id", this.get("page.primaryStyle.id")).slotObjects,
                        i = o.filter((e => e.type !== l.SLOT_TYPES.kStatMod));
                    for (let t = 0, n = i.length; t < n; t++) e[t + l.FIRST_PRIMARY_PERK_DRAWER_INDEX] = i[t].perkObjects.some((function(e) {
                        return s.includes(e.id)
                    }));
                    const a = this.get("page.subStyle.id");
                    if (a) {
                        const n = t.findBy("id", a).slotObjects.filter((e => e.type === l.SLOT_TYPES.kMixedRegularSplashable)).some((function(e) {
                            return e.perkObjects.some((function(e) {
                                return s.includes(e.id)
                            }))
                        }));
                        e[l.FIRST_SECONDARY_PERK_DRAWER_INDEX] = n
                    }
                    const r = o.filter((e => e.type === l.SLOT_TYPES.kStatMod));
                    for (let t = 0; t < r.length; t++) e[t + l.STAT_MOD_PERK_DRAWER_INDEX] = r[t].perkObjects.some((function(e) {
                        return s.includes(e.id)
                    }));
                    this.set("_drawerOverride", e)
                },
                _drawerIndexToBeOpen: o.Ember.computed("page.selectedPrimaryPerkIds.[]", "page.selectedSplashedPerkIds.[]", "page.selectedStatModPerkIds.[]", "page.primaryStyle", "page.subStyle", (function() {
                    if (this.get("_drawerOverride").length && this.set("_drawerOverride", []), !this.get("page.primaryStyle")) return l.PRIMARY_STYLE_DRAWER_INDEX;
                    const e = this.get("page.selectedPrimaryPerkIds");
                    for (let t = 0; t < l.TOTAL_PRIMARY_PERKS; t++)
                        if (e[t] <= 0) return t + l.FIRST_PRIMARY_PERK_DRAWER_INDEX;
                    if (!this.get("page.subStyle")) return l.SECONDARY_STYLE_DRAWER_INDEX;
                    const t = this.get("page.selectedSplashedPerkIds");
                    for (let e = 0; e < l.TOTAL_SECONDARY_PERKS; e++)
                        if (t[e] <= 0) return l.FIRST_SECONDARY_PERK_DRAWER_INDEX;
                    const n = this.get("page.selectedStatModPerkIds");
                    for (let e = 0; e < n.length; e++)
                        if (n[e] <= 0) return e + l.STAT_MOD_PERK_DRAWER_INDEX;
                    return -1
                })),
                drawersOpen: o.Ember.computed("_drawerIndexToBeOpen", "_drawerOverride", "gridModeEnabled", "page.subStyle", (function() {
                    const e = [],
                        t = l.STAT_MOD_PERK_DRAWER_INDEX + l.TOTAL_STAT_MOD_PERKS,
                        n = this.get("gridModeEnabled"),
                        s = this.get("_drawerOverride"),
                        o = this.get("_drawerIndexToBeOpen");
                    for (let i = 0; i < t; i++)
                        if (n) e[i] = !0;
                        else {
                            const t = s[i];
                            e[i] = void 0 !== t ? t : o === i
                        } return this.get("page.subStyle") || (e[l.FIRST_SECONDARY_PERK_DRAWER_INDEX] = !1), e
                })),
                duplicatePage: function(e, t, n, s) {
                    if (!e || !t) return;
                    const o = this.get("tra.perks_copied_page_prefix") + " " + e.get("name"),
                        i = e.clone();
                    n === l.SLOT_TYPES.kStatMod && void 0 !== s ? i.selectStatModPerk(t, s) : i.selectPerk(t.id);
                    const a = i.get("selectedPerkIds").slice();
                    this.get("perksBook").createPage({
                        name: o,
                        primaryStyleId: e.get("primaryStyleId"),
                        subStyleId: e.get("subStyleId"),
                        selectedPerkIds: a
                    }).then((e => {
                        this.transitionToPage(e.id)
                    }))
                },
                actions: {
                    handleRecommendedPageHovered: function() {
                        this.get("audio.gridHover").play()
                    },
                    handleRecommendedPageClicked(e) {
                        const t = e.primaryPerkStyleId,
                            n = e.secondaryPerkStyleId;
                        this.get("audio").playPrimaryStyleSounds(t, !0), this.get("audio").playSecondaryStyleSounds(n, !0), this.sendAction("onRuneRecommenderPageClicked", e)
                    },
                    handlePositionFilterClicked(e) {
                        this.sendAction("onPositionFilterSelected", e)
                    },
                    handleTransitionToRecommender() {
                        this.sendAction("transitionToRecommender")
                    },
                    handlePrimaryStyleChanged: () => 0,
                    overrideDrawerState: function(e) {
                        if (this.get("gridModeEnabled")) return;
                        if (e === l.FIRST_SECONDARY_PERK_DRAWER_INDEX && !this.get("page.subStyle")) return;
                        const t = [...this.get("_drawerOverride")],
                            n = !this.get("drawersOpen")[e];
                        t[e] = n, this.set("_drawerOverride", t), this.get("audio.drawerOpen").play()
                    },
                    disabledPerkClicked: function(e, t, n) {
                        if (this.get("cannotAddPage")) {
                            const e = this.get("tutorial.basicEditingUnlocked") ? this.get("tra.perks_copy_default_page_inventory_full") : this.get("tra.perks_copy_default_page_locked");
                            return void m.add({
                                type: "DialogAlert",
                                data: {
                                    contents: e,
                                    okText: this.get("tra.lib_ui_dialog_alert_ok")
                                },
                                show: !0
                            })
                        }
                        if (!this._userIsHighEnoughLevelToSelectPerk(e.id)) return;
                        const s = this.get("page");
                        if (s && s.get("isDefaultPage")) {
                            m.add({
                                type: "DialogConfirm",
                                data: {
                                    contents: this.get("tra.perks_create_from_default_page"),
                                    acceptText: this.get("tra.lib_ui_dialog_confirm_accept"),
                                    declineText: this.get("tra.lib_ui_dialog_confirm_decline")
                                },
                                show: !0
                            }).acceptPromise.then((() => {
                                this.duplicatePage(s, e, t, n)
                            }), (() => {}))
                        }
                    },
                    toggleGridMode: function(e) {
                        this.set("gridModeEnabled", e), this.get("settings").setSetting("gridModeEnabled", e)
                    },
                    toggleShowLongDescriptions: function(e) {
                        e.preventDefault(), this.set("showLongDescriptions", !this.get("showLongDescriptions")), this.get("settings").setSetting("showLongDescriptions", this.get("_showLongDescriptions"))
                    },
                    startTransitionToStylesPreview: function() {
                        this.get("cannotAddPage") || this.transitionToStylesPreview()
                    },
                    reorderPage: function(e, t) {
                        this.get("perksBook").reorderPage(e, t)
                    },
                    deletePage: function() {
                        const e = this.get("page");
                        if (!e.get("isDeletable")) return;
                        this._deletePage(e, !1)
                    },
                    savePage: function() {
                        this.runTask((() => {
                            this._save()
                        }), 1)
                    },
                    pageSelected: function(e) {
                        this._clearHighlightingIfNeeded();
                        const t = e.get ? e.get("id") : e.id;
                        this.transitionToPage(t)
                    },
                    toggleEditPageName: function() {
                        this.toggleProperty("editingPageName"), this.get("audio.buttonEdit").play()
                    },
                    renamingPending: function() {
                        this.set("renameIsPending", !0)
                    },
                    renamingComplete: function() {
                        this.set("renameIsPending", !1)
                    }
                },
                willDestroyElement: function() {
                    this._super(...arguments);
                    const e = this.element ? this.element.querySelector("lol-perks-construct-minspec") : null;
                    e && e.removeEventListener("play-sound", this._playSoundFromElement), this._stopStyleBackgroundVideo(), this.dataService && this.dataService.unobserve(this), document.removeEventListener("keydown", this.get("_keyDown")), document.removeEventListener("keyup", this.get("_keyUp")), o.UXSettings.removeObserver(this._uxSettingsObserver)
                },
                _save: function(e) {
                    void 0 === e && (e = this.get("page")), e && e.save().catch((() => {
                        m.add({
                            type: "DialogAlert",
                            data: {
                                contents: this.get("tra.perks_page_save_failed"),
                                okText: this.get("tra.lib_ui_dialog_alert_ok")
                            },
                            show: !0
                        })
                    }))
                }
            });
            p.reopenClass({
                positionalParams: ["pageAttr"]
            });
            var u = p;
            t.default = u
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const o = s.Ember.Component.extend({
                tagName: "lol-uikit-dropdown-option",
                classNames: ["pages-dropdown-option"],
                classNameBindings: ["page.isDefaultPage::sortable"],
                attributeBindings: ["selected", "tagName:slot"],
                draggable: !1,
                index: 0,
                useDefaultPageName: s.Ember.computed("customPageRenamingDisabled", "restrictedPageNamesEnabled", "page.isEditable", (function() {
                    return this.get("customPageRenamingDisabled") && this.get("restrictedPageNamesEnabled") && this.get("page.isEditable")
                })),
                defaultCustomPageName: s.Ember.computed("tra", "index", (function() {
                    return this.get("tra").formatString("perks_new_page_name", {
                        count: this.get("index") + 1
                    })
                })),
                currentPage: void 0,
                isAutoModified: s.Ember.computed.notEmpty("page.autoModifiedSelections"),
                pageMarkClass: s.Ember.computed("isAutoModified", "page.isValid", "page.isTemporary", (function() {
                    return this.get("page.isValid") ? this.get("isAutoModified") ? "auto-modified" : this.get("page.isTemporary") ? "recommended-page" : "" : "invalid"
                })),
                selected: s.Ember.computed("page.id", "currentPage.id", (function() {
                    return this.get("page.id") === this.get("currentPage.id") ? "selected" : null
                })),
                name: s.Ember.computed("useDefaultPageName", "defaultCustomPageName", "page.name", "currentPage.name", "selected", (function() {
                    if (this.get("useDefaultPageName")) return this.get("defaultCustomPageName");
                    return (this.get("selected") ? this.get("currentPage.name") : this.get("page.name")).replace(/:/g, "∶")
                })),
                selectItem: function() {
                    throw new Error("override this function")
                },
                click: function() {
                    this.selectItem(this.get("page"))
                },
                tooltipOptions: {
                    targetAnchor: {
                        x: "right",
                        y: "center"
                    },
                    tooltipAnchor: {
                        x: "left",
                        y: "center"
                    }
                }
            });
            o.reopenClass({
                positionalParams: ["page"]
            });
            var i = o;
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(118)) && s.__esModule ? s : {
                    default: s
                },
                l = n(207);
            const a = o.Ember.Component.extend({
                classNames: ["perks-panel-perks-pages-dropdown"],
                tutorial: o.Ember.inject.service(),
                pages: o.Ember.computed("customPages.[]", "defaultPages.[]", (function() {
                    return o.Ember.run.scheduleOnce("afterRender", this, this._initSortable), this.get("customPages").concat((0, l.sortStyles)(this.get("defaultPages")))
                })),
                canAddNewPage: o.Ember.computed.and("canEdit", "tutorial.basicEditingUnlocked"),
                addPageDisabledTooltipText: o.Ember.computed("tra.perks_page_adding_disabled_level", "tutorial.platformSettings.MinSummonerLevelBasicEditing", (function() {
                    return this.tra.formatString("perks_page_adding_disabled_level", {
                        level: this.get("tutorial.platformSettings.MinSummonerLevelBasicEditing")
                    })
                })),
                attributeBindings: ["data-id"],
                reorderingEnabled: !0,
                didInsertElement() {
                    this._super(...arguments), this._mounted = !0, this._initSortable()
                },
                willDestroyElement() {
                    this._super(...arguments), this._mounted = !1, this._destroySortable()
                },
                _initSortable() {
                    if (this._destroySortable(), !this._mounted || this.get("customPages").length < 2) return;
                    const e = this.element.querySelector("lol-uikit-flat-dropdown");
                    this._sortable = new i.default(e, {
                        animation: 200,
                        draggable: this.get("reorderingEnabled") ? ".sortable" : "",
                        onEnd: e => {
                            this.reorderPage(e.oldIndex, e.newIndex)
                        }
                    })
                },
                _destroySortable() {
                    this._sortable && (this._sortable.destroy(), this._sortable = null)
                },
                pageSelected() {
                    throw new Error("override this method")
                },
                reorderPage() {
                    throw new Error("override this method")
                },
                transitionToStylesPreview() {
                    throw new Error("override this method")
                },
                currentPage: void 0,
                actions: {
                    addPage() {
                        this.get("cannotAddPage") || this.transitionToStylesPreview()
                    },
                    reorderPage(e, t) {
                        this.reorderPage(e, t)
                    },
                    selectItem(e) {
                        return !!e && (this.pageSelected(e), !1)
                    }
                }
            });
            a.reopenClass({
                positionalParams: ["customPages", "defaultPages"]
            });
            var r = a;
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(292)) && s.__esModule ? s : {
                    default: s
                };
            const l = o.Ember.Component.extend((0, i.default)("isDisabled", "disabled"), {
                tagName: "lol-perks-perk-icon-button",
                classNames: ["perk-icon-button", "primary-perk-options"],
                attributeBindings: ["isFadedAttr:faded", "keystoneAttr:keystone", "perkIconPath:src", "styleName:style-name", "itemIndex:item-index", "keystoneAttr:img-hover"],
                perkId: o.Ember.computed.alias("perk.id"),
                perkIconPath: o.Ember.computed.alias("perk.iconPath"),
                audio: o.Ember.inject.service(),
                isFadedAttr: o.Ember.computed("isSelected", "hasSelection", (function() {
                    return this.get("hasSelection") && !this.get("isSelected") ? "" : null
                })),
                keystoneAttr: o.Ember.computed("isKeystone", (function() {
                    return this.get("isKeystone") ? "" : null
                })),
                itemIndex: !1,
                isKeystone: !1,
                styleName: !1,
                isDisabled: !1,
                isSelected: !1,
                notDisabled: void 0,
                perk: void 0,
                makePerkSelection: function() {
                    throw new Error("This method must be passed in.")
                },
                click: function() {
                    this.get("audio").playPerkSound(this.get("perk.id")), this.makePerkSelection(this.get("perk"))
                }
            });
            l.reopenClass({
                positionalParams: ["perk"]
            });
            var a = l;
            t.default = a
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(300)) && s.__esModule ? s : {
                    default: s
                };
            const l = o.Ember.Component.extend(i.default, {
                tagName: "",
                isSelected: o.Ember.computed("currentSelectionId", "perk.id", (function() {
                    return this.get("currentSelectionId") === this.get("perk.id")
                })),
                isDisabled: o.Ember.computed("isSelected", "perkOptionsDisabled", (function() {
                    return this.get("perkOptionsDisabled") && !this.get("isSelected")
                })),
                notDisabled: o.Ember.computed.not("isDisabled"),
                perkOptionsDisabled: !1
            });
            l.reopenClass({
                positionalParams: ["perk", "currentSelectionId", "styleName"]
            });
            var a = l;
            t.default = a
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(298)) && s.__esModule ? s : {
                    default: s
                };
            const l = o.Ember.Component.extend({
                sanitizeOverride: (0, i.default)(),
                unlockText: o.Ember.computed("unlockedLevel", (function() {
                    return this.get("tra").formatString("unlocks_at_level", {
                        level: this.get("unlockedLevel")
                    })
                })),
                perk: void 0,
                headerOverride: void 0,
                showLongDescriptions: void 0,
                unlockedLevel: void 0,
                lockedBecauseOfLevel: void 0,
                shortWidth: void 0,
                headerText: o.Ember.computed("perk.name", "headerOverride", (function() {
                    return this.get("headerOverride") || this.get("perk.name")
                })),
                perkDescription: o.Ember.computed("perk.shortDesc", "perk.longDesc", "showLongDescriptions", (function() {
                    return this.get("showLongDescriptions") ? this.get("perk.longDesc") : this.get("perk.shortDesc")
                }))
            });
            l.reopenClass({
                positionalParams: ["perk"]
            });
            var a = l;
            t.default = a
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = n(207),
                l = (s = n(298)) && s.__esModule ? s : {
                    default: s
                };
            const a = o.Ember.Component.extend({
                platformSettings: o.Ember.inject.service(),
                store: o.Ember.inject.service(),
                tutorial: o.Ember.inject.service(),
                page: null,
                isKeystone: !1,
                isStatMod: !1,
                classNames: ["primary-perk-selector"],
                classNameBindings: ["isKeystone:keystone", "page.primaryStyle.idName"],
                sanitizeOverride: (0, l.default)(),
                staticData: o.Ember.computed.alias("store.perksStaticData"),
                perksMap: o.Ember.computed.alias("staticData.perksMap"),
                disabledPerks: o.Ember.computed.alias("staticData.disabledPerks"),
                primaryStyle: o.Ember.computed.alias("page.primaryStyle"),
                subStyle: o.Ember.computed.alias("page.subStyle"),
                currentPerkName: o.Ember.computed("perkSlot", "currentSelection.name", "selectionRequired", (function() {
                    const e = this.get("perkSlot");
                    return this.get("selectionRequired") ? e.slotLabel : this.get("currentSelection.name")
                })),
                perksTooltipHeaderOverride: null,
                hideTop: o.Ember.computed.lt("optionIndex", 2),
                hideBottom: o.Ember.computed("optionIndex", (function() {
                    const e = this.get("optionIndex");
                    return 0 === e || 3 === e
                })),
                currentPerkDescription: o.Ember.computed("currentSelection.shortDesc", "selectionRequired", "selectionRequiredMessage", (function() {
                    return this.get("selectionRequired") ? this.get("selectionRequiredMessage") : this.get("currentSelection.shortDesc")
                })),
                selectionRequiredMessage: o.Ember.computed("currentSelection", "page", "selectionRequired", "isValidSelection", "isKeystone", (function() {
                    if (this.get("selectionRequired") && this.get("isValidSelection")) {
                        return this.get("isKeystone") ? this.get("tra.perks_select_primary_perk_header_slot_keystone") : this.get("tra.perks_select_primary_perk_header_slot_perk")
                    }
                    const e = this.get("currentSelection"),
                        t = this.get("page").isPerkSelectionValid(e);
                    return t && t !== i.PerkValidationResult.PerkSelectionValid ? this.get("tra").get(t.trakey) : this.get("tra.perks_select_primary_perk_description")
                })),
                isValidSelection: o.Ember.computed("currentSelection", "page", "disabledPerks.[]", (function() {
                    const e = this.get("currentSelection"),
                        t = this.get("page").isPerkSelectionValid(e);
                    return !e || t === i.PerkValidationResult.PerkSelectionValid
                })),
                isInvalidSelection: o.Ember.computed.not("isValidSelection"),
                isEmptySelection: o.Ember.computed.not("currentSelection"),
                selectionRequired: o.Ember.computed.or("isInvalidSelection", "isEmptySelection"),
                keystoneClass: o.Ember.computed("isKeystone", (function() {
                    return this.get("isKeystone") ? "keystone" : ""
                })),
                perksSelections: o.Ember.computed("perksMap.[]", "perkSlot", "disabledPerks.[]", (function() {
                    const e = this.get("disabledPerks"),
                        t = o.Ember.A(this.get("perkSlot").perks),
                        n = this.get("perksMap"),
                        s = [];
                    for (const o of t) {
                        if (-1 !== e.indexOf(o)) continue;
                        const t = n[o];
                        s.push(t)
                    }
                    for (const [e, t] of s.entries()) t.selectionIndex = e;
                    return o.Ember.A(s)
                })),
                perkOptionsDisabled: o.Ember.computed("page.isEditable", "perkOptionsLockedBecauseOfLevel", (function() {
                    return !this.get("page.isEditable") || this.get("perkOptionsLockedBecauseOfLevel")
                })),
                perkOptionsLockedBecauseOfLevel: o.Ember.computed("tutorial.basicEditingUnlocked", "tutorial.fullPrimaryPathEditingUnlocked", "optionIndex", (function() {
                    return !this.get("tutorial.basicEditingUnlocked") || !this.get("tutorial.fullPrimaryPathEditingUnlocked") && this.get("optionIndex") > 0
                })),
                perkOptionsUnlockedLevel: o.Ember.computed("optionIndex", "platformSettings.MinSummonerLevelEditFullPrimaryPath", "platformSettings.MinSummonerLevelBasicEditing", (function() {
                    return this.get("optionIndex") > 0 ? this.get("platformSettings.MinSummonerLevelEditFullPrimaryPath") : this.get("platformSettings.MinSummonerLevelBasicEditing")
                })),
                disabledPerkClicked: null,
                makePerkSelection(e) {
                    if (this.get("perkOptionsDisabled")) return void this.sendAction("disabledPerkClicked", e);
                    this.get("page").selectPerk(e.id) && this.set("currentSelection", e)
                },
                isAnimating: !1,
                drawerOpenForAnimation: !1,
                showEmptyForAnimation: !1,
                _drawerIsOpen: o.Ember.computed("drawerIsOpen", "drawerOpenForAnimation", "isAnimating", "gridModeEnabled", (function() {
                    return !!this.get("gridModeEnabled") || (this.get("isAnimating") ? this.get("drawerOpenForAnimation") : this.get("drawerIsOpen"))
                })),
                styleName: o.Ember.computed("page.primaryStyle.idName", "showEmptyForAnimation", (function() {
                    return this.get("showEmptyForAnimation") ? "" : this.get("page.primaryStyle.idName")
                })),
                currentSelection: o.Ember.computed("page.selectedPrimaryPerkIds.[]", "perkSlot", "showEmptyForAnimation", {
                    get: function() {
                        if (this.get("showEmptyForAnimation")) return null;
                        const e = this.get("page"),
                            t = this.get("perkSlot");
                        return e.getPrimaryPerk(t)
                    },
                    set: function(e, t) {
                        return t
                    }
                }),
                actions: {
                    makePerkSelection(e) {
                        this.makePerkSelection(e)
                    }
                }
            });
            a.reopenClass({
                positionalParams: ["page", "perkSlot", "optionIndex"]
            });
            var r = a;
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(300)) && s.__esModule ? s : {
                    default: s
                };
            const l = o.Ember.Component.extend(i.default, {
                tagName: "",
                perkImagePath: o.Ember.computed.alias("perk.iconPath")
            });
            l.reopenClass({
                positionalParams: ["perk"]
            });
            var a = l;
            t.default = a
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const o = s.Ember.Component.extend({
                classNames: ["primary-style-selector"],
                primaryStyles: [],
                tutorial: s.Ember.inject.service(),
                audio: s.Ember.inject.service(),
                selectedStyle: s.Ember.computed("page.primaryStyle", (function() {
                    const e = this.get("page.primaryStyle");
                    if (e) {
                        const {
                            s1: t
                        } = e.description, {
                            s2: n
                        } = e.description;
                        /_/.test(t) && (e.description.s1 = this.get("tra." + t), e.description.s2 = this.get("tra." + n))
                    }
                    return e
                })),
                disabled: s.Ember.computed("page.isEditable", "tutorial.basicEditingUnlocked", (function() {
                    return !this.get("page.isEditable") || !this.get("tutorial.basicEditingUnlocked")
                })),
                spinningAttr: s.Ember.computed("drawerIsOpen", "gridModeEnabled", "page.primaryStyle", (function() {
                    return this.get("gridModeEnabled") ? this.get("page.primaryStyle") ? null : "" : this.get("drawerIsOpen") ? "" : null
                })),
                primaryStyleChanged: function() {
                    throw new Error("The method `component:primary-style-selector#updatePrimarySlotsDrawers` must be overridden by its parent component.")
                },
                handleStyleSelection: function(e) {
                    if (this.get("disabled")) return;
                    const t = this.get("page"),
                        n = this.get("tutorial.fullCustomPageEditingUnlocked");
                    t.setPrimaryStyleId(e, !n), this.primaryStyleChanged()
                },
                didUpdate() {
                    this._super(...arguments);
                    const e = this.get("page.primaryStyle");
                    e && this.playSounds(e.id)
                },
                willDestroyElement() {
                    this._super(...arguments), this.stopSounds()
                },
                stopSounds() {
                    this.get("audio").stopPrimaryStyleSounds()
                },
                playSounds(e) {
                    this.get("audio").playPrimaryStyleSounds(e)
                },
                actions: {
                    styleOptionClicked: function(e) {
                        this.stopSounds(), this.handleStyleSelection(e.id), this.playSounds(e.id)
                    }
                }
            });
            o.reopenClass({
                positionalParams: ["page"]
            });
            var i = o;
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            var o = s.Ember.Component.extend({
                classNames: ["lol-perks-progress-bar"],
                attributeBindings: ["styleName:style-name", "hideRing:hide-ring"],
                max: 0,
                current: 0,
                _current: 0,
                hideRing: !1,
                didInsertElement() {
                    this._super(...arguments), this._fillNode = this.element.querySelector(".fill"), this._pulsatingStyle = this.element.querySelector(".pulsating").style, this._progressStyle = this.element.querySelector(".progress").style, this._setMax(this.get("max"), !0), this._setCurrent(this.get("current"), !0)
                },
                didUpdateAttrs() {
                    this._super(...arguments);
                    const e = this.get("current");
                    this._setCurrent(e, !1)
                },
                _getValueFromCSSVariable(e) {
                    if ("stat-shard" === this.get("styleName")) {
                        if (e.includes("--row-height")) return 44;
                        if ("--y-offset" === e) return 0
                    } else {
                        if ("--row-height" === e) return 88;
                        if ("--row-height-0" === e) return 131;
                        if ("--row-height-1" === e) return 107;
                        if ("--y-offset" === e) return 42
                    }
                },
                _intToHeight(e) {
                    const t = this._getValueFromCSSVariable("--row-height"),
                        n = this._getValueFromCSSVariable("--row-height-0"),
                        s = this._getValueFromCSSVariable("--row-height-1"),
                        o = this._getValueFromCSSVariable("--y-offset");
                    let i = Math.max(0, e - 2) * t;
                    return e > 0 && (i += .5 * n, i += .5 * s, i -= o), e > 1 && (i += .5 * s, i += .5 * t), i
                },
                _setMax(e, t) {
                    e = parseInt(e);
                    let n = this.get("max");
                    if (!t && e === n) return;
                    n = e;
                    const s = this._intToHeight(e - 1);
                    this._fillNode.style.height = `${s}px`, this._pulsatingStyle.height = `${s+180}px`, this.get("current") && this._changeProgressHeight()
                },
                _setCurrent(e, t) {
                    e = parseInt(e);
                    const n = this.get("max");
                    (t || e !== this.get("_current")) && (e === n ? this._fillNode.classList.add("shoot") : this.get("_current") === n && this._fillNode.classList.remove("shoot"), this.set("_current", e), n && this._changeProgressHeight())
                },
                _changeProgressHeight() {
                    const e = this.get("current"),
                        t = this.get("max");
                    this._progressStyle.height = `${this._intToHeight(Math.min(e,t-1))}px`
                }
            });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const {
                RunMixin: o
            } = s.EmberAddons.EmberLifeline;
            var i = s.Ember.Component.extend(o, {
                classNames: ["lol-perks-drawer"],
                attributeBindings: ["hideTop:hide-top", "hideBottom:hide-bottom"],
                wasOpen: null,
                isOpen: !1,
                didInsertElement() {
                    this._super(...arguments), this._radialNode = this.element.querySelector(".radial"), this._rowNode = this.element.querySelector(".row"), this._setOpen(this.get("isOpen"), !0)
                },
                didUpdateAttrs() {
                    this._super(...arguments);
                    const e = this.get("isOpen");
                    e !== this.get("wasOpen") && this._setOpen(e)
                },
                willDestroyElement() {
                    this._timeline && this._timeline.kill(), s.Ember.run.cancel(this._animationTimer), this._radialNode = null, this._rowNode = null, this._super(...arguments)
                },
                _setOpen(e, t) {
                    return (e = !0 === e) === this.get("wasOpen") ? -1 : (this.set("wasOpen", e), this._animationTimer = e ? s.Ember.run.scheduleOnce("afterRender", this, "_transitionIn", t) : s.Ember.run.scheduleOnce("afterRender", this, "_transitionOut", t), 0)
                },
                _transitionOut(e) {
                    e && this.element ? this.element.style.display = "none" : (this._timeline && this._timeline.kill(), this._timeline = new s.gsap.TimelineLite({
                        onComplete: () => {
                            this._timeline = null, this.element.style.display = "none"
                        }
                    }).to(this._radialNode, .2, {
                        ease: s.gsap.Linear.easeNone,
                        x: "-100%"
                    }, 0), this._rowNode.classList.remove("open-transition"), e && this._timeline.progress(1))
                },
                _transitionIn(e) {
                    this._timeline && this._timeline.kill(), this.element.style.removeProperty("display"), this._timeline = new s.gsap.TimelineLite({
                        onComplete: () => {
                            this._timeline = null
                        }
                    }).to(this._radialNode, .2, {
                        ease: s.gsap.Linear.easeNone,
                        x: "100%"
                    }, 0), e ? this._rowNode.classList.add("open-transition") : this.runTask((() => {
                        this._rowNode.classList.add("open-transition")
                    }), 50)
                }
            });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1).Ember.Component.extend({
                classNames: ["runes-recommender-controls-component"],
                actions: {
                    toggleUseSummonerSpells: function() {
                        this.onToggleIncludeSummonerSpells()
                    },
                    toggleSummonerSpellPositions: function() {
                        this.onToggleSummonerSpellPositions()
                    },
                    positionFilterSelected: function(e) {
                        this.onPositionFilterSelected(e)
                    },
                    toggleEditAfterSelection: function() {
                        this.onToggleEditAfterSelection()
                    }
                }
            });
            t.default = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(208),
                i = s.Ember.Component.extend({
                    classNames: ["runes-recommender-page-summary-component"],
                    primaryStylePerks: s.Ember.computed("page.perks.@each.styleId", "page.primaryPerkStyleId", (function() {
                        const e = this.get("page.perks") || [],
                            t = this.get("page.primaryPerkStyleId");
                        return e.filter((e => e.styleId === t && e.slotType === o.SLOT_TYPES.kMixedRegularSplashable))
                    })),
                    secondaryStylePerks: s.Ember.computed("page.perks.@each.styleId", "page.secondaryPerkStyleId", (function() {
                        const e = this.get("page.perks") || [],
                            t = this.get("page.secondaryPerkStyleId");
                        return e.filter((e => e.styleId === t && e.slotType === o.SLOT_TYPES.kMixedRegularSplashable))
                    })),
                    statModPerks: s.Ember.computed("page.perks.@each.slotType", (function() {
                        return (this.get("page.perks") || []).filter((e => e.slotType === o.SLOT_TYPES.kStatMod))
                    })),
                    primaryStyleIdName: s.Ember.computed.alias("page.keystone.styleIdName"),
                    secondaryStyleIdName: s.Ember.computed("secondaryStylePerks.[]", (function() {
                        const e = this.get("secondaryStylePerks");
                        return e.length > 0 ? e[0].styleIdName : ""
                    }))
                });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = s.Ember.Component.extend({
                    classNames: ["runes-recommender-page-component"],
                    audio: s.Ember.inject.service(),
                    maybeSwappedSummonerSpells: s.Ember.computed("page.summonerSpells", "swapSummonerSpellPositions", (function() {
                        const e = this.get("page.summonerSpells");
                        return this.get("swapSummonerSpellPositions") ? [...e].reverse() : e
                    })),
                    dispatchCloseEvent() {
                        this.get("shouldEditAfterSelection") || this.element.dispatchEvent(new Event("dialogFrameDismissed", {
                            bubbles: !0,
                            composed: !0
                        }))
                    },
                    actions: {
                        handleRecommendedPageHovered: function() {
                            this.get("audio.gridHover").play()
                        },
                        handleRecommendedPageSelected: function() {
                            const e = this.get("page.primaryPerkStyleId"),
                                t = this.get("page.secondaryPerkStyleId");
                            this.get("audio").playPrimaryStyleSounds(e, !0), this.get("audio").playSecondaryStyleSounds(t, !0), this.handleRunePageClicked(), this.dispatchCloseEvent()
                        }
                    }
                });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(208),
                i = s.Ember.Component.extend({
                    classNames: ["runes-recommender-position-filters-component"],
                    audio: s.Ember.inject.service(),
                    positions: s.Ember.computed("selectedPosition", (function() {
                        const e = this.get("selectedPosition") || "";
                        return Object.values(o.VALID_POSITIONS).map((t => ({
                            name: t,
                            iconPath: `/fe/lol-champ-select/svg/position-${t.toLowerCase()}.svg`,
                            loc: this.get(`tra.position_filter_${t.toLowerCase()}`),
                            selected: e === t
                        })))
                    })),
                    actions: {
                        selectPosition(e) {
                            this.get("audio.elementClick").play(), this.handlePositionSelected(e)
                        },
                        setHoveredPosition(e) {
                            this.get("audio.gridHover").play(), this.set("hoveredPosition", e)
                        },
                        clearHoveredPosition() {
                            this.set("hoveredPosition", void 0)
                        }
                    }
                });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = s.Ember.Component.extend({
                    classNames: ["runes-recommender-spell-component"],
                    classNameBindings: ["enabled::disabled"],
                    isD: s.Ember.computed.equal("index", 0),
                    spellKey: s.Ember.computed("spellHotkeys", "index", (function() {
                        const e = this.get("index");
                        return this.get("spellHotkeys")[e]
                    }))
                });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = s.Ember.Component.extend({
                    attributeBindings: ["disabled"],
                    tagName: "lol-uikit-flat-button",
                    classNames: ["save-page"],
                    tooltip: s.Ember.computed("disabled", (function() {
                        return this.get("disabled") ? this.get("tra.perks_page_cannot_save") : this.get("tra.perks_page_save_changes")
                    })),
                    click() {
                        this.get("disabled") || this.sendAction()
                    }
                });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = l(n(292)),
                i = l(n(300));

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            var a = s.Ember.Component.extend(i.default, (0, o.default)("isFaded", "faded"), (0, o.default)("isDisabled", "disabled"), {
                tutorial: s.Ember.inject.service(),
                platformSettings: s.Ember.inject.service(),
                classNames: ["splashed_perk_option"],
                tagName: "lol-perks-perk-icon-button",
                attributeBindings: ["perk.iconPath:src", "secondaryStyleName:style-name", "optionIndex:option-index"],
                isFaded: s.Ember.computed.alias("perk.isFaded"),
                isDisabled: s.Ember.computed("perkOptionsDisabled", "perk.isSelected", (function() {
                    return this.get("perkOptionsDisabled") && !this.get("perk.isSelected")
                })),
                perkOptionsUnlockedLevel: s.Ember.computed.alias("platformSettings.MinSummonerLevelEditSecondaryPath"),
                perkOptionsLockedBecauseOfLevel: s.Ember.computed("tutorial.secondaryPathEditingUnlocked", "isDisabled", (function() {
                    return !this.get("tutorial.secondaryPathEditingUnlocked") && this.get("isDisabled")
                })),
                click: function(e) {
                    e.preventDefault();
                    const t = this.get("perk");
                    this.perkOptionClicked(t)
                },
                mouseEnter: function() {
                    const e = this.get("perk");
                    this.perkOptionHover(e.id)
                },
                mouseLeave: function() {
                    this.perkOptionHover()
                },
                perkOptionClicked() {
                    throw new Error("`perkOptionClicked` must be overridden")
                },
                perkOptionHover() {
                    throw new Error("`perkOptionHover` must be overriden")
                }
            });
            t.default = a
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(208);
            const i = s.Ember.Component.extend({
                sfxAudioChannel: null,
                audio: s.Ember.inject.service(),
                classNames: ["splashed-perks-selector"],
                tutorial: s.Ember.inject.service(),
                init: function() {
                    this.sfxAudioChannel = s.AudioPlugin.getChannel("sfx-ui"), this._super(...arguments)
                },
                showSplashedPerkDetails: s.Ember.computed("isOpen", "canShowSplashedPerkDetails", "subStyleSelected", (function() {
                    const e = this.get("isOpen"),
                        t = this.get("canShowSplashedPerkDetails");
                    return !this.get("subStyleSelected") || !e && t
                })),
                options: s.Ember.computed("page.splashedPerkOptions.[]", "disabledPerks.[]", "page.selectedSplashedPerkIds.[]", (function() {
                    const e = this.get("page.splashedPerkOptions") || [],
                        t = this.get("disabledPerks"),
                        n = e.map((e => e.filter((e => t.indexOf(e.get("id")) <= -1)))),
                        s = this.get("page.selectedSplashedPerkIds") || [],
                        o = function(e, t) {
                            const n = [],
                                s = t[0] && t[1];
                            for (let o = 0, i = e.length; o < i; o++)
                                if (s) n[o] = !0;
                                else
                                    for (const s of e[o]) t.includes(s.id) && (n[o] = !0);
                            return n
                        }(n, s),
                        i = n.length;
                    for (let e = 0; e < i; e++) {
                        const t = n[e];
                        for (const n of t) {
                            const t = o[e];
                            n.set("isSelected", s.includes(n.id)), n.set("isFaded", t && !n.isSelected)
                        }
                        t.hideBorders = (a = i, 0 === (l = e) || l === a - 1 ? "" : null)
                    }
                    var l, a;
                    return n
                })),
                perkOptionsDisabled: s.Ember.computed("page.isEditable", "tutorial.secondaryPathEditingUnlocked", (function() {
                    return !this.get("page.isEditable") || !this.get("tutorial.secondaryPathEditingUnlocked")
                })),
                _getRowOfPerk: function(e) {
                    const t = this.get("page.splashedPerkOptions");
                    for (let n = 0, s = t.length; n < s; n++)
                        for (let s = 0, o = t[n].length; s < o; s++) {
                            if (t[n][s].id === e) return n
                        }
                    return -1
                },
                highlightedPerkIndex: s.Ember.computed("hoveredPerkId", "drawerIsOpen", "page.selectedSplashedPerks.[]", "page.splashedPerkOptions", (function() {
                    if (!this.get("drawerIsOpen")) return -1;
                    const e = this.get("hoveredPerkId"),
                        t = this.get("page.selectedSplashedPerks");
                    if (e) {
                        const n = this._getRowOfPerk(e);
                        for (let e = 0; e < o.TOTAL_SECONDARY_PERKS; e++) {
                            const s = t[e];
                            if (s) {
                                if (this._getRowOfPerk(s.id) === n) return e
                            }
                        }
                    }
                    let n = 0;
                    for (let e = o.TOTAL_SECONDARY_PERKS - 1; e >= 0; e--) t[e] || (n = e);
                    return n
                })),
                actions: {
                    perkOptionClicked: function(e) {
                        const t = e.get("id");
                        if (this.get("audio").playPerkSound(t), this.get("perkOptionsDisabled")) return void this.sendAction("disabledPerkClicked", e);
                        const n = !this.get("gridModeEnabled");
                        this.get("page").setSplashedPerk(e, n)
                    },
                    perkOptionHover: function(e) {
                        this.set("hoveredPerkId", e)
                    }
                }
            });
            i.reopenClass({
                positionalParams: ["page"]
            });
            var l = i;
            t.default = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = a(n(298)),
                i = n(207),
                l = a(n(300));

            function a(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            var r = s.Ember.Component.extend(l.default, {
                classNames: ["splashed-selected-perk-icon"],
                sanitizeOverride: (0, o.default)(),
                selectedPerk: s.Ember.computed("perkPage.selectedSplashedPerkIds.[]", (function() {
                    const e = this.get("perkPage");
                    let t = null;
                    const n = this.get("splashedPerkIndex");
                    return e && (t = e.getSplashedPerk(n)), t
                })),
                perk: s.Ember.computed.alias("selectedPerk"),
                isSpinningAttr: s.Ember.computed("highlightedPerkIndex", "splashedPerkIndex", (function() {
                    return this.get("highlightedPerkIndex") === this.get("splashedPerkIndex") ? "" : null
                })),
                selectionRequiredMessage: s.Ember.computed("selectedPerk", "perkPage", "selectionRequired", "isValidSelection", (function() {
                    if (this.get("selectionRequired") && this.get("isValidSelection")) return this.get("tra.perks_select_primary_perk_description");
                    const e = this.get("selectedPerk"),
                        t = this.get("perkPage").isPerkSelectionValid(e);
                    return t && t !== i.PerkValidationResult.PerkSelectionValid ? this.get("tra").get(t.trakey) : this.get("tra.perks_select_splashable_perk_description")
                })),
                currentPerkDescription: s.Ember.computed("selectedPerk.shortDesc", "selectionRequired", "selectionRequiredMessage", (function() {
                    return this.get("selectionRequired") ? this.get("selectionRequiredMessage") : this.get("selectedPerk.shortDesc")
                })),
                isValidSelection: s.Ember.computed("selectedPerk", "perkPage", "perkPage.subStyle.splashableSlots.[]", "perkPage.disabledPerks.[]", (function() {
                    const e = this.get("selectedPerk"),
                        t = this.get("perkPage");
                    return !e || t.isPerkSelectionValid(e) === i.PerkValidationResult.PerkSelectionValid
                })),
                isInvalidSelection: s.Ember.computed.not("isValidSelection"),
                isEmptySelection: s.Ember.computed.not("selectedPerk"),
                selectionRequired: s.Ember.computed.or("isInvalidSelection", "isEmptySelection"),
                actions: {
                    clickPerkIcon() {
                        return this.overrideDrawerState(), !1
                    }
                },
                willDestroyElement: function() {
                    this.get("tooltipComponent") && this.set("tooltipComponent", null)
                }
            });
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(298)) && s.__esModule ? s : {
                    default: s
                };
            const l = o.Ember.Component.extend({
                splashedStyles: [],
                attributeBindings: ["data-style-id"],
                classNames: ["splashed-style-selector"],
                classNameBindings: ["isDisabled:disabled:enabled", "canEdit"],
                sanitizeOverride: (0, i.default)(),
                audio: o.Ember.inject.service(),
                store: o.Ember.inject.service(),
                selectedSubStyleDescription: o.Ember.computed("page.subStyle", (function() {
                    const e = this.get("page.subStyle");
                    if (e) {
                        const {
                            s1: t
                        } = e.description, {
                            s2: n
                        } = e.description;
                        /_/.test(t) && (e.description.s1 = this.get("tra." + t), e.description.s2 = this.get("tra." + n))
                    }
                    return {
                        s1: e.description.s1,
                        s2: e.description.s2
                    }
                })),
                perksMap: o.Ember.computed.alias("store.perksBook.perksMap"),
                spinningAttr: o.Ember.computed("drawerIsOpen", "gridModeEnabled", "page.subStyle", (function() {
                    return this.get("gridModeEnabled") ? this.get("page.subStyle") ? null : "" : this.get("drawerIsOpen") ? "" : null
                })),
                didUpdate() {
                    this._super(...arguments);
                    const e = this.get("page.subStyle");
                    e && this.playSounds(e)
                },
                willDestroyElement() {
                    this._super(...arguments), this.stopSounds()
                },
                stopSounds() {
                    this.get("audio").stopSecondaryStyleSounds()
                },
                playSounds(e) {
                    this.get("audio").playSecondaryStyleSounds(e.id)
                },
                actions: {
                    styleOptionClicked: function(e) {
                        if (this.get("page.isEditable")) {
                            this.stopSounds(), this.playSounds(e);
                            this.get("page").set("subStyleId", e.id), this.set("page.clean", !1)
                        }
                    }
                }
            });
            l.reopenClass({
                positionalParams: ["page"]
            });
            var a = l;
            t.default = a
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = n(207),
                l = n(208);
            var a = ((s = n(310)) && s.__esModule ? s : {
                default: s
            }).default.extend({
                classNames: ["stat-mod-perk-selector"],
                layoutName: "components/primary-perk-selector",
                isKeystone: !1,
                isStatMod: !0,
                hideTop: o.Ember.computed.equal("optionIndex", 0),
                hideBottom: o.Ember.computed.equal("optionIndex", l.TOTAL_STAT_MOD_PERKS - 1),
                currentPerkName: o.Ember.computed.alias("perkSlot.slotLabel"),
                perksTooltipHeaderOverride: o.Ember.computed.alias("currentPerkName"),
                currentPerkDescription: o.Ember.computed("selectionRequired", "currentSelection.shortDesc", (function() {
                    return this.get("selectionRequired") ? this.get("tra.perks_select_stat_mod_perk") : this.get("currentSelection.shortDesc")
                })),
                styleName: "stat-shard",
                makePerkSelection(e) {
                    if (this.get("perkOptionsDisabled")) return void this.sendAction("disabledPerkClicked", e, l.SLOT_TYPES.kStatMod, this.get("optionIndex"));
                    this.get("page").selectStatModPerk(e, this.get("optionIndex")) && this.set("currentSelection", e)
                },
                currentSelection: o.Ember.computed("page.selectedStatModPerkIds.[]", "optionIndex", "showEmptyForAnimation", {
                    get: function() {
                        if (this.get("showEmptyForAnimation")) return null;
                        const e = this.get("optionIndex");
                        return this.get("page").getStatModPerk(e)
                    },
                    set: function(e, t) {
                        return t
                    }
                }),
                isValidSelection: o.Ember.computed("currentSelection", "page", "disabledPerks.[]", "optionIndex", (function() {
                    const e = this.get("currentSelection"),
                        t = this.get("page").isStatModPerkSelectionValid(e, this.get("optionIndex"));
                    return !e || t === i.PerkValidationResult.PerkSelectionValid
                })),
                perkOptionsLockedBecauseOfLevel: o.Ember.computed("tutorial.basicEditingUnlocked", "tutorial.statModsEditingUnlocked", (function() {
                    return !this.get("tutorial.basicEditingUnlocked") || !this.get("tutorial.statModsEditingUnlocked")
                })),
                perkOptionsUnlockedLevel: o.Ember.computed.alias("platformSettings.MinSummonerLevelEditStatMods")
            });
            t.default = a
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const o = s.UIKit.getContextualNotificationManager(),
                i = s.UIKit.getTemplateHelper();
            var l = s.Ember.Component.extend({
                classNames: ["style-keystones"],
                pageId: void 0,
                style: void 0,
                showTutorial: !1,
                addTutorialNotification: function() {
                    const e = i.contentBlockTooltip(this.get("tra.perks_tutorial_path_overview_title"), this.get("tra.perks_tutorial_path_overview_body"), "tooltip-small", "perks-tutorial-tooltip perks-tutorial-tooltip-style-picker");
                    o.add(e, {
                        target: {
                            domNode: this.get("element"),
                            anchor: {
                                x: "center",
                                y: "top"
                            }
                        },
                        offset: {
                            x: 0,
                            y: -10
                        },
                        anchor: {
                            x: "center",
                            y: "bottom"
                        },
                        orientation: "top",
                        dismissOnTargetHide: !0
                    })
                },
                didInsertElement: function() {
                    this._super(...arguments), this.get("showTutorial") && this.addTutorialNotification()
                }
            });
            t.default = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = l(n(298)),
                i = l(n(292));

            function l(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const a = s.Ember.Component.extend((0, i.default)("lockedBecauseOfLevel", "disabled"), {
                tagName: "lol-perks-style-icon-button",
                attributeBindings: ["style.idName:style-name", "selectedAttr:selected"],
                classNames: ["style_option"],
                classNameBindings: ["styleState"],
                tutorial: s.Ember.inject.service(),
                platformSettings: s.Ember.inject.service(),
                sanitizeOverride: (0, o.default)(),
                selectedAttr: s.Ember.computed("styleState", (function() {
                    return "selected" === this.get("styleState") ? "" : null
                })),
                name: s.Ember.computed.alias("style.name"),
                descriptionTraKey: s.Ember.computed("style.idName", (function() {
                    return "perks_" + this.get("style.idName") + "_short_desc_"
                })),
                description1: s.Ember.computed("descriptionTraKey", (function() {
                    const e = this.get("descriptionTraKey");
                    return this.get("tra." + e + "1")
                })),
                description2: s.Ember.computed("descriptionTraKey", (function() {
                    const e = this.get("descriptionTraKey");
                    return this.get("tra." + e + "2")
                })),
                styleBonusDesc: s.Ember.computed.alias("subStyleBonus.longDesc"),
                lockedBecauseOfLevel: s.Ember.computed("splashedStyle", "tutorial.secondaryPathEditingUnlocked", "styleState", (function() {
                    return "selected" !== this.get("styleState") && (this.get("splashedStyle") && !this.get("tutorial.secondaryPathEditingUnlocked") || !this.get("splashedStyle") && !this.get("tutorial.basicEditingUnlocked"))
                })),
                unlockText: s.Ember.computed("splashedStyle", "platformSettings.MinSummonerLevelEditSecondaryPath", "platformSettings.MinSummonerLevelBasicEditing", (function() {
                    const e = this.get("splashedStyle") ? this.get("platformSettings.MinSummonerLevelEditSecondaryPath") : this.get("platformSettings.MinSummonerLevelBasicEditing");
                    return this.get("tra").formatString("unlocks_at_level", {
                        level: e
                    })
                })),
                click: function(e) {
                    if (this.get("lockedBecauseOfLevel")) return e.preventDefault(), !1;
                    const t = this.get("style");
                    this.styleOptionClicked(t)
                },
                styleOptionClicked: function() {
                    throw new Error("override this method")
                }
            });
            a.reopenClass({
                positionalParams: ["style"]
            });
            var r = a;
            t.default = r
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = (s = n(292)) && s.__esModule ? s : {
                    default: s
                };
            const l = o.Ember.Component.extend((0, i.default)("isInspirationPlaceholder", "disabled"), {
                classNames: ["style_picker_column"],
                platformSettings: o.Ember.inject.service(),
                idName: o.Ember.computed("isInspirationPlaceholder", (function() {
                    return this.get("isInspirationPlaceholder") ? "inspiration" : this.get("style.idName")
                })),
                name: o.Ember.computed("isInspirationPlaceholder", (function() {
                    return this.get("isInspirationPlaceholder") ? this.get("tra.perks_locked_style_name") : this.get("style.name")
                })),
                description: o.Ember.computed("isInspirationPlaceholder", (function() {
                    return this.get("isInspirationPlaceholder") ? this.get("inspirationUnlockText") : this.get("style.description.s1")
                })),
                description2: o.Ember.computed("isInspirationPlaceholder", (function() {
                    return this.get("isInspirationPlaceholder") ? "" : this.get("style.description.s2")
                })),
                inspirationUnlockText: o.Ember.computed("tra.perks_style_unlock_requirement", (function() {
                    return this.get("tra.service").formatString("perks_style_unlock_requirement", {
                        levelRequirement: this.get("platformSettings.MinSummonerLevelUnlockInspiration")
                    })
                })),
                audio: o.Ember.inject.service(),
                mouseEnter() {
                    this.get("audio.gridHover").play(), this.get("uxSettings.largeAreaAnimationsEnabled") && this.element.querySelector(".style_video").play()
                },
                click() {
                    this.get("audio.gridSelectDefault").play()
                },
                mouseLeave() {
                    this.get("uxSettings.largeAreaAnimationsEnabled") && this.element.querySelector(".style_video").pause()
                }
            });
            l.reopenClass({
                positionalParams: ["style", "uxSettings"]
            });
            var a = l;
            t.default = a
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1).Ember.Component.extend({
                classNames: ["toggle-button-component"],
                classNameBindings: ["selected", "disabled"],
                actions: {
                    toggleClicked: function() {
                        this.get("disabled") || this.onToggleClicked()
                    }
                }
            });
            t.default = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1);
            var i = ((s = n(291)) && s.__esModule ? s : {
                default: s
            }).default.extend({
                classNames: ["perks-edit-btn"],
                layoutName: "components/circle-button",
                "click-sfx-src": "/fe/lol-collections/perks/audio/sfx-masteries-button-generic-click.ogg",
                customPageRenamingDisabled: !1,
                canEditPageName: !0,
                tooltip: o.Ember.computed.alias("tra.perks_page_edit_page_name_label"),
                disabled: o.Ember.computed("customPageRenamingDisabled", "canEditPageName", (function() {
                    return this.get("customPageRenamingDisabled") || !this.get("canEditPageName")
                })),
                disabledTooltip: o.Ember.computed("customPageRenamingDisabled", "tra.perks_page_editing_disabled", "tra.perks_page_renaming_disabled", (function() {
                    return this.get("customPageRenamingDisabled") ? this.get("tra.perks_page_renaming_disabled") : this.get("tra.perks_page_editing_disabled")
                })),
                attributeBindings: ["buttonType:button-type"],
                buttonType: "rename",
                click: function() {
                    this.get("disabled") || this.get("isRenaming") || this.sendAction()
                }
            });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1).Ember.Helper.helper((function(e) {
                let t = 0;
                for (const n of e) t += n;
                return t
            }));
            t.default = s
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1).Ember.Helper.helper((function([e, t]) {
                return e[t]
            }));
            t.default = s
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Jon6xeHz",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\application.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","runes-application"],["flush-element"],["text","\\n  "],["append",["unknown",["outlet"]],false],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "gWv4yZPW",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\style-picker.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\style-picker.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","style_picker"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","style_picker_columns"],["flush-element"],["text","\\n"],["block",["each"],[["get",["stylesDeco"]]],null,3],["block",["if"],[["get",["showInspirationPlaceholder"]]],null,0],["text","    "],["append",["helper",["long-descriptions-checkbox"],null,[["showLongDescriptionsChanged"],[["helper",["action"],[["get",[null]],"showLongDescriptionsChanged"],null]]]],false],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["helper",["style-picker-column"],null,[["isInspirationPlaceholder"],[["get",["showInspirationPlaceholder"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["append",["helper",["component"],[["get",["column","styleKeystones"]]],[["pageId","style","showTutorial","showLongDescriptions"],[["get",["pageId"]],["get",["style"]],["get",["style","showTutorial"]],["get",["showLongDescriptions"]]]]],false],["text","\\n"]],"locals":["column"]},{"statements":[["block",["style-picker-column"],[["get",["style"]],["get",["uxSettings"]]],null,1]],"locals":[]},{"statements":[["block",["link-to-page"],null,[["pageId","primaryStyleId","class"],[["get",["pageId"]],["get",["style","id"]],["helper",["concat"],["style_picker_column ",["get",["style","idName"]]],null]]],2]],"locals":["style"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "WO79Ewoc",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\runes-recommender.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\runes-recommender.styl\\" js-path=\\"null\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","runes-recommender-root"],["dynamic-attr","style",["concat",["background-image: linear-gradient(to right, rgba(1,10,19,0), rgba(1,10,19,1) 40%), url(",["unknown",["model","runeRecommenderData","champData","baseSplashPath"]],")"]]],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","runes-recommender-header"],["flush-element"],["text","\\n    "],["append",["helper",["clickable-icon-label"],null,[["labelText","iconPath","clickSfxEvent","hoverSfxEvent","selected"],[["get",["tra","perks_modal_rune_recommender_tab_label_text"]],"/fe/lol-collections/perks/images/rune-recommender/runes-recommender-icon.png","elementClick","gridHover",true]]],false],["text","\\n    "],["append",["helper",["clickable-icon-label"],null,[["labelText","iconPath","clickSfxEvent","hoverSfxEvent","handleClick"],[["get",["tra","perks_modal_page_edit_tab_label_text"]],"/fe/lol-collections/perks/images/rune-recommender/edit-page-icon.svg","elementClick","gridHover",["helper",["action"],[["get",[null]],"editorTabClick"],null]]]],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","recommended-pages-container"],["flush-element"],["text","\\n"],["block",["each"],[["get",["model","runeRecommenderData","recommendedPages"]]],null,0],["text","  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","runes-recommender-spacer"],["flush-element"],["close-element"],["text","\\n  "],["append",["helper",["runes-recommender-controls"],null,[["shouldIncludeSummonerSpells","onToggleIncludeSummonerSpells","onToggleSummonerSpellPositions","shouldEditAfterSelection","onToggleEditAfterSelection","selectedPosition","onPositionFilterSelected","shouldShowPositionSelector","champName"],[["get",["model","runesRecommenderSettings","shouldIncludeSummonerSpells"]],["helper",["action"],[["get",[null]],"toggleProperty","model.runesRecommenderSettings.shouldIncludeSummonerSpells",true],null],["helper",["action"],[["get",[null]],"toggleProperty","model.swapSummonerSpellPositions"],null],["get",["model","runesRecommenderSettings","shouldEditAfterSelection"]],["helper",["action"],[["get",[null]],"toggleProperty","model.runesRecommenderSettings.shouldEditAfterSelection",true],null],["get",["model","runeRecommenderData","position"]],["helper",["action"],[["get",[null]],"positionFilterClicked"],null],["get",["model","runeRecommenderData","shouldShowPositionSelector"]],["get",["model","runeRecommenderData","champData","name"]]]]],false],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["helper",["runes-recommender-page"],null,[["page","shouldEnableSummonerSpells","swapSummonerSpellPositions","handleRunePageClicked","spellHotkeys","shouldEditAfterSelection"],[["get",["page"]],["get",["model","runesRecommenderSettings","shouldIncludeSummonerSpells"]],["get",["model","swapSummonerSpellPositions"]],["helper",["action"],[["get",[null]],"selectRecommendedPage",["get",["page"]],["get",["model","runesRecommenderSettings","shouldIncludeSummonerSpells"]]],null],["get",["model","spellHotkeys"]],["get",["model","runesRecommenderSettings","shouldEditAfterSelection"]]]]],false],["text","\\n"]],"locals":["page"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "wbS4I9VS",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\page-create.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "0RPp2hCp",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\page-edit.hbs\\" style-path=\\"null\\" js-path=\\"null\\" "],["text","\\n"],["append",["helper",["page-editor"],[["get",["model","page"]]],[["initialSettings","champSelectPlayer","recommendedPages","selectedPosition","currentPerksPage","showPositionSelection","onRuneRecommenderPageClicked","onPositionFilterSelected","transitionToStylesPreview","transitionToPage","transitionToRecommender"],[["get",["model","settings"]],["get",["model","champSelectPlayer"]],["get",["model","runeRecommenderData","recommendedPages"]],["get",["model","runeRecommenderData","position"]],["get",["model","runeRecommenderData","currentPage"]],["get",["model","runeRecommenderData","shouldShowPositionSelector"]],["helper",["action"],[["get",[null]],"runeRecommenderPageClicked"],null],["helper",["action"],[["get",[null]],"positionFilterClicked"],null],["helper",["action"],[["get",[null]],"transitionToStylesPreview"],null],["helper",["action"],[["get",[null]],"transitionToPage"],null],["helper",["action"],[["get",[null]],"transitionToRecommender"],null]]]],false]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "gj8rxSDp",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\circle-button.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\circle-button.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\circle-button.js\\" "],["text","\\n"],["block",["collections-tooltip"],null,[["tooltipId"],["circle-button-tooltip"]],2]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["append",["unknown",["tooltip"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["append",["helper",["if"],[["get",["disabledTooltip"]],["get",["disabledTooltip"]],["get",["tooltip"]]],null],false],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["static-attr","padding","small"],["flush-element"],["text","\\n    "],["open-element","p",[]],["flush-element"],["text","\\n"],["block",["if"],[["get",["disabled"]]],null,1,0],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "zcK1i6Zc",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\clickable-icon-label.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\clickable-icon-label.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\clickable-icon-label.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","clickable-icon-label-container"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"onContainerClick"],null],null],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"onContainerHover"],null],null],["flush-element"],["text","\\n  "],["append",["helper",["button-mask-icon"],null,[["iconPath","widthStyle","heightStyle"],[["get",["iconPath"]],"24px","24px"]]],false],["text","\\n  "],["open-element","div",[]],["static-attr","class","clickable-icon-label-label"],["flush-element"],["append",["unknown",["labelText"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["showDisabledTooltip"]]],null,1],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n        "],["open-element","p",[]],["flush-element"],["append",["unknown",["disabledTooltipText"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],0]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "8r9vvMuQ",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\delete-page-button.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\delete-page-button.js\\" "],["text","\\n"],["block",["collections-tooltip"],null,[["tooltipId"],["delete-page-tooltip"]],2]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["append",["unknown",["tooltip"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["append",["helper",["if"],[["get",["disabledTooltip"]],["get",["disabledTooltip"]],["get",["tooltip"]]],null],false],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n    "],["open-element","p",[]],["flush-element"],["text","\\n"],["block",["if"],[["get",["disabled"]]],null,1,0],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "tnIIl3FQ",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\framed-perk-icon.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\framed-perk-icon.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\framed-perk-icon.js\\" "],["text","\\n"],["open-element","img",[]],["static-attr","class","framed-perk-icon"],["dynamic-attr","src",["unknown",["perk","iconPath"]],null],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["tooltipOverride"]]],null,3,1],["open-element","lol-perks-gradient-ring",[]],["flush-element"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["static-attr","padding","small"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","keystone-icon-tooltip"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","body"],["flush-element"],["text","\\n            "],["open-element","header",[]],["static-attr","class","tooltip-header"],["flush-element"],["text","\\n              "],["open-element","span",[]],["static-attr","class","name"],["flush-element"],["text","\\n                "],["append",["unknown",["perk","name"]],false],["text","\\n              "],["close-element"],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","p",[]],["static-attr","class","tooltip-description current"],["flush-element"],["text","\\n              "],["append",["helper",["sanitize"],[["get",["perk","shortDesc"]]],[["config"],[["get",["sanitizeOverride"]]]]],false],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["collections-tooltip"],null,[["tooltipId"],[["helper",["concat"],["framed-perks-icon-tooltip",["get",["perk","id"]]],null]]],0]],"locals":[]},{"statements":[["text","      "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["static-attr","padding","small"],["flush-element"],["text","\\n        "],["open-element","p",[]],["flush-element"],["append",["unknown",["tooltipOverride"]],false],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["uikit-tooltip"],null,[["tooltipPosition","type"],["top","system"]],2]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "QqaExSwc",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\keystone-icon.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\keystone-icon.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\keystone-icon.js\\" "],["text","\\n"],["block",["if"],[["get",["keystone"]]],null,3,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","thumb_keystone_placeholder"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","lol-perks-glowing-dot",[]],["static-attr","class","keystone-icon-glowing-dot"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["static-attr","padding","small"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","keystone-icon-tooltip"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","body"],["flush-element"],["text","\\n          "],["open-element","header",[]],["static-attr","class","tooltip-header"],["flush-element"],["text","\\n            "],["open-element","span",[]],["static-attr","class","name"],["flush-element"],["text","\\n              "],["append",["unknown",["keystone","name"]],false],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","p",[]],["static-attr","class","tooltip-description current"],["flush-element"],["text","\\n            "],["append",["helper",["sanitize"],[["get",["description"]]],[["config"],[["get",["sanitizeOverride"]]]]],false],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["keystone","iconPath"]]]]],["static-attr","class","thumb_keystone"],["flush-element"],["close-element"],["text","\\n"],["block",["collections-tooltip"],null,[["tooltipId"],[["helper",["concat"],["keystone-icon-tooltip",["get",["keystone","id"]]],null]]],2],["block",["if"],[["get",["showGamePlayUpdateDot"]]],null,1]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "fwpoMqNm",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\link-to-page.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\link-to-page.js\\" "],["text","\\n"],["block",["if"],[["get",["isEditing"]]],null,5,3]],"locals":[],"named":[],"yields":["default"],"blocks":[{"statements":[["text","  "],["append",["unknown",["keystone-icon"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["yield","default",[["helper",["hash"],null,[["keystone-icon"],[["helper",["component"],["keystone-icon",["get",["keystone"]]],null]]]]]],["text","\\n"]],"locals":[]},{"statements":[["block",["link-to"],["page-create",["helper",["query-params"],null,[["primaryStyleId","keystoneId"],[["get",["primaryStyleId"]],["get",["keystone","id"]]]]]],[["class","bubbles"],[["get",["class"]],false]],1]],"locals":[]},{"statements":[["block",["if"],[["get",["isCreating"]]],null,2,0]],"locals":[]},{"statements":[["text","    "],["yield","default",[["helper",["hash"],null,[["keystone-icon"],[["helper",["component"],["keystone-icon",["get",["keystone"]]],null]]]]]],["text","\\n"]],"locals":[]},{"statements":[["block",["link-to"],["page-edit",["get",["pageId"]],["helper",["query-params"],null,[["primaryStyleId","keystoneId"],[["get",["primaryStyleId"]],["get",["keystone","id"]]]]]],[["class","bubbles"],[["get",["class"]],false]],4]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "dV8DZ4U9",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\long-descriptions-checkbox.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\long-descriptions-checkbox.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\long-descriptions-checkbox.js\\" "],["text","\\n"],["open-element","input",[]],["static-attr","slot","input"],["static-attr","type","checkbox"],["static-attr","name","showLongDescriptions"],["dynamic-attr","checked",["unknown",["showLongDescriptions"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"showLongDescriptionsDidChange"],null],null],["flush-element"],["close-element"],["text","\\n"],["open-element","label",[]],["static-attr","slot","label"],["static-attr","for","showLongDescriptions"],["static-attr","class","lol-settings-checkbox-label"],["flush-element"],["append",["unknown",["tra","perks_show_long_descriptions"]],false],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "uWO3crct",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\page-editor.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\page-editor.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\page-editor.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","perks-body"],["flush-element"],["text","\\n\\n"],["block",["if"],[["get",["styleBackgroundVideosEnabled"]]],null,7],["text","\\n"],["append",["helper",["construct-minspec"],null,[["class","primary","secondary","keystone","canAnimate"],["perks-construct-minspec",["get",["primaryStyle","id"]],["get",["subStyle","id"]],["get",["page","keystone","id"]],["get",["animateAttr"]]]]],false],["text","\\n\\n  "],["open-element","div",[]],["static-attr","class","perks-body-content"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","perks-body-header"],["flush-element"],["text","\\n"],["block",["if"],[["get",["champSelectPlayer"]]],null,6],["text","      "],["open-element","div",[]],["static-attr","class","perks-header-content-group"],["flush-element"],["text","\\n        "],["append",["helper",["toggle-rename-button"],null,[["action","canEditPageName","customPageRenamingDisabled","isLoading"],["toggleEditPageName",["get",["canEditPageName"]],["get",["customPageRenamingDisabled"]],["get",["renameIsPending"]]]]],false],["text","\\n\\n        "],["open-element","div",[]],["static-attr","class","perks-pages-dropdown-holder"],["flush-element"],["text","\\n          "],["append",["helper",["pages-dropdown"],[["get",["perksBook","customPages"]],["get",["perksBook","defaultPages"]]],[["currentPage","canEdit","customPageRenamingDisabled","restrictedPageNamesEnabled","reorderingEnabled","cannotAddPage","transitionToStylesPreview","reorderPage","pageSelected","isVisible"],[["get",["page"]],["get",["canEdit"]],["get",["customPageRenamingDisabled"]],["get",["restrictedPageNamesEnabled"]],["get",["customPageReorderingEnabled"]],["get",["cannotAddPage"]],["get",["transitionToStylesPreview"]],["helper",["action"],[["get",[null]],"reorderPage"],null],["helper",["action"],[["get",[null]],"pageSelected"],null],["helper",["if"],[["get",["editingPageName"]],false,true],null]]]],false],["text","\\n\\n          "],["open-element","lol-uikit-flat-input",[]],["static-attr","class","perks-dropdown-input"],["flush-element"],["text","\\n            "],["append",["helper",["name-text-field"],[["get",["page"]],["get",["perksBook","pages"]]],[["isComponentActive","pendingChangesPromise","onRenamePending","onRenameComplete","isVisible","restrictedPageNamesEnabled","customPageRenamingDisabled"],[["get",["editingPageName"]],["get",["pendingChangesPromise"]],["helper",["action"],[["get",[null]],"renamingPending"],null],["helper",["action"],[["get",[null]],"renamingComplete"],null],["get",["editingPageName"]],["get",["restrictedPageNamesEnabled"]],["get",["customPageRenamingDisabled"]]]]],false],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","perks-header-content-group"],["flush-element"],["text","\\n"],["block",["save-page-button"],null,[["action","disabled"],["savePage",["get",["isSaveDisabled"]]]],5],["text","        "],["append",["helper",["add-page-button"],null,[["action","canAddPage"],["startTransitionToStylesPreview",["get",["canAddPage"]]]]],false],["text","\\n        "],["append",["helper",["delete-page-button"],null,[["click","disabled"],[["helper",["action"],[["get",[null]],"deletePage"],null],["helper",["if"],[["get",["page","isDeletable"]],false,true],null]]]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","perks-body-columns-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","perks-body-column"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","perks-body-choices-holder"],["flush-element"],["text","\\n          "],["append",["helper",["progress-bar"],null,[["class","styleName","max","current"],["perks-progress-bar",["get",["page","primaryStyle","idName"]],["get",["primaryMaxProgress"]],["get",["primaryProgress"]]]]],false],["text","\\n\\n          "],["append",["helper",["primary-style-selector"],[["get",["page"]]],[["primaryStyles","primaryStyleChanged","drawerIsOpen","overrideDrawerState","gridModeEnabled"],[["get",["perkStyles"]],["helper",["action"],[["get",[null]],"handlePrimaryStyleChanged"],null],["helper",["value-from-array"],[["get",["drawersOpen"]],["get",["PRIMARY_STYLE_DRAWER_INDEX"]]],null],["helper",["action"],[["get",[null]],"overrideDrawerState",["get",["PRIMARY_STYLE_DRAWER_INDEX"]]],null],["get",["gridModeEnabled"]]]]],false],["text","\\n\\n"],["block",["each"],[["get",["page","primaryPerkSlots"]]],[["key"],["slotIndex"]],4],["text","        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","perks-body-column"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","perks-body-choices-holder"],["flush-element"],["text","\\n          "],["append",["helper",["progress-bar"],null,[["class","styleName","max","current"],["perks-progress-bar",["get",["subStyleNameAttr"]],["get",["secondaryMaxProgress"]],["get",["secondaryProgress"]]]]],false],["text","\\n\\n          "],["append",["helper",["splashed-style-selector"],[["get",["page"]]],[["splashedStyles","drawerIsOpen","overrideDrawerState","gridModeEnabled"],[["get",["allowedSubStyles"]],["helper",["value-from-array"],[["get",["drawersOpen"]],["get",["SECONDARY_STYLE_DRAWER_INDEX"]]],null],["helper",["action"],[["get",[null]],"overrideDrawerState",["get",["SECONDARY_STYLE_DRAWER_INDEX"]]],null],["get",["gridModeEnabled"]]]]],false],["text","\\n\\n          "],["append",["helper",["splashed-perk-selector"],[["get",["page"]]],[["gridModeEnabled","disabledPerks","showLongDescriptions","disabledPerkClicked","drawerIsOpen","overrideDrawerState"],[["get",["gridModeEnabled"]],["get",["perksBook","disabledPerks"]],["get",["showLongDescriptions"]],"disabledPerkClicked",["helper",["value-from-array"],[["get",["drawersOpen"]],["get",["FIRST_SECONDARY_PERK_DRAWER_INDEX"]]],null],["helper",["action"],[["get",[null]],"overrideDrawerState",["get",["FIRST_SECONDARY_PERK_DRAWER_INDEX"]]],null]]]],false],["text","\\n\\n          "],["append",["helper",["progress-bar"],null,[["class","styleName","max","current","hideRing"],["stat-mod-perks-progress-bar","stat-shard",["get",["statModMaxProgress"]],["get",["statModProgress"]],true]]],false],["text","\\n"],["block",["each"],[["get",["page","statModPerkSlots"]]],[["key"],["slotIndex"]],3],["text","        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n\\n    "],["open-element","div",[]],["static-attr","class","page-editor-footer"],["flush-element"],["text","\\n"],["block",["if"],[["get",["showPositionSelection"]]],null,2],["block",["if"],[["get",["recommendedPages"]]],null,1],["text","      "],["open-element","div",[]],["static-attr","class","perks-settings"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","perks-grid-mode-buttons"],["flush-element"],["text","\\n          "],["open-element","label",[]],["static-attr","class","perks-grid-mode-label"],["flush-element"],["text","\\n            "],["open-element","input",[]],["static-attr","class","perks-grid-mode-input"],["static-attr","type","radio"],["static-attr","name","gridModeEnabled"],["dynamic-attr","checked",["unknown",["notGridModeEnabled"]],null],["dynamic-attr","onchange",["helper",["action"],[["get",[null]],"toggleGridMode",false],null],null],["flush-element"],["close-element"],["text","\\n            "],["open-element","svg",[]],["static-attr","class","perks-grid-mode-icon"],["static-attr","x","0px"],["static-attr","y","0px"],["static-attr","width","14px"],["static-attr","height","12px"],["static-attr","viewBox","0 0 14 12"],["flush-element"],["text","\\n              "],["open-element","path",[]],["static-attr","class","perks-grid-mode-path"],["static-attr","d","M0,0h3v2H0V0z M5,0h9v2H5V0z M0,5h3v2H0V5z M5,5h9v2H5V5z M0,10h3v2H0V10z M5,10h9v2H5V10z"],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","label",[]],["static-attr","class","perks-grid-mode-label"],["flush-element"],["text","\\n            "],["open-element","input",[]],["static-attr","class","perks-grid-mode-input"],["static-attr","type","radio"],["static-attr","name","gridModeEnabled"],["dynamic-attr","checked",["unknown",["gridModeEnabled"]],null],["dynamic-attr","onchange",["helper",["action"],[["get",[null]],"toggleGridMode",true],null],null],["flush-element"],["close-element"],["text","\\n            "],["open-element","svg",[]],["static-attr","class","perks-grid-mode-icon"],["static-attr","x","0px"],["static-attr","y","0px"],["static-attr","width","13px"],["static-attr","height","12px"],["static-attr","viewBox","0 0 13 12"],["flush-element"],["text","\\n              "],["open-element","path",[]],["static-attr","class","perks-grid-mode-path"],["static-attr","d","M0,0h3v2H0V0z M5,0h3v2H5V0z M10,0h3v2h-3V0z M0,5h3v2H0V5z M5,5h3v2H5V5z M10,5h3v2h-3V5z M0,10 h3v2H0V10z M5,10h3v2H5V10z M10,10h3v2h-3V10z"],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n\\n        "],["open-element","lol-uikit-flat-checkbox",[]],["static-attr","class","lol-settings-checkbox"],["flush-element"],["text","\\n          "],["open-element","input",[]],["static-attr","slot","input"],["static-attr","type","checkbox"],["dynamic-attr","onchange",["helper",["action"],[["get",[null]],"toggleShowLongDescriptions"],null],null],["dynamic-attr","checked",["unknown",["showLongDescriptions"]],null],["flush-element"],["close-element"],["text","\\n          "],["open-element","label",[]],["static-attr","slot","label"],["static-attr","for","showLongDescriptions"],["static-attr","class","lol-settings-checkbox-label"],["flush-element"],["append",["unknown",["tra","perks_show_long_descriptions"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text"," "],["comment"," end perks-body-content "],["text","\\n"],["close-element"],["text"," "],["comment"," end perks-body "],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","page-editor-footer-keystone-container"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"handleRecommendedPageClicked",["get",["page"]]],null],null],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"handleRecommendedPageHovered"],null],null],["flush-element"],["text","\\n              "],["append",["helper",["framed-perk-icon"],null,[["perk","styleIdName","tooltipOverride"],[["get",["page","keystone"]],["helper",["if"],[["get",["page","isSelected"]],["get",["page","keystone","styleIdName"]],"none"],null],["get",["page","attributesLoc"]]]]],false],["text","\\n            "],["close-element"],["text","\\n"]],"locals":["page","index"]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","page-editor-recommendations-container"],["flush-element"],["text","\\n"],["block",["each"],[["get",["recommendedPages"]]],null,0],["text","        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","page-editor-footer-pike tall"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["append",["helper",["runes-recommender-position-filters"],null,[["selectedPosition","handlePositionSelected"],[["get",["selectedPosition"]],["helper",["action"],[["get",[null]],"handlePositionFilterClicked"],null]]]],false],["text","\\n        "],["open-element","div",[]],["static-attr","class","page-editor-footer-pike short"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["append",["helper",["stat-mod-perk-selector"],[["get",["page"]],["get",["slot"]],["get",["slot","slotIndex"]]],[["gridModeEnabled","disabledPerkClicked","showLongDescriptions","drawerIsOpen","overrideDrawerState"],[["get",["gridModeEnabled"]],"disabledPerkClicked",["get",["showLongDescriptions"]],["helper",["value-from-array"],[["get",["drawersOpen"]],["helper",["add"],[["get",["index"]],["get",["STAT_MOD_PERK_DRAWER_INDEX"]]],null]],null],["helper",["action"],[["get",[null]],"overrideDrawerState",["helper",["add"],[["get",["index"]],["get",["STAT_MOD_PERK_DRAWER_INDEX"]]],null]],null]]]],false],["text","\\n"]],"locals":["slot","index"]},{"statements":[["text","            "],["append",["helper",["primary-perk-selector"],[["get",["page"]],["get",["slot"]],["get",["slot","slotIndex"]]],[["isKeystone","gridModeEnabled","disabledPerkClicked","showLongDescriptions","drawerIsOpen","overrideDrawerState"],[["helper",["eq"],[["get",["index"]],0],null],["get",["gridModeEnabled"]],"disabledPerkClicked",["get",["showLongDescriptions"]],["helper",["value-from-array"],[["get",["drawersOpen"]],["helper",["add"],[["get",["index"]],["get",["FIRST_PRIMARY_PERK_DRAWER_INDEX"]]],null]],null],["helper",["action"],[["get",[null]],"overrideDrawerState",["helper",["add"],[["get",["index"]],["get",["FIRST_PRIMARY_PERK_DRAWER_INDEX"]]],null]],null]]]],false],["text","\\n"]],"locals":["slot","index"]},{"statements":[["text","          "],["append",["unknown",["tra","perks_page_save_button_label"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["append",["helper",["clickable-icon-label"],null,[["labelText","iconPath","handleClick","disabled","disabledTooltipText"],[["get",["tra","perks_modal_rune_recommender_tab_label_text"]],"/fe/lol-collections/perks/images/rune-recommender/runes-recommender-icon.png",["helper",["action"],[["get",[null]],"handleTransitionToRecommender"],null],["helper",["if"],[["get",["champOrPickIntent"]],false,true],null],["get",["tra","rune_recommender_disabled_no_champion_selected"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","uikit-video",[]],["static-attr","class","perks-background-video"],["dynamic-attr","src",["concat",[["unknown",["backgroundVideo"]]]]],["static-attr","cache-name","rcp-fe-lol-perks"],["static-attr","loop",""],["static-attr","preload",""],["static-attr","autoplay",""],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "3LaTJ2ga",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\pages-dropdown-option.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\pages-dropdown-option.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\pages-dropdown-option.js\\" "],["text","\\n"],["block",["if"],[["get",["pageMarkClass"]]],null,3],["text","\\n"],["open-element","div",[]],["static-attr","class","perks-pages-dropdown-option-text"],["flush-element"],["text","\\n  "],["append",["unknown",["name"]],false],["text","\\n"],["close-element"],["text","\\n\\n"],["block",["collections-tooltip"],null,[["tooltipId"],["perks-pages-dropdown-option-tooltip"]],0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["static-attr","padding","small"],["static-attr","class","perks-pages-dropdown-option-tooltip"],["flush-element"],["text","\\n    "],["open-element","h6",[]],["static-attr","class","preserve-case"],["flush-element"],["text","\\n      "],["append",["unknown",["name"]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","exclamation-mark"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["append",["helper",["button-mask-icon"],null,[["iconPath","widthStyle","heightStyle"],["/fe/lol-collections/perks/images/rune-recommender/runes-recommender-icon.png","22px","22px"]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["page-mark-container ",["unknown",["pageMarkClass"]]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["page","isTemporary"]]],null,2,1],["text","    "],["open-element","lol-perks-glowing-dot",[]],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "MyVxFkRu",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\pages-dropdown.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\pages-dropdown.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\pages-dropdown.js\\" "],["text","\\n"],["open-element","lol-uikit-flat-dropdown",[]],["static-attr","stylablecontent",""],["static-attr","id","perks-panel-page-dropdown"],["static-attr","direction","downward"],["flush-element"],["text","\\n\\n"],["block",["if"],[["get",["canEdit"]]],null,3],["text","\\n"],["block",["each"],[["get",["pages"]]],[["key"],["id"]],0],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["append",["helper",["pages-dropdown-option"],[["get",["page"]]],[["index","customPageRenamingDisabled","restrictedPageNamesEnabled","currentPage","selectItem"],[["get",["index"]],["get",["customPageRenamingDisabled"]],["get",["restrictedPageNamesEnabled"]],["get",["currentPage"]],["helper",["action"],[["get",[null]],"selectItem"],null]]]],false],["text","\\n"]],"locals":["page","index"]},{"statements":[["text","          "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n            "],["append",["unknown",["addPageDisabledTooltipText"]],false],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["collections-tooltip"],null,[["tooltipId"],["add-page-disabled-tooltip"]],1]],"locals":[]},{"statements":[["text","    "],["open-element","lol-uikit-dropdown-option",[]],["static-attr","slot","lol-uikit-dropdown-option"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"addPage"],null],null],["dynamic-attr","disabled",["helper",["if"],[["get",["cannotAddPage"]],true],null],null],["flush-element"],["text","\\n      "],["open-element","span",[]],["static-attr","class","perks-pages-dropdown-add"],["flush-element"],["text","\\n        "],["append",["unknown",["tra","perks_page_add_page_label"]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["dynamic-attr","class",["concat",["perks-icon-add-page ",["helper",["if"],[["get",["cannotAddPage"]],"disabled"],null]]]],["flush-element"],["close-element"],["text","\\n"],["block",["unless"],[["get",["tutorial","basicEditingUnlocked"]]],null,2],["text","    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "+dEEZ6Lb",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\perk-icon-button.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\perk-icon-button.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\perk-icon-button.js\\" "],["text","\\n"],["yield","default"],["text","\\n"]],"locals":[],"named":[],"yields":["default"],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "OcAsLndp",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\perk-option.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\perk-option.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\perk-option.js\\" "],["text","\\n"],["block",["perk-icon-button"],[["get",["perk"]]],[["isKeystone","styleName","notDisabled","isSelected","isDisabled","hasSelection","itemIndex","optionIndex","makePerkSelection"],[["get",["isKeystone"]],["get",["styleName"]],["get",["notDisabled"]],["get",["isSelected"]],["get",["isDisabled"]],["get",["currentSelectionId"]],["get",["index"]],["get",["optionIndex"]],["get",["makePerkSelection"]]]],1]],"locals":[],"named":[],"yields":["default"],"blocks":[{"statements":[["text","    "],["open-element","lol-perks-glowing-dot",[]],["static-attr","class","perk-option-glowing-dot"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["hasGameplayUpdate"]]],null,0],["text","  "],["yield","default"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "+dSQxgpR",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\perks-tooltip.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\perks-tooltip.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\perks-tooltip.js\\" "],["text","\\n"],["text","  "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-large"],["static-attr","padding","small"],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["perks-tooltip ",["helper",["if"],[["get",["shortWidth"]],"short-width"],null]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["perk"]]],null,2,0],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["open-element","header",[]],["static-attr","class","tooltip-header"],["flush-element"],["text","\\n          "],["comment"," UNLOCALIZED "],["text","\\n          "],["open-element","span",[]],["static-attr","class","name"],["flush-element"],["text","\\n            Unselect current perk\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","level-locked-header"],["flush-element"],["text","\\n            "],["append",["unknown",["unlockText"]],false],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["perk","lockedBecauseOfLevel"]]],null,1],["text","        "],["open-element","header",[]],["static-attr","class","tooltip-header"],["flush-element"],["text","\\n          "],["open-element","span",[]],["static-attr","class","name"],["flush-element"],["text","\\n            "],["append",["unknown",["headerText"]],false],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","p",[]],["static-attr","class","tooltip-description current"],["flush-element"],["text","\\n          "],["append",["helper",["sanitize"],[["get",["perkDescription"]]],[["config"],[["get",["sanitizeOverride"]]]]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "3S8pH6L2",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\primary-perk-selector.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\primary-perk-selector.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\primary-perk-selector.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","primary-perk-selector-left"],["flush-element"],["text","\\n"],["block",["primary-selected-perk"],[["get",["currentSelection"]]],[["gridModeEnabled","styleName","optionIndex","isKeystone","isValidSelection","drawerIsOpen","overrideDrawerState"],[["get",["gridModeEnabled"]],["get",["styleName"]],["get",["optionIndex"]],["get",["isKeystone"]],["get",["isValidSelection"]],["get",["_drawerIsOpen"]],["get",["overrideDrawerState"]]]],7],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","primary-perk-selector-right"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isKeystone"]]],null,4],["text","  "],["open-element","div",[]],["dynamic-attr","class",["concat",["perk-selector-text\\n      ",["helper",["if"],[["get",["_drawerIsOpen"]],"drawer-open","drawer-closed"],null],"\\n\\n      ",["unknown",["keystoneClass"]]]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["perk-selector-title ",["unknown",["keystoneClass"]]," ",["unknown",["page","primaryStyle","idName"]]]]],["flush-element"],["text","\\n      "],["append",["unknown",["currentPerkName"]],false],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","perk-selector-description"],["flush-element"],["text","\\n      "],["append",["helper",["sanitize"],[["get",["currentPerkDescription"]]],[["config"],[["get",["sanitizeOverride"]]]]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["block",["runes-drawer"],null,[["hideTop","hideBottom","isOpen"],[["get",["hideTop"]],["get",["hideBottom"]],["get",["_drawerIsOpen"]]]],3],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["append",["helper",["perks-tooltip"],[["get",["perk"]]],[["headerOverride","showLongDescriptions","unlockedLevel","lockedBecauseOfLevel","shortWidth"],[["get",["perksTooltipHeaderOverride"]],["get",["showLongDescriptions"]],["get",["perkOptionsUnlockedLevel"]],["get",["perkOptionsLockedBecauseOfLevel"]],["get",["isStatMod"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["collections-tooltip"],null,[["tooltipId"],[["helper",["concat"],["perks-tooltip-",["get",["perk","id"]]],null]]],0]],"locals":[]},{"statements":[["block",["perk-option"],[["get",["perk"]],["get",["currentSelection","id"]],["get",["styleName"]]],[["isKeystone","perkOptionsDisabled","itemIndex","optionIndex","makePerkSelection"],[["get",["isKeystone"]],["get",["perkOptionsDisabled"]],["get",["index"]],["get",["optionIndex"]],["helper",["action"],[["get",[null]],"makePerkSelection"],null]]],1]],"locals":["perk","index"]},{"statements":[["block",["each"],[["get",["perksSelections"]]],[["key"],["@index"]],2]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["primary-perk-selector-keystone ",["unknown",["page","primaryStyle","idName"]]]]],["flush-element"],["text","\\n      "],["append",["unknown",["tra","perks_keystones"]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["append",["helper",["perks-tooltip"],[["get",["currentSelection"]]],[["headerOverride","showLongDescriptions","unlockedLevel","lockedBecauseOfLevel","shortWidth"],[["get",["currentPerkName"]],true,["get",["perkOptionsUnlockedLevel"]],["get",["perkOptionsLockedBecauseOfLevel"]],["get",["isStatMod"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["collections-tooltip"],null,[["tooltipId"],[["helper",["concat"],["primary-perks-tooltip-",["get",["currentSelection","id"]]],null]]],5]],"locals":[]},{"statements":[["block",["if"],[["get",["currentSelection"]]],null,6]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "zcn8Yjh1",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\primary-selected-perk.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\primary-selected-perk.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\primary-selected-perk.js\\" "],["text","\\n"],["block",["if"],[["get",["gridModeEnabled"]]],null,2,1]],"locals":[],"named":[],"yields":["default"],"blocks":[{"statements":[["text","      "],["open-element","lol-perks-update-ring",[]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\n  "],["open-element","lol-perks-perk-icon-button",[]],["dynamic-attr","class",["concat",["primary-selected-perk-icon ",["helper",["if"],[["get",["isKeystone"]],"keystone"],null]]]],["dynamic-attr","spinning",["helper",["if"],[["get",["drawerIsOpen"]],"",null],null],null],["dynamic-attr","open",["helper",["if"],[["get",["drawerIsOpen"]],"",null],null],null],["dynamic-attr","invalid",["helper",["if"],[["get",["isValidSelection"]],null,""],null],null],["dynamic-attr","keystone",["unknown",["isKeystone"]],null],["dynamic-attr","style-name",["unknown",["styleName"]],null],["dynamic-attr","src",["unknown",["perkImagePath"]],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],["get",["overrideDrawerState"]]],null],null],["flush-element"],["text","\\n"],["block",["if"],[["get",["hasGameplayUpdate"]]],null,0],["text","    "],["yield","default"],["text","\\n  "],["close-element"],["text","\\n\\n"]],"locals":[]},{"statements":[["text","\\n  "],["open-element","lol-perks-progress-icon-button",[]],["static-attr","class","primary-selected-perk-icon"],["dynamic-attr","large",["unknown",["isKeystone"]],null],["dynamic-attr","style-name",["unknown",["styleName"]],null],["dynamic-attr","filled",["helper",["if"],[["get",["perkImagePath"]],"",null],null],null],["flush-element"],["text","\\n    "],["yield","default"],["text","\\n  "],["close-element"],["text","\\n\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Rg0HmYo1",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\primary-style-selector.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\primary-style-selector.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\primary-style-selector.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","primary-style-selector-left"],["flush-element"],["text","\\n  "],["open-element","lol-perks-selected-style-icon-button",[]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],["get",["overrideDrawerState"]]],null],null],["dynamic-attr","style-name",["unknown",["page","primaryStyle","idName"]],null],["static-attr","class","primary-style-selector-button"],["dynamic-attr","disabled",["helper",["if"],[["get",["disabled"]],"",null],null],null],["dynamic-attr","spinning",["unknown",["spinningAttr"]],null],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","primary-style-selector-right"],["flush-element"],["text","\\n\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["primary-style-selector-text ",["helper",["if"],[["get",["drawerIsOpen"]],"hide"],null]]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["primary-style-selector-title ",["unknown",["page","primaryStyle","idName"]]]]],["flush-element"],["append",["unknown",["page","primaryStyle","name"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","primary-style-selector-description"],["flush-element"],["append",["unknown",["selectedStyle","description","s1"]],false],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","primary-style-selector-description"],["flush-element"],["append",["unknown",["selectedStyle","description","s2"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["block",["runes-drawer"],null,[["isOpen","hideTop","hideBottom"],[["get",["drawerIsOpen"]],true,true]],1],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["helper",["style-option"],[["get",["style"]]],[["styleOptionClicked","styleState","splashedStyle"],[["helper",["action"],[["get",[null]],"styleOptionClicked"],null],["helper",["if"],[["helper",["eq"],[["get",["page","primaryStyle","id"]],["get",["style","id"]]],null],"selected","unselected"],null],false]]],false],["text","\\n"]],"locals":["style"]},{"statements":[["block",["each"],[["get",["primaryStyles"]]],[["key"],["id"]],0]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "9bhoF92i",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\runes-recommender-controls.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\runes-recommender-controls.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\runes-recommender-controls.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","runes-recommender-controls-content"],["flush-element"],["text","\\n"],["block",["if"],[["get",["shouldShowPositionSelector"]]],null,0],["text","  "],["open-element","div",[]],["static-attr","class","runes-recommender-spell-controls-container"],["flush-element"],["text","\\n    "],["append",["helper",["toggle-button"],null,[["tooltipText","selected","onToggleClicked","clickSfxPath","hoverSfxPath","iconPath"],[["get",["tra","rune_recommender_use_recommended_summoner_spells_toggle"]],["get",["shouldIncludeSummonerSpells"]],["helper",["action"],[["get",[null]],"toggleUseSummonerSpells"],null],"/fe/lol-champ-select/sounds/sfx-uikit-edit-click.ogg","/fe/lol-champ-select/sounds/sfx-uikit-grid-hover.ogg","/fe/lol-collections/perks/images/rune-recommender/summoner-spell-icon.png"]]],false],["text","\\n    "],["append",["helper",["framed-icon-button"],null,[["onButtonClick","iconPath","clickSfxPath","hoverSfxPath","tooltipText"],[["helper",["action"],[["get",[null]],"toggleSummonerSpellPositions"],null],"/fe/lol-collections/perks/images/rune-recommender/swap-summoner-spells-icon.png","/fe/lol-champ-select/sounds/sfx-uikit-edit-click.ogg","/fe/lol-champ-select/sounds/sfx-uikit-grid-hover.ogg",["get",["tra","rune_recommender_swap_summoner_spell_positions"]]]]],false],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","runes-recommender-controls-content right"],["flush-element"],["text","\\n  "],["open-element","lol-uikit-flat-checkbox",[]],["flush-element"],["text","\\n    "],["open-element","input",[]],["static-attr","slot","input"],["static-attr","id","shouldEditPageOnSelection"],["static-attr","type","checkbox"],["dynamic-attr","onchange",["helper",["action"],[["get",[null]],"toggleEditAfterSelection"],null],null],["dynamic-attr","checked",["unknown",["shouldEditAfterSelection"]],null],["flush-element"],["close-element"],["text","\\n    "],["open-element","label",[]],["static-attr","slot","label"],["static-attr","class","runes-recommender-edit-after-selection-checkbox"],["static-attr","for","shouldEditAfterSelection"],["flush-element"],["append",["unknown",["tra","rune_recommender_edit_page_on_selection"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["append",["helper",["runes-recommender-position-filters"],null,[["selectedPosition","handlePositionSelected"],[["get",["selectedPosition"]],["helper",["action"],[["get",[null]],"positionFilterSelected"],null]]]],false],["text","\\n    "],["open-element","div",[]],["static-attr","class","runes-recommender-controls-separator"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "EIOOR7l2",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\runes-recommender-page.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\runes-recommender-page.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\runes-recommender-page.js\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["runes-recommender-page-container ",["helper",["if"],[["get",["page","isSelected"]],"selected"],null]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"handleRecommendedPageSelected",["get",["page"]]],null],null],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"handleRecommendedPageHovered"],null],null],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","runes-recommender-page-hover-glow-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["runes-recommender-page-hover-glow ",["unknown",["page","keystone","styleIdName"]]]]],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","runes-recommender-page-selection-reticle-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","runes-recommender-page-selection-reticle left"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","runes-recommender-page-selection-reticle right"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["append",["helper",["runes-recommender-page-summary"],null,[["page"],[["get",["page"]]]]],false],["text","\\n"],["block",["if"],[["get",["shouldEnableSummonerSpells"]]],null,1],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["append",["helper",["runes-recommender-spell"],null,[["enabled","spell","index","spellHotkeys"],[["get",["shouldEnableSummonerSpells"]],["get",["spell"]],["get",["i"]],["get",["spellHotkeys"]]]]],false],["text","\\n"]],"locals":["spell","i"]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","runes-recommender-page-summoner-spells"],["flush-element"],["text","\\n"],["block",["each"],[["get",["maybeSwappedSummonerSpells"]]],null,0],["text","    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Ks7CpTYO",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\runes-recommender-page-summary.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\runes-recommender-page-summary.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\runes-recommender-page-summary.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","runes-page-summary-primary-style-perks-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","runes-page-summary-keystone-sizer"],["flush-element"],["text","\\n    "],["append",["helper",["keystone-icon"],[["get",["page","keystone"]],["get",["showLongDescriptions"]]],[["hasContainer","hideGamePlayUpdateDot"],[true,true]]],false],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","runes-page-summary-primary-splashed-perks-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["runes-page-summary-tree-lines primary ",["unknown",["primaryStyleIdName"]]]]],["flush-element"],["close-element"],["text","\\n"],["block",["each"],[["get",["primaryStylePerks"]]],null,3],["text","  "],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","lol-uikit-resizing-text-field",[]],["static-attr","data-multiline","true"],["static-attr","data-max-width","190"],["static-attr","data-max-height","90"],["static-attr","class","runes-page-summary-page-description"],["flush-element"],["append",["unknown",["page","attributesLoc"]],false],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","runes-page-summary-other-runes-container"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","runes-page-summary-secondary-splashed-perks-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["runes-page-summary-tree-lines secondary ",["unknown",["secondaryStyleIdName"]]]]],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","perks-container"],["flush-element"],["text","\\n"],["block",["each"],[["get",["secondaryStylePerks"]]],null,2],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["block",["if"],[["get",["showStatModPerks"]]],null,1],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","runes-page-summary-stat-mod-perk-sizer"],["flush-element"],["text","\\n            "],["append",["helper",["framed-perk-icon"],null,[["perk","isStatMod"],[["get",["perk"]],true]]],false],["text","\\n          "],["close-element"],["text","\\n"]],"locals":["perk"]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","runes-page-summary-stat-mod-perks-container"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","perks-container"],["flush-element"],["text","\\n"],["block",["each"],[["get",["statModPerks"]]],null,0],["text","      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","perk-connecting-line"],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","runes-page-summary-splashed-perk-sizer"],["flush-element"],["text","\\n          "],["append",["helper",["framed-perk-icon"],null,[["perk","styleIdName"],[["get",["perk"]],["get",["perk","styleIdName"]]]]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":["perk"]},{"statements":[["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",["runes-page-summary-splashed-perk-sizer index-",["get",["index"]]]]],["flush-element"],["text","\\n        "],["append",["helper",["framed-perk-icon"],null,[["perk","styleIdName"],[["get",["perk"]],["get",["perk","styleIdName"]]]]],false],["text","\\n      "],["close-element"],["text","\\n"]],"locals":["perk","index"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "/lBQR+4i",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\runes-recommender-position-filters.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\runes-recommender-position-filters.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\runes-recommender-position-filters.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","position-filters-container"],["flush-element"],["text","\\n"],["block",["each"],[["get",["positions"]]],null,0],["close-element"],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["position-filters-position-name-hover ",["helper",["if"],[["get",["hoveredPosition"]],"visible"],null]]]],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","position-filters-hr"],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","position-filters-hovered-position-text"],["flush-element"],["append",["unknown",["hoveredPosition","loc"]],false],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","position-filters-hr right"],["flush-element"],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["dynamic-attr","class",["concat",["position-icon-hitbox ",["helper",["if"],[["get",["position","selected"]],"selected"],null]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"selectPosition",["get",["position","name"]]],null],null],["dynamic-attr","onmouseover",["helper",["action"],[["get",[null]],"setHoveredPosition",["get",["position"]]],null],null],["dynamic-attr","onmouseout",["helper",["action"],[["get",[null]],"clearHoveredPosition"],null],null],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","position-icon"],["dynamic-attr","src",["unknown",["position","iconPath"]],null],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":["position"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "djyvJNIK",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\runes-recommender-spell.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\runes-recommender-spell.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\runes-recommender-spell.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","runes-recommender-spell-icon-holder"],["flush-element"],["text","\\n  "],["open-element","img",[]],["static-attr","class","runes-recommender-spell-icon"],["dynamic-attr","src",["concat",[["unknown",["spell","iconPath"]]]]],["flush-element"],["close-element"],["text","\\n"],["block",["uikit-tooltip"],null,[["targetAnchorX","targetAnchorY","tooltipAnchorX","tooltipAnchorY"],["center","bottom","center","top"]],0],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","runes-recommender-spell-key"],["flush-element"],["append",["unknown",["spellKey"]],false],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","runes-recommender-spell-icon-tooltip"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","runes-recommender-spell-icon-tooltip-header"],["flush-element"],["text","\\n        "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["spell","iconPath"]]]]],["static-attr","class","runes-recommender-spell-icon-tooltip-icon"],["flush-element"],["close-element"],["text","\\n        "],["open-element","div",[]],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","runes-recommender-spell-icon-tooltip-name"],["flush-element"],["append",["unknown",["spell","name"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","runes-recommender-spell-icon-description"],["flush-element"],["append",["unknown",["spell","description"]],false],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "vOUbicCQ",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\save-page-button.hbs\\" style-path=\\"null\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\save-page-button.js\\" "],["text","\\n"],["block",["collections-tooltip"],null,[["tooltipId"],["save-page-tooltip"]],0],["yield","default"]],"locals":[],"named":[],"yields":["default"],"blocks":[{"statements":[["text","  "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["flush-element"],["text","\\n    "],["open-element","p",[]],["flush-element"],["text","\\n      "],["append",["unknown",["tooltip"]],false],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "VIz+VRUc",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\splashed-perk-option.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\splashed-perk-option.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\splashed-perk-option.js\\" "],["text","\\n"],["block",["if"],[["get",["hasGameplayUpdate"]]],null,1],["block",["collections-tooltip"],null,[["tooltipId"],[["helper",["concat"],["splashed-perk-option-tooltip-",["get",["perk","id"]]],null]]],0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["append",["helper",["perks-tooltip"],[["get",["perk"]]],[["showLongDescriptions","unlockedLevel","lockedBecauseOfLevel"],[["get",["showLongDescriptions"]],["get",["perkOptionsUnlockedLevel"]],["get",["perkOptionsLockedBecauseOfLevel"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","lol-perks-glowing-dot",[]],["static-attr","class","splashed-perk-option-glowing-dot"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "3/kcrDCi",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\splashed-perk-selector.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\splashed-perk-selector.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\splashed-perk-selector.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","selected-splashed-perks-container"],["flush-element"],["text","\\n"],["block",["each"],[["get",["page","splashedPerkIndexes"]]],[["key"],["@index"]],3],["close-element"],["text","\\n\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["splashed-perk-selector-hider ",["helper",["if"],[["get",["canShowSplashedPerkDetails"]],"","open"],null]," ",["helper",["if"],[["get",["gridModeEnabled"]],"gridmode",""],null]]]],["flush-element"],["text","\\n"],["block",["each"],[["get",["options"]]],[["key"],["@index"]],2],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["append",["helper",["splashed-perk-option"],null,[["secondaryStyleName","showLongDescriptions","perk","perkOptionClicked","perkOptionHover","perkOptionsDisabled","optionIndex"],[["get",["page","subStyle","idName"]],["get",["showLongDescriptions"]],["get",["splashedSlotOption"]],["helper",["action"],[["get",[null]],"perkOptionClicked"],null],["helper",["action"],[["get",[null]],"perkOptionHover"],null],["get",["perkOptionsDisabled"]],["get",["option-index"]]]]],false],["text","\\n"]],"locals":["splashedSlotOption","option-index"]},{"statements":[["block",["each"],[["get",["splashedSlotOptions"]]],[["key"],["@index"]],0]],"locals":[]},{"statements":[["block",["runes-drawer"],null,[["class","isOpen","hideTop","hideBottom"],["splashed-perk-selector-drawer",["get",["drawerIsOpen"]],["get",["splashedSlotOptions","hideBorders"]],["get",["splashedSlotOptions","hideBorders"]]]],1]],"locals":["splashedSlotOptions"]},{"statements":[["text","    "],["append",["helper",["splashed-selected-perk-icon"],null,[["splashedPerkIndex","perkPage","gridModeEnabled","drawerIsOpen","overrideDrawerState","highlightedPerkIndex"],[["get",["splashedPerkIndex"]],["get",["page"]],["get",["gridModeEnabled"]],["get",["drawerIsOpen"]],["get",["overrideDrawerState"]],["get",["highlightedPerkIndex"]]]]],false],["text","\\n"]],"locals":["splashedPerkIndex"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "wx83zTRO",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\splashed-selected-perk-icon.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\splashed-selected-perk-icon.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\splashed-selected-perk-icon.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","splashed-selected-perk-icon-left"],["flush-element"],["text","\\n"],["block",["if"],[["get",["gridModeEnabled"]]],null,12,9],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","splashed-selected-perk-icon-right"],["flush-element"],["text","\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["splashed-selected-perk-icon-text ",["helper",["if"],[["get",["drawerIsOpen"]],"hidden"],null]]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["splashed-selected-perk-icon-title ",["unknown",["perkPage","subStyle","idName"]]]]],["flush-element"],["text","\\n"],["block",["if"],[["get",["perkPage","subStyle"]]],null,5,4],["text","    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","splashed-selected-perk-icon-description"],["flush-element"],["text","\\n"],["block",["if"],[["get",["perkPage","subStyle"]]],null,3,0],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["append",["unknown",["tra","perks_select_no_sub_style_description"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["append",["helper",["sanitize"],[["get",["currentPerkDescription"]]],[["config"],[["get",["sanitizeOverride"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["append",["unknown",["tra","perks_select_sub_style_description"]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["selectionRequired"]]],null,2,1]],"locals":[]},{"statements":[["text","        "],["append",["unknown",["tra","perks_select_sub_style_header"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["append",["helper",["if"],[["get",["selectionRequired"]],["get",["tra","perks_select_sub_style_header"]],["get",["selectedPerk","name"]]],null],false],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["append",["helper",["perks-tooltip"],[["get",["selectedPerk"]]],[["showLongDescriptions"],[true]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["collections-tooltip"],null,[["tooltipId"],[["helper",["concat"],["splashed-selected-perk-tooltip-",["get",["selectedPerk","id"]]],null]]],6]],"locals":[]},{"statements":[["text","        "],["open-element","lol-perks-update-ring",[]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","lol-perks-perk-icon-button",[]],["static-attr","class","splashed-selected-perk-icon-button"],["dynamic-attr","src",["unknown",["selectedPerk","iconPath"]],null],["dynamic-attr","style-name",["unknown",["perkPage","subStyle","idName"]],null],["dynamic-attr","invalid",["helper",["if"],[["get",["isValidSelection"]],null,""],null],null],["dynamic-attr","spinning",["unknown",["isSpinningAttr"]],null],["dynamic-attr","open",["helper",["if"],[["get",["drawerIsOpen"]],"",null],null],null],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"clickPerkIcon"],null],null],["flush-element"],["text","\\n"],["block",["if"],[["get",["hasGameplayUpdate"]]],null,8],["block",["if"],[["get",["selectedPerk"]]],null,7],["text","    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["append",["helper",["perks-tooltip"],[["get",["selectedPerk"]]],[["showLongDescriptions"],[true]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["collections-tooltip"],null,[["tooltipId"],[["helper",["concat"],["splashed-selected-perk-tooltip-",["get",["selectedPerk","id"]]],null]]],10]],"locals":[]},{"statements":[["text","    "],["open-element","lol-perks-progress-icon-button",[]],["static-attr","class","splashed-selected-perk-icon-button"],["dynamic-attr","filled",["helper",["if"],[["get",["selectedPerk","iconPath"]],"",null],null],null],["dynamic-attr","style-name",["unknown",["perkPage","subStyle","idName"]],null],["flush-element"],["text","\\n"],["block",["if"],[["get",["selectedPerk"]]],null,11],["text","    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "LEDxyBwS",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\splashed-style-selector.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\splashed-style-selector.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\splashed-style-selector.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","splashed-style-selector-left"],["flush-element"],["text","\\n\\n  "],["open-element","lol-perks-selected-style-icon-button",[]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],["get",["overrideDrawerState"]]],null],null],["static-attr","class","splashed-style-selector-button"],["dynamic-attr","disabled",["helper",["if"],[["get",["page","isEditable"]],null,""],null],null],["dynamic-attr","spinning",["unknown",["spinningAttr"]],null],["dynamic-attr","style-name",["unknown",["page","subStyle","idName"]],null],["flush-element"],["close-element"],["text","\\n\\n"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","splashed-style-selector-right"],["flush-element"],["text","\\n\\n  "],["open-element","div",[]],["dynamic-attr","class",["concat",["splashed-style-selector-text ",["helper",["if"],[["get",["drawerIsOpen"]],"hide"],null]]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["splashed-style-selector-title ",["unknown",["page","subStyle","idName"]]]]],["flush-element"],["text","\\n      "],["append",["helper",["if"],[["get",["page","subStyle"]],["get",["page","subStyle","name"]],["get",["tra","perks_select_splashable_perk_header"]]],null],false],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","splashed-style-selector-description"],["flush-element"],["text","\\n"],["block",["if"],[["get",["page","subStyle"]]],null,5,2],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["block",["runes-drawer"],null,[["isOpen","hideTop","hideBottom"],[["get",["drawerIsOpen"]],true,true]],1],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["helper",["style-option"],[["get",["style"]]],[["styleOptionClicked","styleState","subStyleBonus","splashedStyle"],[["helper",["action"],[["get",[null]],"styleOptionClicked"],null],["get",["style","styleState"]],["helper",["get"],[["get",["page","subStyleBonuses"]],["helper",["concat"],[["get",["style","id"]]],null]],null],true]]],false],["text","\\n"]],"locals":["style"]},{"statements":[["block",["each"],[["get",["splashedStyles"]]],[["key"],["@index"]],0]],"locals":[]},{"statements":[["text","        "],["append",["unknown",["tra","perks_select_splashable_perk_description"]],false],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["flush-element"],["append",["helper",["sanitize"],[["get",["selectedSubStyleDescription","s1"]]],[["config"],[["get",["sanitizeOverride"]]]]],false],["close-element"],["text","\\n          "],["open-element","div",[]],["flush-element"],["append",["helper",["sanitize"],[["get",["selectedSubStyleDescription","s2"]]],[["config"],[["get",["sanitizeOverride"]]]]],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["append",["helper",["sanitize"],[["get",["page","subStyleBonus","longDesc"]]],[["config"],[["get",["sanitizeOverride"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["page","subStyleBonus"]]],null,4,3]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Iw+FFfTO",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\style-keystones.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\style-keystones.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\style-keystones.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","top-row"],["flush-element"],["text","\\n"],["block",["link-to-page"],null,[["pageId","primaryStyleId","keystone"],[["get",["pageId"]],["get",["style","id"]],["get",["style","keyStones","first"]]]],6],["block",["if"],[["get",["style","keyStones","third"]]],null,5],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","bottom-row"],["flush-element"],["text","\\n"],["block",["if"],[["get",["style","keyStones","second"]]],null,3],["block",["if"],[["get",["style","keyStones","fourth"]]],null,1],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["helper",["link","keystone-icon"],[["get",["style","keyStones","fourth"]],["get",["showLongDescriptions"]]],null],false],["text","\\n"]],"locals":["link"]},{"statements":[["block",["link-to-page"],null,[["class","pageId","primaryStyleId","keystone"],["right-icon",["get",["pageId"]],["get",["style","id"]],["get",["style","keyStones","fourth"]]]],0]],"locals":[]},{"statements":[["text","      "],["append",["helper",["link","keystone-icon"],[["get",["style","keyStones","second"]],["get",["showLongDescriptions"]]],null],false],["text","\\n"]],"locals":["link"]},{"statements":[["block",["link-to-page"],null,[["pageId","primaryStyleId","keystone"],[["get",["pageId"]],["get",["style","id"]],["get",["style","keyStones","second"]]]],2]],"locals":[]},{"statements":[["text","      "],["append",["helper",["link","keystone-icon"],[["get",["style","keyStones","third"]],["get",["showLongDescriptions"]]],null],false],["text","\\n"]],"locals":["link"]},{"statements":[["block",["link-to-page"],null,[["class","pageId","primaryStyleId","keystone"],["right-icon",["get",["pageId"]],["get",["style","id"]],["get",["style","keyStones","third"]]]],4]],"locals":[]},{"statements":[["text","    "],["append",["helper",["link","keystone-icon"],[["get",["style","keyStones","first"]],["get",["showLongDescriptions"]]],null],false],["text","\\n"]],"locals":["link"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "pXJUhQnD",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\style-option.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\style-option.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\style-option.js\\" "],["text","\\n"],["block",["collections-tooltip"],null,[["tooltipId"],[["helper",["concat"],["style-option-",["get",["style","id"]]],null]]],2]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["open-element","hr",[]],["flush-element"],["close-element"],["text","\\n          "],["open-element","p",[]],["static-attr","class","tooltip-description-line"],["flush-element"],["text","\\n            "],["append",["helper",["sanitize"],[["get",["styleBonusDesc"]]],[["config"],[["get",["sanitizeOverride"]]]]],false],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["static-attr","class","level-locked-header"],["flush-element"],["text","\\n          "],["append",["unknown",["unlockText"]],false],["text","\\n        "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","lol-uikit-content-block",[]],["static-attr","type","tooltip-system"],["static-attr","padding","small"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","style-option-tooltip"],["flush-element"],["text","\\n"],["block",["if"],[["get",["lockedBecauseOfLevel"]]],null,1],["text","      "],["open-element","header",[]],["static-attr","class","tooltip-header"],["flush-element"],["text","\\n        "],["append",["unknown",["name"]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","tooltip-description"],["flush-element"],["text","\\n        "],["open-element","p",[]],["static-attr","class","tooltip-description-line"],["flush-element"],["text","\\n          "],["append",["helper",["sanitize"],[["get",["description2"]]],[["config"],[["get",["sanitizeOverride"]]]]],false],["text","\\n        "],["close-element"],["text","\\n"],["block",["if"],[["get",["subStyleBonus"]]],null,0],["text","      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "A0yQadOF",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\style-picker-column.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\style-picker-column.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\style-picker-column.js\\" "],["text","\\n"],["block",["unless"],[["get",["uxSettings","largeAreaAnimationsEnabled"]]],null,4],["open-element","div",[]],["static-attr","class","style_background background_glow"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","style_content"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","style_logo_lockup"],["flush-element"],["text","\\n    "],["open-element","img",[]],["static-attr","class","style_logo_ring"],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["uxSettings","largeAreaAnimationsEnabled"]]],null,3],["text","    "],["open-element","img",[]],["dynamic-attr","class",["concat",["icon_",["unknown",["idName"]]," style_logo"]]],["flush-element"],["close-element"],["text","\\n"],["block",["unless"],[["get",["uxSettings","largeAreaAnimationsEnabled"]]],null,2],["text","    "],["open-element","div",[]],["static-attr","class","style_header"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","style_name"],["flush-element"],["text","\\n        "],["append",["unknown",["name"]],false],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","style_summary description_text"],["flush-element"],["text","\\n        "],["append",["unknown",["description"]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["comment"," keystones "],["text","\\n  "],["yield","default",[["helper",["hash"],null,[["styleKeystones"],[["helper",["component"],["style-keystones"],null]]]]]],["text","\\n"],["block",["if"],[["get",["isInspirationPlaceholder"]]],null,1,0],["close-element"]],"locals":[],"named":[],"yields":["default"],"blocks":[{"statements":[["text","    "],["open-element","p",[]],["static-attr","class","style_summary_description description_text"],["flush-element"],["text","\\n      "],["append",["unknown",["description2"]],false],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["open-element","div",[]],["static-attr","class","locked_style_keystones"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","locked_style_footer"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","img",[]],["static-attr","class","style_vfx"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","video",[]],["dynamic-attr","class",["concat",["style_background style_video ",["unknown",["idName"]]]]],["static-attr","loop",""],["flush-element"],["text","\\n        "],["open-element","source",[]],["static-attr","src","/fe/lol-collections/perks/video/style-picker-column/VFX_hover.webm"],["static-attr","type","video/webm"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","style_background background_lines"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Vnf784iV",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\toggle-button.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\toggle-button.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\toggle-button.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","toggle-button-track"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","toggle-button-fill-container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","toggle-button-fill"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","toggle-button-framed-icon-button-container"],["flush-element"],["text","\\n  "],["append",["helper",["framed-icon-button"],null,[["onButtonClick","clickSfxPath","hoverSfxPath","iconPath","tooltipText"],[["helper",["action"],[["get",[null]],"toggleClicked"],null],["get",["clickSfxPath"]],["get",["hoverSfxPath"]],["get",["iconPath"]],["get",["tooltipText"]]]]],false],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "bw92YEvb",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\progress-bar.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\progress-bar.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\progress-bar.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","border"],["flush-element"],["text","\\n  "],["open-element","lol-perks-gradient-ring",[]],["flush-element"],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","fill"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","progress-glow"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","progress"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","pulsating"],["flush-element"],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","comet-mask"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","comet-mover"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","comet"],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","brightness"],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "jQyK/TGp",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\runes-drawer.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\runes-drawer.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\runes-drawer.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","radial-mask"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","radial"],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","flourish top"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","flourish-line"],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","flourish bottom"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","flourish-line"],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","row"],["flush-element"],["text","\\n  "],["yield","default"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":["default"],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "xOoc0MpC",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\templates\\\\components\\\\construct-minspec.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\styles\\\\components\\\\construct-minspec.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\perks\\\\addon\\\\components\\\\construct-minspec.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","id","environment_fg1"],["static-attr","class","aux"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","id","environment_fg2"],["static-attr","class","aux"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","id","environment_fg3"],["static-attr","class","aux"],["flush-element"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","id","splash_bg3"],["static-attr","class","aux"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","id","splash_bg1"],["static-attr","class","aux"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","id","splash"],["flush-element"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","id","construct_bg3"],["static-attr","class","aux"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","id","construct_bg2"],["static-attr","class","aux"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","id","construct_bg1"],["static-attr","class","aux"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","id","construct"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","id","construct_fg1"],["static-attr","class","aux"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","id","construct_fg2"],["static-attr","class","aux"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","id","construct_fg3"],["static-attr","class","aux"],["flush-element"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","id","keystone_bg1"],["static-attr","class","aux"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","id","keystone"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","id","keystone_fg1"],["static-attr","class","aux"],["flush-element"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","id","keystone_fg2"],["static-attr","class","aux"],["flush-element"],["close-element"],["text","\\n\\n"],["yield","default"]],"locals":[],"named":[],"yields":["default"],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const o = "rune_swap_and_notify_message";
            let i = "0",
                l = "0";
            s.dataBinding.bindTo(s.socket).get("/system/v1/builds").then((e => {
                if (!e) return;
                const t = e.version.split(".");
                i = t[0] || "0", l = t[1] || "0"
            }));
            var a = e => {
                const t = `${i}_${l}` + "_" + o;
                return e.exists(t) ? e.get(t) : e.get("generic_" + o)
            };
            t.default = a
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = function() {
                o.EmberApplicationFactory.setFactoryDefinition({
                    name: "ShowcaseComponent",
                    ComponentFactory: o.ComponentFactory,
                    tra: o.traService,
                    ShowcaseComponent: n(378),
                    SkinPurchaseButtonComponent: n(395),
                    SkinCarouselComponent: n(398),
                    TieredTransformationsComponent: n(401),
                    EqHelper: n(404).eqHelper,
                    ClientConfigService: n(101).default,
                    EventHubService: n(405).default
                }), o.EmberApplicationFactory.setFactoryDefinition({
                    name: "SkinLinePopup",
                    ComponentFactory: o.ComponentFactory,
                    tra: o.traService,
                    SkinLinePopupComponent: n(406)
                }), o.EmberApplicationFactory.setFactoryDefinition({
                    name: "ChromaPopup",
                    ComponentFactory: o.ComponentFactory,
                    tra: o.traService,
                    ChromaPopupComponent: n(409)
                }), o.EmberApplicationFactory.setFactoryDefinition({
                    name: "QuestFormsPopup",
                    ComponentFactory: o.ComponentFactory,
                    tra: o.traService,
                    QuestFormsPopupComponent: i.default,
                    ConcatTraHelper: o.SharedComponents.getApi_traTemplateHelpers().ConcatTra,
                    EqHelper: n(404).eqHelper
                })
            };
            var s, o = n(1),
                i = (s = n(373)) && s.__esModule ? s : {
                    default: s
                }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1),
                o = n(374),
                i = n(375);
            n(376);
            var l = s.Ember.Component.extend({
                classNames: ["quest-forms-flyout"],
                isShow: !1,
                layout: n(377),
                selectedSkinIndex: s.Ember.computed.alias("showcaseComponent.selectedQuestFormIndex"),
                skinTiers: s.Ember.computed.alias("tiers"),
                isTieredSkin: !1,
                didInsertElement() {
                    this._super(...arguments);
                    const e = this.element.querySelectorAll(".quest-form-tier");
                    this._bindHoverEvents(e)
                },
                willDestroyElement() {
                    this._super(...arguments);
                    const e = this.element.querySelectorAll(".quest-form-tier");
                    (0, i.removeHoverEvents)(e)
                },
                _getFormIndexFromClassList(e) {
                    let t = -1;
                    return e.forEach((e => {
                        e.startsWith("form-") && (t = e.substring(e.indexOf("-") + 1))
                    })), t
                },
                _overrideTargetSplashPath(e) {
                    const t = this.get("tiers");
                    this.get("showcaseComponent")._overrideSplashPath(t[e].uncenteredSplashPath), this.get("showcaseComponent")._overrideSkinDescription(t[e].description), this.get("showcaseComponent")._overrideSplashVideoPath(t[e].collectionSplashVideoPath)
                },
                _handleMouseEnter(e) {
                    const t = this._getFormIndexFromClassList(e.classList);
                    this._overrideTargetSplashPath(t), o.SFX.gridHover.play()
                },
                _handleMouseLeave() {
                    const e = this.get("skinTiers")[this.get("showcaseComponent.lastSelectedSkinIndex")] ?? this.get("showcaseComponent.questSkinInfo");
                    this.get("showcaseComponent")._overrideSplashPath(e.uncenteredSplashPath), this.get("showcaseComponent")._overrideSkinDescription(e.description), this.get("showcaseComponent")._overrideSplashVideoPath(e.collectionSplashVideoPath)
                },
                _bindHoverEvents(e) {
                    e && e.forEach((e => {
                        const t = this._handleMouseEnter.bind(this, e),
                            n = this._handleMouseLeave.bind(this);
                        e._listeners = {
                            mouseenter: t,
                            mouseleave: n
                        }, e.addEventListener("mouseenter", t), e.addEventListener("mouseleave", n)
                    }))
                },
                actions: {
                    tierClicked(e) {
                        (this.get("skinTiers")?.[e].owned || this.get("isTieredSkin")) && (o.SFX.gridClick.play(), this.get("showcaseComponent")._setSelectedQuestForm(e), this.get("showcaseComponent")._hideFlyoutModal())
                    }
                }
            });
            t.default = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SFX = void 0;
            const s = n(1).AudioPlugin.getChannel("sfx-ui");

            function o(e) {
                return s.createSound(e, {
                    allowConcurrency: !1
                })
            }
            const i = {
                browseLeftSfx: o("/fe/lol-collections/audio/sfx-collection-browse-left-click.ogg"),
                browseRightSfx: o("/fe/lol-collections/audio/sfx-collection-browse-right-click.ogg"),
                dropdownSelect: o("/fe/lol-collections/audio/sfx-uikit-dropdown-select.ogg"),
                genericClickSm: o("/fe/lol-collections/audio/sfx-uikit-generic-click-small.ogg"),
                gridClick: o("/fe/lol-collections/audio/sfx-uikit-grid-click.ogg"),
                gridHover: o("/fe/lol-collections/audio/sfx-uikit-grid-hover.ogg"),
                showcaseOpenClick: o("/fe/lol-collections/audio/sfx-collection-browse-open-click.ogg"),
                showcaseEnlargeClick: o("/fe/lol-collections/audio/sfx-collection-browse-enlarge-click.ogg"),
                flyoutOpenClick: o("/fe/lol-collections/audio/sfx-uikit-button-flyout-open-click.ogg"),
                flyoutCloseClick: o("/fe/lol-collections/audio/sfx-uikit-button-flyout-close-click.ogg"),
                buttonGoldClick: o("/fe/lol-collections/audio/sfx-uikit-button-gold-click.ogg"),
                buttonGoldHover: o("/fe/lol-collections/audio/sfx-uikit-button-gold-hover.ogg"),
                setCompletionSound: o("/fe/lol-collections/audio/sfx-collection-notif-set-complete.ogg")
            };
            t.SFX = i
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.removeHoverEvents = function(e) {
                if (!e) return;
                for (const t of e)
                    if (t._listeners)
                        for (const [e, n] of Object.entries(t._listeners)) t.removeEventListener(e, n)
            }
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "nNl4PbgM",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\quest-forms-popup\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\quest-forms-popup\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\quest-forms-popup\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",["quest-forms ",["helper",["if"],[["get",["isTieredSkin"]],"tiered"],null]]]],["flush-element"],["text","\\n"],["block",["each"],[["get",["skinTiers"]]],null,4],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","            "],["open-element","span",[]],["static-attr","class","quest-form-tier-lock"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","span",[]],["static-attr","class","quest-form-tier-number"],["flush-element"],["append",["helper",["concat-tra"],["collections_quest_form_stage_",["get",["tier","stage"]]],null],false],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["tier","owned"]]],null,1,0]],"locals":[]},{"statements":[["text","            "],["open-element","span",[]],["static-attr","class","quest-form-tier-emblem"],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["dynamic-attr","class",["concat",["quest-form-tier form-",["get",["index"]]," ",["helper",["if"],[["helper",["eq"],[["get",["selectedSkinIndex"]],["get",["index"]]],null],"selected"],null]," ",["helper",["if"],[["get",["tier","owned"]],"unlocked"],null]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"tierClicked",["get",["index"]]],null],null],["flush-element"],["text","\\n        "],["open-element","span",[]],["static-attr","class","quest-form-tier-name"],["flush-element"],["append",["unknown",["tier","shortName"]],false],["close-element"],["text","\\n"],["block",["if"],[["get",["isTieredSkin"]]],null,3,2],["text","      "],["close-element"],["text","\\n"]],"locals":["tier","index"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var s = n(1),
                o = n(46),
                i = n(379);
            n(380);
            var l = n(374),
                a = n(381),
                r = _(n(382)),
                c = _(n(383)),
                d = _(n(384)),
                m = _(n(385)),
                p = _(n(388)),
                u = _(n(389)),
                h = _(n(392)),
                g = n(390),
                f = n(63);

            function _(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const {
                RunMixin: y
            } = s.EmberAddons.EmberLifeline, {
                computed: b,
                Component: k,
                get: S,
                getWithDefault: v,
                set: E,
                run: x,
                observer: I
            } = s.Ember, w = s.Ember.A, P = s.UIKit.getFlyoutManager(), T = "showcase-view", C = "splash-view", R = [T, C];
            e.exports = k.extend(y, d.default, c.default, m.default, {
                clientConfig: s.Ember.inject.service("client-config"),
                tieredSkinsConfig: s.Ember.computed.alias("clientConfig.tieredSkins"),
                eventHubService: s.Ember.inject.service("event-hub"),
                skinsFromActiveEvents: s.Ember.computed.alias("eventHubService.skinsFromActiveEvents"),
                classNames: ["showcase-view-root-component"],
                currentSkinId: -1,
                rp: 0,
                ip: 0,
                currentlyDisplayedSection: T,
                layout: n(394),
                isPotatoModeEnabled: b.bool("userExperience.data.potatoModeEnabled"),
                selectedQuestFormIndex: null,
                disableSkinsViewer: b.bool("jmxSettings.SkinsViewer.SkinsViewerDisabled"),
                disableAllPurchase: b.bool("jmxSettings.SkinsViewer.DisableAllPurchase"),
                disableGridViewPurchase: b.bool("jmxSettings.SkinsViewer.DisableGridViewPurchase"),
                disableShowcaseViewPurchase: b.bool("jmxSettings.SkinsViewer.DisableShowcaseViewPurchase"),
                disableChromasPurchase: b.bool("jmxSettings.SkinsViewer.DisableChromasPurchase"),
                disableAllTelemetry: b.bool("jmxSettings.SkinsViewer.DisableAllTelemetry"),
                disabledChromas: b.readOnly("jmxSettings.disabledChromas"),
                purchaseEnabled: b.not("purchaseDisabled"),
                purchaseDisabled: b.or("platformSettings.disableAllPurchase", "platformSettings.disableShowcaseViewPurchase"),
                currentSkinName: b("currentSkin.name", "currentSkin.questSkinInfo.name", (function() {
                    const e = S(this, "currentSkin.name"),
                        t = S(this, "currentSkin.questSkinInfo.name");
                    return t || e
                })),
                currentSkinOwned: b.alias("currentSkin.ownership.owned"),
                currentSkinUnowned: b.not("currentSkinOwned"),
                currentSkinSplashPath: b.alias("currentSkin.uncenteredSplashPath"),
                notPurchasable: b.not("isPurchasable"),
                purchaseUnavailable: b.and("currentSkinUnowned", "purchaseEnabled", "notPurchasable"),
                currentSkin: b("currentSkinId", "skinsById", (function() {
                    const e = S(this, "currentSkinId"),
                        t = S(this, "skinsById");
                    return e && t ? t[e] : null
                })),
                _assignSkinsToSkinLine(e, t) {
                    const n = s.Lodash.keyBy(t, "id");
                    for (const t in e)
                        if (e.hasOwnProperty(t)) {
                            const s = e[t];
                            s.skinLines && s.skinLines.forEach((e => {
                                const t = n[e.id];
                                let o = t.skins;
                                void 0 === o && (o = [], t.skins = o), o.find((e => e.id === s.id)) || o.push(s)
                            }))
                        }
                },
                skinlines: b("skinData", "skinlinesInfo", (function() {
                    const e = this.get("skinData"),
                        t = this.get("skinlinesInfo");
                    if (!e || !t) return null;
                    this._assignSkinsToSkinLine(e, t);
                    const n = t.filter((e => e.id !== i.DEFAULT_SKINLINE_ID));
                    return n.sort(((e, t) => e.name.localeCompare(t.name))), n
                })),
                skinLinesById: b("skinlines", (function() {
                    const e = this.get("skinlines");
                    return s.Lodash.keyBy(e, "id")
                })),
                _handleStoreCatalogSuccess(e) {
                    s.logger.trace("Get catalogs from store", e), e = e || [];
                    const t = new u.default(e);
                    E(this, "storeCatalogManager", t), E(this, "allStoreSkins", t.getAllSkins())
                },
                _handleStoreCatalogFail(e) {
                    s.logger.error("Failure to retrieve inventory from store catalog", e);
                    const t = new u.default(null);
                    E(this, "storeCatalogManager", t), E(this, "allStoreSkins", t.getAllSkins())
                },
                platformSettings: b("disableSkinsViewer", "disableAllPurchase", "disableGridViewPurchase", "disableShowcaseViewPurchase", "disableChromasPurchase", "disableAllTelemetry", (function() {
                    return {
                        disableSkinsViewer: S(this, "disableSkinsViewer"),
                        disableAllPurchase: S(this, "disableAllPurchase"),
                        disableGridViewPurchase: S(this, "disableGridViewPurchase"),
                        disableShowcaseViewPurchase: S(this, "disableShowcaseViewPurchase"),
                        disableChromasPurchase: S(this, "disableChromasPurchase"),
                        disableAllTelemetry: S(this, "disableAllTelemetry")
                    }
                })),
                hasChroma: b.bool("currentSkin.chromas.length"),
                hasQuestForms: b.bool("currentSkin.questSkinInfo"),
                lastSelectedSkinIndex: null,
                questSkinInfo: s.Ember.computed.alias("currentSkin.questSkinInfo"),
                questSkinTiers: s.Ember.computed.alias("questSkinInfo.tiers"),
                isTieredSkin: s.Ember.computed.equal("questSkinInfo.productType", "kTieredSkin"),
                isTieredSkinEventActive: s.Ember.computed("currentSkin.id", "skinsFromActiveEvents", (function() {
                    return !!this.get("skinsFromActiveEvents")?.[this.get("currentSkin.id")]
                })),
                isTieredSkinEventPurchased: s.Ember.computed("currentSkin.id", "skinsFromActiveEvents", (function() {
                    return !!this.get("skinsFromActiveEvents")?.[this.get("currentSkin.id")]?.isPassPurchased
                })),
                selectedSkinTier: s.Ember.computed("questSkinTiers", "selectedQuestFormIndex", (function() {
                    return this.get("questSkinTiers")[this.get("selectedQuestFormIndex")]
                })),
                isTieredSkinWithEventOn: s.Ember.computed.and("hasQuestForms", "isTieredSkinEventActive", "isTieredSkin"),
                isTieredSkinWithEventOff: s.Ember.computed("hasQuestForms", "isTieredSkinEventActive", "questSkinInfo.productType", (function() {
                    return this.get("hasQuestForms") && !this.get("isTieredSkinEventActive") && this.get("isTieredSkin")
                })),
                isCDPButtonDisabled: s.Ember.computed("isTieredSkinEventActive", "isTieredSkinEventPurchased", (function() {
                    return !this.get("isTieredSkinEventActive") || this.get("isTieredSkinEventPurchased")
                })),
                setTieredSkinInitialState: s.Ember.observer("currentSkin", (function() {
                    if (this.get("isTieredSkin")) {
                        const e = this.get("questSkinTiers").reduce(((e, t, n) => t.ownership.owned ? n : e), 0),
                            t = this.get("questSkinTiers")[e];
                        this._setSelectedQuestForm(e), this._overrideSplashPath(t.uncenteredSplashPath), this._overrideSkinDescription(t.description), this._overrideSplashVideoPath(t.collectionSplashVideoPath)
                    }
                })),
                isPurchasable: b("currentSkin", (function() {
                    const e = S(this, "currentSkin"),
                        t = S(this, "storeCatalogManager");
                    return !(!e || !t) && (!e.ownership.owned && t.getSkinItemCatalog(e.id).isSinglePurchasable())
                })),
                currentSkinSplashVideoPath: b("currentSkin.splashVideoPath", "currentSkin.skinSplashVideoOverride", "hasQuestForms", (function() {
                    const e = S(this, "currentSkin.collectionSplashVideoPath"),
                        t = S(this, "hasQuestForms"),
                        n = S(this, "currentSkin.skinSplashVideoOverride");
                    return n || (t ? null : e)
                })),
                currentBackgroundPath: b("currentSkinSplashPath", "shouldShowVideoForSkin", "currentSkin.skinSplashOverride", "hasQuestForms", "currentSkinSplashVideoPath", "currentSkin", "currentSkin.questSkinInfo.uncenteredSplashPath", (function() {
                    if (S(this, "shouldShowVideoForSkin")) return S(this, "currentSkinSplashVideoPath");
                    {
                        const e = S(this, "currentSkin.skinSplashOverride");
                        return e || (S(this, "hasQuestForms") ? S(this, "currentSkin.questSkinInfo.uncenteredSplashPath") : S(this, "currentSkinSplashPath"))
                    }
                })),
                currentSkinLine: b("currentSkin", "skinLinesById", (function() {
                    const e = S(this, "currentSkin");
                    if (e && e.skinLines && e.skinLines.length > 0) {
                        const t = S(this, "skinLinesById");
                        return e.skinLines.find((e => t[e.id]))
                    }
                    return null
                })),
                currentChampion: b("currentSkin", "championsById", (function() {
                    const e = S(this, "currentSkin"),
                        t = S(this, "championsById");
                    return e && t ? t[e.championId] : {}
                })),
                currentSkinReleaseDate: b("currentSkin", (function() {
                    const e = S(this, "currentSkin");
                    return e.releaseDate ? S(this, "tra.moment")(e.releaseDate).format(S(this, "tra.showcase_release_date_format")) : null
                })),
                currentSkinAcquireDate: b("currentSkin.ownership.owned", "currentSkin.ownership.rental.purchaseDate", (function() {
                    const e = S(this, "currentSkin");
                    if (e && e.ownership.owned) {
                        const e = S(this, "currentSkin.ownership.rental.purchaseDate");
                        return null !== e ? S(this, "tra.moment")(new Date(e)).format(S(this, "tra.showcase_acquire_date_format")) : null
                    }
                    return null
                })),
                currentSkinDescription: b("currentSkin.description", "currentSkin.questSkinInfo.collectionDescription", "currentSkin.skinDescriptionOverride", (function() {
                    const e = S(this, "currentSkin.questSkinInfo.collectionDescription"),
                        t = S(this, "currentSkin.description"),
                        n = S(this, "currentSkin.skinDescriptionOverride");
                    return n || (e || t)
                })),
                displayLegacy: b.and("currentSkin.isLegacy", "showLegacyInfo"),
                displayDescriptionBackground: b.or("hasDescription", "hasFeaturesText"),
                displayLimited: b("currentSkin", (function() {
                    return !1
                })),
                hasFeaturesText: b("currentSkin.featuresText", (function() {
                    const e = S(this, "currentSkin.featuresText");
                    return !s.Lodash.isNil(e) && s.Lodash.isString(e) && e.length > 0
                })),
                hasDescription: b("currentSkin.description", "currentSkin.questSkinInfo.collectionDescription", (function() {
                    const e = S(this, "currentSkin.description"),
                        t = S(this, "currentSkin.questSkinInfo.collectionDescription"),
                        n = this._hasDescription(e),
                        s = this._hasDescription(t);
                    return n || s
                })),
                usingSplitLayout: b.and("hasFeaturesText", "hasDescription"),
                shouldShowVideoForSkin: b("userExperience.data.potatoModeEnabled", "currentSkinSplashVideoPath", (function() {
                    const e = S(this, "userExperience.data.potatoModeEnabled");
                    return !e && ((void 0 !== e || !S(this, "defaultPotatoModeEnabled")) && !!S(this, "currentSkinSplashVideoPath"))
                })),
                focusChanged: I("hasFocus", (function() {
                    S(this, "hasFocus") && this._focusOnHiddenInput()
                })),
                _hasDescription: e => !s.Lodash.isNil(e) && s.Lodash.isString(e) && e.length > 0,
                _updateChampionsData(e) {
                    this._isDestroyed || this._isDestroying || !e || this.set("champions", e)
                },
                _initSettingsManager() {
                    const e = S(this, "settingsManager");
                    if (!e) throw new Error("Cannot retrieve settingsManager in root component");
                    this._registeredSettingsReadyCallback = this._settingsReadyCallback.bind(this), e.addReadyStateListener(this._registeredSettingsReadyCallback)
                },
                _settingsReadyCallback() {
                    E(this, "settingsReady", !0)
                },
                _getLootItems() {
                    (0, s.dataBinding)("/lol-loot", s.socket).get("/v1/loot-items").then(this._handleLootItemsSuccess.bind(this)).catch(this._handleLootItemsFail.bind(this))
                },
                _handleLootItemsSuccess(e) {
                    this._createLootItemManager(e)
                },
                _handleLootItemsFail(e) {
                    s.logger.error("Failed to get loot items: ", e), this._createLootItemManager([])
                },
                _createLootItemManager(e) {
                    e = e || [];
                    const t = new h.default(e);
                    E(this, "lootItemManager", t)
                },
                _handleDataReady(e) {
                    S(this, "isLoading") && E(this, "isLoading", !1)
                },
                init() {
                    this._super(...arguments);
                    const e = s.dataBinding.bindTo(s.socket),
                        t = new p.default(e);
                    t.loadSettings(), E(this, "settingsManager", t), this._initSettingsManager(), E(this, "purchasedSkins", w());
                    const n = s.Ember.Object.create({
                        openPawModal: this._openPawModal.bind(this)
                    });
                    this.set("openPawModalCallback", n), E(this, "jmxSettings", s.Ember.Object.create()), this._getLootItems(), (0, s.dataBinding)("/lol-login", s.socket).observe("/v1/session", this, (e => {
                        !e || this.isDestroyed || this.isDestroying || ((0, s.dataBinding)("/lol-login", s.socket).unobserve("v1/session", this), (0, s.dataBinding)("/lol-collections", s.socket).observe(`/v1/inventories/${e.puuid}/champion-mastery`, this, (e => {
                            this.isDestroyed || this.isDestroying || !e || E(this, "playerChampionMastery", e)
                        })))
                    })), (0, s.dataBinding)("/lol-store", s.socket).get(`/v1/catalog?inventoryType=["${g.STORE_INVENTORY_TYPE.CHAMPION_SKIN}","${g.STORE_INVENTORY_TYPE.BUNDLES}"]`).then(this._handleStoreCatalogSuccess.bind(this)).catch(this._handleStoreCatalogFail.bind(this)), (0, s.dataBinding)("/lol-game-data", s.socket).observe("/assets/v1/champion-summary.json", this, this._updateChampionsData), (0, s.dataBinding)("/lol-platform-config", s.socket).observe("/v1/namespaces/SkinsViewer", this, (e => {
                        this.isDestroying || this.isDestroyed || E(this, "jmxSettings.SkinsViewer", s.Ember.Object.create(e))
                    })), (0, s.dataBinding)("/lol-platform-config", s.socket).observe("/v1/namespaces/DisabledChampionSkins/DisabledChromas", this, (e => {
                        this.isDestroying || this.isDestroyed || E(this, "jmxSettings.disabledChromas", e)
                    })), E(this, "registeredFlyoutTargets", new Set), E(this, "acceptKeydownEvent", !0), E(this, "enableKeydownEvent", this._enableKeydownEvent.bind(this)), E(this, "keydownEventHandler", this._keydownEventHandler.bind(this)), E(this, "acceptMouseWheelEvent", !0), E(this, "enableMouseWheelEvent", this._enableMouseWheelEvent.bind(this)), E(this, "mouseWheelEventHandler", this._mouseWheelEventHandler.bind(this)), E(this, "mouseMoveEventHandler", this._mouseMoveEventHandler.bind(this)), E(this, "flyoutComponents", new Map), E(this, "tracker", new O)
                },
                didInsertElement() {
                    this._cacheHTMLElements(), this._bindNavigationInputs(this.element), this._bindMouseWheelEventListenerForDescription(this.element), S(this, "hasFocus") && this._focusOnHiddenInput()
                },
                willDestroyElement() {
                    (0, s.dataBinding)("/lol-game-data", s.socket).unobserve(this), (0, s.dataBinding)("/lol-platform-config", s.socket).unobserve(this), (0, s.dataBinding)("/lol-login", s.socket).unobserve(this), (0, s.dataBinding)("/lol-collections", s.socket).unobserve(this);
                    const e = S(this, "hiddenInput");
                    E(this, "hiddenInput", null), e.removeEventListener("keydown", S(this, "keydownEventHandler")), E(this, "keydownEventHandler", null), this.element.removeEventListener("mousewheel", S(this, "mouseWheelEventHandler")), E(this, "mouseWheelEventHandler", null), this._clearMouseMoveEventListener(), E(this, "mouseMoveEventHandler", null), E(this, "sectionController", null), this._unassignAllFlyout();
                    let t = S(this, "chromaFlyoutComponentData");
                    E(this, "chromaFlyoutComponentData", null), t && (t.set("skin", null), t.set("openPawModal", null), t.set("storeCatalogManager", null), t = null);
                    const n = S(this, "skinLineFlyoutComponentData");
                    E(this, "skinLineFlyoutComponentData", null), n && n.set("showcaseComponent", null);
                    const o = S(this, "flyoutComponents");
                    E(this, "flyoutComponents", null), o.forEach((function(e) {
                        e?.componentPromise && e.componentPromise.then((function(e) {
                            e.app.destroy()
                        }))
                    })), o.clear(), this._super(...arguments)
                },
                actions: {
                    moveToLeft(e = -1, t = !0) {
                        S(this, "currentlyDisplayedSection") === T && (this._switchSkin(e), t && l.SFX.browseLeftSfx.play())
                    },
                    moveToRight(e = 1, t = !0) {
                        S(this, "currentlyDisplayedSection") === T && (this._switchSkin(e), t && l.SFX.browseRightSfx.play())
                    },
                    toggleQuestFormsFlyout() {
                        P.isActive() ? this._hideFlyoutModal() : (this._showQuestFormsFlyout(), r.default.addUserBehavior(a.USER_ACTIVITIES.CLICK_ON_QUEST_FORMS_FLYOUT))
                    },
                    toggleSkinLineFlyout() {
                        P.isActive() ? this._hideFlyoutModal() : (this._showSkinLineFlyout(), r.default.addUserBehavior(a.USER_ACTIVITIES.CLICK_ON_THEME_FLYOUT))
                    },
                    toggleChromaFlyout() {
                        P.isActive() ? this._hideFlyoutModal() : (this._showChromaFlyout(), r.default.addUserBehavior(a.USER_ACTIVITIES.CLICK_ON_CHROMA_FLYOUT))
                    },
                    focusOnHiddenInput() {
                        this._focusOnHiddenInput()
                    },
                    toggleUi() {
                        this._switchSection(C), this._registerMouseMoveEventListener(), l.SFX.showcaseEnlargeClick.play(), r.default.addUserBehavior(a.USER_ACTIVITIES.SHOW_SPLASH_VIEW)
                    },
                    openPawModal(e, t) {
                        S(this, "openPawModalCallback.openPawModal")(e, t)
                    }
                },
                _showQuestFormsFlyout() {
                    const e = "QuestFormsPopup",
                        t = S(this, "currentSkin.questSkinInfo.tiers"),
                        n = ".quest-forms",
                        o = this.element.querySelector(n);
                    let i = S(this, "flyoutComponents").get(e);
                    if (i) {
                        const e = S(this, "questFormsFlyoutComponentData");
                        e.set("tiers", t), e.set("isTieredSkin", this.get("isTieredSkin"))
                    } else {
                        this.set("lastSelectedSkinIndex", this.get("selectedQuestFormIndex"));
                        const n = s.Ember.Object.create({
                            showcaseComponent: this,
                            tiers: t,
                            isTieredSkin: this.get("isTieredSkin")
                        });
                        E(this, "questFormsFlyoutComponentData", n), i = this._createFlyoutComponent(e, n)
                    }
                    const a = s.ComponentFactory.getDOMNode(i);
                    this._assignFlyout(o, a), P.sendEvent(o, "show"), l.SFX.flyoutOpenClick.play(), E(this, "flyoutTargetClass", n)
                },
                _showSkinLineFlyout() {
                    const e = "SkinLinePopup",
                        t = S(this, "skinLinesById")[S(this, "currentSkinLine.id")],
                        n = ".skinline",
                        o = this.element.querySelector(n);
                    let i = S(this, "flyoutComponents").get(e);
                    if (i) {
                        S(this, "skinLineFlyoutComponentData").set("skinLine", t)
                    } else {
                        const n = s.Ember.Object.create({
                            showcaseComponent: this,
                            skinLine: t
                        });
                        E(this, "skinLineFlyoutComponentData", n), i = this._createFlyoutComponent(e, n)
                    }
                    const a = s.ComponentFactory.getDOMNode(i);
                    this._assignFlyout(o, a), P.sendEvent(o, "show"), l.SFX.flyoutOpenClick.play(), E(this, "flyoutTargetClass", n)
                },
                _updateSkinWithSkinLine(e, t) {
                    E(this, "currentSkinId", e), E(this, "skins", t)
                },
                _overrideSkinDescription(e) {
                    E(this, "currentSkin.skinDescriptionOverride", e)
                },
                _overrideSplashPath(e) {
                    E(this, "currentSkin.skinSplashOverride", e)
                },
                _overrideSplashVideoPath(e) {
                    E(this, "currentSkin.skinSplashVideoOverride", e)
                },
                _setSelectedQuestForm(e) {
                    E(this, "selectedQuestFormIndex", e), E(this, "lastSelectedSkinIndex", e)
                },
                _showChromaFlyout() {
                    const e = "ChromaPopup",
                        t = ".chroma",
                        n = this.element.querySelector(t),
                        o = this.get("currentSkin"),
                        i = this.get("storeCatalogManager"),
                        a = S(this, "platformSettings");
                    let r = S(this, "flyoutComponents").get(e);
                    if (r) {
                        S(this, "chromaFlyoutComponentData").set("skin", o)
                    } else {
                        const t = s.Ember.Object.create({
                            skin: o,
                            storeCatalogManager: i,
                            platformSettings: a,
                            openPawModal: S(this, "openPawModalCallback")
                        });
                        E(this, "chromaFlyoutComponentData", t), r = this._createFlyoutComponent(e, t)
                    }
                    this._assignFlyout(n, s.ComponentFactory.getDOMNode(r)), this.scheduleTask("render", (() => {
                        P.sendEvent(n, "show"), l.SFX.flyoutOpenClick.play(), E(this, "flyoutTargetClass", t)
                    }))
                },
                _createTemplatePaw(e) {
                    const t = {
                        templateType: f.PAW.TEMPLATE_TYPES.LARGE_TWO_COLUMN_LANDSCAPE
                    };
                    return s.pawApi.createPawTemplateModalAsync(e.offerId, t, i.SKINS_VIEWER_PAW_SOURCE).then((() => {
                        s.pawApi.getBaseSkinLineData(e.offerId).then((e => {
                            s.pawApi.populatePawTemplateModal(e)
                        }))
                    }))
                },
                _openPawModal(e, t) {
                    const {
                        item: n,
                        inventoryType: l,
                        modalType: a,
                        ownerElement: r
                    } = e;
                    t = t || S(this, "telemetryEventSource");
                    let c = !1;
                    c = n.tags && n.tags.includes(o.SKIN_TAGS.QUEST_SKIN) ? this._createTemplatePaw(n) : s.pawApi.createPAWModal({
                        itemId: n.itemId || n.id,
                        inventoryType: l
                    }, i.SKINS_VIEWER_PAW_SOURCE, a, r), c && E(this, "pawModalOpening", !0)
                },
                _cacheHTMLElements() {
                    const e = this.element.querySelector(".showcase-hidden-input");
                    E(this, "hiddenInput", e);
                    const t = this.element.querySelector(".section-controller");
                    E(this, "sectionController", t)
                },
                _updateCurrentSkinData(e) {
                    E(this, "currentSkinId", e.id);
                    const t = S(this, "champions").find((t => t.id === e.championId));
                    if (t && t.roles ? E(this, "currentChampionRole", t.roles[0]) : E(this, "currentChampionRole", null), e.ownership.owned) {
                        const t = S(this, "tra.moment")(new Date(e.ownership.rental.purchaseDate)).format(S(this, "tra.showcase_unlock_date_format"));
                        E(this, "currentSkinUnlockDate", t)
                    } else E(this, "currentSkinUnlockDate", null)
                },
                _resetOverrideData() {
                    if (E(this, "currentSkin.skinSplashOverride", null), E(this, "currentSkin.skinSplashVideoOverride", null), E(this, "currentSkin.skinDescriptionOverride", null), E(this, "selectedQuestFormIndex", null), S(this, "hasQuestForms")) {
                        const e = S(this, "currentSkin.questSkinInfo.tiers");
                        for (let t = 0; t < e.length; ++t) E(e[t], "selected", !1)
                    }
                },
                _switchSkin(e) {
                    if (!this._isSkinSwitchStillRateLimited()) return;
                    const t = this._getSkinByOffset(e);
                    t && (P.isActive() && this._hideFlyoutModal(), this._resetOverrideData(), this._updateLastSwitchSkinTime(), this._updateCurrentSkinData(t))
                },
                _isSkinSwitchStillRateLimited() {
                    const e = S(this, "lastSkinSwitchTime");
                    return !e || !Number.isInteger(e) || Date.now() - e >= 125
                },
                _updateLastSwitchSkinTime() {
                    E(this, "lastSkinSwitchTime", Date.now())
                },
                _getSkinByOffset(e) {
                    const t = S(this, "skins");
                    if (!t || 0 === t.length) return null;
                    const n = this._getCurrentShowingSkinIndex();
                    if (-1 === n) return null;
                    let s = n + e;
                    return s = (s + t.length) % t.length, t[s]
                },
                _getCurrentShowingSkinIndex() {
                    const e = S(this, "currentSkinId"),
                        t = S(this, "skins");
                    let n = -1;
                    return e && t && (n = t.findIndex((t => t.id === e))), n
                },
                _switchSection(e) {
                    if (t = e, !R.find((e => e === t))) return;
                    var t;
                    const n = S(this, "sectionController");
                    n && (n.setAttribute("selected-item", e), E(this, "currentlyDisplayedSection", e))
                },
                _registerMouseMoveEventListener() {
                    const e = S(this, "mouseMoveEventHandler");
                    this.runTask((() => this.element.addEventListener("mousemove", e)), 500)
                },
                _mouseMoveEventHandler() {
                    this._switchSection(T), this._clearMouseMoveEventListener()
                },
                _clearMouseMoveEventListener() {
                    this.element.removeEventListener("mousemove", S(this, "mouseMoveEventHandler"))
                },
                _registerKeydownEventsListener() {
                    const e = S(this, "hiddenInput"),
                        t = S(this, "keydownEventHandler");
                    e.addEventListener("keydown", t)
                },
                _keydownEventHandler(e) {
                    const t = S(this, "acceptKeydownEvent");
                    e && t ? (E(this, "acceptKeydownEvent", !1), "ArrowLeft" === e.code ? (this.send("moveToLeft"), r.default.addUserBehavior(a.USER_ACTIVITIES.SWITCH_SPLASH_BY_KEY_BOARD, "Left")) : "ArrowRight" === e.code ? (this.send("moveToRight"), r.default.addUserBehavior(a.USER_ACTIVITIES.SWITCH_SPLASH_BY_KEY_BOARD, "Right")) : "Escape" === e.code && (this.element.dispatchEvent(new Event("close-modal", {
                        bubbles: !0
                    })), r.default.addUserBehavior(a.USER_ACTIVITIES.SWITCH_SPLASH_BY_KEY_BOARD, "Escape")), requestAnimationFrame(S(this, "enableKeydownEvent"))) : s.logger.trace("wait for keydown enabled")
                },
                _registerMousewheelEventsListener(e) {
                    const t = S(this, "mouseWheelEventHandler");
                    e.addEventListener("mousewheel", t)
                },
                _enableMouseWheelEvent() {
                    E(this, "acceptMouseWheelEvent", !0)
                },
                _enableKeydownEvent() {
                    E(this, "acceptKeydownEvent", !0)
                },
                _mouseWheelEventHandler(e) {
                    const t = S(this, "acceptMouseWheelEvent");
                    e && t ? (E(this, "acceptMouseWheelEvent", !1), e.wheelDelta < 0 ? (this.send("moveToLeft"), r.default.addUserBehavior(a.USER_ACTIVITIES.SWITCH_SPLASH_BY_MOUSE, "Left")) : e.wheelDelta > 0 && (this.send("moveToRight"), r.default.addUserBehavior(a.USER_ACTIVITIES.SWITCH_SPLASH_BY_MOUSE, "Right")), requestAnimationFrame(S(this, "enableMouseWheelEvent"))) : s.logger.trace("wait for mouse wheel enabled")
                },
                _bindNavigationInputs(e) {
                    this._registerKeydownEventsListener(), this._registerMousewheelEventsListener(e)
                },
                _focusOnHiddenInput() {
                    const e = S(this, "hiddenInput");
                    e && e.focus()
                },
                _unassignAllFlyout() {
                    S(this, "registeredFlyoutTargets").forEach((e => {
                        P.sendEvent(e, "hide"), P.unassignFlyout(e)
                    })), S(this, "registeredFlyoutTargets").clear(), E(this, "registeredFlyoutTargets", null)
                },
                _createFlyoutComponent(e, t) {
                    const n = s.ComponentFactory.create(e, t);
                    return S(this, "flyoutComponents").set(e, n), n
                },
                _assignFlyout(e, t) {
                    P.assignFlyout(e, t, {}, {
                        showEvent: "show",
                        hideEvent: "hide",
                        targetAnchor: {
                            x: "center",
                            y: "top"
                        },
                        tooltipAnchor: {
                            x: "center",
                            y: "bottom"
                        },
                        offset: {
                            x: 0,
                            y: -20
                        },
                        backdropCutout: null,
                        orientation: "top",
                        animated: !0,
                        ComponentFactory: s.ComponentFactory
                    }), S(this, "registeredFlyoutTargets").add(e)
                },
                _hideFlyoutModal() {
                    const e = S(this, "flyoutTargetClass");
                    if (e) {
                        const t = this.element.querySelector(e);
                        P.sendEvent(t, "hide"), P.unassignFlyout(t), l.SFX.flyoutCloseClick.play(), E(this, "flyoutTargetClass", null)
                    }
                },
                _bindMouseWheelEventListenerForDescription(e) {
                    e.querySelector(".scroll-text").addEventListener("mousewheel", (function(e) {
                        e.stopPropagation()
                    }))
                }
            });
            class O {}
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SKIN_RARITIES = t.SKIN_BORDER_RARITIES = t.SKINS_VIEWER_PAW_SOURCE = t.GEM_BASE_PATH = t.DEFAULT_SKINLINE_ID = t.CN_SKIN_RARITIES = t.CN_RARITY_TRA_KEY_PREFIX = void 0, t.generateCNSkinRarityObject = u, t.generateSkinRarityObject = a, t.getCNGemIcon = d, t.getCNRarityTooltipTraKey = p, t.getCNRarityTraKey = m, t.getGemIcon = o, t.getRarityTooltipTraKey = l, t.getRarityTraKey = i;
            t.DEFAULT_SKINLINE_ID = 0;
            t.SKINS_VIEWER_PAW_SOURCE = "skinsViewer";
            const n = {
                ULTIMATE: "ultimate",
                MYTHIC: "mythic",
                LEGENDARY: "legendary",
                EPIC: "epic",
                OTHER: "other"
            };
            t.SKIN_BORDER_RARITIES = n;
            const s = "/lol-game-data/assets/v1/rarity-gem-icons";

            function o(e) {
                return `${s}/${e}.png`
            }

            function i(e) {
                return `skin_grid_rarity_${e}`
            }

            function l(e) {
                return e
            }

            function a(e, t, s = !0) {
                return {
                    order: e,
                    gemIcon: s ? o(t) : null,
                    borderRarity: n[t.toUpperCase()],
                    traKey: i(t),
                    tooltipType: s ? t : null
                }
            }
            t.GEM_BASE_PATH = s;
            const r = {
                kNoRarity: a(0, "other", !1),
                kEpic: a(1, "epic"),
                kLegendary: a(2, "legendary"),
                kMythic: a(3, "mythic"),
                kUltimate: a(4, "ultimate")
            };
            t.SKIN_RARITIES = r;
            const c = "skin_grid_cn_rarity_";

            function d(e) {
                return `${s}/cn-gem-${e}.png`
            }

            function m(e) {
                return `${c}${e}`
            }

            function p(e) {
                return `cn_rarity_${e}`
            }

            function u(e, t, s = !0) {
                return {
                    order: e,
                    gemIcon: s ? d(e) : null,
                    borderRarity: n[t.toUpperCase()],
                    traKey: m(e),
                    tooltipType: s ? p(e) : null
                }
            }
            t.CN_RARITY_TRA_KEY_PREFIX = c;
            const h = {
                0: u(0, "other", !1),
                1: u(1, "epic"),
                2: u(2, "epic"),
                3: u(3, "epic"),
                4: u(4, "legendary"),
                5: u(5, "legendary"),
                7: u(7, "mythic"),
                8: u(8, "mythic"),
                9: u(9, "ultimate")
            };
            t.CN_SKIN_RARITIES = h
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t) => {
            "use strict";

            function n(e) {
                const t = new Set;
                for (const n in e) t.add(e[n]);
                return t
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.USER_ACTIVITIES = t.TELEMETRY_EVENT_SOURCE_SET = t.TELEMETRY_EVENT_SOURCE = t.TELEMETRY_EVENT_NAME = t.TELEMETRY_EVENT_ID_SET = t.TELEMETRY_EVENT_ID = void 0, t.getAllValues = n;
            t.TELEMETRY_EVENT_NAME = "skins_collection__skins_collection_event";
            const s = {
                SKINS_VIEWER_ENTER: "skins_viewer_enter",
                SKINS_VIEWER_EXIT: "skins_viewer_exit",
                PURCHASE_MODAL_SHOW: "purchase_modal_show",
                PURCHASE_SUCCESS: "purchase_success",
                GRID_FIRST_SHOW: "grid_first_show",
                GRID_GROUP_BY_MY_COLLECTION: "grid_group_by_my_collection",
                GRID_GROUP_BY_ALL: "group_by_all",
                GRID_GROUP_BY_CHAMPION: "grid_group_by_champion",
                GRID_GROUP_BY_RARITY: "grid_group_by_rarity",
                GRID_GROUP_BY_THEME: "grid_group_by_theme",
                GRID_SORT_ALPHABETICAL: "grid_sort_alphabetical",
                GRID_SHOW_UNOWNED: "grid_show_unowned",
                GRID_SHOW_LEGACY: "grid_show_legacy",
                GRID_CLICK_RARITY_ICON: "grid_click_rarity_icon",
                SPLASH_VIEW_DISPLAY: "splash_view_display",
                SPLASH_VIEW_CLOSE: "splash_view_close",
                SPLASH_VIEW_KEYBOARD_CLOSE: "splash_view_keyboard_close",
                SPLASH_VIEW_KEYBOARD_NAVIGATION: "splash_view_keyboard_navigation",
                SHOWCASE_VIEW_DISPLAY: "showcase_view_display",
                SHOWCASE_VIEW_KEYBOARD_CLOSE: "showcase_view_keyboard_close",
                SHOWCASE_VIEW_KEYBOARD_NAVIGATION: "showcase_view_keyboard_navigation"
            };
            t.TELEMETRY_EVENT_ID = s;
            const o = n(s);
            t.TELEMETRY_EVENT_ID_SET = o;
            const i = {
                SKIN_COLLECTION_VIEW: "skin_collection_view",
                SKIN_SHOWCASE_VIEW: "skin_showcase_view",
                SKIN_CHROMA_FLYOUT_VIEW: "skin_chroma_flyout_view",
                SKIN_THEME_FLYOUT_VIEW: "skin_theme_flyout_view"
            };
            t.TELEMETRY_EVENT_SOURCE = i;
            const l = n(i);
            t.TELEMETRY_EVENT_SOURCE_SET = l;
            t.USER_ACTIVITIES = {
                CLICK_ON_PLAYER_NOTIFICATION: "clickOnPlayerNotification",
                SWITCH_GROUPING: "switchGrouping",
                SWITCH_SORTING: "switchSorting",
                TOGGLE_UNOWNED: "toggleUnowned",
                CLICK_ON_RARITY_ICON: "clickOnRarityIcon",
                INPUT_NAME_FILTER: "inputNameFilter",
                SWITCH_SPLASH_BY_KEY_BOARD: "switchSplashByKeyBoard",
                SWITCH_SPLASH_BY_MOUSE: "switchSplashByMouse",
                SWITCH_SPLASH_BY_BUTTON: "switchSplashByButton",
                SWITCH_SPLASH_BY_CLICK_CAROUSEL: "switchSplashByClickingCarousel",
                CLICK_ON_CHROMA_FLYOUT: "clickOnChromaFlyout",
                CLICK_ON_THEME_FLYOUT: "clickOnThemeFlyout",
                CLICK_ON_SKIN_IN_THEME_FLYOUT: "clickOnSkinInThemeFlyout",
                CLICK_ON_QUEST_FORMS_FLYOUT: "clickOnQuestFormsFlyout",
                SHOW_SPLASH_VIEW: "showSplashView"
            }
        }, (e, t, n) => {
            "use strict";
            var s = n(1),
                o = n(381);
            const i = `/v1/events/${o.TELEMETRY_EVENT_NAME}`;
            const l = new class {
                constructor() {
                    this._dataBinding = (0, s.dataBinding)("/telemetry", (0, s.getProvider)().getSocket()), this._sessionStartTime = 0, this._userActivities = {}
                }
                startTelemetrySession() {
                    this._sessionStartTime = Date.now(), this._userActivities = {}, this.sendEvent(o.TELEMETRY_EVENT_ID.SKINS_VIEWER_ENTER, o.TELEMETRY_EVENT_SOURCE.SKIN_COLLECTION_VIEW)
                }
                endTelemetrySession() {
                    this.sendEvent(o.TELEMETRY_EVENT_ID.SKINS_VIEWER_EXIT, o.TELEMETRY_EVENT_SOURCE.SKIN_COLLECTION_VIEW, this._userActivities), this._sessionStartTime = 0, this._userActivities = {}
                }
                sendEvent(e, t, n) {
                    if (!o.TELEMETRY_EVENT_ID_SET.has(e)) return s.logger.warning(`Invalid telemetry event id ${e}`), Promise.reject(`Invalid telemetry event id ${e}`);
                    if (!o.TELEMETRY_EVENT_SOURCE_SET.has(t)) return s.logger.warning(`Invalid telemetry event source ${t}`), Promise.reject(`Invalid telemetry event source ${t}`);
                    const l = Object.assign({
                        id: e,
                        source: t,
                        sessionId: this._sessionStartTime,
                        sessionTimestamp: this._getSessionTimestamp()
                    }, n);
                    this._dataBinding.post(i, l)
                }
                addUserBehavior(e, t) {
                    this._userActivities.hasOwnProperty(e) || (this._userActivities[e] = {
                        count: 0
                    });
                    const n = this._userActivities[e];
                    n.count++, null != t && (n.hasOwnProperty(t) ? n[t]++ : n[t] = 1)
                }
                _getSessionTimestamp() {
                    return this._sessionStartTime ? Date.now() - this._sessionStartTime : 0
                }
            };
            e.exports = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            var o = (0, s.emberDataBinding)({
                Ember: s.Ember,
                websocket: (0, s.getProvider)().getSocket(),
                basePaths: {
                    settings: "/lol-settings"
                },
                boundProperties: {
                    userExperience: {
                        api: "settings",
                        path: "/v2/local/lol-user-experience"
                    }
                }
            });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            var o = (0, s.emberDataBinding)({
                Ember: s.Ember,
                websocket: (0, s.getProvider)().getSocket(),
                basePaths: {
                    login: "/lol-login",
                    collections: "/lol-collections",
                    gameData: "/lol-game-data",
                    riotclient: "/riotclient",
                    lolInventory: "/lol-inventory"
                },
                boundProperties: {
                    locale: {
                        api: "riotclient",
                        path: "/region-locale"
                    },
                    session: {
                        api: "login",
                        path: "/v1/session"
                    },
                    playerChampionMastery: {
                        api: "collections",
                        path: "v1/inventories/{{session.puuid}}/champion-mastery"
                    },
                    skinInventoryData: {
                        api: "lolInventory",
                        path: "/v2/inventory/CHAMPION_SKIN"
                    },
                    skinlinesInfo: {
                        api: "gameData",
                        path: "/assets/v1/skinlines.json"
                    },
                    skinsGameData: {
                        api: "gameData",
                        path: "/assets/v1/skins.json"
                    },
                    skinUniverseInfo: {
                        api: "gameData",
                        path: "/assets/v1/universes.json"
                    },
                    walletIp: {
                        api: "lolInventory",
                        path: "/v1/wallet/lol_blue_essence"
                    },
                    walletRp: {
                        api: "lolInventory",
                        path: "/v1/wallet/RP"
                    }
                }
            });
            t.default = o
        }, (e, t, n) => {
            "use strict";
            var s = n(1),
                o = n(386),
                i = n(387);
            const {
                Mixin: l,
                computed: a,
                get: r,
                isArray: c,
                run: d
            } = s.Ember, m = l.create({
                skinOwnershipById: a("skinInventoryData.@each.ownershipType", (function() {
                    const e = r(this, "skinInventoryData"),
                        t = r(this, "tra.moment");
                    return e ? e.filter((e => e.ownershipType === i.INVENTORY_OWNERSHIP_TYPE.OWNED)).reduce(((e, n) => {
                        const s = n.itemId;
                        if (e.has(s)) return e;
                        const o = n.purchaseDate ? t(n.purchaseDate).valueOf() : null,
                            i = Boolean(n.payload && n.payload.isVintage);
                        return e.set(s, {
                            skinId: s,
                            purchaseDate: o,
                            hasVintageBorder: i
                        }), e
                    }), new Map) : null
                })),
                championsById: a("champions", "playerChampionMastery", (function() {
                    const e = r(this, "champions"),
                        t = r(this, "playerChampionMastery");
                    if (c(e) && c(t)) {
                        const n = s.Lodash.keyBy(t, "championId");
                        return e.reduce(((e, t) => {
                            const o = s.Lodash.assign({}, t, n[t.id]);
                            return o.championPoints || (o.championPoints = 0), delete o.championId, e[o.id] = o, e
                        }), {})
                    }
                    return {}
                })),
                skinData: a("skinsGameData", "championsById", "allStoreSkins", "settingsReady", "lootItemManager", "locale", "disabledChromas", "skinOwnershipById", "purchasedSkins", (function() {
                    const e = r(this, "championsById"),
                        t = r(this, "skinsGameData"),
                        n = r(this, "purchasedSkins"),
                        i = r(this, "allStoreSkins"),
                        l = r(this, "settingsReady"),
                        a = r(this, "lootItemManager"),
                        c = r(this, "locale"),
                        m = r(this, "disabledChromas"),
                        p = r(this, "skinOwnershipById");
                    let u = [];
                    const h = {
                        skinsGameData: t,
                        championsById: e,
                        allStoreSkins: i,
                        settingsReady: l,
                        lootItemManager: a,
                        locale: c,
                        skinOwnershipById: p
                    };
                    if (this._dataInitReady(h)) {
                        const l = r(this, "isTencentRegion"),
                            c = i.reduce(((e, t) => e.set(t.itemId, t)), new Map);
                        u = s.Lodash.toPairs(t).map((e => e[1])).map((0, o.addSkinStaticData)({
                            championsById: e,
                            purchasedSkins: n,
                            allStoreSkinMap: c,
                            lootItemManager: a,
                            isTencentRegion: l,
                            disabledChromas: m,
                            skinOwnershipById: p
                        })), d.scheduleOnce("afterRender", this, this._handleDataReady, u)
                    }
                    return u
                })),
                skinsById: a("skinData", (function() {
                    const e = r(this, "skinData");
                    if (c(e)) {
                        return s.Lodash.keyBy(e, "id")
                    }
                    return {}
                })),
                skinsWithoutBaseSkin: a("skinData", (function() {
                    const e = r(this, "skinData");
                    let t = [];
                    return e && (t = e.filter((e => !e.isBase))), t
                })),
                _dataInitReady: e => [e.skinsGameData, e.championsById, e.allStoreSkins, e.lootItemManager, e.locale, e.skinOwnershipById].every((e => e)) && e.settingsReady
            });
            e.exports = m
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addStoreData = t.addSkinlineData = t.addSkinStaticData = t.addPurchaseData = t.addMasteryData = t.addLootableProperty = void 0, t.getSkinRarity = u;
            var s = n(1),
                o = n(379);
            const {
                set: i,
                get: l
            } = s.Ember, a = function(e) {
                e.skinLineId = o.DEFAULT_SKINLINE_ID, e.skinLines && (e.skinLineId = e.skinLines[0].id)
            };
            t.addSkinlineData = a;
            const r = function(e, t) {
                if (s.Lodash.keyBy(t, "id")[e.id] && l(e, "ownership") && !l(e, "ownership.owned") && (i(e, "ownership.owned", !0), i(e, "ownership.rental.purchaseDate", Date.now())), l(e, "ownership.rental"))
                    if (e.ownership.rental.purchaseDate > 0) {
                        const t = new Date(e.ownership.rental.purchaseDate);
                        e.ownership.rental.purchaseYear = t.getFullYear()
                    } else e.ownership.rental.purchaseYear = 0
            };
            t.addPurchaseData = r;
            const c = function(e, t) {
                const n = e.id;
                if (t.has(n)) {
                    const s = t.get(n),
                        o = new Date(s.releaseDate),
                        i = o.getTime();
                    e.releaseYear = isNaN(i) || 0 === i ? 0 : o.getFullYear(), e.releaseDate = isNaN(i) ? 0 : i, e.offerId = s.offerId, e.tags = s.tags
                } else e.releaseDate = 0, e.releaseYear = 0
            };
            t.addStoreData = c;
            const d = function(e, t) {
                const n = t[e.championId];
                e.championPoints = n ? n.championPoints : 0, e.championName = n ? n.name : void 0
            };
            t.addMasteryData = d;
            const m = function(e, t) {
                e.lootable = !!t && t.isLootableSkin(e.id)
            };

            function p(e, t) {
                const n = t.get(e.id);
                n ? (e.ownership = {
                    owned: !0,
                    rental: {
                        purchaseDate: n.purchaseDate
                    }
                }, e.hasVintageBorder = n.hasVintageBorder, i(e, "owned", !0)) : (e.ownership = {
                    owned: !1,
                    rental: {
                        purchaseDate: 0
                    }
                }, e.hasVintageBorder = !1, i(e, "owned", !1))
            }
            t.addLootableProperty = m;

            function u(e, t) {
                let n;
                return n = t ? o.CN_SKIN_RARITIES[e.regionRarityId] : s.Lodash.isString(e.rarity) ? o.SKIN_RARITIES[e.rarity] : e.rarity, n || o.SKIN_RARITIES.kNoRarity
            }
            t.addSkinStaticData = function({
                championsById: e,
                purchasedSkins: t,
                allStoreSkinMap: n,
                lootItemManager: o,
                isTencentRegion: i,
                disabledChromas: l,
                skinOwnershipById: h
            }) {
                return e && t ? s => {
                    if (s.championId = parseInt(s.id / 1e3, 10), p(s, h), s.rarity = u(s, i), a(s), r(s, t), s.chromas && (s.chromas.forEach((e => {
                            p(e, h), r(e, t)
                        })), l)) {
                        const e = s.chromas.filter((e => l.includes(e.id)));
                        e && e.length > 0 && e.forEach((e => s.chromas.removeObject(e)))
                    }
                    return s.questSkinInfo && s.questSkinInfo.tiers.forEach((e => {
                        p(e, h), r(e, t)
                    })), c(s, n), d(s, e), m(s, o), s
                } : (s.logger.error("Can't add skin static dat for skins"), e => e)
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isPurchasable = t.SKINS_VIEWER_PAW_SOURCE = t.INVENTORY_OWNERSHIP_TYPE = void 0;
            t.isPurchasable = function(e, t) {
                if (e && t) {
                    const n = t.getSkinItemCatalog(e.id);
                    return !e.ownership.owned && n.isSinglePurchasable()
                }
                return !1
            };
            t.INVENTORY_OWNERSHIP_TYPE = {
                OWNED: "OWNED"
            };
            t.SKINS_VIEWER_PAW_SOURCE = "skinsViewer"
        }, (e, t, n) => {
            "use strict";
            var s = n(1);
            const o = "/lol-settings/v2/account/LCUPreferences/lol-skins-viewer",
                i = "/lol-settings/v1/local/lol-skins-viewer",
                l = "lastVisitTime",
                a = "visitedSkinList",
                r = "lastSessionId",
                c = "completeSetIdMap",
                d = "groupingDropdownKey",
                m = "sortingDropdownKey",
                p = "unownedFilter";
            e.exports = class {
                constructor(e) {
                    this.dataBinding = e, this.sessionData = null, this.accountSettings = null, this.localSettings = null, this.sessionDataReady = !1, this.accountSettingsReady = !1, this.localSettingsReady = !1, this.allSettingsReady = !1, this.lastVisitTime = Date.now(), this.lastLocalVisitTime = null, this.readyStateListeners = []
                }
                loadSettings() {
                    return Promise.all([this._getSessionData(), this._getAccountSettings(), this._getLocalSettings()])
                }
                addVisitedSkinId(e) {
                    this.localSettings || this._resetLocalSettings();
                    this.localSettings[a].includes(e) || (this.localSettings[a].push(e), this._saveLocalSettings())
                }
                addCompleteSetId(e, t) {
                    this.localSettings || this._resetLocalSettings();
                    const n = this.localSettings[c];
                    n && n[e] || (n[e] = []), n[e].push(t)
                }
                removeCompleteSetId(e, t) {
                    this.localSettings || this._resetLocalSettings();
                    const n = this.localSettings[c];
                    if (n && n[e]) {
                        const s = n[e],
                            o = s.indexOf(t);
                        o >= 0 && (s.splice(o, 1), this._saveLocalSettings())
                    }
                }
                addReadyStateListener(e) {
                    if (!e || "function" != typeof e) throw new TypeError("addReadyStateListener expects listener to be a function"); - 1 === this.readyStateListeners.indexOf(e) && (this.readyStateListeners.push(e), this.allSettingsReady && s.Lodash.attempt(e))
                }
                removeReadyStateListener(e) {
                    if (!e || "function" != typeof e) throw new TypeError("removeReadyStateListener expects listener to be a function");
                    const t = this.readyStateListeners.indexOf(e); - 1 !== t && this.readyStateListeners.splice(t, 1)
                }
                shouldShowCompleteSetAnimation(e, t) {
                    this.localSettings || this._resetLocalSettings();
                    const n = this.localSettings[c];
                    return !(!n || !n[e]) && n[e].includes(t)
                }
                getLastLocalVisitTime() {
                    return this.lastLocalVisitTime ? this.lastLocalVisitTime : this.lastVisitTime
                }
                updateLastVisitTime(e, t = !0) {
                    const n = {};
                    n[l] = e, this.dataBinding.patch(o, {
                        schemaVersion: 1,
                        data: n
                    }), t && (this.lastLocalVisitTime = e)
                }
                updateLastGroupingSorting(e, t) {
                    if (!this.accountSettingsReady) return;
                    this.accountSettings && (this.accountSettings[d] = e, this.accountSettings[m] = t);
                    const n = {};
                    n[d] = e, n[m] = t, this.dataBinding.patch(o, {
                        schemaVersion: 1,
                        data: n
                    })
                }
                updateLastUnownedFilter(e) {
                    if (!this.accountSettingsReady) return;
                    this.accountSettings && (this.accountSettings[p] = e);
                    const t = {};
                    t[p] = e, this.dataBinding.patch(o, {
                        schemaVersion: 1,
                        data: t
                    })
                }
                shouldShowLinger(e) {
                    if (this.localSettings || this._resetLocalSettings(), s.Lodash.get(e, "ownership.owned")) {
                        const {
                            purchaseDate: t
                        } = e.ownership.rental;
                        if (new Date(t).getTime() >= this.lastVisitTime) {
                            const t = this.localSettings[a];
                            return !t || !t.includes(e.id)
                        }
                    }
                    return !1
                }
                _saveLocalSettings() {
                    this.dataBinding.patch(i, {
                        schemaVersion: 1,
                        data: this.localSettings
                    })
                }
                _getSessionData() {
                    return this.dataBinding.get("/lol-login/v1/session").then(this._handleSessionData.bind(this)).catch(this._handleSessionDataFail.bind(this))
                }
                _handleSessionData(e) {
                    this.sessionData = e, this._sessionDataReady()
                }
                _handleSessionDataFail(e) {
                    e && s.logger.error("Failed to get session data", e), this.sessionData = null, this._sessionDataReady()
                }
                _sessionDataReady() {
                    this.sessionDataReady = !0, this._initSettings()
                }
                _getAccountSettings() {
                    return this.dataBinding.get(o).then(this._handleAccountSettings.bind(this)).catch(this._handleAccountSettingsFail.bind(this))
                }
                _handleAccountSettings(e) {
                    e && e.data ? (this.accountSettings = e.data, this._setAccountSettingsReady()) : this._handleAccountSettingsFail()
                }
                _handleAccountSettingsFail(e) {
                    e && s.logger.error("Failed to get lol-skins-viewer account settings", e), this.accountSettings = {}, this._setAccountSettingsReady()
                }
                _setAccountSettingsReady() {
                    this.accountSettingsReady = !0, this._initSettings()
                }
                _getLocalSettings() {
                    return this.dataBinding.get(i).then(this._handleLocalSettings.bind(this)).catch(this._handleLocalSettingsFail.bind(this))
                }
                _handleLocalSettings(e) {
                    e && e.data ? (this.localSettings = e.data, this.localSettings[c] || (this.localSettings[c] = {}), this.localSettings[a] || (this.localSettings[a] = []), this._setLocalSettingsReady()) : this._handleLocalSettingsFail()
                }
                _handleLocalSettingsFail(e) {
                    e && s.logger.error("Failed to get lol-skins-viewer local settings", e), this.localSettings = null, this._setLocalSettingsReady()
                }
                _setLocalSettingsReady() {
                    this.localSettingsReady = !0, this._initSettings()
                }
                _initSettings() {
                    this.sessionDataReady && this.accountSettingsReady && this.localSettingsReady && (this._isSameSession(this.localSettings, this.sessionData) ? (s.logger.trace("in same session, use local last visit time instead of remote value"), this.lastVisitTime = this.localSettings[l]) : (this.accountSettings && this.accountSettings[l] ? this.lastVisitTime = this.accountSettings[l] : this.lastVisitTime = Date.now(), this._resetLocalSettings(), this._saveLocalSettings()), this._sendSettingsReadyEvent())
                }
                _sendSettingsReadyEvent() {
                    this.allSettingsReady = !0, this.readyStateListeners.forEach((e => s.Lodash.attempt(e)))
                }
                _resetLocalSettings() {
                    const e = {};
                    e[r] = this._getSessionId(this.sessionData), e[l] = this.lastVisitTime, e[a] = [], e[c] = {}, this.localSettings = e
                }
                _isSameSession(e, t) {
                    if (t && e && e[r]) {
                        return e[r] === this._getSessionId(t)
                    }
                    return !1
                }
                _getSessionId(e) {
                    return e ? e.idToken : Date.now()
                }
            }
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s, o = n(1),
                i = n(390),
                l = (s = n(391)) && s.__esModule ? s : {
                    default: s
                };
            class a {
                static isChroma(e) {
                    return Boolean(e && e.inventoryType === i.STORE_INVENTORY_TYPE.CHAMPION_SKIN && e.subInventoryType === i.STORE_SUB_INVENTORY_TYPE.CHROMA)
                }
                static hasValidPrice(e) {
                    return !!(e && o.Lodash.isArray(e) && e.length > 0) && void 0 !== e.find((e => e.cost > 0))
                }
                static hasValidDates(e, t) {
                    return !(!t || !t.releaseDate || e < t.releaseDate) && !(t.inactiveDate && e > t.inactiveDate)
                }
                static isPurchasable(e) {
                    if (e && e.active && e.releaseDate) {
                        const t = Date.now();
                        return !!a.hasValidDates(t, e) && (!!a.isBundle(e) || (!!(e.sale && t >= e.sale.startDate && t < e.sale.endDate && a.hasValidPrice(e.sale.prices)) || a.hasValidPrice(e.prices)))
                    }
                    return !1
                }
                static getCatalogMap(e) {
                    return e ? e.filter(a.isPurchasable).reduce(((e, t) => {
                        a.isBundle(t) && t.bundled && t.bundled.items && t.bundled.items.forEach((n => {
                            const {
                                inventoryType: s,
                                itemId: o
                            } = n;
                            a.getItemCatalog(e, s, o).addCatalog(t)
                        }));
                        const {
                            inventoryType: n,
                            itemId: s
                        } = t;
                        return a.getItemCatalog(e, n, s).addCatalog(t), e
                    }), new Map) : new Map
                }
                static getItemCatalog(e, t, n) {
                    e.has(t) || e.set(t, new Map);
                    const s = e.get(t);
                    return s.has(n) || s.set(n, new l.default(n, t)), s.get(n)
                }
                static isBundle(e) {
                    return Boolean(e && e.inventoryType === i.STORE_INVENTORY_TYPE.BUNDLES)
                }
                constructor(e) {
                    this.catalogMap = a.getCatalogMap(e)
                }
                getSummonerIconItemCatalog(e) {
                    return this._getItemCatalog(i.STORE_INVENTORY_TYPE.SUMMONER_ICON, e)
                }
                getWardSkinItemCatalog(e) {
                    return this._getItemCatalog(i.STORE_INVENTORY_TYPE.WARD_SKIN, e)
                }
                getChromaItemCatalog(e) {
                    return this._getItemCatalog(i.STORE_INVENTORY_TYPE.CHAMPION_SKIN, e)
                }
                getSkinItemCatalog(e) {
                    return this._getItemCatalog(i.STORE_INVENTORY_TYPE.CHAMPION_SKIN, e)
                }
                getChampionItemCatalog(e) {
                    return this._getItemCatalog(i.STORE_INVENTORY_TYPE.CHAMPION, e)
                }
                getAllChromaBundles() {
                    const {
                        catalogMap: e
                    } = this;
                    if (e && e.has(i.STORE_INVENTORY_TYPE.BUNDLES)) {
                        const t = e.get(i.STORE_INVENTORY_TYPE.BUNDLES),
                            n = [];
                        return t.forEach((e => {
                            e.singleCatalog && e.singleCatalog.subInventoryType === i.STORE_SUB_INVENTORY_TYPE.CHROMA_BUNDLE && n.push(e)
                        })), n.filter((e => e.isSinglePurchasable())).map((e => e.singleCatalog))
                    }
                    return []
                }
                getAllSkins() {
                    const {
                        catalogMap: e
                    } = this;
                    if (e && e.has(i.STORE_INVENTORY_TYPE.CHAMPION_SKIN)) {
                        const t = e.get(i.STORE_INVENTORY_TYPE.CHAMPION_SKIN),
                            n = [];
                        return t.forEach((e => n.push(e))), n.filter((e => e.isSinglePurchasable())).map((e => e.singleCatalog))
                    }
                    return []
                }
                _getItemCatalog(e, t) {
                    let n;
                    const s = this.catalogMap.get(e);
                    return s && (n = s.get(t)), n || (n = new l.default(t, e)), n
                }
            }
            var r = a;
            t.default = r
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.STORE_SUB_INVENTORY_TYPE = t.STORE_INVENTORY_TYPE = void 0;
            t.STORE_INVENTORY_TYPE = {
                CHAMPION: "CHAMPION",
                CHAMPION_SKIN: "CHAMPION_SKIN",
                BUNDLES: "BUNDLES",
                SUMMONER_ICON: "SUMMONER_ICON",
                WARD_SKIN: "WARD_SKIN"
            };
            t.STORE_SUB_INVENTORY_TYPE = {
                CHROMA: "RECOLOR",
                CHROMA_BUNDLE: "CHROMA_BUNDLE"
            }
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = class {
                constructor(e, t) {
                    if (null == e || null == t) throw new TypeError("Item id and inventory type are required for ItemCatalog Object.");
                    this._itemId = e, this._inventoryType = t, this.catalogs = [], this._singleCatalog = null
                }
                get itemId() {
                    return this._itemId
                }
                get inventoryType() {
                    return this._inventoryType
                }
                get singleCatalog() {
                    return this._singleCatalog
                }
                addCatalog(e) {
                    e.itemId === this._itemId && e.inventoryType === this._inventoryType && (this._singleCatalog = e), this.catalogs.push(e)
                }
                isSinglePurchasable() {
                    return null !== this._singleCatalog
                }
                isPurchasable() {
                    return this.catalogs.length > 0
                }
                isOnSale() {
                    let e = !1;
                    if (this.isSinglePurchasable() && this._singleCatalog.sale) {
                        const t = new Date(this._singleCatalog.sale.startDate),
                            n = new Date(this._singleCatalog.sale.endDate);
                        n >= t && (e = t.getTime() < Date.now() && Date.now() < n.getTime())
                    }
                    return e
                }
            };
            t.default = n
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(393);
            const o = new Set([s.LOOT_ITEM_TYPES.SKIN, s.LOOT_ITEM_TYPES.SUMMONER_ICON, s.LOOT_ITEM_TYPES.WARD_SKIN]);
            class i {
                static isAvailableLootItem(e) {
                    return !(!e || e.tags && e.tags.includes(s.UNAVAILABLE_LOOT_ITEM_TAG))
                }
                constructor(e) {
                    this._initLootItems(e)
                }
                isLootableSummonerIcon(e) {
                    return this._isLootable(e, s.LOOT_ITEM_TYPES.SUMMONER_ICON)
                }
                isLootableWardSkin(e) {
                    return this._isLootable(e, s.LOOT_ITEM_TYPES.WARD_SKIN)
                }
                isLootableSkin(e) {
                    return this._isLootable(e, s.LOOT_ITEM_TYPES.SKIN)
                }
                isLootableChroma(e) {
                    return this.isLootableSkin(e)
                }
                _initLootItems(e) {
                    e && Array.isArray(e) && e.length > 0 ? this.lootItemsMap = e.filter(i.isAvailableLootItem).reduce(((e, t) => {
                        if (o.has(t.type)) {
                            let n = e.get(t.type);
                            n || (n = new Set, e.set(t.type, n)), n.add(t.storeItemId)
                        }
                        return e
                    }), new Map) : this.lootItemsMap = new Map
                }
                _isLootable(e, t) {
                    const n = this._getLootItemIds(t);
                    return !!n && n.has(e)
                }
                _getLootItemIds(e) {
                    return this.lootItemsMap.get(e)
                }
            }
            var l = i;
            t.default = l
        }, (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UNAVAILABLE_LOOT_ITEM_TAG = t.LOOT_ITEM_TYPES = void 0;
            t.LOOT_ITEM_TYPES = {
                SKIN: "SKIN",
                WARD_SKIN: "WARDSKIN",
                SUMMONER_ICON: "SUMMONERICON"
            };
            t.UNAVAILABLE_LOOT_ITEM_TAG = "norerolloutput"
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Cuf/sbyZ",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\showcase-component\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\showcase-component\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\showcase-component\\\\index.js\\" "],["text","\\n"],["append",["helper",["uikit-background-switcher"],null,[["src"],[["get",["currentBackgroundPath"]]]]],false],["text","\\n"],["open-element","lol-uikit-section-controller",[]],["static-attr","animation","crossfade"],["static-attr","selected-item","showcase-view"],["static-attr","class","section-controller"],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"focusOnHiddenInput"],null],null],["flush-element"],["text","\\n  "],["open-element","lol-uikit-section",[]],["static-attr","section-id","showcase-view"],["static-attr","class","showcase-section"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","background-shader"],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["description-background-shader ",["helper",["unless"],[["get",["displayDescriptionBackground"]],"hidden"],null]]]],["flush-element"],["close-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","showcase-wrapper"],["flush-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","top-part"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","skin-title"],["flush-element"],["text","\\n"],["block",["if"],[["get",["currentSkin","rarity","gemIcon"]]],null,20],["text","          "],["open-element","div",[]],["static-attr","class","skin-name"],["flush-element"],["append",["unknown",["currentSkinName"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","skin-info"],["flush-element"],["text","\\n          "],["open-element","div",[]],["dynamic-attr","class",["concat",["skin-details ",["helper",["if"],[["get",["usingSplitLayout"]],"split-layout"],null]]]],["flush-element"],["text","\\n            "],["open-element","div",[]],["dynamic-attr","class",["concat",["universe-text-wrapper ",["helper",["unless"],[["get",["hasDescription"]],"hidden"],null]]]],["flush-element"],["text","\\n              "],["open-element","lol-uikit-scrollable",[]],["static-attr","overflow-masks","enabled"],["static-attr","class","scroll-text"],["flush-element"],["text","\\n                "],["open-element","p",[]],["static-attr","class","universe-text"],["flush-element"],["append",["helper",["sanitize"],[["get",["currentSkinDescription"]]],null],false],["close-element"],["text","\\n              "],["close-element"],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","div",[]],["dynamic-attr","class",["concat",["theme-features ",["helper",["unless"],[["get",["hasFeaturesText"]],"hidden"],null]]]],["flush-element"],["text","\\n              "],["open-element","h4",[]],["flush-element"],["append",["unknown",["tra","showcase_theme_feature_text_title"]],false],["close-element"],["text","\\n              "],["append",["helper",["sanitize"],[["get",["currentSkin","featuresText"]]],null],false],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","skin-info-bottom"],["flush-element"],["text","\\n"],["block",["if"],[["get",["purchaseUnavailable"]]],null,19,18],["text","            "],["open-element","div",[]],["dynamic-attr","class",["concat",["indicator legacy ",["helper",["unless"],[["get",["displayLegacy"]],"hidden"],null]]]],["flush-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","icon"],["flush-element"],["close-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","label"],["flush-element"],["append",["unknown",["tra","showcase_legacy_skin"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","div",[]],["dynamic-attr","class",["concat",["indicator limited ",["helper",["unless"],[["get",["displayLimited"]],"hidden"],null]]]],["flush-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","icon"],["flush-element"],["close-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","label"],["flush-element"],["append",["unknown",["tra","showcase_limited_skin"]],false],["close-element"],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n      "],["open-element","div",[]],["static-attr","class","bottom-part"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isTieredSkinWithEventOn"]]],null,17,14],["text","        "],["open-element","div",[]],["static-attr","class","carousel"],["flush-element"],["text","\\n          "],["append",["helper",["skin-carousel"],null,[["currentSkin","championSkins","purchaseEnabled","storeCatalogManager","moveToLeft","moveToRight"],[["get",["currentSkin"]],["get",["skinData"]],["get",["purchaseEnabled"]],["get",["storeCatalogManager"]],["helper",["action"],[["get",[null]],"moveToLeft"],null],["helper",["action"],[["get",[null]],"moveToRight"],null]]]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","related"],["flush-element"],["text","\\n"],["block",["if"],[["get",["isTieredSkinWithEventOff"]]],null,4,3],["text","          "],["open-element","div",[]],["dynamic-attr","class",["concat",["chroma icon ",["helper",["unless"],[["get",["hasChroma"]],"hidden"],null]]]],["modifier",["action"],[["get",[null]],"toggleChromaFlyout"]],["flush-element"],["close-element"],["text","\\n          "],["open-element","lol-uikit-flat-button",[]],["dynamic-attr","class",["concat",["skinline  ",["helper",["unless"],[["get",["currentSkinLine"]],"hidden"],null]]]],["dynamic-attr","onClick",["helper",["action"],[["get",[null]],"toggleSkinLineFlyout"],null],null],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","icon"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n          "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","toggle-ui"],["dynamic-attr","onClick",["helper",["action"],[["get",[null]],"toggleUi"],null],null],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","icon"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n        "],["close-element"],["text","\\n"],["block",["if"],[["get",["isTieredSkinWithEventOn"]]],null,2],["text","      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","lol-uikit-section",[]],["static-attr","section-id","splash-view"],["static-attr","class","splash-view-section"],["flush-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","emblem-overlay"],["flush-element"],["text","\\n"],["block",["if"],[["get",["currentSkin","emblems"]]],null,1],["close-element"],["text","\\n"],["append",["helper",["input"],null,[["maxlength","class"],["1","showcase-hidden-input"]]],false],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["emblem","emblemPath","large"]]]]],["flush-element"],["close-element"],["text","\\n"]],"locals":["emblem"]},{"statements":[["block",["each"],[["get",["currentSkin","emblems"]]],null,0]],"locals":[]},{"statements":[["text","          "],["append",["helper",["tiered-transformations"],null,[["showcaseComponent","skinTiers"],[["get",[null]],["get",["questSkinTiers"]]]]],false],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-flat-button",[]],["dynamic-attr","class",["concat",["quest-forms ",["helper",["unless"],[["get",["hasQuestForms"]],"hidden"],null]," ",["helper",["if"],[["get",["isTieredSkin"]],"hidden"],null]]]],["dynamic-attr","onClick",["helper",["action"],[["get",[null]],"toggleQuestFormsFlyout"],null],null],["flush-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","icon"],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","          "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","quest-forms"],["dynamic-attr","onClick",["helper",["action"],[["get",[null]],"toggleQuestFormsFlyout"],null],null],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","icon tiered"],["flush-element"],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","owned-button"],["static-attr","disabled",""],["flush-element"],["text","\\n              "],["append",["unknown",["tra","showcase_unavailable_button"]],false],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","unlock-button"],["flush-element"],["text","\\n              "],["append",["helper",["skin-purchase-button"],null,[["champion","viewSkin","ip","rp","storeCatalogManager","openPawModal"],[["get",["currentChampion"]],["get",["currentSkin"]],["get",["ip"]],["get",["rp"]],["get",["storeCatalogManager"]],["helper",["action"],[["get",[null]],"openPawModal"],null]]]],false],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isPurchasable"]]],null,6,5],["text","        "]],"locals":[]},{"statements":[["block",["if"],[["get",["purchaseEnabled"]]],null,7]],"locals":[]},{"statements":[["text","          "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","owned-button"],["static-attr","disabled",""],["flush-element"],["text","\\n            "],["append",["unknown",["tra","showcase_owned_button"]],false],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["currentSkin","ownership","owned"]]],null,9,8]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","owned-button"],["static-attr","disabled",""],["flush-element"],["text","\\n              "],["append",["unknown",["tra","showcase_unavailable_button"]],false],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","owned-button"],["static-attr","disabled",""],["flush-element"],["text","\\n              "],["append",["unknown",["tra","showcase_owned_button"]],false],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["selectedSkinTier","ownership","owned"]]],null,12,11]],"locals":[]},{"statements":[["block",["if"],[["get",["isTieredSkinWithEventOff"]]],null,13,10]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","owned-button"],["flush-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","cdp-unlock-button-content"],["flush-element"],["text","\\n                "],["open-element","img",[]],["static-attr","src","/fe/lol-static-assets/images/skin-viewer/tiered/purchase-pass-icon.svg"],["flush-element"],["close-element"],["text","\\n                "],["append",["unknown",["tra","showcase_actions_purchase_pass"]],false],["text","\\n              "],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","lol-uikit-flat-button",[]],["static-attr","class","owned-button"],["static-attr","disabled",""],["flush-element"],["text","\\n              "],["append",["unknown",["tra","showcase_pass_purchased"]],false],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["isTieredSkinEventPurchased"]]],null,16,15]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["dynamic-attr","class",["concat",["unlock-data ",["helper",["unless"],[["get",["currentSkin","ownership","owned"]],"hidden"],null]]]],["flush-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","acquire-date"],["flush-element"],["text","\\n                "],["open-element","div",[]],["static-attr","class","label"],["flush-element"],["append",["unknown",["tra","showcase_acquire_date_label"]],false],["close-element"],["text","\\n                "],["open-element","div",[]],["static-attr","class","value"],["flush-element"],["append",["unknown",["currentSkinAcquireDate"]],false],["close-element"],["text","\\n              "],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","unlock-data"],["flush-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","acquire-date"],["flush-element"],["text","\\n                "],["open-element","div",[]],["static-attr","class","label"],["flush-element"],["open-element","sup",[]],["flush-element"],["text","*"],["close-element"],["text"," "],["append",["unknown",["tra","showcase_unavailable_note"]],false],["close-element"],["text","\\n              "],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","              "],["open-element","div",[]],["static-attr","class","tier-icon"],["flush-element"],["text","\\n                "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["currentSkin","rarity","gemIcon"]]]]],["flush-element"],["close-element"],["text","\\n              "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var s = n(1);
            n(396);
            var o = n(387),
                i = n(381),
                l = n(63);
            const {
                Component: a,
                computed: r
            } = s.Ember;
            e.exports = a.extend({
                classNames: ["skin-purchase"],
                layout: n(397),
                showSkinPurchaseButton: r.not("viewSkin.ownership.owned"),
                enabled: r.not("disabled"),
                disabled: r("viewSkin.{id,canUse,stillObtainable,isLegacy}", (function() {
                    const e = this.get("viewSkin"),
                        t = this.get("storeCatalogManager");
                    return !(0, o.isPurchasable)(e, t)
                })),
                init() {
                    this._super(...arguments), this.set("tracker", new c)
                },
                actions: {
                    showSkinPurchaseModal() {
                        this._openSkinPurchaseDialog()
                    }
                },
                _openSkinPurchaseDialog() {
                    this.set("purchaseData", null);
                    const e = this.get("viewSkin");
                    this.openPawModal({
                        item: e,
                        inventoryType: l.PAW.INVENTORY_TYPES.CHAMPION_SKIN
                    }, this.get("telemetryEventSource"))
                },
                telemetryEventSource: i.TELEMETRY_EVENT_SOURCE.SKIN_SHOWCASE_VIEW
            });
            class c {}
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "ZnErAcG8",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\skin-purchase-button-component\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\skin-purchase-button-component\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\skin-purchase-button-component\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["dynamic-attr","class",["concat",[["helper",["unless"],[["get",["showSkinPurchaseButton"]],"hidden"],null]]]],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","purchase-button-wrapper"],["flush-element"],["text","\\n    "],["open-element","lol-uikit-flat-button",[]],["dynamic-attr","class",["concat",[["helper",["unless"],[["get",["showSkinPurchaseButton"]],"hidden"],null]]]],["dynamic-attr","onclick",["helper",["action"],[["get",[null]],"showSkinPurchaseModal"],null],null],["dynamic-attr","disabled",["unknown",["disabled"]],null],["flush-element"],["append",["unknown",["tra","showcase_unlock"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.THUMBNAIL_ANIMATION_CACHE_SIZE = t.MAX_THUMBNAILS_VISIBLE = void 0;
            var s, o = n(1),
                i = n(381),
                l = (s = n(382)) && s.__esModule ? s : {
                    default: s
                };
            n(399);
            const {
                computed: a,
                Component: r,
                get: c,
                getWithDefault: d,
                set: m
            } = o.Ember;
            t.MAX_THUMBNAILS_VISIBLE = 5;
            t.THUMBNAIL_ANIMATION_CACHE_SIZE = 1, e.exports = r.extend({
                classNames: ["skin-carousel-component"],
                activeSkinVirtualIndex: 0,
                maxThumbnailsVisible: 5,
                layout: n(400),
                longCarousel: a("skins.length", "maxThumbnailsVisible", (function() {
                    return this.get("skins.length") > this.get("maxThumbnailsVisible")
                })),
                carouselWidth: a("skins", "maxThumbnailsVisible", (function() {
                    const e = this.get("skins.length");
                    return e > this.get("maxThumbnailsVisible") ? 513 : 125 + 97 * (e - 1)
                })),
                initialOffset: a("skins", (function() {
                    let e;
                    return e = this.get("skins").length > 5 ? -98 : 0, this.set("offset", e), e
                })),
                skins: a("activeSkinIndex", "championSkins", "maxThumbnailsVisible", (function() {
                    const e = c(this, "championSkins"),
                        t = c(this, "activeSkinIndex"),
                        n = c(this, "maxThumbnailsVisible"),
                        s = c(this, "storeCatalogManager"),
                        i = c(this, "purchaseEnabled");
                    if (e.forEach((e => {
                            if (e.questSkinInfo)
                                if ("kQuestSkin" === e.questSkinInfo.productType) o.Ember.set(e, "customTilePath", e.questSkinInfo.tilePath);
                                else {
                                    const t = e.questSkinInfo.tiers.reduce(((e, t) => t.ownership.owned ? t.tilePath : e), e.questSkinInfo?.tiers?.[0]?.tilePath);
                                    o.Ember.set(e, "customTilePath", t)
                                }
                        })), !e || !Number.isInteger(t) || t < 0 || !s) return [];
                    if (e.length <= n) return m(this, "activeSkinVirtualIndex", t), e;
                    return this._buildSkinsVirtualList(n, e, t).map((e => (e.purchaseAvailable = this._isSkinPurchaseAvailable(e, s, i), {
                        ...e
                    })))
                })),
                activeSkinIndex: a("currentSkin", "championSkins", (function() {
                    const e = c(this, "currentSkin"),
                        t = c(this, "championSkins");
                    if (e && Array.isArray(t)) return t.findIndex((t => t.id === e.id))
                })),
                init() {
                    this._super(...arguments), m(this, "championSkins", d(this, "championSkins", [])), m(this, "tracker", new p)
                },
                actions: {
                    prevSkin() {
                        this.moveToLeft(-1, !1), l.default.addUserBehavior(i.USER_ACTIVITIES.SWITCH_SPLASH_BY_BUTTON, "Left")
                    },
                    nextSkin() {
                        this.moveToRight(1, !1), l.default.addUserBehavior(i.USER_ACTIVITIES.SWITCH_SPLASH_BY_BUTTON, "Right")
                    },
                    skinThumbnailClicked(e) {
                        const t = this.get("activeSkinVirtualIndex");
                        if (t === e) return;
                        const n = e - t;
                        n < 0 ? (l.default.addUserBehavior(i.USER_ACTIVITIES.SWITCH_SPLASH_BY_CLICK_CAROUSEL, "Left"), this.moveToLeft(n)) : (l.default.addUserBehavior(i.USER_ACTIVITIES.SWITCH_SPLASH_BY_CLICK_CAROUSEL, "Right"), this.moveToRight(n))
                    }
                },
                _buildSkinsVirtualList: function(e, t, n) {
                    const s = Math.floor(e / 2) + e % 2 + 1;
                    let o = t.slice(n, n + s);
                    if (n + s > t.length) {
                        const e = t.slice(0, Math.abs(s - o.length));
                        o = o.concat(e)
                    }
                    const i = Math.floor(e / 2) + 1;
                    let l = t.slice(Math.max(0, n - i), n);
                    if (n - i < 0) {
                        l = t.slice(t.length - Math.abs(n - i)).concat(l)
                    }
                    m(this, "activeSkinVirtualIndex", l.length);
                    return l.concat(o)
                },
                _isSkinPurchaseAvailable(e, t, n) {
                    if (!n) return !1;
                    if (e && t) {
                        return !e.ownership.owned && t.getSkinItemCatalog(e.id).isSinglePurchasable()
                    }
                    return !1
                }
            });
            class p {}
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "bCOuShRj",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\skin-carousel-component\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\skin-carousel-component\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\skin-carousel-component\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","skins-carousel"],["flush-element"],["text","\\n"],["block",["if"],[["get",["longCarousel"]]],null,3],["text","\\n  "],["open-element","div",[]],["static-attr","class","carousel-track-container"],["dynamic-attr","style",["concat",["width:",["unknown",["carouselWidth"]],"px"]]],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","carousel-track"],["dynamic-attr","style",["concat",["transform: translateX(",["unknown",["initialOffset"]],"px)"]]],["flush-element"],["text","\\n"],["block",["each"],[["get",["skins"]]],null,2],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["block",["if"],[["get",["longCarousel"]]],null,0],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["open-element","lol-uikit-arrow-button",[]],["static-attr","direction","right"],["static-attr","class","next-button"],["dynamic-attr","onClick",["helper",["action"],[["get",[null]],"nextSkin"],null],null],["static-attr","click-sfx-src","/fe/lol-collections/audio/sfx-collection-browse-right-click.ogg"],["flush-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","            "],["open-element","div",[]],["static-attr","class","gem-overlay"],["flush-element"],["text","\\n              "],["open-element","img",[]],["dynamic-attr","src",["concat",[["unknown",["skin","rarityGemPath"]]]]],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","        "],["open-element","div",[]],["dynamic-attr","class",["concat",["thumbnail-wrapper\\n          ",["helper",["unless"],[["get",["skin","ownership","owned"]],"unowned"],null],"\\n          ",["helper",["if"],[["get",["skin","purchaseAvailable"]],"purchase-available"],null],"\\n          ",["helper",["if"],[["helper",["eq"],[["get",["skin","id"]],["get",["currentSkin","id"]]],null],"active-skin"],null]]]],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","skin-thumbnail-img"],["dynamic-attr","style",["concat",["background-image:url(",["helper",["if"],[["get",["skin","customTilePath"]],["get",["skin","customTilePath"]],["get",["skin","tilePath"]]],null],")"]]],["dynamic-attr","onClick",["helper",["action"],[["get",[null]],"skinThumbnailClicked",["get",["index"]]],null],null],["flush-element"],["close-element"],["text","\\n"],["block",["if"],[["get",["skin","rarityGemPath"]]],null,1],["text","        "],["close-element"],["text","\\n"]],"locals":["skin","index"]},{"statements":[["text","    "],["open-element","lol-uikit-arrow-button",[]],["static-attr","direction","left"],["static-attr","class","prev-button"],["dynamic-attr","onClick",["helper",["action"],[["get",[null]],"prevSkin"],null],null],["static-attr","click-sfx-src","/fe/lol-collections/audio/sfx-collection-browse-left-click.ogg"],["flush-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var s = n(1),
                o = n(374);
            n(402), e.exports = s.Ember.Component.extend({
                classNames: ["tiered-transformations"],
                layout: n(403),
                showcaseComponent: null,
                selectedSkinIndex: s.Ember.computed.alias("showcaseComponent.selectedQuestFormIndex"),
                overrideTargetSplashPath(e) {
                    const t = this.get("skinTiers");
                    this.get("showcaseComponent")._overrideSplashPath(t[e].uncenteredSplashPath), this.get("showcaseComponent")._overrideSkinDescription(t[e].description), this.get("showcaseComponent")._overrideSplashVideoPath(t[e].collectionSplashVideoPath)
                },
                actions: {
                    tierClicked(e) {
                        o.SFX.gridClick.play(), this.get("showcaseComponent")._setSelectedQuestForm(e)
                    },
                    onMouseEnterTier(e) {
                        this.overrideTargetSplashPath(e), o.SFX.gridHover.play()
                    },
                    onMouseLeaveTier() {
                        const e = this.get("skinTiers")[this.get("showcaseComponent.lastSelectedSkinIndex")] ?? this.get("showcaseComponent.questSkinInfo");
                        this.get("showcaseComponent")._overrideSplashPath(e.uncenteredSplashPath), this.get("showcaseComponent")._overrideSkinDescription(e.description), this.get("showcaseComponent")._overrideSplashVideoPath(e.collectionSplashVideoPath)
                    }
                }
            })
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Tsw3iv0j",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\tiered-transformations\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\tiered-transformations\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\tiered-transformations\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","tiered-transformations__container"],["flush-element"],["text","\\n  "],["open-element","hr",[]],["static-attr","class","tiered-transformations__bar"],["flush-element"],["close-element"],["text","\\n"],["block",["each"],[["get",["skinTiers"]]],null,0],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","tiered-transformations__item"],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["image ",["helper",["if"],[["get",["tier","ownership","owned"]]," obtained"],null]," ",["helper",["if"],[["helper",["eq"],[["get",["selectedSkinIndex"]],["get",["index"]]],null],"selected"],null]]]],["dynamic-attr","onClick",["helper",["action"],[["get",[null]],"tierClicked",["get",["index"]]],null],null],["dynamic-attr","onmouseenter",["helper",["action"],[["get",[null]],"onMouseEnterTier",["get",["index"]]],null],null],["dynamic-attr","onmouseleave",["helper",["action"],[["get",[null]],"onMouseLeaveTier"],null],null],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":["tier","index"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.eq = i, t.eqHelper = void 0;
            var s = n(1);
            const {
                Helper: o
            } = s.Ember;

            function i(e) {
                return 2 === e.length && e[0] === e[1]
            }
            const l = o.helper(i);
            t.eqHelper = l
        }, (e, t, n) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var s = n(1);
            const o = "v1/skins";
            var i = s.Ember.Service.extend({
                init: function() {
                    this._super(...arguments), this.eventHubDataBinding = (0, s.dataBinding)("/lol-event-hub", s.socket), this.eventHubDataBinding.observe(o, this, (e => {
                        this.set("skinsFromActiveEvents", e)
                    }))
                },
                willDestroy() {
                    this._super(...arguments), this.eventHubDataBinding.unobserve(o, this)
                }
            });
            t.default = i
        }, (e, t, n) => {
            "use strict";
            var s = r(n(1));
            n(407);
            var o = n(374),
                i = n(375),
                l = r(n(382)),
                a = n(381);

            function r(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            const {
                Ember: c
            } = s.default, {
                computed: d,
                Component: m,
                get: p
            } = c, u = m.extend({
                classNames: ["skin-line-flyout"],
                isShow: !1,
                layout: n(408),
                skins: d.alias("skinLine.skins"),
                didInsertElement: function() {
                    this._super(...arguments);
                    const e = this.element.querySelectorAll(".skinline-skin");
                    this._bindHoverSound(e)
                },
                willDestroyElement() {
                    this._super(...arguments);
                    const e = this.element.querySelectorAll(".skinline-skin");
                    (0, i.removeHoverEvents)(e)
                },
                actions: {
                    skinClicked: function(e) {
                        p(this, "showcaseComponent")._updateSkinWithSkinLine(e.id, p(this, "skins")), o.SFX.gridClick.play(), l.default.addUserBehavior(a.USER_ACTIVITIES.CLICK_ON_SKIN_IN_THEME_FLYOUT)
                    }
                },
                _handleMouseEnter() {
                    o.SFX.gridHover.play()
                },
                _bindHoverSound(e) {
                    e && e.forEach((e => {
                        e._listeners = {
                            mouseenter: this._handleMouseEnter
                        }, e.addEventListener("mouseenter", this._handleMouseEnter)
                    }))
                }
            });
            e.exports = u
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "Ty2xEiAC",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\skin-line-popup\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\skin-line-popup\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\skin-line-popup\\\\index.js\\" "],["text","\\n"],["open-element","div",[]],["static-attr","class","skinline-head"],["flush-element"],["text","\\n  "],["open-element","span",[]],["static-attr","class","skinline-name"],["flush-element"],["append",["unknown",["skinLine","name"]],false],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","lol-uikit-scrollable",[]],["static-attr","class","flyout"],["static-attr","overflow-masks","enabled"],["flush-element"],["text","\\n"],["block",["each"],[["get",["skins"]]],null,0],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","div",[]],["static-attr","class","skinline-skin"],["flush-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["skin-image-wrapper ",["helper",["unless"],[["get",["skin","ownership","owned"]],"disabled"],null]]]],["modifier",["action"],[["get",[null]],"skinClicked",["get",["skin"]]]],["flush-element"],["text","\\n      "],["open-element","img",[]],["static-attr","class","skin-image"],["dynamic-attr","src",["unknown",["skin","tilePath"]],null],["flush-element"],["close-element"],["text","\\n    "],["close-element"],["text","\\n    "],["open-element","div",[]],["dynamic-attr","class",["concat",["locked ",["helper",["if"],[["get",["skin","ownership","owned"]],"hidden"],null]]]],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":["skin"]}],"hasPartials":false}',
                meta: {}
            })
        }, (e, t, n) => {
            "use strict";
            var s = n(1);
            n(410);
            var o, i = n(374),
                l = n(375),
                a = n(381),
                r = (o = n(389)) && o.__esModule ? o : {
                    default: o
                },
                c = n(390),
                d = n(63);
            const {
                computed: m,
                Component: p,
                get: u
            } = s.Ember, h = p.extend({
                classNames: ["chroma-flyout"],
                isShow: !1,
                layout: n(411),
                parentSkinOwned: m.alias("skin.ownership.owned"),
                chromas: m.alias("skin.chromas"),
                chromaBundlePurchaseDisabled: m.or("allChromasOwned", "purchaseDisabled"),
                purchaseDisabled: m.or("platformSettings.disableAllPurchase", "platformSettings.disableShowcaseViewPurchase", "platformSettings.disableChromasPurchase"),
                chromaCatalogs: m("chromas.@each.{owned,disabled}", "purchaseDisabled", (function() {
                    const e = this.get("chromas"),
                        t = this.get("storeCatalogManager"),
                        n = this.get("purchaseDisabled");
                    let s = [];
                    return e && t && (s = e.reduce(((e, s) => {
                        const o = Object.assign({
                            purchasable: !1
                        }, s);
                        if (!u(s, "ownership.owned") && !n) {
                            const e = t.getSkinItemCatalog(s.id);
                            e && e.isSinglePurchasable() && r.default.isChroma(e.singleCatalog) && (o.purchasable = !0)
                        }
                        return s.disabled || e.push(o), e
                    }), [])), s
                })),
                chromaBundle: m("skin", "storeCatalogManager", (function() {
                    let e = null;
                    const t = this.get("storeCatalogManager");
                    if (t) {
                        const n = t.getAllChromaBundles();
                        this.get("skin") && n && n.length > 0 && (e = this._getLargestValidBundle(n))
                    }
                    return e
                })),
                allChromasOwned: m("chromas", "chromas.@each.{owned,ownership}", (function() {
                    const e = this.get("chromas");
                    return !e || void 0 === e.find((e => !e.ownership || !e.ownership.owned))
                })),
                didInsertElement() {
                    this._super(...arguments), this._bindHoverSound()
                },
                willDestroyElement() {
                    this._super(...arguments);
                    const e = this.element.querySelectorAll(".chroma-bundle-block"),
                        t = this.element.querySelectorAll(".chroma-block");
                    (0, l.removeHoverEvents)(e), (0, l.removeHoverEvents)(t)
                },
                _handleMouseEnter() {
                    i.SFX.gridHover.play()
                },
                actions: {
                    chromaBundleClicked: function() {
                        i.SFX.gridClick.play();
                        const e = this.get("chromaBundle");
                        null !== e && u(this, "openPawModal.openPawModal")({
                            item: e,
                            inventoryType: d.PAW.INVENTORY_TYPES.BUNDLES,
                            modalType: d.PAW.MODAL_TYPES.CHROMA_BUNDLE_MODAL
                        }, this.get("telemetryEventSource"))
                    },
                    chromaClicked: function(e) {
                        i.SFX.gridClick.play(), u(this, "openPawModal.openPawModal")({
                            item: e,
                            inventoryType: d.PAW.INVENTORY_TYPES.CHAMPION_SKIN,
                            modalType: d.PAW.MODAL_TYPES.CHROMA_MODAL
                        }, this.get("telemetryEventSource"))
                    }
                },
                _getLargestValidBundle(e) {
                    const t = this.get("skin"),
                        n = e.filter((function(e) {
                            if (!e.bundled.items.find((e => e.itemId === t.id))) return !1;
                            if (!(e.active && e.subInventoryType === c.STORE_SUB_INVENTORY_TYPE.CHROMA_BUNDLE)) return !1;
                            return !e.bundled.items.find((e => e.inventoryType !== c.STORE_INVENTORY_TYPE.CHAMPION && e.inventoryType !== c.STORE_INVENTORY_TYPE.CHAMPION_SKIN))
                        }));
                    if (!n.length) return null;
                    return n.sort(((e, t) => t.bundled.items.length - e.bundled.items.length))[0]
                },
                _bindHoverSound() {
                    const e = this.element.querySelector(".chroma-bundle-block");
                    e && (e._listeners = {
                        mouseenter: this._handleMouseEnter
                    }, e.addEventListener("mouseenter", this._handleMouseEnter));
                    const t = this.element.querySelectorAll(".chroma-block");
                    t && t.forEach((e => {
                        e._listeners = {
                            mouseenter: this._handleMouseEnter
                        }, e.addEventListener("mouseenter", this._handleMouseEnter)
                    }))
                },
                telemetryEventSource: a.TELEMETRY_EVENT_SOURCE.SKIN_CHROMA_FLYOUT_VIEW
            });
            e.exports = h
        }, (e, t, n) => {
            "use strict";
            n.r(t)
        }, (e, t, n) => {
            const s = n(1).Ember;
            e.exports = s.HTMLBars.template({
                id: "o6Tki195",
                block: '{"statements":[["comment","#ember-component template-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\chroma-popup\\\\layout.hbs\\" style-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\chroma-popup\\\\style.styl\\" js-path=\\"T:\\\\cid\\\\p4\\\\Releases_14_1\\\\LeagueClientContent_Release\\\\15693\\\\DevRoot\\\\Client\\\\fe\\\\rcp-fe-lol-collections\\\\src\\\\lib\\\\skins-viewer\\\\addon\\\\components\\\\chroma-popup\\\\index.js\\" "],["text","\\n  "],["open-element","div",[]],["static-attr","class","chroma-head"],["flush-element"],["text","\\n    "],["open-element","span",[]],["static-attr","class","chroma-label"],["flush-element"],["append",["unknown",["tra","chroma_flyout_chroma_label"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","chroma-popup-content"],["flush-element"],["text","\\n"],["block",["if"],[["get",["chromaBundle"]]],null,7],["text","    "],["open-element","lol-uikit-scrollable",[]],["static-attr","class","chroma-details-block"],["flush-element"],["text","\\n"],["block",["each"],[["get",["chromaCatalogs"]]],null,4],["text","    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","chroma-block disabled"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","chroma-popup-image"],["flush-element"],["text","\\n              "],["open-element","img",[]],["static-attr","class","chroma-img"],["dynamic-attr","src",["concat",[["unknown",["chroma","chromaPath"]]]]],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n        "]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","chroma-block purchasable disabled"],["modifier",["action"],[["get",[null]],"chromaClicked",["get",["chroma"]]]],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","chroma-popup-image"],["flush-element"],["text","\\n              "],["open-element","img",[]],["static-attr","class","chroma-img"],["dynamic-attr","src",["concat",[["unknown",["chroma","chromaPath"]]]]],["flush-element"],["close-element"],["text","\\n              "],["open-element","div",[]],["static-attr","class","skin-lock-icon"],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["chroma","purchasable"]]],null,1,0]],"locals":[]},{"statements":[["text","          "],["open-element","div",[]],["static-attr","class","chroma-block"],["flush-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","chroma-popup-image"],["flush-element"],["text","\\n              "],["open-element","img",[]],["static-attr","class","chroma-img"],["dynamic-attr","src",["concat",[["unknown",["chroma","chromaPath"]]]]],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n          "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["chroma","ownership","owned"]]],null,3,2]],"locals":["chroma"]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","chroma-bundle-block purchasable"],["modifier",["action"],[["get",[null]],"chromaBundleClicked"]],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","chroma-bundle-image-wrapper"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","chroma-popup-bundle-image"],["dynamic-attr","style",["concat",["background-image: url(",["unknown",["skin","tilePath"]],")"]]],["flush-element"],["close-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","chroma-bundle-lock"],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","chroma-bundle-label-wrapper"],["flush-element"],["text","\\n          "],["open-element","span",[]],["static-attr","class","chroma-bundle-label"],["flush-element"],["append",["unknown",["tra","chroma_flyout_chroma_bundle_label"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","      "],["open-element","div",[]],["static-attr","class","chroma-bundle-block"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","chroma-bundle-image-wrapper"],["flush-element"],["text","\\n          "],["open-element","div",[]],["static-attr","class","chroma-popup-bundle-image"],["dynamic-attr","style",["concat",["background-image: url(",["unknown",["skin","tilePath"]],")"]]],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","chroma-bundle-label-wrapper"],["flush-element"],["text","\\n          "],["open-element","span",[]],["static-attr","class","chroma-bundle-label"],["flush-element"],["append",["unknown",["tra","chroma_flyout_chroma_bundle_label"]],false],["close-element"],["text","\\n        "],["close-element"],["text","\\n      "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["chromaBundlePurchaseDisabled"]]],null,6,5]],"locals":[]}],"hasPartials":false}',
                meta: {}
            })
        }],
        t = {};

    function n(s) {
        var o = t[s];
        if (void 0 !== o) return o.exports;
        var i = t[s] = {
            id: s,
            loaded: !1,
            exports: {}
        };
        return e[s].call(i.exports, i, i.exports, n), i.loaded = !0, i.exports
    }
    n.g = function() {
        if ("object" == typeof globalThis) return globalThis;
        try {
            return this || new Function("return this")()
        } catch (e) {
            if ("object" == typeof window) return window
        }
    }(), n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), n.r = e => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }, n.nmd = e => (e.paths = [], e.children || (e.children = []), e), n.p = "/fe/lol-collections/", (() => {
        "use strict";
        var e = o(n(1)),
            t = o(n(2)),
            s = n(3);

        function o(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }
        const i = "rcp-fe-lol-collections",
            l = document.currentScript.ownerDocument;
        t.default.set(l);
        const a = window.getPluginAnnounceEventName(i);
        l.addEventListener(a, (function(t) {
            (0, t.registrationHandler)((function(t) {
                return e.default.init(t, {
                    AudioPlugin: e => e.get("rcp-fe-audio"),
                    bluebird: e => e.get("rcp-fe-common-libs").getBluebird(3),
                    ChampionDetails: e => e.get("rcp-fe-lol-champion-details"),
                    ChampionStatistics: e => e.get("rcp-fe-lol-champion-statistics"),
                    ComponentFactory: e => e.get("rcp-fe-common-libs").getComponentFactory(1),
                    CustomEase: e => e.get("rcp-fe-common-libs").getGsapCustomEase("1"),
                    d3: e => e.get("rcp-fe-common-libs").getD3(3),
                    dataBinding: e => e.get("rcp-fe-common-libs").getDataBinding("rcp-fe-lol-collections"),
                    Ember: e => e.get("rcp-fe-ember-libs").getEmber(),
                    emberL10n: e => e.get("rcp-fe-ember-libs").getEmberL10n(1),
                    gsap: e => e.get("rcp-fe-common-libs").getGsap("1"),
                    l10n: e => e.get("rcp-fe-lol-l10n"),
                    Lodash: e => e.get("rcp-fe-common-libs").getLodash("4"),
                    logger: e => e.get("rcp-fe-common-libs").logging.create(i),
                    ModalManager: e => e.get("rcp-fe-lol-uikit").getModalManager(),
                    pawApi: e => e.get("rcp-fe-lol-paw"),
                    Router: e => e.get("rcp-fe-lol-shared-components").getApi_Router(),
                    SharedComponents: e => e.get("rcp-fe-lol-shared-components"),
                    socket: e => e.getSocket(),
                    subDoc: l,
                    Telemetry: e => e.get("rcp-fe-common-libs").getTelemetry("1"),
                    TooltipManager: e => e.get("rcp-fe-lol-uikit").getTooltipManager(),
                    UIKit: e => e.get("rcp-fe-lol-uikit"),
                    UXSettings: e => e.get("rcp-fe-lol-shared-components").getApi_UXSettings(),
                    Viewport: e => e.get("rcp-fe-lol-shared-components").getApi_Viewport(),
                    webComponents: e => e.get("rcp-fe-common-libs").getWebComponents(l)
                }).then((() => {
                    const n = t.get("rcp-fe-lol-l10n").tra().overlay("/fe/lol-l10n/trans.json").overlay("/fe/lol-collections/trans.json").overlay("/fe/lol-collections/trans-perks.json").overlay("/fe/lol-collections/trans-item-sets.json").overlay("/fe/lol-collections/trans-emote-panel.json"),
                        s = e.default.emberL10n(e.default.Ember, n);
                    return e.default.add({
                        tra: n,
                        traService: s,
                        EmberAddons: e => e.get("rcp-fe-ember-libs").getSharedEmberAddons(),
                        EmberApplicationFactory: e => e.get("rcp-fe-ember-libs").getEmberApplicationFactory(),
                        emberDataBinding: e => e.get("rcp-fe-ember-libs").getEmberDataBinding("rcp-fe-lol-collections")
                    })
                })).then((() => {
                    (0, s.registerCustomElements)();
                    const t = n(40).default;
                    return e.default.add({
                        CollectionsApi: t
                    }), t
                }))
            }))
        }), {
            once: !0
        })
    })()
})();