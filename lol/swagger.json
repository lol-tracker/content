
basePath    : /
consumes    : {application/json, application/vnd.api+json, application/x-yaml, application/x-msgpackâ€¦}
definitions : @{AggregationType=; AlertDTO=; BannedChampion=; BasePlayerDTO=; BindingAsyncCancelEvent=; BindingAsyncFailureEvent=; BindingAsyncState=; BindingCallbackEvent=; BindingFullApiHelp=; BindingFullArgumentHelp=; BindingFullEnumValueHelp=; BindingFullEventHelp=; BindingFullFieldHelp=; BindingFullFunctionHelp=; BindingFullTypeHelp=; BindingFullTypeIdentifier=; BindingGenericAsyncEvent=; BindingGenericEvent=; BindingHelpFormat=; BoostTeamSkinRentalDTO=; Bracket=; BracketMatch=; BracketRoster=; BuildInfo=; CapacityEnum=; ChampSelectLcdsGameDTO=; ChampSelectLcdsGameTimerDTO=; ChampSelectLcdsObfuscatedParticipant=; ChampSelectLcdsPlayerChampionSelectionDTO=; ChampSelectLcdsPlayerParticipant=; ChampSelectLcdsPointSummary=; ChampSelectLcdsPotentialTradersDTO=; ChampSelectLcdsRollResult=; ChampSelectLcdsTradeContractDTO=; ChampionMasteryPublicDTO=; ChampionScoutingDTO=; ClashEventData=; ClashOfflineNotification=; ClashRewardConfigClient=; ClashRewardConfigEntry=; ClashRewardDefinition=; ClashRewardKeyType=; ClashRewardOutput=; ClashRewardSpec=; ClashRewardTime=; ClashRewardType=; ClashSeasonRewardResult=; ClientBracketMatchStatus=; ClientConfigAuthenticatedConnection=; ClientConfigBuildInfo=; ClientConfigClientConfig=; ClientConfigConfigNamespaceUpdate=; ClientConfigConfigParams=; ClientConfigConfigReadinessEnum=; ClientConfigConfigStatus=; ClientConfigConfigType=; ClientConfigDataPaths=; ClientConfigDepInjectorEntitlements=; ClientConfigDepInjectorEntitlementsUpdate=; ClientConfigDepInjectorEntitlementsUpdateType=; ClientConfigEntitlements=; ClientConfigEntitlementsUpdate=; ClientConfigSession=; ClientConfigUpdateType=; ClientDynamicConfig=; ClientRequestError=; CollectionsLcdsChampionDTO=; CollectionsLcdsChampionSkinDTO=; CollectionsLcdsClientDynamicConfigurationNotification=; CollectionsLcdsRentalUpdateNotification=; CollectionsLcdsStoreFulfillmentNotification=; ContentItemIdentifier=; CraftLootDTO=; CraftLootRefTransactionDTO=; CrashReportingEnvironment=; CriticalFlowCapture=; CriticalFlowExpectation=; CriticalFlowSummary=; DownloadUrlRequestV2=; DownloadUrlResponseV2=; ElevationAction=; ElevationRequest=; EndOfGameLcdsClientReportV1=; EndOfGameLcdsEndOfGameStats=; EndOfGameLcdsHarassmentReport=; EndOfGameLcdsPlayerParticipantStatsSummary=; EndOfGameLcdsPointsPenalty=; EndOfGameLcdsRawStatDTO=; EndOfGameLcdsSpell=; EndOfGameLcdsTeamId=; EndOfGameLcdsTeamInfo=; EntitlementsToken=; EogLcdsGameDTO=; ExternalPluginsAvailability=; ExternalPluginsResource=; FailedInvite=; GameQueuesLcdsAllowSpectators=; GameQueuesLcdsGameQueueConfig=; GameflowLcdsGameDTO=; GameflowLcdsPlayerCredentialsDto=; GameflowLcdsReconnectInfoDto=; IdsDTO=; InviteType=; LCDSBroadcastNotification=; LCDSChampionReward=; LCDSGlobalRewards=; LCDSLoyaltyRewards=; LCDSLoyaltyStateChangeNotification=; LCDSLoyaltyStateChangeNotificationCategory=; LCDSPlayerMessagingSimpleMessage=; LCDSPlayerMessagingSimpleMessageResponse=; LcdsBotParticipant=; LcdsFailedJoinPlayer=; LcdsGameDTO=; LcdsGameInviteBaseRuntimeException=; LcdsGameMap=; LcdsGameNotification=; LcdsInvitationRequest=; LcdsInvitationState=; LcdsInviteFailed=; LcdsInvitePrivileges=; LcdsInvitee=; LcdsInviteeState=; LcdsInviter=; LcdsLobbyStatus=; LcdsMember=; LcdsPayloadDto=; LcdsPlayer=; LcdsPlayerParticipant=; LcdsPracticeGameConfig=; LcdsPracticeGameSearchResult=; LcdsRemovalReason=; LcdsRemovedFromLobbyNotification=; LcdsSimpleMessage=; LcdsSimpleMessageResponse=; LcdsStartChampSelectDto=; LcdsSummoner=; LobbyClientDynamicConfigurationNotification=; LogEvent=; LogSeverityLevels=; LolAccountVerificationAVSConfig=; LolAccountVerificationConfirmActivationPinRequest=; LolAccountVerificationConfirmActivationPinResponse=; LolAccountVerificationConfirmDeactivationPinRequest=; LolAccountVerificationConfirmDeactivationPinResponse=; LolAccountVerificationIsVerifiedResponse=; LolAccountVerificationLoginSession=; LolAccountVerificationLoginSessionState=; LolAccountVerificationPhoneNumberObfuscated=; LolAccountVerificationPhoneNumberResponse=; LolAccountVerificationPhoneNumberResponseData=; LolAccountVerificationPinResponseData=; LolAccountVerificationResponseError=; LolAccountVerificationSendActivationPinRequest=; LolAccountVerificationSendActivationPinResponse=; LolAccountVerificationSendActivationPinResponseData=; LolAccountVerificationSendDeactivationPinRequest=; LolAccountVerificationSendDeactivationPinResponse=; LolActiveBoostsActiveBoosts=; LolActiveBoostsEndOfGameStats=; LolActiveBoostsInventoryItem=; LolActiveBoostsInventoryItemDTO=; LolActiveBoostsInventoryItemWithPayload=; LolActiveBoostsItemOwnershipType=; LolActiveBoostsLoginDataPacket=; LolActiveBoostsLoyaltyRewardsSimplified=; LolActiveBoostsLoyaltyStatus=; LolActiveBoostsLoyaltyStatusNotification=; LolAntiAddictionAntiAddictionState=; LolAntiAddictionAntiAddictionToken=; LolAntiAddictionPolicyType=; LolBannersBannerFlag=; LolBannersBannerFrame=; LolBannersCapClashFlagEntitlementPayload=; LolBannersCapClashFrameEntitlementPayload=; LolBannersClashV2FlagRewardSpec=; LolBannersClashV2FrameRewardSpec=; LolBannersInventoryItemWithPayload=; LolBannersInventoryItemsByType=; LolBannersInventoryResponse=; LolBannersLoadout=; LolBannersLoadoutsSlot=; LolBannersSummonerProfileUpdate=; LolBannersTournamentFlagInventoryItem=; LolBannersTournamentFrameInventoryItem=; LolCareerStatsCareerStatsQueueType=; LolCareerStatsChampionQueueStatsResponse=; LolCareerStatsChampionStatistics=; LolCareerStatsEntitlementsToken=; LolCareerStatsExpertPlayer=; LolCareerStatsPositionStatistics=; LolCareerStatsPositionStatsQueryRequest=; LolCareerStatsStatisticsByQueue=; LolCareerStatsStatisticsPercentilesResponse=; LolCareerStatsStatsQueryRequest=; LolCareerStatsSummonersRiftPosition=; LolCatalogBundled=; LolCatalogBundledItem=; LolCatalogBundledItemCost=; LolCatalogCatalogItem=; LolCatalogCatalogPluginItem=; LolCatalogCatalogPluginItemAssets=; LolCatalogCatalogPluginItemWithDetails=; LolCatalogCatalogPluginPrice=; LolCatalogCatalogPluginRetailDiscount=; LolCatalogChampionSkinEmblem=; LolCatalogChampionSkinEmblemPath=; LolCatalogChampionSkinEmblemPosition=; LolCatalogGameDataChampion=; LolCatalogGameDataChampionChroma=; LolCatalogGameDataChampionSkin=; LolCatalogGameDataChampionSummary=; LolCatalogGameDataItemReference=; LolCatalogGameDataStatstone=; LolCatalogGameDataStatstonePack=; LolCatalogGameDataStatstoneSet=; LolCatalogGameDataStatstonesInfo=; LolCatalogGameDataSummonerEmote=; LolCatalogGameDataSummonerIcon=; LolCatalogGameDataWardSkin=; LolCatalogInventoryContent=; LolCatalogInventoryOwnership=; LolCatalogItemChoiceDetails=; LolCatalogItemCost=; LolCatalogItemDetails=; LolCatalogItemKey=; LolCatalogItemLocalization=; LolCatalogItemMetadataEntry=; LolCatalogSale=; LolCatalogSkinLineDescriptionInfo=; LolCatalogSkinLineInfo=; LolCatalogSkinLineTier=; LolChallengesChallengeData=; LolChallengesChallengeLevelData=; LolChallengesChallengePlayerData=; LolChallengesChallengePoints=; LolChallengesChallengeRequirementMappingName=; LolChallengesChallengeSeason=; LolChallengesChallengeSignedUpdatePayload=; LolChallengesChallengeThreshold=; LolChallengesChallengeThresholdReward=; LolChallengesChallengesPlayerPreferences=; LolChallengesChallengesRMSNotification=; LolChallengesChallengesRMSPayload=; LolChallengesClientState=; LolChallengesEndOfGameStats=; LolChallengesFriendLevelsData=; LolChallengesFriendResource=; LolChallengesGameDataChallengeConfig=; LolChallengesGameDataChallengeTitle=; LolChallengesGameDataChallengesData=; LolChallengesGameflowGameData=; LolChallengesGameflowPhase=; LolChallengesGameflowSession=; LolChallengesInventoryItem=; LolChallengesLcuChallengeNotification=; LolChallengesLoginPlayerData=; LolChallengesNotificationDisplayType=; LolChallengesQueue=; LolChallengesSequenceEvent=; LolChallengesSource=; LolChallengesUICategoryProgress=; LolChallengesUIChallenge=; LolChallengesUIChallengePenalty=; LolChallengesUIChallengeReward=; LolChallengesUIChallengeThreshold=; LolChallengesUIPlayerSummary=; LolChallengesUITitle=; LolChallengesUserResource=; LolChampSelectBenchChampion=; LolChampSelectChampGridChampion=; LolChampSelectChampSelectAction=; LolChampSelectChampSelectBannedChampions=; LolChampSelectChampSelectChatRoomDetails=; LolChampSelectChampSelectMySelection=; LolChampSelectChampSelectPinDropNotification=; LolChampSelectChampSelectPinDropSummoner=; LolChampSelectChampSelectPlayerSelection=; LolChampSelectChampSelectSession=; LolChampSelectChampSelectSummoner=; LolChampSelectChampSelectSwapContract=; LolChampSelectChampSelectSwapNotification=; LolChampSelectChampSelectSwapState=; LolChampSelectChampSelectTimer=; LolChampSelectChampSelectTradeContract=; LolChampSelectChampSelectTradeNotification=; LolChampSelectChampSelectTradeState=; LolChampSelectChampionQuestSkinInfo=; LolChampSelectChampionSelection=; LolChampSelectCollectionsChampionChroma=; LolChampSelectCollectionsChampionMastery=; LolChampSelectCollectionsChampionMinimal=; LolChampSelectCollectionsChampionQuestSkin=; LolChampSelectCollectionsChampionSkin=; LolChampSelectCollectionsChampionSkinEmblem=; LolChampSelectCollectionsChampionSkinEmblemPath=; LolChampSelectCollectionsChampionSkinEmblemPosition=; LolChampSelectCollectionsChampionSkinMinimal=; LolChampSelectCollectionsOwnership=; LolChampSelectCollectionsRental=; LolChampSelectEntitledFeatureState=; LolChampSelectGameDataSummonerSpell=; LolChampSelectLegacyChampSelectAction=; LolChampSelectLegacyChampSelectBannedChampions=; LolChampSelectLegacyChampSelectChatRoomDetails=; LolChampSelectLegacyChampSelectMySelection=; LolChampSelectLegacyChampSelectPlayerSelection=; LolChampSelectLegacyChampSelectSession=; LolChampSelectLegacyChampSelectTimer=; LolChampSelectLegacyChampSelectTradeContract=; LolChampSelectLegacyChampSelectTradeState=; LolChampSelectLegacyChampionSelectPreferences=; LolChampSelectLegacyCollectionsChampion=; LolChampSelectLegacyCollectionsOwnership=; LolChampSelectLegacyCollectionsRental=; LolChampSelectLegacyGameflowGameClient=; LolChampSelectLegacyGameflowGameData=; LolChampSelectLegacyGameflowGameDodge=; LolChampSelectLegacyGameflowGameDodgeState=; LolChampSelectLegacyGameflowPhase=; LolChampSelectLegacyGameflowSession=; LolChampSelectLegacyInventoryItemWithPayload=; LolChampSelectLegacyLobbyStatus=; LolChampSelectLegacyLoginSession=; LolChampSelectLegacyLoginSessionStates=; LolChampSelectLegacyMucJwtDto=; LolChampSelectLegacyPlayerStatus=; LolChampSelectLegacyQueue=; LolChampSelectLegacyQueueGameTypeConfig=; LolChampSelectLegacySettingCategoryResource=; LolChampSelectLegacySummoner=; LolChampSelectLegacyTeamBoost=; LolChampSelectLoginSession=; LolChampSelectMucJwtDto=; LolChampSelectMutedPlayerInfo=; LolChampSelectSettingsResource=; LolChampSelectSfxNotification=; LolChampSelectSkinSelectorChildSkin=; LolChampSelectSkinSelectorInfo=; LolChampSelectSkinSelectorSkin=; LolChampSelectTeamBoost=; LolChampionsChampionQuestSkinInfo=; LolChampionsCollectionsChampion=; LolChampionsCollectionsChampionChroma=; LolChampionsCollectionsChampionMinimal=; LolChampionsCollectionsChampionPlayableCounts=; LolChampionsCollectionsChampionQuestSkin=; LolChampionsCollectionsChampionSkin=; LolChampionsCollectionsChampionSkinEmblem=; LolChampionsCollectionsChampionSkinEmblemPath=; LolChampionsCollectionsChampionSkinEmblemPosition=; LolChampionsCollectionsChampionSkinMinimal=; LolChampionsCollectionsChampionSpell=; LolChampionsCollectionsChampionTacticalInfo=; LolChampionsCollectionsOwnership=; LolChampionsCollectionsRental=; LolChampionsGameDataChampion=; LolChampionsGameDataChampionChroma=; LolChampionsGameDataChampionQuestSkin=; LolChampionsGameDataChampionSkin=; LolChampionsGameDataChampionSpell=; LolChampionsGameDataChampionSummary=; LolChampionsGameDataChampionTacticalInfo=; LolChampionsGameDataQuestSkinDescriptionInfo=; LolChampionsGameDataQuestSkinInfo=; LolChampionsInventoryItemWithPayload=; LolChampionsLcdsDynamicClientConfig=; LolChampionsLoginSession=; LolChampionsLoginSessionStates=; LolChampionsLoyaltyStatus=; LolChampionsLoyaltyStatusNotification=; LolChampionsPlayerNotification=; LolChampionsQuestSkinDescriptionInfo=; LolChampionsSummoner=; LolChatAccountState=; LolChatActiveConversationResource=; LolChatAuthResourceRsoAccessToken=; LolChatAuthType=; LolChatBlocked=; LolChatBlockedList=; LolChatBlockedPlayerResource=; LolChatChampSelection=; LolChatChatDomainConfig=; LolChatChatFriendUpdate=; LolChatChatMessage=; LolChatChatMessageList=; LolChatChatPlatformLoginSession=; LolChatChatPlatformLoginSessionState=; LolChatChatServiceDynamicClientConfig=; LolChatChatSessionState=; LolChatChatSettings=; LolChatChatSummoner=; LolChatChatWindowSettings=; LolChatCidBody=; LolChatConfigReadinessEnum=; LolChatConfigStatus=; LolChatConfigType=; LolChatContentCookies=; LolChatConversation=; LolChatConversationJoinFederated=; LolChatConversationList=; LolChatConversationMessageResource=; LolChatConversationResource=; LolChatConversationUpdate=; LolChatDebugResource=; LolChatEndOfGamePlayer=; LolChatEndOfGameStats=; LolChatEndOfGameTeam=; LolChatError=; LolChatErrorList=; LolChatErrorResource=; LolChatFriend=; LolChatFriendCountsResource=; LolChatFriendGroup=; LolChatFriendGroupCreate=; LolChatFriendGroupList=; LolChatFriendGroupOrder=; LolChatFriendGroupUpdate=; LolChatFriendList=; LolChatFriendRequest=; LolChatFriendRequestAdd=; LolChatFriendRequestDirection=; LolChatFriendRequestList=; LolChatFriendRequestResource=; LolChatFriendResource=; LolChatFriendSubscriptionType=; LolChatGameDataChampionSummary=; LolChatGameflowGameData=; LolChatGameflowGameMap=; LolChatGameflowPhase=; LolChatGameflowSession=; LolChatGroupResource=; LolChatIdBody=; LolChatLcuSocialConfig=; LolChatLeagueDivision=; LolChatLeagueQueueType=; LolChatLobbyMember=; LolChatLobbyPlayerStatus=; LolChatLobbyStatus=; LolChatMessage=; LolChatMessageList=; LolChatMessagePost=; LolChatMessageSend=; LolChatMessageType=; LolChatMucJwtDto=; LolChatMultiGamePresence=; LolChatMultiGamePresenceList=; LolChatMultiGamePresenceSharedPayload=; LolChatMultiGamePresenceUpdate=; LolChatMuteType=; LolChatMutedPlayerInfo=; LolChatNameBody=; LolChatParticipant=; LolChatParticipantList=; LolChatPatchlineMetadata=; LolChatPidBody=; LolChatPlayerMuteStatus=; LolChatPlayerMuteUpdate=; LolChatPlayerPreferences=; LolChatPluginRegionLocaleChangedEvent=; LolChatPresenceProduct=; LolChatProductMetadata=; LolChatProductMetadataMap=; LolChatQueue=; LolChatQueueCustomGameSpectatorPolicy=; LolChatQueueGameTypeConfig=; LolChatRankedQueueStats=; LolChatRankedStats=; LolChatRsoAuthorization=; LolChatSanitizeRequest=; LolChatSanitizeResponse=; LolChatSanitizerStatus=; LolChatSession=; LolChatSessionResource=; LolChatSessionState=; LolChatSettingsResource=; LolChatSpectateGameInfoResource=; LolChatSummonerStatus=; LolChatTeamPlayerEntry=; LolChatTranslateRequest=; LolChatTranslateResponse=; LolChatTranslateResult=; LolChatUserResource=; LolChatcookie=; LolClashBlockedPlayerResource=; LolClashBracket=; LolClashBracketReadyNotification=; LolClashBracketUpdateNotification=; LolClashChangeIconRequest=; LolClashChangeNameRequest=; LolClashClashConfig=; LolClashClashDisabledConfig=; LolClashClashSettingCategory=; LolClashClashState=; LolClashClashVisibility=; LolClashClientFailedInvite=; LolClashClubsSummoner=; LolClashEogPlayerUpdateDTO=; LolClashFindPlayers=; LolClashFindTeams=; LolClashFoundationError=; LolClashGameflowAvailability=; LolClashGameflowGameDodge=; LolClashGameflowPartiesRegistrationStatus=; LolClashGameflowPhase=; LolClashGameflowSession=; LolClashKdaClassification=; LolClashKickRequest=; LolClashLftState=; LolClashLoginSession=; LolClashLoginSessionState=; LolClashMatchmakingDodgeData=; LolClashMatchmakingDodgeState=; LolClashMatchmakingDodgeWarning=; LolClashMatchmakingReadyCheckResource=; LolClashMatchmakingReadyCheckResponse=; LolClashMatchmakingReadyCheckState=; LolClashMatchmakingSearchResource=; LolClashMemberBanUnbanNotification=; LolClashMucJwtDto=; LolClashNoShowPingDTO=; LolClashNoShowPingResponse=; LolClashNoShowPingResponseData=; LolClashNotifyReason=; LolClashOfferTicketRequest=; LolClashPendingRosterNotification=; LolClashPlayerChatRoster=; LolClashPlayerData=; LolClashPlayerNotification=; LolClashPlayerNotificationData=; LolClashPlayerRewards=; LolClashPlayerState=; LolClashPlayerTournamentData=; LolClashPlayerUpdateNotification=; LolClashPlaymodeRestrictedInfo=; LolClashPresenceState=; LolClashProfileInfo=; LolClashQueue=; LolClashQueueAvailability=; LolClashQueueGameCategory=; LolClashQueueGameTypeConfig=; LolClashQueueReward=; LolClashRankedScoutingMember=; LolClashRankedScoutingTopChampion=; LolClashReadyCheckInfo=; LolClashRegisteredRosterNotification=; LolClashRoster=; LolClashRosterDetails=; LolClashRosterDynamicStateNotification=; LolClashRosterMatchAggregatedStats=; LolClashRosterMember=; LolClashRosterMemberState=; LolClashRosterNotifyReason=; LolClashRosterPeriodAggregatedStats=; LolClashRosterPhaseInfo=; LolClashRosterPlayerAggregatedStats=; LolClashRosterPlayerNotification=; LolClashRosterStats=; LolClashRosterWithdrawNotification=; LolClashScoutingChampionMastery=; LolClashScoutingChampions=; LolClashScoutingSeasonChampion=; LolClashSetPositionRequest=; LolClashSetTicketRequest=; LolClashSettingCategory=; LolClashSimpleStateFlag=; LolClashSimpleStateStatus=; LolClashSuggestedInvite=; LolClashSuggestionInvite=; LolClashSuggestionInvitee=; LolClashTeamOpenState=; LolClashThemeVp=; LolClashThirdPartyApiPlayer=; LolClashThirdPartyApiRoster=; LolClashTicketOffer=; LolClashTournament=; LolClashTournamentGameEnd=; LolClashTournamentHistoryAndWinners=; LolClashTournamentNotifyReason=; LolClashTournamentPhase=; LolClashTournamentPhaseProgressNotificationDTO=; LolClashTournamentState=; LolClashTournamentStateInfo=; LolClashTournamentSummary=; LolClashTournamentUpdatedNotification=; LolClashTournamentUpdatedNotificationDTO=; LolClashTournamentWinnerHistory=; LolClashTournamentWinnerInfo=; LolClashUserResource=; LolCollectionsAccountIdAndSummonerId=; LolCollectionsCollectionsChampionMastery=; LolCollectionsCollectionsChestEligibility=; LolCollectionsCollectionsOwnership=; LolCollectionsCollectionsRental=; LolCollectionsCollectionsSummonerBackdrop=; LolCollectionsCollectionsSummonerBackdropType=; LolCollectionsCollectionsSummonerSpells=; LolCollectionsCollectionsTopChampionMasteries=; LolCollectionsCollectionsWardSkin=; LolCollectionsCollectionsWardSkinList=; LolCollectionsGameDataChampionMasteries=; LolCollectionsGameDataChampionMasteryGroup=; LolCollectionsGameDataChampionMasteryRow=; LolCollectionsGameDataChampionMasteryTree=; LolCollectionsGameDataChampionQuestSkin=; LolCollectionsGameDataChampionSkin=; LolCollectionsGameDataChampionSummary=; LolCollectionsGameDataQuestSkinInfo=; LolCollectionsGameDataSplashMetadata=; LolCollectionsInventoryItem=; LolCollectionsInventoryItemDTO=; LolCollectionsInventoryItemWithPayload=; LolCollectionsItemOwnershipType=; LolCollectionsLcdsDynamicClientConfig=; LolCollectionsLoginSession=; LolCollectionsLoginSessionStates=; LolCollectionsNumberFormattingBehavior=; LolCollectionsNumberFormattingData=; LolCollectionsPlayerNotification=; LolCollectionsSummoner=; LolCollectionsSummonerProfile=; LolCollectionsSummonerProfileUpdate=; LolContentTargetingAccountIdAndSummonerId=; LolContentTargetingCollectionsChampionMastery=; LolContentTargetingContentTargetingFilterResponse=; LolContentTargetingContentTargetingLocaleResponse=; LolContentTargetingDataModelResponse=; LolContentTargetingGameflowGameData=; LolContentTargetingGameflowPhase=; LolContentTargetingGameflowSession=; LolContentTargetingGeoInfo=; LolContentTargetingGeoInfoResponse=; LolContentTargetingLoginSession=; LolContentTargetingLoginSessionState=; LolContentTargetingMission=; LolContentTargetingPlatformConfig=; LolContentTargetingQueue=; LolContentTargetingQueueGameCategory=; LolContentTargetingRankedDivision=; LolContentTargetingRankedQueue=; LolContentTargetingRankedQueueStats=; LolContentTargetingRankedStats=; LolContentTargetingRegionLocale=; LolContentTargetingSettingsResource=; LolContentTargetingSummoner=; LolContentTargetingTargetingAttributes=; LolContentTargetingToken=; LolCosmeticsAccountSettingsCategoryDataResource=; LolCosmeticsCapOffer=; LolCosmeticsCompanionsGroupViewModel=; LolCosmeticsCompanionsGroupedViewModel=; LolCosmeticsCosmeticSettingsResource=; LolCosmeticsCosmeticsCompanion=; LolCosmeticsCosmeticsCompanionViewModel=; LolCosmeticsCosmeticsOfferPrice=; LolCosmeticsCosmeticsTFTDamageSkin=; LolCosmeticsCosmeticsTFTDamageSkinViewModel=; LolCosmeticsCosmeticsTFTMapSkin=; LolCosmeticsCosmeticsTFTMapSkinViewModel=; LolCosmeticsCosmeticsTFTPlaybook=; LolCosmeticsCosmeticsTFTPlaybookAugment=; LolCosmeticsCosmeticsTFTPlaybookAugmentEffectAmount=; LolCosmeticsCosmeticsTFTPlaybookViewModel=; LolCosmeticsGameDataCompanion=; LolCosmeticsGameDataTFTCosmeticsDefaults=; LolCosmeticsGameDataTFTDamageSkin=; LolCosmeticsGameDataTFTMapSkin=; LolCosmeticsGameDataTFTPlaybook=; LolCosmeticsLoadout=; LolCosmeticsLoadoutItem=; LolCosmeticsLoadoutUpdateDto=; LolCosmeticsTFTDamageSkinGroupViewModel=; LolCosmeticsTFTDamageSkinGroupedViewModel=; LolCosmeticsTFTMapSkinGroupViewModel=; LolCosmeticsTFTMapSkinGroupedViewModel=; LolCosmeticsTFTPlaybookGroupViewModel=; LolCosmeticsTFTPlaybookGroupedViewModel=; LolCosmeticsTFTSettingsDataResource=; LolCosmeticsTFTSettingsResource=; LolCosmeticsUserResource=; LolDiscordRpGameDataChampionSummary=; LolDiscordRpPartyPresenceData=; LolDropsCapDropsDropTablePityInfo=; LolDropsCapDropsDropTableWithPityDTO=; LolDropsCapDropsOddsListEntryDTO=; LolDropsCapDropsOddsTreeNodeDTO=; LolDropsCapDropsPityCountDTO=; LolEmailVerificationAccessToken=; LolEmailVerificationEmailUpdate=; LolEmailVerificationEmailVerificationSession=; LolEmailVerificationRegionLocale=; LolEmailVerificationRemoteEmailVerificationSession=; LolEmailVerificationValidationStatus=; LolEndOfGameChampionMasteryGrade=; LolEndOfGameChampionMasteryMini=; LolEndOfGameChampionMasteryUpdate=; LolEndOfGameEndOfGamePlayer=; LolEndOfGameEndOfGamePoints=; LolEndOfGameEndOfGameStats=; LolEndOfGameEndOfGameTeam=; LolEndOfGameEndOfGameTeamBoost=; LolEndOfGameGameClientEndOfGame=; LolEndOfGameGameClientEndOfGameStats=; LolEndOfGameGameDataChampion=; LolEndOfGameGameDataChampionQuestSkin=; LolEndOfGameGameDataChampionSkin=; LolEndOfGameGameDataChampionSummary=; LolEndOfGameGameDataCompanion=; LolEndOfGameGameDataQuestSkinInfo=; LolEndOfGameGameDataSkinChroma=; LolEndOfGameGameDataTftChampion=; LolEndOfGameGameDataTftItem=; LolEndOfGameGameDataTftPlaybook=; LolEndOfGameGameDataTftRegionPortal=; LolEndOfGameGameDataTftTrait=; LolEndOfGameGameflowAvailability=; LolEndOfGameGameflowClient=; LolEndOfGameGameflowGameData=; LolEndOfGameGameflowPhase=; LolEndOfGameGameflowSession=; LolEndOfGameLobbyInvitation=; LolEndOfGameLoginDataPacket=; LolEndOfGameLoginSession=; LolEndOfGameLoginSessionStates=; LolEndOfGameMucJwtDto=; LolEndOfGamePlayerReport=; LolEndOfGameQueue=; LolEndOfGameRerollDataBagForClientV1=; LolEndOfGameSimpleMessage=; LolEndOfGameSummoner=; LolEndOfGameTFTEndOfGameCompanionViewModel=; LolEndOfGameTFTEndOfGameCustomAugmentContainerViewModel=; LolEndOfGameTFTEndOfGameItemViewModel=; LolEndOfGameTFTEndOfGamePieceViewModel=; LolEndOfGameTFTEndOfGamePlaybookViewModel=; LolEndOfGameTFTEndOfGamePlayerViewModel=; LolEndOfGameTFTEndOfGameTraitViewModel=; LolEndOfGameTFTEndOfGameViewModel=; LolEsportStreamNotificationsESportStreamNotificationsConfig=; LolEsportStreamNotificationsESportsAPI_streamgroups=; LolEsportStreamNotificationsESportsAPI_streamgroups_root=; LolEsportStreamNotificationsESportsLiveStreams=; LolEsportStreamNotificationsESportsStreams=; LolEsportStreamNotificationsEsportsAPI_highlanderTournaments=; LolEsportStreamNotificationsEsportsAPI_highlanderTournaments_brackets=; LolEsportStreamNotificationsEsportsAPI_highlanderTournaments_matches=; LolEsportStreamNotificationsEsportsAPI_highlanderTournaments_roster=; LolEsportStreamNotificationsEsportsAPI_highlanderTournaments_rosters=; LolEsportStreamNotificationsEsportsAPI_teams=; LolEsportStreamNotificationsGameflowPhase=; LolEsportStreamNotificationsGameflowSession=; LolEsportStreamNotificationsLiveMatch=; LolEsportStreamNotificationsLiveMatchTeam=; LolEsportStreamNotificationsPlayerNotificationResource=; LolEventShopAccessTokenResource=; LolEventShopBalance=; LolEventShopBaseSkinLineDto=; LolEventShopBundleOfferUIData=; LolEventShopBundledItemPricingInfo=; LolEventShopBundledItemUIData=; LolEventShopCapOffer=; LolEventShopCapOfferPayloadEntry=; LolEventShopCapOrdersDataDto=; LolEventShopCapOrdersMetaDto=; LolEventShopCapOrdersOfferContextDto=; LolEventShopCapOrdersOfferDto=; LolEventShopCapOrdersOrderDto=; LolEventShopCapOrdersSubOrderDto=; LolEventShopCapOrdersTypedIdentifierDto=; LolEventShopCatalogEntry=; LolEventShopCatalogItem=; LolEventShopCatalogPluginItem=; LolEventShopCatalogPluginItemAssets=; LolEventShopCatalogPluginItemWithDetails=; LolEventShopCatalogPluginPrice=; LolEventShopCatalogPluginSale=; LolEventShopCategoryOffersUIData=; LolEventShopCelebrationType=; LolEventShopCelebrationUIData=; LolEventShopChampionSkinEmblem=; LolEventShopChampionSkinEmblemPath=; LolEventShopChampionSkinEmblemPosition=; LolEventShopClaimSelectUIData=; LolEventShopClientCacheClearMessageDTO=; LolEventShopClientConfigContentDrop=; LolEventShopContentDrop=; LolEventShopCounter=; LolEventShopCounterInstance=; LolEventShopCurrencyDTO=; LolEventShopDiscountPricingInfo=; LolEventShopEndOfGameXp=; LolEventShopEndOfGameXpNotification=; LolEventShopEntityInstance=; LolEventShopEventBackgroundUIData=; LolEventShopEventDetailsUIData=; LolEventShopEventShop=; LolEventShopEventShopClientConfig=; LolEventShopEventShopError=; LolEventShopEventShopInfoUIData=; LolEventShopExternalCatalogInventoryOwnership=; LolEventShopExternalCatalogItemCost=; LolEventShopExternalCatalogItemKey=; LolEventShopExternalCatalogPluginItem=; LolEventShopExternalCatalogPluginItemAssets=; LolEventShopExternalCatalogPluginItemWithDetails=; LolEventShopExternalCatalogPluginPrice=; LolEventShopExternalCatalogPluginRetailDiscount=; LolEventShopExternalCatalogSale=; LolEventShopExternalItemMetadataEntry=; LolEventShopGrantStatus=; LolEventShopGrantorDescription=; LolEventShopGroup=; LolEventShopInventoryCacheEntry=; LolEventShopInventoryDTO=; LolEventShopInventoryItem=; LolEventShopInventoryItemDTO=; LolEventShopInventoryItemWithPayload=; LolEventShopInventoryNotification=; LolEventShopInventoryOwnership=; LolEventShopInventoryResponseDTO=; LolEventShopItem=; LolEventShopItemChoiceDetails=; LolEventShopItemChoices=; LolEventShopItemCost=; LolEventShopItemDefinition=; LolEventShopItemDetails=; LolEventShopItemKey=; LolEventShopItemMetadataEntry=; LolEventShopItemOrderDTO=; LolEventShopItemOwnership=; LolEventShopItemOwnershipType=; LolEventShopItemPrice=; LolEventShopItemSale=; LolEventShopItemUIData=; LolEventShopLargeSelectionDisplayUIData=; LolEventShopLevelBoostPurchaseUIData=; LolEventShopLoginSession=; LolEventShopLoginSessionStates=; LolEventShopLoyaltyRewards=; LolEventShopLoyaltyRewardsSimplified=; LolEventShopLoyaltyStatus=; LolEventShopLoyaltyStatusNotification=; LolEventShopMilestone=; LolEventShopMilestoneInstance=; LolEventShopNavigationButtonUIData=; LolEventShopOffer=; LolEventShopOfferCategory=; LolEventShopOfferPromotionType=; LolEventShopOfferStates=; LolEventShopOfferUIData=; LolEventShopOrderNotificationResource=; LolEventShopPassOwnershipTypes=; LolEventShopPlayerNotification=; LolEventShopPlayerSettingsData=; LolEventShopPriceDetail=; LolEventShopPriceOptionDto=; LolEventShopProgressInfoUIData=; LolEventShopPurchasableItem=; LolEventShopPurchaseItem=; LolEventShopPurchaseOfferOrderStates=; LolEventShopPurchaseOfferOrderStatus=; LolEventShopPurchaseOfferOrderStatuses=; LolEventShopPurchaseOfferRequest=; LolEventShopPurchaseOfferRequestV3=; LolEventShopPurchaseOfferResponseV3=; LolEventShopPurchaseOption=; LolEventShopPurchaseOrderRequestDTO=; LolEventShopPurchaseOrderResponseDTO=; LolEventShopPurchaseRequest=; LolEventShopPurchaseResponse=; LolEventShopPurchaseWidgetConfig=; LolEventShopRMSPayload=; LolEventShopRegionLocale=; LolEventShopRepeat=; LolEventShopRequestDTO-SelectionRequestDTO=; LolEventShopRequestDTO-vector-SelectionRequestDTO=; LolEventShopRequestMetadataDTO=; LolEventShopResponseDTO-SvcRewardGrant=; LolEventShopResponseDTO-map-RewardGroupId-SelectGrantStatus=; LolEventShopResponseDTO-vector-SvcRewardGrant=; LolEventShopResponseDTO-vector-SvcRewardGroup=; LolEventShopResponseMetadataDTO=; LolEventShopReward=; LolEventShopRewardChoiceUIData=; LolEventShopRewardGrant=; LolEventShopRewardStatus=; LolEventShopRewardStrategy=; LolEventShopRewardTrack=; LolEventShopRewardTrackConfiguration=; LolEventShopRewardTrackItem=; LolEventShopRewardTrackItemHeaderType=; LolEventShopRewardTrackItemOption=; LolEventShopRewardTrackItemStates=; LolEventShopRewardTrackItemTag=; LolEventShopRewardTrackProgress=; LolEventShopRewardTrackXP=; LolEventShopRewardsConfig=; LolEventShopRiotMessagingServiceMessage=; LolEventShopRmsEntitlementPayload=; LolEventShopRmsStoreEntitlementItem=; LolEventShopRmsStoreEntitlementPayload=; LolEventShopRmsWalletPayload=; LolEventShopRmsXboxSubscriptionChange=; LolEventShopSale=; LolEventShopSelectGrantStatusResponse=; LolEventShopSelectionRequestDTO=; LolEventShopSelectionStrategyConfig=; LolEventShopSettingsResource=; LolEventShopSimpleInventoryDTO=; LolEventShopSimpleInventoryResponseDTO=; LolEventShopSkinLineDescriptionDto=; LolEventShopSkinLineDescriptionInfo=; LolEventShopSkinLineInfo=; LolEventShopSkinLineItemDto=; LolEventShopSkinLineTier=; LolEventShopSummonerIcon=; LolEventShopSvcRewardGrant=; LolEventShopSvcRewardGrantElement=; LolEventShopSvcRewardGroup=; LolEventShopTokenShop=; LolEventShopTokenShopUIData=; LolEventShopTokenUpsell=; LolEventShopTokenUpsellLockedType=; LolEventShopTransaction=; LolEventShopTransactionResponseDTO=; LolEventShopUnclaimedRewardsUIData=; LolEventShopValidateOfferError=; LolEventShopValidateOfferRequestV3=; LolEventShopValidateOfferResponseV3=; LolEventShopValidationError=; LolEventShopValidationErrorEntry=; LolEventShopValidationRequest=; LolEventShopValidationRequestItem=; LolEventShopValidationResponse=; LolEventShopValidationResponseItem=; LolEventShopWallet=; LolEventShopWalletCacheEntry=; LolEventShopWalletDTO=; LolEventShopWalletResponseDTO=; LolEventShopXboxSubscriptionStatus=; LolFeaturedModesAccountIdAndSummonerId=; LolFeaturedModesCollectionsOwnership=; LolFeaturedModesCollectionsSummonerIcon=; LolFeaturedModesEligibility=; LolFeaturedModesEligibilityRestriction=; LolFeaturedModesEligibilityRestrictionCode=; LolFeaturedModesFeaturedModesConfig=; LolFeaturedModesGameflowAvailability=; LolFeaturedModesGameflowAvailabilityState=; LolFeaturedModesGameflowPhase=; LolFeaturedModesGameflowSession=; LolFeaturedModesLoginSession=; LolFeaturedModesLoginSessionStates=; LolFeaturedModesMaps=; LolFeaturedModesPlayerNotificationResource=; LolFeaturedModesQueue=; LolFeaturedModesQueueAvailability=; LolFeaturedModesQueueGameCategory=; LolGameClientChatGameClientChatMessageResource=; LolGameClientChatMutedPlayerInfo=; LolGameQueuesLoginDataPacket=; LolGameQueuesLoginSession=; LolGameQueuesLoginSessionStates=; LolGameQueuesPlatformConfigEnabledMap=; LolGameQueuesQueue=; LolGameQueuesQueueAvailability=; LolGameQueuesQueueCustomGame=; LolGameQueuesQueueCustomGameSpectatorPolicy=; LolGameQueuesQueueCustomGameSubcategory=; LolGameQueuesQueueGameCategory=; LolGameQueuesQueueGameTypeConfig=; LolGameQueuesQueueReward=; LolGameQueuesQueueTranslation=; LolGameSettingsLoginSession=; LolGameSettingsLoginSessionStates=; LolGameSettingsgamesettingsgameclient=; LolGameSettingsgamesettingsgameflowsession=; LolGameflowCrashReportingSettings=; LolGameflowGameModeSpellList=; LolGameflowGameStateUpdate=; LolGameflowGameflowAvailability=; LolGameflowGameflowAvailabilityState=; LolGameflowGameflowGameClient=; LolGameflowGameflowGameData=; LolGameflowGameflowGameDodge=; LolGameflowGameflowGameDodgeState=; LolGameflowGameflowGameMap=; LolGameflowGameflowPhase=; LolGameflowGameflowProcessInfo=; LolGameflowGameflowSession=; LolGameflowGameflowWatchPhase=; LolGameflowInstallPaths=; LolGameflowLobbyStatus=; LolGameflowLoginSession=; LolGameflowLoginSessionStates=; LolGameflowPatcherProductState=; LolGameflowPatcherProductStateAction=; LolGameflowPlayerStatus=; LolGameflowQueue=; LolGameflowQueueAvailability=; LolGameflowQueueCustomGameSpectatorPolicy=; LolGameflowQueueGameCategory=; LolGameflowQueueGameTypeConfig=; LolGameflowQueueReward=; LolGameflowRegionLocale=; LolGameflowRegistrationStatus=; LolGameflowReplaysSettingsData=; LolGameflowReplaysSettingsResource=; LolGameflowSpectateGameInfoResource=; LolGeoinfoGeoInfo=; LolGeoinfoGeoInfoConfig=; LolGeoinfoGeoInfoResponse=; LolGeoinfoLoginSession=; LolGeoinfoLoginSessionState=; LolGeoinfoWhereAmIRequest=; LolGeoinfoWhereAmIResponse=; LolHeartbeatLoginSession=; LolHeartbeatLoginSessionStates=; LolHighlightsHighlight=; LolHighlightsHighlightsConfig=; LolHighlightsHighlightsDynamicConfig=; LolHighlightsHighlightsSettingsData=; LolHighlightsHighlightsSettingsResource=; LolHoneyfruitAccountClaimStatus=; LolHoneyfruitAccountDetails=; LolHoneyfruitGAMHSMatchHistoryData=; LolHoneyfruitGAMHSMatchHistoryList=; LolHoneyfruitGameflowPhase=; LolHoneyfruitGarenaRegionLeagueAccount=; LolHoneyfruitHoneyfruitActionType=; LolHoneyfruitHoneyfruitAuthRedirectMock=; LolHoneyfruitHoneyfruitLinkingAction=; LolHoneyfruitHoneyfruitLinkingFailureReason=; LolHoneyfruitHoneyfruitLinkingNotification=; LolHoneyfruitHoneyfruitLinkingServiceResponse=; LolHoneyfruitHoneyfruitLinkingState=; LolHoneyfruitHoneyfruitLinkingStatus=; LolHoneyfruitHoneyfruitLinkingStatusError=; LolHoneyfruitHoneyfruitPublisher=; LolHoneyfruitHoneyfruitRegionLocale=; LolHoneyfruitHoneyfruitSettingCategoryResource=; LolHoneyfruitHoneyfruitSettingCategoryResourceAccountClaim=; LolHoneyfruitHoneyfruitSettings=; LolHoneyfruitHoneyfruitSettingsAccountClaim=; LolHoneyfruitHoneyfruitVNGPublisherSettings=; LolHoneyfruitMatchHistoryGame=; LolHoneyfruitMatchHistoryGameList=; LolHoneyfruitMatchHistoryList=; LolHoneyfruitSummoner=; LolHoneyfruitV1AuthenticationRedirectInput=; LolHoneyfruitV1AuthenticationResponse=; LolHoneyfruitV1ResponseType=; LolHoneyfruitV1SuccessResponseDetails=; LolHoneyfruitVNGStatusResponse=; LolHonorV2AccountIdAndSummonerId=; LolHonorV2ApiHonorPlayerServerRequest=; LolHonorV2Ballot=; LolHonorV2DynamicHonorMessage=; LolHonorV2EligiblePlayer=; LolHonorV2EndOfGamePlayer=; LolHonorV2EndOfGameStats=; LolHonorV2EndOfGameTeam=; LolHonorV2GameflowGameData=; LolHonorV2GameflowPhase=; LolHonorV2GameflowSession=; LolHonorV2Honor=; LolHonorV2HonorConfig=; LolHonorV2HonorInteraction=; LolHonorV2HonorRecipient=; LolHonorV2HonorSummoner=; LolHonorV2LoginSession=; LolHonorV2LoginSessionStates=; LolHonorV2MutualHonor=; LolHonorV2MutualHonorPlayer=; LolHonorV2ProfileInfo=; LolHonorV2Queue=; LolHonorV2RetrieveProfileResponse=; LolHonorV2Reward=; LolHonorV2SequenceEvent=; LolHonorV2VendedHonorChange=; LolHonorV2VendedHonorState=; LolHonorV2VendedReward=; LolHonorV2VoteCompletion=; LolHovercardChatSession=; LolHovercardContentCookies=; LolHovercardFriendResult=; LolHovercardHovercardUserInfo=; LolHovercardPartyInfo=; LolHovercardPatchlineMetadata=; LolHovercardProductMetadata=; LolHovercardProductMetadataMap=; LolHovercardSummoner=; LolHovercardSummonerIdAndIcon=; LolHovercardSummonerIdAndName=; LolHovercardTopChampionMastery=; LolHovercardcookie=; LolInventoryAccessTokenResource=; LolInventoryCatalogItem=; LolInventoryClientCacheClearMessageDTO=; LolInventoryCurrencyDTO=; LolInventoryEndOfGameXp=; LolInventoryEndOfGameXpNotification=; LolInventoryInventoryCacheEntry=; LolInventoryInventoryDTO=; LolInventoryInventoryItem=; LolInventoryInventoryItemDTO=; LolInventoryInventoryItemWithPayload=; LolInventoryInventoryNotification=; LolInventoryInventoryResponseDTO=; LolInventoryItemKey=; LolInventoryItemOwnershipType=; LolInventoryLoginSession=; LolInventoryLoginSessionStates=; LolInventoryLoyaltyRewards=; LolInventoryLoyaltyRewardsSimplified=; LolInventoryLoyaltyStatus=; LolInventoryLoyaltyStatusNotification=; LolInventoryPlayerNotification=; LolInventoryRiotMessagingServiceMessage=; LolInventoryRmsEntitlementPayload=; LolInventoryRmsStoreEntitlementItem=; LolInventoryRmsStoreEntitlementPayload=; LolInventoryRmsWalletPayload=; LolInventoryRmsXboxSubscriptionChange=; LolInventorySimpleInventoryDTO=; LolInventorySimpleInventoryResponseDTO=; LolInventorySummonerIcon=; LolInventoryWallet=; LolInventoryWalletCacheEntry=; LolInventoryWalletDTO=; LolInventoryWalletResponseDTO=; LolInventoryXboxSubscriptionStatus=; LolItemSetsGameDataChampion=; LolItemSetsItemSet=; LolItemSetsItemSetBlock=; LolItemSetsItemSetItem=; LolItemSetsItemSets=; LolItemSetsLoginSession=; LolItemSetsLoginSessionStates=; LolItemSetsNamecheckAuthorization=; LolItemSetsNamecheckLoginDataPacket=; LolItemSetsNamecheckPayload=; LolItemSetsNamecheckResponse=; LolItemSetsPreferredItemSlot=; LolItemSetsValidateItemSetNameInput=; LolItemSetsValidateItemSetNameResponse=; LolKickoutKickoutMessage=; LolKrPlaytimeReminderPlaytimeReminder=; LolKrShutdownLawAllQueueShutdownStatus=; LolKrShutdownLawAntiAddictionState=; LolKrShutdownLawPolicyType=; LolKrShutdownLawQueueShutdownStatus=; LolKrShutdownLawRatingScreenInfo=; LolKrShutdownLawShutdownLawNotification=; LolKrShutdownLawShutdownLawStatus=; LolLeagueSessionAntiAddictionTokenEnvelope=; LolLeagueSessionLeagueSessionRMSNotification=; LolLeagueSessionLeagueSessionStatus=; LolLeagueSessionLeagueSessionTokenEnvelope=; LolLeaverBusterAllSummonerData=; LolLeaverBusterLeaverBusterNotificationResource=; LolLeaverBusterLeaverBusterNotificationType=; LolLeaverBusterLoginDataPacket=; LolLeaverBusterMatchmakingSearchErrorResource=; LolLeaverBusterMatchmakingSearchResource=; LolLeaverBusterPlayerNotificationResource=; LolLeaverBusterSimpleMessage=; LolLeaverBusterSummoner=; LolLicenseAgreementLicenseAgreement=; LolLicenseAgreementLicenseAgreementType=; LolLicenseAgreementLicenseServeLocation=; LolLicenseAgreementPluginRegionLocaleChangedEvent=; LolLoadoutsAccessTokenResource=; LolLoadoutsCreateLoadoutDTO=; LolLoadoutsCreateLoadoutRequestDTO=; LolLoadoutsCreateOrUpdateItemsRequest=; LolLoadoutsFrontendInventoryResponse=; LolLoadoutsGameflowGameData=; LolLoadoutsGameflowPhase=; LolLoadoutsGameflowSession=; LolLoadoutsGetItemsRequest=; LolLoadoutsInventoryDTO=; LolLoadoutsInventoryItemDTO=; LolLoadoutsInventoryResponseDTO=; LolLoadoutsItemKey=; LolLoadoutsLoadout=; LolLoadoutsLoadoutRequestDTOBase=; LolLoadoutsLoginSession=; LolLoadoutsLoginSessionStates=; LolLoadoutsQueue=; LolLoadoutsScopedLoadout=; LolLoadoutsSignGCORequestDTO=; LolLoadoutsUpdateLoadoutDTO=; LolLoadoutsUpdateLoadoutRequestDTO=; LolLobbyAccountIdAndSummonerId=; LolLobbyAmbassadorMessage=; LolLobbyAutoFillQueueDto=; LolLobbyBotParticipantDto=; LolLobbyChampionSkinSelection=; LolLobbyChatBlockedPlayerResource=; LolLobbyChatFriend=; LolLobbyChatFriendCounts=; LolLobbyCollectionsChampion=; LolLobbyCollectionsChampionMinimal=; LolLobbyCollectionsOwnership=; LolLobbyCollectionsRental=; LolLobbyCustomEligibilityDto=; LolLobbyCustomGameDto=; LolLobbyCustomGameSettingsDto=; LolLobbyCustomJoinOptionsDto=; LolLobbyEligibility=; LolLobbyEligibilityRestriction=; LolLobbyEligibilityRestrictionCode=; LolLobbyFriendAvailabilityAnalytics=; LolLobbyGameDataChampionSummary=; LolLobbyGameModeDto=; LolLobbyGameflowGameClient=; LolLobbyGameflowGameData=; LolLobbyGameflowGameDodge=; LolLobbyGameflowPhase=; LolLobbyGameflowSampleDto=; LolLobbyGameflowSampleTag=; LolLobbyGameflowSession=; LolLobbyGatekeeperRestrictionDto=; LolLobbyInventoryCacheEntry=; LolLobbyInventoryItem=; LolLobbyInvitationType=; LolLobbyJoinPartyAnalytics=; LolLobbyLcdsDynamicClientConfig=; LolLobbyLcdsGameMetaData=; LolLobbyLcdsPartyRewardsConfig=; LolLobbyLobby=; LolLobbyLobbyBotChampion=; LolLobbyLobbyBotDifficulty=; LolLobbyLobbyBotParams=; LolLobbyLobbyChangeGameDto=; LolLobbyLobbyChangeQueue=; LolLobbyLobbyCustomChampSelectStartResponse=; LolLobbyLobbyCustomFailedPlayer=; LolLobbyLobbyCustomGame=; LolLobbyLobbyCustomGameConfiguration=; LolLobbyLobbyCustomGameLobby=; LolLobbyLobbyCustomJoinParameters=; LolLobbyLobbyDto=; LolLobbyLobbyGameConfigDto=; LolLobbyLobbyInvitation=; LolLobbyLobbyInvitationDto=; LolLobbyLobbyInvitationState=; LolLobbyLobbyLastQueuedLobby=; LolLobbyLobbyLastQueuedMember=; LolLobbyLobbyMatchmakingLowPriorityDataResource=; LolLobbyLobbyMatchmakingSearchErrorResource=; LolLobbyLobbyMatchmakingSearchResource=; LolLobbyLobbyMatchmakingSearchState=; LolLobbyLobbyMember=; LolLobbyLobbyNotification=; LolLobbyLobbyParticipantDto=; LolLobbyLobbyPartyRewardType=; LolLobbyLobbyPartyRewards=; LolLobbyLobbyPositionPreferences=; LolLobbyLobbyRemovedFromGameReason=; LolLobbyLobbyStatus=; LolLobbyLobbyTimer=; LolLobbyLoginSession=; LolLobbyLoginSessionStates=; LolLobbyMatchmakingDodgeState=; LolLobbyMucJwtDto=; LolLobbyOpenPartyToggleAnalytics=; LolLobbyPartiesInvitationAnalytics=; LolLobbyPartiesInvitationPlayerAnalytics=; LolLobbyPartyChatDto=; LolLobbyPartyDto=; LolLobbyPartyEogStatusCategory=; LolLobbyPartyInviteAnalytics=; LolLobbyPartyMemberDto=; LolLobbyPartyMemberMetadataDto=; LolLobbyPartyMemberRoleEnum=; LolLobbyPartyNotificationEnvelopeDto=; LolLobbyPartyPresenceData=; LolLobbyPartyQueueEligibilityDto=; LolLobbyPartyReward=; LolLobbyPartyStatusDto=; LolLobbyPlayerCollectionDto=; LolLobbyPlayerDto=; LolLobbyPlayerStatus=; LolLobbyPlayerUpdateType=; LolLobbyPremadeMemberDto=; LolLobbyPremadePartyDto=; LolLobbyPremadeRelationshipAnalytics=; LolLobbyQueue=; LolLobbyQueueAvailability=; LolLobbyQueueCustomGame=; LolLobbyQueueCustomGameSpectatorPolicy=; LolLobbyQueueGameCategory=; LolLobbyQueueGameTypeConfig=; LolLobbyQueueRestrictionDto=; LolLobbyQueueReward=; LolLobbyQuickPlayPresetSlotDto=; LolLobbyRankedPositionInfoDTO=; LolLobbyRankedStatsUnsignedDTO=; LolLobbyReadyDto=; LolLobbyReceivedInvitationDto=; LolLobbyReceivedInvitationGameConfigDto=; LolLobbyRegistrationCredentials=; LolLobbyRegistrationStatus=; LolLobbyRiotMessagingServiceMessage=; LolLobbyServiceProxyPayload=; LolLobbySummoner=; LolLobbyTeamBuilderActionV1=; LolLobbyTeamBuilderAfkCheckStateV1=; LolLobbyTeamBuilderBackwardsTransitionInfoV1=; LolLobbyTeamBuilderBenchChampion=; LolLobbyTeamBuilderCellV1=; LolLobbyTeamBuilderCellsV1=; LolLobbyTeamBuilderCeremonyV1=; LolLobbyTeamBuilderChampSelectAction=; LolLobbyTeamBuilderChampSelectChatRoomDetails=; LolLobbyTeamBuilderChampSelectDevPanelData=; LolLobbyTeamBuilderChampSelectMySelection=; LolLobbyTeamBuilderChampSelectPlayerSelection=; LolLobbyTeamBuilderChampSelectSession=; LolLobbyTeamBuilderChampSelectSwapContract=; LolLobbyTeamBuilderChampSelectSwapState=; LolLobbyTeamBuilderChampSelectTimer=; LolLobbyTeamBuilderChampSelectTradeContract=; LolLobbyTeamBuilderChampSelectTradeState=; LolLobbyTeamBuilderChampionBenchChampionV1=; LolLobbyTeamBuilderChampionBenchStateV1=; LolLobbyTeamBuilderChampionSelectPreferences=; LolLobbyTeamBuilderChampionSelectStateV1=; LolLobbyTeamBuilderCountdownTimer=; LolLobbyTeamBuilderEntitledFeatureState=; LolLobbyTeamBuilderEntitledFeatureStateV1=; LolLobbyTeamBuilderGameModeSpellList=; LolLobbyTeamBuilderGameflowGameClient=; LolLobbyTeamBuilderGameflowGameMap=; LolLobbyTeamBuilderGameflowSession=; LolLobbyTeamBuilderGatekeeperRestricted=; LolLobbyTeamBuilderGatekeeperRestriction=; LolLobbyTeamBuilderLeaverBusterAbandoned=; LolLobbyTeamBuilderLobby=; LolLobbyTeamBuilderLobbyCountdownTimer=; LolLobbyTeamBuilderLobbyInvitation=; LolLobbyTeamBuilderLobbyMember=; LolLobbyTeamBuilderLobbyPositionPreferences=; LolLobbyTeamBuilderLobbyPositionPreferencesV2=; LolLobbyTeamBuilderLobbyRemovedFromGameReason=; LolLobbyTeamBuilderLockedEventsStateV1=; LolLobbyTeamBuilderLoginSession=; LolLobbyTeamBuilderLoginSessionState=; LolLobbyTeamBuilderMatchmakingDodgeData=; LolLobbyTeamBuilderMatchmakingDodgeState=; LolLobbyTeamBuilderMatchmakingDodgeWarning=; LolLobbyTeamBuilderMatchmakingLowPriorityData=; LolLobbyTeamBuilderMatchmakingReadyCheckResource=; LolLobbyTeamBuilderMatchmakingReadyCheckResponse=; LolLobbyTeamBuilderMatchmakingReadyCheckState=; LolLobbyTeamBuilderMatchmakingSearch=; LolLobbyTeamBuilderMatchmakingSearchErrorResource=; LolLobbyTeamBuilderMatchmakingSearchResource=; LolLobbyTeamBuilderMatchmakingSearchState=; LolLobbyTeamBuilderMucJwtDto=; LolLobbyTeamBuilderPickOrderSwapV1=; LolLobbyTeamBuilderQueue=; LolLobbyTeamBuilderQueueAvailability=; LolLobbyTeamBuilderQueueGameCategory=; LolLobbyTeamBuilderQueueGameTypeConfig=; LolLobbyTeamBuilderQueueReward=; LolLobbyTeamBuilderRerollStateV1=; LolLobbyTeamBuilderSettingCategoryResource=; LolLobbyTeamBuilderTBDMatchmakingState=; LolLobbyTeamBuilderTbLobbyStateResource=; LolLobbyTeamBuilderTbRemovedFromServiceNotification=; LolLobbyTeamBuilderTbdInventory=; LolLobbyTeamBuilderTeamBoost=; LolLobbyTeamBuilderTeamBuilderBoostInfo=; LolLobbyTeamBuilderTeambuilderLeagueEdgeResponse=; LolLobbyTeamBuilderTradeV1=; LolLobbyTeamBuilderUnlockedSkinsStateV1=; LolLobbyUserInfoToken=; LolLobbyUserResource=; LolLoginAccessToken=; LolLoginAccountStateResource=; LolLoginAccountStateType=; LolLoginAuthorization=; LolLoginConfigReadinessEnum=; LolLoginConfigStatus=; LolLoginConfigType=; LolLoginCrashReportingEnvironment=; LolLoginIdToken=; LolLoginLcdsResponse=; LolLoginLcdsServiceProxyResponse=; LolLoginLeagueSessionStatus=; LolLoginLeagueSessionTokenEnvelope=; LolLoginLoginConnectionMode=; LolLoginLoginConnectionState=; LolLoginLoginError=; LolLoginLoginQueue=; LolLoginLoginSession=; LolLoginLoginSessionStates=; LolLoginLoginSessionWallet=; LolLoginPlatformGeneratedCredentials=; LolLoginRSOConfigReadyState=; LolLoginRSOPlayerCredentials=; LolLoginSummonerCreatedResource=; LolLoginSummonerSessionResource=; LolLoginUsernameAndPassword=; LolLootAccountIdAndSummonerId=; LolLootCelebrationType=; LolLootCollectionsChampionMinimal=; LolLootCollectionsChampionSkinMinimal=; LolLootCollectionsEmote=; LolLootCollectionsOwnership=; LolLootCollectionsRental=; LolLootCollectionsStatstone=; LolLootCollectionsSummonerIcon=; LolLootCollectionsWardSkin=; LolLootContextMenu=; LolLootCosmeticsTFTDamageSkin=; LolLootCosmeticsTFTDamageSkinViewModel=; LolLootCosmeticsTFTMapSkinViewModel=; LolLootCounter=; LolLootCounterInstance=; LolLootCurrencyConfiguration=; LolLootEntityInstance=; LolLootGameDataSummonerEmote=; LolLootGameDataSummonerIcon=; LolLootGameflowPhase=; LolLootGameflowSession=; LolLootGrantStatus=; LolLootGrantorDescription=; LolLootGroup=; LolLootInventoryOwnership=; LolLootItemKey=; LolLootItemOwnershipStatus=; LolLootLoginDataPacket=; LolLootLoginSession=; LolLootLoginSessionStates=; LolLootLoginSimpleMessage=; LolLootLootBundleContentGdsResource=; LolLootLootBundleGdsResource=; LolLootLootDataGdsResource=; LolLootLootDescription=; LolLootLootDropTableEntryGdsResource=; LolLootLootGrantNotification=; LolLootLootItem=; LolLootLootItemGdsResource=; LolLootLootMilestone=; LolLootLootMilestoneClaimStatus=; LolLootLootMilestoneRepeat=; LolLootLootMilestoneReward=; LolLootLootMilestones=; LolLootLootMilestonesClaimResponse=; LolLootLootMilestonesCounter=; LolLootLootMilestonesDataGdsResource=; LolLootLootOddsResponse=; LolLootLootOutputGdsResource=; LolLootLootRarity=; LolLootLootRecipeGdsResource=; LolLootLootTableGdsResource=; LolLootLootType=; LolLootMassDisenchantClientConfig=; LolLootMilestone=; LolLootMilestoneInstance=; LolLootMilestoneLootItemRewardGdsResource=; LolLootMilestonesProgressionConfigRepeatGdsResource=; LolLootMilestonesProgressionCounterGdsResource=; LolLootMilestonesProgressionGroupRepeatGdsResource=; LolLootMilestonesRecipeGdsResource=; LolLootPlayerLoot=; LolLootPlayerLootDelta=; LolLootPlayerLootMap=; LolLootPlayerLootNotification=; LolLootPlayerLootUpdate=; LolLootProgressionConfigGdsResource=; LolLootProgressionConfigMilestoneGdsResource=; LolLootProgressionConfigMilestonePropertiesGdsResource=; LolLootProgressionConfigMilestoneRewardGdsResource=; LolLootQueryEvaluatedLootItem=; LolLootRMSPayload=; LolLootRecipeMenuConfig=; LolLootRecipeMetadata=; LolLootRecipeOutput=; LolLootRecipeSlot=; LolLootRecipeWithMilestones=; LolLootRedeemableStatus=; LolLootRegionLocale=; LolLootRepeat=; LolLootRequestDTO-SelectionRequestDTO=; LolLootRequestDTO-vector-SelectionRequestDTO=; LolLootRequestMetadataDTO=; LolLootResponseDTO-SvcRewardGrant=; LolLootResponseDTO-map-RewardGroupId-SelectGrantStatus=; LolLootResponseDTO-vector-SvcRewardGrant=; LolLootResponseDTO-vector-SvcRewardGroup=; LolLootResponseMetadataDTO=; LolLootReward=; LolLootRewardGrant=; LolLootRewardStatus=; LolLootRewardStrategy=; LolLootRewardsConfig=; LolLootSelectGrantStatusResponse=; LolLootSelectionRequestDTO=; LolLootSelectionStrategyConfig=; LolLootSummoner=; LolLootSvcRewardGrant=; LolLootSvcRewardGrantElement=; LolLootSvcRewardGroup=; LolLootTFTDamageSkinGroupViewModel=; LolLootTFTDamageSkinGroupedViewModel=; LolLootTFTMapSkinGroupViewModel=; LolLootTFTMapSkinGroupedViewModel=; LolLootVerboseLootOddsResponse=; LolLoyaltyAccessToken=; LolLoyaltyGlobalRewards=; LolLoyaltyInventoryDTO=; LolLoyaltyInventoryItemDTO=; LolLoyaltyInventoryResponseDTO=; LolLoyaltyLoginSession=; LolLoyaltyLoginSessionStates=; LolLoyaltyLoyaltyRewards=; LolLoyaltyLoyaltyRewardsSimplified=; LolLoyaltyLoyaltyStatus=; LolLoyaltyLoyaltyStatusNotification=; LolLoyaltyPlayerNotification=; LolLoyaltyRiotMessagingServiceMessage=; LolLoyaltyRmsEntitlementPayload=; LolMapsGameModeSpellList=; LolMapsMaps=; LolMapsTutorialCard=; LolMatchHistoryAcsEndPoint=; LolMatchHistoryAcsPlayer=; LolMatchHistoryGAMHSMatchHistoryData=; LolMatchHistoryGAMHSMatchHistoryList=; LolMatchHistoryGAMHSMatchHistoryMetadata=; LolMatchHistoryLoginSession=; LolMatchHistoryLoginSessionStates=; LolMatchHistoryMHSummoner=; LolMatchHistoryMatchHistoryEvent=; LolMatchHistoryMatchHistoryGame=; LolMatchHistoryMatchHistoryGameList=; LolMatchHistoryMatchHistoryList=; LolMatchHistoryMatchHistoryParticipant=; LolMatchHistoryMatchHistoryParticipantFrame=; LolMatchHistoryMatchHistoryParticipantIdentities=; LolMatchHistoryMatchHistoryParticipantIdentityPlayer=; LolMatchHistoryMatchHistoryParticipantStatistics=; LolMatchHistoryMatchHistoryPlayerChampMasteryDelta=; LolMatchHistoryMatchHistoryPlayerDelta=; LolMatchHistoryMatchHistoryPlayerGameDelta=; LolMatchHistoryMatchHistoryPlayerLeagueDelta=; LolMatchHistoryMatchHistoryPlayerPlatformDelta=; LolMatchHistoryMatchHistoryPosition=; LolMatchHistoryMatchHistoryTeam=; LolMatchHistoryMatchHistoryTeamBan=; LolMatchHistoryMatchHistoryTimeline=; LolMatchHistoryMatchHistoryTimelineFrame=; LolMatchHistoryMatchHistoryTimelineFrames=; LolMatchHistoryRecentlyPlayedSummoner=; LolMatchHistorySummoner=; LolMatchmakingGameflowGameData=; LolMatchmakingGameflowGameDodge=; LolMatchmakingGameflowGameTypeConfig=; LolMatchmakingGameflowPhase=; LolMatchmakingGameflowQueue=; LolMatchmakingGameflowSession=; LolMatchmakingLobbyStatus=; LolMatchmakingLoginSession=; LolMatchmakingLoginSessionState=; LolMatchmakingMatchmakingDodgeData=; LolMatchmakingMatchmakingDodgeState=; LolMatchmakingMatchmakingDodgeWarning=; LolMatchmakingMatchmakingLowPriorityData=; LolMatchmakingMatchmakingReadyCheckResource=; LolMatchmakingMatchmakingReadyCheckResponse=; LolMatchmakingMatchmakingReadyCheckState=; LolMatchmakingMatchmakingSearchErrorResource=; LolMatchmakingMatchmakingSearchResource=; LolMatchmakingMatchmakingSearchState=; LolMatchmakingPlayerStatus=; LolMatchmakingQueue=; LolMatchmakingQueueCustomGameSpectatorPolicy=; LolMissionsCollectionsChampion=; LolMissionsCollectionsChampionSkin=; LolMissionsCollectionsOwnership=; LolMissionsCollectionsRental=; LolMissionsCollectionsSummoner=; LolMissionsCollectionsSummonerIcons=; LolMissionsCollectionsWardSkin=; LolMissionsGameflowPhase=; LolMissionsGameflowSession=; LolMissionsGrantStatus=; LolMissionsInventoryItemWithPayload=; LolMissionsLoginSession=; LolMissionsLoyaltyStatus=; LolMissionsLoyaltyStatusNotification=; LolMissionsMissionAsset=; LolMissionsMissionsNotificationResource=; LolMissionsMissionsSettingsDataResource=; LolMissionsPlayerUpdateResponse=; LolMissionsPluginRegionLocaleChangedEvent=; LolMissionsRewardGrant=; LolMissionsRewardGrantElement=; LolMissionsRewardGrantInfo=; LolMissionsRewardGroup=; LolMissionsRewardGroupsSelection=; LolMissionsRewardStatus=; LolMissionsRewardStrategy=; LolMissionsRewardsProductConfig=; LolMissionsSelectionStrategyConfig=; LolMissionsSeriesOpt=; LolMissionsSvcReward=; LolMissionsTftOrb=; LolMissionsTftPaidBattlepass=; LolMissionsTftPaidBattlepassInfo=; LolMissionsTftPaidBattlepassMilestone=; LolMissionsTftPaidBattlepassReward=; LolMissionsTftWeeklyMissions=; LolMissionsUserInfo=; LolModeProgressionInventoryRewardItem=; LolModeProgressionLoadout=; LolModeProgressionLoadoutsSlot=; LolNpeRewardsAccountSettingsData=; LolNpeRewardsAccountSettingsPayload=; LolNpeRewardsAllRewards=; LolNpeRewardsChallengesProgress=; LolNpeRewardsChallengesSettings=; LolNpeRewardsLoginSeriesSettings=; LolNpeRewardsMission=; LolNpeRewardsMissionDisplay=; LolNpeRewardsMissionSeries=; LolNpeRewardsMissionSeriesOptIn=; LolNpeRewardsMissionsRewardPackMetaData=; LolNpeRewardsObjective=; LolNpeRewardsProgress=; LolNpeRewardsRequirements=; LolNpeRewardsReward=; LolNpeRewardsRewardPack=; LolNpeRewardsRewardSeries=; LolNpeRewardsRewardSeriesState=; LolNpeRewardsSummoner=; LolNpeTutorialPathAccountSettingsCategoryResource=; LolNpeTutorialPathAccountSettingsTutorial=; LolNpeTutorialPathCollectionsChampion=; LolNpeTutorialPathCollectionsChampionSpell=; LolNpeTutorialPathExpiringWarning=; LolNpeTutorialPathGameflowPhase=; LolNpeTutorialPathGameflowSession=; LolNpeTutorialPathIds=; LolNpeTutorialPathLobbyChangeQueue=; LolNpeTutorialPathLobbyDto=; LolNpeTutorialPathLobbyGameConfigDto=; LolNpeTutorialPathMission=; LolNpeTutorialPathMissionDisplay=; LolNpeTutorialPathMissionMetadata=; LolNpeTutorialPathObjective=; LolNpeTutorialPathProgress=; LolNpeTutorialPathRequirement=; LolNpeTutorialPathReward=; LolNpeTutorialPathRewardStrategy=; LolNpeTutorialPathSeries=; LolNpeTutorialPathSeriesOpt=; LolNpeTutorialPathSummoner=; LolNpeTutorialPathSummonerIcon=; LolNpeTutorialPathTutorial=; LolNpeTutorialPathTutorialMetadata=; LolNpeTutorialPathTutorialReward=; LolNpeTutorialPathTutorialStatus=; LolNpeTutorialPathTutorialType=; LolPatchChunkingPatcherEnvironment=; LolPatchComponentActionProgress=; LolPatchComponentState=; LolPatchComponentStateAction=; LolPatchComponentStateProgress=; LolPatchComponentStateWorkType=; LolPatchEntitlementsTokenResource=; LolPatchInstallPaths=; LolPatchNotification=; LolPatchNotificationId=; LolPatchPatchSieveCompatVersion=; LolPatchPatchSieveDownload=; LolPatchPatchSieveLabelValue=; LolPatchPatchSieveQueryResponse=; LolPatchPatchSieveRelease=; LolPatchPatchSieveReleaseInfo=; LolPatchPatcherInstallSettings=; LolPatchPatcherRegionSettings=; LolPatchPatcherSelfUpdateSettings=; LolPatchPatcherSettings=; LolPatchProductState=; LolPatchRegionLocale=; LolPatchScdCookie=; LolPatchScdCookies=; LolPatchScdEnabled=; LolPatchStatus=; LolPatchSupportedGameRelease=; LolPatchSupportedGameReleases=; LolPatchUxResource=; LolPerksChampSelectAction=; LolPerksChampSelectBannedChampions=; LolPerksChampSelectChatRoomDetails=; LolPerksChampSelectMySelection=; LolPerksChampSelectPlayerSelection=; LolPerksChampSelectSession=; LolPerksChampSelectTimer=; LolPerksChampSelectTradeContract=; LolPerksChampSelectTradeState=; LolPerksChampionPreferredStyle=; LolPerksChampionRuneRecommendationsGDSResource=; LolPerksDefaultStatModsPerSubStyle=; LolPerksGameCustomizationDTO=; LolPerksGameDataChampionSummary=; LolPerksGameflowGameData=; LolPerksGameflowPhase=; LolPerksGameflowSession=; LolPerksGetGameCustomizationDTO=; LolPerksInventoryRunePageCount=; LolPerksLoginSession=; LolPerksLoginSessionState=; LolPerksMucJwtDto=; LolPerksNamecheckAuthorization=; LolPerksNamecheckLoginDataPacket=; LolPerksNamecheckPayload=; LolPerksNamecheckResponse=; LolPerksPerkBook=; LolPerksPerkGDSResource=; LolPerksPerkIdListResource=; LolPerksPerkPageResource=; LolPerksPerkSettingResource=; LolPerksPerkSettings=; LolPerksPerkStyleResource=; LolPerksPerkStyleSlotResource=; LolPerksPerkSubStyleBonusResource=; LolPerksPerkUIPerk=; LolPerksPerkUIRecommendedPage=; LolPerksPerkUISlot=; LolPerksPerkUIStyle=; LolPerksPerksConfigDTO=; LolPerksPlatformConfig=; LolPerksPlayerInventory=; LolPerksQueue=; LolPerksRuneRecommendationGDSResource=; LolPerksSettingsStorageContainer=; LolPerksSummoner=; LolPerksSummonerRerollPoints=; LolPerksUISettings=; LolPerksUpdatePageOrderRequest=; LolPerksValidateItemSetNameResponse=; LolPerksValidatePageNameData=; LolPftGameClientEndOfGameStats=; LolPftGameflowGameDodge=; LolPftGameflowGameDodgeState=; LolPftGameflowPhase=; LolPftGameflowSession=; LolPftLoginSession=; LolPftLoginSessionStates=; LolPftPFTEndOfGamePlayer=; LolPftPFTEndOfGamePoints=; LolPftPFTEndOfGameStats=; LolPftPFTEndOfGameTeam=; LolPftPFTEvent=; LolPftPFTMetadata=; LolPftPFTQuestionResponse=; LolPftPFTSurvey=; LolPftPFTSurveyResults=; LolPftPFTSurveyV1=; LolPftSummoner=; LolPlayerBehaviorBanNotification=; LolPlayerBehaviorCodeOfConductNotification=; LolPlayerBehaviorGameflowPhase=; LolPlayerBehaviorNotificationSource=; LolPlayerBehaviorPlayerBehaviorConfig=; LolPlayerBehaviorPlayerBehavior_GameflowSessionResource=; LolPlayerBehaviorPlayerBehavior_SimpleMessage=; LolPlayerBehaviorPlayerNotificationResource=; LolPlayerBehaviorReformCard=; LolPlayerBehaviorReformCardChatLogs=; LolPlayerBehaviorReformCardV2=; LolPlayerBehaviorReporterFeedback=; LolPlayerBehaviorReporterFeedbackMessage=; LolPlayerBehaviorRestrictionNotification=; LolPlayerBehaviorSettingsResource=; LolPlayerBehaviorUserInfo=; LolPlayerBehaviorUserInfoBanData=; LolPlayerBehaviorUserInfoRestriction=; LolPlayerBehaviorUserInfoRestrictionData=; LolPlayerBehaviorUserInfoRestrictionGameData=; LolPlayerBehaviorUserInfoToken=; LolPlayerLevelUpEndOfGameStats=; LolPlayerLevelUpGameDataSummonerSpell=; LolPlayerLevelUpLoginSession=; LolPlayerLevelUpLoginSessionStates=; LolPlayerLevelUpPlayerLevelUpEvent=; LolPlayerLevelUpPlayerLevelUpEventAck=; LolPlayerLevelUpQueue=; LolPlayerMessagingDynamicCelebrationMessagingNotificationResource=; LolPlayerMessagingLoginDataPacket=; LolPlayerMessagingPlayerMessagingNotificationResource=; LolPlayerMessagingSimpleMessage=; LolPlayerPreferencesLoginSession=; LolPlayerPreferencesLoginSessionStates=; LolPlayerPreferencesPlayerPreferences=; LolPlayerPreferencesPlayerPreferencesEndpoint=; LolPlayerReportSenderGameAgnosticReportPayload=; LolPlayerReportSenderGameflowGameData=; LolPlayerReportSenderGameflowPhase=; LolPlayerReportSenderGameflowSession=; LolPlayerReportSenderPlayerReport=; LolPlayerReportSenderReportRecipientMode=; LolPlayerReportSenderSummoner=; LolPreEndOfGameGameflowPhase=; LolPreEndOfGameSequenceEvent=; LolPremadeVoiceAccountSettingsCategoryDataResource=; LolPremadeVoiceAccountSettingsCategoryResource=; LolPremadeVoiceAudioPropertiesResource=; LolPremadeVoiceConfigReadinessEnum=; LolPremadeVoiceConfigStatus=; LolPremadeVoiceConfigType=; LolPremadeVoiceDeviceResource=; LolPremadeVoiceDeviceResourceRiotClient=; LolPremadeVoiceEntitlementsToken=; LolPremadeVoiceExternalSession=; LolPremadeVoiceFirstExperience=; LolPremadeVoiceGameEventHotkeys=; LolPremadeVoiceGameInputSettings=; LolPremadeVoiceGameflowGameClient=; LolPremadeVoiceGameflowPhase=; LolPremadeVoiceGameflowSession=; LolPremadeVoiceInputMode=; LolPremadeVoiceKeyCombo=; LolPremadeVoiceKeycodePushToTalkResource=; LolPremadeVoiceLocalSettingsCategoryDataResource=; LolPremadeVoiceLocalSettingsCategoryResource=; LolPremadeVoiceLoginSession=; LolPremadeVoiceParticipantResource=; LolPremadeVoicePartyDto=; LolPremadeVoicePartyMemberRoleEnum=; LolPremadeVoicePlayerDto=; LolPremadeVoicePremadeVoiceParticipantDto=; LolPremadeVoicePushToTalkKey=; LolPremadeVoicePushToTalkResource=; LolPremadeVoiceSessionResource=; LolPremadeVoiceSessionStatus=; LolPremadeVoiceSettingsResource=; LolPremadeVoiceStateResource=; LolPremadeVoiceSummoner=; LolPremadeVoiceVoiceAvailability=; LolProgressionCounter=; LolProgressionCounterInstance=; LolProgressionEntityInstance=; LolProgressionGroup=; LolProgressionMilestone=; LolProgressionMilestoneInstance=; LolProgressionRepeat=; LolPublishingContentAccountData=; LolPublishingContentBuildInfo=; LolPublishingContentClientData=; LolPublishingContentPubHubConfig=; LolPublishingContentPubHubConfigAppContext=; LolPublishingContentPubHubConfigEdge=; LolPublishingContentPublishingLocaleSetting=; LolPublishingContentPublishingLocaleSettingData=; LolPublishingContentPublishingSettings=; LolPublishingContentRegionLocale=; LolPublishingContentSummonerInfo=; LolPublishingContentSystemInfo=; LolPublishingContentSystemInfoOperatingSystem=; LolPurchaseWidgetBalance=; LolPurchaseWidgetBaseSkinLineDto=; LolPurchaseWidgetBundledItemPricingInfo=; LolPurchaseWidgetCapOffer=; LolPurchaseWidgetCapOfferPayloadEntry=; LolPurchaseWidgetCapOrdersDataDto=; LolPurchaseWidgetCapOrdersMetaDto=; LolPurchaseWidgetCapOrdersOfferContextDto=; LolPurchaseWidgetCapOrdersOfferDto=; LolPurchaseWidgetCapOrdersOrderDto=; LolPurchaseWidgetCapOrdersSubOrderDto=; LolPurchaseWidgetCapOrdersTypedIdentifierDto=; LolPurchaseWidgetCatalogPluginItem=; LolPurchaseWidgetCatalogPluginItemAssets=; LolPurchaseWidgetCatalogPluginItemWithDetails=; LolPurchaseWidgetCatalogPluginPrice=; LolPurchaseWidgetCatalogPluginSale=; LolPurchaseWidgetChampionSkinEmblem=; LolPurchaseWidgetChampionSkinEmblemPath=; LolPurchaseWidgetChampionSkinEmblemPosition=; LolPurchaseWidgetDiscountPricingInfo=; LolPurchaseWidgetInventoryOwnership=; LolPurchaseWidgetItemChoiceDetails=; LolPurchaseWidgetItemChoices=; LolPurchaseWidgetItemCost=; LolPurchaseWidgetItemDefinition=; LolPurchaseWidgetItemDetails=; LolPurchaseWidgetItemKey=; LolPurchaseWidgetItemMetadataEntry=; LolPurchaseWidgetItemOwnership=; LolPurchaseWidgetItemPrice=; LolPurchaseWidgetItemSale=; LolPurchaseWidgetLoginSession=; LolPurchaseWidgetLoginSessionStates=; LolPurchaseWidgetOrderNotificationResource=; LolPurchaseWidgetPriceDetail=; LolPurchaseWidgetPriceOptionDto=; LolPurchaseWidgetPurchasableItem=; LolPurchaseWidgetPurchaseItem=; LolPurchaseWidgetPurchaseOfferOrderStates=; LolPurchaseWidgetPurchaseOfferOrderStatus=; LolPurchaseWidgetPurchaseOfferOrderStatuses=; LolPurchaseWidgetPurchaseOfferRequestV3=; LolPurchaseWidgetPurchaseOfferResponseV3=; LolPurchaseWidgetPurchaseOption=; LolPurchaseWidgetPurchaseRequest=; LolPurchaseWidgetPurchaseResponse=; LolPurchaseWidgetPurchaseWidgetConfig=; LolPurchaseWidgetRiotMessagingServiceMessage=; LolPurchaseWidgetSale=; LolPurchaseWidgetSkinLineDescriptionDto=; LolPurchaseWidgetSkinLineDescriptionInfo=; LolPurchaseWidgetSkinLineInfo=; LolPurchaseWidgetSkinLineItemDto=; LolPurchaseWidgetSkinLineTier=; LolPurchaseWidgetTransaction=; LolPurchaseWidgetValidateOfferError=; LolPurchaseWidgetValidateOfferRequestV3=; LolPurchaseWidgetValidateOfferResponseV3=; LolPurchaseWidgetValidationError=; LolPurchaseWidgetValidationErrorEntry=; LolPurchaseWidgetValidationRequest=; LolPurchaseWidgetValidationRequestItem=; LolPurchaseWidgetValidationResponse=; LolPurchaseWidgetValidationResponseItem=; LolPurchaseWidgetWallet=; LolRankedAchievedTier=; LolRankedEndOfGameStatsBlock=; LolRankedEosNotificationResource=; LolRankedEosNotificationType=; LolRankedEosNotificationsConfig=; LolRankedEosNotificationsConfigEntry=; LolRankedEosRewardData=; LolRankedEosRewardGroupsConfig=; LolRankedEosRewardGroupsRewardsList=; LolRankedEosRewardsConfig=; LolRankedEosRewardsConfigEntry=; LolRankedEosSettingsData=; LolRankedEosSettingsResource=; LolRankedGameflowGameData=; LolRankedGameflowPhase=; LolRankedGameflowSession=; LolRankedGlobalNotification=; LolRankedLcuLeagueNotification=; LolRankedLeagueDivision=; LolRankedLeagueDivisionInfo=; LolRankedLeagueLadderDTO=; LolRankedLeagueLadderEntryDTO=; LolRankedLeagueLadderInfo=; LolRankedLeagueNotification=; LolRankedLeagueNotifications=; LolRankedLeagueQueueType=; LolRankedLeagueStanding=; LolRankedLeagueTierAndRankDTO=; LolRankedLeaguesSeasonRewardConfig=; LolRankedLoginSession=; LolRankedLoginSessionStates=; LolRankedMiniseries=; LolRankedNotificationDisplayType=; LolRankedParticipantTiers=; LolRankedQueue=; LolRankedQueuesAndPuuidsPayload=; LolRankedRankedQueueStats=; LolRankedRankedQueueStatsDTO=; LolRankedRankedQueueWarnings=; LolRankedRankedQueueWarningsDTO=; LolRankedRankedStats=; LolRankedRankedStatsDTO=; LolRankedRatedLadderEntryDTO=; LolRankedRatedLadderInfo=; LolRankedRatedLadderStanding=; LolRankedRatedTier=; LolRankedRewardNotification=; LolRankedRewardsInfo=; LolRankedSeasonDTO=; LolRankedSeasonSplit=; LolRankedSeasonSplitDTO=; LolRankedSequenceEvent=; LolRankedSeverity=; LolRankedSignedRankedStatsDTO=; LolRankedSocialLeaderboardRankedQueueStats=; LolRankedSocialLeaderboardRankedQueueStatsDTO=; LolRankedSplitPointsNotification=; LolRankedSplitReward=; LolRankedSplitRewardDTO=; LolRankedSplitRewardGroup=; LolRankedSplitRewardGroupDTO=; LolRankedSplitRewardsMetaData=; LolRankedSummoner=; LolRankedVictoriousSkin=; LolRankedVictoriousSkinDTO=; LolRegaliaAccountIdAndSummonerId=; LolRegaliaChatPresence=; LolRegaliaChatPresenceExternal=; LolRegaliaChatPresenceLolData=; LolRegaliaGameDataRegalia=; LolRegaliaInventoryItem=; LolRegaliaItemKey=; LolRegaliaLeagueDivision=; LolRegaliaLeagueQueueType=; LolRegaliaLoadout=; LolRegaliaRankedQueueStats=; LolRegaliaRankedStats=; LolRegaliaRegalia=; LolRegaliaRegaliaAsync=; LolRegaliaRegaliaBannerType=; LolRegaliaRegaliaCrestType=; LolRegaliaRegaliaFrontendConfig=; LolRegaliaRegaliaInventoryItem=; LolRegaliaRegaliaLoadout=; LolRegaliaRegaliaPlatformConfig=; LolRegaliaRegaliaPreferences=; LolRegaliaRegaliaRankedEntry=; LolRegaliaRegaliaSettings=; LolRegaliaRegaliaSettingsExternal=; LolRegaliaRegaliaWithPreferences=; LolRegaliaSummoner=; LolRegaliaSummonerProfile=; LolRegaliaSummonerProfileUpdate=; LolReplaysClashPlaymodeRestrictedInfo=; LolReplaysGameflowAvailability=; LolReplaysGameflowGameClient=; LolReplaysGameflowPhase=; LolReplaysGameflowSession=; LolReplaysGameflowWatchPhase=; LolReplaysInstallPaths=; LolReplaysMetadataState=; LolReplaysReplayContextData=; LolReplaysReplayCreateMetadata=; LolReplaysReplayMetadata=; LolReplaysReplaysConfiguration=; LolReplaysReplaysDynamicConfig=; LolReplaysReplaysSettingsData=; LolReplaysReplaysSettingsResource=; LolReplaysRoflFileMetadata=; LolRewardsCelebrationType=; LolRewardsGrantStatus=; LolRewardsGrantorDescription=; LolRewardsRMSPayload=; LolRewardsRegionLocale=; LolRewardsRequestDTO-SelectionRequestDTO=; LolRewardsRequestDTO-vector-SelectionRequestDTO=; LolRewardsRequestMetadataDTO=; LolRewardsResponseDTO-SvcRewardGrant=; LolRewardsResponseDTO-map-RewardGroupId-SelectGrantStatus=; LolRewardsResponseDTO-vector-SvcRewardGrant=; LolRewardsResponseDTO-vector-SvcRewardGroup=; LolRewardsResponseMetadataDTO=; LolRewardsReward=; LolRewardsRewardGrant=; LolRewardsRewardStatus=; LolRewardsRewardStrategy=; LolRewardsRewardsConfig=; LolRewardsSelectGrantStatusResponse=; LolRewardsSelectionRequestDTO=; LolRewardsSelectionStrategyConfig=; LolRewardsSvcRewardGrant=; LolRewardsSvcRewardGrantElement=; LolRewardsSvcRewardGroup=; LolRiotMessagingServiceChampionMasteryLevelUp=; LolRiotMessagingServiceGameflowPhase=; LolRiotMessagingServiceGameflowSession=; LolRiotclientUpgraderGameflowAvailability=; LolRsoAuthAccessToken=; LolRsoAuthAuthError=; LolRsoAuthAuthHint=; LolRsoAuthAuthHintType=; LolRsoAuthAuthorization=; LolRsoAuthAuthorizationRequest=; LolRsoAuthAuthorizationResponse=; LolRsoAuthConfigReadinessEnum=; LolRsoAuthConfigStatus=; LolRsoAuthConfigType=; LolRsoAuthDeviceId=; LolRsoAuthEntitlementsToken=; LolRsoAuthIdToken=; LolRsoAuthImplicitAuthorization=; LolRsoAuthPublicClientConfig=; LolRsoAuthRSOAuthorizationTrustLevel=; LolRsoAuthRSOConfigReadyState=; LolRsoAuthRSOJWTConfig=; LolRsoAuthRSOPlayerCredentials=; LolRsoAuthRegionStatus=; LolRsoAuthSessionResponse=; LolRsoAuthUserInfo=; LolSeasonsAllSeasonsProduct=; LolSeasonsSeasonMetaData=; LolServiceStatusBroadcastMessage=; LolServiceStatusBroadcastNotification=; LolServiceStatusLegacyServiceStatusMessage=; LolServiceStatusLegacyServiceStatusResponse=; LolServiceStatusLegacyServiceStatusTranslation=; LolServiceStatusLoginDataPacket=; LolServiceStatusRegionLocaleResource=; LolServiceStatusRiotStatusIncident=; LolServiceStatusRiotStatusMaintenance=; LolServiceStatusRiotStatusResource=; LolServiceStatusRiotStatusTitle=; LolServiceStatusRiotStatusTranslation=; LolServiceStatusRiotStatusUpdate=; LolServiceStatusServiceStatusResource=; LolServiceStatusTickerMessage=; LolSettingsLCUGameSettingsConfig=; LolSettingsLoginSession=; LolSettingsLoginSessionStates=; LolSettingsPublisher=; LolSettingsRegionLocale=; LolSettingsReplaysConfig=; LolSettingsSettingCategory=; LolSettingsSettingsConfig=; LolShutdownShutdownNotification=; LolShutdownShutdownReason=; LolSimpleDialogMessagesGameflowPhase=; LolSimpleDialogMessagesGameflowSession=; LolSimpleDialogMessagesLocalMessageRequest=; LolSimpleDialogMessagesLoginDataPacket=; LolSimpleDialogMessagesMessage=; LolSimpleDialogMessagesSimpleMessage=; LolSocialLeaderboardFriendResource=; LolSocialLeaderboardGiftingFriend=; LolSocialLeaderboardLeagueDivision=; LolSocialLeaderboardLeagueQueueType=; LolSocialLeaderboardLeagueTierNumValue=; LolSocialLeaderboardRankedQueueStats=; LolSocialLeaderboardRankedStats=; LolSocialLeaderboardSocialLeaderboardData=; LolSocialLeaderboardSocialLeaderboardRowData=; LolSocialLeaderboardSummoner=; LolSpectatorSpectateGameInfo=; LolSpectatorSummonerOrTeamAvailabilty=; LolStatstonesCatalogBundle=; LolStatstonesCatalogBundlePrice=; LolStatstonesCatalogItemDetails=; LolStatstonesChampionStatstoneSetSummary=; LolStatstonesChampionStatstoneSummary=; LolStatstonesCollectionsChampion=; LolStatstonesEogNotificationEnvelope=; LolStatstonesGameDataItemReference=; LolStatstonesGameDataStatstone=; LolStatstonesGameDataStatstonePack=; LolStatstonesGameDataStatstoneSet=; LolStatstonesGameDataStatstonesInfo=; LolStatstonesLoadout=; LolStatstonesLoadoutItem=; LolStatstonesMilestoneNotificationDto=; LolStatstonesMilestoneProgressNotification=; LolStatstonesNumberFormattingBehavior=; LolStatstonesNumberFormattingData=; LolStatstonesPersonalBestNotification=; LolStatstonesPriceInfo=; LolStatstonesProfileStatstoneSummary=; LolStatstonesStatstone=; LolStatstonesStatstoneCompletion=; LolStatstonesStatstoneFeaturedRequest=; LolStatstonesStatstoneMasteryVignette=; LolStatstonesStatstoneNotificationDto=; LolStatstonesStatstoneNotificationEnvelopeDto=; LolStatstonesStatstonePlayerRecord=; LolStatstonesStatstoneProgress=; LolStatstonesStatstoneRekindledVignette=; LolStatstonesStatstoneSet=; LolStatstonesStatstoneSetCompleteVignette=; LolStatstonesStatstoneVignetteNotificationEnvelopeDto=; LolStatstonesSummoner=; LolStoreAccessTokenResource=; LolStoreAllSummonerData=; LolStoreBundleItemDTO=; LolStoreBundled=; LolStoreBundledItem=; LolStoreBundledItemCost=; LolStoreCapOffer=; LolStoreCatalogInstanceToItemKeyMap=; LolStoreCatalogItem=; LolStoreFeaturedPageDTO=; LolStoreGetPlatformIdsFromInstanceIdsRequest=; LolStoreGiftableResult=; LolStoreGiftingConfig=; LolStoreGiftingFriend=; LolStoreItemCost=; LolStoreItemKey=; LolStoreItemLocalization=; LolStoreItemMetadataEntry=; LolStoreItemOrderDTO=; LolStoreItemSale=; LolStoreLoginDataPacket=; LolStoreLoginSession=; LolStoreLoginSessionStates=; LolStoreNotification=; LolStoreOrderNotificationResource=; LolStorePageDTO=; LolStorePageGroupingDTO=; LolStorePlayer=; LolStorePurchaseOrderRequestDTO=; LolStorePurchaseOrderResponseDTO=; LolStoreRiotMessagingServiceMessage=; LolStoreSale=; LolStoreServiceBalance=; LolStoreServiceWallet=; LolStoreSimpleDialogMessage=; LolStoreStoreStatus=; LolStoreSummoner=; LolStoreSummonerLevelAndPoints=; LolStoreTransactionResponseDTO=; LolStoreWallet=; LolSuggestedPlayersEndOfGamePlayer=; LolSuggestedPlayersEndOfGameStats=; LolSuggestedPlayersEndOfGameTeam=; LolSuggestedPlayersGameflowPhase=; LolSuggestedPlayersHonorInteraction=; LolSuggestedPlayersSuggestedPlayersConfig=; LolSuggestedPlayersSuggestedPlayersDynamicClientConfig=; LolSuggestedPlayersSuggestedPlayersFriend=; LolSuggestedPlayersSuggestedPlayersKudoedPlayer=; LolSuggestedPlayersSuggestedPlayersLobbyStatus=; LolSuggestedPlayersSuggestedPlayersPlayerStatus=; LolSuggestedPlayersSuggestedPlayersQueue=; LolSuggestedPlayersSuggestedPlayersReason=; LolSuggestedPlayersSuggestedPlayersReportedPlayer=; LolSuggestedPlayersSuggestedPlayersSuggestedPlayer=; LolSuggestedPlayersSuggestedPlayersSummoner=; LolSuggestedPlayersSuggestedPlayersVictoriousComrade=; LolSummonerAccountIdAndSummonerId=; LolSummonerAlias=; LolSummonerAliasAvailability=; LolSummonerAliasAvailabilityCode=; LolSummonerAutoFillQueueDto=; LolSummonerGameloopPlayerInfoV2=; LolSummonerLevelField=; LolSummonerLevelProgression=; LolSummonerLoginSession=; LolSummonerLoginSessionStates=; LolSummonerPlayerNameMode=; LolSummonerPlayerNameState=; LolSummonerProfilePrivacy=; LolSummonerProfilePrivacyEnabledState=; LolSummonerProfilePrivacySetting=; LolSummonerRerollDataBagForClientV1=; LolSummonerStatus=; LolSummonerSummoner=; LolSummonerSummonerCacheData=; LolSummonerSummonerCreateRequest=; LolSummonerSummonerCreatedId=; LolSummonerSummonerDTO=; LolSummonerSummonerIcon=; LolSummonerSummonerIdAndIcon=; LolSummonerSummonerIdAndName=; LolSummonerSummonerProfileUpdate=; LolSummonerSummonerRequestedName=; LolSummonerSummonerRerollPoints=; LolSummonerSummonerSession=; LolSummonerXpAndLevelMessage=; LolTastesDataModelResponse=; LolTftDataModelResponse=; LolTftGameflowGameData=; LolTftGameflowPhase=; LolTftGameflowSession=; LolTftLolTftBattlePassHub=; LolTftLolTftEvent=; LolTftLolTftEvents=; LolTftLolTftHomeHub=; LolTftLolTftNewsHub=; LolTftLolTftPrimeGaming=; LolTftLolTftPromoButton=; LolTftLolTftPromoButtons=; LolTftPassAccessTokenResource=; LolTftPassCatalogItem=; LolTftPassClientCacheClearMessageDTO=; LolTftPassCounter=; LolTftPassCounterInstance=; LolTftPassCurrencyDTO=; LolTftPassEndOfGameXp=; LolTftPassEndOfGameXpNotification=; LolTftPassEntityInstance=; LolTftPassGroup=; LolTftPassInventoryCacheEntry=; LolTftPassInventoryDTO=; LolTftPassInventoryItem=; LolTftPassInventoryItemDTO=; LolTftPassInventoryItemWithPayload=; LolTftPassInventoryNotification=; LolTftPassInventoryResponseDTO=; LolTftPassItemKey=; LolTftPassItemOwnershipType=; LolTftPassLoginSession=; LolTftPassLoginSessionStates=; LolTftPassLoyaltyRewards=; LolTftPassLoyaltyRewardsSimplified=; LolTftPassLoyaltyStatus=; LolTftPassLoyaltyStatusNotification=; LolTftPassMilestone=; LolTftPassMilestoneInstance=; LolTftPassPlayerNotification=; LolTftPassRMSRequest=; LolTftPassRMSRewardsNotificationPayload=; LolTftPassRepeat=; LolTftPassRiotMessagingServiceMessage=; LolTftPassRmsEntitlementPayload=; LolTftPassRmsStoreEntitlementItem=; LolTftPassRmsStoreEntitlementPayload=; LolTftPassRmsWalletPayload=; LolTftPassRmsXboxSubscriptionChange=; LolTftPassSimpleInventoryDTO=; LolTftPassSimpleInventoryResponseDTO=; LolTftPassSummonerIcon=; LolTftPassTFTPassClientConfig=; LolTftPassTFTPassDTO=; LolTftPassTFTPassMilestoneDTO=; LolTftPassTFTPassRewardDTO=; LolTftPassTFTPassRewardNotification=; LolTftPassTftPaidBattlepass=; LolTftPassTftPaidBattlepassInfo=; LolTftPassTftPaidBattlepassMilestone=; LolTftPassTftPaidBattlepassReward=; LolTftPassWallet=; LolTftPassWalletCacheEntry=; LolTftPassWalletDTO=; LolTftPassWalletResponseDTO=; LolTftPassXboxSubscriptionStatus=; LolTftPublishingSettings=; LolTftQueue=; LolTftQueueGameCategory=; LolTftSettingsResource=; LolTftTeamPlannerChampion=; LolTftTeamPlannerGameDataTFTSets=; LolTftTeamPlannerGameflowGameData=; LolTftTeamPlannerGameflowPhase=; LolTftTeamPlannerGameflowSession=; LolTftTeamPlannerQueue=; LolTftTeamPlannerSettingsStorageContainer=; LolTftTeamPlannerTFTMapSetData=; LolTftTeamPlannerTFTModeData=; LolTftTeamPlannerTFTTeamPlannerConfig=; LolTftTeamPlannerTeamPlan=; LolTftTeamPlannerTeamSettings=; LolTftTrovesCapCounterBalanceDto=; LolTftTrovesCapOrdersRequestDTO=; LolTftTrovesCapOrdersRequestMetaDTO=; LolTftTrovesCapOrdersResponseDTO=; LolTftTrovesCounterNotificationResource=; LolTftTrovesDropsDropTablePityInfo=; LolTftTrovesDropsDropTableWithPityDTO=; LolTftTrovesDropsOddsListEntryDTO=; LolTftTrovesDropsOddsTreeNodeDTO=; LolTftTrovesDropsPityCountDTO=; LolTftTrovesGameDataTrovesBanner=; LolTftTrovesGameDataTrovesBannerReward=; LolTftTrovesGameDataTrovesBannerTable=; LolTftTrovesGameDataTrovesBannerTableEntry=; LolTftTrovesInventoryItem=; LolTftTrovesLoadoutsItem=; LolTftTrovesLoginSession=; LolTftTrovesLoginSessionStates=; LolTftTrovesLootOddsResponse=; LolTftTrovesLootRarity=; LolTftTrovesOrderNotificationResource=; LolTftTrovesPlayerLoot=; LolTftTrovesRiotMessagingServiceMessage=; LolTftTrovesTrovePurchaseResponse=; LolTftTrovesTroves=; LolTftTrovesTrovesActiveBanner=; LolTftTrovesTrovesBanner=; LolTftTrovesTrovesCelebrationCurrencySegmentData=; LolTftTrovesTrovesCelebrationHighlightSegmentData=; LolTftTrovesTrovesCelebrationPortalSegmentData=; LolTftTrovesTrovesCelebrationStandardSegmentData=; LolTftTrovesTrovesCelebrationThemeData=; LolTftTrovesTrovesPCSpriteAnimation=; LolTftTrovesTrovesPurchaseRequest=; LolTftTrovesTrovesReward=; LolTftTrovesTrovesRewards=; LolTftTrovesTrovesRewardsResponse=; LolTftTrovesTrovesRollRequest=; LolTftTrovesTrovesStatus=; LolTftTrovesVerboseLootOddsResponse=; LolTrophiesCapClashTrophyEntitlementPayload=; LolTrophiesClashV2TrophyRewardSpec=; LolTrophiesInventoryItemsByType=; LolTrophiesInventoryResponse=; LolTrophiesLoadout=; LolTrophiesLoadoutItem=; LolTrophiesOtherPlayerTrophyInventoryItem=; LolTrophiesTournamentTrophyInventoryItem=; LolTrophiesTrophyProfileData=; LolUserExperienceGameflowPhase=; LolUserExperienceGameflowSession=; LolYourshopAccessTokenResource=; LolYourshopCatalogItem=; LolYourshopClientCacheClearMessageDTO=; LolYourshopCurrencyDTO=; LolYourshopEndOfGameXp=; LolYourshopEndOfGameXpNotification=; LolYourshopInventoryCacheEntry=; LolYourshopInventoryDTO=; LolYourshopInventoryItem=; LolYourshopInventoryItemDTO=; LolYourshopInventoryItemWithPayload=; LolYourshopInventoryNotification=; LolYourshopInventoryResponseDTO=; LolYourshopItemKey=; LolYourshopItemOwnershipType=; LolYourshopLoginSession=; LolYourshopLoginSessionStates=; LolYourshopLoyaltyRewards=; LolYourshopLoyaltyRewardsSimplified=; LolYourshopLoyaltyStatus=; LolYourshopLoyaltyStatusNotification=; LolYourshopOffer=; LolYourshopOfferData=; LolYourshopOfferId=; LolYourshopOfferIds=; LolYourshopOfferRequest=; LolYourshopOfferRequests=; LolYourshopPlayerNotification=; LolYourshopPlayerPermissions=; LolYourshopPromotion=; LolYourshopPurchaseItem=; LolYourshopPurchaseOfferOrderStates=; LolYourshopPurchaseOfferOrderStatus=; LolYourshopPurchaseOfferOrderStatuses=; LolYourshopPurchaseResponse=; LolYourshopRiotMessagingServiceMessage=; LolYourshopRmsEntitlementPayload=; LolYourshopRmsStoreEntitlementItem=; LolYourshopRmsStoreEntitlementPayload=; LolYourshopRmsWalletPayload=; LolYourshopRmsXboxSubscriptionChange=; LolYourshopSimpleInventoryDTO=; LolYourshopSimpleInventoryResponseDTO=; LolYourshopSummonerIcon=; LolYourshopUIOffer=; LolYourshopUIStatus=; LolYourshopWallet=; LolYourshopWalletCacheEntry=; LolYourshopWalletDTO=; LolYourshopWalletResponseDTO=; LolYourshopXboxSubscriptionStatus=; LolYourshopYourshopConfig=; LootItemClientDTO=; LootItemListClientDTO=; LootLcdsClientConfigurationDTO=; LootLcdsLootDescriptionDTO=; LootLcdsRecipeClientDTO=; LootLcdsRecipeListClientDTO=; LootLcdsRecipeMetadata=; LootLcdsRecipeOutputDTO=; LootLcdsRecipeSlotClientDTO=; LootNameRefId=; LootOddsDTO=; LootProgressionRecipeConfigMap=; LootProgressionRecipeConfiguration=; LootSimpleDialogMessageResponse=; MassCraftLootDTO=; MatchedPlayerDTO=; MatchmakingLcdsBustedLeaver=; MatchmakingLcdsFailedJoinPlayer=; MatchmakingLcdsGameDTO=; MatchmakingLcdsGameNotification=; MatchmakingLcdsMatchMakerParams=; MatchmakingLcdsMatchMakerPayload=; MatchmakingLcdsPlayerParticipant=; MatchmakingLcdsQueueDisabled=; MatchmakingLcdsQueueDodger=; MatchmakingLcdsQueueInfo=; MatchmakingLcdsQueueRestricted=; MatchmakingLcdsQueueThrottled=; MatchmakingLcdsSearchingForMatchNotification=; MatchmakingLcdsSummoner=; MemberBanUnbanTournament=; MetricDataType=; MetricMetadata=; MetricMetadataAlert=; MetricMetadataHipchatNotification=; MetricMetadataNotify=; MetricMetadataPagerDutyNotification=; MetricPriority=; MetricType=; MissionAlertDTO=; MissionDisplay=; MissionMetadata=; MissionProgressDTO=; MissionRequirementDTO=; MissionsCompressedPayloadDTO=; MucJwtDto=; MultipleReplayMetadataRequestV2=; MultipleReplayMetadataResponseItemV2=; MultipleReplayMetadataResponseV2=; NonTimingEventV1=; NotifyFailureRequest=; NotifySuccessRequest=; NpeReward=; NpeRewardPackMetadata=; OpenedTeamDTO=; OpenedTeamMemberDTO=; PartiesVoiceDTO=; PatcherChunkingPatcherEnvironment=; PatcherComponentActionProgress=; PatcherComponentState=; PatcherComponentStateAction=; PatcherComponentStateProgress=; PatcherComponentStateWorkType=; PatcherNotification=; PatcherNotificationId=; PatcherP2PStatus=; PatcherP2PStatusUpdate=; PatcherProductResource=; PatcherProductState=; PatcherStatus=; PatcherUxResource=; PaymentsFrontEndRequest=; PaymentsFrontEndResult=; PaymentsPMCStartUrlRequest=; PaymentsPMCStartUrlResult=; PendingOpenedTeamDTO=; PendingRosterDTO=; PendingRosterInviteeDTO=; PendingRosterInviteeState=; PendingRosterMemberDTO=; PendingRosterMemberState=; PhaseInMember=; PhaseRosterDTO=; PickModes=; PlayerBehaviorLcdsForcedClientShutdown=; PlayerBehaviorLcdsSimpleMessage=; PlayerBehaviorSimpleMessageResponse=; PlayerDTO=; PlayerFinderDTO=; PlayerFinderEnum=; PlayerInfoDTO=; PlayerInventory=; PlayerLootDTO=; PlayerLootDefinitionsDTO=; PlayerLootResultDTO=; PlayerMissionDTO=; PlayerMissionEligibilityData=; PlayerMissionObjectiveDTO=; PlayerMissionRewardDTO=; PlayerNotificationsPlayerNotificationConfigResource=; PlayerNotificationsPlayerNotificationResource=; PlayerNotificationsRiotMessagingServiceMessage=; PlayerParticipant=; PlayerRosterHistoryDTO=; PlayerTierDTO=; PluginDescriptionResource=; PluginLcdsEvent=; PluginLcdsResponse=; PluginManagerResource=; PluginManagerState=; PluginMetadataResource=; PluginRegionLocaleChangedEvent=; PluginResource=; PluginResourceContract=; PluginResourceEvent=; PluginResourceEventType=; PluginServiceProxyResponse=; PluginThreadingModel=; Position=; ProcessControlProcess=; PublicRosterDTO=; Punishment=; QueryEvaluationRequestDTO=; QueryEvaluationResultDTO=; QueryResultDTO=; RankedScoutingDTO=; RankedScoutingMemberDTO=; RankedScoutingTopChampionDTO=; RedeemLootTransactionDTO=; RegionLocale=; RemotingHelpFormat=; RemotingPrivilege=; RemotingSerializedFormat=; ReplayMetadataV2=; ReplayResponseStatus=; RewardDetails=; RewardLogo=; RewardStrategy=; RiotMessagingServiceAcknowledgeBody=; RiotMessagingServiceEntitlementsToken=; RiotMessagingServicePluginRegionLocaleChangedEvent=; RiotMessagingServiceSession=; RiotMessagingServiceState=; RiotMessagingServiceTokenType=; RmsMessage=; Role=; RosterAggregatedStatsDTO=; RosterDTO=; RosterDynamicStateDTO=; RosterMatchAggregatedStatsDTO=; RosterMemberDTO=; RosterPeriodAggregatedStatsDTO=; RosterPlayerAggregatedStatsDTO=; RosterStatsDTO=; RosterWithdraw=; SLIBoolDiagnostic=; SLICount=; SLIDoubleDiagnostic=; SLIIntDiagnostic=; SLILabel=; SLIStringDiagnostic=; SanitizerContainsSanitizedRequest=; SanitizerContainsSanitizedResponse=; SanitizerSanitizeRequest=; SanitizerSanitizeResponse=; SanitizerSanitizerStatus=; SeriesDTO=; SeriesMediaDTO=; ShutdownLcdsForcedClientShutdown=; SimpleDialogMessage=; SimpleDialogMessageResponse=; SpectatorLcdsSpectateAvailabilityDto=; SpectatorLcdsSpectateAvailabilityResponseDto=; StoreLcdsChampionDTO=; StoreLcdsChampionSkinDTO=; StoreLcdsSimpleDialogMessage=; StoreLcdsSimpleDialogMessageResponse=; StoreLcdsStoreAccountBalanceNotification=; StoreLcdsStoreFulfillmentNotification=; ThemeVp=; TicketOfferDTO=; TicketOfferState=; TicketType=; TierConfig=; TimeSeriesEventBeginV1=; TimeSeriesEventEndV1=; TimeSeriesEventMarkerV1=; TournamentDTO=; TournamentHistoryAndWinnersDTO=; TournamentInfoDTO=; TournamentInfoMinimalDTO=; TournamentPhaseDTO=; TournamentPlayerInfoDTO=; TournamentStatusEnum=; TracingCriticalFlowEventV1=; TracingEventV1=; TracingModuleThreadingModelV1=; TracingModuleTypeV1=; TracingModuleV1=; TracingPhaseBeginV1=; TracingPhaseEndV1=; TracingPhaseImportanceV1=; TutorialMetadata=; VerboseLootOddsDTO=; YourshopLcdsChampionDTO=; YourshopLcdsChampionSkinDTO=; YourshopLcdsClientDynamicConfigurationNotification=; YourshopStoreFulfillmentNotification=; basicOperatingSystemInfo=; basicSystemInfo=; cookie=}
info        : @{title=; version=1.0.0}
paths       : @{/AsyncDelete=; /AsyncResult=; /AsyncStatus=; /Cancel=; /Exit=; /Help=; /LoggingGetEntries=; /LoggingMetrics=; /LoggingMetricsMetadata=; /LoggingStart=; /LoggingStop=; /MemoryPools=; /Subscribe=; /Unsubscribe=; /WebSocketFormat=; /anti-addiction/v1/policies/{policyType}/anti-addiction-state=; /async/v1/result/{asyncToken}=; /async/v1/status/{asyncToken}=; /client-config/v1/config=; /client-config/v1/config/{name}=; /client-config/v1/entitlements-token=; /client-config/v1/refresh-config-status=; /client-config/v1/status/{type}=; /client-config/v2/config/{name}=; /client-config/v2/namespace-changes=; /client-config/v2/namespace/{namespace}=; /client-config/v2/namespace/{namespace}/player=; /client-config/v2/namespace/{namespace}/public=; /config/v1/config=; /cookie-jar/v1/cookies=; /crash-reporting/v1/crash-status=; /data-store/v1/install-dir=; /data-store/v1/install-settings/{path}=; /data-store/v1/system-settings/{path}=; /entitlements/v1/token=; /lol-account-verification/v1/confirmActivationPin=; /lol-account-verification/v1/confirmDeactivationPin=; /lol-account-verification/v1/is-verified=; /lol-account-verification/v1/phone-number=; /lol-account-verification/v1/sendActivationPin=; /lol-account-verification/v1/sendDeactivationPin=; /lol-active-boosts/v1/active-boosts=; /lol-anti-addiction/v1/anti-addiction-token=; /lol-banners/v1/current-summoner/flags=; /lol-banners/v1/current-summoner/flags/equipped=; /lol-banners/v1/current-summoner/frames/equipped=; /lol-banners/v1/players/{puuid}/flags/equipped=; /lol-career-stats/v1/champion-averages/season/{season}/{championId}/{position}/{tier}/{queue}=; /lol-career-stats/v1/champion-averages/{championId}/{position}/{tier}/{queue}=; /lol-career-stats/v1/champion-experts/season/{season}/{championId}/{position}=; /lol-career-stats/v1/champion-experts/{championId}/{position}=; /lol-career-stats/v1/champion-stats-percentiles=; /lol-career-stats/v1/position-averages/season/{season}/{position}/{tier}/{queue}=; /lol-career-stats/v1/position-averages/{position}/{tier}/{queue}=; /lol-career-stats/v1/position-experts/season/{season}/{position}=; /lol-career-stats/v1/position-experts/{position}=; /lol-career-stats/v1/position-stats-percentiles=; /lol-career-stats/v1/summoner-games/{puuid}=; /lol-career-stats/v1/summoner-games/{puuid}/season/{season}=; /lol-career-stats/v1/summoner-stats/{puuid}/{season}/{queue}/{position}=; /lol-catalog/v1/item-details=; /lol-catalog/v1/items=; /lol-catalog/v1/items-list-details/skip-cache=; /lol-catalog/v1/items/{inventoryType}=; /lol-challenges/v1/ack-challenge-update/{id}=; /lol-challenges/v1/available-queue-ids=; /lol-challenges/v1/challenges/category-data=; /lol-challenges/v1/challenges/local-player=; /lol-challenges/v1/client-state=; /lol-challenges/v1/level-points=; /lol-challenges/v1/my-updated-challenges/{gameId}=; /lol-challenges/v1/penalty=; /lol-challenges/v1/seasons=; /lol-challenges/v1/summary-player-data/local-player=; /lol-challenges/v1/summary-player-data/player/{puuid}=; /lol-challenges/v1/summary-players-data/players=; /lol-challenges/v1/titles/all=; /lol-challenges/v1/titles/local-player=; /lol-challenges/v1/update-player-preferences=; /lol-challenges/v1/updated-challenges/{gameId}/{puuid}=; /lol-champ-select-legacy/v1/bannable-champion-ids=; /lol-champ-select-legacy/v1/battle-training/launch=; /lol-champ-select-legacy/v1/current-champion=; /lol-champ-select-legacy/v1/disabled-champion-ids=; /lol-champ-select-legacy/v1/implementation-active=; /lol-champ-select-legacy/v1/pickable-champion-ids=; /lol-champ-select-legacy/v1/pickable-skin-ids=; /lol-champ-select-legacy/v1/session=; /lol-champ-select-legacy/v1/session/actions/{id}=; /lol-champ-select-legacy/v1/session/actions/{id}/complete=; /lol-champ-select-legacy/v1/session/my-selection=; /lol-champ-select-legacy/v1/session/my-selection/reroll=; /lol-champ-select-legacy/v1/session/timer=; /lol-champ-select-legacy/v1/session/trades=; /lol-champ-select-legacy/v1/session/trades/{id}=; /lol-champ-select-legacy/v1/session/trades/{id}/accept=; /lol-champ-select-legacy/v1/session/trades/{id}/cancel=; /lol-champ-select-legacy/v1/session/trades/{id}/decline=; /lol-champ-select-legacy/v1/session/trades/{id}/request=; /lol-champ-select-legacy/v1/team-boost=; /lol-champ-select/v1/all-grid-champions=; /lol-champ-select/v1/bannable-champion-ids=; /lol-champ-select/v1/battle-training/launch=; /lol-champ-select/v1/current-champion=; /lol-champ-select/v1/disabled-champion-ids=; /lol-champ-select/v1/grid-champions/{championId}=; /lol-champ-select/v1/muted-players=; /lol-champ-select/v1/ongoing-swap=; /lol-champ-select/v1/ongoing-swap/{id}/clear=; /lol-champ-select/v1/ongoing-trade=; /lol-champ-select/v1/ongoing-trade/{id}/clear=; /lol-champ-select/v1/pickable-champion-ids=; /lol-champ-select/v1/pickable-skin-ids=; /lol-champ-select/v1/pin-drop-notification=; /lol-champ-select/v1/retrieve-latest-game-dto=; /lol-champ-select/v1/session=; /lol-champ-select/v1/session/actions/{id}=; /lol-champ-select/v1/session/actions/{id}/complete=; /lol-champ-select/v1/session/bench/swap/{championId}=; /lol-champ-select/v1/session/my-selection=; /lol-champ-select/v1/session/my-selection/reroll=; /lol-champ-select/v1/session/simple-inventory=; /lol-champ-select/v1/session/swaps=; /lol-champ-select/v1/session/swaps/{id}=; /lol-champ-select/v1/session/swaps/{id}/accept=; /lol-champ-select/v1/session/swaps/{id}/cancel=; /lol-champ-select/v1/session/swaps/{id}/decline=; /lol-champ-select/v1/session/swaps/{id}/request=; /lol-champ-select/v1/session/timer=; /lol-champ-select/v1/session/trades=; /lol-champ-select/v1/session/trades/{id}=; /lol-champ-select/v1/session/trades/{id}/accept=; /lol-champ-select/v1/session/trades/{id}/cancel=; /lol-champ-select/v1/session/trades/{id}/decline=; /lol-champ-select/v1/session/trades/{id}/request=; /lol-champ-select/v1/sfx-notifications=; /lol-champ-select/v1/skin-carousel-skins=; /lol-champ-select/v1/skin-selector-info=; /lol-champ-select/v1/summoners/{slotId}=; /lol-champ-select/v1/team-boost=; /lol-champ-select/v1/team-boost/purchase=; /lol-champ-select/v1/toggle-favorite/{championId}/{position}=; /lol-champ-select/v1/toggle-player-muted=; /lol-champions/v1/inventories/{summonerId}/champions=; /lol-champions/v1/inventories/{summonerId}/champions-minimal=; /lol-champions/v1/inventories/{summonerId}/champions-playable-count=; /lol-champions/v1/inventories/{summonerId}/champions/{championId}=; /lol-champions/v1/inventories/{summonerId}/champions/{championId}/skins=; /lol-champions/v1/inventories/{summonerId}/champions/{championId}/skins/{championSkinId}=; /lol-champions/v1/inventories/{summonerId}/champions/{championId}/skins/{skinId}/chromas=; /lol-champions/v1/inventories/{summonerId}/skins-minimal=; /lol-champions/v1/owned-champions-minimal=; /lol-chat/v1/blocked-players=; /lol-chat/v1/blocked-players/{id}=; /lol-chat/v1/config=; /lol-chat/v1/conversations=; /lol-chat/v1/conversations/active=; /lol-chat/v1/conversations/eog-chat-toggle=; /lol-chat/v1/conversations/notify=; /lol-chat/v1/conversations/{id}=; /lol-chat/v1/conversations/{id}/closed=; /lol-chat/v1/conversations/{id}/messages=; /lol-chat/v1/conversations/{id}/participants=; /lol-chat/v1/conversations/{id}/participants/{pid}=; /lol-chat/v1/errors=; /lol-chat/v1/errors/{id}=; /lol-chat/v1/friend-counts=; /lol-chat/v1/friend-exists/{summonerId}=; /lol-chat/v1/friend-groups=; /lol-chat/v1/friend-groups/order=; /lol-chat/v1/friend-groups/{id}=; /lol-chat/v1/friend-groups/{id}/friends=; /lol-chat/v1/friend-requests=; /lol-chat/v1/friend-requests/{id}=; /lol-chat/v1/friends=; /lol-chat/v1/friends/{id}=; /lol-chat/v1/me=; /lol-chat/v1/player-mutes=; /lol-chat/v1/resources=; /lol-chat/v1/session=; /lol-chat/v1/session/rso=; /lol-chat/v1/settings=; /lol-chat/v1/settings/{key}=; /lol-chat/v1/system-mutes=; /lol-clash/v1/all-tournaments=; /lol-clash/v1/awaiting-resent-eog=; /lol-clash/v1/bracket/{bracketId}=; /lol-clash/v1/checkin-allowed=; /lol-clash/v1/currentTournamentIds=; /lol-clash/v1/disabled-config=; /lol-clash/v1/enabled=; /lol-clash/v1/eog-player-update=; /lol-clash/v1/eog-player-update/acknowledge=; /lol-clash/v1/event/{uuid}=; /lol-clash/v1/events=; /lol-clash/v1/game-end=; /lol-clash/v1/game-end/acknowledge=; /lol-clash/v1/historyandwinners=; /lol-clash/v1/iconconfig=; /lol-clash/v1/invited-roster-ids=; /lol-clash/v1/lft/player=; /lol-clash/v1/lft/player/find=; /lol-clash/v1/lft/team=; /lol-clash/v1/lft/team/fetch-requests=; /lol-clash/v1/lft/team/find=; /lol-clash/v1/lft/team/requests=; /lol-clash/v1/lft/team/{rosterId}/request=; /lol-clash/v1/notifications=; /lol-clash/v1/notifications/acknowledge=; /lol-clash/v1/ping=; /lol-clash/v1/player=; /lol-clash/v1/player/chat-rosters=; /lol-clash/v1/player/history=; /lol-clash/v1/playmode-restricted=; /lol-clash/v1/ready=; /lol-clash/v1/refresh=; /lol-clash/v1/rewards=; /lol-clash/v1/roster/{rosterId}=; /lol-clash/v1/roster/{rosterId}/accept=; /lol-clash/v1/roster/{rosterId}/cancel-withdraw=; /lol-clash/v1/roster/{rosterId}/change-all-details=; /lol-clash/v1/roster/{rosterId}/change-icon=; /lol-clash/v1/roster/{rosterId}/change-name=; /lol-clash/v1/roster/{rosterId}/change-short-name=; /lol-clash/v1/roster/{rosterId}/decline=; /lol-clash/v1/roster/{rosterId}/disband=; /lol-clash/v1/roster/{rosterId}/invite=; /lol-clash/v1/roster/{rosterId}/kick=; /lol-clash/v1/roster/{rosterId}/leave=; /lol-clash/v1/roster/{rosterId}/lockin=; /lol-clash/v1/roster/{rosterId}/set-position=; /lol-clash/v1/roster/{rosterId}/set-ticket=; /lol-clash/v1/roster/{rosterId}/stats=; /lol-clash/v1/roster/{rosterId}/suggest=; /lol-clash/v1/roster/{rosterId}/suggest/{summonerId}/accept=; /lol-clash/v1/roster/{rosterId}/suggest/{summonerId}/decline=; /lol-clash/v1/roster/{rosterId}/suggest/{summonerId}/revoke=; /lol-clash/v1/roster/{rosterId}/ticket-offer/{summonerId}/accept=; /lol-clash/v1/roster/{rosterId}/ticket-offer/{summonerId}/decline=; /lol-clash/v1/roster/{rosterId}/ticket-offer/{summonerId}/offer=; /lol-clash/v1/roster/{rosterId}/ticket-offer/{summonerId}/revoke=; /lol-clash/v1/roster/{rosterId}/transfer-captain=; /lol-clash/v1/roster/{rosterId}/unlockin=; /lol-clash/v1/roster/{rosterId}/unwithdraw=; /lol-clash/v1/roster/{rosterId}/update-logos=; /lol-clash/v1/roster/{rosterId}/withdraw=; /lol-clash/v1/scouting/champions=; /lol-clash/v1/scouting/matchhistory=; /lol-clash/v1/season-rewards/{seasonId}=; /lol-clash/v1/simple-state-flags=; /lol-clash/v1/simple-state-flags/{id}/acknowledge=; /lol-clash/v1/thirdparty/team-data=; /lol-clash/v1/time=; /lol-clash/v1/tournament-state-info=; /lol-clash/v1/tournament-summary=; /lol-clash/v1/tournament/cancelled=; /lol-clash/v1/tournament/get-all-player-tiers=; /lol-clash/v1/tournament/{tournamentId}=; /lol-clash/v1/tournament/{tournamentId}/create-roster=; /lol-clash/v1/tournament/{tournamentId}/get-player-tiers=; /lol-clash/v1/tournament/{tournamentId}/player=; /lol-clash/v1/tournament/{tournamentId}/player-honor-restricted=; /lol-clash/v1/tournament/{tournamentId}/stateInfo=; /lol-clash/v1/tournament/{tournamentId}/winners=; /lol-clash/v1/update-logos=; /lol-clash/v1/visible=; /lol-clash/v1/voice=; /lol-clash/v1/voice-delay/{delaySeconds}=; /lol-clash/v1/voice-enabled=; /lol-clash/v2/playmode-restricted=; /lol-client-config/v3/client-config/{name}=; /lol-collections/v1/inventories/chest-eligibility=; /lol-collections/v1/inventories/local-player/champion-mastery-score=; /lol-collections/v1/inventories/scouting=; /lol-collections/v1/inventories/{summonerId}/backdrop=; /lol-collections/v1/inventories/{summonerId}/champion-mastery=; /lol-collections/v1/inventories/{summonerId}/champion-mastery/top=; /lol-collections/v1/inventories/{summonerId}/spells=; /lol-collections/v1/inventories/{summonerId}/ward-skins=; /lol-collections/v1/inventories/{summonerId}/ward-skins/{wardSkinId}=; /lol-content-targeting/v1/filters=; /lol-content-targeting/v1/locale=; /lol-content-targeting/v1/protected_filters=; /lol-cosmetics/v1/inventories/{setName}/companions=; /lol-cosmetics/v1/inventories/{setName}/damage-skins=; /lol-cosmetics/v1/inventories/{setName}/map-skins=; /lol-cosmetics/v1/inventories/{setName}/playbooks=; /lol-cosmetics/v1/recent/{type}=; /lol-cosmetics/v1/selection/companion=; /lol-cosmetics/v1/selection/playbook=; /lol-cosmetics/v1/selection/tft-damage-skin=; /lol-cosmetics/v1/selection/tft-map-skin=; /lol-drops/v1/drop-tables=; /lol-drops/v1/drop-tables/{dropTableId}=; /lol-drops/v1/drop-tables/{dropTableId}/odds-list=; /lol-drops/v1/drop-tables/{dropTableId}/odds-tree=; /lol-drops/v1/drop-tables/{dropTableId}/players/{playerId}/pity-count=; /lol-drops/v1/players/{playerId}/pity-counts=; /lol-drops/v1/ready=; /lol-email-verification/v1/confirm-email=; /lol-email-verification/v1/email=; /lol-end-of-game/v1/champion-mastery-updates=; /lol-end-of-game/v1/eog-stats-block=; /lol-end-of-game/v1/gameclient-eog-stats-block=; /lol-end-of-game/v1/state/dismiss-stats=; /lol-end-of-game/v1/tft-eog-stats=; /lol-end-of-game/v2/player-reports=; /lol-esport-stream-notifications/v1/live-streams=; /lol-esport-stream-notifications/v1/send-stats=; /lol-esport-stream-notifications/v1/stream-url=; /lol-event-shop/v1/categories-offers=; /lol-event-shop/v1/claim-select-all=; /lol-event-shop/v1/claim-select-bonus-iteration=; /lol-event-shop/v1/event-details-data=; /lol-event-shop/v1/failure-loading-reward-track=; /lol-event-shop/v1/failure-loading-token-shop=; /lol-event-shop/v1/info=; /lol-event-shop/v1/is-grace-period=; /lol-event-shop/v1/is-multi-purchase-enabled=; /lol-event-shop/v1/is-pass-purchase-enabled=; /lol-event-shop/v1/navigation-button-data=; /lol-event-shop/v1/pass-background-data=; /lol-event-shop/v1/pass-bundles=; /lol-event-shop/v1/progress-info-data=; /lol-event-shop/v1/purchase-item=; /lol-event-shop/v1/purchase-offer=; /lol-event-shop/v1/reward-track-bonus-items=; /lol-event-shop/v1/reward-track-bonus-progress=; /lol-event-shop/v1/reward-track-items=; /lol-event-shop/v1/reward-track-progress=; /lol-event-shop/v1/reward-track-xp=; /lol-event-shop/v1/token-balance=; /lol-event-shop/v1/token-shop-data=; /lol-event-shop/v1/token-upsell=; /lol-event-shop/v1/unclaimed-rewards=; /lol-game-client-chat/v1/buddies=; /lol-game-client-chat/v1/ignored-summoners=; /lol-game-client-chat/v1/instant-messages=; /lol-game-client-chat/v1/muted-summoners=; /lol-game-client-chat/v1/party-messages=; /lol-game-queues/v1/custom=; /lol-game-queues/v1/custom-non-default=; /lol-game-queues/v1/game-type-config/{gameTypeConfigId}=; /lol-game-queues/v1/game-type-config/{gameTypeConfigId}/map/{mapId}=; /lol-game-queues/v1/queues=; /lol-game-queues/v1/queues/type/{queueType}=; /lol-game-queues/v1/queues/{id}=; /lol-game-settings/v1/didreset=; /lol-game-settings/v1/game-settings=; /lol-game-settings/v1/game-settings-schema=; /lol-game-settings/v1/input-settings=; /lol-game-settings/v1/input-settings-schema=; /lol-game-settings/v1/ready=; /lol-game-settings/v1/reload-post-game=; /lol-game-settings/v1/save=; /lol-gameflow/v1/ack-failed-to-launch=; /lol-gameflow/v1/active-patcher-lock=; /lol-gameflow/v1/availability=; /lol-gameflow/v1/basic-tutorial=; /lol-gameflow/v1/basic-tutorial/start=; /lol-gameflow/v1/battle-training=; /lol-gameflow/v1/battle-training/start=; /lol-gameflow/v1/battle-training/stop=; /lol-gameflow/v1/client-received-message=; /lol-gameflow/v1/early-exit=; /lol-gameflow/v1/early-exit-notifications/eog=; /lol-gameflow/v1/early-exit-notifications/eog/{key}=; /lol-gameflow/v1/early-exit-notifications/missions=; /lol-gameflow/v1/early-exit-notifications/missions/{key}=; /lol-gameflow/v1/extra-game-client-args=; /lol-gameflow/v1/gameflow-metadata/player-status=; /lol-gameflow/v1/gameflow-metadata/registration-status=; /lol-gameflow/v1/gameflow-phase=; /lol-gameflow/v1/pre-end-game-transition=; /lol-gameflow/v1/reconnect=; /lol-gameflow/v1/session=; /lol-gameflow/v1/session/champ-select/phase-time-remaining=; /lol-gameflow/v1/session/dodge=; /lol-gameflow/v1/session/event=; /lol-gameflow/v1/session/game-configuration=; /lol-gameflow/v1/session/per-position-summoner-spells/disallowed=; /lol-gameflow/v1/session/per-position-summoner-spells/disallowed/as-string=; /lol-gameflow/v1/session/per-position-summoner-spells/required=; /lol-gameflow/v1/session/per-position-summoner-spells/required/as-string=; /lol-gameflow/v1/session/request-enter-gameflow=; /lol-gameflow/v1/session/request-lobby=; /lol-gameflow/v1/session/request-tournament-checkin=; /lol-gameflow/v1/session/tournament-ended=; /lol-gameflow/v1/spectate=; /lol-gameflow/v1/spectate/delayed-launch=; /lol-gameflow/v1/spectate/launch=; /lol-gameflow/v1/spectate/quit=; /lol-gameflow/v1/tick=; /lol-gameflow/v1/watch=; /lol-gameflow/v1/watch/launch=; /lol-gameflow/v2/spectate/launch=; /lol-geoinfo/v1/getlocation=; /lol-geoinfo/v1/whereami=; /lol-highlights/v1/config=; /lol-highlights/v1/file-browser/{highlightId}=; /lol-highlights/v1/highlights=; /lol-highlights/v1/highlights-folder-path=; /lol-highlights/v1/highlights-folder-path/default=; /lol-highlights/v1/highlights/{id}=; /lol-honeyfruit/v1/account-claim/account-status/{puuid}=; /lol-honeyfruit/v1/account-claim/auto-dismiss=; /lol-honeyfruit/v1/account-claim/linking-redirect=; /lol-honeyfruit/v1/account-claim/migration=; /lol-honeyfruit/v1/linking-settings-button-available=; /lol-honeyfruit/v1/vng-publisher-settings=; /lol-honor-v2/v1/ballot=; /lol-honor-v2/v1/config=; /lol-honor-v2/v1/honor-player=; /lol-honor-v2/v1/late-recognition=; /lol-honor-v2/v1/late-recognition/ack=; /lol-honor-v2/v1/latest-eligible-game=; /lol-honor-v2/v1/level-change=; /lol-honor-v2/v1/level-change/ack=; /lol-honor-v2/v1/mutual-honor=; /lol-honor-v2/v1/mutual-honor/ack=; /lol-honor-v2/v1/profile=; /lol-honor-v2/v1/recognition=; /lol-honor-v2/v1/recognition-history=; /lol-honor-v2/v1/reward-granted=; /lol-honor-v2/v1/reward-granted/ack=; /lol-honor-v2/v1/team-choices=; /lol-honor-v2/v1/vote-completion=; /lol-hovercard/v1/friend-info-by-summoner/{summonerId}=; /lol-hovercard/v1/friend-info/{puuid}=; /lol-inventory/v1/champSelectInventory=; /lol-inventory/v1/initial-configuration-complete=; /lol-inventory/v1/inventory=; /lol-inventory/v1/inventory/emotes=; /lol-inventory/v1/inventoryWithF2P=; /lol-inventory/v1/notification/acknowledge=; /lol-inventory/v1/notifications/{inventoryType}=; /lol-inventory/v1/players/{puuid}/inventory=; /lol-inventory/v1/signedInventory=; /lol-inventory/v1/signedInventory/simple=; /lol-inventory/v1/signedInventory/tournamentlogos=; /lol-inventory/v1/signedInventoryCache=; /lol-inventory/v1/signedWallet=; /lol-inventory/v1/signedWallet/{currencyType}=; /lol-inventory/v1/wallet=; /lol-inventory/v1/wallet/{currencyType}=; /lol-inventory/v1/xbox-subscription-status=; /lol-inventory/v2/inventory/{inventoryType}=; /lol-item-sets/v1/item-sets/validate=; /lol-item-sets/v1/item-sets/{summonerId}/sets=; /lol-kickout/v1/notification=; /lol-kr-playtime-reminder/v1/message=; /lol-kr-playtime-reminder/v1/playtime=; /lol-kr-shutdown-law/v1/custom-status=; /lol-kr-shutdown-law/v1/disabled-queues=; /lol-kr-shutdown-law/v1/notification=; /lol-kr-shutdown-law/v1/queue-status/{queue_id}=; /lol-kr-shutdown-law/v1/rating-screen=; /lol-kr-shutdown-law/v1/rating-screen/acknowledge=; /lol-kr-shutdown-law/v1/status=; /lol-league-session/v1/league-session-token=; /lol-leaver-buster/v1/notifications=; /lol-leaver-buster/v1/notifications/{id}=; /lol-license-agreement/v1/agreement=; /lol-license-agreement/v1/agreements=; /lol-license-agreement/v1/agreements/{id}/accept=; /lol-license-agreement/v1/agreements/{id}/decline=; /lol-license-agreement/v1/all-agreements=; /lol-license-agreement/v1/privacy-policy=; /lol-license-agreement/v1/serve-location=; /lol-loadouts/v1/loadouts-ready=; /lol-loadouts/v4/loadouts=; /lol-loadouts/v4/loadouts/scope/account=; /lol-loadouts/v4/loadouts/scope/{scope}/{scopeItemId}=; /lol-loadouts/v4/loadouts/{id}=; /lol-loadouts/v4/loadouts/{loadoutId}=; /lol-lobby-team-builder/champ-select/v1/bannable-champion-ids=; /lol-lobby-team-builder/champ-select/v1/current-champion=; /lol-lobby-team-builder/champ-select/v1/disabled-champion-ids=; /lol-lobby-team-builder/champ-select/v1/has-auto-assigned-smite=; /lol-lobby-team-builder/champ-select/v1/implementation-active=; /lol-lobby-team-builder/champ-select/v1/pickable-champion-ids=; /lol-lobby-team-builder/champ-select/v1/pickable-skin-ids=; /lol-lobby-team-builder/champ-select/v1/preferences=; /lol-lobby-team-builder/champ-select/v1/retrieve-latest-game-dto=; /lol-lobby-team-builder/champ-select/v1/sending-loadouts-gcos-enabled=; /lol-lobby-team-builder/champ-select/v1/session=; /lol-lobby-team-builder/champ-select/v1/session/actions/{id}=; /lol-lobby-team-builder/champ-select/v1/session/actions/{id}/complete=; /lol-lobby-team-builder/champ-select/v1/session/bench/swap/{championId}=; /lol-lobby-team-builder/champ-select/v1/session/my-selection=; /lol-lobby-team-builder/champ-select/v1/session/my-selection/reroll=; /lol-lobby-team-builder/champ-select/v1/session/obfuscated-summoner-ids=; /lol-lobby-team-builder/champ-select/v1/session/swaps=; /lol-lobby-team-builder/champ-select/v1/session/swaps/{id}=; /lol-lobby-team-builder/champ-select/v1/session/swaps/{id}/accept=; /lol-lobby-team-builder/champ-select/v1/session/swaps/{id}/cancel=; /lol-lobby-team-builder/champ-select/v1/session/swaps/{id}/decline=; /lol-lobby-team-builder/champ-select/v1/session/swaps/{id}/request=; /lol-lobby-team-builder/champ-select/v1/session/timer=; /lol-lobby-team-builder/champ-select/v1/session/trades=; /lol-lobby-team-builder/champ-select/v1/session/trades/{id}=; /lol-lobby-team-builder/champ-select/v1/session/trades/{id}/accept=; /lol-lobby-team-builder/champ-select/v1/session/trades/{id}/cancel=; /lol-lobby-team-builder/champ-select/v1/session/trades/{id}/decline=; /lol-lobby-team-builder/champ-select/v1/session/trades/{id}/request=; /lol-lobby-team-builder/champ-select/v1/simple-inventory=; /lol-lobby-team-builder/champ-select/v1/team-boost=; /lol-lobby-team-builder/champ-select/v1/team-boost/purchase=; /lol-lobby-team-builder/v1/matchmaking=; /lol-lobby-team-builder/v1/ready-check/accept=; /lol-lobby-team-builder/v1/ready-check/decline=; /lol-lobby/v1/autofill-displayed=; /lol-lobby/v1/clash=; /lol-lobby/v1/custom-games=; /lol-lobby/v1/custom-games/refresh=; /lol-lobby/v1/custom-games/{id}=; /lol-lobby/v1/custom-games/{id}/join=; /lol-lobby/v1/lobby/availability=; /lol-lobby/v1/lobby/countdown=; /lol-lobby/v1/lobby/custom/bots=; /lol-lobby/v1/lobby/custom/bots/{summonerInternalName}=; /lol-lobby/v1/lobby/custom/cancel-champ-select=; /lol-lobby/v1/lobby/custom/start-champ-select=; /lol-lobby/v1/lobby/custom/switch-teams=; /lol-lobby/v1/lobby/invitations=; /lol-lobby/v1/lobby/invitations/{id}=; /lol-lobby/v1/lobby/members/localMember/player-slots=; /lol-lobby/v1/lobby/members/localMember/position-preferences=; /lol-lobby/v1/parties/active=; /lol-lobby/v1/parties/gamemode=; /lol-lobby/v1/parties/metadata=; /lol-lobby/v1/parties/player=; /lol-lobby/v1/parties/queue=; /lol-lobby/v1/parties/ready=; /lol-lobby/v1/parties/{partyId}/members/{puuid}/role=; /lol-lobby/v1/party-rewards=; /lol-lobby/v1/tournaments/{id}/join=; /lol-lobby/v2/comms/members=; /lol-lobby/v2/comms/token=; /lol-lobby/v2/eligibility/game-select-eligibility-hash=; /lol-lobby/v2/eligibility/initial-configuration-complete=; /lol-lobby/v2/eligibility/party=; /lol-lobby/v2/eligibility/self=; /lol-lobby/v2/eog-invitations=; /lol-lobby/v2/lobby=; /lol-lobby/v2/lobby/custom/available-bots=; /lol-lobby/v2/lobby/custom/bots-enabled=; /lol-lobby/v2/lobby/invitations=; /lol-lobby/v2/lobby/matchmaking/search=; /lol-lobby/v2/lobby/matchmaking/search-state=; /lol-lobby/v2/lobby/members=; /lol-lobby/v2/lobby/members/localMember/position-preferences=; /lol-lobby/v2/lobby/members/{summonerId}/grant-invite=; /lol-lobby/v2/lobby/members/{summonerId}/kick=; /lol-lobby/v2/lobby/members/{summonerId}/promote=; /lol-lobby/v2/lobby/members/{summonerId}/revoke-invite=; /lol-lobby/v2/lobby/partyType=; /lol-lobby/v2/lobby/team/{team}=; /lol-lobby/v2/matchmaking/quick-search=; /lol-lobby/v2/notifications=; /lol-lobby/v2/notifications/{notificationId}=; /lol-lobby/v2/parties/overrides/EnabledForTeamBuilderQueues=; /lol-lobby/v2/party-active=; /lol-lobby/v2/party/eog-status=; /lol-lobby/v2/party/{partyId}/join=; /lol-lobby/v2/play-again=; /lol-lobby/v2/play-again-decline=; /lol-lobby/v2/received-invitations=; /lol-lobby/v2/received-invitations/{invitationId}/accept=; /lol-lobby/v2/received-invitations/{invitationId}/decline=; /lol-lobby/v2/registration-status=; /lol-login/v1/account-state=; /lol-login/v1/change-summoner-name=; /lol-login/v1/delete-rso-on-close=; /lol-login/v1/leagueSessionStatus=; /lol-login/v1/login-connection-state=; /lol-login/v1/login-data-packet=; /lol-login/v1/login-in-game-creds=; /lol-login/v1/login-platform-credentials=; /lol-login/v1/login-queue-state=; /lol-login/v1/service-proxy-async-requests/{serviceName}/{methodName}=; /lol-login/v1/service-proxy-uuid-requests=; /lol-login/v1/session=; /lol-login/v1/session/invoke=; /lol-login/v1/shutdown-locks/{lockName}=; /lol-login/v1/summoner-session=; /lol-login/v1/summoner-session-failed=; /lol-login/v1/wallet=; /lol-login/v2/league-session-init-token=; /lol-loot/v1/craft/mass=; /lol-loot/v1/currency-configuration=; /lol-loot/v1/disenchant-recipes=; /lol-loot/v1/enabled=; /lol-loot/v1/loot-grants=; /lol-loot/v1/loot-grants/{id}=; /lol-loot/v1/loot-items=; /lol-loot/v1/loot-odds/evaluateQuery=; /lol-loot/v1/loot-odds/{recipeName}=; /lol-loot/v1/mass-disenchant/configuration=; /lol-loot/v1/milestones=; /lol-loot/v1/milestones/counters=; /lol-loot/v1/milestones/items=; /lol-loot/v1/milestones/{lootMilestonesId}=; /lol-loot/v1/milestones/{lootMilestonesId}/claim=; /lol-loot/v1/milestones/{lootMilestonesId}/claimProgress=; /lol-loot/v1/milestones/{lootMilestonesId}/counter=; /lol-loot/v1/new-player-check-done=; /lol-loot/v1/new-player-check-done/{newValue}=; /lol-loot/v1/player-display-categories=; /lol-loot/v1/player-loot=; /lol-loot/v1/player-loot-map=; /lol-loot/v1/player-loot-notifications=; /lol-loot/v1/player-loot-notifications/{id}/acknowledge=; /lol-loot/v1/player-loot/{lootId}=; /lol-loot/v1/player-loot/{lootId}/context-menu=; /lol-loot/v1/player-loot/{lootId}/new-notification=; /lol-loot/v1/player-loot/{lootName}/redeem=; /lol-loot/v1/ready=; /lol-loot/v1/recipes/configuration=; /lol-loot/v1/recipes/initial-item/{lootId}=; /lol-loot/v1/recipes/{recipeName}/craft=; /lol-loot/v1/refresh=; /lol-loot/v2/player-loot-map=; /lol-loyalty/v1/status-notification=; /lol-loyalty/v1/updateLoyaltyInventory=; /lol-maps/v1/map=; /lol-maps/v1/map/{id}=; /lol-maps/v1/maps=; /lol-maps/v2/map/{id}/{gameMode}=; /lol-maps/v2/map/{id}/{gameMode}/{gameMutator}=; /lol-maps/v2/maps=; /lol-marketing-preferences/v1/partition/{partitionKey}=; /lol-marketing-preferences/v1/ready=; /lol-match-history/v1/acs-endpoint-override=; /lol-match-history/v1/delta=; /lol-match-history/v1/game-timelines/{gameId}=; /lol-match-history/v1/games/{gameId}=; /lol-match-history/v1/products/lol/current-summoner/matches=; /lol-match-history/v1/products/lol/{puuid}/matches=; /lol-match-history/v1/products/tft/{puuid}/matches=; /lol-match-history/v1/recently-played-summoners=; /lol-match-history/v1/web-url=; /lol-match-history/v3/matchlist/account/{accountId}=; /lol-matchmaking/v1/ready-check=; /lol-matchmaking/v1/ready-check/accept=; /lol-matchmaking/v1/ready-check/decline=; /lol-matchmaking/v1/search=; /lol-matchmaking/v1/search/errors=; /lol-matchmaking/v1/search/errors/{id}=; /lol-missions/v1/data=; /lol-missions/v1/force=; /lol-missions/v1/missions=; /lol-missions/v1/player=; /lol-missions/v1/player/{missionId}=; /lol-missions/v1/series=; /lol-missions/v2/player/opt=; /lol-npe-rewards/v1/challenges/opt=; /lol-npe-rewards/v1/challenges/progress=; /lol-npe-rewards/v1/level-rewards=; /lol-npe-rewards/v1/level-rewards/state=; /lol-npe-rewards/v1/login-rewards=; /lol-npe-rewards/v1/login-rewards/state=; /lol-npe-tutorial-path/v1/rewards/champ=; /lol-npe-tutorial-path/v1/settings=; /lol-npe-tutorial-path/v1/tutorials=; /lol-npe-tutorial-path/v1/tutorials/init=; /lol-npe-tutorial-path/v1/tutorials/{tutorialId}/view=; /lol-patch/v1/checking-enabled=; /lol-patch/v1/environment=; /lol-patch/v1/game-patch-url=; /lol-patch/v1/game-version=; /lol-patch/v1/notifications=; /lol-patch/v1/notifications/{id}=; /lol-patch/v1/products/league_of_legends/detect-corruption-request=; /lol-patch/v1/products/league_of_legends/install-location=; /lol-patch/v1/products/league_of_legends/partial-repair-request=; /lol-patch/v1/products/league_of_legends/start-checking-request=; /lol-patch/v1/products/league_of_legends/start-patching-request=; /lol-patch/v1/products/league_of_legends/state=; /lol-patch/v1/products/league_of_legends/stop-checking-request=; /lol-patch/v1/products/league_of_legends/stop-patching-request=; /lol-patch/v1/products/league_of_legends/supported-game-releases=; /lol-patch/v1/status=; /lol-patch/v1/ux=; /lol-perks/v1/currentpage=; /lol-perks/v1/inventory=; /lol-perks/v1/pages=; /lol-perks/v1/pages/validate=; /lol-perks/v1/pages/{id}=; /lol-perks/v1/pages/{id}/auto-modified-selections=; /lol-perks/v1/perks=; /lol-perks/v1/perks/ack-gameplay-updated=; /lol-perks/v1/perks/disabled=; /lol-perks/v1/perks/gameplay-updated=; /lol-perks/v1/recommended-pages-position/champion/{championId}=; /lol-perks/v1/recommended-pages-position/champion/{championId}/position/{position}=; /lol-perks/v1/recommended-pages/champion/{championId}/position/{position}/map/{mapId}=; /lol-perks/v1/rune-recommender-auto-select=; /lol-perks/v1/settings=; /lol-perks/v1/show-auto-modified-pages-notification=; /lol-perks/v1/styles=; /lol-perks/v1/update-page-order=; /lol-pft/v2/events=; /lol-pft/v2/survey=; /lol-platform-config/v1/initial-configuration-complete=; /lol-platform-config/v1/namespaces=; /lol-platform-config/v1/namespaces/{ns}=; /lol-platform-config/v1/namespaces/{ns}/{key}=; /lol-player-behavior/v1/ban=; /lol-player-behavior/v1/chat-restriction=; /lol-player-behavior/v1/code-of-conduct-notification=; /lol-player-behavior/v1/config=; /lol-player-behavior/v1/ranked-restriction=; /lol-player-behavior/v1/reform-card=; /lol-player-behavior/v1/reporter-feedback=; /lol-player-behavior/v1/reporter-feedback/{id}=; /lol-player-behavior/v2/reform-card=; /lol-player-behavior/v2/reporter-feedback=; /lol-player-behavior/v2/reporter-feedback/{key}=; /lol-player-behavior/v3/reform-card/{id}=; /lol-player-behavior/v3/reform-cards=; /lol-player-level-up/v1/level-up=; /lol-player-level-up/v1/level-up-notifications/{pluginName}=; /lol-player-messaging/v1/celebration/notification=; /lol-player-messaging/v1/celebration/notification/{id}/acknowledge=; /lol-player-messaging/v1/notification=; /lol-player-messaging/v1/notification/{id}/acknowledge=; /lol-player-preferences/v1/player-preferences-endpoint-override=; /lol-player-preferences/v1/player-preferences-ready=; /lol-player-preferences/v1/preference=; /lol-player-preferences/v1/preference/{type}=; /lol-player-report-sender/v1/champ-select-reports=; /lol-player-report-sender/v1/end-of-game-reports=; /lol-player-report-sender/v1/in-game-reports=; /lol-player-report-sender/v1/match-history-reports=; /lol-player-report-sender/v1/reported-players/gameId/{gameId}=; /lol-pre-end-of-game/v1/complete/{sequenceEventName}=; /lol-pre-end-of-game/v1/currentSequenceEvent=; /lol-pre-end-of-game/v1/registration/{sequenceEventName}=; /lol-pre-end-of-game/v1/registration/{sequenceEventName}/{priority}=; /lol-premade-voice/v1/availability=; /lol-premade-voice/v1/capturedevices=; /lol-premade-voice/v1/first-experience=; /lol-premade-voice/v1/first-experience/game=; /lol-premade-voice/v1/first-experience/lcu=; /lol-premade-voice/v1/first-experience/reset=; /lol-premade-voice/v1/gameClientUpdatedPTTKey=; /lol-premade-voice/v1/mic-test=; /lol-premade-voice/v1/participant-records=; /lol-premade-voice/v1/participants=; /lol-premade-voice/v1/participants/{puuid}/mute=; /lol-premade-voice/v1/participants/{puuid}/volume=; /lol-premade-voice/v1/push-to-talk/check-available=; /lol-premade-voice/v1/self/activationSensitivity=; /lol-premade-voice/v1/self/inputMode=; /lol-premade-voice/v1/self/micLevel=; /lol-premade-voice/v1/self/mute=; /lol-premade-voice/v1/session=; /lol-premade-voice/v1/settings=; /lol-premade-voice/v1/settings/reset=; /lol-progression/v1/groups/configuration=; /lol-progression/v1/groups/{groupId}/configuration=; /lol-progression/v1/groups/{groupId}/instanceData=; /lol-progression/v1/ready=; /lol-publishing-content/v1/listeners/allow-list/{region}=; /lol-publishing-content/v1/listeners/client-data=; /lol-publishing-content/v1/listeners/pubhub-config=; /lol-publishing-content/v1/ready=; /lol-publishing-content/v1/settings=; /lol-publishing-content/v1/tft-hub-cards=; /lol-purchase-widget/v1/configuration=; /lol-purchase-widget/v1/order-notifications=; /lol-purchase-widget/v1/purchasable-item=; /lol-purchase-widget/v1/purchasable-items/{inventoryType}=; /lol-purchase-widget/v2/purchaseItems=; /lol-purchase-widget/v3/base-skin-line-data/{offerId}=; /lol-purchase-widget/v3/purchase-offer-order-statuses=; /lol-purchase-widget/v3/purchaseOffer=; /lol-purchase-widget/v3/validateOffer=; /lol-ranked/v1/apex-leagues/{queueType}/{tier}=; /lol-ranked/v1/challenger-ladders-enabled=; /lol-ranked/v1/current-lp-change-notification=; /lol-ranked/v1/current-ranked-stats=; /lol-ranked/v1/eligibleTiers/queueType/{queueType}=; /lol-ranked/v1/eos-notifications=; /lol-ranked/v1/eos-notifications/{id}/acknowledge=; /lol-ranked/v1/eos-rewards=; /lol-ranked/v1/league-ladders/{puuid}=; /lol-ranked/v1/notifications=; /lol-ranked/v1/notifications/{id}/acknowledge=; /lol-ranked/v1/ranked-stats/{puuid}=; /lol-ranked/v1/rated-ladder/{queueType}=; /lol-ranked/v1/signed-ranked-stats=; /lol-ranked/v1/social-leaderboard-ranked-queue-stats-for-puuids=; /lol-ranked/v1/splits-config=; /lol-ranked/v1/top-rated-ladders-enabled=; /lol-ranked/v2/tiers=; /lol-regalia/v2/config=; /lol-regalia/v2/current-summoner/regalia=; /lol-regalia/v2/summoners/{summonerId}/queues/{queue}/positions/{position}/regalia=; /lol-regalia/v2/summoners/{summonerId}/queues/{queue}/regalia=; /lol-regalia/v2/summoners/{summonerId}/regalia=; /lol-regalia/v2/summoners/{summonerId}/regalia/async=; /lol-regalia/v3/inventory/{inventoryType}=; /lol-regalia/v3/summoners/{summonerId}/regalia=; /lol-replays/v1/configuration=; /lol-replays/v1/metadata/{gameId}=; /lol-replays/v1/metadata/{gameId}/create/gameVersion/{gameVersion}/gameType/{gameType}/queueId/{queueId}=; /lol-replays/v1/rofls/path=; /lol-replays/v1/rofls/path/default=; /lol-replays/v1/rofls/scan=; /lol-replays/v1/rofls/{gameId}/download=; /lol-replays/v1/rofls/{gameId}/download/graceful=; /lol-replays/v1/rofls/{gameId}/watch=; /lol-replays/v2/metadata/{gameId}/create=; /lol-rewards/v1/grants=; /lol-rewards/v1/grants/{grantId}/select=; /lol-rewards/v1/grants/{grantId}/view=; /lol-rewards/v1/groups=; /lol-rewards/v1/select-bulk=; /lol-rms/v1/champion-mastery-leaveup-update=; /lol-rms/v1/champion-mastery-leaveup-update/{id}=; /lol-rso-auth/configuration/v3/ready-state=; /lol-rso-auth/v1/auth-hints/hint=; /lol-rso-auth/v1/authorization=; /lol-rso-auth/v1/authorization/access-token=; /lol-rso-auth/v1/authorization/error=; /lol-rso-auth/v1/authorization/gas=; /lol-rso-auth/v1/authorization/id-token=; /lol-rso-auth/v1/authorization/refresh=; /lol-rso-auth/v1/authorization/userinfo=; /lol-rso-auth/v1/device-id=; /lol-rso-auth/v1/session=; /lol-rso-auth/v1/status/{platformId}=; /lol-rso-auth/v2/config=; /lol-seasons/v1/allSeasons/product/{product}=; /lol-seasons/v1/season/product/{product}=; /lol-service-status/v1/lcu-status=; /lol-service-status/v1/ticker-messages=; /lol-settings/v1/account/didreset=; /lol-settings/v1/account/save=; /lol-settings/v1/account/{category}=; /lol-settings/v1/local/{category}=; /lol-settings/v2/account/{ppType}/{category}=; /lol-settings/v2/config=; /lol-settings/v2/didreset/{ppType}=; /lol-settings/v2/local/{category}=; /lol-settings/v2/ready=; /lol-settings/v2/reload/{ppType}=; /lol-shutdown/v1/notification=; /lol-simple-dialog-messages/v1/messages=; /lol-simple-dialog-messages/v1/messages/{messageId}=; /lol-social-leaderboard/v1/leaderboard-next-update-time=; /lol-social-leaderboard/v1/social-leaderboard-data=; /lol-spectator/v1/buddy/spectate=; /lol-spectator/v1/spectate=; /lol-spectator/v1/spectate/launch=; /lol-statstones/v1/eog-notifications/{gameId}=; /lol-statstones/v1/featured-champion-statstones/{championItemId}=; /lol-statstones/v1/featured-champion-statstones/{championItemId}/{statstoneId}=; /lol-statstones/v1/profile-summary/{puuid}=; /lol-statstones/v1/statstone/{contentId}/owned=; /lol-statstones/v1/statstones-enabled-queue-ids=; /lol-statstones/v1/vignette-notifications=; /lol-statstones/v1/vignette-notifications/{key}=; /lol-statstones/v2/player-statstones-self/{championItemId}=; /lol-statstones/v2/player-summary-self=; /lol-store/v1/catalog=; /lol-store/v1/catalog/items/skip-cache=; /lol-store/v1/catalog/sales=; /lol-store/v1/catalog/{inventoryType}=; /lol-store/v1/catalogByInstanceIds=; /lol-store/v1/getStoreUrl=; /lol-store/v1/giftablefriends=; /lol-store/v1/itemKeysFromInstanceIds=; /lol-store/v1/itemKeysFromOfferIds=; /lol-store/v1/lastPage=; /lol-store/v1/notifications/acknowledge=; /lol-store/v1/offers=; /lol-store/v1/offers/{offerId}=; /lol-store/v1/order-notifications=; /lol-store/v1/order-notifications/{id}=; /lol-store/v1/paymentDetails=; /lol-store/v1/skins/{skinId}=; /lol-store/v1/status=; /lol-store/v1/store-ready=; /lol-store/v1/{pageType}=; /lol-store/v2/offers=; /lol-store/v3/purchase=; /lol-suggested-players/v1/reported-player=; /lol-suggested-players/v1/suggested-players=; /lol-suggested-players/v1/suggested-players/{summonerId}=; /lol-suggested-players/v1/victorious-comrade=; /lol-summoner/v1/check-name-availability-new-summoners/{name}=; /lol-summoner/v1/check-name-availability/{name}=; /lol-summoner/v1/current-alias-state=; /lol-summoner/v1/current-summoner=; /lol-summoner/v1/current-summoner/account-and-summoner-ids=; /lol-summoner/v1/current-summoner/autofill=; /lol-summoner/v1/current-summoner/icon=; /lol-summoner/v1/current-summoner/jwt=; /lol-summoner/v1/current-summoner/name=; /lol-summoner/v1/current-summoner/profile-privacy=; /lol-summoner/v1/current-summoner/rerollPoints=; /lol-summoner/v1/current-summoner/summoner-profile=; /lol-summoner/v1/player-name-mode=; /lol-summoner/v1/profile-privacy-enabled=; /lol-summoner/v1/save-alias=; /lol-summoner/v1/status=; /lol-summoner/v1/summoner-profile=; /lol-summoner/v1/summoner-requests-ready=; /lol-summoner/v1/summoners=; /lol-summoner/v1/summoners-by-puuid-cached/{puuid}=; /lol-summoner/v1/summoners/{id}=; /lol-summoner/v1/validate-alias=; /lol-summoner/v2/summoner-icons=; /lol-summoner/v2/summoner-names=; /lol-summoner/v2/summoners=; /lol-summoner/v2/summoners/names=; /lol-summoner/v2/summoners/puuid=; /lol-summoner/v2/summoners/puuid/{puuid}=; /lol-tastes/v1/ready=; /lol-tastes/v1/skins-model=; /lol-tastes/v1/tft-overview-model=; /lol-tft-pass/v1/battle-pass=; /lol-tft-pass/v1/enabled=; /lol-tft-pass/v1/event-pass=; /lol-tft-pass/v1/pass/{id}=; /lol-tft-pass/v1/passes=; /lol-tft-pass/v1/reward-notification=; /lol-tft-team-planner/v1/config=; /lol-tft-team-planner/v1/team=; /lol-tft-team-planner/v1/team/champions=; /lol-tft-team-planner/v1/team/champions/{index}=; /lol-tft-team-planner/v1/team/championsById/{championName}=; /lol-tft-team-planner/v1/team/dirty=; /lol-tft-team-planner/v1/team/local=; /lol-tft-troves/v1/banners=; /lol-tft-troves/v1/config=; /lol-tft-troves/v1/loot-odds/{dropTableId}=; /lol-tft-troves/v1/purchase=; /lol-tft-troves/v1/roll=; /lol-tft-troves/v1/roll-rewards=; /lol-tft-troves/v1/status-notifications=; /lol-tft/v1/tft/battlePassHub=; /lol-tft/v1/tft/directToHub=; /lol-tft/v1/tft/events=; /lol-tft/v1/tft/homeHub=; /lol-tft/v1/tft/homeHub/redirect=; /lol-tft/v1/tft/newsHub=; /lol-tft/v1/tft/promoButtons=; /lol-tft/v1/tft_experiment_bucket=; /lol-tft/v2/tft/battlepass=; /lol-trophies/v1/current-summoner/trophies/profile=; /lol-trophies/v1/players/{puuid}/trophies/profile=; /lol-yourshop/v1/has-permissions=; /lol-yourshop/v1/modal=; /lol-yourshop/v1/offers=; /lol-yourshop/v1/offers/{id}/purchase=; /lol-yourshop/v1/offers/{id}/reveal=; /lol-yourshop/v1/permissions=; /lol-yourshop/v1/ready=; /lol-yourshop/v1/status=; /lol-yourshop/v1/themed=; /memory/v1/fe-processes-ready=; /memory/v1/notify-fe-processes-ready=; /memory/v1/snapshot=; /patcher/v1/notifications=; /patcher/v1/notifications/{id}=; /patcher/v1/p2p/status=; /patcher/v1/products=; /patcher/v1/products/{product-id}=; /patcher/v1/products/{product-id}/detect-corruption-request=; /patcher/v1/products/{product-id}/partial-repair-request=; /patcher/v1/products/{product-id}/paths=; /patcher/v1/products/{product-id}/signal-start-patching-delayed=; /patcher/v1/products/{product-id}/start-checking-request=; /patcher/v1/products/{product-id}/start-patching-request=; /patcher/v1/products/{product-id}/state=; /patcher/v1/products/{product-id}/stop-checking-request=; /patcher/v1/products/{product-id}/stop-patching-request=; /patcher/v1/products/{product-id}/tags=; /patcher/v1/status=; /patcher/v1/ux=; /payments/v1/pmc-start-url=; /performance/v1/memory=; /performance/v1/process/{processId}=; /performance/v1/report=; /performance/v1/report/restart=; /performance/v1/system-info=; /player-notifications/v1/config=; /player-notifications/v1/notifications=; /player-notifications/v1/notifications/{id}=; /plugin-manager/v1/external-plugins/availability=; /plugin-manager/v1/status=; /plugin-manager/v2/descriptions=; /plugin-manager/v2/descriptions/{plugin}=; /plugin-manager/v2/plugins=; /plugin-manager/v2/plugins/{plugin}=; /plugin-manager/v3/plugins-manifest=; /process-control/v1/process=; /process-control/v1/process/quit=; /riot-messaging-service/v1/connect=; /riot-messaging-service/v1/entitlements=; /riot-messaging-service/v1/message/{a}=; /riot-messaging-service/v1/message/{a}/{b}=; /riot-messaging-service/v1/message/{a}/{b}/{c}=; /riot-messaging-service/v1/message/{a}/{b}/{c}/{d}=; /riot-messaging-service/v1/message/{a}/{b}/{c}/{d}/{e}=; /riot-messaging-service/v1/message/{a}/{b}/{c}/{d}/{e}/{f}=; /riot-messaging-service/v1/session=; /riot-messaging-service/v1/state=; /riotclient/addorupdatemetric=; /riotclient/affinity=; /riotclient/app-name=; /riotclient/app-port=; /riotclient/auth-token=; /riotclient/command-line-args=; /riotclient/get_region_locale=; /riotclient/kill-and-restart-ux=; /riotclient/kill-ux=; /riotclient/launch-ux=; /riotclient/machine-id=; /riotclient/new-args=; /riotclient/open-url-in-browser=; /riotclient/region-locale=; /riotclient/show-openapi=; /riotclient/show-swagger=; /riotclient/splash=; /riotclient/system-info/v1/basic-info=; /riotclient/trace=; /riotclient/unload=; /riotclient/ux-allow-foreground=; /riotclient/ux-crash-count=; /riotclient/ux-flash=; /riotclient/ux-load-complete=; /riotclient/ux-minimize=; /riotclient/ux-show=; /riotclient/ux-state=; /riotclient/ux-state/ack=; /riotclient/v1/auth-tokens/{authToken}=; /riotclient/v1/crash-reporting/environment=; /riotclient/v1/crash-reporting/logs=; /riotclient/v1/elevation-requests=; /riotclient/zoom-scale=; /sanitizer/v1/containsSanitized=; /sanitizer/v1/sanitize=; /sanitizer/v1/status=; /swagger/v1/api-docs=; /swagger/v1/api-docs/{api}=; /swagger/v2/swagger.json=; /swagger/v3/openapi.json=; /system/v1/builds=; /telemetry/v1/application-start-time=; /telemetry/v1/common-data/{key}=; /telemetry/v1/events-with-perf-info/{eventType}=; /telemetry/v1/events/{eventType}=; /telemetry/v3/events-once/{eventType}/{onceTag}=; /telemetry/v3/events/{eventType}=; /telemetry/v3/slis/add-bool-diagnostic=; /telemetry/v3/slis/add-double-diagnostic=; /telemetry/v3/slis/add-int-diagnostic=; /telemetry/v3/slis/add-label=; /telemetry/v3/slis/add-string-diagnostic=; /telemetry/v3/slis/counts=; /telemetry/v3/uptime-tracking/notify-failure=; /telemetry/v3/uptime-tracking/notify-success=; /tracing/v1/performance/{name}=; /tracing/v1/trace/critical-flow=; /tracing/v1/trace/event=; /tracing/v1/trace/module=; /tracing/v1/trace/non-timing-event/{eventName}=; /tracing/v1/trace/payloads/enabled=; /tracing/v1/trace/phase/begin=; /tracing/v1/trace/phase/end=; /tracing/v1/trace/step-event=; /tracing/v1/trace/time-series-event/{eventName}=; /tracing/v1/trace/time-series-event/{eventName}/marker/{markerName}=; /{plugin}/assets/{path}=}
produces    : {application/json, application/x-yaml, application/x-msgpack}
swagger     : 2.0


{
  "basePath": "/",
  "consumes": [
    "application/json",
    "application/vnd.api+json",
    "application/x-yaml",
    "application/x-msgpack",
    "application/octet-stream",
    "application/x-www-form-urlencoded",
    "multipart/form-data"
  ],
  "definitions": {
    "AggregationType": {
      "enum": "none sum average",
      "type": "string"
    },
    "AlertDTO": {
      "properties": "@{alertTime=}",
      "type": "object"
    },
    "BannedChampion": {
      "properties": "@{championId=; pickTurn=; teamId=}",
      "type": "object"
    },
    "BasePlayerDTO": {
      "properties": "@{code=; data=; message=}",
      "type": "object"
    },
    "BindingAsyncCancelEvent": {
      "description": "Represents a cancelled asynchronous operation.",
      "properties": "@{asyncToken=}",
      "type": "object"
    },
    "BindingAsyncFailureEvent": {
      "description": "Represents a failed asynchronous operation.",
      "properties": "@{asyncToken=; error=}",
      "type": "object"
    },
    "BindingAsyncState": {
      "description": "Possible states of an asynchronous operation.",
      "enum": "None Running Cancelling Cancelled Succeeded Failed",
      "type": "string"
    },
    "BindingCallbackEvent": {
      "description": "Represents the parameters of a call to a provided callback.",
      "properties": "@{id=; parameters=}",
      "type": "object"
    },
    "BindingFullApiHelp": {
      "description": "Describes the exposed native API.",
      "properties": "@{events=; functions=; types=}",
      "type": "object"
    },
    "BindingFullArgumentHelp": {
      "description": "Describes a function parameter.",
      "properties": "@{description=; name=; optional=; type=}",
      "type": "object"
    },
    "BindingFullEnumValueHelp": {
      "description": "Describes an enumerator.",
      "properties": "@{description=; name=; value=}",
      "type": "object"
    },
    "BindingFullEventHelp": {
      "description": "Describes an event.",
      "properties": "@{description=; name=; nameSpace=; tags=; type=}",
      "type": "object"
    },
    "BindingFullFieldHelp": {
      "description": "Describes a member of a struct.",
      "properties": "@{description=; name=; offset=; optional=; type=}",
      "type": "object"
    },
    "BindingFullFunctionHelp": {
      "description": "Describes a function.",
      "properties": "@{arguments=; async=; description=; help=; name=; nameSpace=; returns=; tags=; threadSafe=}",
      "type": "object"
    },
    "BindingFullTypeHelp": {
      "description": "Describes a struct or enum type.",
      "properties": "@{description=; fields=; name=; nameSpace=; size=; tags=; values=}",
      "type": "object"
    },
    "BindingFullTypeIdentifier": {
      "description": "Describes the type of a value.",
      "properties": "@{elementType=; type=}",
      "type": "object"
    },
    "BindingGenericAsyncEvent": {
      "description": "Represents generic data for an asynchronous event.",
      "properties": "@{asyncToken=; data=}",
      "type": "object"
    },
    "BindingGenericEvent": {
      "description": "Represents generic data for an event.",
      "properties": "@{data=}",
      "type": "object"
    },
    "BindingHelpFormat": {
      "description": "Help format for binding functions and types.",
      "enum": "Full Epytext",
      "type": "string"
    },
    "BoostTeamSkinRentalDTO": {
      "properties": "@{availableSkins=; ipReward=; ipRewardForPurchaser=; price=; skinUnlockMode=; summonerName=; unlocked=}",
      "type": "object"
    },
    "Bracket": {
      "properties": "@{id=; matches=; phaseId=; rosters=; size=; tournamentId=; version=}",
      "type": "object"
    },
    "BracketMatch": {
      "properties": "@{failRosterStatus=; forfeitRosterId=; gameId=; gameStartTime=; highestPossiblePosition=; id=; loserBracket=; lowestPossiblePosition=; order=; resultHistory=; rosterId1=; rosterId2=; round=; roundStartTime=; status=; winnerId=}",
      "type": "object"
    },
    "BracketRoster": {
      "properties": "@{logo=; logoColor=; name=; rosterId=; shortName=}",
      "type": "object"
    },
    "BuildInfo": {
      "properties": "@{branch=; patchline=; patchlineVisibleName=; version=}",
      "type": "object"
    },
    "CapacityEnum": {
      "enum": "LOW MEDIUM HIGH FULL",
      "type": "string"
    },
    "ChampSelectLcdsGameDTO": {
      "properties": "@{bannedChampions=; gameMutators=; gameState=; id=; mucJwtDto=; name=; optimisticLock=; pickTurn=; playerChampionSelections=; queueTypeName=; roomName=; roomPassword=; spectatorDelay=; statusOfParticipants=; teamOne=; teamTwo=}",
      "type": "object"
    },
    "ChampSelectLcdsGameTimerDTO": {
      "properties": "@{currentGameState=; remainingTimeInMillis=}",
      "type": "object"
    },
    "ChampSelectLcdsObfuscatedParticipant": {
      "properties": "@{gameUniqueId=}",
      "type": "object"
    },
    "ChampSelectLcdsPlayerChampionSelectionDTO": {
      "properties": "@{championId=; selectedSkinIndex=; spell1Id=; spell2Id=; summonerInternalName=}",
      "type": "object"
    },
    "ChampSelectLcdsPlayerParticipant": {
      "properties": "@{pickMode=; pickTurn=; summonerId=; summonerInternalName=; summonerName=}",
      "type": "object"
    },
    "ChampSelectLcdsPointSummary": {
      "properties": "@{currentPoints=; maxRolls=; numberOfRolls=; pointsCostToRoll=; pointsToNextRoll=}",
      "type": "object"
    },
    "ChampSelectLcdsPotentialTradersDTO": {
      "properties": "@{potentialTraders=}",
      "type": "object"
    },
    "ChampSelectLcdsRollResult": {
      "properties": "@{championId=; pointSummary=}",
      "type": "object"
    },
    "ChampSelectLcdsTradeContractDTO": {
      "properties": "@{requesterChampionId=; requesterInternalSummonerName=; responderChampionId=; responderInternalSummonerName=; state=}",
      "type": "object"
    },
    "ChampionMasteryPublicDTO": {
      "properties": "@{championId=; championLevel=; championPoints=}",
      "type": "object"
    },
    "ChampionScoutingDTO": {
      "properties": "@{championId=; gameCount=; kda=; winCount=}",
      "type": "object"
    },
    "ClashEventData": {
      "properties": "@{bracket=; earnedDate=; playerUUIDs=; rewardSpec=; rewardType=; rosterId=; seasonId=; teamLogoChromaId=; teamLogoName=; teamName=; teamShortName=; theme=; tier=; tournamentId=; tournamentName=}",
      "type": "object"
    },
    "ClashOfflineNotification": {
      "properties": "@{metaData=; reason=; tournamentId=}",
      "type": "object"
    },
    "ClashRewardConfigClient": {
      "properties": "@{entries=; keyDef=; name=}",
      "type": "object"
    },
    "ClashRewardConfigEntry": {
      "properties": "@{key=; vals=}",
      "type": "object"
    },
    "ClashRewardDefinition": {
      "properties": "@{rewardSpec=; rewardType=}",
      "type": "object"
    },
    "ClashRewardKeyType": {
      "enum": "TIER CUP TICKET_COUNT TICKET_TYPE LOWEST_POSITION TOURNAMENT_WIN_POS WINS POINTS THEME_VP SEASON_VP SEASON_FLAG_COUNT TOC_STATE",
      "type": "string"
    },
    "ClashRewardOutput": {
      "properties": "@{alternative=; grant=; primary=; show=}",
      "type": "object"
    },
    "ClashRewardSpec": {
      "properties": "@{bracket=; cup=; gem=; level=; name=; pedestal=; quantity=; seasonId=; theme=; tier=}",
      "type": "object"
    },
    "ClashRewardTime": {
      "enum": "NONE EOG EOB EOT",
      "type": "string"
    },
    "ClashRewardType": {
      "enum": "TROPHY FLAG FRAME LOGO LOOT VP TOC",
      "type": "string"
    },
    "ClashSeasonRewardResult": {
      "properties": "@{banned=; eligible=; honorLevel=; playerId=; rewards=; seasonId=; seasonVp=}",
      "type": "object"
    },
    "ClientBracketMatchStatus": {
      "enum": "UPCOMING STARTED COMPLETED",
      "type": "string"
    },
    "ClientConfigAuthenticatedConnection": {
      "properties": "@{authToken=; connectionId=; subscribed=}",
      "type": "object"
    },
    "ClientConfigBuildInfo": {
      "properties": "@{branch=; branchFull=; codeBuildId=; contentBuildId=; gameBranch=; gameBranchFull=; gameDataBuildId=; patchline=; patchlineVisibleName=; version=}",
      "type": "object"
    },
    "ClientConfigClientConfig": {
      "properties": "@{data=; params=; updateTime=}",
      "type": "object"
    },
    "ClientConfigConfigNamespaceUpdate": {
      "properties": "@{player=; public=}",
      "type": "object"
    },
    "ClientConfigConfigParams": {
      "properties": "@{appName=; namespace=; patchline=; region=; type=; version=}",
      "type": "object"
    },
    "ClientConfigConfigReadinessEnum": {
      "enum": "NotReady Ready Disabled",
      "type": "string"
    },
    "ClientConfigConfigStatus": {
      "properties": "@{readiness=; updateId=}",
      "type": "object"
    },
    "ClientConfigConfigType": {
      "enum": "public player",
      "type": "string"
    },
    "ClientConfigDataPaths": {
      "properties": "@{configRoot=; dataRoot=; localSettingsPath=; privateSettingsPath=; userDataRoot=}",
      "type": "object"
    },
    "ClientConfigDepInjectorEntitlements": {
      "properties": "@{accessToken=; entitlements=; issuer=; subject=; token=}",
      "type": "object"
    },
    "ClientConfigDepInjectorEntitlementsUpdate": {
      "properties": "@{EntitlementsTokenResource=; EntitlementsUpdateType=}",
      "type": "object"
    },
    "ClientConfigDepInjectorEntitlementsUpdateType": {
      "enum": "Create Update Delete",
      "type": "string"
    },
    "ClientConfigEntitlements": {
      "properties": "@{accessToken=; entitlements=; issuer=; subject=; token=}",
      "type": "object"
    },
    "ClientConfigEntitlementsUpdate": {
      "properties": "@{EntitlementsTokenResource=; UpdateType=}",
      "type": "object"
    },
    "ClientConfigSession": {
      "properties": "@{connections=; isInternal=; patchlineId=; productId=; version=}",
      "type": "object"
    },
    "ClientConfigUpdateType": {
      "enum": "Create Update Delete",
      "type": "string"
    },
    "ClientDynamicConfig": {
      "properties": "@{compressed=; configs=; delta=}",
      "type": "object"
    },
    "ClientRequestError": {
      "enum": "ALREADY_IN_GAME ALREADY_MEMBER ALREADY_INVITED ALREADY_SUGGESTED ALREADY_DECLINE_WITHDRAW ALREADY_DECLINED ALREADY_VOTE_WITHDRAW ALREADY_IN_PHASE CAPTAIN_NOT_ALLOWED CLASH_BANNED CLASH_BANNED_INVITEE ELIGIBILITY_SERVER_ERROR FAIL_INVITE FAIL_SUGGESTINVITE HONOR_INELIGIBILITY LOGO_NOT_ALLOWED LOGOCOLOR_NOT_ALLOWED IN_OTHER_ROSTER IN_OTHER_PENDINGROSTER IN_OTHER_PHASE_OF_PERIOD INACTIVE_REGISTRATION INACTIVE_PHASE INTERNAL_ERROR INVALID_ROSTER INVALID_BUY_BACK INVALID_TOURNAMENT INVALID_PHASE INVALID_INVITEE INVALID_ROSTER_MEMBER_SIZE INVALID_POSITION INVALID_LOGO INVALID_LOGOCOLOR INVALID_NAME INVALID_SHORTNAME INVALID_CHECKELIGIBILITY_SIZE INVALID_BRACKET INVALID_MATCHID INVALID_PLAYER INVALID_Tier INVALID_WITHDRAW INVALID_MATCHSTATUS_FORGAMEEND INVALID_REWARD_CONFIG_NAME INVALID_SEASON MAX_INVITED MAX_ROSTER_FETCHSIZE NO_SAME_PLAYER NO_AVAILABLE_PHASE NOT_CAPTAIN NOT_MEMBER NOT_INVITEE NOT_SEED_INTO_LEAGUE NOT_ENOUGH_TICKETS NOT_ALLOWED_DELETE_TOURNAMENT NOT_ALLOWED_DELETE_TOURNAMENT_REWARD_CONFIG NO_PERMISSION NO_MORE_RECOMMEND OVER_SUGGESTION_INVITE OVER_INVITE PENDING_ROSTER_NOT_READY PENDING_ROSTER_FULL PENDING_ROSTER_CLOSE PHASE_CANCELLED PHASE_FULL ROSTER_ELIMINATED ROSTER_DISBAND_NOT_ALLOWED SUGGEST_INVITEE_NOT_EXIST SUMMONER_LEVEL_REQUIREMENT_NOT_MET SMS_NOT_VERIFIED TICKET_ALREADY_SET TICKET_OFFER_NOT_EXIST TICKET_OFFER_INVALID_COUNT TICKET_NOT_SET VOICE_NOT_AVAILABLE WITHDRAW_NOT_ALLOWED WITHDRAW_CANCEL_NOT_ALLOWED WITHDRAW_LOCKOUT",
      "type": "string"
    },
    "CollectionsLcdsChampionDTO": {
      "properties": "@{active=; botEnabled=; championId=; championSkins=; endDate=; f2pRewardSources=; freeToPlay=; freeToPlayReward=; owned=; purchaseDate=; purchased=; rankedPlayEnabled=; sources=; winCountRemaining=}",
      "type": "object"
    },
    "CollectionsLcdsChampionSkinDTO": {
      "properties": "@{championId=; endDate=; f2pRewardSources=; freeToPlayReward=; lastSelected=; owned=; purchaseDate=; skinId=; sources=; stillObtainable=; winCountRemaining=}",
      "type": "object"
    },
    "CollectionsLcdsClientDynamicConfigurationNotification": {
      "properties": "@{configs=; delta=}",
      "type": "object"
    },
    "CollectionsLcdsRentalUpdateNotification": {
      "properties": "@{data=; inventoryType=}",
      "type": "object"
    },
    "CollectionsLcdsStoreFulfillmentNotification": {
      "properties": "@{data=; inventoryType=}",
      "type": "object"
    },
    "ContentItemIdentifier": {
      "properties": "@{inventoryType=; itemId=}",
      "type": "object"
    },
    "CraftLootDTO": {
      "properties": "@{lootNames=; recipeName=; repeat=}",
      "type": "object"
    },
    "CraftLootRefTransactionDTO": {
      "properties": "@{accountId=; clientId=; lootNameRefIds=; playerId=; puuid=; recipeName=; repeat=}",
      "type": "object"
    },
    "CrashReportingEnvironment": {
      "properties": "@{environment=; userId=; userName=}",
      "type": "object"
    },
    "CriticalFlowCapture": {
      "properties": "@{expected=; idChain=; payloadString=; qualifierChain=; succeeded=; timestampInUs=}",
      "type": "object"
    },
    "CriticalFlowExpectation": {
      "properties": "@{idChain=; qualifierChain=}",
      "type": "object"
    },
    "CriticalFlowSummary": {
      "properties": "@{activeFlowEvents=; activeFlows=; errors=; events=}",
      "type": "object"
    },
    "DownloadUrlRequestV2": {
      "properties": "@{gameId=; platformId=}",
      "type": "object"
    },
    "DownloadUrlResponseV2": {
      "properties": "@{url=}",
      "type": "object"
    },
    "ElevationAction": {
      "enum": "FixBrokenPermissions",
      "type": "string"
    },
    "ElevationRequest": {
      "properties": "@{action=}",
      "type": "object"
    },
    "EndOfGameLcdsClientReportV1": {
      "properties": "@{comments=; gameId=; offenderSummonerId=; offenses=}",
      "type": "object"
    },
    "EndOfGameLcdsEndOfGameStats": {
      "properties": "@{basePoints=; battleBoostIpEarned=; boostIpEarned=; boostXpEarned=; causedEarlySurrender=; difficulty=; earlySurrenderAccomplice=; experienceEarned=; experienceTotal=; firstWinBonus=; gameEndedInEarlySurrender=; gameId=; gameLength=; gameMode=; gameMutators=; gameType=; invalid=; ipEarned=; ipTotal=; leveledUp=; loyaltyBoostXpEarned=; mucJwtDto=; myTeamInfo=; myTeamStatus=; newSpells=; otherTeamInfo=; otherTeamPlayerParticipantStats=; previousLevel=; previousXpTotal=; queueType=; ranked=; reportGameId=; roomName=; roomPassword=; rpEarned=; skinId=; skinIndex=; summonerName=; teamEarlySurrendered=; teamPlayerParticipantStats=; timeUntilNextFirstWinBonus=; userId=}",
      "type": "object"
    },
    "EndOfGameLcdsHarassmentReport": {
      "properties": "@{comment=; gameId=; offense=; reportSource=; reportedSummonerId=; reportingSummonerId=}",
      "type": "object"
    },
    "EndOfGameLcdsPlayerParticipantStatsSummary": {
      "properties": "@{botPlayer=; championId=; detectedTeamPosition=; gameId=; leaver=; leaves=; level=; losses=; profileIconId=; puuid=; selectedPosition=; skinIndex=; skinName=; spell1Id=; spell2Id=; statistics=; summonerName=; teamId=; userId=; wins=}",
      "type": "object"
    },
    "EndOfGameLcdsPointsPenalty": {
      "properties": "@{penalty=; type=}",
      "type": "object"
    },
    "EndOfGameLcdsRawStatDTO": {
      "properties": "@{statTypeName=; value=}",
      "type": "object"
    },
    "EndOfGameLcdsSpell": {
      "properties": "@{spellId=}",
      "type": "object"
    },
    "EndOfGameLcdsTeamId": {
      "properties": "@{fullId=}",
      "type": "object"
    },
    "EndOfGameLcdsTeamInfo": {
      "properties": "@{memberStatusString=; name=; secondsUntilEligibleForDeletion=; tag=; teamId=}",
      "type": "object"
    },
    "EntitlementsToken": {
      "properties": "@{accessToken=; entitlements=; issuer=; subject=; token=}",
      "type": "object"
    },
    "EogLcdsGameDTO": {
      "properties": "@{bannedChampions=; gameState=; id=; teamOne=; teamTwo=}",
      "type": "object"
    },
    "ExternalPluginsAvailability": {
      "enum": "NotAvailable Preparing Connected Recovering Error",
      "type": "string"
    },
    "ExternalPluginsResource": {
      "properties": "@{errorString=; state=}",
      "type": "object"
    },
    "FailedInvite": {
      "properties": "@{exception=; playerId=}",
      "type": "object"
    },
    "GameQueuesLcdsAllowSpectators": {
      "enum": "NONE LOBBYONLY DROPINONLY ALL",
      "type": "string"
    },
    "GameQueuesLcdsGameQueueConfig": {
      "properties": "@{disallowFreeChampions=; gameMode=; gameMutators=; gameTypeConfigId=; id=; lastToggledOffTime=; lastToggledOnTime=; mapId=; maximumParticipantListSize=; minLevel=; minimumParticipantListSize=; numPlayersPerTeam=; queueState=; ranked=; removalFromGameAllowed=; removalFromGameDelayMinutes=; supportedMapIds=; type=}",
      "type": "object"
    },
    "GameflowLcdsGameDTO": {
      "properties": "@{gameMode=; gameQueueConfigId=; gameState=; gameType=; gameTypeConfigId=; id=; mapId=; maxNumPlayers=; playerChampionSelections=; queueTypeName=; spectatorDelay=; teamOne=; teamTwo=}",
      "type": "object"
    },
    "GameflowLcdsPlayerCredentialsDto": {
      "properties": "@{encryptionKey=; gameId=; observer=; observerEncryptionKey=; observerServerIp=; observerServerPort=; serverIp=; serverPort=; summonerId=}",
      "type": "object"
    },
    "GameflowLcdsReconnectInfoDto": {
      "properties": "@{game=; playerCredentials=; reconnectDelay=}",
      "type": "object"
    },
    "IdsDTO": {
      "properties": "@{missionIds=; seriesIds=}",
      "type": "object"
    },
    "InviteType": {
      "enum": "FREEAGENT FRIEND SUGGEST SELFJOIN NONE",
      "type": "string"
    },
    "LCDSBroadcastNotification": {
      "properties": "@{broadcastMessages=}",
      "type": "object"
    },
    "LCDSChampionReward": {
      "properties": "@{championId=; skins=}",
      "type": "object"
    },
    "LCDSGlobalRewards": {
      "properties": "@{allChampions=}",
      "type": "object"
    },
    "LCDSLoyaltyRewards": {
      "properties": "@{champions=; global=; ipBoost=; xpBoost=}",
      "type": "object"
    },
    "LCDSLoyaltyStateChangeNotification": {
      "properties": "@{accountId=; notificationCategory=; rewards=}",
      "type": "object"
    },
    "LCDSLoyaltyStateChangeNotificationCategory": {
      "enum": "legacy grant expiry change revoke disabled",
      "type": "string"
    },
    "LCDSPlayerMessagingSimpleMessage": {
      "properties": "@{accountId=; bodyCode=; msgId=; params=; titleCode=; type=}",
      "type": "object"
    },
    "LCDSPlayerMessagingSimpleMessageResponse": {
      "properties": "@{accountId=; command=; msgId=}",
      "type": "object"
    },
    "LcdsBotParticipant": {
      "properties": "@{botSkillLevel=; summonerId=; summonerInternalName=; summonerName=; teamId=}",
      "type": "object"
    },
    "LcdsFailedJoinPlayer": {
      "properties": "@{reasonFailed=; summoner=}",
      "type": "object"
    },
    "LcdsGameDTO": {
      "properties": "@{gameMode=; gameMutators=; gameState=; gameType=; gameTypeConfigId=; id=; mapId=; maxNumPlayers=; mucJwtDto=; name=; observers=; optimisticLock=; ownerSummary=; passbackDataPacket=; passbackUrl=; practiceGameRewardsDisabledReasons=; roomName=; roomPassword=; spectatorsAllowed=; teamOne=; teamTwo=}",
      "type": "object"
    },
    "LcdsGameInviteBaseRuntimeException": {
      "properties": "@{rootCauseClassname=}",
      "type": "object"
    },
    "LcdsGameMap": {
      "properties": "@{description=; displayName=; mapId=; minCustomPlayers=; name=; totalPlayers=}",
      "type": "object"
    },
    "LcdsGameNotification": {
      "properties": "@{messageArgument=; messageCode=; type=}",
      "type": "object"
    },
    "LcdsInvitationRequest": {
      "properties": "@{gameMetaData=; invitationId=; invitationState=; invitePayload=; inviteType=; inviter=; owner=}",
      "type": "object"
    },
    "LcdsInvitationState": {
      "enum": "ACTIVE ON_HOLD REVOKED",
      "type": "string"
    },
    "LcdsInviteFailed": {
      "properties": "@{exception=; summonerId=; summonerName=}",
      "type": "object"
    },
    "LcdsInvitePrivileges": {
      "properties": "@{canInvite=}",
      "type": "object"
    },
    "LcdsInvitee": {
      "properties": "@{inviteeState=; summonerId=; summonerName=}",
      "type": "object"
    },
    "LcdsInviteeState": {
      "enum": "CREATOR PENDING DECLINED ACCEPTED ACCEPT_FAILED JOINED QUIT KICKED BANNED",
      "type": "string"
    },
    "LcdsInviter": {
      "properties": "@{previousSeasonHighestTier=; summonerId=; summonerName=}",
      "type": "object"
    },
    "LcdsLobbyStatus": {
      "properties": "@{chatKey=; gameMetaData=; invitationId=; invitees=; members=; owner=}",
      "type": "object"
    },
    "LcdsMember": {
      "properties": "@{hasDelegatedInvitePower=; summonerId=; summonerName=}",
      "type": "object"
    },
    "LcdsPayloadDto": {
      "properties": "@{body=; headers=; method=; path=}",
      "type": "object"
    },
    "LcdsPlayer": {
      "properties": "@{summonerId=; summonerName=}",
      "type": "object"
    },
    "LcdsPlayerParticipant": {
      "properties": "@{botSkillLevel=; summonerId=; summonerInternalName=; summonerName=}",
      "type": "object"
    },
    "LcdsPracticeGameConfig": {
      "properties": "@{allowSpectators=; gameMap=; gameMode=; gameMutators=; gameName=; gamePassword=; gameTypeConfig=; gameVersion=; maxNumPlayers=; passbackDataPacket=; passbackUrl=; region=}",
      "type": "object"
    },
    "LcdsPracticeGameSearchResult": {
      "properties": "@{allowSpectators=; gameMap=; gameMapId=; gameMode=; id=; maxNumPlayers=; name=; owner=; pickType=; privateGame=; spectatorCount=; team1Count=; team2Count=}",
      "type": "object"
    },
    "LcdsRemovalReason": {
      "enum": "KICKED DESTROYED PROGRESSED",
      "type": "string"
    },
    "LcdsRemovedFromLobbyNotification": {
      "properties": "@{removalReason=}",
      "type": "object"
    },
    "LcdsSimpleMessage": {
      "properties": "@{accountId=; msgId=; params=; type=}",
      "type": "object"
    },
    "LcdsSimpleMessageResponse": {
      "properties": "@{accountId=; command=; msgId=}",
      "type": "object"
    },
    "LcdsStartChampSelectDto": {
      "properties": "@{invalidPlayers=}",
      "type": "object"
    },
    "LcdsSummoner": {
      "properties": "@{name=; sumId=}",
      "type": "object"
    },
    "LobbyClientDynamicConfigurationNotification": {
      "properties": "@{configs=; delta=}",
      "type": "object"
    },
    "LogEvent": {
      "description": "Describes a log entry.",
      "properties": "@{message=; severity=}",
      "type": "object"
    },
    "LogSeverityLevels": {
      "description": "Allowable severity levels for log events.",
      "enum": "Okay Warning Error Always",
      "type": "string"
    },
    "LolAccountVerificationAVSConfig": {
      "properties": "@{DisableGetActivePhoneNumberCall=; Enabled=}",
      "type": "object"
    },
    "LolAccountVerificationConfirmActivationPinRequest": {
      "properties": "@{oneTimePin=}",
      "type": "object"
    },
    "LolAccountVerificationConfirmActivationPinResponse": {
      "properties": "@{clientMessageId=; data=}",
      "type": "object"
    },
    "LolAccountVerificationConfirmDeactivationPinRequest": {
      "properties": "@{oneTimePin=}",
      "type": "object"
    },
    "LolAccountVerificationConfirmDeactivationPinResponse": {
      "properties": "@{clientMessageId=; data=}",
      "type": "object"
    },
    "LolAccountVerificationIsVerifiedResponse": {
      "properties": "@{message=; status=; success=}",
      "type": "object"
    },
    "LolAccountVerificationLoginSession": {
      "properties": "@{accountId=; state=; summonerId=; username=}",
      "type": "object"
    },
    "LolAccountVerificationLoginSessionState": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolAccountVerificationPhoneNumberObfuscated": {
      "properties": "@{countryCode=; endsWith=; length=}",
      "type": "object"
    },
    "LolAccountVerificationPhoneNumberResponse": {
      "properties": "@{clientMessageId=; data=; error=}",
      "type": "object"
    },
    "LolAccountVerificationPhoneNumberResponseData": {
      "properties": "@{phoneNumberObfuscated=}",
      "type": "object"
    },
    "LolAccountVerificationPinResponseData": {
      "properties": "@{status=}",
      "type": "object"
    },
    "LolAccountVerificationResponseError": {
      "properties": "@{errorCode=; message=}",
      "type": "object"
    },
    "LolAccountVerificationSendActivationPinRequest": {
      "properties": "@{locale=; phoneNumber=}",
      "type": "object"
    },
    "LolAccountVerificationSendActivationPinResponse": {
      "properties": "@{clientMessageId=; data=; error=}",
      "type": "object"
    },
    "LolAccountVerificationSendActivationPinResponseData": {
      "properties": "@{pinExpiresAtEpochMillis=}",
      "type": "object"
    },
    "LolAccountVerificationSendDeactivationPinRequest": {
      "properties": "@{locale=}",
      "type": "object"
    },
    "LolAccountVerificationSendDeactivationPinResponse": {
      "properties": "@{clientMessageId=; data=; error=}",
      "type": "object"
    },
    "LolActiveBoostsActiveBoosts": {
      "properties": "@{firstWinOfTheDayStartTime=; xpBoostEndDate=; xpBoostPerWinCount=; xpLoyaltyBoost=}",
      "type": "object"
    },
    "LolActiveBoostsEndOfGameStats": {
      "properties": "@{timeUntilNextFirstWinBonus=}",
      "type": "object"
    },
    "LolActiveBoostsInventoryItem": {
      "properties": "@{expirationDate=; inventoryType=; itemId=; ownershipType=; purchaseDate=; quantity=; uuid=; wins=}",
      "type": "object"
    },
    "LolActiveBoostsInventoryItemDTO": {
      "properties": "@{entitlementId=; entitlementTypeId=; expirationDate=; f2p=; instanceId=; instanceTypeId=; inventoryType=; itemId=; loyalty=; loyaltySources=; lsb=; ownedQuantity=; payload=; purchaseDate=; quantity=; rental=; usedInGameDate=; wins=}",
      "type": "object"
    },
    "LolActiveBoostsInventoryItemWithPayload": {
      "properties": "@{expirationDate=; f2p=; inventoryType=; itemId=; loyalty=; loyaltySources=; owned=; ownershipType=; payload=; purchaseDate=; quantity=; rental=; uuid=; wins=}",
      "type": "object"
    },
    "LolActiveBoostsItemOwnershipType": {
      "enum": "OWNED RENTED LOYALTY F2P",
      "type": "string"
    },
    "LolActiveBoostsLoginDataPacket": {
      "properties": "@{timeUntilFirstWinOfDay=}",
      "type": "object"
    },
    "LolActiveBoostsLoyaltyRewardsSimplified": {
      "properties": "@{xpBoost=}",
      "type": "object"
    },
    "LolActiveBoostsLoyaltyStatus": {
      "enum": "LEGACY REWARDS_GRANT EXPIRY CHANGE REVOKE DISABLED",
      "type": "string"
    },
    "LolActiveBoostsLoyaltyStatusNotification": {
      "properties": "@{rewards=; status=}",
      "type": "object"
    },
    "LolAntiAddictionAntiAddictionState": {
      "properties": "@{antiAddictionToken=; localizationKey=; policyType=}",
      "type": "object"
    },
    "LolAntiAddictionAntiAddictionToken": {
      "properties": "@{antiAddictionToken=}",
      "type": "object"
    },
    "LolAntiAddictionPolicyType": {
      "enum": "antiAddictionWarning antiAddictionShutdown antiAddictionHeartbeat",
      "type": "string"
    },
    "LolBannersBannerFlag": {
      "properties": "@{earnedDateIso8601=; itemId=; level=; seasonId=; theme=}",
      "type": "object"
    },
    "LolBannersBannerFrame": {
      "properties": "@{level=}",
      "type": "object"
    },
    "LolBannersCapClashFlagEntitlementPayload": {
      "properties": "@{rewardSpec=; rewardType=}",
      "type": "object"
    },
    "LolBannersCapClashFrameEntitlementPayload": {
      "properties": "@{rewardSpec=; rewardType=}",
      "type": "object"
    },
    "LolBannersClashV2FlagRewardSpec": {
      "properties": "@{level=; seasonId=; theme=}",
      "type": "object"
    },
    "LolBannersClashV2FrameRewardSpec": {
      "properties": "@{level=; seasonId=}",
      "type": "object"
    },
    "LolBannersInventoryItemWithPayload": {
      "properties": "@{inventoryType=; itemId=; payload=; purchaseDate=; uuid=}",
      "type": "object"
    },
    "LolBannersInventoryItemsByType": {
      "properties": "@{TOURNAMENT_FLAG=; TOURNAMENT_FRAME=}",
      "type": "object"
    },
    "LolBannersInventoryResponse": {
      "properties": "@{items=}",
      "type": "object"
    },
    "LolBannersLoadout": {
      "properties": "@{id=; loadout=; name=; scope=}",
      "type": "object"
    },
    "LolBannersLoadoutsSlot": {
      "properties": "@{inventoryType=; itemId=}",
      "type": "object"
    },
    "LolBannersSummonerProfileUpdate": {
      "properties": "@{key=; value=}",
      "type": "object"
    },
    "LolBannersTournamentFlagInventoryItem": {
      "properties": "@{itemId=; payload=; purchaseDate=}",
      "type": "object"
    },
    "LolBannersTournamentFrameInventoryItem": {
      "properties": "@{payload=; purchaseDate=}",
      "type": "object"
    },
    "LolCareerStatsCareerStatsQueueType": {
      "enum": "draft5 rank5flex rank5solo blind5 aram blind3 rank3flex other",
      "type": "string"
    },
    "LolCareerStatsChampionQueueStatsResponse": {
      "properties": "@{championId=; position=; queueType=; rankTier=; stats=}",
      "type": "object"
    },
    "LolCareerStatsChampionStatistics": {
      "properties": "@{championId=; experts=; queueStats=}",
      "type": "object"
    },
    "LolCareerStatsEntitlementsToken": {
      "properties": "@{entitlements=}",
      "type": "object"
    },
    "LolCareerStatsExpertPlayer": {
      "properties": "@{championId=; expertRank=; numOfGames=; position=; summonerId=; summonerName=; winRate=}",
      "type": "object"
    },
    "LolCareerStatsPositionStatistics": {
      "properties": "@{experts=; position=; queueStats=}",
      "type": "object"
    },
    "LolCareerStatsPositionStatsQueryRequest": {
      "properties": "@{position=; queueType=; rankTier=; season=}",
      "type": "object"
    },
    "LolCareerStatsStatisticsByQueue": {
      "properties": "@{queueType=; stats=}",
      "type": "object"
    },
    "LolCareerStatsStatisticsPercentilesResponse": {
      "properties": "@{championId=; position=; queueType=; rankTier=; season=; stats=}",
      "type": "object"
    },
    "LolCareerStatsStatsQueryRequest": {
      "properties": "@{championId=; position=; queueType=; rankTier=; season=}",
      "type": "object"
    },
    "LolCareerStatsSummonersRiftPosition": {
      "enum": "ALL UNKNOWN TOP JUNGLE MID BOTTOM SUPPORT",
      "type": "string"
    },
    "LolCatalogBundled": {
      "properties": "@{flexible=; items=; minimumPrices=}",
      "type": "object"
    },
    "LolCatalogBundledItem": {
      "properties": "@{discountPrices=; inventoryType=; itemId=; quantity=}",
      "type": "object"
    },
    "LolCatalogBundledItemCost": {
      "properties": "@{cost=; costType=; currency=; discount=}",
      "type": "object"
    },
    "LolCatalogCatalogItem": {
      "properties": "@{active=; bundled=; iconUrl=; inactiveDate=; inventoryType=; itemId=; itemInstanceId=; itemRequirements=; localizations=; metadata=; offerId=; prices=; releaseDate=; sale=; subInventoryType=; tags=}",
      "type": "object"
    },
    "LolCatalogCatalogPluginItem": {
      "properties": "@{active=; description=; imagePath=; inactiveDate=; inventoryType=; itemId=; itemInstanceId=; metadata=; name=; offerId=; owned=; ownershipType=; prices=; purchaseDate=; questSkinInfo=; releaseDate=; sale=; subInventoryType=; subTitle=; tags=}",
      "type": "object"
    },
    "LolCatalogCatalogPluginItemAssets": {
      "properties": "@{colors=; emblems=; iconPath=; splashPath=; tilePath=}",
      "type": "object"
    },
    "LolCatalogCatalogPluginItemWithDetails": {
      "properties": "@{assets=; bundledDiscountPrices=; bundledItems=; item=; metadata=; minimumBundlePrices=; quantity=; requiredItems=}",
      "type": "object"
    },
    "LolCatalogCatalogPluginPrice": {
      "properties": "@{cost=; costType=; currency=; sale=}",
      "type": "object"
    },
    "LolCatalogCatalogPluginRetailDiscount": {
      "properties": "@{cost=; discount=; endDate=; startDate=}",
      "type": "object"
    },
    "LolCatalogChampionSkinEmblem": {
      "properties": "@{emblemPath=; emblemPosition=; name=}",
      "type": "object"
    },
    "LolCatalogChampionSkinEmblemPath": {
      "properties": "@{large=; small=}",
      "type": "object"
    },
    "LolCatalogChampionSkinEmblemPosition": {
      "properties": "@{horizontal=; vertical=}",
      "type": "object"
    },
    "LolCatalogGameDataChampion": {
      "properties": "@{skins=}",
      "type": "object"
    },
    "LolCatalogGameDataChampionChroma": {
      "properties": "@{chromaPath=; colors=; id=; name=}",
      "type": "object"
    },
    "LolCatalogGameDataChampionSkin": {
      "properties": "@{chromaPath=; chromas=; colors=; emblems=; id=; name=; questSkinInfo=; splashPath=; tilePath=; uncenteredSplashPath=}",
      "type": "object"
    },
    "LolCatalogGameDataChampionSummary": {
      "properties": "@{id=; name=; skins=; squarePortraitPath=}",
      "type": "object"
    },
    "LolCatalogGameDataItemReference": {
      "properties": "@{contentId=; inventoryType=; itemId=}",
      "type": "object"
    },
    "LolCatalogGameDataStatstone": {
      "properties": "@{category=; contentId=; description=; iconFull=; isDuration=; isEpic=; isRetired=; itemId=; name=}",
      "type": "object"
    },
    "LolCatalogGameDataStatstonePack": {
      "properties": "@{contentId=; description=; itemId=; name=}",
      "type": "object"
    },
    "LolCatalogGameDataStatstoneSet": {
      "properties": "@{name=; statstones=}",
      "type": "object"
    },
    "LolCatalogGameDataStatstonesInfo": {
      "properties": "@{champIdToPackIds=; collectionIdToStatStoneIds=; packData=; packIdToChampIds=; packIdToStatStonesIds=; packIdToSubPackIds=; seriesIdToStatStoneIds=; statstoneData=}",
      "type": "object"
    },
    "LolCatalogGameDataSummonerEmote": {
      "properties": "@{description=; id=; inventoryIcon=; name=}",
      "type": "object"
    },
    "LolCatalogGameDataSummonerIcon": {
      "properties": "@{id=; imagePath=; title=}",
      "type": "object"
    },
    "LolCatalogGameDataWardSkin": {
      "properties": "@{description=; id=; name=; wardImagePath=}",
      "type": "object"
    },
    "LolCatalogInventoryContent": {
      "properties": "@{itemId=; ownershipType=; purchaseDate=}",
      "type": "object"
    },
    "LolCatalogInventoryOwnership": {
      "enum": "OWNED RENTED LOYALTY F2P",
      "type": "string"
    },
    "LolCatalogItemChoiceDetails": {
      "properties": "@{backgroundImage=; contents=; discount=; displayType=; fullPrice=; item=; metadata=}",
      "type": "object"
    },
    "LolCatalogItemCost": {
      "properties": "@{cost=; currency=; discount=}",
      "type": "object"
    },
    "LolCatalogItemDetails": {
      "properties": "@{description=; iconUrl=; subTitle=; title=}",
      "type": "object"
    },
    "LolCatalogItemKey": {
      "properties": "@{inventoryType=; itemId=}",
      "type": "object"
    },
    "LolCatalogItemLocalization": {
      "properties": "@{description=; language=; name=}",
      "type": "object"
    },
    "LolCatalogItemMetadataEntry": {
      "properties": "@{type=; value=}",
      "type": "object"
    },
    "LolCatalogSale": {
      "properties": "@{endDate=; prices=; startDate=}",
      "type": "object"
    },
    "LolCatalogSkinLineDescriptionInfo": {
      "properties": "@{description=; iconPath=; title=}",
      "type": "object"
    },
    "LolCatalogSkinLineInfo": {
      "properties": "@{collectionCardPath=; collectionDescription=; descriptionInfo=; name=; splashPath=; tiers=; tilePath=; uncenteredSplashPath=}",
      "type": "object"
    },
    "LolCatalogSkinLineTier": {
      "properties": "@{collectionSplashVideoPath=; description=; id=; loadScreenPath=; name=; shortName=; splashPath=; splashVideoPath=; stage=; tilePath=; uncenteredSplashPath=}",
      "type": "object"
    },
    "LolChallengesChallengeData": {
      "properties": "@{availableIds=; category=; completedIds=; currentLevel=; currentLevelAchievedTime=; currentThreshold=; currentValue=; friendsAtLevels=; id=; idListType=; initValue=; legacy=; newLevels=; nextLevel=; nextThreshold=; percentile=; playersInLevel=; position=; previousLevel=; previousThreshold=; previousValue=}",
      "type": "object"
    },
    "LolChallengesChallengeLevelData": {
      "properties": "@{level=}",
      "type": "object"
    },
    "LolChallengesChallengePlayerData": {
      "properties": "@{apexLaderUpdateTime=; categoryPoints=; id=; levelPoints=; playerChallenges=; preferences=; puuid=; source=; tags=; totalPoints=}",
      "type": "object"
    },
    "LolChallengesChallengePoints": {
      "properties": "@{current=; level=; max=; percentile=; position=}",
      "type": "object"
    },
    "LolChallengesChallengeRequirementMappingName": {
      "enum": "NONE CHAMPION CHAMPION_SKIN ITEM",
      "type": "string"
    },
    "LolChallengesChallengeSeason": {
      "properties": "@{isActive=; seasonEnd=; seasonId=; seasonStart=}",
      "type": "object"
    },
    "LolChallengesChallengeSignedUpdatePayload": {
      "properties": "@{tokensByType=}",
      "type": "object"
    },
    "LolChallengesChallengeThreshold": {
      "properties": "@{rewardGroupId=; rewards=; value=}",
      "type": "object"
    },
    "LolChallengesChallengeThresholdReward": {
      "properties": "@{category=; id=; quantity=}",
      "type": "object"
    },
    "LolChallengesChallengesPlayerPreferences": {
      "properties": "@{bannerAccent=; challengeIds=; crestBorder=; prestigeCrestBorderLevel=; signedJWTPayload=; title=}",
      "type": "object"
    },
    "LolChallengesChallengesRMSNotification": {
      "properties": "@{ackRequired=; payload=}",
      "type": "object"
    },
    "LolChallengesChallengesRMSPayload": {
      "properties": "@{id=; puuid=}",
      "type": "object"
    },
    "LolChallengesClientState": {
      "enum": "Hidden Disabled DarkHidden DarkDisabled Enabled",
      "type": "string"
    },
    "LolChallengesEndOfGameStats": {
      "properties": "@{gameId=}",
      "type": "object"
    },
    "LolChallengesFriendLevelsData": {
      "properties": "@{friends=; level=}",
      "type": "object"
    },
    "LolChallengesFriendResource": {
      "properties": "@{puuid=}",
      "type": "object"
    },
    "LolChallengesGameDataChallengeConfig": {
      "properties": "@{description=; descriptionShort=; endTimestamp=; iconPath=; leaderboard=; levelToIconPath=; name=; queueIds=; reverseDirection=; seasons=; source=; tags=; thresholds=}",
      "type": "object"
    },
    "LolChallengesGameDataChallengeTitle": {
      "properties": "@{itemId=; name=}",
      "type": "object"
    },
    "LolChallengesGameDataChallengesData": {
      "properties": "@{challenges=; titles=}",
      "type": "object"
    },
    "LolChallengesGameflowGameData": {
      "properties": "@{queue=}",
      "type": "object"
    },
    "LolChallengesGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolChallengesGameflowSession": {
      "properties": "@{gameData=; phase=}",
      "type": "object"
    },
    "LolChallengesInventoryItem": {
      "properties": "@{itemId=; purchaseDate=; uuid=}",
      "type": "object"
    },
    "LolChallengesLcuChallengeNotification": {
      "properties": "@{categoryChallenges=; challengeId=; challengeName=; displayType=; iconPath=; id=; level=; msgId=; updateReason=}",
      "type": "object"
    },
    "LolChallengesLoginPlayerData": {
      "properties": "@{clientPlayerDataList=; seasons=}",
      "type": "object"
    },
    "LolChallengesNotificationDisplayType": {
      "enum": "NONE TOAST VIGNETTE",
      "type": "string"
    },
    "LolChallengesQueue": {
      "properties": "@{gameMode=; id=}",
      "type": "object"
    },
    "LolChallengesSequenceEvent": {
      "properties": "@{name=; priority=}",
      "type": "object"
    },
    "LolChallengesSource": {
      "enum": "CHALLENGES EOGD CAP_INVENTORY HONOR CHAMPION_MASTERY RANKED_LEAGUES CLASH LOOT ETERNALS SUMMONER_SERVICE NONE",
      "type": "string"
    },
    "LolChallengesUICategoryProgress": {
      "properties": "@{category=; current=; level=; max=; positionPercentile=}",
      "type": "object"
    },
    "LolChallengesUIChallenge": {
      "properties": "@{availableIds=; capstoneGroupId=; capstoneGroupName=; category=; childrenIds=; completedIds=; currentLevel=; currentLevelAchievedTime=; currentThreshold=; currentValue=; description=; descriptionShort=; friendsAtLevels=; gameModes=; hasLeaderboard=; iconPath=; id=; idListType=; isApex=; isCapstone=; isReverseDirection=; levelToIconPath=; name=; nextLevel=; nextLevelIconPath=; nextThreshold=; parentId=; parentName=; percentile=; playersInLevel=; pointsAwarded=; position=; previousLevel=; previousValue=; priority=; retireTimestamp=; source=; thresholds=; valueMapping=}",
      "type": "object"
    },
    "LolChallengesUIChallengePenalty": {
      "properties": "@{reason=}",
      "type": "object"
    },
    "LolChallengesUIChallengeReward": {
      "properties": "@{asset=; category=; name=; quantity=}",
      "type": "object"
    },
    "LolChallengesUIChallengeThreshold": {
      "properties": "@{rewards=; value=}",
      "type": "object"
    },
    "LolChallengesUIPlayerSummary": {
      "properties": "@{apexLadderUpdateTime=; apexLeaderboardPosition=; bannerId=; categoryProgress=; crestId=; isApex=; overallChallengeLevel=; pointsUntilNextRank=; positionPercentile=; prestigeCrestBorderLevel=; selectedChallengesString=; title=; topChallenges=; totalChallengeScore=}",
      "type": "object"
    },
    "LolChallengesUITitle": {
      "properties": "@{challengeDescription=; challengeId=; challengeName=; contentId=; itemId=; level=; levelToIconPath=; name=; purchaseDate=}",
      "type": "object"
    },
    "LolChallengesUserResource": {
      "properties": "@{lol=}",
      "type": "object"
    },
    "LolChampSelectBenchChampion": {
      "properties": "@{championId=; isPriority=}",
      "type": "object"
    },
    "LolChampSelectChampGridChampion": {
      "properties": "@{disabled=; freeToPlay=; freeToPlayForQueue=; id=; loyaltyReward=; masteryChestGranted=; masteryLevel=; masteryPoints=; name=; owned=; positionsFavorited=; rented=; roles=; selectionStatus=; squarePortraitPath=; xboxGPReward=}",
      "type": "object"
    },
    "LolChampSelectChampSelectAction": {
      "properties": "@{actorCellId=; championId=; completed=; id=; isAllyAction=; type=}",
      "type": "object"
    },
    "LolChampSelectChampSelectBannedChampions": {
      "properties": "@{myTeamBans=; numBans=; theirTeamBans=}",
      "type": "object"
    },
    "LolChampSelectChampSelectChatRoomDetails": {
      "properties": "@{mucJwtDto=; multiUserChatId=; multiUserChatPassword=}",
      "type": "object"
    },
    "LolChampSelectChampSelectMySelection": {
      "properties": "@{selectedSkinId=; spell1Id=; spell2Id=; wardSkinId=}",
      "type": "object"
    },
    "LolChampSelectChampSelectPinDropNotification": {
      "properties": "@{mapSide=; pinDropSummoners=}",
      "type": "object"
    },
    "LolChampSelectChampSelectPinDropSummoner": {
      "properties": "@{isLocalSummoner=; isPlaceholder=; lane=; lanePosition=; position=; slotId=}",
      "type": "object"
    },
    "LolChampSelectChampSelectPlayerSelection": {
      "properties": "@{assignedPosition=; cellId=; championId=; championPickIntent=; entitledFeatureType=; nameVisibilityType=; obfuscatedPuuid=; obfuscatedSummonerId=; puuid=; selectedSkinId=; spell1Id=; spell2Id=; summonerId=; team=; wardSkinId=}",
      "type": "object"
    },
    "LolChampSelectChampSelectSession": {
      "properties": "@{actions=; allowBattleBoost=; allowDuplicatePicks=; allowLockedEvents=; allowRerolling=; allowSkinSelection=; bans=; benchChampions=; benchEnabled=; boostableSkinCount=; chatDetails=; counter=; entitledFeatureState=; gameId=; hasSimultaneousBans=; hasSimultaneousPicks=; isCustomGame=; isSpectating=; localPlayerCellId=; lockedEventIndex=; myTeam=; pickOrderSwaps=; recoveryCounter=; rerollsRemaining=; skipChampionSelect=; theirTeam=; timer=; trades=}",
      "type": "object"
    },
    "LolChampSelectChampSelectSummoner": {
      "properties": "@{actingBackgroundAnimationState=; activeActionType=; areSummonerActionsComplete=; assignedPosition=; banIntentSquarePortratPath=; cellId=; championIconStyle=; championId=; championName=; currentChampionVotePercentInteger=; entitledFeatureType=; isActingNow=; isDonePicking=; isOnPlayersTeam=; isPickIntenting=; isPlaceholder=; isSelf=; nameVisibilityType=; obfuscatedPuuid=; obfuscatedSummonerId=; pickSnipedClass=; puuid=; shouldShowActingBar=; shouldShowBanIntentIcon=; shouldShowExpanded=; shouldShowRingAnimations=; shouldShowSelectedSkin=; shouldShowSpells=; showMuted=; showSwaps=; showTrades=; skinId=; skinSplashPath=; slotId=; spell1IconPath=; spell2IconPath=; statusMessageKey=; summonerId=; swapId=; tradeId=}",
      "type": "object"
    },
    "LolChampSelectChampSelectSwapContract": {
      "properties": "@{cellId=; id=; state=}",
      "type": "object"
    },
    "LolChampSelectChampSelectSwapNotification": {
      "properties": "@{id=; initiatedByLocalPlayer=; otherSummonerIndex=; requestorIndex=; responderIndex=; state=}",
      "type": "object"
    },
    "LolChampSelectChampSelectSwapState": {
      "enum": "AVAILABLE BUSY INVALID RECEIVED SENT DECLINED CANCELLED ACCEPTED",
      "type": "string"
    },
    "LolChampSelectChampSelectTimer": {
      "properties": "@{adjustedTimeLeftInPhase=; internalNowInEpochMs=; isInfinite=; phase=; totalTimeInPhase=}",
      "type": "object"
    },
    "LolChampSelectChampSelectTradeContract": {
      "properties": "@{cellId=; id=; state=}",
      "type": "object"
    },
    "LolChampSelectChampSelectTradeNotification": {
      "properties": "@{id=; initiatedByLocalPlayer=; otherSummonerIndex=; requesterChampionName=; requesterChampionSplashPath=; responderChampionName=; responderIndex=; state=}",
      "type": "object"
    },
    "LolChampSelectChampSelectTradeState": {
      "enum": "AVAILABLE BUSY INVALID RECEIVED SENT DECLINED CANCELLED ACCEPTED",
      "type": "string"
    },
    "LolChampSelectChampionQuestSkinInfo": {
      "properties": "@{splashPath=; tiers=; tilePath=}",
      "type": "object"
    },
    "LolChampSelectChampionSelection": {
      "properties": "@{banIntented=; banIntentedByMe=; isBanned=; pickIntented=; pickIntentedByMe=; pickIntentedPosition=; pickedByOtherOrBanned=; selectedByMe=}",
      "type": "object"
    },
    "LolChampSelectCollectionsChampionChroma": {
      "properties": "@{championId=; chromaPath=; colors=; disabled=; id=; name=; ownership=; stillObtainable=}",
      "type": "object"
    },
    "LolChampSelectCollectionsChampionMastery": {
      "properties": "@{championId=; championLevel=; championPoints=; chestGranted=}",
      "type": "object"
    },
    "LolChampSelectCollectionsChampionMinimal": {
      "properties": "@{banVoPath=; baseSplashPath=; chooseVoPath=; disabledQueues=; freeToPlay=; id=; name=; ownership=; roles=; squarePortraitPath=; stingerSfxPath=}",
      "type": "object"
    },
    "LolChampSelectCollectionsChampionQuestSkin": {
      "properties": "@{championId=; chromaPath=; disabled=; id=; isBase=; name=; ownership=; shortName=; splashPath=; splashVideoPath=; stage=; stillObtainable=; tilePath=}",
      "type": "object"
    },
    "LolChampSelectCollectionsChampionSkin": {
      "properties": "@{championId=; chromaPath=; chromas=; disabled=; emblems=; id=; isBase=; name=; ownership=; questSkinInfo=; rarityGemPath=; splashPath=; splashVideoPath=; stillObtainable=; tilePath=}",
      "type": "object"
    },
    "LolChampSelectCollectionsChampionSkinEmblem": {
      "properties": "@{emblemPath=; name=; positions=}",
      "type": "object"
    },
    "LolChampSelectCollectionsChampionSkinEmblemPath": {
      "properties": "@{large=; small=}",
      "type": "object"
    },
    "LolChampSelectCollectionsChampionSkinEmblemPosition": {
      "properties": "@{horizontal=; vertical=}",
      "type": "object"
    },
    "LolChampSelectCollectionsChampionSkinMinimal": {
      "properties": "@{championId=; chromaPath=; disabled=; id=; isBase=; name=; ownership=; splashPath=; stillObtainable=; tilePath=}",
      "type": "object"
    },
    "LolChampSelectCollectionsOwnership": {
      "properties": "@{loyaltyReward=; owned=; rental=; xboxGPReward=}",
      "type": "object"
    },
    "LolChampSelectCollectionsRental": {
      "properties": "@{rented=}",
      "type": "object"
    },
    "LolChampSelectEntitledFeatureState": {
      "properties": "@{additionalRerolls=; unlockedSkinIds=}",
      "type": "object"
    },
    "LolChampSelectGameDataSummonerSpell": {
      "properties": "@{iconPath=; id=}",
      "type": "object"
    },
    "LolChampSelectLegacyChampSelectAction": {
      "properties": "@{actorCellId=; championId=; completed=; id=; isAllyAction=; isInProgress=; pickTurn=; type=}",
      "type": "object"
    },
    "LolChampSelectLegacyChampSelectBannedChampions": {
      "properties": "@{myTeamBans=; numBans=; theirTeamBans=}",
      "type": "object"
    },
    "LolChampSelectLegacyChampSelectChatRoomDetails": {
      "properties": "@{mucJwtDto=; multiUserChatId=; multiUserChatPassword=}",
      "type": "object"
    },
    "LolChampSelectLegacyChampSelectMySelection": {
      "properties": "@{selectedSkinId=; spell1Id=; spell2Id=; wardSkinId=}",
      "type": "object"
    },
    "LolChampSelectLegacyChampSelectPlayerSelection": {
      "properties": "@{assignedPosition=; cellId=; championId=; championPickIntent=; playerType=; selectedSkinId=; spell1Id=; spell2Id=; summonerId=; team=; wardSkinId=}",
      "type": "object"
    },
    "LolChampSelectLegacyChampSelectSession": {
      "properties": "@{actions=; allowBattleBoost=; allowRerolling=; allowSkinSelection=; bans=; chatDetails=; hasSimultaneousBans=; hasSimultaneousPicks=; isCustomGame=; isSpectating=; localPlayerCellId=; myTeam=; rerollsRemaining=; theirTeam=; timer=; trades=}",
      "type": "object"
    },
    "LolChampSelectLegacyChampSelectTimer": {
      "properties": "@{adjustedTimeLeftInPhase=; internalNowInEpochMs=; isInfinite=; phase=; totalTimeInPhase=}",
      "type": "object"
    },
    "LolChampSelectLegacyChampSelectTradeContract": {
      "properties": "@{cellId=; id=; state=}",
      "type": "object"
    },
    "LolChampSelectLegacyChampSelectTradeState": {
      "enum": "AVAILABLE BUSY INVALID RECEIVED SENT",
      "type": "string"
    },
    "LolChampSelectLegacyChampionSelectPreferences": {
      "properties": "@{skins=; spells=}",
      "type": "object"
    },
    "LolChampSelectLegacyCollectionsChampion": {
      "properties": "@{active=; disabledQueues=; freeToPlay=; id=; ownership=}",
      "type": "object"
    },
    "LolChampSelectLegacyCollectionsOwnership": {
      "properties": "@{loyaltyReward=; owned=; rental=; xboxGPReward=}",
      "type": "object"
    },
    "LolChampSelectLegacyCollectionsRental": {
      "properties": "@{rented=}",
      "type": "object"
    },
    "LolChampSelectLegacyGameflowGameClient": {
      "properties": "@{running=; visible=}",
      "type": "object"
    },
    "LolChampSelectLegacyGameflowGameData": {
      "properties": "@{queue=}",
      "type": "object"
    },
    "LolChampSelectLegacyGameflowGameDodge": {
      "properties": "@{dodgeIds=; state=}",
      "type": "object"
    },
    "LolChampSelectLegacyGameflowGameDodgeState": {
      "enum": "Invalid PartyDodged StrangerDodged TournamentDodged",
      "type": "string"
    },
    "LolChampSelectLegacyGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolChampSelectLegacyGameflowSession": {
      "properties": "@{gameClient=; gameData=; phase=}",
      "type": "object"
    },
    "LolChampSelectLegacyInventoryItemWithPayload": {
      "properties": "@{itemId=; payload=}",
      "type": "object"
    },
    "LolChampSelectLegacyLobbyStatus": {
      "properties": "@{allowedPlayAgain=; isCustom=; isLeader=; isSpectator=; memberSummonerIds=; queueId=}",
      "type": "object"
    },
    "LolChampSelectLegacyLoginSession": {
      "properties": "@{connected=; state=; summonerId=}",
      "type": "object"
    },
    "LolChampSelectLegacyLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolChampSelectLegacyMucJwtDto": {
      "properties": "@{channelClaim=; domain=; jwt=; targetRegion=}",
      "type": "object"
    },
    "LolChampSelectLegacyPlayerStatus": {
      "properties": "@{currentLobbyStatus=; lastQueuedLobbyStatus=}",
      "type": "object"
    },
    "LolChampSelectLegacyQueue": {
      "properties": "@{areFreeChampionsAllowed=; gameTypeConfig=}",
      "type": "object"
    },
    "LolChampSelectLegacyQueueGameTypeConfig": {
      "properties": "@{allowTrades=; battleBoost=; maxAllowableBans=; name=}",
      "type": "object"
    },
    "LolChampSelectLegacySettingCategoryResource": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolChampSelectLegacySummoner": {
      "properties": "@{summonerId=; summonerLevel=}",
      "type": "object"
    },
    "LolChampSelectLegacyTeamBoost": {
      "properties": "@{availableSkins=; ipReward=; ipRewardForPurchaser=; price=; skinUnlockMode=; summonerName=; unlocked=}",
      "type": "object"
    },
    "LolChampSelectLoginSession": {
      "properties": "@{summonerId=}",
      "type": "object"
    },
    "LolChampSelectMucJwtDto": {
      "properties": "@{channelClaim=; domain=; jwt=; targetRegion=}",
      "type": "object"
    },
    "LolChampSelectMutedPlayerInfo": {
      "properties": "@{obfuscatedPuuid=; obfuscatedSummonerId=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolChampSelectSettingsResource": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolChampSelectSfxNotification": {
      "properties": "@{delayMillis=; eventType=; path=}",
      "type": "object"
    },
    "LolChampSelectSkinSelectorChildSkin": {
      "properties": "@{championId=; chromaPreviewPath=; colors=; disabled=; id=; isBase=; isChampionUnlocked=; isUnlockedFromEntitledFeature=; name=; ownership=; parentSkinId=; shortName=; splashPath=; splashVideoPath=; stage=; stillObtainable=; tilePath=; unlocked=}",
      "type": "object"
    },
    "LolChampSelectSkinSelectorInfo": {
      "properties": "@{championName=; isSkinGrantedFromBoost=; selectedChampionId=; selectedSkinId=; showSkinSelector=; skinSelectionDisabled=}",
      "type": "object"
    },
    "LolChampSelectSkinSelectorSkin": {
      "properties": "@{championId=; childSkins=; chromaPreviewPath=; disabled=; emblems=; groupSplash=; id=; isBase=; isChampionUnlocked=; isUnlockedFromEntitledFeature=; name=; ownership=; rarityGemPath=; splashPath=; splashVideoPath=; stillObtainable=; tilePath=; unlocked=}",
      "type": "object"
    },
    "LolChampSelectTeamBoost": {
      "properties": "@{availableSkins=; ipReward=; ipRewardForPurchaser=; price=; skinUnlockMode=; summonerId=; unlocked=}",
      "type": "object"
    },
    "LolChampionsChampionQuestSkinInfo": {
      "properties": "@{collectionCardPath=; collectionDescription=; descriptionInfo=; name=; splashPath=; tiers=; tilePath=; uncenteredSplashPath=}",
      "type": "object"
    },
    "LolChampionsCollectionsChampion": {
      "properties": "@{active=; alias=; banVoPath=; baseLoadScreenPath=; baseSplashPath=; botEnabled=; chooseVoPath=; disabledQueues=; freeToPlay=; id=; name=; ownership=; passive=; purchased=; rankedPlayEnabled=; roles=; skins=; spells=; squarePortraitPath=; stingerSfxPath=; tacticalInfo=; title=}",
      "type": "object"
    },
    "LolChampionsCollectionsChampionChroma": {
      "properties": "@{championId=; chromaPath=; colors=; disabled=; id=; lastSelected=; name=; ownership=; stillObtainable=}",
      "type": "object"
    },
    "LolChampionsCollectionsChampionMinimal": {
      "properties": "@{active=; alias=; banVoPath=; baseLoadScreenPath=; baseSplashPath=; botEnabled=; chooseVoPath=; disabledQueues=; freeToPlay=; id=; name=; ownership=; purchased=; rankedPlayEnabled=; roles=; squarePortraitPath=; stingerSfxPath=; title=}",
      "type": "object"
    },
    "LolChampionsCollectionsChampionPlayableCounts": {
      "properties": "@{championsFreeToPlay=; championsLoyaltyReward=; championsOwned=; championsRented=; championsXboxGPReward=}",
      "type": "object"
    },
    "LolChampionsCollectionsChampionQuestSkin": {
      "properties": "@{championId=; chromaPath=; collectionSplashVideoPath=; description=; disabled=; id=; isBase=; lastSelected=; loadScreenPath=; name=; ownership=; shortName=; splashPath=; splashVideoPath=; stage=; stillObtainable=; tilePath=; uncenteredSplashPath=}",
      "type": "object"
    },
    "LolChampionsCollectionsChampionSkin": {
      "properties": "@{championId=; chromaPath=; chromas=; collectionSplashVideoPath=; disabled=; emblems=; featuresText=; id=; isBase=; lastSelected=; loadScreenPath=; name=; ownership=; questSkinInfo=; rarityGemPath=; skinType=; splashPath=; splashVideoPath=; stillObtainable=; tilePath=; uncenteredSplashPath=}",
      "type": "object"
    },
    "LolChampionsCollectionsChampionSkinEmblem": {
      "properties": "@{emblemPath=; name=; positions=}",
      "type": "object"
    },
    "LolChampionsCollectionsChampionSkinEmblemPath": {
      "properties": "@{large=; small=}",
      "type": "object"
    },
    "LolChampionsCollectionsChampionSkinEmblemPosition": {
      "properties": "@{horizontal=; vertical=}",
      "type": "object"
    },
    "LolChampionsCollectionsChampionSkinMinimal": {
      "properties": "@{championId=; chromaPath=; disabled=; id=; isBase=; lastSelected=; name=; ownership=; splashPath=; stillObtainable=; tilePath=}",
      "type": "object"
    },
    "LolChampionsCollectionsChampionSpell": {
      "properties": "@{description=; name=}",
      "type": "object"
    },
    "LolChampionsCollectionsChampionTacticalInfo": {
      "properties": "@{damageType=; difficulty=; style=}",
      "type": "object"
    },
    "LolChampionsCollectionsOwnership": {
      "properties": "@{loyaltyReward=; owned=; rental=; xboxGPReward=}",
      "type": "object"
    },
    "LolChampionsCollectionsRental": {
      "properties": "@{endDate=; purchaseDate=; rented=; winCountRemaining=}",
      "type": "object"
    },
    "LolChampionsGameDataChampion": {
      "properties": "@{alias=; banVoPath=; chooseVoPath=; id=; name=; passive=; roles=; skins=; spells=; squarePortraitPath=; stingerSfxPath=; tacticalInfo=; title=}",
      "type": "object"
    },
    "LolChampionsGameDataChampionChroma": {
      "properties": "@{chromaPath=; colors=; id=}",
      "type": "object"
    },
    "LolChampionsGameDataChampionQuestSkin": {
      "properties": "@{collectionSplashVideoPath=; description=; id=; loadScreenPath=; name=; shortName=; splashPath=; splashVideoPath=; stage=; tilePath=; uncenteredSplashPath=}",
      "type": "object"
    },
    "LolChampionsGameDataChampionSkin": {
      "properties": "@{chromaPath=; chromas=; collectionSplashVideoPath=; emblems=; featuresText=; id=; loadScreenPath=; name=; questSkinInfo=; rarityGemPath=; skinType=; splashPath=; splashVideoPath=; tilePath=; uncenteredSplashPath=}",
      "type": "object"
    },
    "LolChampionsGameDataChampionSpell": {
      "properties": "@{description=; name=}",
      "type": "object"
    },
    "LolChampionsGameDataChampionSummary": {
      "properties": "@{id=}",
      "type": "object"
    },
    "LolChampionsGameDataChampionTacticalInfo": {
      "properties": "@{damageType=; difficulty=; style=}",
      "type": "object"
    },
    "LolChampionsGameDataQuestSkinDescriptionInfo": {
      "properties": "@{description=; iconPath=; title=}",
      "type": "object"
    },
    "LolChampionsGameDataQuestSkinInfo": {
      "properties": "@{collectionCardPath=; collectionDescription=; descriptionInfo=; name=; splashPath=; tiers=; tilePath=; uncenteredSplashPath=}",
      "type": "object"
    },
    "LolChampionsInventoryItemWithPayload": {
      "properties": "@{expirationDate=; f2p=; inventoryType=; itemId=; loyalty=; loyaltySources=; owned=; payload=; purchaseDate=; quantity=; rental=; uuid=}",
      "type": "object"
    },
    "LolChampionsLcdsDynamicClientConfig": {
      "properties": "@{DisabledChampions=}",
      "type": "object"
    },
    "LolChampionsLoginSession": {
      "properties": "@{connected=; state=; summonerId=}",
      "type": "object"
    },
    "LolChampionsLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolChampionsLoyaltyStatus": {
      "enum": "LEGACY REWARDS_GRANT EXPIRY CHANGE REVOKE DISABLED",
      "type": "string"
    },
    "LolChampionsLoyaltyStatusNotification": {
      "properties": "@{reloadInventory=; status=}",
      "type": "object"
    },
    "LolChampionsPlayerNotification": {
      "properties": "@{backgroundUrl=; critical=; data=; detailKey=; iconUrl=; id=; source=; state=; titleKey=; type=}",
      "type": "object"
    },
    "LolChampionsQuestSkinDescriptionInfo": {
      "properties": "@{description=; iconPath=; title=}",
      "type": "object"
    },
    "LolChampionsSummoner": {
      "properties": "@{summonerId=; summonerLevel=}",
      "type": "object"
    },
    "LolChatAccountState": {
      "enum": "offline mobile away chat dnd",
      "type": "string"
    },
    "LolChatActiveConversationResource": {
      "properties": "@{id=}",
      "type": "object"
    },
    "LolChatAuthResourceRsoAccessToken": {
      "properties": "@{expiry=; scopes=; token=}",
      "type": "object"
    },
    "LolChatAuthType": {
      "enum": "rsoCreate rsoRefresh",
      "type": "string"
    },
    "LolChatBlocked": {
      "properties": "@{game_name=; game_tag=; name=; pid=}",
      "type": "object"
    },
    "LolChatBlockedList": {
      "properties": "@{blocked=}",
      "type": "object"
    },
    "LolChatBlockedPlayerResource": {
      "properties": "@{gameName=; gameTag=; icon=; id=; name=; pid=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolChatChampSelection": {
      "properties": "@{championId=; selectedSkinIndex=; summonerInternalName=}",
      "type": "object"
    },
    "LolChatChatDomainConfig": {
      "properties": "@{ChampSelectDomainName=; ClubDomainName=; CustomGameDomainName=; P2PDomainName=; PostGameDomainName=}",
      "type": "object"
    },
    "LolChatChatFriendUpdate": {
      "properties": "@{group=; note=; pid=}",
      "type": "object"
    },
    "LolChatChatMessage": {
      "properties": "@{body=; cid=; game_name=; game_tag=; id=; mid=; name=; pid=; read=; time=; type=}",
      "type": "object"
    },
    "LolChatChatMessageList": {
      "properties": "@{messages=}",
      "type": "object"
    },
    "LolChatChatPlatformLoginSession": {
      "properties": "@{accountId=; gasToken=; idToken=; isNewPlayer=; puuid=; state=; summonerId=; userAuthToken=; username=}",
      "type": "object"
    },
    "LolChatChatPlatformLoginSessionState": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolChatChatServiceDynamicClientConfig": {
      "properties": "@{ChatDomain=; LcuSocial=}",
      "type": "object"
    },
    "LolChatChatSessionState": {
      "enum": "disconnected connecting connected",
      "type": "string"
    },
    "LolChatChatSettings": {
      "properties": "@{bounceDockIconEnabled=; chat-status-message=; chatFilterDisabled=; chatGBG=; chatGroupMobile=; chatGroupOffline=; chatWindow=; chatWindowDockedHeight=; closed-conversations=; friendRequestToastsDisabled=; hidden-conversations=; linkClickWarningEnabled=; messageNotificationsEnabled=; moreUnreadsEnabled=; muted-conversations=; recentlyPlayedFirstOpen=; recentlyPlayedOpen=; roster-group-collapsed=; showWhenTypingEnabled=; sortBy=; usePlayerPreferences=}",
      "type": "object"
    },
    "LolChatChatSummoner": {
      "properties": "@{displayName=; profileIconId=; puuid=; summonerId=; summonerLevel=; unnamed=}",
      "type": "object"
    },
    "LolChatChatWindowSettings": {
      "properties": "@{detached=; height=; left=; top=; width=}",
      "type": "object"
    },
    "LolChatCidBody": {
      "properties": "@{cid=}",
      "type": "object"
    },
    "LolChatConfigReadinessEnum": {
      "enum": "NotReady Ready Disabled",
      "type": "string"
    },
    "LolChatConfigStatus": {
      "properties": "@{readiness=}",
      "type": "object"
    },
    "LolChatConfigType": {
      "enum": "public player",
      "type": "string"
    },
    "LolChatContentCookies": {
      "properties": "@{content_id=; content_path=; cookies=}",
      "type": "object"
    },
    "LolChatConversation": {
      "properties": "@{cid=; mid=; muted=; type=; unread_count=}",
      "type": "object"
    },
    "LolChatConversationJoinFederated": {
      "properties": "@{domain=; hidden=; id=; password=; targetRegion=; type=}",
      "type": "object"
    },
    "LolChatConversationList": {
      "properties": "@{conversations=}",
      "type": "object"
    },
    "LolChatConversationMessageResource": {
      "properties": "@{body=; fromId=; fromObfuscatedSummonerId=; fromPid=; fromSummonerId=; id=; isHistorical=; timestamp=; type=}",
      "type": "object"
    },
    "LolChatConversationResource": {
      "properties": "@{gameName=; gameTag=; id=; inviterId=; isMuted=; lastMessage=; mucJwtDto=; name=; password=; pid=; targetRegion=; type=; unreadMessageCount=}",
      "type": "object"
    },
    "LolChatConversationUpdate": {
      "properties": "@{cid=; hidden=; muted=}",
      "type": "object"
    },
    "LolChatDebugResource": {
      "properties": "@{asyncWaitInterval=; enableChatFiltering=; failAllChatLogin=; failNextChatLogin=; failNextChatLogout=; failNextKeepAlive=; isXMPPLoggingEnabled=; keepAliveInterval=; maxReconnectInterval=; minReconnectInterval=; silenceChatWhileInGame=; triggerChatDisconnect=}",
      "type": "object"
    },
    "LolChatEndOfGamePlayer": {
      "properties": "@{isLocalPlayer=; puuid=}",
      "type": "object"
    },
    "LolChatEndOfGameStats": {
      "properties": "@{localPlayer=; teams=}",
      "type": "object"
    },
    "LolChatEndOfGameTeam": {
      "properties": "@{isPlayerTeam=; players=}",
      "type": "object"
    },
    "LolChatError": {
      "properties": "@{cid=; class=; code=; id=; pid=; subtype=; text=; ts=; type=}",
      "type": "object"
    },
    "LolChatErrorList": {
      "properties": "@{errors=}",
      "type": "object"
    },
    "LolChatErrorResource": {
      "properties": "@{code=; from=; id=; message=; text=}",
      "type": "object"
    },
    "LolChatFriend": {
      "properties": "@{displayGroup=; game_name=; game_tag=; group=; name=; note=; pid=; puuid=; region=}",
      "type": "object"
    },
    "LolChatFriendCountsResource": {
      "properties": "@{numFriends=; numFriendsAvailable=; numFriendsAway=; numFriendsInChampSelect=; numFriendsInGame=; numFriendsInQueue=; numFriendsMobile=; numFriendsOnline=}",
      "type": "object"
    },
    "LolChatFriendGroup": {
      "properties": "@{collapsed=; isMetaGroup=; name=}",
      "type": "object"
    },
    "LolChatFriendGroupCreate": {
      "properties": "@{collapsed=; name=}",
      "type": "object"
    },
    "LolChatFriendGroupList": {
      "properties": "@{groups=}",
      "type": "object"
    },
    "LolChatFriendGroupOrder": {
      "properties": "@{groups=}",
      "type": "object"
    },
    "LolChatFriendGroupUpdate": {
      "properties": "@{collapsed=; name=; new_name=}",
      "type": "object"
    },
    "LolChatFriendList": {
      "properties": "@{friends=}",
      "type": "object"
    },
    "LolChatFriendRequest": {
      "properties": "@{game_name=; game_tag=; name=; note=; pid=; puuid=; region=; subscription=}",
      "type": "object"
    },
    "LolChatFriendRequestAdd": {
      "properties": "@{game_name=; game_tag=; name=; note=; pid=; puuid=; region=}",
      "type": "object"
    },
    "LolChatFriendRequestDirection": {
      "enum": "in out both",
      "type": "string"
    },
    "LolChatFriendRequestList": {
      "properties": "@{requests=}",
      "type": "object"
    },
    "LolChatFriendRequestResource": {
      "properties": "@{direction=; gameName=; gameTag=; icon=; id=; name=; note=; pid=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolChatFriendResource": {
      "properties": "@{availability=; displayGroupId=; displayGroupName=; gameName=; gameTag=; groupId=; groupName=; icon=; id=; isP2PConversationMuted=; lastSeenOnlineTimestamp=; lol=; name=; note=; patchline=; pid=; platformId=; product=; productName=; puuid=; statusMessage=; summary=; summonerId=; time=}",
      "type": "object"
    },
    "LolChatFriendSubscriptionType": {
      "enum": "pending_out pending_in",
      "type": "string"
    },
    "LolChatGameDataChampionSummary": {
      "properties": "@{alias=; id=}",
      "type": "object"
    },
    "LolChatGameflowGameData": {
      "properties": "@{gameId=; playerChampionSelections=; queue=; teamOne=; teamTwo=}",
      "type": "object"
    },
    "LolChatGameflowGameMap": {
      "properties": "@{id=}",
      "type": "object"
    },
    "LolChatGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolChatGameflowSession": {
      "properties": "@{gameData=; map=; phase=}",
      "type": "object"
    },
    "LolChatGroupResource": {
      "properties": "@{collapsed=; id=; isLocalized=; isMetaGroup=; name=; priority=}",
      "type": "object"
    },
    "LolChatIdBody": {
      "properties": "@{id=}",
      "type": "object"
    },
    "LolChatLcuSocialConfig": {
      "properties": "@{AggressiveScanning=; ForceChatFilter=; QueueJobGraceSeconds=; ReplaceRichMessages=; SilenceChatWhileInGame=; allowGroupByGame=; gameNameTaglineEnabled=; platformToRegionMap=}",
      "type": "object"
    },
    "LolChatLeagueDivision": {
      "enum": "I II III IV V NA",
      "type": "string"
    },
    "LolChatLeagueQueueType": {
      "enum": "NONE RANKED_SOLO_5x5 RANKED_FLEX_SR RANKED_FLEX_TT RANKED_TFT",
      "type": "string"
    },
    "LolChatLobbyMember": {
      "properties": "@{id=; isOwner=}",
      "type": "object"
    },
    "LolChatLobbyPlayerStatus": {
      "properties": "@{currentLobbyStatus=; lastQueuedLobbyStatus=}",
      "type": "object"
    },
    "LolChatLobbyStatus": {
      "properties": "@{customSpectatorPolicy=; isCustom=; isLeader=; isPracticeTool=; queueId=}",
      "type": "object"
    },
    "LolChatMessage": {
      "properties": "@{body=; cid=; game_name=; game_tag=; id=; mid=; name=; pid=; read=; time=; type=}",
      "type": "object"
    },
    "LolChatMessageList": {
      "properties": "@{messages=}",
      "type": "object"
    },
    "LolChatMessagePost": {
      "properties": "@{cid=; message=; type=}",
      "type": "object"
    },
    "LolChatMessageSend": {
      "properties": "@{message=; type=}",
      "type": "object"
    },
    "LolChatMessageType": {
      "enum": "chat groupchat dm system",
      "type": "string"
    },
    "LolChatMucJwtDto": {
      "properties": "@{channelClaim=; domain=; jwt=; targetRegion=}",
      "type": "object"
    },
    "LolChatMultiGamePresence": {
      "properties": "@{actor=; details=; game_name=; game_tag=; location=; msg=; name=; patchline=; pid=; platform=; private=; privateJwt=; product=; puuid=; region=; resource=; state=; summary=; time=}",
      "type": "object"
    },
    "LolChatMultiGamePresenceList": {
      "properties": "@{presences=}",
      "type": "object"
    },
    "LolChatMultiGamePresenceSharedPayload": {
      "properties": "@{actor=; details=; location=; patchline=; platform=; product=; time=}",
      "type": "object"
    },
    "LolChatMultiGamePresenceUpdate": {
      "properties": "@{msg=; private=; privateJwt=; shared=; sharedJwt=; state=}",
      "type": "object"
    },
    "LolChatMuteType": {
      "enum": "PLAYER_MUTE SETTINGS_MUTE SYSTEM_MUTE",
      "type": "string"
    },
    "LolChatMutedPlayerInfo": {
      "properties": "@{obfuscatedPuuid=; obfuscatedSummonerId=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolChatNameBody": {
      "properties": "@{name=}",
      "type": "object"
    },
    "LolChatParticipant": {
      "properties": "@{cid=; game_name=; game_tag=; muted=; name=; pid=; puuid=; region=}",
      "type": "object"
    },
    "LolChatParticipantList": {
      "properties": "@{participants=}",
      "type": "object"
    },
    "LolChatPatchlineMetadata": {
      "properties": "@{content_cookies=; content_paths=; id=; product_id=}",
      "type": "object"
    },
    "LolChatPidBody": {
      "properties": "@{pid=}",
      "type": "object"
    },
    "LolChatPlayerMuteStatus": {
      "properties": "@{isPlayerMuted=; isSettingsMuted=; isSystemMuted=; obfuscatedPuuid=; puuid=}",
      "type": "object"
    },
    "LolChatPlayerMuteUpdate": {
      "properties": "@{isMuted=; puuids=}",
      "type": "object"
    },
    "LolChatPlayerPreferences": {
      "properties": "@{data=; modified=; type=}",
      "type": "object"
    },
    "LolChatPluginRegionLocaleChangedEvent": {
      "properties": "@{locale=; region=}",
      "type": "object"
    },
    "LolChatPresenceProduct": {
      "properties": "@{product=}",
      "type": "object"
    },
    "LolChatProductMetadata": {
      "properties": "@{id=; name=; patchlines=}",
      "type": "object"
    },
    "LolChatProductMetadataMap": {
      "properties": "@{products=}",
      "type": "object"
    },
    "LolChatQueue": {
      "properties": "@{gameMode=; gameTypeConfig=; id=; type=}",
      "type": "object"
    },
    "LolChatQueueCustomGameSpectatorPolicy": {
      "enum": "NotAllowed LobbyAllowed FriendsAllowed AllAllowed",
      "type": "string"
    },
    "LolChatQueueGameTypeConfig": {
      "properties": "@{id=; name=}",
      "type": "object"
    },
    "LolChatRankedQueueStats": {
      "properties": "@{division=; games=; isProvisional=; queueType=; tier=; wins=}",
      "type": "object"
    },
    "LolChatRankedStats": {
      "properties": "@{highestPreviousSeasonAchievedDivision=; highestPreviousSeasonAchievedTier=; highestRankedEntry=; rankedRegaliaLevel=}",
      "type": "object"
    },
    "LolChatRsoAuthorization": {
      "properties": "@{currentAccountId=; currentPlatformId=; subject=}",
      "type": "object"
    },
    "LolChatSanitizeRequest": {
      "properties": "@{aggressiveScan=; level=; texts=}",
      "type": "object"
    },
    "LolChatSanitizeResponse": {
      "properties": "@{modified=; texts=}",
      "type": "object"
    },
    "LolChatSanitizerStatus": {
      "properties": "@{locale=; platformID=; ready=}",
      "type": "object"
    },
    "LolChatSession": {
      "properties": "@{game_name=; game_tag=; loaded=; name=; pid=; resource=; state=}",
      "type": "object"
    },
    "LolChatSessionResource": {
      "properties": "@{sessionExpire=; sessionState=}",
      "type": "object"
    },
    "LolChatSessionState": {
      "enum": "initializing connected loaded disconnected shuttingdown",
      "type": "string"
    },
    "LolChatSettingsResource": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolChatSpectateGameInfoResource": {
      "properties": "@{allowObserveMode=; dropInSpectateGameId=; gameQueueType=; puuid=}",
      "type": "object"
    },
    "LolChatSummonerStatus": {
      "properties": "@{ready=}",
      "type": "object"
    },
    "LolChatTeamPlayerEntry": {
      "properties": "@{summonerId=; summonerInternalName=; summonerName=}",
      "type": "object"
    },
    "LolChatTranslateRequest": {
      "properties": "@{blocking=; keys=; locale=; patchline=; product_id=}",
      "type": "object"
    },
    "LolChatTranslateResponse": {
      "properties": "@{results=}",
      "type": "object"
    },
    "LolChatTranslateResult": {
      "properties": "@{found=; key=; product_id=; value=}",
      "type": "object"
    },
    "LolChatUserResource": {
      "properties": "@{availability=; gameName=; gameTag=; icon=; id=; lastSeenOnlineTimestamp=; lol=; name=; obfuscatedSummonerId=; patchline=; pid=; platformId=; product=; productName=; puuid=; statusMessage=; summary=; summonerId=; time=}",
      "type": "object"
    },
    "LolChatcookie": {
      "properties": "@{domain=; expires=; httponly=; name=; path=; secure=; url=; value=}",
      "type": "object"
    },
    "LolClashBlockedPlayerResource": {
      "properties": "@{name=; summonerId=}",
      "type": "object"
    },
    "LolClashBracket": {
      "properties": "@{id=; isComplete=; matches=; period=; rosters=; size=; tournamentId=; version=}",
      "type": "object"
    },
    "LolClashBracketReadyNotification": {
      "properties": "@{bracketId=; tournamentId=}",
      "type": "object"
    },
    "LolClashBracketUpdateNotification": {
      "properties": "@{bracketId=; currentMatchId=; notifyReason=; tournamentId=}",
      "type": "object"
    },
    "LolClashChangeIconRequest": {
      "properties": "@{iconColorId=; iconId=}",
      "type": "object"
    },
    "LolClashChangeNameRequest": {
      "properties": "@{name=}",
      "type": "object"
    },
    "LolClashClashConfig": {
      "properties": "@{CheckPartiesRegistration=; DisabledEvents=; DisabledReason=; EnabledState=; EstimatedEnableTimeMillis=; EventSendingEnabled=; HonorLevelRequired=; HonorRefreshRetrySeconds=; IconConfig=; IsPlaymodeRestrictionEnabled=; MaxTimeBeforeLockinNotifySeconds=; MinClashNotificationsSummonerLevel=; MinClashSummonerLevel=; RewardGrantRetryIntervalSeconds=; Visibility=; VoiceEobQuitDelaySeconds=; VoiceNoDelayAutoStartSeconds=; VoiceRandomStartMaxSeconds=; VoiceRandomStartMinSeconds=; VoiceRetryCountLimit=; VoiceRetryDelaySeconds=}",
      "type": "object"
    },
    "LolClashClashDisabledConfig": {
      "properties": "@{disabledReason=; estimatedEnableTimeMillis=}",
      "type": "object"
    },
    "LolClashClashSettingCategory": {
      "properties": "@{simpleStateFlagIds=}",
      "type": "object"
    },
    "LolClashClashState": {
      "enum": "Disabled Enabled",
      "type": "string"
    },
    "LolClashClashVisibility": {
      "enum": "Hidden Visible",
      "type": "string"
    },
    "LolClashClientFailedInvite": {
      "properties": "@{exception=; playerId=}",
      "type": "object"
    },
    "LolClashClubsSummoner": {
      "properties": "@{displayName=; profileIconId=; summonerId=; summonerLevel=}",
      "type": "object"
    },
    "LolClashEogPlayerUpdateDTO": {
      "properties": "@{bid=; bracketSize=; earnedRewards=; gameId=; lowestPosition=; rewardProgress=; seasonVp=; themeVp=; tier=; tournamentId=; winner=}",
      "type": "object"
    },
    "LolClashFindPlayers": {
      "properties": "@{count=; invitationId=; memberId=; page=}",
      "type": "object"
    },
    "LolClashFindTeams": {
      "properties": "@{count=; page=; tournamentId=}",
      "type": "object"
    },
    "LolClashFoundationError": {
      "enum": "CLASH_NOT_INITIALIZED CLASH_DISABLED DESERIALIZATION_FAILED GAMEFLOW_UNAVAILABLE LOL_INVENTORY_NOT_READY INVALID_SIMPLE_STATE_FLAG",
      "type": "string"
    },
    "LolClashGameflowAvailability": {
      "properties": "@{isAvailable=}",
      "type": "object"
    },
    "LolClashGameflowGameDodge": {
      "properties": "@{dodgeIds=; state=}",
      "type": "object"
    },
    "LolClashGameflowPartiesRegistrationStatus": {
      "properties": "@{complete=; errorCodes=}",
      "type": "object"
    },
    "LolClashGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolClashGameflowSession": {
      "properties": "@{phase=}",
      "type": "object"
    },
    "LolClashKdaClassification": {
      "enum": "LOW AVERAGE HIGH",
      "type": "string"
    },
    "LolClashKickRequest": {
      "properties": "@{summonerId=}",
      "type": "object"
    },
    "LolClashLftState": {
      "properties": "@{lft=; primaryPos=; secondaryPos=}",
      "type": "object"
    },
    "LolClashLoginSession": {
      "properties": "@{state=; summonerId=}",
      "type": "object"
    },
    "LolClashLoginSessionState": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolClashMatchmakingDodgeData": {
      "properties": "@{dodgerId=; state=}",
      "type": "object"
    },
    "LolClashMatchmakingDodgeState": {
      "enum": "Invalid PartyDodged StrangerDodged TournamentDodged",
      "type": "string"
    },
    "LolClashMatchmakingDodgeWarning": {
      "enum": "None Warning Penalty",
      "type": "string"
    },
    "LolClashMatchmakingReadyCheckResource": {
      "properties": "@{declinerIds=; dodgeWarning=; playerResponse=; state=; timer=}",
      "type": "object"
    },
    "LolClashMatchmakingReadyCheckResponse": {
      "enum": "None Accepted Declined",
      "type": "string"
    },
    "LolClashMatchmakingReadyCheckState": {
      "enum": "Invalid InProgress EveryoneReady StrangerNotReady PartyNotReady Error",
      "type": "string"
    },
    "LolClashMatchmakingSearchResource": {
      "properties": "@{dodgeData=; queueId=; readyCheck=}",
      "type": "object"
    },
    "LolClashMemberBanUnbanNotification": {
      "properties": "@{notifyPlayerId=; notifyPuuid=; notifyReason=; playerId=; reason=; tournaments=}",
      "type": "object"
    },
    "LolClashMucJwtDto": {
      "properties": "@{channelClaim=; domain=; jwt=; targetRegion=}",
      "type": "object"
    },
    "LolClashNoShowPingDTO": {
      "properties": "@{dodgeTime=; matchId=; tournamentId=}",
      "type": "object"
    },
    "LolClashNoShowPingResponse": {
      "properties": "@{data=; dodgeTime=; matchId=; tournamentId=}",
      "type": "object"
    },
    "LolClashNoShowPingResponseData": {
      "properties": "@{dodgeTime=; gameflowState=; isPlaymodeRestricted=; loginTime=; readyCheckInfo=}",
      "type": "object"
    },
    "LolClashNotifyReason": {
      "enum": "SUGGESTION DECLINE_SUGGESTION ACCEPT_SUGGESTION REVOKE_SUGGESTION DECLINE_SELFJOIN ACCEPT_SELFJOIN REVOKE_SELFJOIN SELFJOIN READY UNREADY OWNER_CLOSE DISMISS ROSTER_DELETE OWNER_TRANSFER CHANGE_LOGO CHANGE_NAME CHANGE_SHORTNAME CHANGE_POSITION CHANGE_NAMETAGLOGO CHANGE_LFT INVITE RESENT_INVITE DECLINE_INVITE ACCEPT_INVITE REVOKE_INVITE LEAVE CAPTAIN_LEAVE KICK SET_TICKET OFFER_TICKET REVOKED_TICKET DECLINE_TICKET ACCEPT_TICKET REWARD_GRANT_FAILED REWARD_GRANT_RETRY REVERTED_REGISTRATION BAN UNBAN MEMBER_BAN TEAMMATE_BAN TEAMMATE_UNBAN",
      "type": "string"
    },
    "LolClashOfferTicketRequest": {
      "properties": "@{ticketAmount=; ticketType=}",
      "type": "object"
    },
    "LolClashPendingRosterNotification": {
      "properties": "@{notifyReason=; pendingRoster=; sourcePlayerId=; targetPlayerId=}",
      "type": "object"
    },
    "LolClashPlayerChatRoster": {
      "properties": "@{endTimeMs=; iconColorId=; iconId=; invitationId=; isRegistered=; logoUrl=; mucJwtDto=; multiUserChatId=; multiUserChatPassword=; name=; playerState=; shortName=; startTimeMs=; tournamentId=; tournamentState=}",
      "type": "object"
    },
    "LolClashPlayerData": {
      "properties": "@{isClashBanned=; lft=; primaryPos=; secondaryPos=; tickets=; tier=}",
      "type": "object"
    },
    "LolClashPlayerNotification": {
      "properties": "@{backgroundUrl=; created=; critical=; data=; detailKey=; dismissible=; expires=; iconUrl=; id=; source=; state=; titleKey=; type=}",
      "type": "object"
    },
    "LolClashPlayerNotificationData": {
      "properties": "@{keySuffix=; notification=; notifyReason=; rosterNotifyReason=; sourceSummonerId=; targetSummonerId=; tournamentNotifyReason=}",
      "type": "object"
    },
    "LolClashPlayerRewards": {
      "properties": "@{seasonVp=; themeVp=}",
      "type": "object"
    },
    "LolClashPlayerState": {
      "enum": "NO_ROSTER PENDING_ROSTER REGISTERED_ROSTER BRACKET_ROSTER ELIMINATED",
      "type": "string"
    },
    "LolClashPlayerTournamentData": {
      "properties": "@{bracketId=; rosterId=; state=}",
      "type": "object"
    },
    "LolClashPlayerUpdateNotification": {
      "properties": "@{notifyReason=; player=}",
      "type": "object"
    },
    "LolClashPlaymodeRestrictedInfo": {
      "properties": "@{isRestricted=; phaseId=; presenceState=; readyForVoice=; rosterId=; tournamentId=}",
      "type": "object"
    },
    "LolClashPresenceState": {
      "enum": "NONE LOCKED_IN SCOUTING",
      "type": "string"
    },
    "LolClashProfileInfo": {
      "properties": "@{honorLevel=}",
      "type": "object"
    },
    "LolClashQueue": {
      "properties": "@{areFreeChampionsAllowed=; category=; description=; detailedDescription=; gameMode=; gameTypeConfig=; id=; isRanked=; isTeamBuilderManaged=; mapId=; maximumParticipantListSize=; minLevel=; minimumParticipantListSize=; name=; numPlayersPerTeam=; queueAvailability=; queueRewards=; shortName=; spectatorEnabled=; type=}",
      "type": "object"
    },
    "LolClashQueueAvailability": {
      "enum": "Available PlatformDisabled DoesntMeetRequirements",
      "type": "string"
    },
    "LolClashQueueGameCategory": {
      "enum": "None Custom PvP VersusAi Alpha",
      "type": "string"
    },
    "LolClashQueueGameTypeConfig": {
      "properties": "@{advancedLearningQuests=; allowTrades=; banMode=; banTimerDuration=; battleBoost=; crossTeamChampionPool=; deathMatch=; doNotRemove=; duplicatePick=; exclusivePick=; id=; learningQuests=; mainPickTimerDuration=; maxAllowableBans=; name=; onboardCoopBeginner=; pickMode=; postPickTimerDuration=; reroll=; teamChampionPool=}",
      "type": "object"
    },
    "LolClashQueueReward": {
      "properties": "@{isChampionPointsEnabled=; isIpEnabled=; isXpEnabled=; partySizeIpRewards=}",
      "type": "object"
    },
    "LolClashRankedScoutingMember": {
      "properties": "@{championScoutingData=; playerId=}",
      "type": "object"
    },
    "LolClashRankedScoutingTopChampion": {
      "properties": "@{championId=; gameCount=; kda=; kdaClassification=; rank=; winCount=; winRate=}",
      "type": "object"
    },
    "LolClashReadyCheckInfo": {
      "properties": "@{acceptError=; isAcceptSuccessful=; queueId=; readyCheckResource=; timestampLastClashGameflowDodge=; timestampReceived=; timestampResponseComplete=}",
      "type": "object"
    },
    "LolClashRegisteredRosterNotification": {
      "properties": "@{notifyReason=; roster=}",
      "type": "object"
    },
    "LolClashRoster": {
      "properties": "@{availableLogos=; captainSummonerId=; currentBracketWins=; highTierVariance=; iconColorId=; iconId=; id=; invitationId=; isActiveInCurrentPhase=; isClashBanned=; isCurrentBracketComplete=; isEliminated=; isRegistered=; lft=; losses=; members=; name=; numCompletedPeriods=; phaseInfos=; points=; shortName=; suggestedInvites=; tier=; tournamentId=; wins=; withdraw=}",
      "type": "object"
    },
    "LolClashRosterDetails": {
      "properties": "@{iconColorId=; iconId=; name=; shortName=}",
      "type": "object"
    },
    "LolClashRosterDynamicStateNotification": {
      "properties": "@{notifyReason=; rosterDynamicState=; sourcePlayerId=}",
      "type": "object"
    },
    "LolClashRosterMatchAggregatedStats": {
      "properties": "@{durationMs=; gameId=; kills=; loserBracket=; opponentIconColorId=; opponentIconId=; opponentKills=; opponentShortName=; playerChampionIds=; round=; win=}",
      "type": "object"
    },
    "LolClashRosterMember": {
      "properties": "@{buyinType=; currentBuyin=; incomingOffers=; inviteType=; inviterId=; position=; previousBuyin=; replacedSummonerId=; state=; summonerId=; tier=}",
      "type": "object"
    },
    "LolClashRosterMemberState": {
      "enum": "DECLINED PENDING NOT_READY FORCED_NOT_READY READY",
      "type": "string"
    },
    "LolClashRosterNotifyReason": {
      "enum": "ROSTER_SET_TICKET ROSTER_OFFER_TICKET ROSTER_ACCEPT_TICKET ROSTER_DECLINE_TICKET ROSTER_REVOKED_TICKET BYE_AUTO_WIN BRACKET_READY CHANGE_POSITION EOG_PLAYER_UPDATE REGISTERED RESTRICTION_AUTO_WIN PHASE_UNREADY PHASE_READY PHASE_CHECKIN PHASE_BACKOUT PERIOD_CANCEL PERIOD_SPLIT GAME_COMPLETED GAME_SCHEDULED GAME_STARTED GAME_STARTED_ERROR GAME_END_ERROR QUEUE_DODGE OWNER_TRANSFER VOTE_WITHDRAW_UPDATE VOTE_WITHDRAW_DISMISS WITHDRAW ROUND_COMPLETE NO_SHOW_PING TIER_CHANGED BRACKET_ROSTER_REMOVED BRACKET_ROSTER_REPLACED CANNOT_FIND_MATCH BANNED_SMURF BANNED_SMURF_TEAMMATE BANNED_SMURF_OPPONENT TICKET_CHARGED TICKET_REFUNDED TICKET_COULD_NOT_BE_CHARGED GAME_START_RETRY GAME_START_RETRY_SUMMONERS GAME_START_RETRY_OPPONENT GAME_START_FAILED GAME_START_FAILED_SUMMONERS GAME_START_FAILED_OPPONENT GAME_RESCHEDULED",
      "type": "string"
    },
    "LolClashRosterPeriodAggregatedStats": {
      "properties": "@{bracketSize=; matchStats=; period=; playerBids=; time=}",
      "type": "object"
    },
    "LolClashRosterPhaseInfo": {
      "properties": "@{checkinTime=; isBracketComplete=; period=; phaseId=}",
      "type": "object"
    },
    "LolClashRosterPlayerAggregatedStats": {
      "properties": "@{rawStatsMax=; rawStatsSum=}",
      "type": "object"
    },
    "LolClashRosterPlayerNotification": {
      "properties": "@{notifyReason=; playerNotificationDTO=; roster=; sourcePlayerId=}",
      "type": "object"
    },
    "LolClashRosterStats": {
      "properties": "@{endTimeMs=; periodStats=; playerStats=; rosterIconColorId=; rosterIconId=; rosterId=; rosterName=; rosterShortName=; startTimeMs=; tier=; tournamentNameLocKey=; tournamentNameLocKeySecondary=; tournamentPeriods=; tournamentThemeId=}",
      "type": "object"
    },
    "LolClashRosterWithdrawNotification": {
      "properties": "@{notifyReason=; rosterId=; sourcePlayerId=; tournamentId=; version=; withdraw=}",
      "type": "object"
    },
    "LolClashScoutingChampionMastery": {
      "properties": "@{championId=; championLevel=; championPoints=}",
      "type": "object"
    },
    "LolClashScoutingChampions": {
      "properties": "@{playerId=; topMasteries=; topSeasonChampions=; totalMasteryScore=}",
      "type": "object"
    },
    "LolClashScoutingSeasonChampion": {
      "properties": "@{championId=; gameCount=; kda=; kdaClassification=; winCount=; winRate=}",
      "type": "object"
    },
    "LolClashSetPositionRequest": {
      "properties": "@{position=}",
      "type": "object"
    },
    "LolClashSetTicketRequest": {
      "properties": "@{ticketAmount=; ticketType=}",
      "type": "object"
    },
    "LolClashSettingCategory": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolClashSimpleStateFlag": {
      "properties": "@{id=; status=}",
      "type": "object"
    },
    "LolClashSimpleStateStatus": {
      "enum": "UNACKNOWLEDGED ACKNOWLEDGED",
      "type": "string"
    },
    "LolClashSuggestedInvite": {
      "properties": "@{suggesterSummonerId=; summonerId=}",
      "type": "object"
    },
    "LolClashSuggestionInvite": {
      "properties": "@{inviteePlayers=; inviterId=}",
      "type": "object"
    },
    "LolClashSuggestionInvitee": {
      "properties": "@{captainId=; inviteeId=}",
      "type": "object"
    },
    "LolClashTeamOpenState": {
      "properties": "@{captainId=; invitationId=; openTeam=}",
      "type": "object"
    },
    "LolClashThemeVp": {
      "properties": "@{themeId=; vp=}",
      "type": "object"
    },
    "LolClashThirdPartyApiPlayer": {
      "properties": "@{role=; summonerId=}",
      "type": "object"
    },
    "LolClashThirdPartyApiRoster": {
      "properties": "@{captain=; members=}",
      "type": "object"
    },
    "LolClashTicketOffer": {
      "properties": "@{amount=; isAccepted=; summonerId=; ticketType=}",
      "type": "object"
    },
    "LolClashTournament": {
      "properties": "@{allowRosterCreation=; bracketFormationInitDelayMs=; bracketFormationIntervalMs=; bracketSize=; buyInOptions=; buyInOptionsPremium=; endTimeMs=; entryFee=; id=; isHonorRestrictionEnabled=; isRankedRestrictionEnabled=; isSmsRestrictionEnabled=; lastThemeOfSeason=; lft=; maxInvites=; maxSuggestionsPerPlayer=; nameLocKey=; nameLocKeySecondary=; phases=; queueId=; resumeTime=; rewardConfig=; rosterCreateDeadline=; rosterSize=; scoutingDurationMs=; startTimeMs=; status=; themeId=; tierConfigs=}",
      "type": "object"
    },
    "LolClashTournamentGameEnd": {
      "properties": "@{bracketId=; oldBracket=; tournamentId=; tournamentNameLocKey=; tournamentNameLocKeySecondary=}",
      "type": "object"
    },
    "LolClashTournamentHistoryAndWinners": {
      "properties": "@{tournamentHistory=; tournamentWinners=}",
      "type": "object"
    },
    "LolClashTournamentNotifyReason": {
      "enum": "NEW_TOURNAMENT UPDATE_TOURNAMENT CANCEL_TOURNAMENT CANCEL_PERIOD ADD_PHASE UPDATE_PHASE REVERT_PHASE UPDATE_STATUS",
      "type": "string"
    },
    "LolClashTournamentPhase": {
      "properties": "@{cancelled=; capacityStatus=; id=; limitTiers=; lockinStartTime=; period=; scoutingStartTime=; tournamentId=}",
      "type": "object"
    },
    "LolClashTournamentPhaseProgressNotificationDTO": {
      "properties": "@{capacityStatus=; phaseId=; tournamentId=}",
      "type": "object"
    },
    "LolClashTournamentState": {
      "enum": "UPCOMING IDLE LOCK_IN SCOUTING IN_GAME RESULTS",
      "type": "string"
    },
    "LolClashTournamentStateInfo": {
      "properties": "@{currentPhaseId=; nextPhaseId=; nextStateChangeTime=; numRemainingPeriods=; state=; tournamentId=}",
      "type": "object"
    },
    "LolClashTournamentSummary": {
      "properties": "@{bracketId=; rosterId=; state=; tournamentId=}",
      "type": "object"
    },
    "LolClashTournamentUpdatedNotification": {
      "properties": "@{currentRetry=; maxRetry=; missingPlayerIds=; notifyReason=; retrySeconds=}",
      "type": "object"
    },
    "LolClashTournamentUpdatedNotificationDTO": {
      "properties": "@{reason=; relevantPhaseId=; tournament=; tournamentId=}",
      "type": "object"
    },
    "LolClashTournamentWinnerHistory": {
      "properties": "@{tournamentId=; winners=}",
      "type": "object"
    },
    "LolClashTournamentWinnerInfo": {
      "properties": "@{averageWinDuration=; createTime=; logo=; logoColor=; name=; playerIds=; rosterId=; shortName=; tier=}",
      "type": "object"
    },
    "LolClashUserResource": {
      "properties": "@{lol=; summonerId=}",
      "type": "object"
    },
    "LolCollectionsAccountIdAndSummonerId": {
      "properties": "@{summonerId=}",
      "type": "object"
    },
    "LolCollectionsCollectionsChampionMastery": {
      "properties": "@{championId=; championLevel=; championPoints=; championPointsSinceLastLevel=; championPointsUntilNextLevel=; chestGranted=; formattedChampionPoints=; formattedMasteryGoal=; highestGrade=; lastPlayTime=; playerId=; tokensEarned=}",
      "type": "object"
    },
    "LolCollectionsCollectionsChestEligibility": {
      "properties": "@{earnableChests=; maximumChests=; nextChestRechargeTime=}",
      "type": "object"
    },
    "LolCollectionsCollectionsOwnership": {
      "properties": "@{loyaltyReward=; owned=; rental=; xboxGPReward=}",
      "type": "object"
    },
    "LolCollectionsCollectionsRental": {
      "properties": "@{endDate=; purchaseDate=; rented=; winCountRemaining=}",
      "type": "object"
    },
    "LolCollectionsCollectionsSummonerBackdrop": {
      "properties": "@{accountId=; backdropImage=; backdropMaskColor=; backdropType=; backdropVideo=; championId=; profileIconId=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolCollectionsCollectionsSummonerBackdropType": {
      "enum": "default summoner-icon highest-mastery specified-skin",
      "type": "string"
    },
    "LolCollectionsCollectionsSummonerSpells": {
      "properties": "@{spells=; summonerId=}",
      "type": "object"
    },
    "LolCollectionsCollectionsTopChampionMasteries": {
      "properties": "@{masteries=; score=; summonerId=}",
      "type": "object"
    },
    "LolCollectionsCollectionsWardSkin": {
      "properties": "@{description=; id=; name=; ownership=; wardImagePath=; wardShadowImagePath=}",
      "type": "object"
    },
    "LolCollectionsCollectionsWardSkinList": {
      "properties": "@{wardSkinList=}",
      "type": "object"
    },
    "LolCollectionsGameDataChampionMasteries": {
      "properties": "@{tree=}",
      "type": "object"
    },
    "LolCollectionsGameDataChampionMasteryGroup": {
      "properties": "@{id=; rows=}",
      "type": "object"
    },
    "LolCollectionsGameDataChampionMasteryRow": {
      "properties": "@{masteries=}",
      "type": "object"
    },
    "LolCollectionsGameDataChampionMasteryTree": {
      "properties": "@{groups=}",
      "type": "object"
    },
    "LolCollectionsGameDataChampionQuestSkin": {
      "properties": "@{id=; name=; splashPath=; splashVideoPath=}",
      "type": "object"
    },
    "LolCollectionsGameDataChampionSkin": {
      "properties": "@{id=; isBase=; name=; questSkinInfo=; splashPath=; splashVideoPath=}",
      "type": "object"
    },
    "LolCollectionsGameDataChampionSummary": {
      "properties": "@{id=}",
      "type": "object"
    },
    "LolCollectionsGameDataQuestSkinInfo": {
      "properties": "@{tiers=}",
      "type": "object"
    },
    "LolCollectionsGameDataSplashMetadata": {
      "properties": "@{CalculatedColor=; OverrideColor=}",
      "type": "object"
    },
    "LolCollectionsInventoryItem": {
      "properties": "@{inventoryType=; itemId=; ownershipType=; purchaseDate=; quantity=; uuid=}",
      "type": "object"
    },
    "LolCollectionsInventoryItemDTO": {
      "properties": "@{entitlementId=; entitlementTypeId=; expirationDate=; f2p=; instanceId=; instanceTypeId=; inventoryType=; itemId=; loyalty=; lsb=; ownedQuantity=; payload=; purchaseDate=; quantity=; rental=; usedInGameDate=; wins=}",
      "type": "object"
    },
    "LolCollectionsInventoryItemWithPayload": {
      "properties": "@{inventoryType=; itemId=; ownershipType=; payload=; purchaseDate=; quantity=; uuid=}",
      "type": "object"
    },
    "LolCollectionsItemOwnershipType": {
      "enum": "OWNED RENTED LOYALTY F2P",
      "type": "string"
    },
    "LolCollectionsLcdsDynamicClientConfig": {
      "properties": "@{DisabledChampions=}",
      "type": "object"
    },
    "LolCollectionsLoginSession": {
      "properties": "@{connected=; state=; summonerId=}",
      "type": "object"
    },
    "LolCollectionsLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolCollectionsNumberFormattingBehavior": {
      "properties": "@{digitsForThousandsSeperator=; trimTrailingZerosAfterDecimal=; westernNumberGrouping=}",
      "type": "object"
    },
    "LolCollectionsNumberFormattingData": {
      "properties": "@{billionAbbreviation=; decimalSeperator=; hourAbbreviation=; kilometersAbbreviation=; metersAbbreviation=; millionAbbreviation=; minuteAbbreviation=; numberFormattingBehavior=; oneHundredMillionAbbreviation=; percentageFormat=; secondAbbreviation=; tenThousandAbbreviation=; thousandAbbreviation=; thousandSeperator=; trillionAbbreviation=}",
      "type": "object"
    },
    "LolCollectionsPlayerNotification": {
      "properties": "@{backgroundUrl=; critical=; data=; detailKey=; iconUrl=; id=; source=; state=; titleKey=; type=}",
      "type": "object"
    },
    "LolCollectionsSummoner": {
      "properties": "@{accountId=; profileIconId=; puuid=; summonerId=; summonerLevel=}",
      "type": "object"
    },
    "LolCollectionsSummonerProfile": {
      "properties": "@{backgroundSkinId=}",
      "type": "object"
    },
    "LolCollectionsSummonerProfileUpdate": {
      "properties": "@{key=; value=}",
      "type": "object"
    },
    "LolContentTargetingAccountIdAndSummonerId": {
      "properties": "@{summonerId=}",
      "type": "object"
    },
    "LolContentTargetingCollectionsChampionMastery": {
      "properties": "@{championId=; championLevel=; championPoints=; lastPlayTime=; playerId=}",
      "type": "object"
    },
    "LolContentTargetingContentTargetingFilterResponse": {
      "properties": "@{filters=}",
      "type": "object"
    },
    "LolContentTargetingContentTargetingLocaleResponse": {
      "properties": "@{locale=}",
      "type": "object"
    },
    "LolContentTargetingDataModelResponse": {
      "properties": "@{modelData=; responseCode=}",
      "type": "object"
    },
    "LolContentTargetingGameflowGameData": {
      "properties": "@{gameId=; queue=}",
      "type": "object"
    },
    "LolContentTargetingGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolContentTargetingGameflowSession": {
      "properties": "@{gameData=; phase=}",
      "type": "object"
    },
    "LolContentTargetingGeoInfo": {
      "properties": "@{city=; country=; region=}",
      "type": "object"
    },
    "LolContentTargetingGeoInfoResponse": {
      "properties": "@{errorMessage=; geoInfo=; isInitialized=; isLatest=; success=}",
      "type": "object"
    },
    "LolContentTargetingLoginSession": {
      "properties": "@{idToken=; puuid=; state=; summonerId=}",
      "type": "object"
    },
    "LolContentTargetingLoginSessionState": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolContentTargetingMission": {
      "properties": "@{completedDate=; id=; internalName=; status=}",
      "type": "object"
    },
    "LolContentTargetingPlatformConfig": {
      "properties": "@{ABTestFilterEnabled=; ABTestFilterGroups=; ABTestFilterSalt=; AsynchronousEventHandlerSetupDelayInSeconds=; Enabled=; EntitlementsFilterEnabled=; EntitlementsPrefix=; LevelFilterEnabled=; LocationFiltersEnabled=; MainFilterEnabled=; Mapping=; MasteryFilterChampionLimit=; MasteryFilterDaysSinceLastPlayed=; MasteryFilterEnabled=; MasteryFilterLevelThreshold=; MissionsFilterEnabled=; RankFilterEnabled=; RankedFilterEnabled=; SummonerIconFilterEnabled=; TargetingAttributeStorageBaseUri=; TargetingAttributeStorageEnabled=; TasIngestionDelayInSeconds=}",
      "type": "object"
    },
    "LolContentTargetingQueue": {
      "properties": "@{category=; gameMode=; id=; mapId=}",
      "type": "object"
    },
    "LolContentTargetingQueueGameCategory": {
      "enum": "None Custom PvP VersusAi Alpha",
      "type": "string"
    },
    "LolContentTargetingRankedDivision": {
      "enum": "NA I II III IV V",
      "type": "string"
    },
    "LolContentTargetingRankedQueue": {
      "enum": "NONE RANKED_SOLO_5x5 RANKED_FLEX_SR RANKED_FLEX_TT RANKED_TFT RANKED_TFT_TURBO RANKED_TFT_PAIRS RANKED_TFT_DOUBLE_UP",
      "type": "string"
    },
    "LolContentTargetingRankedQueueStats": {
      "properties": "@{division=; isProvisional=; queueType=; tier=}",
      "type": "object"
    },
    "LolContentTargetingRankedStats": {
      "properties": "@{highestRankedEntry=; queues=}",
      "type": "object"
    },
    "LolContentTargetingRegionLocale": {
      "properties": "@{locale=}",
      "type": "object"
    },
    "LolContentTargetingSettingsResource": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolContentTargetingSummoner": {
      "properties": "@{profileIconId=; summonerLevel=}",
      "type": "object"
    },
    "LolContentTargetingTargetingAttributes": {
      "properties": "@{result=}",
      "type": "object"
    },
    "LolContentTargetingToken": {
      "properties": "@{entitlements=}",
      "type": "object"
    },
    "LolCosmeticsAccountSettingsCategoryDataResource": {
      "properties": "@{typeToLastOpenedDate=}",
      "type": "object"
    },
    "LolCosmeticsCapOffer": {
      "properties": "@{active=; createdDate=; id=; label=; merchantId=; payload=; productId=; startDate=; typeId=}",
      "type": "object"
    },
    "LolCosmeticsCompanionsGroupViewModel": {
      "properties": "@{groupId=; groupName=; items=; numAvailable=; numOwned=}",
      "type": "object"
    },
    "LolCosmeticsCompanionsGroupedViewModel": {
      "properties": "@{defaultItemId=; groups=; selectedLoadoutItem=}",
      "type": "object"
    },
    "LolCosmeticsCosmeticSettingsResource": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolCosmeticsCosmeticsCompanion": {
      "properties": "@{color=; contentId=; description=; f2p=; groupId=; itemId=; level=; loadoutsIcon=; loyalty=; name=; owned=; purchaseDate=; rarityValue=; selected=; species=; upgrades=}",
      "type": "object"
    },
    "LolCosmeticsCosmeticsCompanionViewModel": {
      "properties": "@{color=; contentId=; description=; f2p=; groupId=; isRecentItem=; itemId=; level=; loadoutsIcon=; loyalty=; name=; offerData=; owned=; purchaseDate=; rarityValue=; selected=; species=; starShardsPrice=; upgrades=}",
      "type": "object"
    },
    "LolCosmeticsCosmeticsOfferPrice": {
      "properties": "@{offerId=; price=}",
      "type": "object"
    },
    "LolCosmeticsCosmeticsTFTDamageSkin": {
      "properties": "@{contentId=; description=; f2p=; groupId=; groupName=; itemId=; level=; loadoutsIcon=; loyalty=; name=; owned=; purchaseDate=; rarityValue=; selected=; upgrades=}",
      "type": "object"
    },
    "LolCosmeticsCosmeticsTFTDamageSkinViewModel": {
      "properties": "@{contentId=; description=; f2p=; groupId=; groupName=; isRecentItem=; itemId=; level=; loadoutsIcon=; loyalty=; name=; owned=; purchaseDate=; rarityValue=; selected=; upgrades=}",
      "type": "object"
    },
    "LolCosmeticsCosmeticsTFTMapSkin": {
      "properties": "@{contentId=; description=; f2p=; groupId=; groupName=; itemId=; loadoutsIcon=; loyalty=; name=; owned=; purchaseDate=; rarityValue=; selected=}",
      "type": "object"
    },
    "LolCosmeticsCosmeticsTFTMapSkinViewModel": {
      "properties": "@{contentId=; description=; f2p=; groupId=; groupName=; isRecentItem=; itemId=; loadoutsIcon=; loyalty=; name=; owned=; purchaseDate=; rarityValue=; selected=}",
      "type": "object"
    },
    "LolCosmeticsCosmeticsTFTPlaybook": {
      "properties": "@{contentId=; description=; earlyAugments=; f2p=; iconPath=; iconPathSmall=; isDisabledInDoubleUp=; isDisabledInSoulFighter=; itemId=; lateAugments=; loadoutsIcon=; loyalty=; midAugments=; name=; owned=; purchaseDate=; rarityValue=; selected=; splashPath=}",
      "type": "object"
    },
    "LolCosmeticsCosmeticsTFTPlaybookAugment": {
      "properties": "@{description=; effectAmounts=; iconPath=; name=}",
      "type": "object"
    },
    "LolCosmeticsCosmeticsTFTPlaybookAugmentEffectAmount": {
      "properties": "@{formatString=; name=; value=}",
      "type": "object"
    },
    "LolCosmeticsCosmeticsTFTPlaybookViewModel": {
      "properties": "@{contentId=; description=; earlyAugments=; f2p=; iconPath=; iconPathSmall=; isDisabledInDoubleUp=; isDisabledInSoulFighter=; isRecentItem=; itemId=; lateAugments=; loadoutsIcon=; loyalty=; midAugments=; name=; owned=; purchaseDate=; rarityValue=; selected=; splashPath=}",
      "type": "object"
    },
    "LolCosmeticsGameDataCompanion": {
      "properties": "@{TFTOnly=; colorName=; contentId=; description=; itemId=; level=; loadoutsIcon=; name=; rarityValue=; speciesId=; speciesName=; upgrades=}",
      "type": "object"
    },
    "LolCosmeticsGameDataTFTCosmeticsDefaults": {
      "properties": "@{playbook=}",
      "type": "object"
    },
    "LolCosmeticsGameDataTFTDamageSkin": {
      "properties": "@{contentId=; description=; groupId=; groupName=; itemId=; level=; loadoutsIcon=; name=; rarityValue=}",
      "type": "object"
    },
    "LolCosmeticsGameDataTFTMapSkin": {
      "properties": "@{contentId=; description=; groupId=; groupName=; itemId=; loadoutsIcon=; name=; rarityValue=}",
      "type": "object"
    },
    "LolCosmeticsGameDataTFTPlaybook": {
      "properties": "@{contentId=; description=; earlyAugments=; enabled=; iconPath=; iconPathSmall=; isDisabledInDoubleUp=; isDisabledInSoulFighter=; itemId=; lateAugments=; loadoutsIcon=; midAugments=; name=; splashPath=; translatedDescription=; translatedName=}",
      "type": "object"
    },
    "LolCosmeticsLoadout": {
      "properties": "@{id=; itemId=; loadout=; name=; scope=}",
      "type": "object"
    },
    "LolCosmeticsLoadoutItem": {
      "properties": "@{contentId=; inventoryType=; itemId=}",
      "type": "object"
    },
    "LolCosmeticsLoadoutUpdateDto": {
      "properties": "@{loadout=}",
      "type": "object"
    },
    "LolCosmeticsTFTDamageSkinGroupViewModel": {
      "properties": "@{groupId=; groupName=; items=; numAvailable=; numOwned=}",
      "type": "object"
    },
    "LolCosmeticsTFTDamageSkinGroupedViewModel": {
      "properties": "@{defaultItemId=; groups=; selectedLoadoutItem=}",
      "type": "object"
    },
    "LolCosmeticsTFTMapSkinGroupViewModel": {
      "properties": "@{groupId=; groupName=; items=; numAvailable=; numOwned=}",
      "type": "object"
    },
    "LolCosmeticsTFTMapSkinGroupedViewModel": {
      "properties": "@{defaultItemId=; groups=; selectedLoadoutItem=}",
      "type": "object"
    },
    "LolCosmeticsTFTPlaybookGroupViewModel": {
      "properties": "@{groupId=; groupName=; items=; numAvailable=; numOwned=}",
      "type": "object"
    },
    "LolCosmeticsTFTPlaybookGroupedViewModel": {
      "properties": "@{defaultItemId=; groups=; selectedLoadoutItem=}",
      "type": "object"
    },
    "LolCosmeticsTFTSettingsDataResource": {
      "properties": "@{iconOverride=}",
      "type": "object"
    },
    "LolCosmeticsTFTSettingsResource": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolCosmeticsUserResource": {
      "properties": "@{lol=; summonerId=}",
      "type": "object"
    },
    "LolDiscordRpGameDataChampionSummary": {
      "properties": "@{alias=; id=; name=}",
      "type": "object"
    },
    "LolDiscordRpPartyPresenceData": {
      "properties": "@{maxPlayers=; partyId=; queueId=; summoners=}",
      "type": "object"
    },
    "LolDropsCapDropsDropTablePityInfo": {
      "properties": "@{chaseContentIds=; pityLimit=}",
      "type": "object"
    },
    "LolDropsCapDropsDropTableWithPityDTO": {
      "properties": "@{currencyId=; endDate=; id=; pityInfo=; productId=; rollOffer=; sourceId=; startDate=}",
      "type": "object"
    },
    "LolDropsCapDropsOddsListEntryDTO": {
      "properties": "@{contentId=; nodeId=; odds=}",
      "type": "object"
    },
    "LolDropsCapDropsOddsTreeNodeDTO": {
      "properties": "@{children=; nodeId=; odds=}",
      "type": "object"
    },
    "LolDropsCapDropsPityCountDTO": {
      "properties": "@{count=; dropTableId=}",
      "type": "object"
    },
    "LolEmailVerificationAccessToken": {
      "properties": "@{expiry=; token=}",
      "type": "object"
    },
    "LolEmailVerificationEmailUpdate": {
      "properties": "@{email=; password=}",
      "type": "object"
    },
    "LolEmailVerificationEmailVerificationSession": {
      "properties": "@{email=; emailVerified=; fatalError=}",
      "type": "object"
    },
    "LolEmailVerificationRegionLocale": {
      "properties": "@{locale=; region=; webLanguage=; webRegion=}",
      "type": "object"
    },
    "LolEmailVerificationRemoteEmailVerificationSession": {
      "properties": "@{email=; emailVerified=}",
      "type": "object"
    },
    "LolEmailVerificationValidationStatus": {
      "properties": "@{emailStatus=}",
      "type": "object"
    },
    "LolEndOfGameChampionMasteryGrade": {
      "properties": "@{championId=; grade=; playerId=}",
      "type": "object"
    },
    "LolEndOfGameChampionMasteryMini": {
      "properties": "@{championId=; championLevel=; playerId=}",
      "type": "object"
    },
    "LolEndOfGameChampionMasteryUpdate": {
      "properties": "@{bonusPointsGained=; championId=; gameId=; grade=; hasLeveledUp=; id=; level=; levelUpList=; memberGrades=; playerId=; pointsBeforeGame=; pointsGained=; pointsGainedIndividualContribution=; pointsSinceLastLevelBeforeGame=; pointsUntilNextLevelAfterGame=; pointsUntilNextLevelBeforeGame=; score=; tokenEarnedAfterGame=; tokensEarned=}",
      "type": "object"
    },
    "LolEndOfGameEndOfGamePlayer": {
      "properties": "@{botPlayer=; championId=; championName=; championSquarePortraitPath=; detectedTeamPosition=; gameId=; isLocalPlayer=; items=; leaver=; leaves=; level=; losses=; profileIconId=; puuid=; selectedPosition=; skinEmblemPaths=; skinSplashPath=; skinTilePath=; spell1Id=; spell2Id=; stats=; summonerId=; summonerName=; teamId=; wins=}",
      "type": "object"
    },
    "LolEndOfGameEndOfGamePoints": {
      "properties": "@{pointChangeFromChampionsOwned=; pointChangeFromGameplay=; pointsUntilNextReroll=; pointsUsed=; previousPoints=; rerollCount=; totalPoints=}",
      "type": "object"
    },
    "LolEndOfGameEndOfGameStats": {
      "properties": "@{basePoints=; battleBoostIpEarned=; boostIpEarned=; boostXpEarned=; causedEarlySurrender=; currentLevel=; difficulty=; earlySurrenderAccomplice=; experienceEarned=; experienceTotal=; firstWinBonus=; gameEndedInEarlySurrender=; gameId=; gameLength=; gameMode=; gameMutators=; gameType=; globalBoostXpEarned=; invalid=; ipEarned=; ipTotal=; leveledUp=; localPlayer=; loyaltyBoostXpEarned=; missionsXpEarned=; mucJwtDto=; multiUserChatId=; multiUserChatPassword=; myTeamStatus=; newSpells=; nextLevelXp=; preLevelUpExperienceTotal=; preLevelUpNextLevelXp=; previousLevel=; previousXpTotal=; queueType=; ranked=; reportGameId=; rerollData=; rpEarned=; teamBoost=; teamEarlySurrendered=; teams=; timeUntilNextFirstWinBonus=; xbgpBoostXpEarned=}",
      "type": "object"
    },
    "LolEndOfGameEndOfGameTeam": {
      "properties": "@{fullId=; isBottomTeam=; isPlayerTeam=; isWinningTeam=; memberStatusString=; name=; players=; stats=; tag=; teamId=}",
      "type": "object"
    },
    "LolEndOfGameEndOfGameTeamBoost": {
      "properties": "@{availableSkins=; ipReward=; ipRewardForPurchaser=; price=; skinUnlockMode=; summonerName=; unlocked=}",
      "type": "object"
    },
    "LolEndOfGameGameClientEndOfGame": {
      "properties": "@{gameClientEOG=}",
      "type": "object"
    },
    "LolEndOfGameGameClientEndOfGameStats": {
      "properties": "@{gameId=; gameMode=; isRanked=; queueId=; queueType=; statsBlock=}",
      "type": "object"
    },
    "LolEndOfGameGameDataChampion": {
      "properties": "@{id=; skins=}",
      "type": "object"
    },
    "LolEndOfGameGameDataChampionQuestSkin": {
      "properties": "@{id=; splashPath=; tilePath=}",
      "type": "object"
    },
    "LolEndOfGameGameDataChampionSkin": {
      "properties": "@{chromas=; id=; questSkinInfo=; splashPath=; tilePath=}",
      "type": "object"
    },
    "LolEndOfGameGameDataChampionSummary": {
      "properties": "@{alias=; id=; name=; squarePortraitPath=}",
      "type": "object"
    },
    "LolEndOfGameGameDataCompanion": {
      "properties": "@{colorName=; contentId=; loadoutsIcon=; speciesName=}",
      "type": "object"
    },
    "LolEndOfGameGameDataQuestSkinInfo": {
      "properties": "@{tiers=}",
      "type": "object"
    },
    "LolEndOfGameGameDataSkinChroma": {
      "properties": "@{id=}",
      "type": "object"
    },
    "LolEndOfGameGameDataTftChampion": {
      "properties": "@{character_id=; display_name=; path=; rarity=; squareIconPath=; traits=}",
      "type": "object"
    },
    "LolEndOfGameGameDataTftItem": {
      "properties": "@{id=; loadoutsIcon=; name=; nameId=}",
      "type": "object"
    },
    "LolEndOfGameGameDataTftPlaybook": {
      "properties": "@{enabled=; iconPathSmall=; itemId=; name=; translatedName=}",
      "type": "object"
    },
    "LolEndOfGameGameDataTftRegionPortal": {
      "properties": "@{description=; displayName=; iconPath=; nameId=}",
      "type": "object"
    },
    "LolEndOfGameGameDataTftTrait": {
      "properties": "@{id=; name=}",
      "type": "object"
    },
    "LolEndOfGameGameflowAvailability": {
      "properties": "@{state=}",
      "type": "object"
    },
    "LolEndOfGameGameflowClient": {
      "properties": "@{observerServerIp=; observerServerPort=; running=}",
      "type": "object"
    },
    "LolEndOfGameGameflowGameData": {
      "properties": "@{gameId=; queue=}",
      "type": "object"
    },
    "LolEndOfGameGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolEndOfGameGameflowSession": {
      "properties": "@{gameClient=; gameData=; phase=}",
      "type": "object"
    },
    "LolEndOfGameLobbyInvitation": {
      "properties": "@{state=}",
      "type": "object"
    },
    "LolEndOfGameLoginDataPacket": {
      "properties": "@{platformId=; simpleMessages=}",
      "type": "object"
    },
    "LolEndOfGameLoginSession": {
      "properties": "@{accountId=; state=; summonerId=}",
      "type": "object"
    },
    "LolEndOfGameLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolEndOfGameMucJwtDto": {
      "properties": "@{channelClaim=; domain=; jwt=; targetRegion=}",
      "type": "object"
    },
    "LolEndOfGamePlayerReport": {
      "properties": "@{categories=; comment=; gameId=; offenderPuuid=; offenderSummonerId=}",
      "type": "object"
    },
    "LolEndOfGameQueue": {
      "properties": "@{id=; isRanked=; type=}",
      "type": "object"
    },
    "LolEndOfGameRerollDataBagForClientV1": {
      "properties": "@{maximumRerolls=; pointCostOfReroll=; pointsGainedLastGame=; pointsUntilNextReroll=; rerollCount=; totalPoints=}",
      "type": "object"
    },
    "LolEndOfGameSimpleMessage": {
      "properties": "@{accountId=; msgId=; params=; type=}",
      "type": "object"
    },
    "LolEndOfGameSummoner": {
      "properties": "@{puuid=; summonerId=; summonerLevel=; xpSinceLastLevel=; xpUntilNextLevel=}",
      "type": "object"
    },
    "LolEndOfGameTFTEndOfGameCompanionViewModel": {
      "properties": "@{colorName=; icon=; speciesName=}",
      "type": "object"
    },
    "LolEndOfGameTFTEndOfGameCustomAugmentContainerViewModel": {
      "properties": "@{description=; displayName=; iconPath=; nameId=}",
      "type": "object"
    },
    "LolEndOfGameTFTEndOfGameItemViewModel": {
      "properties": "@{icon=; id=; name=; nameId=}",
      "type": "object"
    },
    "LolEndOfGameTFTEndOfGamePieceViewModel": {
      "properties": "@{icon=; items=; level=; name=; price=; traits=}",
      "type": "object"
    },
    "LolEndOfGameTFTEndOfGamePlaybookViewModel": {
      "properties": "@{iconSmall=; itemId=; name=}",
      "type": "object"
    },
    "LolEndOfGameTFTEndOfGamePlayerViewModel": {
      "properties": "@{augments=; boardPieces=; companion=; customAugmentContainer=; ffaStanding=; health=; iconId=; isLocalPlayer=; partnerGroupId=; playbook=; puuid=; rank=; summonerId=; summonerName=}",
      "type": "object"
    },
    "LolEndOfGameTFTEndOfGameTraitViewModel": {
      "properties": "@{id=; name=}",
      "type": "object"
    },
    "LolEndOfGameTFTEndOfGameViewModel": {
      "properties": "@{gameId=; gameLength=; isRanked=; localPlayer=; players=; queueId=; queueType=}",
      "type": "object"
    },
    "LolEsportStreamNotificationsESportStreamNotificationsConfig": {
      "properties": "@{beappFailureLongPollMinutes=; notificationsAssetMagickURL=; notificationsEnabled=; notificationsLongPollMinutes=; notificationsServiceEndpoint=; notificationsServiceEndpointV2=; notificationsShortPollMinutes=; notificationsStreamGroupSlug=; notificationsStreamURL=; useServiceEndpointV2=}",
      "type": "object"
    },
    "LolEsportStreamNotificationsESportsAPI_streamgroups": {
      "properties": "@{content=; id=; live=; slug=; title=}",
      "type": "object"
    },
    "LolEsportStreamNotificationsESportsAPI_streamgroups_root": {
      "properties": "@{highlanderTournaments=; streamgroups=; teams=}",
      "type": "object"
    },
    "LolEsportStreamNotificationsESportsLiveStreams": {
      "properties": "@{liveStreams=}",
      "type": "object"
    },
    "LolEsportStreamNotificationsESportsStreams": {
      "properties": "@{teamAAcronym=; teamAGuid=; teamAId=; teamALogoUrl=; teamAName=; teamBAcronym=; teamBGuid=; teamBId=; teamBLogoUrl=; teamBName=; title=; tournamentDescription=}",
      "type": "object"
    },
    "LolEsportStreamNotificationsEsportsAPI_highlanderTournaments": {
      "properties": "@{brackets=; description=; id=; rosters=; title=}",
      "type": "object"
    },
    "LolEsportStreamNotificationsEsportsAPI_highlanderTournaments_brackets": {
      "properties": "@{id=; matches=}",
      "type": "object"
    },
    "LolEsportStreamNotificationsEsportsAPI_highlanderTournaments_matches": {
      "properties": "@{id=; input=}",
      "type": "object"
    },
    "LolEsportStreamNotificationsEsportsAPI_highlanderTournaments_roster": {
      "properties": "@{roster=}",
      "type": "object"
    },
    "LolEsportStreamNotificationsEsportsAPI_highlanderTournaments_rosters": {
      "properties": "@{id=; name=; team=}",
      "type": "object"
    },
    "LolEsportStreamNotificationsEsportsAPI_teams": {
      "properties": "@{acronym=; guid=; id=; logoUrl=; name=; slug=}",
      "type": "object"
    },
    "LolEsportStreamNotificationsGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolEsportStreamNotificationsGameflowSession": {
      "properties": "@{phase=}",
      "type": "object"
    },
    "LolEsportStreamNotificationsLiveMatch": {
      "properties": "@{id=; streamGroup=; teams=; title=; tournamentDescription=}",
      "type": "object"
    },
    "LolEsportStreamNotificationsLiveMatchTeam": {
      "properties": "@{acronym=; guid=; logoUrl=; name=}",
      "type": "object"
    },
    "LolEsportStreamNotificationsPlayerNotificationResource": {
      "properties": "@{backgroundUrl=; critical=; data=; detailKey=; expires=; iconUrl=; id=; source=; state=; titleKey=; type=}",
      "type": "object"
    },
    "LolEventShopAccessTokenResource": {
      "properties": "@{expiry=; scopes=; token=}",
      "type": "object"
    },
    "LolEventShopBalance": {
      "properties": "@{amount=; currencyType=}",
      "type": "object"
    },
    "LolEventShopBaseSkinLineDto": {
      "properties": "@{collectionCardPath=; collectionDescription=; items=; localizedName=; pricingOptions=; skinLineDescriptions=; splashPath=; tilePath=; uncenteredSplashPath=}",
      "type": "object"
    },
    "LolEventShopBundleOfferUIData": {
      "properties": "@{bundledItems=; details=; discountPercentage=; finalPrice=; futureBalance=; initialPrice=; isPurchasable=}",
      "type": "object"
    },
    "LolEventShopBundledItemPricingInfo": {
      "properties": "@{discountPrices=; inventoryType=; itemId=; quantity=}",
      "type": "object"
    },
    "LolEventShopBundledItemUIData": {
      "properties": "@{description=; inventoryType=; itemId=; name=; owned=; splashImage=; subInventoryType=}",
      "type": "object"
    },
    "LolEventShopCapOffer": {
      "properties": "@{active=; createdDate=; id=; label=; merchantId=; payload=; productId=; startDate=; typeId=}",
      "type": "object"
    },
    "LolEventShopCapOfferPayloadEntry": {
      "properties": "@{fulfillmentTypeId=; inventoryTypeUUID=; itemInstanceId=; itemPriceMap=}",
      "type": "object"
    },
    "LolEventShopCapOrdersDataDto": {
      "properties": "@{id=; location=; purchaser=; source=; subOrders=}",
      "type": "object"
    },
    "LolEventShopCapOrdersMetaDto": {
      "properties": "@{xid=}",
      "type": "object"
    },
    "LolEventShopCapOrdersOfferContextDto": {
      "properties": "@{paymentOption=; quantity=}",
      "type": "object"
    },
    "LolEventShopCapOrdersOfferDto": {
      "properties": "@{id=; productId=}",
      "type": "object"
    },
    "LolEventShopCapOrdersOrderDto": {
      "properties": "@{data=; meta=}",
      "type": "object"
    },
    "LolEventShopCapOrdersSubOrderDto": {
      "properties": "@{offer=; offerContext=; recipientId=}",
      "type": "object"
    },
    "LolEventShopCapOrdersTypedIdentifierDto": {
      "properties": "@{id=; typeId=}",
      "type": "object"
    },
    "LolEventShopCatalogEntry": {
      "properties": "@{contentId=; itemId=; offerId=; typeId=}",
      "type": "object"
    },
    "LolEventShopCatalogItem": {
      "properties": "@{inventoryType=; itemId=; itemInstanceId=}",
      "type": "object"
    },
    "LolEventShopCatalogPluginItem": {
      "properties": "@{active=; description=; imagePath=; inactiveDate=; inventoryType=; itemId=; itemInstanceId=; metadata=; name=; owned=; ownershipType=; prices=; purchaseDate=; questSkinInfo=; releaseDate=; subInventoryType=; subTitle=; tags=}",
      "type": "object"
    },
    "LolEventShopCatalogPluginItemAssets": {
      "properties": "@{colors=; emblems=; iconPath=; splashPath=; tilePath=}",
      "type": "object"
    },
    "LolEventShopCatalogPluginItemWithDetails": {
      "properties": "@{assets=; bundledDiscountPrices=; bundledItems=; item=; minimumBundlePrices=; quantity=; requiredItems=}",
      "type": "object"
    },
    "LolEventShopCatalogPluginPrice": {
      "properties": "@{cost=; costType=; currency=; sale=}",
      "type": "object"
    },
    "LolEventShopCatalogPluginSale": {
      "properties": "@{cost=; discount=; endDate=; startDate=}",
      "type": "object"
    },
    "LolEventShopCategoryOffersUIData": {
      "properties": "@{category=; categoryIconPath=; offers=}",
      "type": "object"
    },
    "LolEventShopCelebrationType": {
      "enum": "NONE TOAST FULLSCREEN",
      "type": "string"
    },
    "LolEventShopCelebrationUIData": {
      "properties": "@{rewardTrackItems=}",
      "type": "object"
    },
    "LolEventShopChampionSkinEmblem": {
      "properties": "@{emblemPath=; emblemPosition=; name=}",
      "type": "object"
    },
    "LolEventShopChampionSkinEmblemPath": {
      "properties": "@{large=; small=}",
      "type": "object"
    },
    "LolEventShopChampionSkinEmblemPosition": {
      "properties": "@{horizontal=; vertical=}",
      "type": "object"
    },
    "LolEventShopClaimSelectUIData": {
      "properties": "@{selectedRewardTrackItem=; unclaimedRewardCount=}",
      "type": "object"
    },
    "LolEventShopClientCacheClearMessageDTO": {
      "properties": "@{clearAll=; inventoryTypes=; regions=}",
      "type": "object"
    },
    "LolEventShopClientConfigContentDrop": {
      "properties": "@{ActivationDate=; Patch=}",
      "type": "object"
    },
    "LolEventShopContentDrop": {
      "properties": "@{activationDate=; offers=; patch=}",
      "type": "object"
    },
    "LolEventShopCounter": {
      "properties": "@{direction=; groupId=; id=; name=; startValue=}",
      "type": "object"
    },
    "LolEventShopCounterInstance": {
      "properties": "@{counterId=; counterValue=; groupId=; ownerId=; productId=}",
      "type": "object"
    },
    "LolEventShopCurrencyDTO": {
      "properties": "@{amount=; subCurrencies=}",
      "type": "object"
    },
    "LolEventShopDiscountPricingInfo": {
      "properties": "@{cost=; costType=; currency=; discount=}",
      "type": "object"
    },
    "LolEventShopEndOfGameXp": {
      "properties": "@{PER_WIN=}",
      "type": "object"
    },
    "LolEventShopEndOfGameXpNotification": {
      "properties": "@{xp=}",
      "type": "object"
    },
    "LolEventShopEntityInstance": {
      "properties": "@{counters=; groupId=; milestones=}",
      "type": "object"
    },
    "LolEventShopEventBackgroundUIData": {
      "properties": "@{backgroundImagePath=}",
      "type": "object"
    },
    "LolEventShopEventDetailsUIData": {
      "properties": "@{eventIconPath=; eventName=; helpModalImagePath=; progressEndDate=; shopEndDate=}",
      "type": "object"
    },
    "LolEventShopEventShop": {
      "properties": "@{backgroundImage=; eventId=; eventPassBundlesCatalogEntry=; headerIconImage=; helpModalImage=; localizedName=; localizedUpsellButtonText=; localizedUpsellTitle=; localizedUpsellTooltipDescription=; localizedUpsellTooltipTitle=; navbarIconImage=; progressEndDate=; rewardTrack=; shopEndDate=; startDate=; tokenShop=; upsellBackgroundImageUrl=; upsellTooltipBackgroundImageUrl=}",
      "type": "object"
    },
    "LolEventShopEventShopClientConfig": {
      "properties": "@{ActivationSpreadSeconds=; ActiveEventId=; ContentDrops=; DisabledOfferIds=; Enabled=; FirstActivationThresholdSeconds=; ProgressEndDate=; ShopEndDate=; StartDate=}",
      "type": "object"
    },
    "LolEventShopEventShopError": {
      "properties": "@{errorId=; errorMessage=}",
      "type": "object"
    },
    "LolEventShopEventShopInfoUIData": {
      "properties": "@{currentTokenBalance=; eventIcon=; eventId=; eventName=; eventPassBundles=; eventTokenImage=; isEventActive=; isPassPurchased=; lockedTokenCount=; showPip=; tokenBundles=; unclaimedRewardCount=}",
      "type": "object"
    },
    "LolEventShopExternalCatalogInventoryOwnership": {
      "enum": "OWNED RENTED LOYALTY F2P",
      "type": "string"
    },
    "LolEventShopExternalCatalogItemCost": {
      "properties": "@{cost=; currency=; discount=}",
      "type": "object"
    },
    "LolEventShopExternalCatalogItemKey": {
      "properties": "@{inventoryType=; itemId=}",
      "type": "object"
    },
    "LolEventShopExternalCatalogPluginItem": {
      "properties": "@{active=; description=; imagePath=; inactiveDate=; inventoryType=; itemId=; itemInstanceId=; name=; offerId=; owned=; ownershipType=; prices=; purchaseDate=; releaseDate=; sale=; subInventoryType=; subTitle=; tags=}",
      "type": "object"
    },
    "LolEventShopExternalCatalogPluginItemAssets": {
      "properties": "@{colors=; iconPath=; splashPath=; tilePath=}",
      "type": "object"
    },
    "LolEventShopExternalCatalogPluginItemWithDetails": {
      "properties": "@{bundledDiscountPrices=; bundledItems=; item=; metadata=; minimumBundlePrices=; quantity=; requiredItems=}",
      "type": "object"
    },
    "LolEventShopExternalCatalogPluginPrice": {
      "properties": "@{cost=; costType=; currency=}",
      "type": "object"
    },
    "LolEventShopExternalCatalogPluginRetailDiscount": {
      "properties": "@{cost=; discount=; endDate=; startDate=}",
      "type": "object"
    },
    "LolEventShopExternalCatalogSale": {
      "properties": "@{endDate=; prices=; startDate=}",
      "type": "object"
    },
    "LolEventShopExternalItemMetadataEntry": {
      "properties": "@{type=; value=}",
      "type": "object"
    },
    "LolEventShopGrantStatus": {
      "enum": "PENDING_FULFILLMENT PENDING_SELECTION FULFILLED FAILED",
      "type": "string"
    },
    "LolEventShopGrantorDescription": {
      "properties": "@{appName=; entityId=}",
      "type": "object"
    },
    "LolEventShopGroup": {
      "properties": "@{counters=; id=; milestones=; name=; productId=; repeat=}",
      "type": "object"
    },
    "LolEventShopInventoryCacheEntry": {
      "properties": "@{expirationMS=; issuedAtMS=; receivedAtMS=; signedInventoryJwt=; valid=}",
      "type": "object"
    },
    "LolEventShopInventoryDTO": {
      "properties": "@{accountId=; expires=; items=; itemsJwt=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolEventShopInventoryItem": {
      "properties": "@{expirationDate=; inventoryType=; itemId=; ownershipType=; purchaseDate=; quantity=; uuid=; wins=}",
      "type": "object"
    },
    "LolEventShopInventoryItemDTO": {
      "properties": "@{entitlementId=; entitlementTypeId=; expirationDate=; f2p=; instanceId=; instanceTypeId=; inventoryType=; itemId=; loyalty=; loyaltySources=; lsb=; ownedQuantity=; payload=; purchaseDate=; quantity=; rental=; usedInGameDate=; wins=}",
      "type": "object"
    },
    "LolEventShopInventoryItemWithPayload": {
      "properties": "@{expirationDate=; f2p=; inventoryType=; itemId=; loyalty=; loyaltySources=; owned=; ownershipType=; payload=; purchaseDate=; quantity=; rental=; uuid=; wins=}",
      "type": "object"
    },
    "LolEventShopInventoryNotification": {
      "properties": "@{acknowledged=; id=; inventoryType=; itemId=; type=}",
      "type": "object"
    },
    "LolEventShopInventoryOwnership": {
      "enum": "OWNED RENTED LOYALTY F2P",
      "type": "string"
    },
    "LolEventShopInventoryResponseDTO": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolEventShopItem": {
      "properties": "@{inventoryType=; itemId=; price=; quantity=}",
      "type": "object"
    },
    "LolEventShopItemChoiceDetails": {
      "properties": "@{backgroundImage=; contents=; discount=; displayType=; fullPrice=; item=; purchaseOptions=}",
      "type": "object"
    },
    "LolEventShopItemChoices": {
      "properties": "@{choices=; validationErrors=}",
      "type": "object"
    },
    "LolEventShopItemCost": {
      "properties": "@{cost=; currency=; discount=}",
      "type": "object"
    },
    "LolEventShopItemDefinition": {
      "properties": "@{assets=; bundledItemPrice=; description=; inventoryType=; itemId=; loyaltyUnlocked=; metadata=; name=; owned=; subInventoryType=; subTitle=; tags=}",
      "type": "object"
    },
    "LolEventShopItemDetails": {
      "properties": "@{description=; iconUrl=; subTitle=; title=}",
      "type": "object"
    },
    "LolEventShopItemKey": {
      "properties": "@{inventoryType=; itemId=}",
      "type": "object"
    },
    "LolEventShopItemMetadataEntry": {
      "properties": "@{type=; value=}",
      "type": "object"
    },
    "LolEventShopItemOrderDTO": {
      "properties": "@{inventoryType=; itemId=; quantity=; rpCost=}",
      "type": "object"
    },
    "LolEventShopItemOwnership": {
      "properties": "@{itemKey=; quantity=}",
      "type": "object"
    },
    "LolEventShopItemOwnershipType": {
      "enum": "OWNED RENTED LOYALTY F2P",
      "type": "string"
    },
    "LolEventShopItemPrice": {
      "properties": "@{currencyType=; price=; purchasable=}",
      "type": "object"
    },
    "LolEventShopItemSale": {
      "properties": "@{discount=; endDate=; startDate=}",
      "type": "object"
    },
    "LolEventShopItemUIData": {
      "properties": "@{inventoryType=; itemId=; price=; quantity=}",
      "type": "object"
    },
    "LolEventShopLargeSelectionDisplayUIData": {
      "properties": "@{selectedRewardTrackItem=}",
      "type": "object"
    },
    "LolEventShopLevelBoostPurchaseUIData": {
      "properties": "@{offerId=; rewardTrackItems=}",
      "type": "object"
    },
    "LolEventShopLoginSession": {
      "properties": "@{accountId=; idToken=; puuid=; state=; summonerId=}",
      "type": "object"
    },
    "LolEventShopLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolEventShopLoyaltyRewards": {
      "properties": "@{championIds=; freeRewardedChampionsCount=; freeRewardedSkinsCount=; ipBoost=; loyaltySources=; loyaltyTFTCompanionCount=; loyaltyTFTDamageSkinCount=; loyaltyTFTMapSkinCount=; skinIds=; xpBoost=}",
      "type": "object"
    },
    "LolEventShopLoyaltyRewardsSimplified": {
      "properties": "@{championIds=; freeRewardedChampionsCount=; freeRewardedSkinsCount=; ipBoost=; loyaltySources=; loyaltyTFTCompanionCount=; loyaltyTFTDamageSkinCount=; loyaltyTFTMapSkinCount=; skinIds=; xpBoost=}",
      "type": "object"
    },
    "LolEventShopLoyaltyStatus": {
      "enum": "LEGACY REWARDS_GRANT EXPIRY CHANGE REVOKE DISABLED",
      "type": "string"
    },
    "LolEventShopLoyaltyStatusNotification": {
      "properties": "@{reloadInventory=; rewards=; status=}",
      "type": "object"
    },
    "LolEventShopMilestone": {
      "properties": "@{counterId=; groupId=; id=; name=; properties=; triggerValue=}",
      "type": "object"
    },
    "LolEventShopMilestoneInstance": {
      "properties": "@{counterId=; groupId=; milestoneId=; ownerId=; productId=; repeatSequence=; triggerValue=; triggered=}",
      "type": "object"
    },
    "LolEventShopNavigationButtonUIData": {
      "properties": "@{activeEventId=; iconPath=; showGlow=; showPip=}",
      "type": "object"
    },
    "LolEventShopOffer": {
      "properties": "@{id=; image=; items=; localizedDescription=; localizedTitle=; offerCategory=; promotionType=}",
      "type": "object"
    },
    "LolEventShopOfferCategory": {
      "enum": "Featured Chromas Skins Borders Loot Tft Currencies",
      "type": "string"
    },
    "LolEventShopOfferPromotionType": {
      "enum": "kNone kFeatured kFeaturedHighlighted",
      "type": "string"
    },
    "LolEventShopOfferStates": {
      "enum": "kOwned kAvailable kUnavailable kUnrevealed kPurchasing",
      "type": "string"
    },
    "LolEventShopOfferUIData": {
      "properties": "@{highlighted=; id=; image=; items=; localizedDescription=; localizedTitle=; maxQuantity=; offerState=; price=}",
      "type": "object"
    },
    "LolEventShopOrderNotificationResource": {
      "properties": "@{eventType=; eventTypeId=; status=}",
      "type": "object"
    },
    "LolEventShopPassOwnershipTypes": {
      "enum": "Unowned Purchased",
      "type": "string"
    },
    "LolEventShopPlayerNotification": {
      "properties": "@{critical=; detailKey=; iconUrl=; source=; state=; titleKey=; type=}",
      "type": "object"
    },
    "LolEventShopPlayerSettingsData": {
      "properties": "@{lastSeenTokenBalance=; lastSeenTokenShopOffersVersion=; lastTimeSeen=}",
      "type": "object"
    },
    "LolEventShopPriceDetail": {
      "properties": "@{itemKey=; price=}",
      "type": "object"
    },
    "LolEventShopPriceOptionDto": {
      "properties": "@{currencyImagePath=; currencyName=; currencyPaymentOption=; currencyType=; price=}",
      "type": "object"
    },
    "LolEventShopProgressInfoUIData": {
      "properties": "@{eventPassBundlesCatalogEntry=; passPurchased=; tokenImage=}",
      "type": "object"
    },
    "LolEventShopPurchasableItem": {
      "properties": "@{bundledItems=; dependencies=; item=; purchaseOptions=; sale=; validationErrors=}",
      "type": "object"
    },
    "LolEventShopPurchaseItem": {
      "properties": "@{itemKey=; purchaseCurrencyInfo=; quantity=; source=}",
      "type": "object"
    },
    "LolEventShopPurchaseOfferOrderStates": {
      "enum": "NOT_STARTED IN_PROGRESS FAIL SUCCESS",
      "type": "string"
    },
    "LolEventShopPurchaseOfferOrderStatus": {
      "properties": "@{message=; orderState=}",
      "type": "object"
    },
    "LolEventShopPurchaseOfferOrderStatuses": {
      "properties": "@{statuses=}",
      "type": "object"
    },
    "LolEventShopPurchaseOfferRequest": {
      "properties": "@{offerId=; purchaseQuantity=}",
      "type": "object"
    },
    "LolEventShopPurchaseOfferRequestV3": {
      "properties": "@{currencyType=; offerId=; price=; quantity=}",
      "type": "object"
    },
    "LolEventShopPurchaseOfferResponseV3": {
      "properties": "@{legacy=; orderDto=}",
      "type": "object"
    },
    "LolEventShopPurchaseOption": {
      "properties": "@{priceDetails=}",
      "type": "object"
    },
    "LolEventShopPurchaseOrderRequestDTO": {
      "properties": "@{accountId=; items=}",
      "type": "object"
    },
    "LolEventShopPurchaseOrderResponseDTO": {
      "properties": "@{ipBalance=; rpBalance=; transactions=}",
      "type": "object"
    },
    "LolEventShopPurchaseRequest": {
      "properties": "@{items=}",
      "type": "object"
    },
    "LolEventShopPurchaseResponse": {
      "properties": "@{items=; transactions=; useRMSConfirmation=}",
      "type": "object"
    },
    "LolEventShopPurchaseWidgetConfig": {
      "properties": "@{alwaysShowPurchaseDisclaimer=; enabled=; nonRefundableDisclaimerEnabled=}",
      "type": "object"
    },
    "LolEventShopRMSPayload": {
      "properties": "@{affinities=; productId=}",
      "type": "object"
    },
    "LolEventShopRegionLocale": {
      "properties": "@{locale=; region=}",
      "type": "object"
    },
    "LolEventShopRepeat": {
      "properties": "@{count=; multiplier=; scope=}",
      "type": "object"
    },
    "LolEventShopRequestDTO-SelectionRequestDTO": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolEventShopRequestDTO-vector-SelectionRequestDTO": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolEventShopRequestMetadataDTO": {
      "properties": "@{transactionId=}",
      "type": "object"
    },
    "LolEventShopResponseDTO-SvcRewardGrant": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolEventShopResponseDTO-map-RewardGroupId-SelectGrantStatus": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolEventShopResponseDTO-vector-SvcRewardGrant": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolEventShopResponseDTO-vector-SvcRewardGroup": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolEventShopResponseMetadataDTO": {
      "properties": "",
      "type": "object"
    },
    "LolEventShopReward": {
      "properties": "@{fulfillmentSource=; id=; itemId=; itemType=; localizations=; media=; quantity=}",
      "type": "object"
    },
    "LolEventShopRewardChoiceUIData": {
      "properties": "@{rewardTrackItems=}",
      "type": "object"
    },
    "LolEventShopRewardGrant": {
      "properties": "@{info=; rewardGroup=}",
      "type": "object"
    },
    "LolEventShopRewardStatus": {
      "enum": "PENDING FULFILLED FAILED",
      "type": "string"
    },
    "LolEventShopRewardStrategy": {
      "enum": "ALL RANDOM SELECTION",
      "type": "string"
    },
    "LolEventShopRewardTrack": {
      "properties": "@{trackConfig=}",
      "type": "object"
    },
    "LolEventShopRewardTrackConfiguration": {
      "properties": "@{id=; premiumEntitlementId=}",
      "type": "object"
    },
    "LolEventShopRewardTrackItem": {
      "properties": "@{progressRequired=; rewardOptions=; rewardTags=; state=; threshold=}",
      "type": "object"
    },
    "LolEventShopRewardTrackItemHeaderType": {
      "enum": "PREMIUM FREE NONE",
      "type": "string"
    },
    "LolEventShopRewardTrackItemOption": {
      "properties": "@{headerType=; largeDisplayImagePath=; overrideFooter=; rewardDescription=; rewardName=; selected=; state=; thumbIconPath=}",
      "type": "object"
    },
    "LolEventShopRewardTrackItemStates": {
      "enum": "Locked Unlocked Unselected Selected",
      "type": "string"
    },
    "LolEventShopRewardTrackItemTag": {
      "enum": "Rare Free Instant Choice Multiple",
      "type": "string"
    },
    "LolEventShopRewardTrackProgress": {
      "properties": "@{currentLevelXP=; futureLevelProgress=; iteration=; level=; levelProgress=; passProgress=; totalLevelXP=}",
      "type": "object"
    },
    "LolEventShopRewardTrackXP": {
      "properties": "@{currentLevel=; currentLevelXP=; isBonusPhase=; iteration=; totalLevelXP=}",
      "type": "object"
    },
    "LolEventShopRewardsConfig": {
      "properties": "@{GrantFiltering=}",
      "type": "object"
    },
    "LolEventShopRiotMessagingServiceMessage": {
      "properties": "@{payload=; resource=; service=; timestamp=; version=}",
      "type": "object"
    },
    "LolEventShopRmsEntitlementPayload": {
      "properties": "@{entitlementTypeId=; itemId=; itemTypeId=; resourceOperation=}",
      "type": "object"
    },
    "LolEventShopRmsStoreEntitlementItem": {
      "properties": "@{inventoryType=; itemId=}",
      "type": "object"
    },
    "LolEventShopRmsStoreEntitlementPayload": {
      "properties": "@{items=; transactionId=}",
      "type": "object"
    },
    "LolEventShopRmsWalletPayload": {
      "properties": "",
      "type": "object"
    },
    "LolEventShopRmsXboxSubscriptionChange": {
      "properties": "@{active=; identityProvider=; puuid=; subscriptionId=}",
      "type": "object"
    },
    "LolEventShopSale": {
      "properties": "@{endDate=; prices=; startDate=}",
      "type": "object"
    },
    "LolEventShopSelectGrantStatusResponse": {
      "enum": "SELECTED FAILED",
      "type": "string"
    },
    "LolEventShopSelectionRequestDTO": {
      "properties": "@{grantId=; rewardGroupId=; selections=}",
      "type": "object"
    },
    "LolEventShopSelectionStrategyConfig": {
      "properties": "@{maxSelectionsAllowed=; minSelectionsAllowed=}",
      "type": "object"
    },
    "LolEventShopSettingsResource": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolEventShopSimpleInventoryDTO": {
      "properties": "@{expires=; items=; itemsJwt=}",
      "type": "object"
    },
    "LolEventShopSimpleInventoryResponseDTO": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolEventShopSkinLineDescriptionDto": {
      "properties": "@{description=; iconImagePath=; title=}",
      "type": "object"
    },
    "LolEventShopSkinLineDescriptionInfo": {
      "properties": "@{description=; iconPath=; title=}",
      "type": "object"
    },
    "LolEventShopSkinLineInfo": {
      "properties": "@{collectionCardPath=; collectionDescription=; descriptionInfo=; name=; splashPath=; tiers=; tilePath=; uncenteredSplashPath=}",
      "type": "object"
    },
    "LolEventShopSkinLineItemDto": {
      "properties": "@{largeImagePath=; largeVideoPath=; localizedLongName=; localizedShortName=; thumbnailImagePath=}",
      "type": "object"
    },
    "LolEventShopSkinLineTier": {
      "properties": "@{collectionSplashVideoPath=; description=; id=; loadScreenPath=; name=; shortName=; splashPath=; splashVideoPath=; stage=; tilePath=; uncenteredSplashPath=}",
      "type": "object"
    },
    "LolEventShopSummonerIcon": {
      "properties": "@{itemId=}",
      "type": "object"
    },
    "LolEventShopSvcRewardGrant": {
      "properties": "@{dateCreated=; grantElements=; granteeId=; grantorDescription=; id=; messageParameters=; rewardGroupId=; selectedIds=; status=; viewed=}",
      "type": "object"
    },
    "LolEventShopSvcRewardGrantElement": {
      "properties": "@{elementId=; fulfillmentSource=; itemId=; itemType=; localizations=; media=; quantity=; status=}",
      "type": "object"
    },
    "LolEventShopSvcRewardGroup": {
      "properties": "@{active=; celebrationType=; childRewardGroupIds=; id=; localizations=; media=; productId=; rewardStrategy=; rewards=; selectionStrategyConfig=; types=}",
      "type": "object"
    },
    "LolEventShopTokenShop": {
      "properties": "@{contentDrops=; offers=; tokenBundlesCatalogEntry=; tokenImage=; tokenName=; tokenUuid=}",
      "type": "object"
    },
    "LolEventShopTokenShopUIData": {
      "properties": "@{offersVersion=; tokenBundlesCatalogEntry=; tokenImage=; tokenName=; tokenUuid=}",
      "type": "object"
    },
    "LolEventShopTokenUpsell": {
      "properties": "@{backgroundUrl=; buttonText=; currencyUrl=; currentlyLocked=; dependentInventoryId=; dependentInventoryType=; endDate=; id=; internalName=; lockedCount=; premiumCurrencyName=; purchaseUrl=; startDate=; title=; tooltipBackgroundUrl=; tooltipDescription=; tooltipTitle=}",
      "type": "object"
    },
    "LolEventShopTokenUpsellLockedType": {
      "enum": "UNASSIGNED UNLOCKED LOCKED",
      "type": "string"
    },
    "LolEventShopTransaction": {
      "properties": "@{iconUrl=; itemKey=; itemName=; transactionId=}",
      "type": "object"
    },
    "LolEventShopTransactionResponseDTO": {
      "properties": "@{id=; inventoryType=; itemId=}",
      "type": "object"
    },
    "LolEventShopUnclaimedRewardsUIData": {
      "properties": "@{lockedTokensCount=; rewardsCount=}",
      "type": "object"
    },
    "LolEventShopValidateOfferError": {
      "properties": "@{errorKey=; meta=}",
      "type": "object"
    },
    "LolEventShopValidateOfferRequestV3": {
      "properties": "@{offerId=}",
      "type": "object"
    },
    "LolEventShopValidateOfferResponseV3": {
      "properties": "@{validationErrors=}",
      "type": "object"
    },
    "LolEventShopValidationError": {
      "properties": "@{errorCode=; errorDetails=; message=; responseItems=}",
      "type": "object"
    },
    "LolEventShopValidationErrorEntry": {
      "properties": "@{id=}",
      "type": "object"
    },
    "LolEventShopValidationRequest": {
      "properties": "@{items=; ownedItems=}",
      "type": "object"
    },
    "LolEventShopValidationRequestItem": {
      "properties": "@{itemKey=; quantity=}",
      "type": "object"
    },
    "LolEventShopValidationResponse": {
      "properties": "@{items=; valid=}",
      "type": "object"
    },
    "LolEventShopValidationResponseItem": {
      "properties": "@{description=; itemKey=; name=; quantity=; sale=; validationCurrencyInfo=}",
      "type": "object"
    },
    "LolEventShopWallet": {
      "properties": "@{accountId=; balances=; version=}",
      "type": "object"
    },
    "LolEventShopWalletCacheEntry": {
      "properties": "@{expirationMS=; issuedAtMS=; receivedAtMS=; signedBalancesJwt=; valid=}",
      "type": "object"
    },
    "LolEventShopWalletDTO": {
      "properties": "@{accountId=; balances=; balancesJwt=; expires=; puuid=}",
      "type": "object"
    },
    "LolEventShopWalletResponseDTO": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolEventShopXboxSubscriptionStatus": {
      "properties": "@{active=; subscriptionId=}",
      "type": "object"
    },
    "LolFeaturedModesAccountIdAndSummonerId": {
      "properties": "@{summonerId=}",
      "type": "object"
    },
    "LolFeaturedModesCollectionsOwnership": {
      "properties": "@{loyaltyReward=; owned=; xboxGPReward=}",
      "type": "object"
    },
    "LolFeaturedModesCollectionsSummonerIcon": {
      "properties": "@{iconId=; ownership=}",
      "type": "object"
    },
    "LolFeaturedModesEligibility": {
      "properties": "@{eligible=; queueId=; restrictions=}",
      "type": "object"
    },
    "LolFeaturedModesEligibilityRestriction": {
      "properties": "@{expiredTimestamp=; restrictionArgs=; restrictionCode=; summonerIds=}",
      "type": "object"
    },
    "LolFeaturedModesEligibilityRestrictionCode": {
      "enum": "QueueDisabled QueueUnsupported PlayerLevelRestriction PlayerTimedRestriction PlayerBannedRestriction PlayerAvailableChampionRestriction TeamDivisionRestriction TeamSkillRestriction TeamMaxSizeRestriction TeamMinSizeRestriction PlayerBingeRestriction PlayerDodgeRestriction PlayerInGameRestriction PlayerLeaverBustedRestriction PlayerLeaverQueueLockoutRestriction PlayerLeaverTaintedWarningRestriction PlayerMaxLevelRestriction PlayerMinLevelRestriction PlayerMinorRestriction PlayerRankedSuspensionRestriction TeamHighMMRMaxSizeRestriction TeamSizeRestriction PrerequisiteQueuesNotPlayedRestriction GameVersionMismatch GameVersionMissing GameVersionNotSupported QueueEntryNotEntitledRestriction UnknownRestriction",
      "type": "string"
    },
    "LolFeaturedModesFeaturedModesConfig": {
      "properties": "@{MaxNotificationSaveDelayMinutes=; NotificationsEnabled=; QueueToggleNotificationMinutesThreshold=}",
      "type": "object"
    },
    "LolFeaturedModesGameflowAvailability": {
      "properties": "@{isAvailable=; state=}",
      "type": "object"
    },
    "LolFeaturedModesGameflowAvailabilityState": {
      "enum": "Available Initializing Patching EligibilityInfoMissing PlayerBanned InGameFlow Configuration",
      "type": "string"
    },
    "LolFeaturedModesGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolFeaturedModesGameflowSession": {
      "properties": "@{phase=}",
      "type": "object"
    },
    "LolFeaturedModesLoginSession": {
      "properties": "@{state=; summonerId=}",
      "type": "object"
    },
    "LolFeaturedModesLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolFeaturedModesMaps": {
      "properties": "@{assets=; gameModeName=; isRGM=}",
      "type": "object"
    },
    "LolFeaturedModesPlayerNotificationResource": {
      "properties": "@{backgroundUrl=; critical=; data=; detailKey=; expires=; iconUrl=; id=; source=; state=; titleKey=; type=}",
      "type": "object"
    },
    "LolFeaturedModesQueue": {
      "properties": "@{category=; gameMode=; id=; lastToggledOffTime=; lastToggledOnTime=; mapId=; name=; queueAvailability=}",
      "type": "object"
    },
    "LolFeaturedModesQueueAvailability": {
      "enum": "Available PlatformDisabled DoesntMeetRequirements",
      "type": "string"
    },
    "LolFeaturedModesQueueGameCategory": {
      "enum": "None Custom PvP VersusAi Alpha",
      "type": "string"
    },
    "LolGameClientChatGameClientChatMessageResource": {
      "properties": "@{body=; fromSummonerName=}",
      "type": "object"
    },
    "LolGameClientChatMutedPlayerInfo": {
      "properties": "@{obfuscatedPuuid=; obfuscatedSummonerId=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolGameQueuesLoginDataPacket": {
      "properties": "@{gameTypeConfigs=}",
      "type": "object"
    },
    "LolGameQueuesLoginSession": {
      "properties": "@{accountId=; connected=; state=; summonerId=}",
      "type": "object"
    },
    "LolGameQueuesLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolGameQueuesPlatformConfigEnabledMap": {
      "properties": "@{gameMapId=; minPlayers=}",
      "type": "object"
    },
    "LolGameQueuesQueue": {
      "properties": "@{allowablePremadeSizes=; areFreeChampionsAllowed=; assetMutator=; category=; championsRequiredToPlay=; description=; detailedDescription=; gameMode=; gameTypeConfig=; id=; isRanked=; isTeamBuilderManaged=; lastToggledOffTime=; lastToggledOnTime=; mapId=; maxDivisionForPremadeSize2=; maxTierForPremadeSize2=; maximumParticipantListSize=; minLevel=; minimumParticipantListSize=; name=; numPlayersPerTeam=; queueAvailability=; queueRewards=; removalFromGameAllowed=; removalFromGameDelayMinutes=; shortName=; showPositionSelector=; spectatorEnabled=; type=}",
      "type": "object"
    },
    "LolGameQueuesQueueAvailability": {
      "enum": "Available PlatformDisabled DoesntMeetRequirements",
      "type": "string"
    },
    "LolGameQueuesQueueCustomGame": {
      "properties": "@{gameServerRegions=; queueAvailability=; spectatorPolicies=; spectatorSlotLimit=; subcategories=}",
      "type": "object"
    },
    "LolGameQueuesQueueCustomGameSpectatorPolicy": {
      "enum": "NotAllowed LobbyAllowed FriendsAllowed AllAllowed",
      "type": "string"
    },
    "LolGameQueuesQueueCustomGameSubcategory": {
      "properties": "@{customSpectatorPolicies=; gameMode=; mapId=; maxPlayerCount=; maximumParticipantListSize=; minLevel=; minimumParticipantListSize=; mutators=; numPlayersPerTeam=; queueAvailability=}",
      "type": "object"
    },
    "LolGameQueuesQueueGameCategory": {
      "enum": "None Custom PvP VersusAi Alpha",
      "type": "string"
    },
    "LolGameQueuesQueueGameTypeConfig": {
      "properties": "@{advancedLearningQuests=; allowTrades=; banMode=; banTimerDuration=; battleBoost=; crossTeamChampionPool=; deathMatch=; doNotRemove=; duplicatePick=; exclusivePick=; gameModeOverride=; id=; learningQuests=; mainPickTimerDuration=; maxAllowableBans=; name=; numPlayersPerTeamOverride=; onboardCoopBeginner=; pickMode=; postPickTimerDuration=; reroll=; teamChampionPool=}",
      "type": "object"
    },
    "LolGameQueuesQueueReward": {
      "properties": "@{isChampionPointsEnabled=; isIpEnabled=; isXpEnabled=; partySizeIpRewards=}",
      "type": "object"
    },
    "LolGameQueuesQueueTranslation": {
      "properties": "@{description=; detailedDescription=; name=; shortName=}",
      "type": "object"
    },
    "LolGameSettingsLoginSession": {
      "properties": "@{accountId=; state=; summonerId=}",
      "type": "object"
    },
    "LolGameSettingsLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolGameSettingsgamesettingsgameclient": {
      "properties": "@{running=}",
      "type": "object"
    },
    "LolGameSettingsgamesettingsgameflowsession": {
      "properties": "@{gameClient=}",
      "type": "object"
    },
    "LolGameflowCrashReportingSettings": {
      "properties": "@{enabled=; type=}",
      "type": "object"
    },
    "LolGameflowGameModeSpellList": {
      "properties": "@{spells=}",
      "type": "object"
    },
    "LolGameflowGameStateUpdate": {
      "properties": "@{errorMessage=; gameState=; gameType=; id=}",
      "type": "object"
    },
    "LolGameflowGameflowAvailability": {
      "properties": "@{isAvailable=; state=}",
      "type": "object"
    },
    "LolGameflowGameflowAvailabilityState": {
      "enum": "Available Initializing Patching PlayerBanned InGameFlow Configuration EligibilityInfoMissing",
      "type": "string"
    },
    "LolGameflowGameflowGameClient": {
      "properties": "@{observerServerIp=; observerServerPort=; running=; serverIp=; serverPort=; visible=}",
      "type": "object"
    },
    "LolGameflowGameflowGameData": {
      "properties": "@{gameId=; gameName=; isCustomGame=; password=; playerChampionSelections=; queue=; spectatorsAllowed=; teamOne=; teamTwo=}",
      "type": "object"
    },
    "LolGameflowGameflowGameDodge": {
      "properties": "@{dodgeIds=; phase=; state=}",
      "type": "object"
    },
    "LolGameflowGameflowGameDodgeState": {
      "enum": "Invalid PartyDodged StrangerDodged TournamentDodged",
      "type": "string"
    },
    "LolGameflowGameflowGameMap": {
      "properties": "@{assets=; categorizedContentBundles=; description=; gameMode=; gameModeName=; gameModeShortName=; gameMutator=; id=; isRGM=; mapStringId=; name=; perPositionDisallowedSummonerSpells=; perPositionRequiredSummonerSpells=; platformId=; platformName=; properties=}",
      "type": "object"
    },
    "LolGameflowGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolGameflowGameflowProcessInfo": {
      "properties": "@{pid=; rawArgs=; standalone=}",
      "type": "object"
    },
    "LolGameflowGameflowSession": {
      "properties": "@{gameClient=; gameData=; gameDodge=; map=; phase=}",
      "type": "object"
    },
    "LolGameflowGameflowWatchPhase": {
      "enum": "None WatchStarted WatchInProgress WatchFailedToLaunch",
      "type": "string"
    },
    "LolGameflowInstallPaths": {
      "properties": "@{gameExecutablePath=; gameInstallRoot=}",
      "type": "object"
    },
    "LolGameflowLobbyStatus": {
      "properties": "@{allowedPlayAgain=; customSpectatorPolicy=; invitedSummonerIds=; isCustom=; isLeader=; isPracticeTool=; isSpectator=; lobbyId=; memberSummonerIds=; queueId=}",
      "type": "object"
    },
    "LolGameflowLoginSession": {
      "properties": "@{accountId=; connected=; state=; summonerId=}",
      "type": "object"
    },
    "LolGameflowLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolGameflowPatcherProductState": {
      "properties": "@{action=; isCorrupted=; isStopped=; isUpToDate=; isUpdateAvailable=}",
      "type": "object"
    },
    "LolGameflowPatcherProductStateAction": {
      "enum": "Idle CheckingForUpdates Patching Repairing Migrating",
      "type": "string"
    },
    "LolGameflowPlayerStatus": {
      "properties": "@{canInviteOthersAtEog=; currentLobbyStatus=; lastQueuedLobbyStatus=}",
      "type": "object"
    },
    "LolGameflowQueue": {
      "properties": "@{allowablePremadeSizes=; areFreeChampionsAllowed=; assetMutator=; category=; championsRequiredToPlay=; description=; detailedDescription=; gameMode=; gameTypeConfig=; id=; isRanked=; isTeamBuilderManaged=; lastToggledOffTime=; lastToggledOnTime=; mapId=; maximumParticipantListSize=; minLevel=; minimumParticipantListSize=; name=; numPlayersPerTeam=; queueAvailability=; queueRewards=; removalFromGameAllowed=; removalFromGameDelayMinutes=; shortName=; showPositionSelector=; spectatorEnabled=; type=}",
      "type": "object"
    },
    "LolGameflowQueueAvailability": {
      "enum": "Available PlatformDisabled DoesntMeetRequirements",
      "type": "string"
    },
    "LolGameflowQueueCustomGameSpectatorPolicy": {
      "enum": "NotAllowed LobbyAllowed FriendsAllowed AllAllowed",
      "type": "string"
    },
    "LolGameflowQueueGameCategory": {
      "enum": "None Custom PvP VersusAi Alpha",
      "type": "string"
    },
    "LolGameflowQueueGameTypeConfig": {
      "properties": "@{advancedLearningQuests=; allowTrades=; banMode=; banTimerDuration=; battleBoost=; crossTeamChampionPool=; deathMatch=; doNotRemove=; duplicatePick=; exclusivePick=; id=; learningQuests=; mainPickTimerDuration=; maxAllowableBans=; name=; onboardCoopBeginner=; pickMode=; postPickTimerDuration=; reroll=; teamChampionPool=}",
      "type": "object"
    },
    "LolGameflowQueueReward": {
      "properties": "@{isChampionPointsEnabled=; isIpEnabled=; isXpEnabled=; partySizeIpRewards=}",
      "type": "object"
    },
    "LolGameflowRegionLocale": {
      "properties": "@{locale=; region=}",
      "type": "object"
    },
    "LolGameflowRegistrationStatus": {
      "properties": "@{complete=; errorCodes=}",
      "type": "object"
    },
    "LolGameflowReplaysSettingsData": {
      "properties": "@{highlights-folder-path=}",
      "type": "object"
    },
    "LolGameflowReplaysSettingsResource": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolGameflowSpectateGameInfoResource": {
      "properties": "@{allowObserveMode=; dropInSpectateGameId=; gameQueueType=; puuid=}",
      "type": "object"
    },
    "LolGeoinfoGeoInfo": {
      "properties": "@{city=; country=; region=}",
      "type": "object"
    },
    "LolGeoinfoGeoInfoConfig": {
      "properties": "@{Enabled=}",
      "type": "object"
    },
    "LolGeoinfoGeoInfoResponse": {
      "properties": "@{errorMessage=; geoInfo=; isInitialized=; isLatest=; success=}",
      "type": "object"
    },
    "LolGeoinfoLoginSession": {
      "properties": "@{accountId=; state=; summonerId=}",
      "type": "object"
    },
    "LolGeoinfoLoginSessionState": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolGeoinfoWhereAmIRequest": {
      "properties": "@{ipAddress=}",
      "type": "object"
    },
    "LolGeoinfoWhereAmIResponse": {
      "properties": "@{city=; country=; region=}",
      "type": "object"
    },
    "LolHeartbeatLoginSession": {
      "properties": "@{accountId=; state=; summonerId=}",
      "type": "object"
    },
    "LolHeartbeatLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolHighlightsHighlight": {
      "properties": "@{fileSizeBytes=; filepath=; id=; mtimeIso8601=; mtimeMsUtc=; name=; url=}",
      "type": "object"
    },
    "LolHighlightsHighlightsConfig": {
      "properties": "@{invalidHighlightNameCharacters=; isHighlightsEnabled=}",
      "type": "object"
    },
    "LolHighlightsHighlightsDynamicConfig": {
      "properties": "@{Enabled=}",
      "type": "object"
    },
    "LolHighlightsHighlightsSettingsData": {
      "properties": "@{highlights-folder-path=}",
      "type": "object"
    },
    "LolHighlightsHighlightsSettingsResource": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolHoneyfruitAccountClaimStatus": {
      "properties": "@{linking_status=; migration_status=}",
      "type": "object"
    },
    "LolHoneyfruitAccountDetails": {
      "properties": "@{platformId=; puuid=; summonerIconId=; summonerLevel=; summonerName=}",
      "type": "object"
    },
    "LolHoneyfruitGAMHSMatchHistoryData": {
      "properties": "",
      "type": "object"
    },
    "LolHoneyfruitGAMHSMatchHistoryList": {
      "properties": "@{active_puuid=; games=}",
      "type": "object"
    },
    "LolHoneyfruitGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolHoneyfruitGarenaRegionLeagueAccount": {
      "properties": "@{garena_id=; garena_puuid=; has_played_a_game=; is_reserved_summoner_name=; platform_id=; summoner_icon_id=; summoner_level=; summoner_name=}",
      "type": "object"
    },
    "LolHoneyfruitHoneyfruitActionType": {
      "enum": "dismiss dismiss_temporarily dismiss_permanently link",
      "type": "string"
    },
    "LolHoneyfruitHoneyfruitAuthRedirectMock": {
      "properties": "@{redirectLatency=; redirectStatusCode=; redirectURL=}",
      "type": "object"
    },
    "LolHoneyfruitHoneyfruitLinkingAction": {
      "properties": "@{action=; target=}",
      "type": "object"
    },
    "LolHoneyfruitHoneyfruitLinkingFailureReason": {
      "enum": "ALREADY_LINKED ACCESS_TOKEN_EXPIRED BAD_AUTHORIZATION_PARAM DEGRADED DISABLED NOT_LINKED REQUEST_FAILURE UNHANDLED_SERVER_SIDE_ERROR",
      "type": "string"
    },
    "LolHoneyfruitHoneyfruitLinkingNotification": {
      "properties": "@{linkedAccount=}",
      "type": "object"
    },
    "LolHoneyfruitHoneyfruitLinkingServiceResponse": {
      "properties": "@{account_details=; eligible=; email=; reason_code=}",
      "type": "object"
    },
    "LolHoneyfruitHoneyfruitLinkingState": {
      "enum": "hidden snoozed prompt confirm_snooze error in_progress linking_complete linked",
      "type": "string"
    },
    "LolHoneyfruitHoneyfruitLinkingStatus": {
      "properties": "@{error=; linkedAccount=; state=}",
      "type": "object"
    },
    "LolHoneyfruitHoneyfruitLinkingStatusError": {
      "enum": "no_error not_signed_in service_unavailable unknown_error",
      "type": "string"
    },
    "LolHoneyfruitHoneyfruitPublisher": {
      "enum": "garena riot tencent twm vng",
      "type": "string"
    },
    "LolHoneyfruitHoneyfruitRegionLocale": {
      "properties": "@{locale=; region=}",
      "type": "object"
    },
    "LolHoneyfruitHoneyfruitSettingCategoryResource": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolHoneyfruitHoneyfruitSettingCategoryResourceAccountClaim": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolHoneyfruitHoneyfruitSettings": {
      "properties": "@{isSnoozedPermanently=; snoozeUntilMS=}",
      "type": "object"
    },
    "LolHoneyfruitHoneyfruitSettingsAccountClaim": {
      "properties": "@{isAccountClaimAutoDismiss=}",
      "type": "object"
    },
    "LolHoneyfruitHoneyfruitVNGPublisherSettings": {
      "properties": "@{visible=}",
      "type": "object"
    },
    "LolHoneyfruitMatchHistoryGame": {
      "properties": "",
      "type": "object"
    },
    "LolHoneyfruitMatchHistoryGameList": {
      "properties": "@{gameBeginDate=; gameCount=; gameEndDate=; gameIndexBegin=; gameIndexEnd=; games=}",
      "type": "object"
    },
    "LolHoneyfruitMatchHistoryList": {
      "properties": "@{accountId=; games=; platformId=}",
      "type": "object"
    },
    "LolHoneyfruitSummoner": {
      "properties": "@{accountId=; displayName=; internalName=; nameChangeFlag=; percentCompleteForNextLevel=; profileIconId=; puuid=; summonerId=; summonerLevel=; unnamed=; xpSinceLastLevel=; xpUntilNextLevel=}",
      "type": "object"
    },
    "LolHoneyfruitV1AuthenticationRedirectInput": {
      "properties": "@{language=; redirect_uri=}",
      "type": "object"
    },
    "LolHoneyfruitV1AuthenticationResponse": {
      "properties": "@{country=; error=; success=; type=}",
      "type": "object"
    },
    "LolHoneyfruitV1ResponseType": {
      "enum": "auth healup signup multifactor success error",
      "type": "string"
    },
    "LolHoneyfruitV1SuccessResponseDetails": {
      "properties": "@{linked=; login_token=; redirect_url=}",
      "type": "object"
    },
    "LolHoneyfruitVNGStatusResponse": {
      "properties": "@{action_required=; action_url=; action_url_raw=}",
      "type": "object"
    },
    "LolHonorV2AccountIdAndSummonerId": {
      "properties": "@{accountId=; summonerId=}",
      "type": "object"
    },
    "LolHonorV2ApiHonorPlayerServerRequest": {
      "properties": "@{gameId=; honorType=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolHonorV2Ballot": {
      "properties": "@{eligiblePlayers=; gameId=}",
      "type": "object"
    },
    "LolHonorV2DynamicHonorMessage": {
      "properties": "@{messageId=; value=}",
      "type": "object"
    },
    "LolHonorV2EligiblePlayer": {
      "properties": "@{championName=; puuid=; skinSplashPath=; summonerId=; summonerName=}",
      "type": "object"
    },
    "LolHonorV2EndOfGamePlayer": {
      "properties": "@{botPlayer=; championName=; gameId=; leaver=; puuid=; skinSplashPath=; summonerId=; summonerName=}",
      "type": "object"
    },
    "LolHonorV2EndOfGameStats": {
      "properties": "@{gameEndedInEarlySurrender=; gameId=; gameType=; invalid=; localPlayer=; queueType=; ranked=; reportGameId=; teams=}",
      "type": "object"
    },
    "LolHonorV2EndOfGameTeam": {
      "properties": "@{isPlayerTeam=; players=}",
      "type": "object"
    },
    "LolHonorV2GameflowGameData": {
      "properties": "@{gameId=; queue=}",
      "type": "object"
    },
    "LolHonorV2GameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolHonorV2GameflowSession": {
      "properties": "@{gameData=; phase=}",
      "type": "object"
    },
    "LolHonorV2Honor": {
      "properties": "@{honorCategory=; senderPuuid=; voterRelationship=}",
      "type": "object"
    },
    "LolHonorV2HonorConfig": {
      "properties": "@{Enabled=; HonorSuggestionsEnabled=; HonorVisibilityEnabled=; RecallRewardEnabled=; SecondsToVote=; honorEndpointsV2Enabled=}",
      "type": "object"
    },
    "LolHonorV2HonorInteraction": {
      "properties": "@{displayName=; gameId=; puuid=}",
      "type": "object"
    },
    "LolHonorV2HonorRecipient": {
      "properties": "@{gameId=; honors=; puuid=}",
      "type": "object"
    },
    "LolHonorV2HonorSummoner": {
      "properties": "@{displayName=; puuid=}",
      "type": "object"
    },
    "LolHonorV2LoginSession": {
      "properties": "@{state=}",
      "type": "object"
    },
    "LolHonorV2LoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolHonorV2MutualHonor": {
      "properties": "@{gameId=; summoners=}",
      "type": "object"
    },
    "LolHonorV2MutualHonorPlayer": {
      "properties": "@{championId=; skinId=; summonerId=}",
      "type": "object"
    },
    "LolHonorV2ProfileInfo": {
      "properties": "@{checkpoint=; honorLevel=; rewardsLocked=}",
      "type": "object"
    },
    "LolHonorV2Queue": {
      "properties": "@{gameMode=; id=; mapId=; removalFromGameAllowed=; removalFromGameDelayMinutes=; type=}",
      "type": "object"
    },
    "LolHonorV2RetrieveProfileResponse": {
      "properties": "@{checkpoint=; honorLevel=; rewardsLocked=}",
      "type": "object"
    },
    "LolHonorV2Reward": {
      "properties": "@{quantity=; rewardType=}",
      "type": "object"
    },
    "LolHonorV2SequenceEvent": {
      "properties": "@{name=; priority=}",
      "type": "object"
    },
    "LolHonorV2VendedHonorChange": {
      "properties": "@{actionType=; currentState=; dynamicHonorMessage=; previousState=; reward=}",
      "type": "object"
    },
    "LolHonorV2VendedHonorState": {
      "properties": "@{checkpoint=; level=; rewardsLocked=}",
      "type": "object"
    },
    "LolHonorV2VendedReward": {
      "properties": "@{dynamicHonorMessage=; quantity=; rewardType=}",
      "type": "object"
    },
    "LolHonorV2VoteCompletion": {
      "properties": "@{fullTeamVote=; gameId=}",
      "type": "object"
    },
    "LolHovercardChatSession": {
      "properties": "@{sessionState=}",
      "type": "object"
    },
    "LolHovercardContentCookies": {
      "properties": "@{content_id=; content_path=; cookies=}",
      "type": "object"
    },
    "LolHovercardFriendResult": {
      "properties": "@{accountId=; availability=; gameName=; gameTag=; icon=; id=; lol=; name=; note=; patchline=; platformId=; product=; productName=; puuid=; score=; statusMessage=; summonerId=}",
      "type": "object"
    },
    "LolHovercardHovercardUserInfo": {
      "properties": "@{accountId=; availability=; gameName=; gameTag=; icon=; id=; lol=; masteryScore=; name=; note=; partySummoners=; patchline=; platformId=; product=; productName=; puuid=; remotePlatform=; remoteProduct=; remoteProductBackdropUrl=; remoteProductIconUrl=; statusMessage=; summonerIcon=; summonerId=; summonerLevel=}",
      "type": "object"
    },
    "LolHovercardPartyInfo": {
      "properties": "@{summoners=}",
      "type": "object"
    },
    "LolHovercardPatchlineMetadata": {
      "properties": "@{content_cookies=; content_paths=; id=; product_id=}",
      "type": "object"
    },
    "LolHovercardProductMetadata": {
      "properties": "@{id=; name=; patchlines=}",
      "type": "object"
    },
    "LolHovercardProductMetadataMap": {
      "properties": "@{products=}",
      "type": "object"
    },
    "LolHovercardSummoner": {
      "properties": "@{accountId=; displayName=; puuid=; summonerId=; summonerLevel=}",
      "type": "object"
    },
    "LolHovercardSummonerIdAndIcon": {
      "properties": "@{profileIconId=}",
      "type": "object"
    },
    "LolHovercardSummonerIdAndName": {
      "properties": "@{displayName=; summonerId=}",
      "type": "object"
    },
    "LolHovercardTopChampionMastery": {
      "properties": "@{score=}",
      "type": "object"
    },
    "LolHovercardcookie": {
      "properties": "@{name=; value=}",
      "type": "object"
    },
    "LolInventoryAccessTokenResource": {
      "properties": "@{expiry=; scopes=; token=}",
      "type": "object"
    },
    "LolInventoryCatalogItem": {
      "properties": "@{inventoryType=; itemId=; itemInstanceId=}",
      "type": "object"
    },
    "LolInventoryClientCacheClearMessageDTO": {
      "properties": "@{clearAll=; inventoryTypes=; regions=}",
      "type": "object"
    },
    "LolInventoryCurrencyDTO": {
      "properties": "@{amount=; subCurrencies=}",
      "type": "object"
    },
    "LolInventoryEndOfGameXp": {
      "properties": "@{PER_WIN=}",
      "type": "object"
    },
    "LolInventoryEndOfGameXpNotification": {
      "properties": "@{xp=}",
      "type": "object"
    },
    "LolInventoryInventoryCacheEntry": {
      "properties": "@{expirationMS=; issuedAtMS=; receivedAtMS=; signedInventoryJwt=; valid=}",
      "type": "object"
    },
    "LolInventoryInventoryDTO": {
      "properties": "@{accountId=; expires=; items=; itemsJwt=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolInventoryInventoryItem": {
      "properties": "@{expirationDate=; inventoryType=; itemId=; ownershipType=; purchaseDate=; quantity=; uuid=; wins=}",
      "type": "object"
    },
    "LolInventoryInventoryItemDTO": {
      "properties": "@{entitlementId=; entitlementTypeId=; expirationDate=; f2p=; instanceId=; instanceTypeId=; inventoryType=; itemId=; loyalty=; loyaltySources=; lsb=; ownedQuantity=; payload=; purchaseDate=; quantity=; rental=; usedInGameDate=; wins=}",
      "type": "object"
    },
    "LolInventoryInventoryItemWithPayload": {
      "properties": "@{expirationDate=; f2p=; inventoryType=; itemId=; loyalty=; loyaltySources=; owned=; ownershipType=; payload=; purchaseDate=; quantity=; rental=; uuid=; wins=}",
      "type": "object"
    },
    "LolInventoryInventoryNotification": {
      "properties": "@{acknowledged=; id=; inventoryType=; itemId=; type=}",
      "type": "object"
    },
    "LolInventoryInventoryResponseDTO": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolInventoryItemKey": {
      "properties": "@{inventoryType=; itemId=}",
      "type": "object"
    },
    "LolInventoryItemOwnershipType": {
      "enum": "OWNED RENTED LOYALTY F2P",
      "type": "string"
    },
    "LolInventoryLoginSession": {
      "properties": "@{accountId=; idToken=; puuid=; state=; summonerId=}",
      "type": "object"
    },
    "LolInventoryLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolInventoryLoyaltyRewards": {
      "properties": "@{championIds=; freeRewardedChampionsCount=; freeRewardedSkinsCount=; ipBoost=; loyaltySources=; loyaltyTFTCompanionCount=; loyaltyTFTDamageSkinCount=; loyaltyTFTMapSkinCount=; skinIds=; xpBoost=}",
      "type": "object"
    },
    "LolInventoryLoyaltyRewardsSimplified": {
      "properties": "@{championIds=; freeRewardedChampionsCount=; freeRewardedSkinsCount=; ipBoost=; loyaltySources=; loyaltyTFTCompanionCount=; loyaltyTFTDamageSkinCount=; loyaltyTFTMapSkinCount=; skinIds=; xpBoost=}",
      "type": "object"
    },
    "LolInventoryLoyaltyStatus": {
      "enum": "LEGACY REWARDS_GRANT EXPIRY CHANGE REVOKE DISABLED",
      "type": "string"
    },
    "LolInventoryLoyaltyStatusNotification": {
      "properties": "@{reloadInventory=; rewards=; status=}",
      "type": "object"
    },
    "LolInventoryPlayerNotification": {
      "properties": "@{critical=; detailKey=; iconUrl=; source=; state=; titleKey=; type=}",
      "type": "object"
    },
    "LolInventoryRiotMessagingServiceMessage": {
      "properties": "@{payload=; resource=; service=; timestamp=; version=}",
      "type": "object"
    },
    "LolInventoryRmsEntitlementPayload": {
      "properties": "@{entitlementTypeId=; itemId=; itemTypeId=; resourceOperation=}",
      "type": "object"
    },
    "LolInventoryRmsStoreEntitlementItem": {
      "properties": "@{inventoryType=; itemId=}",
      "type": "object"
    },
    "LolInventoryRmsStoreEntitlementPayload": {
      "properties": "@{items=; transactionId=}",
      "type": "object"
    },
    "LolInventoryRmsWalletPayload": {
      "properties": "",
      "type": "object"
    },
    "LolInventoryRmsXboxSubscriptionChange": {
      "properties": "@{active=; identityProvider=; puuid=; subscriptionId=}",
      "type": "object"
    },
    "LolInventorySimpleInventoryDTO": {
      "properties": "@{expires=; items=; itemsJwt=}",
      "type": "object"
    },
    "LolInventorySimpleInventoryResponseDTO": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolInventorySummonerIcon": {
      "properties": "@{itemId=}",
      "type": "object"
    },
    "LolInventoryWallet": {
      "properties": "@{ip=; rp=}",
      "type": "object"
    },
    "LolInventoryWalletCacheEntry": {
      "properties": "@{expirationMS=; issuedAtMS=; receivedAtMS=; signedBalancesJwt=; valid=}",
      "type": "object"
    },
    "LolInventoryWalletDTO": {
      "properties": "@{accountId=; balances=; balancesJwt=; expires=; puuid=}",
      "type": "object"
    },
    "LolInventoryWalletResponseDTO": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolInventoryXboxSubscriptionStatus": {
      "properties": "@{active=; subscriptionId=}",
      "type": "object"
    },
    "LolItemSetsGameDataChampion": {
      "properties": "@{alias=}",
      "type": "object"
    },
    "LolItemSetsItemSet": {
      "properties": "@{associatedChampions=; associatedMaps=; blocks=; map=; mode=; preferredItemSlots=; sortrank=; startedFrom=; title=; type=; uid=}",
      "type": "object"
    },
    "LolItemSetsItemSetBlock": {
      "properties": "@{hideIfSummonerSpell=; items=; showIfSummonerSpell=; type=}",
      "type": "object"
    },
    "LolItemSetsItemSetItem": {
      "properties": "@{count=; id=}",
      "type": "object"
    },
    "LolItemSetsItemSets": {
      "properties": "@{accountId=; itemSets=; timestamp=}",
      "type": "object"
    },
    "LolItemSetsLoginSession": {
      "properties": "@{accountId=; state=; summonerId=}",
      "type": "object"
    },
    "LolItemSetsLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolItemSetsNamecheckAuthorization": {
      "properties": "@{subject=}",
      "type": "object"
    },
    "LolItemSetsNamecheckLoginDataPacket": {
      "properties": "@{platformId=}",
      "type": "object"
    },
    "LolItemSetsNamecheckPayload": {
      "properties": "@{name=; nameValidationContext=; puuid=; shard=}",
      "type": "object"
    },
    "LolItemSetsNamecheckResponse": {
      "properties": "@{errors=}",
      "type": "object"
    },
    "LolItemSetsPreferredItemSlot": {
      "properties": "@{id=; preferredItemSlot=}",
      "type": "object"
    },
    "LolItemSetsValidateItemSetNameInput": {
      "properties": "@{name=}",
      "type": "object"
    },
    "LolItemSetsValidateItemSetNameResponse": {
      "properties": "@{nameCheckResponse=; success=}",
      "type": "object"
    },
    "LolKickoutKickoutMessage": {
      "properties": "@{message=}",
      "type": "object"
    },
    "LolKrPlaytimeReminderPlaytimeReminder": {
      "properties": "@{hours=}",
      "type": "object"
    },
    "LolKrShutdownLawAllQueueShutdownStatus": {
      "properties": "@{isAllQueuesDisabled=}",
      "type": "object"
    },
    "LolKrShutdownLawAntiAddictionState": {
      "properties": "@{policyType=}",
      "type": "object"
    },
    "LolKrShutdownLawPolicyType": {
      "enum": "shutdown playTime warningMessage disableMatchMaking",
      "type": "string"
    },
    "LolKrShutdownLawQueueShutdownStatus": {
      "properties": "@{isDisabled=}",
      "type": "object"
    },
    "LolKrShutdownLawRatingScreenInfo": {
      "properties": "@{shown=}",
      "type": "object"
    },
    "LolKrShutdownLawShutdownLawNotification": {
      "properties": "@{type=}",
      "type": "object"
    },
    "LolKrShutdownLawShutdownLawStatus": {
      "enum": "NONE WARNING CUT_OFF",
      "type": "string"
    },
    "LolLeagueSessionAntiAddictionTokenEnvelope": {
      "properties": "@{antiAddictionToken=}",
      "type": "object"
    },
    "LolLeagueSessionLeagueSessionRMSNotification": {
      "properties": "@{product=; puuid=; sessionId=; sessionInitiatedAt=; state=}",
      "type": "object"
    },
    "LolLeagueSessionLeagueSessionStatus": {
      "enum": "UNINITIALIZED INITIALIZED EXPIRED DUPLICATED ANTI_ADDICTION_EXPIRED",
      "type": "string"
    },
    "LolLeagueSessionLeagueSessionTokenEnvelope": {
      "properties": "@{logoutOnFailure=; token=}",
      "type": "object"
    },
    "LolLeaverBusterAllSummonerData": {
      "properties": "@{summoner=}",
      "type": "object"
    },
    "LolLeaverBusterLeaverBusterNotificationResource": {
      "properties": "@{accountId=; fromRms=; id=; msgId=; punishedGamesRemaining=; queueLockoutTimerExpiryUtcMillisDiff=; type=}",
      "type": "object"
    },
    "LolLeaverBusterLeaverBusterNotificationType": {
      "enum": "Invalid TaintedWarning PunishmentIncurred PunishedGamesRemaining Reforming PreLockoutWarning OnLockoutWarning",
      "type": "string"
    },
    "LolLeaverBusterLoginDataPacket": {
      "properties": "@{allSummonerData=; simpleMessages=}",
      "type": "object"
    },
    "LolLeaverBusterMatchmakingSearchErrorResource": {
      "properties": "@{errorType=; id=; message=; penalizedSummonerId=; penaltyTimeRemaining=}",
      "type": "object"
    },
    "LolLeaverBusterMatchmakingSearchResource": {
      "properties": "@{errors=; queueId=}",
      "type": "object"
    },
    "LolLeaverBusterPlayerNotificationResource": {
      "properties": "@{backgroundUrl=; created=; critical=; data=; detailKey=; expires=; iconUrl=; id=; source=; state=; titleKey=; type=}",
      "type": "object"
    },
    "LolLeaverBusterSimpleMessage": {
      "properties": "@{accountId=; msgId=; params=; type=}",
      "type": "object"
    },
    "LolLeaverBusterSummoner": {
      "properties": "@{acctId=; sumId=}",
      "type": "object"
    },
    "LolLicenseAgreementLicenseAgreement": {
      "properties": "@{id=; licenseType=; text=}",
      "type": "object"
    },
    "LolLicenseAgreementLicenseAgreementType": {
      "enum": "PrivacyNotice TermsOfUse",
      "type": "string"
    },
    "LolLicenseAgreementLicenseServeLocation": {
      "enum": "Preparing Local External",
      "type": "string"
    },
    "LolLicenseAgreementPluginRegionLocaleChangedEvent": {
      "properties": "@{locale=; region=}",
      "type": "object"
    },
    "LolLoadoutsAccessTokenResource": {
      "properties": "@{expiry=; scopes=; token=}",
      "type": "object"
    },
    "LolLoadoutsCreateLoadoutDTO": {
      "properties": "@{itemId=; loadout=; name=; refreshTime=; scope=}",
      "type": "object"
    },
    "LolLoadoutsCreateLoadoutRequestDTO": {
      "properties": "@{loadout=; serviceToJwtsMap=}",
      "type": "object"
    },
    "LolLoadoutsCreateOrUpdateItemsRequest": {
      "properties": "@{id=; inventoryJWTs=; items=}",
      "type": "object"
    },
    "LolLoadoutsFrontendInventoryResponse": {
      "properties": "@{entitlements=}",
      "type": "object"
    },
    "LolLoadoutsGameflowGameData": {
      "properties": "@{queue=}",
      "type": "object"
    },
    "LolLoadoutsGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolLoadoutsGameflowSession": {
      "properties": "@{gameData=; phase=}",
      "type": "object"
    },
    "LolLoadoutsGetItemsRequest": {
      "properties": "@{id=; inventoryJWTs=; inventoryTypes=}",
      "type": "object"
    },
    "LolLoadoutsInventoryDTO": {
      "properties": "@{accountId=; expires=; items=; itemsJwt=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolLoadoutsInventoryItemDTO": {
      "properties": "@{entitlementId=; entitlementTypeId=; expirationDate=; f2p=; instanceId=; instanceTypeId=; inventoryType=; itemId=; lsb=; purchaseDate=; quantity=; rental=; usedInGameDate=; wins=}",
      "type": "object"
    },
    "LolLoadoutsInventoryResponseDTO": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolLoadoutsItemKey": {
      "properties": "@{contentId=; inventoryType=; itemId=}",
      "type": "object"
    },
    "LolLoadoutsLoadout": {
      "properties": "@{id=; items=; name=}",
      "type": "object"
    },
    "LolLoadoutsLoadoutRequestDTOBase": {
      "properties": "@{serviceToJwtsMap=}",
      "type": "object"
    },
    "LolLoadoutsLoginSession": {
      "properties": "@{accountId=; idToken=; puuid=; state=; summonerId=}",
      "type": "object"
    },
    "LolLoadoutsLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolLoadoutsQueue": {
      "properties": "@{isTeamBuilderManaged=}",
      "type": "object"
    },
    "LolLoadoutsScopedLoadout": {
      "properties": "@{id=; itemId=; loadout=; name=; refreshTime=; scope=}",
      "type": "object"
    },
    "LolLoadoutsSignGCORequestDTO": {
      "properties": "@{loadout=; serviceToJwtsMap=}",
      "type": "object"
    },
    "LolLoadoutsUpdateLoadoutDTO": {
      "properties": "@{id=; loadout=; name=}",
      "type": "object"
    },
    "LolLoadoutsUpdateLoadoutRequestDTO": {
      "properties": "@{loadout=; serviceToJwtsMap=}",
      "type": "object"
    },
    "LolLobbyAccountIdAndSummonerId": {
      "properties": "@{accountId=; summonerId=}",
      "type": "object"
    },
    "LolLobbyAmbassadorMessage": {
      "properties": "@{errorCode=; httpStatus=; implementationDetails=; message=; payload=}",
      "type": "object"
    },
    "LolLobbyAutoFillQueueDto": {
      "properties": "@{autoFillEligible=; autoFillProtectedForPromos=; autoFillProtectedForStreaking=; queueId=}",
      "type": "object"
    },
    "LolLobbyBotParticipantDto": {
      "properties": "@{botSkillLevel=; championId=; team=}",
      "type": "object"
    },
    "LolLobbyChampionSkinSelection": {
      "properties": "@{championId=; skinId=}",
      "type": "object"
    },
    "LolLobbyChatBlockedPlayerResource": {
      "properties": "@{name=; summonerId=}",
      "type": "object"
    },
    "LolLobbyChatFriend": {
      "properties": "@{lol=; summonerId=}",
      "type": "object"
    },
    "LolLobbyChatFriendCounts": {
      "properties": "@{numFriends=; numFriendsAvailable=; numFriendsAway=; numFriendsInChampSelect=; numFriendsInGame=; numFriendsInQueue=; numFriendsMobile=; numFriendsOnline=}",
      "type": "object"
    },
    "LolLobbyCollectionsChampion": {
      "properties": "@{active=; botEnabled=; id=; name=}",
      "type": "object"
    },
    "LolLobbyCollectionsChampionMinimal": {
      "properties": "@{active=; disabledQueues=; freeToPlay=; id=; ownership=}",
      "type": "object"
    },
    "LolLobbyCollectionsOwnership": {
      "properties": "@{loyaltyReward=; owned=; rental=; xboxGPReward=}",
      "type": "object"
    },
    "LolLobbyCollectionsRental": {
      "properties": "",
      "type": "object"
    },
    "LolLobbyCustomEligibilityDto": {
      "properties": "@{eligible=; restrictions=}",
      "type": "object"
    },
    "LolLobbyCustomGameDto": {
      "properties": "@{allowSpectators=; gameType=; lobbyName=; mapId=; maxNumPlayers=; ownerPuuid=; partyId=; privateGame=; spectatorCount=; team1Count=; team2Count=}",
      "type": "object"
    },
    "LolLobbyCustomGameSettingsDto": {
      "properties": "@{gameId=; lobbyName=; lobbyPassword=}",
      "type": "object"
    },
    "LolLobbyCustomJoinOptionsDto": {
      "properties": "@{lobbyPassword=; team=}",
      "type": "object"
    },
    "LolLobbyEligibility": {
      "properties": "@{eligible=; queueId=; restrictions=}",
      "type": "object"
    },
    "LolLobbyEligibilityRestriction": {
      "properties": "@{expiredTimestamp=; restrictionArgs=; restrictionCode=; summonerIds=; summonerIdsString=}",
      "type": "object"
    },
    "LolLobbyEligibilityRestrictionCode": {
      "enum": "QueueDisabled QueueUnsupported PlayerLevelRestriction PlayerTimedRestriction PlayerBannedRestriction PlayerAvailableChampionRestriction TeamDivisionRestriction TeamSkillRestriction TeamMaxSizeRestriction TeamMinSizeRestriction PlayerBingeRestriction PlayerDodgeRestriction PlayerInGameRestriction PlayerLeaverBustedRestriction PlayerLeaverQueueLockoutRestriction PlayerLeaverTaintedWarningRestriction PlayerMaxLevelRestriction PlayerMinLevelRestriction PlayerMinorRestriction PlayerTimePlayedRestriction PlayerRankSoloOnlyRestriction PlayerRankedSuspensionRestriction TeamHighMMRMaxSizeRestriction TeamSizeRestriction PrerequisiteQueuesNotPlayedRestriction GameVersionMismatch GameVersionMissing GameVersionNotSupported QueueEntryNotEntitledRestriction UnknownRestriction BanInfoNotAvailable MinorInfoNotAvailable SummonerInfoNotAvailable LeaguesInfoNotAvailable InventoryChampsInfoNotAvailable InventoryQueuesInfoNotAvailable MmrStandardDeviationTooLarge",
      "type": "string"
    },
    "LolLobbyFriendAvailabilityAnalytics": {
      "properties": "@{eventData=; eventTimestamp=; eventType=; numFriends=; numFriendsAvailable=; numFriendsAway=; numFriendsInChampSelect=; numFriendsInGame=; numFriendsInQueue=; numFriendsMobile=; numFriendsOnline=; partyType=; platformId=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolLobbyGameDataChampionSummary": {
      "properties": "@{alias=; id=}",
      "type": "object"
    },
    "LolLobbyGameModeDto": {
      "properties": "@{allowSpectators=; botDifficulty=; customsSettings=; gameCustomization=; gameType=; gameTypeConfigId=; mapId=; maxPartySize=; maxTeamSize=; queueId=}",
      "type": "object"
    },
    "LolLobbyGameflowGameClient": {
      "properties": "@{running=}",
      "type": "object"
    },
    "LolLobbyGameflowGameData": {
      "properties": "@{queue=}",
      "type": "object"
    },
    "LolLobbyGameflowGameDodge": {
      "properties": "@{dodgeIds=; phase=; state=}",
      "type": "object"
    },
    "LolLobbyGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolLobbyGameflowSampleDto": {
      "properties": "@{intervalSecs=; probability=; state=; tags=}",
      "type": "object"
    },
    "LolLobbyGameflowSampleTag": {
      "enum": "Unregistered GameVersionMissing UserInfoTokenMissing SummonerTokenMissing RankedTokenMissing InventoryTokenMissing",
      "type": "string"
    },
    "LolLobbyGameflowSession": {
      "properties": "@{gameClient=; gameData=; gameDodge=; phase=}",
      "type": "object"
    },
    "LolLobbyGatekeeperRestrictionDto": {
      "properties": "@{accountId=; details=; payload=; puuid=; queueId=; reason=; remainingMillis=}",
      "type": "object"
    },
    "LolLobbyInventoryCacheEntry": {
      "properties": "@{expirationMS=; signedInventoryJwt=; valid=}",
      "type": "object"
    },
    "LolLobbyInventoryItem": {
      "properties": "@{itemId=}",
      "type": "object"
    },
    "LolLobbyInvitationType": {
      "enum": "invalid lobby party",
      "type": "string"
    },
    "LolLobbyJoinPartyAnalytics": {
      "properties": "@{eventData=; eventTimestamp=; eventType=; gameMode=; numFriendsOnline=; numOpenFriends=; numOpenParties=; numOtherInvites=; numPartyInvites=; numTotalInvites=; partyId=; partySize=; platformId=}",
      "type": "object"
    },
    "LolLobbyLcdsDynamicClientConfig": {
      "properties": "@{PartyRewards=}",
      "type": "object"
    },
    "LolLobbyLcdsGameMetaData": {
      "properties": "@{gameId=; mapId=}",
      "type": "object"
    },
    "LolLobbyLcdsPartyRewardsConfig": {
      "properties": "@{Enabled=}",
      "type": "object"
    },
    "LolLobbyLobby": {
      "properties": "@{allowablePremadeSizes=; autoFillEligible=; autoFillProtectedForPromos=; autoFillProtectedForStreaking=; canStartMatchmaking=; customGameLobby=; gameMode=; invitationId=; invitations=; isCustom=; isTeamBuilderManaged=; localMember=; mapId=; maximumParticipantListSize=; members=; mucJwtDto=; multiUserChatId=; multiUserChatPassword=; premadeSizeAllowed=; queueAvailability=; queueId=; removalReason=; requiredPositionCoverageMet=; showPositionExcluder=; showPositionSelector=; specifiablePositionPreferences=; wasKicked=}",
      "type": "object"
    },
    "LolLobbyLobbyBotChampion": {
      "properties": "@{active=; botDifficulties=; id=; name=}",
      "type": "object"
    },
    "LolLobbyLobbyBotDifficulty": {
      "enum": "NONE EASY MEDIUM HARD UBER TUTORIAL INTRO RIOTSCRIPT",
      "type": "string"
    },
    "LolLobbyLobbyBotParams": {
      "properties": "@{botDifficulty=; championId=; teamId=}",
      "type": "object"
    },
    "LolLobbyLobbyChangeGameDto": {
      "properties": "@{customGameLobby=; gameCustomization=; isCustom=; queueId=}",
      "type": "object"
    },
    "LolLobbyLobbyChangeQueue": {
      "properties": "@{customGameLobby=; isCustom=; queueId=}",
      "type": "object"
    },
    "LolLobbyLobbyCustomChampSelectStartResponse": {
      "properties": "@{failedPlayers=; success=}",
      "type": "object"
    },
    "LolLobbyLobbyCustomFailedPlayer": {
      "properties": "@{reason=; summonerId=; summonerName=}",
      "type": "object"
    },
    "LolLobbyLobbyCustomGame": {
      "properties": "@{filledPlayerSlots=; filledSpectatorSlots=; gameType=; hasPassword=; id=; lobbyName=; mapId=; maxPlayerSlots=; maxSpectatorSlots=; ownerSummonerName=; partyId=; passbackUrl=; spectatorPolicy=}",
      "type": "object"
    },
    "LolLobbyLobbyCustomGameConfiguration": {
      "properties": "@{gameMode=; gameServerRegion=; gameTypeConfig=; mapId=; maxPlayerCount=; mutators=; spectatorPolicy=; teamSize=; tournamentGameMode=; tournamentPassbackDataPacket=; tournamentPassbackUrl=}",
      "type": "object"
    },
    "LolLobbyLobbyCustomGameLobby": {
      "properties": "@{configuration=; gameId=; lobbyName=; lobbyPassword=; practiceGameRewardsDisabledReasons=; spectators=; teamOne=; teamTwo=}",
      "type": "object"
    },
    "LolLobbyLobbyCustomJoinParameters": {
      "properties": "@{asSpectator=; password=}",
      "type": "object"
    },
    "LolLobbyLobbyDto": {
      "properties": "@{canStartActivity=; gameConfig=; invitations=; localMember=; members=; mucJwtDto=; multiUserChatId=; multiUserChatPassword=; partyId=; partyType=; restrictions=; scarcePositions=; warnings=}",
      "type": "object"
    },
    "LolLobbyLobbyGameConfigDto": {
      "properties": "@{allowablePremadeSizes=; customLobbyName=; customMutatorName=; customRewardsDisabledReasons=; customSpectatorPolicy=; customSpectators=; customTeam100=; customTeam200=; gameMode=; isCustom=; isLobbyFull=; isTeamBuilderManaged=; mapId=; maxHumanPlayers=; maxLobbySize=; maxTeamSize=; pickType=; premadeSizeAllowed=; queueId=; shouldForceScarcePositionSelection=; showPositionSelector=}",
      "type": "object"
    },
    "LolLobbyLobbyInvitation": {
      "properties": "@{eligibility=; errorType=; fromSummonerId=; fromSummonerName=; id=; invitationMetaData=; state=; timestamp=; toSummonerId=; toSummonerName=}",
      "type": "object"
    },
    "LolLobbyLobbyInvitationDto": {
      "properties": "@{invitationId=; invitationType=; state=; timestamp=; toSummonerId=; toSummonerName=}",
      "type": "object"
    },
    "LolLobbyLobbyInvitationState": {
      "enum": "Requested Pending Accepted Joined Declined Kicked OnHold Error",
      "type": "string"
    },
    "LolLobbyLobbyLastQueuedLobby": {
      "properties": "@{canPlayAgain=; members=; queueId=; wasOwner=}",
      "type": "object"
    },
    "LolLobbyLobbyLastQueuedMember": {
      "properties": "@{id=}",
      "type": "object"
    },
    "LolLobbyLobbyMatchmakingLowPriorityDataResource": {
      "properties": "@{bustedLeaverAccessToken=; penalizedSummonerIds=; penaltyTime=; penaltyTimeRemaining=; reason=}",
      "type": "object"
    },
    "LolLobbyLobbyMatchmakingSearchErrorResource": {
      "properties": "@{errorType=; id=; message=; penalizedSummonerId=; penaltyTimeRemaining=}",
      "type": "object"
    },
    "LolLobbyLobbyMatchmakingSearchResource": {
      "properties": "@{errors=; lowPriorityData=; searchState=}",
      "type": "object"
    },
    "LolLobbyLobbyMatchmakingSearchState": {
      "enum": "Invalid AbandonedLowPriorityQueue Canceled Searching Found Error ServiceError ServiceShutdown",
      "type": "string"
    },
    "LolLobbyLobbyMember": {
      "properties": "@{autoFillEligible=; autoFillProtectedForPromos=; autoFillProtectedForSoloing=; autoFillProtectedForStreaking=; botChampionId=; botDifficulty=; canInviteOthers=; excludedPositionPreference=; id=; isBot=; isOwner=; isSpectator=; positionPreferences=; showPositionExcluder=; summonerInternalName=}",
      "type": "object"
    },
    "LolLobbyLobbyNotification": {
      "properties": "@{notificationId=; notificationReason=; summonerIds=; timestamp=}",
      "type": "object"
    },
    "LolLobbyLobbyParticipantDto": {
      "properties": "@{allowedChangeActivity=; allowedInviteOthers=; allowedKickOthers=; allowedStartActivity=; allowedToggleInvite=; autoFillEligible=; autoFillProtectedForPromos=; autoFillProtectedForSoloing=; autoFillProtectedForStreaking=; botChampionId=; botDifficulty=; botId=; firstPositionPreference=; isBot=; isLeader=; isSpectator=; primaryChampionPreference=; puuid=; ready=; secondPositionPreference=; secondaryChampionPreference=; showGhostedBanner=; summonerIconId=; summonerId=; summonerInternalName=; summonerLevel=; summonerName=; teamId=}",
      "type": "object"
    },
    "LolLobbyLobbyPartyRewardType": {
      "enum": "Ip Icon None",
      "type": "string"
    },
    "LolLobbyLobbyPartyRewards": {
      "properties": "@{isCustom=; isEnabled=; partyRewards=; queueId=}",
      "type": "object"
    },
    "LolLobbyLobbyPositionPreferences": {
      "properties": "@{firstPreference=; secondPreference=}",
      "type": "object"
    },
    "LolLobbyLobbyRemovedFromGameReason": {
      "enum": "None Kicked Disbanded Left ServiceError Other Timeout GameStartError ServiceShutdown",
      "type": "string"
    },
    "LolLobbyLobbyStatus": {
      "properties": "@{allowedPlayAgain=; customSpectatorPolicy=; invitedSummonerIds=; isCustom=; isLeader=; isPracticeTool=; isSpectator=; lobbyId=; memberSummonerIds=; queueId=}",
      "type": "object"
    },
    "LolLobbyLobbyTimer": {
      "properties": "@{countdown=; enabled=}",
      "type": "object"
    },
    "LolLobbyLoginSession": {
      "properties": "@{accountId=; connected=; idToken=; puuid=; state=; summonerId=; userAuthToken=; username=}",
      "type": "object"
    },
    "LolLobbyLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolLobbyMatchmakingDodgeState": {
      "enum": "Invalid PartyDodged StrangerDodged",
      "type": "string"
    },
    "LolLobbyMucJwtDto": {
      "properties": "@{channelClaim=; domain=; jwt=; targetRegion=}",
      "type": "object"
    },
    "LolLobbyOpenPartyToggleAnalytics": {
      "properties": "@{elapsedTime=; endTimestamp=; endTransition=; eventData=; eventTimestamp=; eventType=; finalState=; gameMode=; initialState=; numOfToggles=; partyId=; platformId=; playerId=; startTimestamp=; startTransition=}",
      "type": "object"
    },
    "LolLobbyPartiesInvitationAnalytics": {
      "properties": "@{eventData=; eventTimestamp=; eventType=; partyId=; platformId=; players=}",
      "type": "object"
    },
    "LolLobbyPartiesInvitationPlayerAnalytics": {
      "properties": "@{puuid=; role=; summonerId=}",
      "type": "object"
    },
    "LolLobbyPartyChatDto": {
      "properties": "@{jid=; mucJwtDto=}",
      "type": "object"
    },
    "LolLobbyPartyDto": {
      "properties": "@{activeRestrictions=; activityLocked=; activityResumeUtcMillis=; activityStartedUtcMillis=; botParticipants=; chat=; eligibilityHash=; eligibilityRestrictions=; eligibilityWarnings=; gameMode=; maxPartySize=; partyId=; partyType=; platformId=; players=; version=}",
      "type": "object"
    },
    "LolLobbyPartyEogStatusCategory": {
      "enum": "kLeft kPlayAgain kOnEog",
      "type": "string"
    },
    "LolLobbyPartyInviteAnalytics": {
      "properties": "@{eventData=; eventTimestamp=; eventType=; fromSummonerId=; gameMode=; partyId=; partyType=; platformId=; toSummonerId=}",
      "type": "object"
    },
    "LolLobbyPartyMemberDto": {
      "properties": "@{accountId=; canInvite=; gameMode=; inviteTimestamp=; invitedBySummonerId=; metadata=; partyId=; partyVersion=; platformId=; puuid=; ready=; role=; summonerId=; team=}",
      "type": "object"
    },
    "LolLobbyPartyMemberMetadataDto": {
      "properties": "@{championSelection=; playerSlots=; positionPref=; properties=; skinSelection=}",
      "type": "object"
    },
    "LolLobbyPartyMemberRoleEnum": {
      "enum": "LEADER MEMBER INVITED HOLD KICKED DECLINED NONE",
      "type": "string"
    },
    "LolLobbyPartyNotificationEnvelopeDto": {
      "properties": "@{player=; queueRestriction=}",
      "type": "object"
    },
    "LolLobbyPartyPresenceData": {
      "properties": "@{maxPlayers=; partyId=; queueId=; summoners=}",
      "type": "object"
    },
    "LolLobbyPartyQueueEligibilityDto": {
      "properties": "@{availableQueueIds=; partyRestrictions=}",
      "type": "object"
    },
    "LolLobbyPartyReward": {
      "properties": "@{premadeSize=; type=; value=}",
      "type": "object"
    },
    "LolLobbyPartyStatusDto": {
      "properties": "@{eogPlayers=; leftPlayers=; partySize=; readyPlayers=}",
      "type": "object"
    },
    "LolLobbyPlayerCollectionDto": {
      "properties": "@{players=}",
      "type": "object"
    },
    "LolLobbyPlayerDto": {
      "properties": "@{accountId=; createdAt=; currentParty=; eligibilityHash=; parties=; platformId=; puuid=; registration=; serverUtcMillis=; summonerId=; version=}",
      "type": "object"
    },
    "LolLobbyPlayerStatus": {
      "properties": "@{canInviteOthersAtEog=; currentLobbyStatus=; lastQueuedLobbyStatus=}",
      "type": "object"
    },
    "LolLobbyPlayerUpdateType": {
      "enum": "None Direct ServiceProxy RMS",
      "type": "string"
    },
    "LolLobbyPremadeMemberDto": {
      "properties": "@{displayName=; partyId=; puuid=; role=; summonerId=}",
      "type": "object"
    },
    "LolLobbyPremadePartyDto": {
      "properties": "@{commsEnabled=; partyId=; players=}",
      "type": "object"
    },
    "LolLobbyPremadeRelationshipAnalytics": {
      "properties": "@{eventData=; eventTimestamp=; eventType=; friendPlayers=; platformId=; premadePlayers=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolLobbyQueue": {
      "properties": "@{allowablePremadeSizes=; areFreeChampionsAllowed=; assetMutator=; category=; championsRequiredToPlay=; description=; detailedDescription=; gameMode=; gameTypeConfig=; id=; isRanked=; isTeamBuilderManaged=; lastToggledOffTime=; lastToggledOnTime=; mapId=; maxDivisionForPremadeSize2=; maxTierForPremadeSize2=; maximumParticipantListSize=; minLevel=; minimumParticipantListSize=; name=; numPlayersPerTeam=; queueAvailability=; queueRewards=; removalFromGameAllowed=; removalFromGameDelayMinutes=; shortName=; showPositionSelector=; spectatorEnabled=; type=}",
      "type": "object"
    },
    "LolLobbyQueueAvailability": {
      "enum": "Available PlatformDisabled DoesntMeetRequirements",
      "type": "string"
    },
    "LolLobbyQueueCustomGame": {
      "properties": "@{queueAvailability=}",
      "type": "object"
    },
    "LolLobbyQueueCustomGameSpectatorPolicy": {
      "enum": "NotAllowed LobbyAllowed FriendsAllowed AllAllowed",
      "type": "string"
    },
    "LolLobbyQueueGameCategory": {
      "enum": "None Custom PvP VersusAi Alpha",
      "type": "string"
    },
    "LolLobbyQueueGameTypeConfig": {
      "properties": "@{advancedLearningQuests=; allowTrades=; banMode=; banTimerDuration=; battleBoost=; crossTeamChampionPool=; deathMatch=; doNotRemove=; duplicatePick=; exclusivePick=; gameModeOverride=; id=; learningQuests=; mainPickTimerDuration=; maxAllowableBans=; name=; numPlayersPerTeamOverride=; onboardCoopBeginner=; pickMode=; postPickTimerDuration=; reroll=; teamChampionPool=}",
      "type": "object"
    },
    "LolLobbyQueueRestrictionDto": {
      "properties": "@{gatekeeperRestrictions=}",
      "type": "object"
    },
    "LolLobbyQueueReward": {
      "properties": "@{isChampionPointsEnabled=; isIpEnabled=; isXpEnabled=; partySizeIpRewards=}",
      "type": "object"
    },
    "LolLobbyQuickPlayPresetSlotDto": {
      "properties": "@{championId=; perks=; positionPreference=; skinId=; spell1=; spell2=}",
      "type": "object"
    },
    "LolLobbyRankedPositionInfoDTO": {
      "properties": "@{queue=; rank=; tier=}",
      "type": "object"
    },
    "LolLobbyRankedStatsUnsignedDTO": {
      "properties": "@{highestPreviousSeasonEndRank=; highestPreviousSeasonEndTier=; jwt=; queues=}",
      "type": "object"
    },
    "LolLobbyReadyDto": {
      "properties": "@{ready=}",
      "type": "object"
    },
    "LolLobbyReceivedInvitationDto": {
      "properties": "@{canAcceptInvitation=; fromSummonerId=; fromSummonerName=; gameConfig=; invitationId=; invitationType=; restrictions=; state=; timestamp=}",
      "type": "object"
    },
    "LolLobbyReceivedInvitationGameConfigDto": {
      "properties": "@{gameMode=; inviteGameType=; mapId=; queueId=}",
      "type": "object"
    },
    "LolLobbyRegistrationCredentials": {
      "properties": "@{gameClientVersion=; inventoryToken=; inventoryTokens=; playerTokens=; rankedOverviewToken=; simpleInventoryToken=; summonerToken=}",
      "type": "object"
    },
    "LolLobbyRegistrationStatus": {
      "properties": "@{complete=; errorCodes=}",
      "type": "object"
    },
    "LolLobbyRiotMessagingServiceMessage": {
      "properties": "@{payload=; resource=; service=; timestamp=; version=}",
      "type": "object"
    },
    "LolLobbyServiceProxyPayload": {
      "properties": "@{body=; method=; url=}",
      "type": "object"
    },
    "LolLobbySummoner": {
      "properties": "@{accountId=; displayName=; internalName=; profileIconId=; puuid=; summonerId=; summonerLevel=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderActionV1": {
      "properties": "@{actionId=; actorCellId=; championId=; completed=; duration=; type=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderAfkCheckStateV1": {
      "properties": "@{additionalInventoryTypes=; afkReady=; compressAfkCheckPayload=; inventoryDraft=; maxAfkMillis=; mucJwtDto=; remainingAfkMillis=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderBackwardsTransitionInfoV1": {
      "properties": "@{backwardsTransitionReason=; initiatorSummonerIds=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderBenchChampion": {
      "properties": "@{championId=; isPriority=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderCellV1": {
      "properties": "@{assignedPosition=; cellId=; championId=; championPickIntent=; entitledFeatureType=; nameVisibilityType=; obfuscatedPuuid=; obfuscatedSummonerId=; puuid=; skinId=; spell1Id=; spell2Id=; summonerId=; teamId=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderCellsV1": {
      "properties": "@{alliedTeam=; enemyTeam=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderCeremonyV1": {
      "properties": "@{duration=; name=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderChampSelectAction": {
      "properties": "@{actorCellId=; championId=; completed=; id=; isAllyAction=; isInProgress=; type=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderChampSelectChatRoomDetails": {
      "properties": "@{mucJwtDto=; multiUserChatId=; multiUserChatPassword=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderChampSelectDevPanelData": {
      "properties": "@{counter=; dtoIndex=; queueId=; teamIdSuffix=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderChampSelectMySelection": {
      "properties": "@{selectedSkinId=; spell1Id=; spell2Id=; wardSkinId=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderChampSelectPlayerSelection": {
      "properties": "@{assignedPosition=; cellId=; championId=; championPickIntent=; entitledFeatureType=; nameVisibilityType=; obfuscatedPuuid=; obfuscatedSummonerId=; playerType=; puuid=; selectedSkinId=; spell1Id=; spell2Id=; summonerId=; team=; wardSkinId=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderChampSelectSession": {
      "properties": "@{actions=; allowBattleBoost=; allowDuplicatePicks=; allowLockedEvents=; allowRerolling=; allowSkinSelection=; benchChampions=; benchEnabled=; boostableSkinCount=; chatDetails=; counter=; entitledFeatureState=; gameId=; hasSimultaneousBans=; hasSimultaneousPicks=; isSpectating=; localPlayerCellId=; lockedEventIndex=; myTeam=; pickOrderSwaps=; recoveryCounter=; rerollsRemaining=; skipChampionSelect=; theirTeam=; timer=; trades=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderChampSelectSwapContract": {
      "properties": "@{cellId=; id=; state=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderChampSelectSwapState": {
      "enum": "AVAILABLE BUSY INVALID RECEIVED SENT",
      "type": "string"
    },
    "LolLobbyTeamBuilderChampSelectTimer": {
      "properties": "@{adjustedTimeLeftInPhase=; internalNowInEpochMs=; isInfinite=; phase=; totalTimeInPhase=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderChampSelectTradeContract": {
      "properties": "@{cellId=; id=; state=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderChampSelectTradeState": {
      "enum": "AVAILABLE BUSY INVALID RECEIVED SENT",
      "type": "string"
    },
    "LolLobbyTeamBuilderChampionBenchChampionV1": {
      "properties": "@{championId=; isPriority=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderChampionBenchStateV1": {
      "properties": "@{benchChampions=; benchEnabled=; championIds=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderChampionSelectPreferences": {
      "properties": "@{skins=; spells=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderChampionSelectStateV1": {
      "properties": "@{actionSetList=; allowDuplicatePicks=; allowOptingOutOfBanning=; allowSkinSelection=; battleBoostState=; cells=; ceremoniesByActionSetIndex=; championBenchState=; currentActionSetIndex=; currentTimeRemainingMillis=; currentTotalTimeMillis=; entitledFeatureState=; inventoryDraft=; isSpectating=; lcuSkipsSendingLoadoutsGco=; localPlayerCellId=; lockedEventsState=; pickIntentClearedReason=; pickOrderSwaps=; rerollState=; skipChampionSelect=; subphase=; teamChatRoomId=; teamId=; trades=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderCountdownTimer": {
      "properties": "@{counter=; phaseName=; timer=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderEntitledFeatureState": {
      "properties": "@{additionalRerolls=; unlockedSkinIds=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderEntitledFeatureStateV1": {
      "properties": "@{additionalRerolls=; unlockedSkinsState=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderGameModeSpellList": {
      "properties": "@{spells=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderGameflowGameClient": {
      "properties": "@{running=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderGameflowGameMap": {
      "properties": "@{perPositionDisallowedSummonerSpells=; perPositionRequiredSummonerSpells=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderGameflowSession": {
      "properties": "@{gameClient=; map=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderGatekeeperRestricted": {
      "properties": "@{gatekeeperRestrictions=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderGatekeeperRestriction": {
      "properties": "@{payload=; queueId=; reason=; remainingMillis=; summonerId=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderLeaverBusterAbandoned": {
      "properties": "@{abandonerName=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderLobby": {
      "properties": "@{allowablePremadeSizes=; autoFillEligible=; autoFillProtectedForPromos=; autoFillProtectedForStreaking=; canStartMatchmaking=; invitationId=; invitations=; isTeamBuilderManaged=; localMember=; members=; mucJwtDto=; multiUserChatId=; multiUserChatPassword=; premadeSizeAllowed=; queueId=; removalReason=; requiredPositionCoverageMet=; showPositionExcluder=; showPositionSelector=; specifiablePositionPreferences=; wasKicked=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderLobbyCountdownTimer": {
      "properties": "@{counter=; phaseName=; timer=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderLobbyInvitation": {
      "properties": "@{invitationMetaData=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderLobbyMember": {
      "properties": "@{autoFillEligible=; autoFillProtectedForPromos=; autoFillProtectedForSoloing=; autoFillProtectedForStreaking=; canInviteOthers=; excludedPositionPreference=; id=; isOwner=; positionPreferences=; showPositionExcluder=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderLobbyPositionPreferences": {
      "properties": "@{firstPreference=; secondPreference=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderLobbyPositionPreferencesV2": {
      "properties": "@{excludedPreference=; firstPreference=; secondPreference=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderLobbyRemovedFromGameReason": {
      "enum": "None Kicked Disbanded Left ServiceError Other Timeout GameStartError ServiceShutdown",
      "type": "string"
    },
    "LolLobbyTeamBuilderLockedEventsStateV1": {
      "properties": "@{allowLockedEvents=; lockedEventIndex=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderLoginSession": {
      "properties": "@{accountId=; connected=; state=; summonerId=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderLoginSessionState": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolLobbyTeamBuilderMatchmakingDodgeData": {
      "properties": "@{dodgerId=; state=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderMatchmakingDodgeState": {
      "enum": "Invalid PartyDodged StrangerDodged TournamentDodged",
      "type": "string"
    },
    "LolLobbyTeamBuilderMatchmakingDodgeWarning": {
      "enum": "None Warning Penalty",
      "type": "string"
    },
    "LolLobbyTeamBuilderMatchmakingLowPriorityData": {
      "properties": "@{bustedLeaverAccessToken=; penalizedSummonerIds=; penaltyTime=; penaltyTimeRemaining=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderMatchmakingReadyCheckResource": {
      "properties": "@{declinerIds=; dodgeWarning=; playerResponse=; state=; timer=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderMatchmakingReadyCheckResponse": {
      "enum": "None Accepted Declined",
      "type": "string"
    },
    "LolLobbyTeamBuilderMatchmakingReadyCheckState": {
      "enum": "Invalid InProgress EveryoneReady StrangerNotReady PartyNotReady Error",
      "type": "string"
    },
    "LolLobbyTeamBuilderMatchmakingSearch": {
      "properties": "@{searchState=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderMatchmakingSearchErrorResource": {
      "properties": "@{errorType=; id=; message=; penalizedSummonerId=; penaltyTimeRemaining=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderMatchmakingSearchResource": {
      "properties": "@{dodgeData=; errors=; estimatedQueueTime=; isCurrentlyInQueue=; lobbyId=; lowPriorityData=; queueId=; readyCheck=; searchState=; timeInQueue=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderMatchmakingSearchState": {
      "enum": "Invalid AbandonedLowPriorityQueue Canceled Searching Found Error ServiceError ServiceShutdown",
      "type": "string"
    },
    "LolLobbyTeamBuilderMucJwtDto": {
      "properties": "@{channelClaim=; domain=; jwt=; targetRegion=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderPickOrderSwapV1": {
      "properties": "@{cellId=; id=; state=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderQueue": {
      "properties": "@{allowablePremadeSizes=; areFreeChampionsAllowed=; assetMutator=; category=; championsRequiredToPlay=; description=; detailedDescription=; gameMode=; gameTypeConfig=; id=; isRanked=; isTeamBuilderManaged=; lastToggledOffTime=; lastToggledOnTime=; mapId=; maximumParticipantListSize=; minLevel=; minimumParticipantListSize=; name=; numPlayersPerTeam=; queueAvailability=; queueRewards=; removalFromGameAllowed=; removalFromGameDelayMinutes=; shortName=; showPositionSelector=; spectatorEnabled=; type=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderQueueAvailability": {
      "enum": "Available PlatformDisabled DoesntMeetRequirements",
      "type": "string"
    },
    "LolLobbyTeamBuilderQueueGameCategory": {
      "enum": "None Custom PvP VersusAi Alpha",
      "type": "string"
    },
    "LolLobbyTeamBuilderQueueGameTypeConfig": {
      "properties": "@{advancedLearningQuests=; allowPickOrderSwaps=; allowTrades=; banMode=; banTimerDuration=; battleBoost=; crossTeamChampionPool=; deathMatch=; doNotRemove=; duplicatePick=; exclusivePick=; id=; learningQuests=; mainPickTimerDuration=; maxAllowableBans=; name=; onboardCoopBeginner=; pickMode=; postPickTimerDuration=; reroll=; teamChampionPool=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderQueueReward": {
      "properties": "@{isChampionPointsEnabled=; isIpEnabled=; isXpEnabled=; partySizeIpRewards=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderRerollStateV1": {
      "properties": "@{allowRerolling=; rerollsRemaining=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderSettingCategoryResource": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderTBDMatchmakingState": {
      "properties": "@{backwardsTransitionReason=; estimatedMatchmakingTimeMillis=; timeInMatchmakingMillis=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderTbLobbyStateResource": {
      "properties": "@{afkCheckState=; championSelectState=; counter=; gameId=; matchmakingState=; phaseName=; queueId=; recoveryCounter=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderTbRemovedFromServiceNotification": {
      "properties": "@{backwardsTransitionInfo=; reason=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderTbdInventory": {
      "properties": "@{allChampionIds=; disabledChampionIds=; initialSpellIds=; lastSelectedSkinIdByChampionId=; skinIds=; spellIds=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderTeamBoost": {
      "properties": "@{availableSkins=; ipReward=; ipRewardForPurchaser=; price=; skinUnlockMode=; summonerId=; unlocked=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderTeamBuilderBoostInfo": {
      "properties": "@{activatorCellId=; allowBattleBoost=; battleBoostActivated=; boostableSkinCount=; cost=; unlockedSkinIds=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderTeambuilderLeagueEdgeResponse": {
      "properties": "@{payload=; status=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderTradeV1": {
      "properties": "@{cellId=; id=; state=}",
      "type": "object"
    },
    "LolLobbyTeamBuilderUnlockedSkinsStateV1": {
      "properties": "@{unlockedSkinIds=}",
      "type": "object"
    },
    "LolLobbyUserInfoToken": {
      "properties": "@{userInfo=}",
      "type": "object"
    },
    "LolLobbyUserResource": {
      "properties": "@{lol=; summonerId=}",
      "type": "object"
    },
    "LolLoginAccessToken": {
      "properties": "@{expiry=; scopes=; token=}",
      "type": "object"
    },
    "LolLoginAccountStateResource": {
      "properties": "@{state=}",
      "type": "object"
    },
    "LolLoginAccountStateType": {
      "enum": "CREATING ENABLED TRANSFERRING_OUT TRANSFERRING_IN TRANSFERRED_OUT GENERATING",
      "type": "string"
    },
    "LolLoginAuthorization": {
      "properties": "@{currentAccountId=; currentPlatformId=; subject=}",
      "type": "object"
    },
    "LolLoginConfigReadinessEnum": {
      "enum": "NotReady Ready Disabled",
      "type": "string"
    },
    "LolLoginConfigStatus": {
      "properties": "@{readiness=}",
      "type": "object"
    },
    "LolLoginConfigType": {
      "enum": "public player",
      "type": "string"
    },
    "LolLoginCrashReportingEnvironment": {
      "properties": "@{environment=; userId=; userName=}",
      "type": "object"
    },
    "LolLoginIdToken": {
      "properties": "@{expiry=; token=}",
      "type": "object"
    },
    "LolLoginLcdsResponse": {
      "properties": "@{body=; typeName=}",
      "type": "object"
    },
    "LolLoginLcdsServiceProxyResponse": {
      "properties": "@{compressedPayload=; messageId=; methodName=; payload=; serviceName=; status=}",
      "type": "object"
    },
    "LolLoginLeagueSessionStatus": {
      "enum": "UNINITIALIZED INITIALIZED EXPIRED DUPLICATED ANTI_ADDICTION_EXPIRED",
      "type": "string"
    },
    "LolLoginLeagueSessionTokenEnvelope": {
      "properties": "@{logoutOnFailure=; token=}",
      "type": "object"
    },
    "LolLoginLoginConnectionMode": {
      "enum": "Preparing Legacy Partner RiotClient",
      "type": "string"
    },
    "LolLoginLoginConnectionState": {
      "properties": "@{isPartnerRiotClient=; isUsingDeveloperAuthToken=; mode=}",
      "type": "object"
    },
    "LolLoginLoginError": {
      "properties": "@{description=; id=; messageId=}",
      "type": "object"
    },
    "LolLoginLoginQueue": {
      "properties": "@{approximateWaitTimeSeconds=; estimatedPositionInQueue=; maxDisplayedPosition=; maxDisplayedWaitTimeSeconds=}",
      "type": "object"
    },
    "LolLoginLoginSession": {
      "properties": "@{accountId=; connected=; error=; idToken=; isInLoginQueue=; isNewPlayer=; puuid=; state=; summonerId=; userAuthToken=; username=}",
      "type": "object"
    },
    "LolLoginLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolLoginLoginSessionWallet": {
      "properties": "@{ip=; rp=}",
      "type": "object"
    },
    "LolLoginPlatformGeneratedCredentials": {
      "properties": "@{password=; username=}",
      "type": "object"
    },
    "LolLoginRSOConfigReadyState": {
      "properties": "@{ready=}",
      "type": "object"
    },
    "LolLoginRSOPlayerCredentials": {
      "properties": "@{password=; platformId=; username=}",
      "type": "object"
    },
    "LolLoginSummonerCreatedResource": {
      "properties": "@{summonerId=}",
      "type": "object"
    },
    "LolLoginSummonerSessionResource": {
      "properties": "@{displayName=; isNewPlayer=; summonerId=}",
      "type": "object"
    },
    "LolLoginUsernameAndPassword": {
      "properties": "@{password=; username=}",
      "type": "object"
    },
    "LolLootAccountIdAndSummonerId": {
      "properties": "@{summonerId=}",
      "type": "object"
    },
    "LolLootCelebrationType": {
      "enum": "NONE TOAST FULLSCREEN",
      "type": "string"
    },
    "LolLootCollectionsChampionMinimal": {
      "properties": "@{id=; ownership=}",
      "type": "object"
    },
    "LolLootCollectionsChampionSkinMinimal": {
      "properties": "@{championId=; id=; name=; ownership=; splashPath=; tilePath=}",
      "type": "object"
    },
    "LolLootCollectionsEmote": {
      "properties": "@{itemId=; ownershipType=}",
      "type": "object"
    },
    "LolLootCollectionsOwnership": {
      "properties": "@{loyaltyReward=; owned=; rental=; xboxGPReward=}",
      "type": "object"
    },
    "LolLootCollectionsRental": {
      "properties": "@{rented=}",
      "type": "object"
    },
    "LolLootCollectionsStatstone": {
      "properties": "@{itemId=; ownershipType=}",
      "type": "object"
    },
    "LolLootCollectionsSummonerIcon": {
      "properties": "@{itemId=}",
      "type": "object"
    },
    "LolLootCollectionsWardSkin": {
      "properties": "@{id=; name=; ownership=; wardImagePath=; wardShadowImagePath=}",
      "type": "object"
    },
    "LolLootContextMenu": {
      "properties": "@{actionType=; enabled=; essenceQuantity=; essenceType=; name=; recipeContextMenuAction=; recipeDescription=; requiredOthers=; requiredOthersCount=; requiredOthersName=; requiredTokens=}",
      "type": "object"
    },
    "LolLootCosmeticsTFTDamageSkin": {
      "properties": "@{contentId=; description=; f2p=; groupId=; groupName=; itemId=; level=; loadoutsIcon=; loyalty=; name=; owned=; purchaseDate=; rarityValue=; selected=; upgrades=}",
      "type": "object"
    },
    "LolLootCosmeticsTFTDamageSkinViewModel": {
      "properties": "@{contentId=; description=; f2p=; groupId=; groupName=; isRecentItem=; itemId=; level=; loadoutsIcon=; loyalty=; name=; owned=; purchaseDate=; rarityValue=; selected=; upgrades=}",
      "type": "object"
    },
    "LolLootCosmeticsTFTMapSkinViewModel": {
      "properties": "@{description=; f2p=; itemId=; loadoutsIcon=; loyalty=; name=; owned=; selected=}",
      "type": "object"
    },
    "LolLootCounter": {
      "properties": "@{direction=; groupId=; id=; name=; startValue=}",
      "type": "object"
    },
    "LolLootCounterInstance": {
      "properties": "@{counterId=; counterValue=; groupId=; ownerId=; productId=}",
      "type": "object"
    },
    "LolLootCurrencyConfiguration": {
      "properties": "@{currenciesUsingCapWallets=}",
      "type": "object"
    },
    "LolLootEntityInstance": {
      "properties": "@{counters=; groupId=; milestones=}",
      "type": "object"
    },
    "LolLootGameDataSummonerEmote": {
      "properties": "@{description=; id=; inventoryIcon=; name=}",
      "type": "object"
    },
    "LolLootGameDataSummonerIcon": {
      "properties": "@{id=; imagePath=; title=}",
      "type": "object"
    },
    "LolLootGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolLootGameflowSession": {
      "properties": "@{phase=}",
      "type": "object"
    },
    "LolLootGrantStatus": {
      "enum": "PENDING_FULFILLMENT PENDING_SELECTION FULFILLED FAILED",
      "type": "string"
    },
    "LolLootGrantorDescription": {
      "properties": "@{appName=; entityId=}",
      "type": "object"
    },
    "LolLootGroup": {
      "properties": "@{counters=; id=; milestones=; name=; productId=; repeat=}",
      "type": "object"
    },
    "LolLootInventoryOwnership": {
      "enum": "OWNED RENTED F2P",
      "type": "string"
    },
    "LolLootItemKey": {
      "properties": "@{inventoryType=; itemId=}",
      "type": "object"
    },
    "LolLootItemOwnershipStatus": {
      "enum": "NONE FREE RENTAL OWNED",
      "type": "string"
    },
    "LolLootLoginDataPacket": {
      "properties": "@{simpleMessages=}",
      "type": "object"
    },
    "LolLootLoginSession": {
      "properties": "@{accountId=; state=; summonerId=}",
      "type": "object"
    },
    "LolLootLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolLootLoginSimpleMessage": {
      "properties": "@{accountId=; msgId=; params=; type=}",
      "type": "object"
    },
    "LolLootLootBundleContentGdsResource": {
      "properties": "@{localizedDescription=}",
      "type": "object"
    },
    "LolLootLootBundleGdsResource": {
      "properties": "@{contents=; description=; descriptionLong=; id=; image=}",
      "type": "object"
    },
    "LolLootLootDataGdsResource": {
      "properties": "@{LootBundles=; LootItems=; LootRecipes=; LootTables=}",
      "type": "object"
    },
    "LolLootLootDescription": {
      "properties": "@{childLootTableNames=; childrenDescriptions=; imagePath=; localizedDescription=; localizedDescriptionLong=; lootName=}",
      "type": "object"
    },
    "LolLootLootDropTableEntryGdsResource": {
      "properties": "@{localizedDescription=; lootId=}",
      "type": "object"
    },
    "LolLootLootGrantNotification": {
      "properties": "@{accountId=; championId=; gameId=; id=; lootName=; messageKey=; msgId=; playerGrade=; playerId=}",
      "type": "object"
    },
    "LolLootLootItem": {
      "properties": "@{asset=; displayCategories=; expiryTime=; lootName=; rarity=; rentalGames=; rentalSeconds=; storeItemId=; tags=; type=; upgradeLootName=; value=}",
      "type": "object"
    },
    "LolLootLootItemGdsResource": {
      "properties": "@{autoRedeem=; description=; endDate=; id=; image=; lifetimeMax=; mappedStoreId=; name=; rarity=; recipeMenuActive=; recipeMenuSubtitle=; recipeMenuTitle=; startDate=; type=}",
      "type": "object"
    },
    "LolLootLootMilestone": {
      "properties": "@{id=; rewards=; threshold=}",
      "type": "object"
    },
    "LolLootLootMilestoneClaimStatus": {
      "enum": "NOT_STARTED IN_PROGRESS COMPLETED FAILED",
      "type": "string"
    },
    "LolLootLootMilestoneRepeat": {
      "properties": "@{multiplier=; repeatCount=; repeatScope=}",
      "type": "object"
    },
    "LolLootLootMilestoneReward": {
      "properties": "@{inventoryType=; itemId=; itemInstanceId=; lootItem=; quantity=; rewardGroupId=; rewardType=}",
      "type": "object"
    },
    "LolLootLootMilestones": {
      "properties": "@{active=; endDate=; errorCachingMilestoneSet=; id=; lootItems=; milestones=; progressionConfigId=; recipes=; repeat=; startDate=; storeGroupTitle=}",
      "type": "object"
    },
    "LolLootLootMilestonesClaimResponse": {
      "properties": "@{claimedMilestones=; lootMilestoneSetId=; status=}",
      "type": "object"
    },
    "LolLootLootMilestonesCounter": {
      "properties": "@{completedLoops=; counterValue=; lootMilestonesId=; readyToClaimMilestones=}",
      "type": "object"
    },
    "LolLootLootMilestonesDataGdsResource": {
      "properties": "@{endDate=; id=; ledgerConfig=; recipes=; startDate=; storeGroupTitle=}",
      "type": "object"
    },
    "LolLootLootOddsResponse": {
      "properties": "@{children=; dropRate=; label=; lootId=; lootOrder=; parentId=; quantity=; query=}",
      "type": "object"
    },
    "LolLootLootOutputGdsResource": {
      "properties": "@{localizedDescription=; lootId=}",
      "type": "object"
    },
    "LolLootLootRarity": {
      "enum": "Default Epic Legendary Mythic Ultimate",
      "type": "string"
    },
    "LolLootLootRecipeGdsResource": {
      "properties": "@{contextMenuText=; description=; hasVisibleLootOdds=; id=; imagePath=; introVideoPath=; loopVideoPath=; outputs=; outroVideoPath=; requirementText=}",
      "type": "object"
    },
    "LolLootLootTableGdsResource": {
      "properties": "@{description=; descriptionLong=; dropChance=; id=; image=}",
      "type": "object"
    },
    "LolLootLootType": {
      "enum": "Chest Currency Material WardSkin Skin Skin_Rental SummonerIcon Companion Egg Egg_Color Statstone Statstone_Shard Boost SkinBorder TFT_Map_Skin TFT_Damage_Skin",
      "type": "string"
    },
    "LolLootMassDisenchantClientConfig": {
      "properties": "@{enabled=; maxLootItemsSizeMassCraft=}",
      "type": "object"
    },
    "LolLootMilestone": {
      "properties": "@{counterId=; groupId=; id=; name=; properties=; triggerValue=}",
      "type": "object"
    },
    "LolLootMilestoneInstance": {
      "properties": "@{counterId=; groupId=; milestoneId=; ownerId=; productId=; repeatSequence=; triggerValue=; triggered=}",
      "type": "object"
    },
    "LolLootMilestoneLootItemRewardGdsResource": {
      "properties": "@{internalName=}",
      "type": "object"
    },
    "LolLootMilestonesProgressionConfigRepeatGdsResource": {
      "properties": "@{name=}",
      "type": "object"
    },
    "LolLootMilestonesProgressionCounterGdsResource": {
      "properties": "@{direction=; id=; name=; startValue=}",
      "type": "object"
    },
    "LolLootMilestonesProgressionGroupRepeatGdsResource": {
      "properties": "@{Count=; Multiplier=; Scope=}",
      "type": "object"
    },
    "LolLootMilestonesRecipeGdsResource": {
      "properties": "@{name=}",
      "type": "object"
    },
    "LolLootPlayerLoot": {
      "properties": "@{asset=; count=; disenchantLootName=; disenchantValue=; displayCategories=; expiryTime=; isNew=; isRental=; itemDesc=; itemStatus=; localizedDescription=; localizedName=; localizedRecipeSubtitle=; localizedRecipeTitle=; lootId=; lootName=; parentItemStatus=; parentStoreItemId=; rarity=; redeemableStatus=; refId=; rentalGames=; rentalSeconds=; shadowPath=; splashPath=; storeItemId=; tags=; tilePath=; type=; upgradeEssenceName=; upgradeEssenceValue=; upgradeLootName=; value=}",
      "type": "object"
    },
    "LolLootPlayerLootDelta": {
      "properties": "@{deltaCount=; playerLoot=}",
      "type": "object"
    },
    "LolLootPlayerLootMap": {
      "properties": "@{playerLoot=; version=}",
      "type": "object"
    },
    "LolLootPlayerLootNotification": {
      "properties": "@{acknowledged=; count=; id=}",
      "type": "object"
    },
    "LolLootPlayerLootUpdate": {
      "properties": "@{added=; redeemed=; removed=}",
      "type": "object"
    },
    "LolLootProgressionConfigGdsResource": {
      "properties": "@{counters=; id=; milestones=; name=; repeat=}",
      "type": "object"
    },
    "LolLootProgressionConfigMilestoneGdsResource": {
      "properties": "@{counter=; id=; name=; properties=; triggerValue=}",
      "type": "object"
    },
    "LolLootProgressionConfigMilestonePropertiesGdsResource": {
      "properties": "@{description=; id=; name=; rewardStrategy=; rewards=}",
      "type": "object"
    },
    "LolLootProgressionConfigMilestoneRewardGdsResource": {
      "properties": "@{id=; legacyLootItem=; lootItemToGrant=; quantity=; rewardType=}",
      "type": "object"
    },
    "LolLootQueryEvaluatedLootItem": {
      "properties": "@{localizedName=; lootName=}",
      "type": "object"
    },
    "LolLootRMSPayload": {
      "properties": "@{affinities=; productId=}",
      "type": "object"
    },
    "LolLootRecipeMenuConfig": {
      "properties": "@{alwaysShowLootIds=; enabled=; lootItemsUsingBreakoutRecipeMenu=}",
      "type": "object"
    },
    "LolLootRecipeMetadata": {
      "properties": "@{bonusDescriptions=; guaranteedDescriptions=; tooltipsDisabled=}",
      "type": "object"
    },
    "LolLootRecipeOutput": {
      "properties": "@{lootName=; quantity=}",
      "type": "object"
    },
    "LolLootRecipeSlot": {
      "properties": "@{lootIds=; quantity=; slotNumber=; tags=}",
      "type": "object"
    },
    "LolLootRecipeWithMilestones": {
      "properties": "@{contextMenuText=; crafterName=; description=; displayCategories=; imagePath=; introVideoPath=; loopVideoPath=; lootMilestoneIds=; metadata=; outputs=; outroVideoPath=; recipeName=; requirementText=; slots=; type=}",
      "type": "object"
    },
    "LolLootRedeemableStatus": {
      "enum": "UNKNOWN REDEEMABLE REDEEMABLE_RENTAL NOT_REDEEMABLE NOT_REDEEMABLE_RENTAL ALREADY_OWNED ALREADY_RENTED CHAMPION_NOT_OWNED SKIN_NOT_OWNED",
      "type": "string"
    },
    "LolLootRegionLocale": {
      "properties": "@{locale=; region=}",
      "type": "object"
    },
    "LolLootRepeat": {
      "properties": "@{count=; multiplier=; scope=}",
      "type": "object"
    },
    "LolLootRequestDTO-SelectionRequestDTO": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolLootRequestDTO-vector-SelectionRequestDTO": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolLootRequestMetadataDTO": {
      "properties": "@{transactionId=}",
      "type": "object"
    },
    "LolLootResponseDTO-SvcRewardGrant": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolLootResponseDTO-map-RewardGroupId-SelectGrantStatus": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolLootResponseDTO-vector-SvcRewardGrant": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolLootResponseDTO-vector-SvcRewardGroup": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolLootResponseMetadataDTO": {
      "properties": "",
      "type": "object"
    },
    "LolLootReward": {
      "properties": "@{fulfillmentSource=; id=; itemId=; itemType=; localizations=; media=; quantity=}",
      "type": "object"
    },
    "LolLootRewardGrant": {
      "properties": "@{info=; rewardGroup=}",
      "type": "object"
    },
    "LolLootRewardStatus": {
      "enum": "PENDING FULFILLED FAILED",
      "type": "string"
    },
    "LolLootRewardStrategy": {
      "enum": "ALL RANDOM SELECTION",
      "type": "string"
    },
    "LolLootRewardsConfig": {
      "properties": "@{GrantFiltering=}",
      "type": "object"
    },
    "LolLootSelectGrantStatusResponse": {
      "enum": "SELECTED FAILED",
      "type": "string"
    },
    "LolLootSelectionRequestDTO": {
      "properties": "@{grantId=; rewardGroupId=; selections=}",
      "type": "object"
    },
    "LolLootSelectionStrategyConfig": {
      "properties": "@{maxSelectionsAllowed=; minSelectionsAllowed=}",
      "type": "object"
    },
    "LolLootSummoner": {
      "properties": "@{summonerLevel=}",
      "type": "object"
    },
    "LolLootSvcRewardGrant": {
      "properties": "@{dateCreated=; grantElements=; granteeId=; grantorDescription=; id=; messageParameters=; rewardGroupId=; selectedIds=; status=; viewed=}",
      "type": "object"
    },
    "LolLootSvcRewardGrantElement": {
      "properties": "@{elementId=; fulfillmentSource=; itemId=; itemType=; localizations=; media=; quantity=; status=}",
      "type": "object"
    },
    "LolLootSvcRewardGroup": {
      "properties": "@{active=; celebrationType=; childRewardGroupIds=; id=; localizations=; media=; productId=; rewardStrategy=; rewards=; selectionStrategyConfig=; types=}",
      "type": "object"
    },
    "LolLootTFTDamageSkinGroupViewModel": {
      "properties": "@{groupId=; groupName=; items=; numAvailable=; numOwned=}",
      "type": "object"
    },
    "LolLootTFTDamageSkinGroupedViewModel": {
      "properties": "@{defaultItemId=; groups=; selectedLoadoutItem=}",
      "type": "object"
    },
    "LolLootTFTMapSkinGroupViewModel": {
      "properties": "@{items=}",
      "type": "object"
    },
    "LolLootTFTMapSkinGroupedViewModel": {
      "properties": "@{defaultItemId=; groups=; selectedLoadoutItem=}",
      "type": "object"
    },
    "LolLootVerboseLootOddsResponse": {
      "properties": "@{chanceToContain=; checksOwnership=; guaranteedToContain=; hasPityRules=; lootItem=; recipeName=}",
      "type": "object"
    },
    "LolLoyaltyAccessToken": {
      "properties": "@{token=}",
      "type": "object"
    },
    "LolLoyaltyGlobalRewards": {
      "properties": "@{allChampions=}",
      "type": "object"
    },
    "LolLoyaltyInventoryDTO": {
      "properties": "@{items=}",
      "type": "object"
    },
    "LolLoyaltyInventoryItemDTO": {
      "properties": "@{inventoryType=; loyalty=}",
      "type": "object"
    },
    "LolLoyaltyInventoryResponseDTO": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolLoyaltyLoginSession": {
      "properties": "@{accountId=; puuid=; state=; summonerId=}",
      "type": "object"
    },
    "LolLoyaltyLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolLoyaltyLoyaltyRewards": {
      "properties": "@{championIds=; freeRewardedChampionsCount=; freeRewardedSkinsCount=; global=; ipBoost=; loyaltySources=; loyaltyTFTCompanionCount=; loyaltyTFTDamageSkinCount=; loyaltyTFTMapSkinCount=; skinIds=; xpBoost=}",
      "type": "object"
    },
    "LolLoyaltyLoyaltyRewardsSimplified": {
      "properties": "@{championIds=; freeRewardedChampionsCount=; freeRewardedSkinsCount=; global=; ipBoost=; loyaltySources=; loyaltyTFTCompanionCount=; loyaltyTFTDamageSkinCount=; loyaltyTFTMapSkinCount=; skinIds=; xpBoost=}",
      "type": "object"
    },
    "LolLoyaltyLoyaltyStatus": {
      "enum": "LEGACY REWARDS_GRANT EXPIRY CHANGE REVOKE DISABLED",
      "type": "string"
    },
    "LolLoyaltyLoyaltyStatusNotification": {
      "properties": "@{reloadInventory=; rewards=; status=}",
      "type": "object"
    },
    "LolLoyaltyPlayerNotification": {
      "properties": "@{critical=; detailKey=; iconUrl=; source=; state=; titleKey=; type=}",
      "type": "object"
    },
    "LolLoyaltyRiotMessagingServiceMessage": {
      "properties": "@{payload=; resource=; service=; timestamp=; version=}",
      "type": "object"
    },
    "LolLoyaltyRmsEntitlementPayload": {
      "properties": "@{entitlementTypeId=; itemId=; itemTypeId=; resourceOperation=}",
      "type": "object"
    },
    "LolMapsGameModeSpellList": {
      "properties": "@{spells=}",
      "type": "object"
    },
    "LolMapsMaps": {
      "properties": "@{assets=; categorizedContentBundles=; description=; gameMode=; gameModeDescription=; gameModeName=; gameModeShortName=; gameMutator=; id=; isDefault=; isRGM=; locStrings=; mapStringId=; name=; perPositionDisallowedSummonerSpells=; perPositionRequiredSummonerSpells=; platformId=; platformName=; properties=; tutorialCards=}",
      "type": "object"
    },
    "LolMapsTutorialCard": {
      "properties": "@{description=; footer=; header=; imagePath=}",
      "type": "object"
    },
    "LolMatchHistoryAcsEndPoint": {
      "properties": "@{url=}",
      "type": "object"
    },
    "LolMatchHistoryAcsPlayer": {
      "properties": "@{accountId=; platformId=}",
      "type": "object"
    },
    "LolMatchHistoryGAMHSMatchHistoryData": {
      "properties": "@{json=; metadata=}",
      "type": "object"
    },
    "LolMatchHistoryGAMHSMatchHistoryList": {
      "properties": "@{active_puuid=; games=}",
      "type": "object"
    },
    "LolMatchHistoryGAMHSMatchHistoryMetadata": {
      "properties": "@{data_version=; info_type=; match_id=; participants=; private=; product=; tags=; timestamp=}",
      "type": "object"
    },
    "LolMatchHistoryLoginSession": {
      "properties": "@{accountId=; idToken=; state=; summonerId=}",
      "type": "object"
    },
    "LolMatchHistoryLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolMatchHistoryMHSummoner": {
      "properties": "@{accountId=; displayName=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryEvent": {
      "properties": "@{assistingParticipantIds=; buildingType=; itemId=; killerId=; laneType=; monsterSubType=; monsterType=; participantId=; position=; skillSlot=; teamId=; timestamp=; towerType=; type=; victimId=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryGame": {
      "properties": "@{gameCreation=; gameCreationDate=; gameDuration=; gameId=; gameMode=; gameType=; gameVersion=; mapId=; participantIdentities=; participants=; platformId=; queueId=; seasonId=; teams=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryGameList": {
      "properties": "@{gameBeginDate=; gameCount=; gameEndDate=; gameIndexBegin=; gameIndexEnd=; games=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryList": {
      "properties": "@{accountId=; games=; platformId=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryParticipant": {
      "properties": "@{championId=; highestAchievedSeasonTier=; participantId=; spell1Id=; spell2Id=; stats=; teamId=; timeline=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryParticipantFrame": {
      "properties": "@{currentGold=; dominionScore=; jungleMinionsKilled=; level=; minionsKilled=; participantId=; position=; teamScore=; totalGold=; xp=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryParticipantIdentities": {
      "properties": "@{participantId=; player=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryParticipantIdentityPlayer": {
      "properties": "@{accountId=; currentAccountId=; currentPlatformId=; matchHistoryUri=; platformId=; profileIcon=; puuid=; summonerId=; summonerName=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryParticipantStatistics": {
      "properties": "@{assists=; causedEarlySurrender=; champLevel=; combatPlayerScore=; damageDealtToObjectives=; damageDealtToTurrets=; damageSelfMitigated=; deaths=; doubleKills=; earlySurrenderAccomplice=; firstBloodAssist=; firstBloodKill=; firstInhibitorAssist=; firstInhibitorKill=; firstTowerAssist=; firstTowerKill=; gameEndedInEarlySurrender=; gameEndedInSurrender=; goldEarned=; goldSpent=; inhibitorKills=; item0=; item1=; item2=; item3=; item4=; item5=; item6=; killingSprees=; kills=; largestCriticalStrike=; largestKillingSpree=; largestMultiKill=; longestTimeSpentLiving=; magicDamageDealt=; magicDamageDealtToChampions=; magicalDamageTaken=; neutralMinionsKilled=; neutralMinionsKilledEnemyJungle=; neutralMinionsKilledTeamJungle=; objectivePlayerScore=; participantId=; pentaKills=; perk0=; perk0Var1=; perk0Var2=; perk0Var3=; perk1=; perk1Var1=; perk1Var2=; perk1Var3=; perk2=; perk2Var1=; perk2Var2=; perk2Var3=; perk3=; perk3Var1=; perk3Var2=; perk3Var3=; perk4=; perk4Var1=; perk4Var2=; perk4Var3=; perk5=; perk5Var1=; perk5Var2=; perk5Var3=; perkPrimaryStyle=; perkSubStyle=; physicalDamageDealt=; physicalDamageDealtToChampions=; physicalDamageTaken=; playerScore0=; playerScore1=; playerScore2=; playerScore3=; playerScore4=; playerScore5=; playerScore6=; playerScore7=; playerScore8=; playerScore9=; quadraKills=; sightWardsBoughtInGame=; teamEarlySurrendered=; timeCCingOthers=; totalDamageDealt=; totalDamageDealtToChampions=; totalDamageTaken=; totalHeal=; totalMinionsKilled=; totalPlayerScore=; totalScoreRank=; totalTimeCrowdControlDealt=; totalUnitsHealed=; tripleKills=; trueDamageDealt=; trueDamageDealtToChampions=; trueDamageTaken=; turretKills=; unrealKills=; visionScore=; visionWardsBoughtInGame=; wardsKilled=; wardsPlaced=; win=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryPlayerChampMasteryDelta": {
      "properties": "@{grade=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryPlayerDelta": {
      "properties": "@{deltas=; originalAccountId=; originalPlatformId=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryPlayerGameDelta": {
      "properties": "@{champMastery=; gameId=; gamePlatformId=; leagueDelta=; platformDelta=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryPlayerLeagueDelta": {
      "properties": "@{leaguePointDelta=; miniSeriesProgress=; reason=; timestamp=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryPlayerPlatformDelta": {
      "properties": "@{compensationModeEnabled=; ipDelta=; timestamp=; xpDelta=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryPosition": {
      "properties": "@{x=; y=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryTeam": {
      "properties": "@{bans=; baronKills=; dominionVictoryScore=; dragonKills=; firstBaron=; firstBlood=; firstDargon=; firstInhibitor=; firstTower=; inhibitorKills=; riftHeraldKills=; teamId=; towerKills=; vilemawKills=; win=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryTeamBan": {
      "properties": "@{championId=; pickTurn=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryTimeline": {
      "properties": "@{creepsPerMinDeltas=; csDiffPerMinDeltas=; damageTakenDiffPerMinDeltas=; damageTakenPerMinDeltas=; goldPerMinDeltas=; lane=; participantId=; role=; xpDiffPerMinDeltas=; xpPerMinDeltas=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryTimelineFrame": {
      "properties": "@{events=; participantFrames=; timestamp=}",
      "type": "object"
    },
    "LolMatchHistoryMatchHistoryTimelineFrames": {
      "properties": "@{frames=}",
      "type": "object"
    },
    "LolMatchHistoryRecentlyPlayedSummoner": {
      "properties": "@{championId=; gameCreationDate=; gameId=; puuid=; summonerId=; summonerName=; teamId=}",
      "type": "object"
    },
    "LolMatchHistorySummoner": {
      "properties": "@{displayName=; puuid=}",
      "type": "object"
    },
    "LolMatchmakingGameflowGameData": {
      "properties": "@{queue=}",
      "type": "object"
    },
    "LolMatchmakingGameflowGameDodge": {
      "properties": "@{dodgeIds=; state=}",
      "type": "object"
    },
    "LolMatchmakingGameflowGameTypeConfig": {
      "properties": "@{reroll=}",
      "type": "object"
    },
    "LolMatchmakingGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolMatchmakingGameflowQueue": {
      "properties": "@{gameTypeConfig=}",
      "type": "object"
    },
    "LolMatchmakingGameflowSession": {
      "properties": "@{gameData=; gameDodge=; phase=}",
      "type": "object"
    },
    "LolMatchmakingLobbyStatus": {
      "properties": "@{allowedPlayAgain=; customSpectatorPolicy=; isCustom=; isLeader=; isSpectator=; lobbyId=; memberSummonerIds=; queueId=}",
      "type": "object"
    },
    "LolMatchmakingLoginSession": {
      "properties": "@{accountId=; connected=; state=; summonerId=}",
      "type": "object"
    },
    "LolMatchmakingLoginSessionState": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolMatchmakingMatchmakingDodgeData": {
      "properties": "@{dodgerId=; state=}",
      "type": "object"
    },
    "LolMatchmakingMatchmakingDodgeState": {
      "enum": "Invalid PartyDodged StrangerDodged TournamentDodged",
      "type": "string"
    },
    "LolMatchmakingMatchmakingDodgeWarning": {
      "enum": "None Warning Penalty",
      "type": "string"
    },
    "LolMatchmakingMatchmakingLowPriorityData": {
      "properties": "@{bustedLeaverAccessToken=; penalizedSummonerIds=; penaltyTime=; penaltyTimeRemaining=; reason=}",
      "type": "object"
    },
    "LolMatchmakingMatchmakingReadyCheckResource": {
      "properties": "@{declinerIds=; dodgeWarning=; playerResponse=; state=; suppressUx=; timer=}",
      "type": "object"
    },
    "LolMatchmakingMatchmakingReadyCheckResponse": {
      "enum": "None Accepted Declined",
      "type": "string"
    },
    "LolMatchmakingMatchmakingReadyCheckState": {
      "enum": "Invalid InProgress EveryoneReady StrangerNotReady PartyNotReady Error",
      "type": "string"
    },
    "LolMatchmakingMatchmakingSearchErrorResource": {
      "properties": "@{errorType=; id=; message=; penalizedSummonerId=; penaltyTimeRemaining=}",
      "type": "object"
    },
    "LolMatchmakingMatchmakingSearchResource": {
      "properties": "@{dodgeData=; errors=; estimatedQueueTime=; isCurrentlyInQueue=; lobbyId=; lowPriorityData=; queueId=; readyCheck=; searchState=; timeInQueue=}",
      "type": "object"
    },
    "LolMatchmakingMatchmakingSearchState": {
      "enum": "Invalid AbandonedLowPriorityQueue Canceled Searching Found Error ServiceError ServiceShutdown",
      "type": "string"
    },
    "LolMatchmakingPlayerStatus": {
      "properties": "@{currentLobbyStatus=; lastQueuedLobbyStatus=}",
      "type": "object"
    },
    "LolMatchmakingQueue": {
      "properties": "@{id=; isTeamBuilderManaged=}",
      "type": "object"
    },
    "LolMatchmakingQueueCustomGameSpectatorPolicy": {
      "enum": "NotAllowed LobbyAllowed FriendsAllowed AllAllowed",
      "type": "string"
    },
    "LolMissionsCollectionsChampion": {
      "properties": "@{freeToPlay=; id=; ownership=; skins=}",
      "type": "object"
    },
    "LolMissionsCollectionsChampionSkin": {
      "properties": "@{championId=; id=; ownership=}",
      "type": "object"
    },
    "LolMissionsCollectionsOwnership": {
      "properties": "@{loyaltyReward=; owned=; rental=; xboxGPReward=}",
      "type": "object"
    },
    "LolMissionsCollectionsRental": {
      "properties": "@{rented=}",
      "type": "object"
    },
    "LolMissionsCollectionsSummoner": {
      "properties": "@{summonerLevel=}",
      "type": "object"
    },
    "LolMissionsCollectionsSummonerIcons": {
      "properties": "@{icons=}",
      "type": "object"
    },
    "LolMissionsCollectionsWardSkin": {
      "properties": "@{id=; ownership=}",
      "type": "object"
    },
    "LolMissionsGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolMissionsGameflowSession": {
      "properties": "@{phase=}",
      "type": "object"
    },
    "LolMissionsGrantStatus": {
      "enum": "PENDING_FULFILLMENT PENDING_SELECTION FULFILLED",
      "type": "string"
    },
    "LolMissionsInventoryItemWithPayload": {
      "properties": "@{itemId=}",
      "type": "object"
    },
    "LolMissionsLoginSession": {
      "properties": "@{accountId=; platformId=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolMissionsLoyaltyStatus": {
      "enum": "LEGACY REWARDS_GRANT EXPIRY CHANGE REVOKE DISABLED",
      "type": "string"
    },
    "LolMissionsLoyaltyStatusNotification": {
      "properties": "@{status=}",
      "type": "object"
    },
    "LolMissionsMissionAsset": {
      "properties": "@{iconNeedsFrame=; internalName=; path=}",
      "type": "object"
    },
    "LolMissionsMissionsNotificationResource": {
      "properties": "@{backgroundUrl=; created=; critical=; data=; detailKey=; expires=; iconUrl=; id=; source=; state=; titleKey=; type=}",
      "type": "object"
    },
    "LolMissionsMissionsSettingsDataResource": {
      "properties": "@{selected_series=}",
      "type": "object"
    },
    "LolMissionsPlayerUpdateResponse": {
      "properties": "@{playerMissions=; playerSeries=}",
      "type": "object"
    },
    "LolMissionsPluginRegionLocaleChangedEvent": {
      "properties": "@{locale=}",
      "type": "object"
    },
    "LolMissionsRewardGrant": {
      "properties": "@{info=; rewardGroup=}",
      "type": "object"
    },
    "LolMissionsRewardGrantElement": {
      "properties": "@{fulfillmentSource=; id=; itemId=; itemType=; localizations=; media=; quantity=; rewardStatus=}",
      "type": "object"
    },
    "LolMissionsRewardGrantInfo": {
      "properties": "@{grantElements=; granteeId=; id=; rewardGroupId=; selectedIds=; status=; viewed=}",
      "type": "object"
    },
    "LolMissionsRewardGroup": {
      "properties": "@{active=; childRewardGroupIds=; id=; internalName=; localizations=; media=; productId=; rewardStrategy=; rewards=; selectionStrategyConfig=; types=}",
      "type": "object"
    },
    "LolMissionsRewardGroupsSelection": {
      "properties": "@{rewardGroups=}",
      "type": "object"
    },
    "LolMissionsRewardStatus": {
      "enum": "PENDING FULFILLED",
      "type": "string"
    },
    "LolMissionsRewardStrategy": {
      "enum": "ALL RANDOM SELECTION",
      "type": "string"
    },
    "LolMissionsRewardsProductConfig": {
      "properties": "@{enabled=; serviceUrl=}",
      "type": "object"
    },
    "LolMissionsSelectionStrategyConfig": {
      "properties": "@{maxSelectionsAllowed=; minSelectionsAllowed=}",
      "type": "object"
    },
    "LolMissionsSeriesOpt": {
      "properties": "@{option=; seriesId=}",
      "type": "object"
    },
    "LolMissionsSvcReward": {
      "properties": "@{fulfillmentSource=; id=; itemId=; localizations=; media=; quantity=}",
      "type": "object"
    },
    "LolMissionsTftOrb": {
      "properties": "@{missionId=; rewardLevel=; rewards=; status=; unlockTime=}",
      "type": "object"
    },
    "LolMissionsTftPaidBattlepass": {
      "properties": "@{activeMilestone=; bonuses=; info=; lastViewedMilestone=; lastViewedProgress=; milestones=; progressMissionId=; totalPointsEarned=}",
      "type": "object"
    },
    "LolMissionsTftPaidBattlepassInfo": {
      "properties": "@{description=; endDate=; media=; pcPurchaseRequirement=; premium=; premiumEntitlementId=; premiumTitle=; startDate=; title=}",
      "type": "object"
    },
    "LolMissionsTftPaidBattlepassMilestone": {
      "properties": "@{description=; iconImageUrl=; iconNeedsFrame=; internalName=; isBonus=; isKeystone=; isLocked=; isPaid=; level=; missionId=; pointsEarnedForMilestone=; pointsNeededForMilestone=; rewards=; state=; status=; title=; totalPointsForMilestone=}",
      "type": "object"
    },
    "LolMissionsTftPaidBattlepassReward": {
      "properties": "@{description=; iconNeedsFrame=; iconUrl=; rewardGroup=}",
      "type": "object"
    },
    "LolMissionsTftWeeklyMissions": {
      "properties": "@{missions=}",
      "type": "object"
    },
    "LolMissionsUserInfo": {
      "properties": "@{userInfo=}",
      "type": "object"
    },
    "LolModeProgressionInventoryRewardItem": {
      "properties": "@{itemId=; uuid=}",
      "type": "object"
    },
    "LolModeProgressionLoadout": {
      "properties": "@{id=; loadout=; name=; scope=}",
      "type": "object"
    },
    "LolModeProgressionLoadoutsSlot": {
      "properties": "@{contentId=; inventoryType=; itemId=}",
      "type": "object"
    },
    "LolNpeRewardsAccountSettingsData": {
      "properties": "@{challenges=; login=}",
      "type": "object"
    },
    "LolNpeRewardsAccountSettingsPayload": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolNpeRewardsAllRewards": {
      "properties": "@{level=; login=}",
      "type": "object"
    },
    "LolNpeRewardsChallengesProgress": {
      "properties": "@{progress=}",
      "type": "object"
    },
    "LolNpeRewardsChallengesSettings": {
      "properties": "@{allMissionsCompleted=; totalCount=}",
      "type": "object"
    },
    "LolNpeRewardsLoginSeriesSettings": {
      "properties": "@{allRewardsClaimed=; lastCompletedMissionDate=; lastCompletedMissionInternalName=}",
      "type": "object"
    },
    "LolNpeRewardsMission": {
      "properties": "@{completedDate=; display=; internalName=; metadata=; objectives=; seriesName=; status=}",
      "type": "object"
    },
    "LolNpeRewardsMissionDisplay": {
      "properties": "@{locations=}",
      "type": "object"
    },
    "LolNpeRewardsMissionSeries": {
      "properties": "@{id=; internalName=; status=}",
      "type": "object"
    },
    "LolNpeRewardsMissionSeriesOptIn": {
      "properties": "@{option=; seriesId=}",
      "type": "object"
    },
    "LolNpeRewardsMissionsRewardPackMetaData": {
      "properties": "@{npeRewardPack=}",
      "type": "object"
    },
    "LolNpeRewardsObjective": {
      "properties": "@{progress=}",
      "type": "object"
    },
    "LolNpeRewardsProgress": {
      "properties": "@{currentProgress=; lastViewedProgress=; totalCount=}",
      "type": "object"
    },
    "LolNpeRewardsRequirements": {
      "properties": "@{day=; level=; missionInternalName=}",
      "type": "object"
    },
    "LolNpeRewardsReward": {
      "properties": "@{data=; renderer=}",
      "type": "object"
    },
    "LolNpeRewardsRewardPack": {
      "properties": "@{delay=; index=; majorReward=; minorRewards=; premiumReward=; requirements=; rewardKey=; state=; type=; unlockTime=}",
      "type": "object"
    },
    "LolNpeRewardsRewardSeries": {
      "properties": "@{rewardPacks=}",
      "type": "object"
    },
    "LolNpeRewardsRewardSeriesState": {
      "properties": "@{allRewardsClaimed=}",
      "type": "object"
    },
    "LolNpeRewardsSummoner": {
      "properties": "@{summonerLevel=}",
      "type": "object"
    },
    "LolNpeTutorialPathAccountSettingsCategoryResource": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolNpeTutorialPathAccountSettingsTutorial": {
      "properties": "@{hasSeenTutorialPath=; hasSkippedTutorialPath=; shouldSeeNewPlayerExperience=}",
      "type": "object"
    },
    "LolNpeTutorialPathCollectionsChampion": {
      "properties": "@{alias=; banVoPath=; chooseVoPath=; id=; name=; passive=; roles=; spells=; squarePortraitPath=; stingerSfxPath=}",
      "type": "object"
    },
    "LolNpeTutorialPathCollectionsChampionSpell": {
      "properties": "@{description=; name=}",
      "type": "object"
    },
    "LolNpeTutorialPathExpiringWarning": {
      "properties": "@{alertTime=; message=; type=}",
      "type": "object"
    },
    "LolNpeTutorialPathGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolNpeTutorialPathGameflowSession": {
      "properties": "@{phase=}",
      "type": "object"
    },
    "LolNpeTutorialPathIds": {
      "properties": "@{missionIds=; seriesIds=}",
      "type": "object"
    },
    "LolNpeTutorialPathLobbyChangeQueue": {
      "properties": "@{isCustom=; queueId=}",
      "type": "object"
    },
    "LolNpeTutorialPathLobbyDto": {
      "properties": "@{gameConfig=; partyId=}",
      "type": "object"
    },
    "LolNpeTutorialPathLobbyGameConfigDto": {
      "properties": "@{queueId=}",
      "type": "object"
    },
    "LolNpeTutorialPathMission": {
      "properties": "@{backgroundImageUrl=; celebrationType=; clientNotifyLevel=; completedDate=; completionExpression=; cooldownTimeMillis=; description=; display=; displayType=; endTime=; expiringWarnings=; helperText=; iconImageUrl=; id=; internalName=; isNew=; lastUpdatedTimestamp=; locale=; metadata=; missionType=; objectives=; requirements=; rewardStrategy=; rewards=; seriesName=; startTime=; status=; title=; viewed=}",
      "type": "object"
    },
    "LolNpeTutorialPathMissionDisplay": {
      "properties": "@{attributes=}",
      "type": "object"
    },
    "LolNpeTutorialPathMissionMetadata": {
      "properties": "@{tutorial=}",
      "type": "object"
    },
    "LolNpeTutorialPathObjective": {
      "properties": "@{description=; progress=; rewardGroups=; sequence=; type=}",
      "type": "object"
    },
    "LolNpeTutorialPathProgress": {
      "properties": "@{currentProgress=; lastViewedProgress=; totalCount=}",
      "type": "object"
    },
    "LolNpeTutorialPathRequirement": {
      "properties": "@{expression=}",
      "type": "object"
    },
    "LolNpeTutorialPathReward": {
      "properties": "@{description=; iconUrl=; itemId=; quantity=; rewardFulfilled=; rewardGroup=; rewardGroupSelected=; rewardType=; sequence=; uniqueName=}",
      "type": "object"
    },
    "LolNpeTutorialPathRewardStrategy": {
      "properties": "@{groupStrategy=; selectMaxGroupCount=; selectMinGroupCount=}",
      "type": "object"
    },
    "LolNpeTutorialPathSeries": {
      "properties": "@{id=; internalName=; status=}",
      "type": "object"
    },
    "LolNpeTutorialPathSeriesOpt": {
      "properties": "@{option=; seriesId=}",
      "type": "object"
    },
    "LolNpeTutorialPathSummoner": {
      "properties": "@{accountId=; displayName=; nameChangeFlag=; percentCompleteForNextLevel=; profileIconId=; summonerId=; summonerLevel=; unnamed=; xpSinceLastLevel=; xpUntilNextLevel=}",
      "type": "object"
    },
    "LolNpeTutorialPathSummonerIcon": {
      "properties": "@{profileIconId=}",
      "type": "object"
    },
    "LolNpeTutorialPathTutorial": {
      "properties": "@{backgroundUrl=; description=; id=; isViewed=; queueId=; rewards=; status=; stepNumber=; title=; type=; useChosenChampion=; useQuickSearchMatchmaking=}",
      "type": "object"
    },
    "LolNpeTutorialPathTutorialMetadata": {
      "properties": "@{displayRewards=; queueId=; stepNumber=; useChosenChampion=; useQuickSearchMatchmaking=}",
      "type": "object"
    },
    "LolNpeTutorialPathTutorialReward": {
      "properties": "@{description=; iconUrl=; itemId=; rewardFulfilled=; rewardType=; sequence=; uniqueName=}",
      "type": "object"
    },
    "LolNpeTutorialPathTutorialStatus": {
      "enum": "LOCKED UNLOCKED COMPLETED",
      "type": "string"
    },
    "LolNpeTutorialPathTutorialType": {
      "enum": "CARD REWARD",
      "type": "string"
    },
    "LolPatchChunkingPatcherEnvironment": {
      "properties": "@{game_patcher_available=; game_patcher_enabled=}",
      "type": "object"
    },
    "LolPatchComponentActionProgress": {
      "properties": "@{currentItem=; network=; primaryWork=; total=}",
      "type": "object"
    },
    "LolPatchComponentState": {
      "properties": "@{action=; id=; isCorrupted=; isUpToDate=; isUpdateAvailable=; progress=; timeOfLastUpToDateCheckISO8601=}",
      "type": "object"
    },
    "LolPatchComponentStateAction": {
      "enum": "Idle CheckingForUpdates Patching Repairing Migrating",
      "type": "string"
    },
    "LolPatchComponentStateProgress": {
      "properties": "@{bytesComplete=; bytesPerSecond=; bytesRequired=}",
      "type": "object"
    },
    "LolPatchComponentStateWorkType": {
      "enum": "Scanning Network Disk",
      "type": "string"
    },
    "LolPatchEntitlementsTokenResource": {
      "properties": "@{accessToken=; entitlements=; token=}",
      "type": "object"
    },
    "LolPatchInstallPaths": {
      "properties": "@{gameExecutablePath=; gameInstallRoot=}",
      "type": "object"
    },
    "LolPatchNotification": {
      "properties": "@{data=; id=; notificationId=}",
      "type": "object"
    },
    "LolPatchNotificationId": {
      "enum": "UnspecifiedError ConnectionError MissingFilesError FailedToWriteError DidRestoreClientBackup NotEnoughDiskSpace BrokenPermissions",
      "type": "string"
    },
    "LolPatchPatchSieveCompatVersion": {
      "properties": "@{id=}",
      "type": "object"
    },
    "LolPatchPatchSieveDownload": {
      "properties": "@{scd_required=; url=}",
      "type": "object"
    },
    "LolPatchPatchSieveLabelValue": {
      "properties": "@{values=}",
      "type": "object"
    },
    "LolPatchPatchSieveQueryResponse": {
      "properties": "@{releases=}",
      "type": "object"
    },
    "LolPatchPatchSieveRelease": {
      "properties": "@{compat_version=; download=; release=}",
      "type": "object"
    },
    "LolPatchPatchSieveReleaseInfo": {
      "properties": "@{id=; labels=; product=}",
      "type": "object"
    },
    "LolPatchPatcherInstallSettings": {
      "properties": "@{game_patch_url=; game_patcher=; game_patcher_available=; locales=; max_download_speed_mbps=}",
      "type": "object"
    },
    "LolPatchPatcherRegionSettings": {
      "properties": "@{game_patcher=; patchline=}",
      "type": "object"
    },
    "LolPatchPatcherSelfUpdateSettings": {
      "properties": "@{restart_delay=}",
      "type": "object"
    },
    "LolPatchPatcherSettings": {
      "properties": "@{channel=; headers=; patchsieve_url=; product_refresh_period=; self_update=}",
      "type": "object"
    },
    "LolPatchProductState": {
      "properties": "@{action=; components=; id=; isCorrupted=; isStopped=; isUpToDate=; isUpdateAvailable=; percentPatched=}",
      "type": "object"
    },
    "LolPatchRegionLocale": {
      "properties": "@{locale=; region=}",
      "type": "object"
    },
    "LolPatchScdCookie": {
      "properties": "@{cookie=; domain=; path=}",
      "type": "object"
    },
    "LolPatchScdCookies": {
      "properties": "@{cookies=}",
      "type": "object"
    },
    "LolPatchScdEnabled": {
      "enum": "Off On",
      "type": "string"
    },
    "LolPatchStatus": {
      "properties": "@{connectedToPatchServer=}",
      "type": "object"
    },
    "LolPatchSupportedGameRelease": {
      "properties": "@{artifact_id=; download=; selected=}",
      "type": "object"
    },
    "LolPatchSupportedGameReleases": {
      "properties": "@{supported_game_releases=}",
      "type": "object"
    },
    "LolPatchUxResource": {
      "properties": "@{visible=}",
      "type": "object"
    },
    "LolPerksChampSelectAction": {
      "properties": "@{actorCellId=; championId=; completed=; id=; type=}",
      "type": "object"
    },
    "LolPerksChampSelectBannedChampions": {
      "properties": "@{myTeamBans=; numBans=; theirTeamBans=}",
      "type": "object"
    },
    "LolPerksChampSelectChatRoomDetails": {
      "properties": "@{mucJwtDto=; multiUserChatId=; multiUserChatPassword=}",
      "type": "object"
    },
    "LolPerksChampSelectMySelection": {
      "properties": "@{selectedSkinId=; spell1Id=; spell2Id=; wardSkinId=}",
      "type": "object"
    },
    "LolPerksChampSelectPlayerSelection": {
      "properties": "@{assignedPosition=; cellId=; championId=; championPickIntent=; selectedSkinId=; spell1Id=; spell2Id=; summonerId=; team=; wardSkinId=}",
      "type": "object"
    },
    "LolPerksChampSelectSession": {
      "properties": "@{actions=; bans=; chatDetails=; isSpectating=; localPlayerCellId=; myTeam=; theirTeam=; timer=; trades=}",
      "type": "object"
    },
    "LolPerksChampSelectTimer": {
      "properties": "@{adjustedTimeLeftInPhase=; internalNowInEpochMs=; isInfinite=; phase=; totalTimeInPhase=}",
      "type": "object"
    },
    "LolPerksChampSelectTradeContract": {
      "properties": "@{cellId=; id=; state=}",
      "type": "object"
    },
    "LolPerksChampSelectTradeState": {
      "enum": "AVAILABLE BUSY INVALID RECEIVED SENT",
      "type": "string"
    },
    "LolPerksChampionPreferredStyle": {
      "properties": "@{championId=; championName=; style=}",
      "type": "object"
    },
    "LolPerksChampionRuneRecommendationsGDSResource": {
      "properties": "@{championId=; isOverride=; runeRecommendations=}",
      "type": "object"
    },
    "LolPerksDefaultStatModsPerSubStyle": {
      "properties": "@{id=; perks=}",
      "type": "object"
    },
    "LolPerksGameCustomizationDTO": {
      "properties": "@{category=; content=; isTeambuilder=; queueType=}",
      "type": "object"
    },
    "LolPerksGameDataChampionSummary": {
      "properties": "@{id=; name=}",
      "type": "object"
    },
    "LolPerksGameflowGameData": {
      "properties": "@{gameId=; isCustomGame=; queue=}",
      "type": "object"
    },
    "LolPerksGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolPerksGameflowSession": {
      "properties": "@{gameData=; phase=}",
      "type": "object"
    },
    "LolPerksGetGameCustomizationDTO": {
      "properties": "@{queueType=}",
      "type": "object"
    },
    "LolPerksInventoryRunePageCount": {
      "properties": "@{quantity=}",
      "type": "object"
    },
    "LolPerksLoginSession": {
      "properties": "@{accountId=; state=; summonerId=}",
      "type": "object"
    },
    "LolPerksLoginSessionState": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolPerksMucJwtDto": {
      "properties": "@{channelClaim=; domain=; jwt=; targetRegion=}",
      "type": "object"
    },
    "LolPerksNamecheckAuthorization": {
      "properties": "@{subject=}",
      "type": "object"
    },
    "LolPerksNamecheckLoginDataPacket": {
      "properties": "@{platformId=}",
      "type": "object"
    },
    "LolPerksNamecheckPayload": {
      "properties": "@{name=; nameValidationContext=; puuid=; shard=}",
      "type": "object"
    },
    "LolPerksNamecheckResponse": {
      "properties": "@{errors=}",
      "type": "object"
    },
    "LolPerksPerkBook": {
      "properties": "@{currentPageId=; pages=}",
      "type": "object"
    },
    "LolPerksPerkGDSResource": {
      "properties": "@{iconPath=; id=; longDesc=; majorChangePatchVersion=; name=; recommendationDescriptor=; recommendationDescriptorAttributes=; shortDesc=; tooltip=}",
      "type": "object"
    },
    "LolPerksPerkIdListResource": {
      "properties": "@{perkIds=}",
      "type": "object"
    },
    "LolPerksPerkPageResource": {
      "properties": "@{autoModifiedSelections=; current=; id=; isActive=; isDeletable=; isEditable=; isRecommendationOverride=; isTemporary=; isValid=; lastModified=; name=; order=; primaryStyleId=; recommendationChampionId=; recommendationIndex=; runeRecommendationId=; selectedPerkIds=; subStyleId=}",
      "type": "object"
    },
    "LolPerksPerkSettingResource": {
      "properties": "@{perkIds=; perkStyle=; perkSubStyle=}",
      "type": "object"
    },
    "LolPerksPerkSettings": {
      "properties": "@{pages=; perShardPerkBooks=; settings=}",
      "type": "object"
    },
    "LolPerksPerkStyleResource": {
      "properties": "@{allowedSubStyles=; assetMap=; defaultPageName=; defaultPerks=; defaultPerksWhenSplashed=; defaultStatModsPerSubStyle=; defaultSubStyle=; iconPath=; id=; isAdvanced=; name=; slots=; subStyleBonus=; tooltip=}",
      "type": "object"
    },
    "LolPerksPerkStyleSlotResource": {
      "properties": "@{perks=; slotLabel=; type=}",
      "type": "object"
    },
    "LolPerksPerkSubStyleBonusResource": {
      "properties": "@{perkId=; styleId=}",
      "type": "object"
    },
    "LolPerksPerkUIPerk": {
      "properties": "@{iconPath=; id=; longDesc=; name=; recommendationDescriptor=; shortDesc=; slotType=; styleId=; styleIdName=; tooltip=}",
      "type": "object"
    },
    "LolPerksPerkUIRecommendedPage": {
      "properties": "@{isDefaultPosition=; isRecommendationOverride=; keystone=; perks=; position=; primaryPerkStyleId=; primaryRecommendationAttribute=; recommendationChampionId=; recommendationId=; secondaryPerkStyleId=; secondaryRecommendationAttribute=; summonerSpellIds=}",
      "type": "object"
    },
    "LolPerksPerkUISlot": {
      "properties": "@{perks=; slotLabel=; type=}",
      "type": "object"
    },
    "LolPerksPerkUIStyle": {
      "properties": "@{allowedSubStyles=; assetMap=; defaultPageName=; defaultPerks=; defaultSubStyle=; iconPath=; id=; idName=; name=; slots=; subStyleBonus=; tooltip=}",
      "type": "object"
    },
    "LolPerksPerksConfigDTO": {
      "properties": "@{styles=}",
      "type": "object"
    },
    "LolPerksPlatformConfig": {
      "properties": "@{AutoRepairPagesEnabled=; PerksEnabled=}",
      "type": "object"
    },
    "LolPerksPlayerInventory": {
      "properties": "@{canAddCustomPage=; customPageCount=; isCustomPageCreationUnlocked=; ownedPageCount=}",
      "type": "object"
    },
    "LolPerksQueue": {
      "properties": "@{id=; isTeamBuilderManaged=; mapId=}",
      "type": "object"
    },
    "LolPerksRuneRecommendationGDSResource": {
      "properties": "@{isDefaultPosition=; mapId=; minSummonerLevel=; perkIds=; position=; primaryPerkStyleId=; recommendationId=; secondaryPerkStyleId=; summonerSpellIds=}",
      "type": "object"
    },
    "LolPerksSettingsStorageContainer": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolPerksSummoner": {
      "properties": "@{accountId=; displayName=; internalName=; percentCompleteForNextLevel=; profileIconId=; puuid=; rerollPoints=; summonerId=; summonerLevel=; xpSinceLastLevel=; xpUntilNextLevel=}",
      "type": "object"
    },
    "LolPerksSummonerRerollPoints": {
      "properties": "@{currentPoints=; maxRolls=; numberOfRolls=; pointsCostToRoll=; pointsToReroll=}",
      "type": "object"
    },
    "LolPerksUISettings": {
      "properties": "@{gameplayPatchVersionSeen=; gameplayUpdatedPerksSeen=; gridModeEnabled=; showLongDescriptions=; showPresetPages=}",
      "type": "object"
    },
    "LolPerksUpdatePageOrderRequest": {
      "properties": "@{destinationPageId=; offset=; targetPageId=}",
      "type": "object"
    },
    "LolPerksValidateItemSetNameResponse": {
      "properties": "@{nameCheckResponse=; success=}",
      "type": "object"
    },
    "LolPerksValidatePageNameData": {
      "properties": "@{id=; name=}",
      "type": "object"
    },
    "LolPftGameClientEndOfGameStats": {
      "properties": "@{gameId=; gameMode=; isRanked=; queueId=; statsBlock=}",
      "type": "object"
    },
    "LolPftGameflowGameDodge": {
      "properties": "@{dodgeIds=; state=}",
      "type": "object"
    },
    "LolPftGameflowGameDodgeState": {
      "enum": "Invalid PartyDodged StrangerDodged TournamentDodged",
      "type": "string"
    },
    "LolPftGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolPftGameflowSession": {
      "properties": "@{gameDodge=; phase=}",
      "type": "object"
    },
    "LolPftLoginSession": {
      "properties": "@{idToken=; state=}",
      "type": "object"
    },
    "LolPftLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolPftPFTEndOfGamePlayer": {
      "properties": "@{botPlayer=; championId=; gameId=; items=; leaver=; leaves=; level=; losses=; profileIconId=; spell1Id=; spell2Id=; stats=; summonerId=; summonerName=; teamId=; wins=}",
      "type": "object"
    },
    "LolPftPFTEndOfGamePoints": {
      "properties": "@{pointChangeFromChampionsOwned=; pointChangeFromGameplay=; pointsUntilNextReroll=; pointsUsed=; previousPoints=; rerollCount=; totalPoints=}",
      "type": "object"
    },
    "LolPftPFTEndOfGameStats": {
      "properties": "@{accountId=; basePoints=; battleBoostIpEarned=; boostIpEarned=; boostXpEarned=; causedEarlySurrender=; difficulty=; earlySurrenderAccomplice=; experienceEarned=; experienceTotal=; firstWinBonus=; gameEndedInEarlySurrender=; gameId=; gameLength=; gameMode=; gameMutators=; gameType=; invalid=; ipEarned=; ipTotal=; isAramGame=; leveledUp=; localPlayer=; loyaltyBoostXpEarned=; myTeamStatus=; newSpells=; previousLevel=; previousXpTotal=; queueType=; ranked=; reportGameId=; rerollData=; rpEarned=; teamEarlySurrendered=; teams=; timeUntilNextFirstWinBonus=}",
      "type": "object"
    },
    "LolPftPFTEndOfGameTeam": {
      "properties": "@{fullId=; isBottomTeam=; isPlayerTeam=; isWinningTeam=; memberStatusString=; name=; players=; stats=; tag=; teamId=}",
      "type": "object"
    },
    "LolPftPFTEvent": {
      "properties": "@{action=; data=; playerSurveyId=}",
      "type": "object"
    },
    "LolPftPFTMetadata": {
      "properties": "@{accountId=; appName=; appVersion=; env=; homepageTimer=; locale=; stats=; systemOs=; webRegion=}",
      "type": "object"
    },
    "LolPftPFTQuestionResponse": {
      "properties": "@{questionId=; responseData=}",
      "type": "object"
    },
    "LolPftPFTSurvey": {
      "properties": "@{caption=; data=; display=; id=; title=; type=}",
      "type": "object"
    },
    "LolPftPFTSurveyResults": {
      "properties": "@{actions=; questionResponses=}",
      "type": "object"
    },
    "LolPftPFTSurveyV1": {
      "properties": "@{caption=; id=; title=; type=; url=}",
      "type": "object"
    },
    "LolPftSummoner": {
      "properties": "@{accountId=; puuid=; summonerId=; summonerLevel=; unnamed=}",
      "type": "object"
    },
    "LolPlayerBehaviorBanNotification": {
      "properties": "@{displayReformCard=; id=; isPermaBan=; reason=; source=; timeUntilBanExpires=}",
      "type": "object"
    },
    "LolPlayerBehaviorCodeOfConductNotification": {
      "properties": "@{message=}",
      "type": "object"
    },
    "LolPlayerBehaviorGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolPlayerBehaviorNotificationSource": {
      "enum": "Invalid Login ForcedShutdown Message",
      "type": "string"
    },
    "LolPlayerBehaviorPlayerBehaviorConfig": {
      "properties": "@{CodeOfConductEnabled=; IsLoaded=}",
      "type": "object"
    },
    "LolPlayerBehaviorPlayerBehavior_GameflowSessionResource": {
      "properties": "@{phase=}",
      "type": "object"
    },
    "LolPlayerBehaviorPlayerBehavior_SimpleMessage": {
      "properties": "@{accountId=; msgId=; params=; type=}",
      "type": "object"
    },
    "LolPlayerBehaviorPlayerNotificationResource": {
      "properties": "@{backgroundUrl=; created=; critical=; data=; detailKey=; expires=; iconUrl=; id=; source=; state=; titleKey=; type=}",
      "type": "object"
    },
    "LolPlayerBehaviorReformCard": {
      "properties": "@{chatLogs=; gameIds=; id=; playerFacingMessage=; punishmentLengthGames=; punishmentLengthTime=; punishmentType=; reason=; restrictedChatGamesRemaining=; timeWhenPunishmentExpires=}",
      "type": "object"
    },
    "LolPlayerBehaviorReformCardChatLogs": {
      "properties": "@{inGameChatLogs=; postGameChatLogs=; preGameChatLogs=}",
      "type": "object"
    },
    "LolPlayerBehaviorReformCardV2": {
      "properties": "@{id=; playerFacingMessage=; punishedForGameIds=; punishedForReformCardChatLogs=; punishedUntilDateMillis=; punishmentLengthGames=; punishmentLengthMillis=; punishmentReason=; punishmentType=}",
      "type": "object"
    },
    "LolPlayerBehaviorReporterFeedback": {
      "properties": "@{accountId=; id=; messageId=; type=}",
      "type": "object"
    },
    "LolPlayerBehaviorReporterFeedbackMessage": {
      "properties": "@{category=; key=; locale=; message=; title=}",
      "type": "object"
    },
    "LolPlayerBehaviorRestrictionNotification": {
      "properties": "@{displayReformCard=; expirationMillis=; gamesRemaining=; id=; source=}",
      "type": "object"
    },
    "LolPlayerBehaviorSettingsResource": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolPlayerBehaviorUserInfo": {
      "properties": "@{userInfo=}",
      "type": "object"
    },
    "LolPlayerBehaviorUserInfoBanData": {
      "properties": "@{restrictions=}",
      "type": "object"
    },
    "LolPlayerBehaviorUserInfoRestriction": {
      "properties": "@{dat=; reason=; scope=; type=}",
      "type": "object"
    },
    "LolPlayerBehaviorUserInfoRestrictionData": {
      "properties": "@{expirationMillis=; gameData=; gameLocation=}",
      "type": "object"
    },
    "LolPlayerBehaviorUserInfoRestrictionGameData": {
      "properties": "@{additionalGameIds=; gameLocation=; productName=; triggerGameId=}",
      "type": "object"
    },
    "LolPlayerBehaviorUserInfoToken": {
      "properties": "@{ban=}",
      "type": "object"
    },
    "LolPlayerLevelUpEndOfGameStats": {
      "properties": "@{gameMode=; gameMutators=; gameType=; leveledUp=; newSpells=; previousLevel=; queueType=; rpEarned=}",
      "type": "object"
    },
    "LolPlayerLevelUpGameDataSummonerSpell": {
      "properties": "@{id=; summonerLevel=}",
      "type": "object"
    },
    "LolPlayerLevelUpLoginSession": {
      "properties": "@{accountId=; state=; summonerId=}",
      "type": "object"
    },
    "LolPlayerLevelUpLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolPlayerLevelUpPlayerLevelUpEvent": {
      "properties": "@{leveledUp=; newQueues=; newRuneSlotUnlocked=; newSpells=; newSummonerLevel=; nowHasAccessToLoot=; nowHasAccessToPublicChatRooms=; rpEarned=; switchedToStandardFreeToPlayChampRotation=}",
      "type": "object"
    },
    "LolPlayerLevelUpPlayerLevelUpEventAck": {
      "properties": "@{newSummonerLevel=; seenThisEvent=}",
      "type": "object"
    },
    "LolPlayerLevelUpQueue": {
      "properties": "@{id=; minLevel=}",
      "type": "object"
    },
    "LolPlayerMessagingDynamicCelebrationMessagingNotificationResource": {
      "properties": "@{accountId=; celebrationBody=; celebrationMessage=; celebrationTitle=; celebrationType=; id=; inventoryType=; itemId=; itemQuantity=; msgId=; status=}",
      "type": "object"
    },
    "LolPlayerMessagingLoginDataPacket": {
      "properties": "@{simpleMessages=}",
      "type": "object"
    },
    "LolPlayerMessagingPlayerMessagingNotificationResource": {
      "properties": "@{accountId=; body=; id=; msgId=; status=; title=}",
      "type": "object"
    },
    "LolPlayerMessagingSimpleMessage": {
      "properties": "@{accountId=; bodyCode=; msgId=; params=; titleCode=; type=}",
      "type": "object"
    },
    "LolPlayerPreferencesLoginSession": {
      "properties": "@{accountId=; idToken=; state=; summonerId=}",
      "type": "object"
    },
    "LolPlayerPreferencesLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolPlayerPreferencesPlayerPreferences": {
      "properties": "@{data=; type=; version=}",
      "type": "object"
    },
    "LolPlayerPreferencesPlayerPreferencesEndpoint": {
      "properties": "@{Enabled=; EnforceHttps=; Retries=; ServiceEndpoint=; Version=}",
      "type": "object"
    },
    "LolPlayerReportSenderGameAgnosticReportPayload": {
      "properties": "@{categories=; comment=; location=; offenderId=; token=; tokenType=}",
      "type": "object"
    },
    "LolPlayerReportSenderGameflowGameData": {
      "properties": "@{gameId=}",
      "type": "object"
    },
    "LolPlayerReportSenderGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolPlayerReportSenderGameflowSession": {
      "properties": "@{gameData=; phase=}",
      "type": "object"
    },
    "LolPlayerReportSenderPlayerReport": {
      "properties": "@{categories=; comment=; gameId=; obfuscatedOffenderPuuid=; offenderPuuid=; offenderSummonerId=}",
      "type": "object"
    },
    "LolPlayerReportSenderReportRecipientMode": {
      "enum": "Legacy Game-Agnostic Combined",
      "type": "string"
    },
    "LolPlayerReportSenderSummoner": {
      "properties": "@{puuid=; summonerId=; summonerLevel=; xpSinceLastLevel=; xpUntilNextLevel=}",
      "type": "object"
    },
    "LolPreEndOfGameGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolPreEndOfGameSequenceEvent": {
      "properties": "@{name=; priority=}",
      "type": "object"
    },
    "LolPremadeVoiceAccountSettingsCategoryDataResource": {
      "properties": "@{autoJoin=; inputMode=; muteOnConnect=; pushToTalkKey=; showFirstExperienceInGame=; showFirstExperienceInLCU=}",
      "type": "object"
    },
    "LolPremadeVoiceAccountSettingsCategoryResource": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolPremadeVoiceAudioPropertiesResource": {
      "properties": "@{isLoopbackEnabled=; micEnergy=}",
      "type": "object"
    },
    "LolPremadeVoiceConfigReadinessEnum": {
      "enum": "NotReady Ready Disabled",
      "type": "string"
    },
    "LolPremadeVoiceConfigStatus": {
      "properties": "@{readiness=}",
      "type": "object"
    },
    "LolPremadeVoiceConfigType": {
      "enum": "public player",
      "type": "string"
    },
    "LolPremadeVoiceDeviceResource": {
      "properties": "@{handle=; is_current_device=; is_default=; name=; usable=}",
      "type": "object"
    },
    "LolPremadeVoiceDeviceResourceRiotClient": {
      "properties": "@{handle=; is_current_device=; is_default=; is_effective_device=; name=}",
      "type": "object"
    },
    "LolPremadeVoiceEntitlementsToken": {
      "properties": "@{entitlements=}",
      "type": "object"
    },
    "LolPremadeVoiceExternalSession": {
      "properties": "@{patchlineFullName=; patchlineId=; productId=}",
      "type": "object"
    },
    "LolPremadeVoiceFirstExperience": {
      "properties": "@{showFirstExperienceInGame=; showFirstExperienceInLCU=}",
      "type": "object"
    },
    "LolPremadeVoiceGameEventHotkeys": {
      "properties": "@{evtPushToTalk=}",
      "type": "object"
    },
    "LolPremadeVoiceGameInputSettings": {
      "properties": "@{GameEvents=}",
      "type": "object"
    },
    "LolPremadeVoiceGameflowGameClient": {
      "properties": "@{running=}",
      "type": "object"
    },
    "LolPremadeVoiceGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolPremadeVoiceGameflowSession": {
      "properties": "@{gameClient=; phase=}",
      "type": "object"
    },
    "LolPremadeVoiceInputMode": {
      "enum": "voiceActivity pushToTalk",
      "type": "string"
    },
    "LolPremadeVoiceKeyCombo": {
      "properties": "@{keyBindings=}",
      "type": "object"
    },
    "LolPremadeVoiceKeycodePushToTalkResource": {
      "properties": "@{enabled=; keyCombos=}",
      "type": "object"
    },
    "LolPremadeVoiceLocalSettingsCategoryDataResource": {
      "properties": "@{currentCaptureDeviceHandle=; inputVolume=; vadSensitivity=}",
      "type": "object"
    },
    "LolPremadeVoiceLocalSettingsCategoryResource": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolPremadeVoiceLoginSession": {
      "properties": "@{connected=}",
      "type": "object"
    },
    "LolPremadeVoiceParticipantResource": {
      "properties": "@{energy=; id=; isMuted=; isSpeaking=; name=; volume=}",
      "type": "object"
    },
    "LolPremadeVoicePartyDto": {
      "properties": "@{commsEnabled=; partyId=; players=}",
      "type": "object"
    },
    "LolPremadeVoicePartyMemberRoleEnum": {
      "enum": "LEADER MEMBER INVITED HOLD KICKED DECLINED",
      "type": "string"
    },
    "LolPremadeVoicePlayerDto": {
      "properties": "@{displayName=; partyId=; puuid=; role=; summonerId=}",
      "type": "object"
    },
    "LolPremadeVoicePremadeVoiceParticipantDto": {
      "properties": "@{displayName=; energy=; isMuted=; isSpeaking=; participantId=; puuid=; summonerId=; volume=}",
      "type": "object"
    },
    "LolPremadeVoicePushToTalkKey": {
      "properties": "@{key=}",
      "type": "object"
    },
    "LolPremadeVoicePushToTalkResource": {
      "properties": "@{pttEnabled=; pttKeyBinding=}",
      "type": "object"
    },
    "LolPremadeVoiceSessionResource": {
      "properties": "@{id=; isMuted=; isTransmitEnabled=; participants=; status=; volume=}",
      "type": "object"
    },
    "LolPremadeVoiceSessionStatus": {
      "enum": "active onHold",
      "type": "string"
    },
    "LolPremadeVoiceSettingsResource": {
      "properties": "@{autoJoin=; currentCaptureDeviceHandle=; inputMode=; localMicMuted=; loopbackEnabled=; micLevel=; muteOnConnect=; pttActive=; pttKey=; vadActive=; vadHangoverTime=; vadSensitivity=}",
      "type": "object"
    },
    "LolPremadeVoiceStateResource": {
      "properties": "@{connected=}",
      "type": "object"
    },
    "LolPremadeVoiceSummoner": {
      "properties": "@{accountId=; puuid=}",
      "type": "object"
    },
    "LolPremadeVoiceVoiceAvailability": {
      "properties": "@{connectedToVoiceServer=; disabledAfterLogin=; enabled=; showDisconnectedState=; showUI=; voiceChannelAvailable=}",
      "type": "object"
    },
    "LolProgressionCounter": {
      "properties": "@{direction=; groupId=; id=; name=; startValue=}",
      "type": "object"
    },
    "LolProgressionCounterInstance": {
      "properties": "@{counterId=; counterValue=; groupId=; ownerId=; productId=}",
      "type": "object"
    },
    "LolProgressionEntityInstance": {
      "properties": "@{counters=; groupId=; milestones=}",
      "type": "object"
    },
    "LolProgressionGroup": {
      "properties": "@{counters=; id=; milestones=; name=; productId=; repeat=}",
      "type": "object"
    },
    "LolProgressionMilestone": {
      "properties": "@{counterId=; groupId=; id=; name=; properties=; triggerValue=}",
      "type": "object"
    },
    "LolProgressionMilestoneInstance": {
      "properties": "@{counterId=; groupId=; milestoneId=; ownerId=; productId=; repeatSequence=; triggerValue=; triggered=}",
      "type": "object"
    },
    "LolProgressionRepeat": {
      "properties": "@{count=; multiplier=; scope=}",
      "type": "object"
    },
    "LolPublishingContentAccountData": {
      "properties": "@{accountId=; displayName=; puuid=; summonerLevel=}",
      "type": "object"
    },
    "LolPublishingContentBuildInfo": {
      "properties": "@{patchline=; version=}",
      "type": "object"
    },
    "LolPublishingContentClientData": {
      "properties": "@{account_id=; app_name=; app_version=; assetUrls=; env=; locale=; port=; protocol=; puuid=; summoner_level=; summoner_name=; system_os=; web_region=}",
      "type": "object"
    },
    "LolPublishingContentPubHubConfig": {
      "properties": "@{appContext=; edge=}",
      "type": "object"
    },
    "LolPublishingContentPubHubConfigAppContext": {
      "properties": "@{appId=; appLanguage=; appLocale=; appSessionId=; appVersion=; deviceCategory=; deviceOperatingSystem=; deviceOperatingSystemVersion=; publishingLocale=; userId=; userRegion=}",
      "type": "object"
    },
    "LolPublishingContentPubHubConfigEdge": {
      "properties": "@{clientId=; clientRegion=}",
      "type": "object"
    },
    "LolPublishingContentPublishingLocaleSetting": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolPublishingContentPublishingLocaleSettingData": {
      "properties": "@{publishingLocale=}",
      "type": "object"
    },
    "LolPublishingContentPublishingSettings": {
      "properties": "@{locale=; publishingLocale=; region=; rsoPlatformId=; webLocale=; webRegion=}",
      "type": "object"
    },
    "LolPublishingContentRegionLocale": {
      "properties": "@{locale=; region=; webRegion=}",
      "type": "object"
    },
    "LolPublishingContentSummonerInfo": {
      "properties": "@{displayName=; summonerLevel=}",
      "type": "object"
    },
    "LolPublishingContentSystemInfo": {
      "properties": "@{operatingSystem=}",
      "type": "object"
    },
    "LolPublishingContentSystemInfoOperatingSystem": {
      "properties": "@{platform=; versionMajor=}",
      "type": "object"
    },
    "LolPurchaseWidgetBalance": {
      "properties": "@{amount=; currencyType=}",
      "type": "object"
    },
    "LolPurchaseWidgetBaseSkinLineDto": {
      "properties": "@{collectionCardPath=; collectionDescription=; items=; localizedName=; pricingOptions=; skinLineDescriptions=; splashPath=; tilePath=; uncenteredSplashPath=}",
      "type": "object"
    },
    "LolPurchaseWidgetBundledItemPricingInfo": {
      "properties": "@{discountPrices=; inventoryType=; itemId=; quantity=}",
      "type": "object"
    },
    "LolPurchaseWidgetCapOffer": {
      "properties": "@{active=; createdDate=; id=; label=; merchantId=; payload=; productId=; startDate=; typeId=}",
      "type": "object"
    },
    "LolPurchaseWidgetCapOfferPayloadEntry": {
      "properties": "@{fulfillmentTypeId=; inventoryTypeUUID=; itemInstanceId=; itemPriceMap=}",
      "type": "object"
    },
    "LolPurchaseWidgetCapOrdersDataDto": {
      "properties": "@{id=; location=; purchaser=; source=; subOrders=}",
      "type": "object"
    },
    "LolPurchaseWidgetCapOrdersMetaDto": {
      "properties": "@{xid=}",
      "type": "object"
    },
    "LolPurchaseWidgetCapOrdersOfferContextDto": {
      "properties": "@{paymentOption=; quantity=}",
      "type": "object"
    },
    "LolPurchaseWidgetCapOrdersOfferDto": {
      "properties": "@{id=; productId=}",
      "type": "object"
    },
    "LolPurchaseWidgetCapOrdersOrderDto": {
      "properties": "@{data=; meta=}",
      "type": "object"
    },
    "LolPurchaseWidgetCapOrdersSubOrderDto": {
      "properties": "@{offer=; offerContext=; recipientId=}",
      "type": "object"
    },
    "LolPurchaseWidgetCapOrdersTypedIdentifierDto": {
      "properties": "@{id=; typeId=}",
      "type": "object"
    },
    "LolPurchaseWidgetCatalogPluginItem": {
      "properties": "@{active=; description=; imagePath=; inactiveDate=; inventoryType=; itemId=; itemInstanceId=; metadata=; name=; owned=; ownershipType=; prices=; purchaseDate=; questSkinInfo=; releaseDate=; subInventoryType=; subTitle=; tags=}",
      "type": "object"
    },
    "LolPurchaseWidgetCatalogPluginItemAssets": {
      "properties": "@{colors=; emblems=; iconPath=; splashPath=; tilePath=}",
      "type": "object"
    },
    "LolPurchaseWidgetCatalogPluginItemWithDetails": {
      "properties": "@{assets=; bundledDiscountPrices=; bundledItems=; item=; minimumBundlePrices=; quantity=; requiredItems=}",
      "type": "object"
    },
    "LolPurchaseWidgetCatalogPluginPrice": {
      "properties": "@{cost=; costType=; currency=; sale=}",
      "type": "object"
    },
    "LolPurchaseWidgetCatalogPluginSale": {
      "properties": "@{cost=; discount=; endDate=; startDate=}",
      "type": "object"
    },
    "LolPurchaseWidgetChampionSkinEmblem": {
      "properties": "@{emblemPath=; emblemPosition=; name=}",
      "type": "object"
    },
    "LolPurchaseWidgetChampionSkinEmblemPath": {
      "properties": "@{large=; small=}",
      "type": "object"
    },
    "LolPurchaseWidgetChampionSkinEmblemPosition": {
      "properties": "@{horizontal=; vertical=}",
      "type": "object"
    },
    "LolPurchaseWidgetDiscountPricingInfo": {
      "properties": "@{cost=; costType=; currency=; discount=}",
      "type": "object"
    },
    "LolPurchaseWidgetInventoryOwnership": {
      "enum": "OWNED RENTED LOYALTY F2P",
      "type": "string"
    },
    "LolPurchaseWidgetItemChoiceDetails": {
      "properties": "@{backgroundImage=; contents=; discount=; displayType=; fullPrice=; item=; purchaseOptions=}",
      "type": "object"
    },
    "LolPurchaseWidgetItemChoices": {
      "properties": "@{choices=; validationErrors=}",
      "type": "object"
    },
    "LolPurchaseWidgetItemCost": {
      "properties": "@{cost=; currency=; discount=}",
      "type": "object"
    },
    "LolPurchaseWidgetItemDefinition": {
      "properties": "@{assets=; bundledItemPrice=; description=; inventoryType=; itemId=; loyaltyUnlocked=; metadata=; name=; owned=; subInventoryType=; subTitle=; tags=}",
      "type": "object"
    },
    "LolPurchaseWidgetItemDetails": {
      "properties": "@{description=; iconUrl=; subTitle=; title=}",
      "type": "object"
    },
    "LolPurchaseWidgetItemKey": {
      "properties": "@{inventoryType=; itemId=}",
      "type": "object"
    },
    "LolPurchaseWidgetItemMetadataEntry": {
      "properties": "@{type=; value=}",
      "type": "object"
    },
    "LolPurchaseWidgetItemOwnership": {
      "properties": "@{itemKey=; quantity=}",
      "type": "object"
    },
    "LolPurchaseWidgetItemPrice": {
      "properties": "@{currencyType=; price=; purchasable=}",
      "type": "object"
    },
    "LolPurchaseWidgetItemSale": {
      "properties": "@{discount=; endDate=; startDate=}",
      "type": "object"
    },
    "LolPurchaseWidgetLoginSession": {
      "properties": "@{accountId=; idToken=; puuid=; state=; summonerId=}",
      "type": "object"
    },
    "LolPurchaseWidgetLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolPurchaseWidgetOrderNotificationResource": {
      "properties": "@{eventType=; eventTypeId=; status=}",
      "type": "object"
    },
    "LolPurchaseWidgetPriceDetail": {
      "properties": "@{itemKey=; price=}",
      "type": "object"
    },
    "LolPurchaseWidgetPriceOptionDto": {
      "properties": "@{currencyImagePath=; currencyName=; currencyPaymentOption=; currencyType=; price=}",
      "type": "object"
    },
    "LolPurchaseWidgetPurchasableItem": {
      "properties": "@{bundledItems=; dependencies=; item=; purchaseOptions=; sale=; validationErrors=}",
      "type": "object"
    },
    "LolPurchaseWidgetPurchaseItem": {
      "properties": "@{itemKey=; purchaseCurrencyInfo=; quantity=; source=}",
      "type": "object"
    },
    "LolPurchaseWidgetPurchaseOfferOrderStates": {
      "enum": "NOT_STARTED IN_PROGRESS FAIL SUCCESS",
      "type": "string"
    },
    "LolPurchaseWidgetPurchaseOfferOrderStatus": {
      "properties": "@{message=; orderState=}",
      "type": "object"
    },
    "LolPurchaseWidgetPurchaseOfferOrderStatuses": {
      "properties": "@{statuses=}",
      "type": "object"
    },
    "LolPurchaseWidgetPurchaseOfferRequestV3": {
      "properties": "@{currencyType=; offerId=; price=; quantity=}",
      "type": "object"
    },
    "LolPurchaseWidgetPurchaseOfferResponseV3": {
      "properties": "@{legacy=; orderDto=}",
      "type": "object"
    },
    "LolPurchaseWidgetPurchaseOption": {
      "properties": "@{priceDetails=}",
      "type": "object"
    },
    "LolPurchaseWidgetPurchaseRequest": {
      "properties": "@{items=}",
      "type": "object"
    },
    "LolPurchaseWidgetPurchaseResponse": {
      "properties": "@{items=; transactions=; useRMSConfirmation=}",
      "type": "object"
    },
    "LolPurchaseWidgetPurchaseWidgetConfig": {
      "properties": "@{alwaysShowPurchaseDisclaimer=; enabled=; nonRefundableDisclaimerEnabled=}",
      "type": "object"
    },
    "LolPurchaseWidgetRiotMessagingServiceMessage": {
      "properties": "@{payload=; resource=; service=; timestamp=; version=}",
      "type": "object"
    },
    "LolPurchaseWidgetSale": {
      "properties": "@{endDate=; prices=; startDate=}",
      "type": "object"
    },
    "LolPurchaseWidgetSkinLineDescriptionDto": {
      "properties": "@{description=; iconImagePath=; title=}",
      "type": "object"
    },
    "LolPurchaseWidgetSkinLineDescriptionInfo": {
      "properties": "@{description=; iconPath=; title=}",
      "type": "object"
    },
    "LolPurchaseWidgetSkinLineInfo": {
      "properties": "@{collectionCardPath=; collectionDescription=; descriptionInfo=; name=; splashPath=; tiers=; tilePath=; uncenteredSplashPath=}",
      "type": "object"
    },
    "LolPurchaseWidgetSkinLineItemDto": {
      "properties": "@{largeImagePath=; largeVideoPath=; localizedLongName=; localizedShortName=; thumbnailImagePath=}",
      "type": "object"
    },
    "LolPurchaseWidgetSkinLineTier": {
      "properties": "@{collectionSplashVideoPath=; description=; id=; loadScreenPath=; name=; shortName=; splashPath=; splashVideoPath=; stage=; tilePath=; uncenteredSplashPath=}",
      "type": "object"
    },
    "LolPurchaseWidgetTransaction": {
      "properties": "@{iconUrl=; itemKey=; itemName=; transactionId=}",
      "type": "object"
    },
    "LolPurchaseWidgetValidateOfferError": {
      "properties": "@{errorKey=; meta=}",
      "type": "object"
    },
    "LolPurchaseWidgetValidateOfferRequestV3": {
      "properties": "@{offerId=}",
      "type": "object"
    },
    "LolPurchaseWidgetValidateOfferResponseV3": {
      "properties": "@{validationErrors=}",
      "type": "object"
    },
    "LolPurchaseWidgetValidationError": {
      "properties": "@{errorCode=; errorDetails=; message=; responseItems=}",
      "type": "object"
    },
    "LolPurchaseWidgetValidationErrorEntry": {
      "properties": "@{id=}",
      "type": "object"
    },
    "LolPurchaseWidgetValidationRequest": {
      "properties": "@{items=; ownedItems=}",
      "type": "object"
    },
    "LolPurchaseWidgetValidationRequestItem": {
      "properties": "@{itemKey=; quantity=}",
      "type": "object"
    },
    "LolPurchaseWidgetValidationResponse": {
      "properties": "@{items=; valid=}",
      "type": "object"
    },
    "LolPurchaseWidgetValidationResponseItem": {
      "properties": "@{description=; itemKey=; name=; quantity=; sale=; validationCurrencyInfo=}",
      "type": "object"
    },
    "LolPurchaseWidgetWallet": {
      "properties": "@{accountId=; balances=; version=}",
      "type": "object"
    },
    "LolRankedAchievedTier": {
      "properties": "@{division=; queueType=; tier=}",
      "type": "object"
    },
    "LolRankedEndOfGameStatsBlock": {
      "properties": "@{gameId=}",
      "type": "object"
    },
    "LolRankedEosNotificationResource": {
      "properties": "@{division=; notificationName=; notificationType=; queue=; seasonEndTime=; tier=}",
      "type": "object"
    },
    "LolRankedEosNotificationType": {
      "enum": "FIRST_WARNING SECOND_WARNING SEASON_ENDED",
      "type": "string"
    },
    "LolRankedEosNotificationsConfig": {
      "properties": "@{config=}",
      "type": "object"
    },
    "LolRankedEosNotificationsConfigEntry": {
      "properties": "@{name=; offsetTime1=; offsetTime2=; offsetTime3=}",
      "type": "object"
    },
    "LolRankedEosRewardData": {
      "properties": "@{id=; overrideImagePath=; type=}",
      "type": "object"
    },
    "LolRankedEosRewardGroupsConfig": {
      "properties": "@{rewardGroups=}",
      "type": "object"
    },
    "LolRankedEosRewardGroupsRewardsList": {
      "properties": "@{rewards=}",
      "type": "object"
    },
    "LolRankedEosRewardsConfig": {
      "properties": "@{seasons=}",
      "type": "object"
    },
    "LolRankedEosRewardsConfigEntry": {
      "properties": "@{rewards=}",
      "type": "object"
    },
    "LolRankedEosSettingsData": {
      "properties": "@{notificationShown=}",
      "type": "object"
    },
    "LolRankedEosSettingsResource": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolRankedGameflowGameData": {
      "properties": "@{queue=}",
      "type": "object"
    },
    "LolRankedGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolRankedGameflowSession": {
      "properties": "@{gameData=; phase=}",
      "type": "object"
    },
    "LolRankedGlobalNotification": {
      "properties": "@{notifyReason=; participantId=; position=; queueType=; tier=}",
      "type": "object"
    },
    "LolRankedLcuLeagueNotification": {
      "properties": "@{afkLpPenaltyAmount=; afkLpPenaltyLevel=; canDemoteFromTier=; changeReason=; consolationLpUsed=; displayType=; division=; eligibleForPromoHelper=; gameId=; id=; leaguePoints=; leaguePointsDelta=; miniseriesProgress=; miniseriesWins=; msgId=; notifyReason=; numberOfPromotions=; promoSeriesForRanksEnabled=; provisionalGamesRemaining=; queueType=; ratedRating=; ratedRatingDelta=; ratedTier=; rewardEarnedId=; rewardEarnedType=; rewardOverrideImagePath=; splitPointsNotification=; tier=; timeUntilInactivityStatusChanges=; wasAfkOrLeaver=; winStreak=}",
      "type": "object"
    },
    "LolRankedLeagueDivision": {
      "enum": "I II III IV V NA",
      "type": "string"
    },
    "LolRankedLeagueDivisionInfo": {
      "properties": "@{apexUnlockTimeMillis=; division=; maxLeagueSize=; minLpForApexTier=; standings=; tier=; topNumberOfPlayers=}",
      "type": "object"
    },
    "LolRankedLeagueLadderDTO": {
      "properties": "@{apexUnlockTimeMillis=; entries=; maxLeagueSize=; minLpForTier=; nextApexUpdate=; provisionalGameThreshold=; queueType=; tier=; topNumberOfPlayers=}",
      "type": "object"
    },
    "LolRankedLeagueLadderEntryDTO": {
      "properties": "@{earnedRegaliaRewardIds=; leaguePoints=; losses=; miniSeriesProgress=; previousDayLeaguePosition=; previousSeasonAchievedRank=; previousSeasonAchievedTier=; provisionalGamesRemaining=; puuid=; rank=; summonerId=; summonerName=; tier=; wins=}",
      "type": "object"
    },
    "LolRankedLeagueLadderInfo": {
      "properties": "@{divisions=; nextApexUpdateMillis=; provisionalGameThreshold=; queueType=; requestedRankedEntry=; tier=}",
      "type": "object"
    },
    "LolRankedLeagueNotification": {
      "properties": "@{afkLpPenaltyAmount=; afkLpPenaltyLevel=; canDemoteFromTier=; changeReason=; consolationLpUsed=; eligibleForPromoHelper=; gameId=; leaguePoints=; leaguePointsDelta=; miniseriesProgress=; notifyReason=; promoSeriesForRanksEnabled=; provisionalGamesRemaining=; queueType=; rank=; ratedRating=; ratedRatingDelta=; ratedTier=; splitPoints=; splitPointsBreakdown=; tier=; wasAfkOrLeaver=; winStreak=}",
      "type": "object"
    },
    "LolRankedLeagueNotifications": {
      "properties": "@{globalNotifications=; leagueNotifications=; rewardNotifications=}",
      "type": "object"
    },
    "LolRankedLeagueQueueType": {
      "enum": "NONE RANKED_SOLO_5x5 RANKED_FLEX_SR CHERRY RANKED_FLEX_TT RANKED_TFT RANKED_TFT_TURBO RANKED_TFT_PAIRS RANKED_TFT_DOUBLE_UP",
      "type": "string"
    },
    "LolRankedLeagueStanding": {
      "properties": "@{division=; earnedRegaliaRewardIds=; isProvisional=; leaguePoints=; losses=; miniseriesResults=; pendingDemotion=; pendingPromotion=; position=; positionDelta=; previousPosition=; previousSeasonAchievedDivision=; previousSeasonAchievedTier=; provisionalGamesRemaining=; puuid=; rankedRegaliaLevel=; summonerId=; summonerName=; tier=; wins=}",
      "type": "object"
    },
    "LolRankedLeagueTierAndRankDTO": {
      "properties": "@{playerOrTeamId=; playerOrTeamName=; queueType=; rank=; tier=}",
      "type": "object"
    },
    "LolRankedLeaguesSeasonRewardConfig": {
      "properties": "@{QualificationWarningEnabled=}",
      "type": "object"
    },
    "LolRankedLoginSession": {
      "properties": "@{accountId=; state=; summonerId=}",
      "type": "object"
    },
    "LolRankedLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolRankedMiniseries": {
      "enum": "W L N",
      "type": "string"
    },
    "LolRankedNotificationDisplayType": {
      "enum": "NONE TOAST MODAL VIGNETTE",
      "type": "string"
    },
    "LolRankedParticipantTiers": {
      "properties": "@{achievedTiers=; summonerId=}",
      "type": "object"
    },
    "LolRankedQueue": {
      "properties": "@{type=}",
      "type": "object"
    },
    "LolRankedQueuesAndPuuidsPayload": {
      "properties": "@{queueTypes=; summonerIds=}",
      "type": "object"
    },
    "LolRankedRankedQueueStats": {
      "properties": "@{division=; highestDivision=; highestTier=; isProvisional=; leaguePoints=; losses=; miniSeriesProgress=; previousSeasonAchievedDivision=; previousSeasonAchievedTier=; previousSeasonEndDivision=; previousSeasonEndTier=; provisionalGameThreshold=; provisionalGamesRemaining=; queueType=; ratedRating=; ratedTier=; tier=; warnings=; wins=}",
      "type": "object"
    },
    "LolRankedRankedQueueStatsDTO": {
      "properties": "@{highestRank=; highestTier=; leaguePoints=; losses=; miniSeriesProgress=; previousSeasonAchievedRank=; previousSeasonAchievedTier=; previousSeasonEndRank=; previousSeasonEndTier=; provisionalGameThreshold=; provisionalGamesRemaining=; queueType=; rank=; ratedRating=; ratedTier=; tier=; warnings=; wins=}",
      "type": "object"
    },
    "LolRankedRankedQueueWarnings": {
      "properties": "@{daysUntilDecay=; demotionWarning=; displayDecayWarning=; timeUntilInactivityStatusChanges=}",
      "type": "object"
    },
    "LolRankedRankedQueueWarningsDTO": {
      "properties": "@{apexDaysUntilDecay=; daysUntilDecay=; demotionWarning=; displayDecayWarning=; timeUntilInactivityStatusChanges=}",
      "type": "object"
    },
    "LolRankedRankedStats": {
      "properties": "@{earnedRegaliaRewardIds=; highestCurrentSeasonReachedTierSR=; highestPreviousSeasonAchievedDivision=; highestPreviousSeasonAchievedTier=; highestPreviousSeasonEndDivision=; highestPreviousSeasonEndTier=; highestRankedEntry=; highestRankedEntrySR=; queueMap=; queues=; rankedRegaliaLevel=; seasons=; splitsProgress=}",
      "type": "object"
    },
    "LolRankedRankedStatsDTO": {
      "properties": "@{earnedRegaliaRewardIds=; highestPreviousSeasonAchievedRank=; highestPreviousSeasonAchievedTier=; highestPreviousSeasonEndRank=; highestPreviousSeasonEndTier=; queues=; seasons=; splitsProgress=}",
      "type": "object"
    },
    "LolRankedRatedLadderEntryDTO": {
      "properties": "@{previousUpdateLadderPosition=; puuid=; ratedRating=; ratedTier=; summonerId=; summonerName=; wins=}",
      "type": "object"
    },
    "LolRankedRatedLadderInfo": {
      "properties": "@{queueType=; standings=}",
      "type": "object"
    },
    "LolRankedRatedLadderStanding": {
      "properties": "@{leaguePoints=; position=; positionDelta=; previousPosition=; puuid=; ratedTier=; summonerId=; summonerName=; wins=}",
      "type": "object"
    },
    "LolRankedRatedTier": {
      "enum": "NONE GRAY GREEN BLUE PURPLE ORANGE",
      "type": "string"
    },
    "LolRankedRewardNotification": {
      "properties": "@{rewardGroupId=; seasonId=}",
      "type": "object"
    },
    "LolRankedRewardsInfo": {
      "properties": "@{currentSeasonId=; currentSplit=; currentSplitId=; rewardInfoByRewardId=; splits=}",
      "type": "object"
    },
    "LolRankedSeasonDTO": {
      "properties": "@{currentSeasonEnd=; currentSeasonId=; nextSeasonStart=}",
      "type": "object"
    },
    "LolRankedSeasonSplit": {
      "properties": "@{endTimeMillis=; rewardTrack=; seasonId=; splitId=; startTimeMillis=; victoriousSkinRewardGroup=}",
      "type": "object"
    },
    "LolRankedSeasonSplitDTO": {
      "properties": "@{endTime=; rewardTrack=; seasonId=; splitId=; startTime=; victoriousSkinRewardGroup=}",
      "type": "object"
    },
    "LolRankedSequenceEvent": {
      "properties": "@{name=; priority=}",
      "type": "object"
    },
    "LolRankedSeverity": {
      "enum": "WARNING ALERT",
      "type": "string"
    },
    "LolRankedSignedRankedStatsDTO": {
      "properties": "@{earnedRegaliaRewardIds=; highestPreviousSeasonAchievedRank=; highestPreviousSeasonAchievedTier=; highestPreviousSeasonEndRank=; highestPreviousSeasonEndTier=; jwt=; queues=; seasons=; splitsProgress=}",
      "type": "object"
    },
    "LolRankedSocialLeaderboardRankedQueueStats": {
      "properties": "@{division=; isProvisional=; leaguePoints=; losses=; miniSeriesProgress=; provisionalGameThreshold=; provisionalGamesRemaining=; queueType=; ratedRating=; ratedTier=; tier=; wins=}",
      "type": "object"
    },
    "LolRankedSocialLeaderboardRankedQueueStatsDTO": {
      "properties": "@{leaguePoints=; losses=; miniSeriesProgress=; provisionalGameThreshold=; provisionalGamesRemaining=; queueType=; rank=; ratedRating=; ratedTier=; tier=; wins=}",
      "type": "object"
    },
    "LolRankedSplitPointsNotification": {
      "properties": "@{nextRewardId=; nextRewardType=; previousSplitPointsRequired=; splitPointsAfterGame=; splitPointsBeforeGame=; splitPointsBreakdown=; splitPointsDelta=; splitPointsRequired=}",
      "type": "object"
    },
    "LolRankedSplitReward": {
      "properties": "@{championId=; description=; id=; pointsRequired=; quantity=; regaliaLevel=; rewardType=; splitId=}",
      "type": "object"
    },
    "LolRankedSplitRewardDTO": {
      "properties": "@{defaultRewardId=; metadata=; rewardType=; tieredRewardIds=}",
      "type": "object"
    },
    "LolRankedSplitRewardGroup": {
      "properties": "@{rewards=; splitPoints=}",
      "type": "object"
    },
    "LolRankedSplitRewardGroupDTO": {
      "properties": "@{rewards=; splitPoints=}",
      "type": "object"
    },
    "LolRankedSplitRewardsMetaData": {
      "properties": "@{championId=; description=; quantity=}",
      "type": "object"
    },
    "LolRankedSummoner": {
      "properties": "@{puuid=; summonerId=}",
      "type": "object"
    },
    "LolRankedVictoriousSkin": {
      "properties": "@{itemInstanceId=; splitPointsByHighestAchievedTier=}",
      "type": "object"
    },
    "LolRankedVictoriousSkinDTO": {
      "properties": "@{itemInstanceId=; splitPointsByHighestAchievedTier=}",
      "type": "object"
    },
    "LolRegaliaAccountIdAndSummonerId": {
      "properties": "@{summonerId=}",
      "type": "object"
    },
    "LolRegaliaChatPresence": {
      "properties": "@{icon=; lol=; summonerId=}",
      "type": "object"
    },
    "LolRegaliaChatPresenceExternal": {
      "properties": "@{icon=; id=; lol=; summonerId=}",
      "type": "object"
    },
    "LolRegaliaChatPresenceLolData": {
      "properties": "@{level=; rankedLeagueDivision=; rankedLeagueQueue=; rankedLeagueTier=; rankedPrevSeasonDivision=; rankedPrevSeasonTier=; rankedSplitRewardLevel=; regalia=}",
      "type": "object"
    },
    "LolRegaliaGameDataRegalia": {
      "properties": "@{assetPath=; id=; idSecondary=; isSelectable=; localizedDescription=; localizedName=; regaliaType=}",
      "type": "object"
    },
    "LolRegaliaInventoryItem": {
      "properties": "@{itemId=; purchaseDate=; uuid=}",
      "type": "object"
    },
    "LolRegaliaItemKey": {
      "properties": "@{inventoryType=; itemId=}",
      "type": "object"
    },
    "LolRegaliaLeagueDivision": {
      "enum": "I II III IV V NA",
      "type": "string"
    },
    "LolRegaliaLeagueQueueType": {
      "enum": "NONE RANKED_SOLO_5x5 RANKED_FLEX_SR RANKED_FLEX_TT RANKED_TFT RANKED_TFT_TURBO RANKED_TFT_PAIRS RANKED_TFT_DOUBLE_UP",
      "type": "string"
    },
    "LolRegaliaLoadout": {
      "properties": "@{id=; loadout=; name=; scope=}",
      "type": "object"
    },
    "LolRegaliaRankedQueueStats": {
      "properties": "@{division=; isProvisional=; queueType=; tier=}",
      "type": "object"
    },
    "LolRegaliaRankedStats": {
      "properties": "@{highestPreviousSeasonAchievedTier=; highestRankedEntry=; queues=; rankedRegaliaLevel=}",
      "type": "object"
    },
    "LolRegaliaRegalia": {
      "properties": "@{bannerType=; crestType=; highestRankedEntry=; lastSeasonHighestRank=; profileIconId=; selectedPrestigeCrest=; summonerLevel=}",
      "type": "object"
    },
    "LolRegaliaRegaliaAsync": {
      "properties": "@{md5=}",
      "type": "object"
    },
    "LolRegaliaRegaliaBannerType": {
      "enum": "blank lastSeasonHighestRank",
      "type": "string"
    },
    "LolRegaliaRegaliaCrestType": {
      "enum": "none prestige ranked",
      "type": "string"
    },
    "LolRegaliaRegaliaFrontendConfig": {
      "properties": "@{hovercardEnabled=; selectionsEnabled=}",
      "type": "object"
    },
    "LolRegaliaRegaliaInventoryItem": {
      "properties": "@{isOwned=; items=}",
      "type": "object"
    },
    "LolRegaliaRegaliaLoadout": {
      "properties": "@{REGALIA_BANNER_SLOT=; REGALIA_CREST_SLOT=}",
      "type": "object"
    },
    "LolRegaliaRegaliaPlatformConfig": {
      "properties": "@{HovercardEnabled=; SelectionsEnabled=}",
      "type": "object"
    },
    "LolRegaliaRegaliaPreferences": {
      "properties": "@{preferredBannerType=; preferredCrestType=; selectedPrestigeCrest=}",
      "type": "object"
    },
    "LolRegaliaRegaliaRankedEntry": {
      "properties": "@{division=; queueType=; splitRewardLevel=; tier=}",
      "type": "object"
    },
    "LolRegaliaRegaliaSettings": {
      "properties": "@{bannerType=; crestType=; selectedPrestigeCrest=}",
      "type": "object"
    },
    "LolRegaliaRegaliaSettingsExternal": {
      "properties": "@{bannerType=; crestType=; selectedPrestigeCrest=}",
      "type": "object"
    },
    "LolRegaliaRegaliaWithPreferences": {
      "properties": "@{bannerType=; crestType=; highestRankedEntry=; lastSeasonHighestRank=; preferredBannerType=; preferredCrestType=; profileIconId=; selectedPrestigeCrest=; summonerLevel=}",
      "type": "object"
    },
    "LolRegaliaSummoner": {
      "properties": "@{profileIconId=; puuid=; summonerId=; summonerLevel=}",
      "type": "object"
    },
    "LolRegaliaSummonerProfile": {
      "properties": "@{regalia=}",
      "type": "object"
    },
    "LolRegaliaSummonerProfileUpdate": {
      "properties": "@{key=; value=}",
      "type": "object"
    },
    "LolReplaysClashPlaymodeRestrictedInfo": {
      "properties": "@{isRestricted=}",
      "type": "object"
    },
    "LolReplaysGameflowAvailability": {
      "properties": "@{state=}",
      "type": "object"
    },
    "LolReplaysGameflowGameClient": {
      "properties": "@{running=}",
      "type": "object"
    },
    "LolReplaysGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolReplaysGameflowSession": {
      "properties": "@{gameClient=; phase=}",
      "type": "object"
    },
    "LolReplaysGameflowWatchPhase": {
      "enum": "None WatchStarted WatchInProgress WatchFailedToLaunch",
      "type": "string"
    },
    "LolReplaysInstallPaths": {
      "properties": "@{gameExecutablePath=; gameInstallRoot=}",
      "type": "object"
    },
    "LolReplaysMetadataState": {
      "enum": "checking found watch download downloading incompatible missingOrExpired retryDownload lost unsupported error",
      "type": "string"
    },
    "LolReplaysReplayContextData": {
      "properties": "@{componentType=}",
      "type": "object"
    },
    "LolReplaysReplayCreateMetadata": {
      "properties": "@{gameEnd=; gameType=; gameVersion=; queueId=}",
      "type": "object"
    },
    "LolReplaysReplayMetadata": {
      "properties": "@{downloadProgress=; gameId=; state=}",
      "type": "object"
    },
    "LolReplaysReplaysConfiguration": {
      "properties": "@{gameVersion=; isInTournament=; isLoggedIn=; isPatching=; isPlayingGame=; isPlayingReplay=; isReplaysEnabled=; isReplaysForEndOfGameEnabled=; isReplaysForMatchHistoryEnabled=; minServerVersion=; minutesUntilReplayConsideredLost=}",
      "type": "object"
    },
    "LolReplaysReplaysDynamicConfig": {
      "properties": "@{MinSupportedGameServerVersion=; MinutesUntilReplayConsideredLost=}",
      "type": "object"
    },
    "LolReplaysReplaysSettingsData": {
      "properties": "@{highlights-folder-path=; replays-folder-path=}",
      "type": "object"
    },
    "LolReplaysReplaysSettingsResource": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolReplaysRoflFileMetadata": {
      "properties": "@{gameLength=; gameVersion=; lastGameChunkId=; lastKeyFrameId=}",
      "type": "object"
    },
    "LolRewardsCelebrationType": {
      "enum": "NONE TOAST FULLSCREEN",
      "type": "string"
    },
    "LolRewardsGrantStatus": {
      "enum": "PENDING_FULFILLMENT PENDING_SELECTION FULFILLED FAILED",
      "type": "string"
    },
    "LolRewardsGrantorDescription": {
      "properties": "@{appName=; entityId=}",
      "type": "object"
    },
    "LolRewardsRMSPayload": {
      "properties": "@{affinities=; productId=}",
      "type": "object"
    },
    "LolRewardsRegionLocale": {
      "properties": "@{locale=; region=}",
      "type": "object"
    },
    "LolRewardsRequestDTO-SelectionRequestDTO": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolRewardsRequestDTO-vector-SelectionRequestDTO": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolRewardsRequestMetadataDTO": {
      "properties": "@{transactionId=}",
      "type": "object"
    },
    "LolRewardsResponseDTO-SvcRewardGrant": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolRewardsResponseDTO-map-RewardGroupId-SelectGrantStatus": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolRewardsResponseDTO-vector-SvcRewardGrant": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolRewardsResponseDTO-vector-SvcRewardGroup": {
      "properties": "@{data=; metadata=}",
      "type": "object"
    },
    "LolRewardsResponseMetadataDTO": {
      "properties": "",
      "type": "object"
    },
    "LolRewardsReward": {
      "properties": "@{fulfillmentSource=; id=; itemId=; itemType=; localizations=; media=; quantity=}",
      "type": "object"
    },
    "LolRewardsRewardGrant": {
      "properties": "@{info=; rewardGroup=}",
      "type": "object"
    },
    "LolRewardsRewardStatus": {
      "enum": "PENDING FULFILLED FAILED",
      "type": "string"
    },
    "LolRewardsRewardStrategy": {
      "enum": "ALL RANDOM SELECTION",
      "type": "string"
    },
    "LolRewardsRewardsConfig": {
      "properties": "@{GrantFiltering=}",
      "type": "object"
    },
    "LolRewardsSelectGrantStatusResponse": {
      "enum": "SELECTED FAILED",
      "type": "string"
    },
    "LolRewardsSelectionRequestDTO": {
      "properties": "@{grantId=; rewardGroupId=; selections=}",
      "type": "object"
    },
    "LolRewardsSelectionStrategyConfig": {
      "properties": "@{maxSelectionsAllowed=; minSelectionsAllowed=}",
      "type": "object"
    },
    "LolRewardsSvcRewardGrant": {
      "properties": "@{dateCreated=; grantElements=; granteeId=; grantorDescription=; id=; messageParameters=; rewardGroupId=; selectedIds=; status=; viewed=}",
      "type": "object"
    },
    "LolRewardsSvcRewardGrantElement": {
      "properties": "@{elementId=; fulfillmentSource=; itemId=; itemType=; localizations=; media=; quantity=; status=}",
      "type": "object"
    },
    "LolRewardsSvcRewardGroup": {
      "properties": "@{active=; celebrationType=; childRewardGroupIds=; id=; localizations=; media=; productId=; rewardStrategy=; rewards=; selectionStrategyConfig=; types=}",
      "type": "object"
    },
    "LolRiotMessagingServiceChampionMasteryLevelUp": {
      "properties": "@{championId=; championLevel=; hasLeveledUp=; id=; playerId=}",
      "type": "object"
    },
    "LolRiotMessagingServiceGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolRiotMessagingServiceGameflowSession": {
      "properties": "@{phase=}",
      "type": "object"
    },
    "LolRiotclientUpgraderGameflowAvailability": {
      "properties": "@{isAvailable=; state=}",
      "type": "object"
    },
    "LolRsoAuthAccessToken": {
      "properties": "@{expiry=; scopes=; token=}",
      "type": "object"
    },
    "LolRsoAuthAuthError": {
      "properties": "@{error=; errorDescription=}",
      "type": "object"
    },
    "LolRsoAuthAuthHint": {
      "properties": "@{context=; required=; type=}",
      "type": "object"
    },
    "LolRsoAuthAuthHintType": {
      "enum": "email_verification password_reset parental_consent ambiguous_username",
      "type": "string"
    },
    "LolRsoAuthAuthorization": {
      "properties": "@{currentAccountId=; currentPlatformId=; subject=}",
      "type": "object"
    },
    "LolRsoAuthAuthorizationRequest": {
      "properties": "@{claims=; clientId=; scope=; trustLevels=}",
      "type": "object"
    },
    "LolRsoAuthAuthorizationResponse": {
      "properties": "@{authorization=; type=}",
      "type": "object"
    },
    "LolRsoAuthConfigReadinessEnum": {
      "enum": "NotReady Ready Disabled",
      "type": "string"
    },
    "LolRsoAuthConfigStatus": {
      "properties": "@{readiness=}",
      "type": "object"
    },
    "LolRsoAuthConfigType": {
      "enum": "public player",
      "type": "string"
    },
    "LolRsoAuthDeviceId": {
      "properties": "@{collectorServerName=; frameUrl=; installId=; merchantId=; sessionId=}",
      "type": "object"
    },
    "LolRsoAuthEntitlementsToken": {
      "properties": "@{entitlements=; expiry=; token=}",
      "type": "object"
    },
    "LolRsoAuthIdToken": {
      "properties": "@{expiry=; token=}",
      "type": "object"
    },
    "LolRsoAuthImplicitAuthorization": {
      "properties": "@{accessToken=; idToken=}",
      "type": "object"
    },
    "LolRsoAuthPublicClientConfig": {
      "properties": "@{clientId=; url=}",
      "type": "object"
    },
    "LolRsoAuthRSOAuthorizationTrustLevel": {
      "enum": "always_trusted trusted_device always_verify",
      "type": "string"
    },
    "LolRsoAuthRSOConfigReadyState": {
      "properties": "@{ready=}",
      "type": "object"
    },
    "LolRsoAuthRSOJWTConfig": {
      "properties": "@{token=}",
      "type": "object"
    },
    "LolRsoAuthRSOPlayerCredentials": {
      "properties": "@{password=; platformId=; username=}",
      "type": "object"
    },
    "LolRsoAuthRegionStatus": {
      "properties": "@{enabled=; isLQFallbackAllowed=; isUserInfoEnabled=; platformId=}",
      "type": "object"
    },
    "LolRsoAuthSessionResponse": {
      "properties": "@{error=; type=}",
      "type": "object"
    },
    "LolRsoAuthUserInfo": {
      "properties": "@{userInfo=}",
      "type": "object"
    },
    "LolSeasonsAllSeasonsProduct": {
      "properties": "@{act=; metadata=; seasonEnd=; seasonId=; seasonStart=}",
      "type": "object"
    },
    "LolSeasonsSeasonMetaData": {
      "properties": "@{currentSplit=; locKey=; publicName=; totalSplit=}",
      "type": "object"
    },
    "LolServiceStatusBroadcastMessage": {
      "properties": "@{content=; messageKey=; severity=}",
      "type": "object"
    },
    "LolServiceStatusBroadcastNotification": {
      "properties": "@{broadcastMessages=}",
      "type": "object"
    },
    "LolServiceStatusLegacyServiceStatusMessage": {
      "properties": "@{content=; created_at=; heading=; severity=; translations=; updated_at=}",
      "type": "object"
    },
    "LolServiceStatusLegacyServiceStatusResponse": {
      "properties": "@{messages=; status=}",
      "type": "object"
    },
    "LolServiceStatusLegacyServiceStatusTranslation": {
      "properties": "@{content=; heading=; locale=}",
      "type": "object"
    },
    "LolServiceStatusLoginDataPacket": {
      "properties": "@{broadcastNotification=}",
      "type": "object"
    },
    "LolServiceStatusRegionLocaleResource": {
      "properties": "@{locale=; region=}",
      "type": "object"
    },
    "LolServiceStatusRiotStatusIncident": {
      "properties": "@{archive_at=; created_at=; id=; incident_severity=; platforms=; titles=; updated_at=; updates=}",
      "type": "object"
    },
    "LolServiceStatusRiotStatusMaintenance": {
      "properties": "@{archive_at=; created_at=; id=; maintenance_status=; platforms=; titles=; updated_at=; updates=}",
      "type": "object"
    },
    "LolServiceStatusRiotStatusResource": {
      "properties": "@{id=; incidents=; locales=; maintenances=; name=}",
      "type": "object"
    },
    "LolServiceStatusRiotStatusTitle": {
      "properties": "@{content=; locale=}",
      "type": "object"
    },
    "LolServiceStatusRiotStatusTranslation": {
      "properties": "@{content=; locale=}",
      "type": "object"
    },
    "LolServiceStatusRiotStatusUpdate": {
      "properties": "@{author=; created_at=; id=; publish=; publish_locations=; translations=; updated_at=}",
      "type": "object"
    },
    "LolServiceStatusServiceStatusResource": {
      "properties": "@{humanReadableUrl=; status=}",
      "type": "object"
    },
    "LolServiceStatusTickerMessage": {
      "properties": "@{createdAt=; heading=; message=; severity=; updatedAt=}",
      "type": "object"
    },
    "LolSettingsLCUGameSettingsConfig": {
      "properties": "@{GameplayEnabled=; HotkeysEnabled=; InterfaceEnabled=; ReplaysEnabled=; SoundEnabled=}",
      "type": "object"
    },
    "LolSettingsLoginSession": {
      "properties": "@{accountId=; state=; summonerId=}",
      "type": "object"
    },
    "LolSettingsLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolSettingsPublisher": {
      "enum": "riot garena tencent twm vng",
      "type": "string"
    },
    "LolSettingsRegionLocale": {
      "properties": "@{locale=; region=}",
      "type": "object"
    },
    "LolSettingsReplaysConfig": {
      "properties": "@{replayServiceEnabled=}",
      "type": "object"
    },
    "LolSettingsSettingCategory": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolSettingsSettingsConfig": {
      "properties": "@{isGameplayEnabled=; isHotkeysEnabled=; isInterfaceEnabled=; isLegalStatementsEnabled=; isPrivacyNoticeEnabled=; isReplaysEnabled=; isSoundEnabled=; isTermsEnabled=; localizedLicensesURL=}",
      "type": "object"
    },
    "LolShutdownShutdownNotification": {
      "properties": "@{additionalInfo=; countdown=; reason=}",
      "type": "object"
    },
    "LolShutdownShutdownReason": {
      "enum": "Invalid PlatformMaintenance LcuAlphaDisabled PlayerBanned",
      "type": "string"
    },
    "LolSimpleDialogMessagesGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolSimpleDialogMessagesGameflowSession": {
      "properties": "@{phase=}",
      "type": "object"
    },
    "LolSimpleDialogMessagesLocalMessageRequest": {
      "properties": "@{msgBody=; msgType=}",
      "type": "object"
    },
    "LolSimpleDialogMessagesLoginDataPacket": {
      "properties": "@{simpleMessages=}",
      "type": "object"
    },
    "LolSimpleDialogMessagesMessage": {
      "properties": "@{body=; id=; type=}",
      "type": "object"
    },
    "LolSimpleDialogMessagesSimpleMessage": {
      "properties": "@{accountId=; msgId=; params=; type=}",
      "type": "object"
    },
    "LolSocialLeaderboardFriendResource": {
      "properties": "@{availability=; icon=; name=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolSocialLeaderboardGiftingFriend": {
      "properties": "@{summonerId=}",
      "type": "object"
    },
    "LolSocialLeaderboardLeagueDivision": {
      "enum": "I II III IV V NA",
      "type": "string"
    },
    "LolSocialLeaderboardLeagueQueueType": {
      "enum": "NONE RANKED_SOLO_5x5 RANKED_FLEX_SR RANKED_FLEX_TT RANKED_TFT RANKED_TFT_TURBO RANKED_TFT_PAIRS RANKED_TFT_DOUBLE_UP",
      "type": "string"
    },
    "LolSocialLeaderboardLeagueTierNumValue": {
      "enum": "NONE IRON BRONZE SILVER GOLD PLATINUM DIAMOND MASTER GRANDMASTER CHALLENGER",
      "type": "string"
    },
    "LolSocialLeaderboardRankedQueueStats": {
      "properties": "@{division=; isProvisional=; leaguePoints=; provisionalGamesRemaining=; queueType=; tier=; wins=}",
      "type": "object"
    },
    "LolSocialLeaderboardRankedStats": {
      "properties": "@{queueMap=}",
      "type": "object"
    },
    "LolSocialLeaderboardSocialLeaderboardData": {
      "properties": "@{nextUpdateTime=; rowData=}",
      "type": "object"
    },
    "LolSocialLeaderboardSocialLeaderboardRowData": {
      "properties": "@{availability=; division=; isGiftable=; isProvisional=; leaderboardPosition=; leaguePoints=; profileIconId=; provisionalGamesRemaining=; puuid=; summonerId=; summonerLevel=; summonerName=; tier=; wins=}",
      "type": "object"
    },
    "LolSocialLeaderboardSummoner": {
      "properties": "@{accountId=; displayName=; internalName=; profileIconId=; puuid=; summonerId=; summonerLevel=}",
      "type": "object"
    },
    "LolSpectatorSpectateGameInfo": {
      "properties": "@{allowObserveMode=; dropInSpectateGameId=; gameQueueType=; puuid=}",
      "type": "object"
    },
    "LolSpectatorSummonerOrTeamAvailabilty": {
      "properties": "@{availableForWatching=}",
      "type": "object"
    },
    "LolStatstonesCatalogBundle": {
      "properties": "@{item=}",
      "type": "object"
    },
    "LolStatstonesCatalogBundlePrice": {
      "properties": "@{cost=; currency=}",
      "type": "object"
    },
    "LolStatstonesCatalogItemDetails": {
      "properties": "@{inventoryType=; itemId=; itemInstanceId=; prices=; releaseDate=; subInventoryType=}",
      "type": "object"
    },
    "LolStatstonesChampionStatstoneSetSummary": {
      "properties": "@{milestonesPassed=; name=; stonesAvailable=; stonesIlluminated=; stonesOwned=}",
      "type": "object"
    },
    "LolStatstonesChampionStatstoneSummary": {
      "properties": "@{championId=; milestonesPassed=; sets=; stonesAvailable=; stonesIlluminated=; stonesOwned=}",
      "type": "object"
    },
    "LolStatstonesCollectionsChampion": {
      "properties": "@{id=; name=; squarePortraitPath=}",
      "type": "object"
    },
    "LolStatstonesEogNotificationEnvelope": {
      "properties": "@{othersPersonalBests=; selfMilestoneProgress=; selfPersonalBests=; selfStatstoneProgress=}",
      "type": "object"
    },
    "LolStatstonesGameDataItemReference": {
      "properties": "@{contentId=; inventoryType=; itemId=}",
      "type": "object"
    },
    "LolStatstonesGameDataStatstone": {
      "properties": "@{boundChampion=; category=; contentId=; description=; iconFull=; iconLit=; iconUnlit=; iconUnowned=; isEpic=; isRetired=; itemId=; milestones=; name=; trackingType=}",
      "type": "object"
    },
    "LolStatstonesGameDataStatstonePack": {
      "properties": "@{contentId=; description=; itemId=; name=}",
      "type": "object"
    },
    "LolStatstonesGameDataStatstoneSet": {
      "properties": "@{contentId=; inventoryType=; itemId=; name=; price=; statstones=}",
      "type": "object"
    },
    "LolStatstonesGameDataStatstonesInfo": {
      "properties": "@{champIdToPackIds=; collectionIdToStatStoneIds=; packData=; packIdToChampIds=; packIdToStatStonesIds=; packIdToSubPackIds=; seriesIdToStatStoneIds=; statstoneData=}",
      "type": "object"
    },
    "LolStatstonesLoadout": {
      "properties": "@{id=; itemId=; loadout=; name=; scope=}",
      "type": "object"
    },
    "LolStatstonesLoadoutItem": {
      "properties": "@{contentId=; inventoryType=; itemId=}",
      "type": "object"
    },
    "LolStatstonesMilestoneNotificationDto": {
      "properties": "@{isCompleted=; level=; statstoneId=; threshold=}",
      "type": "object"
    },
    "LolStatstonesMilestoneProgressNotification": {
      "properties": "@{imageUrl=; level=; statstoneId=; statstoneName=; threshold=}",
      "type": "object"
    },
    "LolStatstonesNumberFormattingBehavior": {
      "properties": "@{digitsForThousandsSeperator=; trimTrailingZerosAfterDecimal=; westernNumberGrouping=}",
      "type": "object"
    },
    "LolStatstonesNumberFormattingData": {
      "properties": "@{billionAbbreviation=; decimalSeperator=; hourAbbreviation=; kilometersAbbreviation=; metersAbbreviation=; millionAbbreviation=; minuteAbbreviation=; numberFormattingBehavior=; oneHundredMillionAbbreviation=; percentageFormat=; secondAbbreviation=; tenThousandAbbreviation=; thousandAbbreviation=; thousandSeperator=; trillionAbbreviation=}",
      "type": "object"
    },
    "LolStatstonesPersonalBestNotification": {
      "properties": "@{imageUrl=; personalBest=; statstoneId=; statstoneName=; summoner=}",
      "type": "object"
    },
    "LolStatstonesPriceInfo": {
      "properties": "@{currency=; price=}",
      "type": "object"
    },
    "LolStatstonesProfileStatstoneSummary": {
      "properties": "@{category=; championId=; imageUrl=; name=; value=}",
      "type": "object"
    },
    "LolStatstonesStatstone": {
      "properties": "@{boundChampionItemId=; category=; completionValue=; description=; formattedMilestoneLevel=; formattedPersonalBest=; formattedValue=; imageUrl=; isComplete=; isEpic=; isFeatured=; isRetired=; name=; nextMilestone=; playerRecord=; statstoneId=}",
      "type": "object"
    },
    "LolStatstonesStatstoneCompletion": {
      "properties": "@{category=; isEpic=; statstoneName=}",
      "type": "object"
    },
    "LolStatstonesStatstoneFeaturedRequest": {
      "properties": "@{existingFeatured=; index=}",
      "type": "object"
    },
    "LolStatstonesStatstoneMasteryVignette": {
      "properties": "@{completedSetUuids=; masteryLevel=; numSetsCompleted=; puuid=}",
      "type": "object"
    },
    "LolStatstonesStatstoneNotificationDto": {
      "properties": "@{best=; delta=; isNewBest=; level=; puuid=; statstoneId=; value=}",
      "type": "object"
    },
    "LolStatstonesStatstoneNotificationEnvelopeDto": {
      "properties": "@{gameId=; milestones=; updates=}",
      "type": "object"
    },
    "LolStatstonesStatstonePlayerRecord": {
      "properties": "@{dateAcquired=; dateArchived=; dateCompleted=; dateModified=; entitled=; milestoneLevel=; personalBest=; puuid=; statstoneId=; value=}",
      "type": "object"
    },
    "LolStatstonesStatstoneProgress": {
      "properties": "@{best=; category=; delta=; description=; existingProgressPercent=; imageUrl=; isNewBest=; level=; newMilestoneDifference=; newProgressPercent=; nextMilestone=; statstoneId=; statstoneName=; totalProgressPercent=; value=}",
      "type": "object"
    },
    "LolStatstonesStatstoneRekindledVignette": {
      "properties": "@{portraitPath=; statstone=}",
      "type": "object"
    },
    "LolStatstonesStatstoneSet": {
      "properties": "@{inventoryType=; itemId=; itemInstanceID=; milestonesPassed=; name=; ownedFromPacks=; prices=; statstones=; stonesOwned=; subInventoryType=}",
      "type": "object"
    },
    "LolStatstonesStatstoneSetCompleteVignette": {
      "properties": "@{statstones=}",
      "type": "object"
    },
    "LolStatstonesStatstoneVignetteNotificationEnvelopeDto": {
      "properties": "@{champId=; champName=; masteryVignetteNotifications=; rekindledVignetteNotifications=; setCompleteVignetteNotifications=}",
      "type": "object"
    },
    "LolStatstonesSummoner": {
      "properties": "@{displayName=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolStoreAccessTokenResource": {
      "properties": "@{expiry=; scopes=; token=}",
      "type": "object"
    },
    "LolStoreAllSummonerData": {
      "properties": "@{summoner=; summonerLevelAndPoints=}",
      "type": "object"
    },
    "LolStoreBundleItemDTO": {
      "properties": "@{description=; discountedRp=; iconUrl=; inventoryType=; ip=; itemId=; name=; owned=; quantity=; rp=}",
      "type": "object"
    },
    "LolStoreBundled": {
      "properties": "@{flexible=; items=; minimumPrices=}",
      "type": "object"
    },
    "LolStoreBundledItem": {
      "properties": "@{discountPrices=; inventoryType=; itemId=; quantity=}",
      "type": "object"
    },
    "LolStoreBundledItemCost": {
      "properties": "@{cost=; costType=; currency=; discount=}",
      "type": "object"
    },
    "LolStoreCapOffer": {
      "properties": "@{active=; createdDate=; id=; label=; merchantId=; payload=; productId=; startDate=; typeId=}",
      "type": "object"
    },
    "LolStoreCatalogInstanceToItemKeyMap": {
      "properties": "@{platformIds=}",
      "type": "object"
    },
    "LolStoreCatalogItem": {
      "properties": "@{active=; bundled=; iconUrl=; inactiveDate=; inventoryType=; itemId=; itemInstanceId=; itemRequirements=; localizations=; maxQuantity=; metadata=; offerId=; prices=; releaseDate=; sale=; subInventoryType=; tags=}",
      "type": "object"
    },
    "LolStoreFeaturedPageDTO": {
      "properties": "@{Player=}",
      "type": "object"
    },
    "LolStoreGetPlatformIdsFromInstanceIdsRequest": {
      "properties": "@{instanceIds=}",
      "type": "object"
    },
    "LolStoreGiftableResult": {
      "properties": "@{config=; friends=}",
      "type": "object"
    },
    "LolStoreGiftingConfig": {
      "properties": "@{giftingHextecMaxDailyGiftsReceive=; giftingHextechMaxDailyGiftsSend=; giftingItemMaxDailyGiftsReceive=; giftingItemMaxDailyGiftsSend=; giftingItemMinLevelSend=; giftingRestrictionFlagRioter=; giftingRpMaxDailyGiftsReceive=; giftingRpMaxDailyGiftsSend=; giftingRpMinLevelSend=; recipientLevelLimitItem=; recipientLevelLimitRp=; requiresIdentityVerification=}",
      "type": "object"
    },
    "LolStoreGiftingFriend": {
      "properties": "@{friendsSince=; nick=; oldFriends=; summonerId=}",
      "type": "object"
    },
    "LolStoreItemCost": {
      "properties": "@{cost=; currency=; discount=}",
      "type": "object"
    },
    "LolStoreItemKey": {
      "properties": "@{inventoryType=; itemId=}",
      "type": "object"
    },
    "LolStoreItemLocalization": {
      "properties": "@{description=; language=; name=}",
      "type": "object"
    },
    "LolStoreItemMetadataEntry": {
      "properties": "@{type=; value=}",
      "type": "object"
    },
    "LolStoreItemOrderDTO": {
      "properties": "@{inventoryType=; itemId=; quantity=; rpCost=}",
      "type": "object"
    },
    "LolStoreItemSale": {
      "properties": "@{active=; id=; item=; sale=}",
      "type": "object"
    },
    "LolStoreLoginDataPacket": {
      "properties": "@{allSummonerData=; simpleMessages=}",
      "type": "object"
    },
    "LolStoreLoginSession": {
      "properties": "@{accountId=; idToken=; state=; summonerId=}",
      "type": "object"
    },
    "LolStoreLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolStoreNotification": {
      "properties": "@{backgroundUrl=; created=; critical=; data=; detailKey=; dismissible=; expires=; iconUrl=; id=; source=; state=; titleKey=; type=}",
      "type": "object"
    },
    "LolStoreOrderNotificationResource": {
      "properties": "@{eventType=; eventTypeId=; id=; status=}",
      "type": "object"
    },
    "LolStorePageDTO": {
      "properties": "@{Player=; catalog=; groupOrder=; itemGroups=}",
      "type": "object"
    },
    "LolStorePageGroupingDTO": {
      "properties": "@{grouped=; hidden=; items=}",
      "type": "object"
    },
    "LolStorePlayer": {
      "properties": "@{accountId=; ip=; rp=; summonerLevel=}",
      "type": "object"
    },
    "LolStorePurchaseOrderRequestDTO": {
      "properties": "@{accountId=; items=}",
      "type": "object"
    },
    "LolStorePurchaseOrderResponseDTO": {
      "properties": "@{ipBalance=; rpBalance=; transactions=}",
      "type": "object"
    },
    "LolStoreRiotMessagingServiceMessage": {
      "properties": "@{payload=; resource=; service=; timestamp=; version=}",
      "type": "object"
    },
    "LolStoreSale": {
      "properties": "@{endDate=; prices=; startDate=}",
      "type": "object"
    },
    "LolStoreServiceBalance": {
      "properties": "@{amount=; currency=}",
      "type": "object"
    },
    "LolStoreServiceWallet": {
      "properties": "@{accountId=; balances=}",
      "type": "object"
    },
    "LolStoreSimpleDialogMessage": {
      "properties": "@{accountId=; msgId=; params=; type=}",
      "type": "object"
    },
    "LolStoreStoreStatus": {
      "properties": "@{storefrontIsRunning=}",
      "type": "object"
    },
    "LolStoreSummoner": {
      "properties": "@{acctId=; sumId=}",
      "type": "object"
    },
    "LolStoreSummonerLevelAndPoints": {
      "properties": "@{summonerLevel=}",
      "type": "object"
    },
    "LolStoreTransactionResponseDTO": {
      "properties": "@{id=; inventoryType=; itemId=}",
      "type": "object"
    },
    "LolStoreWallet": {
      "properties": "@{ip=; rp=}",
      "type": "object"
    },
    "LolSuggestedPlayersEndOfGamePlayer": {
      "properties": "@{summonerId=; summonerName=}",
      "type": "object"
    },
    "LolSuggestedPlayersEndOfGameStats": {
      "properties": "@{teams=}",
      "type": "object"
    },
    "LolSuggestedPlayersEndOfGameTeam": {
      "properties": "@{isWinningTeam=; players=}",
      "type": "object"
    },
    "LolSuggestedPlayersGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolSuggestedPlayersHonorInteraction": {
      "properties": "@{displayName=; gameId=; summonerId=}",
      "type": "object"
    },
    "LolSuggestedPlayersSuggestedPlayersConfig": {
      "properties": "@{Enabled=; FriendsOfFriendsEnabled=; FriendsOfFriendsLimit=; MaxHonorInteractionPlayers=; MaxNumReplacements=; MaxNumSuggestedPlayers=; OnlineFriendsLimit=; PreviousPremadesLimit=; VicoriousComradesLimit=}",
      "type": "object"
    },
    "LolSuggestedPlayersSuggestedPlayersDynamicClientConfig": {
      "properties": "@{SuggestedPlayers=}",
      "type": "object"
    },
    "LolSuggestedPlayersSuggestedPlayersFriend": {
      "properties": "@{availability=; name=; summonerId=}",
      "type": "object"
    },
    "LolSuggestedPlayersSuggestedPlayersKudoedPlayer": {
      "properties": "@{kudoedSummonerId=; kudoedSummonerName=}",
      "type": "object"
    },
    "LolSuggestedPlayersSuggestedPlayersLobbyStatus": {
      "properties": "@{invitedSummonerIds=; memberSummonerIds=; queueId=}",
      "type": "object"
    },
    "LolSuggestedPlayersSuggestedPlayersPlayerStatus": {
      "properties": "@{currentLobbyStatus=; lastQueuedLobbyStatus=}",
      "type": "object"
    },
    "LolSuggestedPlayersSuggestedPlayersQueue": {
      "properties": "@{id=; minLevel=}",
      "type": "object"
    },
    "LolSuggestedPlayersSuggestedPlayersReason": {
      "enum": "PreviousPremade OnlineFriend FriendOfFriend VictoriousComrade HonorInteractions LegacyPlayAgain",
      "type": "string"
    },
    "LolSuggestedPlayersSuggestedPlayersReportedPlayer": {
      "properties": "@{reportedSummonerId=}",
      "type": "object"
    },
    "LolSuggestedPlayersSuggestedPlayersSuggestedPlayer": {
      "properties": "@{commonFriendId=; commonFriendName=; gameId=; reason=; summonerId=; summonerName=}",
      "type": "object"
    },
    "LolSuggestedPlayersSuggestedPlayersSummoner": {
      "properties": "@{displayName=; summonerId=; summonerLevel=}",
      "type": "object"
    },
    "LolSuggestedPlayersSuggestedPlayersVictoriousComrade": {
      "properties": "@{summonerId=; summonerName=}",
      "type": "object"
    },
    "LolSummonerAccountIdAndSummonerId": {
      "properties": "@{accountId=; summonerId=}",
      "type": "object"
    },
    "LolSummonerAlias": {
      "properties": "@{gameName=; tagLine=}",
      "type": "object"
    },
    "LolSummonerAliasAvailability": {
      "properties": "@{alias=; errorCode=; errorMessage=; isSuccess=}",
      "type": "object"
    },
    "LolSummonerAliasAvailabilityCode": {
      "enum": "no_error name_change_forbidden name_not_available rate_limited server_error",
      "type": "string"
    },
    "LolSummonerAutoFillQueueDto": {
      "properties": "@{autoFillEligible=; autoFillProtectedForPromos=; autoFillProtectedForStreaking=; queueId=}",
      "type": "object"
    },
    "LolSummonerGameloopPlayerInfoV2": {
      "properties": "@{autoFillDataBags=; rerollDataBags=}",
      "type": "object"
    },
    "LolSummonerLevelField": {
      "properties": "@{finalLevel=; initialLevel=; progress=}",
      "type": "object"
    },
    "LolSummonerLevelProgression": {
      "properties": "@{finalLevelBoundary=; finalXp=; initialLevelBoundary=; initialXp=}",
      "type": "object"
    },
    "LolSummonerLoginSession": {
      "properties": "@{accountId=; connected=; puuid=; state=; summonerId=}",
      "type": "object"
    },
    "LolSummonerLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolSummonerPlayerNameMode": {
      "enum": "SUMMONER DARKMODE ALIAS",
      "type": "string"
    },
    "LolSummonerPlayerNameState": {
      "properties": "@{isAliasChangeRequired=; isAliasMissing=; isDataAvailable=; isUsingAlias=}",
      "type": "object"
    },
    "LolSummonerProfilePrivacy": {
      "properties": "@{enabledState=; setting=}",
      "type": "object"
    },
    "LolSummonerProfilePrivacyEnabledState": {
      "enum": "UNKNOWN ENABLED DISABLED",
      "type": "string"
    },
    "LolSummonerProfilePrivacySetting": {
      "enum": "PRIVATE PUBLIC",
      "type": "string"
    },
    "LolSummonerRerollDataBagForClientV1": {
      "properties": "@{maximumRerolls=; pointCostOfReroll=; pointsUntilNextReroll=; queueId=; rerollCount=; totalPoints=}",
      "type": "object"
    },
    "LolSummonerStatus": {
      "properties": "@{ready=}",
      "type": "object"
    },
    "LolSummonerSummoner": {
      "properties": "@{accountId=; displayName=; internalName=; nameChangeFlag=; percentCompleteForNextLevel=; privacy=; profileIconId=; puuid=; rerollPoints=; summonerId=; summonerLevel=; unnamed=; xpSinceLastLevel=; xpUntilNextLevel=}",
      "type": "object"
    },
    "LolSummonerSummonerCacheData": {
      "properties": "@{privacy=; summoner=; summonerIcon=}",
      "type": "object"
    },
    "LolSummonerSummonerCreateRequest": {
      "properties": "@{summonerName=}",
      "type": "object"
    },
    "LolSummonerSummonerCreatedId": {
      "properties": "@{summonerId=}",
      "type": "object"
    },
    "LolSummonerSummonerDTO": {
      "properties": "@{accountId=; expPoints=; expToNextLevel=; id=; level=; name=; nameChangeFlag=; partnerId=; privacy=; profileIconId=; puuid=; unnamed=}",
      "type": "object"
    },
    "LolSummonerSummonerIcon": {
      "properties": "@{inventoryToken=; profileIconId=}",
      "type": "object"
    },
    "LolSummonerSummonerIdAndIcon": {
      "properties": "@{profileIconId=; summonerId=}",
      "type": "object"
    },
    "LolSummonerSummonerIdAndName": {
      "properties": "@{displayName=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolSummonerSummonerProfileUpdate": {
      "properties": "@{inventory=; key=; value=}",
      "type": "object"
    },
    "LolSummonerSummonerRequestedName": {
      "properties": "@{name=}",
      "type": "object"
    },
    "LolSummonerSummonerRerollPoints": {
      "properties": "@{currentPoints=; maxRolls=; numberOfRolls=; pointsCostToRoll=; pointsToReroll=}",
      "type": "object"
    },
    "LolSummonerSummonerSession": {
      "properties": "@{displayName=; isNewPlayer=; summonerId=}",
      "type": "object"
    },
    "LolSummonerXpAndLevelMessage": {
      "properties": "@{level=; xp=}",
      "type": "object"
    },
    "LolTastesDataModelResponse": {
      "properties": "@{modelData=; responseCode=}",
      "type": "object"
    },
    "LolTftDataModelResponse": {
      "properties": "@{modelData=; responseCode=}",
      "type": "object"
    },
    "LolTftGameflowGameData": {
      "properties": "@{gameId=; queue=}",
      "type": "object"
    },
    "LolTftGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolTftGameflowSession": {
      "properties": "@{gameData=; phase=}",
      "type": "object"
    },
    "LolTftLolTftBattlePassHub": {
      "properties": "@{battlePassXPBoosted=}",
      "type": "object"
    },
    "LolTftLolTftEvent": {
      "properties": "@{enabled=; endDate=; queueIds=; startDate=; titleTranslationKey=; url=}",
      "type": "object"
    },
    "LolTftLolTftEvents": {
      "properties": "@{subNavTabs=}",
      "type": "object"
    },
    "LolTftLolTftHomeHub": {
      "properties": "@{battlePassOfferIds=; enabled=; fallbackStorePromoOfferIds=; overrideUrl=; primeGamingPromoOffer=; storePromoOfferIds=; tacticianPromoOfferIds=}",
      "type": "object"
    },
    "LolTftLolTftNewsHub": {
      "properties": "@{enabled=; url=}",
      "type": "object"
    },
    "LolTftLolTftPrimeGaming": {
      "properties": "@{assetId=; url=}",
      "type": "object"
    },
    "LolTftLolTftPromoButton": {
      "properties": "@{enabled=; eventKey=; url=}",
      "type": "object"
    },
    "LolTftLolTftPromoButtons": {
      "properties": "@{promoButtons=}",
      "type": "object"
    },
    "LolTftPassAccessTokenResource": {
      "properties": "@{expiry=; scopes=; token=}",
      "type": "object"
    },
    "LolTftPassCatalogItem": {
      "properties": "@{inventoryType=; itemId=; itemInstanceId=}",
      "type": "object"
    },
    "LolTftPassClientCacheClearMessageDTO": {
      "properties": "@{clearAll=; inventoryTypes=; regions=}",
      "type": "object"
    },
    "LolTftPassCounter": {
      "properties": "@{direction=; groupId=; id=; name=; startValue=}",
      "type": "object"
    },
    "LolTftPassCounterInstance": {
      "properties": "@{counterId=; counterValue=; groupId=; ownerId=; productId=}",
      "type": "object"
    },
    "LolTftPassCurrencyDTO": {
      "properties": "@{amount=; subCurrencies=}",
      "type": "object"
    },
    "LolTftPassEndOfGameXp": {
      "properties": "@{PER_WIN=}",
      "type": "object"
    },
    "LolTftPassEndOfGameXpNotification": {
      "properties": "@{xp=}",
      "type": "object"
    },
    "LolTftPassEntityInstance": {
      "properties": "@{counters=; groupId=; milestones=}",
      "type": "object"
    },
    "LolTftPassGroup": {
      "properties": "@{counters=; id=; milestones=; name=; productId=; repeat=}",
      "type": "object"
    },
    "LolTftPassInventoryCacheEntry": {
      "properties": "@{expirationMS=; issuedAtMS=; receivedAtMS=; signedInventoryJwt=; valid=}",
      "type": "object"
    },
    "LolTftPassInventoryDTO": {
      "properties": "@{accountId=; expires=; items=; itemsJwt=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolTftPassInventoryItem": {
      "properties": "@{expirationDate=; inventoryType=; itemId=; ownershipType=; purchaseDate=; quantity=; uuid=; wins=}",
      "type": "object"
    },
    "LolTftPassInventoryItemDTO": {
      "properties": "@{entitlementId=; entitlementTypeId=; expirationDate=; f2p=; instanceId=; instanceTypeId=; inventoryType=; itemId=; loyalty=; loyaltySources=; lsb=; ownedQuantity=; payload=; purchaseDate=; quantity=; rental=; usedInGameDate=; wins=}",
      "type": "object"
    },
    "LolTftPassInventoryItemWithPayload": {
      "properties": "@{expirationDate=; f2p=; inventoryType=; itemId=; loyalty=; loyaltySources=; owned=; ownershipType=; payload=; purchaseDate=; quantity=; rental=; uuid=; wins=}",
      "type": "object"
    },
    "LolTftPassInventoryNotification": {
      "properties": "@{acknowledged=; id=; inventoryType=; itemId=; type=}",
      "type": "object"
    },
    "LolTftPassInventoryResponseDTO": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolTftPassItemKey": {
      "properties": "@{inventoryType=; itemId=}",
      "type": "object"
    },
    "LolTftPassItemOwnershipType": {
      "enum": "OWNED RENTED LOYALTY F2P",
      "type": "string"
    },
    "LolTftPassLoginSession": {
      "properties": "@{accountId=; idToken=; puuid=; state=; summonerId=}",
      "type": "object"
    },
    "LolTftPassLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolTftPassLoyaltyRewards": {
      "properties": "@{championIds=; freeRewardedChampionsCount=; freeRewardedSkinsCount=; ipBoost=; loyaltySources=; loyaltyTFTCompanionCount=; loyaltyTFTDamageSkinCount=; loyaltyTFTMapSkinCount=; skinIds=; xpBoost=}",
      "type": "object"
    },
    "LolTftPassLoyaltyRewardsSimplified": {
      "properties": "@{championIds=; freeRewardedChampionsCount=; freeRewardedSkinsCount=; ipBoost=; loyaltySources=; loyaltyTFTCompanionCount=; loyaltyTFTDamageSkinCount=; loyaltyTFTMapSkinCount=; skinIds=; xpBoost=}",
      "type": "object"
    },
    "LolTftPassLoyaltyStatus": {
      "enum": "LEGACY REWARDS_GRANT EXPIRY CHANGE REVOKE DISABLED",
      "type": "string"
    },
    "LolTftPassLoyaltyStatusNotification": {
      "properties": "@{reloadInventory=; rewards=; status=}",
      "type": "object"
    },
    "LolTftPassMilestone": {
      "properties": "@{counterId=; groupId=; id=; name=; properties=; triggerValue=}",
      "type": "object"
    },
    "LolTftPassMilestoneInstance": {
      "properties": "@{counterId=; groupId=; milestoneId=; ownerId=; productId=; repeatSequence=; triggerValue=; triggered=}",
      "type": "object"
    },
    "LolTftPassPlayerNotification": {
      "properties": "@{critical=; detailKey=; iconUrl=; source=; state=; titleKey=; type=}",
      "type": "object"
    },
    "LolTftPassRMSRequest": {
      "properties": "@{payload=; recipients=; resource=; service=; version=}",
      "type": "object"
    },
    "LolTftPassRMSRewardsNotificationPayload": {
      "properties": "@{milestoneId=; milestoneInstanceId=; purchaserId=; recipientId=; status=; transactionId=}",
      "type": "object"
    },
    "LolTftPassRepeat": {
      "properties": "@{count=; multiplier=; scope=}",
      "type": "object"
    },
    "LolTftPassRiotMessagingServiceMessage": {
      "properties": "@{payload=; resource=; service=; timestamp=; version=}",
      "type": "object"
    },
    "LolTftPassRmsEntitlementPayload": {
      "properties": "@{entitlementTypeId=; itemId=; itemTypeId=; resourceOperation=}",
      "type": "object"
    },
    "LolTftPassRmsStoreEntitlementItem": {
      "properties": "@{inventoryType=; itemId=}",
      "type": "object"
    },
    "LolTftPassRmsStoreEntitlementPayload": {
      "properties": "@{items=; transactionId=}",
      "type": "object"
    },
    "LolTftPassRmsWalletPayload": {
      "properties": "",
      "type": "object"
    },
    "LolTftPassRmsXboxSubscriptionChange": {
      "properties": "@{active=; identityProvider=; puuid=; subscriptionId=}",
      "type": "object"
    },
    "LolTftPassSimpleInventoryDTO": {
      "properties": "@{expires=; items=; itemsJwt=}",
      "type": "object"
    },
    "LolTftPassSimpleInventoryResponseDTO": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolTftPassSummonerIcon": {
      "properties": "@{itemId=}",
      "type": "object"
    },
    "LolTftPassTFTPassClientConfig": {
      "properties": "@{battlePassId=; enabled=; eventPassId=}",
      "type": "object"
    },
    "LolTftPassTFTPassDTO": {
      "properties": "@{activiationTimeMS=; assetID=; counterID=; currentLevel=; deactivationTimeMS=; description=; id=; milestones=; playerID=; premiumEntitlementID=; premiumTitle=; productID=; storePurchaseIDs=; title=; totalPointsEarned=}",
      "type": "object"
    },
    "LolTftPassTFTPassMilestoneDTO": {
      "properties": "@{bonus=; description=; iconURL=; id=; keystone=; level=; pointsEarnedForMilestone=; pointsNeededForMilestone=; rewards=; status=; title=; totalPointsNeededForMilestone=}",
      "type": "object"
    },
    "LolTftPassTFTPassRewardDTO": {
      "properties": "@{description=; framedIcon=; iconURL=; premium=; title=}",
      "type": "object"
    },
    "LolTftPassTFTPassRewardNotification": {
      "properties": "@{description=; framedIcon=; iconURL=; title=}",
      "type": "object"
    },
    "LolTftPassTftPaidBattlepass": {
      "properties": "@{activeMilestone=; bonuses=; info=; lastViewedMilestone=; lastViewedProgress=; milestones=; progressMissionId=; totalPointsEarned=}",
      "type": "object"
    },
    "LolTftPassTftPaidBattlepassInfo": {
      "properties": "@{description=; endDate=; media=; pcPurchaseRequirement=; premium=; premiumEntitlementId=; premiumTitle=; startDate=; title=}",
      "type": "object"
    },
    "LolTftPassTftPaidBattlepassMilestone": {
      "properties": "@{description=; iconImageUrl=; iconNeedsFrame=; internalName=; isBonus=; isKeystone=; isLocked=; isPaid=; level=; missionId=; pointsEarnedForMilestone=; pointsNeededForMilestone=; rewards=; state=; status=; title=; totalPointsForMilestone=}",
      "type": "object"
    },
    "LolTftPassTftPaidBattlepassReward": {
      "properties": "@{description=; iconNeedsFrame=; iconUrl=; rewardGroup=}",
      "type": "object"
    },
    "LolTftPassWallet": {
      "properties": "@{ip=; rp=}",
      "type": "object"
    },
    "LolTftPassWalletCacheEntry": {
      "properties": "@{expirationMS=; issuedAtMS=; receivedAtMS=; signedBalancesJwt=; valid=}",
      "type": "object"
    },
    "LolTftPassWalletDTO": {
      "properties": "@{accountId=; balances=; balancesJwt=; expires=; puuid=}",
      "type": "object"
    },
    "LolTftPassWalletResponseDTO": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolTftPassXboxSubscriptionStatus": {
      "properties": "@{active=; subscriptionId=}",
      "type": "object"
    },
    "LolTftPublishingSettings": {
      "properties": "@{publishingLocale=}",
      "type": "object"
    },
    "LolTftQueue": {
      "properties": "@{category=; gameMode=; id=; mapId=}",
      "type": "object"
    },
    "LolTftQueueGameCategory": {
      "enum": "None Custom PvP VersusAi Alpha",
      "type": "string"
    },
    "LolTftSettingsResource": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolTftTeamPlannerChampion": {
      "properties": "@{championId=}",
      "type": "object"
    },
    "LolTftTeamPlannerGameDataTFTSets": {
      "properties": "@{LCTFTModeData=}",
      "type": "object"
    },
    "LolTftTeamPlannerGameflowGameData": {
      "properties": "@{queue=}",
      "type": "object"
    },
    "LolTftTeamPlannerGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolTftTeamPlannerGameflowSession": {
      "properties": "@{gameData=; phase=}",
      "type": "object"
    },
    "LolTftTeamPlannerQueue": {
      "properties": "@{gameMode=}",
      "type": "object"
    },
    "LolTftTeamPlannerSettingsStorageContainer": {
      "properties": "@{data=; schemaVersion=}",
      "type": "object"
    },
    "LolTftTeamPlannerTFTMapSetData": {
      "properties": "@{SetCoreName=}",
      "type": "object"
    },
    "LolTftTeamPlannerTFTModeData": {
      "properties": "@{mDefaultSet=}",
      "type": "object"
    },
    "LolTftTeamPlannerTFTTeamPlannerConfig": {
      "properties": "@{enabled=}",
      "type": "object"
    },
    "LolTftTeamPlannerTeamPlan": {
      "properties": "@{champions=; setName=}",
      "type": "object"
    },
    "LolTftTeamPlannerTeamSettings": {
      "properties": "@{teams=}",
      "type": "object"
    },
    "LolTftTrovesCapCounterBalanceDto": {
      "properties": "@{active=; amount=; version=}",
      "type": "object"
    },
    "LolTftTrovesCapOrdersRequestDTO": {
      "properties": "@{data=; meta=}",
      "type": "object"
    },
    "LolTftTrovesCapOrdersRequestMetaDTO": {
      "properties": "@{correlationId=; jwt=; xid=}",
      "type": "object"
    },
    "LolTftTrovesCapOrdersResponseDTO": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolTftTrovesCounterNotificationResource": {
      "properties": "@{balances=; deltas=}",
      "type": "object"
    },
    "LolTftTrovesDropsDropTablePityInfo": {
      "properties": "@{chaseContentIds=; pityLimit=}",
      "type": "object"
    },
    "LolTftTrovesDropsDropTableWithPityDTO": {
      "properties": "@{currencyId=; endDate=; id=; pityInfo=; productId=; rollOffer=; sourceId=; startDate=}",
      "type": "object"
    },
    "LolTftTrovesDropsOddsListEntryDTO": {
      "properties": "@{contentId=}",
      "type": "object"
    },
    "LolTftTrovesDropsOddsTreeNodeDTO": {
      "properties": "@{children=; nodeId=; odds=}",
      "type": "object"
    },
    "LolTftTrovesDropsPityCountDTO": {
      "properties": "@{count=; dropTableId=}",
      "type": "object"
    },
    "LolTftTrovesGameDataTrovesBanner": {
      "properties": "@{activationTime=; bannerTexture=; celebrationTheme=; chaseTable=; deactivationTime=; description=; id=; mythicTokenOfferId=; name=; pityCounterId=; pityThreshold=; rootTable=; thumbnailTexture=}",
      "type": "object"
    },
    "LolTftTrovesGameDataTrovesBannerReward": {
      "properties": "@{currencyId=; highlightRewardAssetPath=; id=; isChaseReward=; loadoutsItem=; name=; quantity=; rarity=; rewardTexturePath=}",
      "type": "object"
    },
    "LolTftTrovesGameDataTrovesBannerTable": {
      "properties": "@{children=; id=; key=; loadoutsItem=; name=}",
      "type": "object"
    },
    "LolTftTrovesGameDataTrovesBannerTableEntry": {
      "properties": "@{bannerNode=}",
      "type": "object"
    },
    "LolTftTrovesInventoryItem": {
      "properties": "@{inventoryType=; owned=; uuid=}",
      "type": "object"
    },
    "LolTftTrovesLoadoutsItem": {
      "properties": "@{itemInstanceId=; itemTypeId=; name=; starLevel=}",
      "type": "object"
    },
    "LolTftTrovesLoginSession": {
      "properties": "@{accountId=; idToken=; puuid=; state=; summonerId=}",
      "type": "object"
    },
    "LolTftTrovesLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolTftTrovesLootOddsResponse": {
      "properties": "@{children=; displayPriority=; dropRate=; label=; lootId=; parentId=; quantity=; query=}",
      "type": "object"
    },
    "LolTftTrovesLootRarity": {
      "enum": "Default Epic Legendary Mythic Ultimate",
      "type": "string"
    },
    "LolTftTrovesOrderNotificationResource": {
      "properties": "@{eventType=; eventTypeId=; status=}",
      "type": "object"
    },
    "LolTftTrovesPlayerLoot": {
      "properties": "@{itemDesc=; localizedName=; lootName=}",
      "type": "object"
    },
    "LolTftTrovesRiotMessagingServiceMessage": {
      "properties": "@{payload=; resource=; service=; timestamp=; version=}",
      "type": "object"
    },
    "LolTftTrovesTrovePurchaseResponse": {
      "properties": "@{data=; errorCode=; orderId=; status=}",
      "type": "object"
    },
    "LolTftTrovesTroves": {
      "properties": "@{bannerList=; enabled=}",
      "type": "object"
    },
    "LolTftTrovesTrovesActiveBanner": {
      "properties": "@{id=}",
      "type": "object"
    },
    "LolTftTrovesTrovesBanner": {
      "properties": "@{bannerTexture=; celebrationTheme=; description=; endDate=; id=; mythicOffer=; name=; pityCounterId=; pityLimit=; rollOffer=; sourceId=; startDate=; status=; thumbnailTexture=}",
      "type": "object"
    },
    "LolTftTrovesTrovesCelebrationCurrencySegmentData": {
      "properties": "@{lottieJsonPath=; multiPullSoundPath=; mythicPullSoundPath=; singlePullSoundPath=}",
      "type": "object"
    },
    "LolTftTrovesTrovesCelebrationHighlightSegmentData": {
      "properties": "@{lottieJsonPath=; promiseTokenDescription=; promiseTokenTitle=; revealSoundPath=; transitionWipeSoundPath=}",
      "type": "object"
    },
    "LolTftTrovesTrovesCelebrationPortalSegmentData": {
      "properties": "@{multiPullEpicWebmPath=; multiPullLegendaryWebmPath=; multiPullMythicWebmPath=; multiPullRareWebmPath=; multiPullSoundPath=; singlePullEpicWebmPath=; singlePullLegendaryWebmPath=; singlePullMythicWebmPath=; singlePullRareWebmPath=; singlePullSoundPath=}",
      "type": "object"
    },
    "LolTftTrovesTrovesCelebrationStandardSegmentData": {
      "properties": "@{FirstItemTimingOffset=; InterItemTimingOffset=; PCBackgroundPath=; PCButtonText=; PCGlintSprite=; PCHeaderText=; PCLegendaryHitSprite=; PCLegendarySparkSprite=; PCRewardEpicGemPath=; PCRewardFadeInDelay=; PCRewardFadeInDuration=; PCRewardFramePath=; PCRewardLegendaryGemPath=; PCRewardMythicGemPath=; PCRewardOneStarPath=; PCRewardRareGemPath=; PCRewardSheenDelay=; PCRewardSheenDuration=; PCRewardSheenPath=; PCRewardThreeStarPath=; PCRewardTwoStarPath=; PCThumbnailFadeInDelay=; PCThumbnailFadeInDuration=; pullSingleIndividualGlintLegendarySoundPath=; pullSingleIndividualGlintSoundPath=; revealEpicSoundPath=; revealGlobalSoundPath=; revealMythicSoundPath=; revealRareSoundPath=}",
      "type": "object"
    },
    "LolTftTrovesTrovesCelebrationThemeData": {
      "properties": "@{currencySegmentData=; highlightSegmentData=; portalSegmentData=; standardSegmentData=}",
      "type": "object"
    },
    "LolTftTrovesTrovesPCSpriteAnimation": {
      "properties": "@{delay=; duration=; fps=; maxPlayCount=; numCols=; numFrames=; numRows=; playAtInsert=; spritesheetPath=; startFrame=}",
      "type": "object"
    },
    "LolTftTrovesTrovesPurchaseRequest": {
      "properties": "@{offerId=; paymentOption=; quantity=}",
      "type": "object"
    },
    "LolTftTrovesTrovesReward": {
      "properties": "@{highlightRewardAssetPath=; itemId=; itemTypeId=; name=; quantity=; rarity=; rewardTexturePath=; starLevel=}",
      "type": "object"
    },
    "LolTftTrovesTrovesRewards": {
      "properties": "@{highlight=; standard=}",
      "type": "object"
    },
    "LolTftTrovesTrovesRewardsResponse": {
      "properties": "@{pullType=; rewards=}",
      "type": "object"
    },
    "LolTftTrovesTrovesRollRequest": {
      "properties": "@{dropTableId=; isMythic=; numberOfRolls=; offerId=}",
      "type": "object"
    },
    "LolTftTrovesTrovesStatus": {
      "properties": "@{availableContents=; dropTableId=; hasPullError=; owned=; pityCount=}",
      "type": "object"
    },
    "LolTftTrovesVerboseLootOddsResponse": {
      "properties": "@{chanceToContain=; checksOwnership=; guaranteedToContain=; hasPityRules=; lootItem=; recipeName=}",
      "type": "object"
    },
    "LolTrophiesCapClashTrophyEntitlementPayload": {
      "properties": "@{rewardSpec=; rewardType=}",
      "type": "object"
    },
    "LolTrophiesClashV2TrophyRewardSpec": {
      "properties": "@{bracket=; cup=; gem=; pedestal=; seasonId=; theme=; tier=}",
      "type": "object"
    },
    "LolTrophiesInventoryItemsByType": {
      "properties": "@{TOURNAMENT_TROPHY=}",
      "type": "object"
    },
    "LolTrophiesInventoryResponse": {
      "properties": "@{items=}",
      "type": "object"
    },
    "LolTrophiesLoadout": {
      "properties": "@{id=; loadout=; name=; scope=}",
      "type": "object"
    },
    "LolTrophiesLoadoutItem": {
      "properties": "@{data=; inventoryType=; itemId=}",
      "type": "object"
    },
    "LolTrophiesOtherPlayerTrophyInventoryItem": {
      "properties": "@{inventoryType=; itemId=; payload=; purchaseDate=; uuid=}",
      "type": "object"
    },
    "LolTrophiesTournamentTrophyInventoryItem": {
      "properties": "@{payload=; purchaseDate=}",
      "type": "object"
    },
    "LolTrophiesTrophyProfileData": {
      "properties": "@{bracket=; cup=; gem=; pedestal=; seasonId=; theme=; tier=}",
      "type": "object"
    },
    "LolUserExperienceGameflowPhase": {
      "enum": "None Lobby Matchmaking CheckedIntoTournament ReadyCheck ChampSelect GameStart FailedToLaunch InProgress Reconnect WaitingForStats PreEndOfGame EndOfGame TerminatedInError",
      "type": "string"
    },
    "LolUserExperienceGameflowSession": {
      "properties": "@{phase=}",
      "type": "object"
    },
    "LolYourshopAccessTokenResource": {
      "properties": "@{expiry=; scopes=; token=}",
      "type": "object"
    },
    "LolYourshopCatalogItem": {
      "properties": "@{inventoryType=; itemId=; itemInstanceId=}",
      "type": "object"
    },
    "LolYourshopClientCacheClearMessageDTO": {
      "properties": "@{clearAll=; inventoryTypes=; regions=}",
      "type": "object"
    },
    "LolYourshopCurrencyDTO": {
      "properties": "@{amount=; subCurrencies=}",
      "type": "object"
    },
    "LolYourshopEndOfGameXp": {
      "properties": "@{PER_WIN=}",
      "type": "object"
    },
    "LolYourshopEndOfGameXpNotification": {
      "properties": "@{xp=}",
      "type": "object"
    },
    "LolYourshopInventoryCacheEntry": {
      "properties": "@{expirationMS=; issuedAtMS=; receivedAtMS=; signedInventoryJwt=; valid=}",
      "type": "object"
    },
    "LolYourshopInventoryDTO": {
      "properties": "@{accountId=; expires=; items=; itemsJwt=; puuid=; summonerId=}",
      "type": "object"
    },
    "LolYourshopInventoryItem": {
      "properties": "@{expirationDate=; inventoryType=; itemId=; ownershipType=; purchaseDate=; quantity=; uuid=; wins=}",
      "type": "object"
    },
    "LolYourshopInventoryItemDTO": {
      "properties": "@{entitlementId=; entitlementTypeId=; expirationDate=; f2p=; instanceId=; instanceTypeId=; inventoryType=; itemId=; loyalty=; loyaltySources=; lsb=; ownedQuantity=; payload=; purchaseDate=; quantity=; rental=; usedInGameDate=; wins=}",
      "type": "object"
    },
    "LolYourshopInventoryItemWithPayload": {
      "properties": "@{expirationDate=; f2p=; inventoryType=; itemId=; loyalty=; loyaltySources=; owned=; ownershipType=; payload=; purchaseDate=; quantity=; rental=; uuid=; wins=}",
      "type": "object"
    },
    "LolYourshopInventoryNotification": {
      "properties": "@{acknowledged=; id=; inventoryType=; itemId=; type=}",
      "type": "object"
    },
    "LolYourshopInventoryResponseDTO": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolYourshopItemKey": {
      "properties": "@{inventoryType=; itemId=}",
      "type": "object"
    },
    "LolYourshopItemOwnershipType": {
      "enum": "OWNED RENTED LOYALTY F2P",
      "type": "string"
    },
    "LolYourshopLoginSession": {
      "properties": "@{accountId=; idToken=; puuid=; state=; summonerId=}",
      "type": "object"
    },
    "LolYourshopLoginSessionStates": {
      "enum": "IN_PROGRESS SUCCEEDED LOGGING_OUT ERROR",
      "type": "string"
    },
    "LolYourshopLoyaltyRewards": {
      "properties": "@{championIds=; freeRewardedChampionsCount=; freeRewardedSkinsCount=; ipBoost=; loyaltySources=; loyaltyTFTCompanionCount=; loyaltyTFTDamageSkinCount=; loyaltyTFTMapSkinCount=; skinIds=; xpBoost=}",
      "type": "object"
    },
    "LolYourshopLoyaltyRewardsSimplified": {
      "properties": "@{championIds=; freeRewardedChampionsCount=; freeRewardedSkinsCount=; ipBoost=; loyaltySources=; loyaltyTFTCompanionCount=; loyaltyTFTDamageSkinCount=; loyaltyTFTMapSkinCount=; skinIds=; xpBoost=}",
      "type": "object"
    },
    "LolYourshopLoyaltyStatus": {
      "enum": "LEGACY REWARDS_GRANT EXPIRY CHANGE REVOKE DISABLED",
      "type": "string"
    },
    "LolYourshopLoyaltyStatusNotification": {
      "properties": "@{reloadInventory=; rewards=; status=}",
      "type": "object"
    },
    "LolYourshopOffer": {
      "properties": "@{discountPrice=; expirationDate=; inventoryType=; itemId=; name=; offerId=; originalPrice=; owned=; revealed=; spotIndex=}",
      "type": "object"
    },
    "LolYourshopOfferData": {
      "properties": "@{offers=; promotion=}",
      "type": "object"
    },
    "LolYourshopOfferId": {
      "properties": "@{offerId=}",
      "type": "object"
    },
    "LolYourshopOfferIds": {
      "properties": "@{offers=}",
      "type": "object"
    },
    "LolYourshopOfferRequest": {
      "properties": "@{offerId=}",
      "type": "object"
    },
    "LolYourshopOfferRequests": {
      "properties": "@{offers=}",
      "type": "object"
    },
    "LolYourshopPlayerNotification": {
      "properties": "@{critical=; detailKey=; iconUrl=; source=; state=; titleKey=; type=}",
      "type": "object"
    },
    "LolYourshopPlayerPermissions": {
      "properties": "@{useData=}",
      "type": "object"
    },
    "LolYourshopPromotion": {
      "properties": "@{endTime=; name=; startTime=}",
      "type": "object"
    },
    "LolYourshopPurchaseItem": {
      "properties": "@{inventoryType=; itemId=; offerId=; orderId=; pricePaid=}",
      "type": "object"
    },
    "LolYourshopPurchaseOfferOrderStates": {
      "enum": "NOT_STARTED IN_PROGRESS FAIL SUCCESS",
      "type": "string"
    },
    "LolYourshopPurchaseOfferOrderStatus": {
      "properties": "@{message=; orderState=}",
      "type": "object"
    },
    "LolYourshopPurchaseOfferOrderStatuses": {
      "properties": "@{statuses=}",
      "type": "object"
    },
    "LolYourshopPurchaseResponse": {
      "properties": "@{items=; wallet=}",
      "type": "object"
    },
    "LolYourshopRiotMessagingServiceMessage": {
      "properties": "@{payload=; resource=; service=; timestamp=; version=}",
      "type": "object"
    },
    "LolYourshopRmsEntitlementPayload": {
      "properties": "@{entitlementTypeId=; itemId=; itemTypeId=; resourceOperation=}",
      "type": "object"
    },
    "LolYourshopRmsStoreEntitlementItem": {
      "properties": "@{inventoryType=; itemId=}",
      "type": "object"
    },
    "LolYourshopRmsStoreEntitlementPayload": {
      "properties": "@{items=; transactionId=}",
      "type": "object"
    },
    "LolYourshopRmsWalletPayload": {
      "properties": "",
      "type": "object"
    },
    "LolYourshopRmsXboxSubscriptionChange": {
      "properties": "@{active=; identityProvider=; puuid=; subscriptionId=}",
      "type": "object"
    },
    "LolYourshopSimpleInventoryDTO": {
      "properties": "@{expires=; items=; itemsJwt=}",
      "type": "object"
    },
    "LolYourshopSimpleInventoryResponseDTO": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolYourshopSummonerIcon": {
      "properties": "@{itemId=}",
      "type": "object"
    },
    "LolYourshopUIOffer": {
      "properties": "@{championId=; discountPrice=; expirationDate=; id=; originalPrice=; owned=; purchasing=; revealed=; skinId=; skinName=; type=}",
      "type": "object"
    },
    "LolYourshopUIStatus": {
      "properties": "@{endTime=; hubEnabled=; name=; startTime=}",
      "type": "object"
    },
    "LolYourshopWallet": {
      "properties": "@{rp=}",
      "type": "object"
    },
    "LolYourshopWalletCacheEntry": {
      "properties": "@{expirationMS=; issuedAtMS=; receivedAtMS=; signedBalancesJwt=; valid=}",
      "type": "object"
    },
    "LolYourshopWalletDTO": {
      "properties": "@{accountId=; balances=; balancesJwt=; expires=; puuid=}",
      "type": "object"
    },
    "LolYourshopWalletResponseDTO": {
      "properties": "@{data=}",
      "type": "object"
    },
    "LolYourshopXboxSubscriptionStatus": {
      "properties": "@{active=; subscriptionId=}",
      "type": "object"
    },
    "LolYourshopYourshopConfig": {
      "properties": "@{Active=; PromotionEndDate=; PromotionName=; PromotionStartDate=; ThemedBackground=}",
      "type": "object"
    },
    "LootItemClientDTO": {
      "properties": "@{asset=; displayCategories=; expiryTime=; lootName=; rarity=; rentalGames=; rentalSeconds=; storeItemId=; tags=; type=; upgradeLootName=; value=}",
      "type": "object"
    },
    "LootItemListClientDTO": {
      "properties": "@{lastUpdate=; lootItems=}",
      "type": "object"
    },
    "LootLcdsClientConfigurationDTO": {
      "properties": "@{currenciesUsingCapWallets=; disabledRedemptions=; lootItemsUsingBreakoutRecipeMenu=; lootMaterialsToAlwaysRender=}",
      "type": "object"
    },
    "LootLcdsLootDescriptionDTO": {
      "properties": "@{childLootTableNames=; localizationLongDescriptionMap=; localizationMap=; lootName=}",
      "type": "object"
    },
    "LootLcdsRecipeClientDTO": {
      "properties": "@{crafterName=; displayCategories=; metadata=; outputs=; recipeName=; slots=; type=}",
      "type": "object"
    },
    "LootLcdsRecipeListClientDTO": {
      "properties": "@{lastUpdate=; recipes=}",
      "type": "object"
    },
    "LootLcdsRecipeMetadata": {
      "properties": "@{bonusDescriptions=; guaranteedDescriptions=; tooltipsDisabled=}",
      "type": "object"
    },
    "LootLcdsRecipeOutputDTO": {
      "properties": "@{allowDuplicates=; lootName=; probability=; quantityExpression=}",
      "type": "object"
    },
    "LootLcdsRecipeSlotClientDTO": {
      "properties": "@{quantityExpression=; query=; slotNumber=}",
      "type": "object"
    },
    "LootNameRefId": {
      "properties": "@{lootName=; refId=}",
      "type": "object"
    },
    "LootOddsDTO": {
      "properties": "@{children=; dropRate=; label=; lootId=; lootOrder=; parentId=; quantity=}",
      "type": "object"
    },
    "LootProgressionRecipeConfigMap": {
      "properties": "@{lastUpdate=; lootProgressionRecipeDTOMap=}",
      "type": "object"
    },
    "LootProgressionRecipeConfiguration": {
      "properties": "@{activationTime=; active=; counterUuids=; deactivationTime=; progressionUuid=; recipeName=}",
      "type": "object"
    },
    "LootSimpleDialogMessageResponse": {
      "properties": "@{accountId=; command=; msgId=}",
      "type": "object"
    },
    "MassCraftLootDTO": {
      "properties": "@{clientId=; lootItems=; puuid=}",
      "type": "object"
    },
    "MatchedPlayerDTO": {
      "properties": "@{captain=; players=; rosterId=}",
      "type": "object"
    },
    "MatchmakingLcdsBustedLeaver": {
      "properties": "@{accessToken=; leaverPenaltyMillisRemaining=; reasonFailed=; summoner=}",
      "type": "object"
    },
    "MatchmakingLcdsFailedJoinPlayer": {
      "properties": "@{reasonFailed=; summoner=}",
      "type": "object"
    },
    "MatchmakingLcdsGameDTO": {
      "properties": "@{gameState=; statusOfParticipants=; teamOne=; teamTwo=; terminatedCondition=}",
      "type": "object"
    },
    "MatchmakingLcdsGameNotification": {
      "properties": "@{messageArgument=; messageCode=; type=}",
      "type": "object"
    },
    "MatchmakingLcdsMatchMakerParams": {
      "properties": "@{botDifficulty=; invitationId=; languages=; lastMaestroMessage=; queueIds=; team=; teamId=}",
      "type": "object"
    },
    "MatchmakingLcdsMatchMakerPayload": {
      "properties": "@{LEAVER_BUSTER_ACCESS_TOKEN=}",
      "type": "object"
    },
    "MatchmakingLcdsPlayerParticipant": {
      "properties": "@{summonerId=}",
      "type": "object"
    },
    "MatchmakingLcdsQueueDisabled": {
      "properties": "@{message=; queueId=; reasonFailed=; summoner=}",
      "type": "object"
    },
    "MatchmakingLcdsQueueDodger": {
      "properties": "@{dodgePenaltyRemainingTime=; reasonFailed=; summoner=}",
      "type": "object"
    },
    "MatchmakingLcdsQueueInfo": {
      "properties": "@{queueId=; waitTime=}",
      "type": "object"
    },
    "MatchmakingLcdsQueueRestricted": {
      "properties": "@{message=; queueId=; reasonFailed=; summoner=}",
      "type": "object"
    },
    "MatchmakingLcdsQueueThrottled": {
      "properties": "@{message=; queueId=; reasonFailed=; summoner=}",
      "type": "object"
    },
    "MatchmakingLcdsSearchingForMatchNotification": {
      "properties": "@{joinedQueues=; playerJoinFailures=}",
      "type": "object"
    },
    "MatchmakingLcdsSummoner": {
      "properties": "@{name=; sumId=}",
      "type": "object"
    },
    "MemberBanUnbanTournament": {
      "properties": "@{tournamentId=; tournamentPhaseLockInTime=; tournamentnameLocKey=; tournamentnameLocKeySecondary=}",
      "type": "object"
    },
    "MetricDataType": {
      "enum": "unknown int uint float bool string",
      "type": "string"
    },
    "MetricMetadata": {
      "properties": "@{alerts=; category=; data_type=; description=; destination=; info=; notify=; period=; pretty_name=; priority=; sample_window_ms=; transientAggregation=; type=; units=}",
      "type": "object"
    },
    "MetricMetadataAlert": {
      "properties": "@{description=; info=; level=; max=; min=; notify=; pretty_name=}",
      "type": "object"
    },
    "MetricMetadataHipchatNotification": {
      "properties": "@{roomid=; tags=}",
      "type": "object"
    },
    "MetricMetadataNotify": {
      "properties": "@{email=; hipchat=; pagerduty=}",
      "type": "object"
    },
    "MetricMetadataPagerDutyNotification": {
      "properties": "@{apikey=}",
      "type": "object"
    },
    "MetricPriority": {
      "enum": "low medium high",
      "type": "string"
    },
    "MetricType": {
      "enum": "unknown percentage count duration rate",
      "type": "string"
    },
    "MissionAlertDTO": {
      "properties": "@{alertTime=; message=; type=}",
      "type": "object"
    },
    "MissionDisplay": {
      "properties": "@{attributes=; locations=}",
      "type": "object"
    },
    "MissionMetadata": {
      "properties": "@{level=; npeRewardPack=; tutorial=}",
      "type": "object"
    },
    "MissionProgressDTO": {
      "properties": "@{currentProgress=; lastViewedProgress=; totalCount=}",
      "type": "object"
    },
    "MissionRequirementDTO": {
      "properties": "@{expression=}",
      "type": "object"
    },
    "MissionsCompressedPayloadDTO": {
      "properties": "@{missionsCompressed=}",
      "type": "object"
    },
    "MucJwtDto": {
      "properties": "@{channelClaim=; domain=; jwt=; targetRegion=}",
      "type": "object"
    },
    "MultipleReplayMetadataRequestV2": {
      "properties": "@{gameIds=; platformId=}",
      "type": "object"
    },
    "MultipleReplayMetadataResponseItemV2": {
      "properties": "@{gameId=; metadata=; status=}",
      "type": "object"
    },
    "MultipleReplayMetadataResponseV2": {
      "properties": "@{metadataResponses=}",
      "type": "object"
    },
    "NonTimingEventV1": {
      "properties": "@{eventName=; unit=; value=; when=}",
      "type": "object"
    },
    "NotifyFailureRequest": {
      "properties": "@{availabilityItemName=; failureInfo=}",
      "type": "object"
    },
    "NotifySuccessRequest": {
      "properties": "@{availabilityItemName=}",
      "type": "object"
    },
    "NpeReward": {
      "properties": "@{data=; renderer=}",
      "type": "object"
    },
    "NpeRewardPackMetadata": {
      "properties": "@{index=; majorReward=; minorRewards=; premiumReward=; rewardKey=}",
      "type": "object"
    },
    "OpenedTeamDTO": {
      "properties": "@{captainId=; invitationId=; invitees=; logo=; logoColor=; members=; name=; openPositions=; shortName=; tier=}",
      "type": "object"
    },
    "OpenedTeamMemberDTO": {
      "properties": "@{friendship=; playerId=; position=; tier=}",
      "type": "object"
    },
    "PartiesVoiceDTO": {
      "properties": "@{jwt=}",
      "type": "object"
    },
    "PatcherChunkingPatcherEnvironment": {
      "properties": "@{game_patcher_available=; game_patcher_enabled=}",
      "type": "object"
    },
    "PatcherComponentActionProgress": {
      "properties": "@{currentItem=; network=; primaryWork=; total=}",
      "type": "object"
    },
    "PatcherComponentState": {
      "properties": "@{action=; id=; isCorrupted=; isUpToDate=; isUpdateAvailable=; progress=; timeOfLastUpToDateCheckISO8601=}",
      "type": "object"
    },
    "PatcherComponentStateAction": {
      "enum": "Idle CheckingForUpdates Patching Repairing Migrating",
      "type": "string"
    },
    "PatcherComponentStateProgress": {
      "properties": "@{bytesComplete=; bytesPerSecond=; bytesRequired=}",
      "type": "object"
    },
    "PatcherComponentStateWorkType": {
      "enum": "Scanning Network Disk",
      "type": "string"
    },
    "PatcherNotification": {
      "properties": "@{data=; id=; notificationId=}",
      "type": "object"
    },
    "PatcherNotificationId": {
      "enum": "UnspecifiedError ConnectionError MissingFilesError FailedToWriteError DidRestoreClientBackup NotEnoughDiskSpace BrokenPermissions",
      "type": "string"
    },
    "PatcherP2PStatus": {
      "properties": "@{isAllowedByUser=; isEnabledForPatchline=; requiresRestart=}",
      "type": "object"
    },
    "PatcherP2PStatusUpdate": {
      "properties": "@{isAllowedByUser=}",
      "type": "object"
    },
    "PatcherProductResource": {
      "properties": "@{id=}",
      "type": "object"
    },
    "PatcherProductState": {
      "properties": "@{action=; components=; id=; isCorrupted=; isStopped=; isUpToDate=; isUpdateAvailable=; percentPatched=}",
      "type": "object"
    },
    "PatcherStatus": {
      "properties": "@{connectedToPatchServer=; successfullyInstalledVersion=}",
      "type": "object"
    },
    "PatcherUxResource": {
      "properties": "@{visible=}",
      "type": "object"
    },
    "PaymentsFrontEndRequest": {
      "properties": "@{game=; gifteeAccountId=; gifteeMessage=; isPrepaid=; localeId=; rsoToken=; summonerLevel=; usePmcSessions=}",
      "type": "object"
    },
    "PaymentsFrontEndResult": {
      "properties": "@{url=}",
      "type": "object"
    },
    "PaymentsPMCStartUrlRequest": {
      "properties": "@{game=; gifteeAccountId=; gifteeMessage=; isPrepaid=; localeId=; summonerLevel=}",
      "type": "object"
    },
    "PaymentsPMCStartUrlResult": {
      "properties": "@{createdAt=; id=; localeId=; playerFacingId=; pmcStartUrl=; summonerLevel=; userId=}",
      "type": "object"
    },
    "PendingOpenedTeamDTO": {
      "properties": "@{invitationId=; logo=; logoColor=; name=; shortName=; tier=}",
      "type": "object"
    },
    "PendingRosterDTO": {
      "properties": "@{captainId=; highTierVariance=; invitationId=; inviteFaileds=; invitees=; lft=; logo=; logoColor=; members=; mucJwtDto=; name=; rewardLogos=; shortName=; ticketOffers=; tier=; tournamentId=; version=}",
      "type": "object"
    },
    "PendingRosterInviteeDTO": {
      "properties": "@{inviteTime=; inviteType=; inviteeId=; inviteeState=; inviter=}",
      "type": "object"
    },
    "PendingRosterInviteeState": {
      "enum": "SUGGESTED PENDING DECLINED REVOKED SUGGEST_DECLINED SUGGEST_REVOKED ACCEPTED SELFJOIN SELFJOIN_DECLINED SELFJOIN_REVOKED",
      "type": "string"
    },
    "PendingRosterMemberDTO": {
      "properties": "@{bet=; betType=; joinTime=; memberState=; pendingPay=; pendingPremiumPay=; playerId=; position=; selfBet=; tier=}",
      "type": "object"
    },
    "PendingRosterMemberState": {
      "enum": "NOT_READY FORCED_NOT_READY READY LEFT KICK",
      "type": "string"
    },
    "PhaseInMember": {
      "properties": "@{bet=; pendingPay=; playerId=; selfBet=}",
      "type": "object"
    },
    "PhaseRosterDTO": {
      "properties": "@{bracketDTO=; bracketId=; checkinTime=; period=; phaseId=}",
      "type": "object"
    },
    "PickModes": {
      "enum": "NOT_PICKING IN_PROGRESS DONE",
      "type": "string"
    },
    "PlayerBehaviorLcdsForcedClientShutdown": {
      "properties": "@{additionalInfo=; reason=}",
      "type": "object"
    },
    "PlayerBehaviorLcdsSimpleMessage": {
      "properties": "@{accountId=; msgId=; params=; type=}",
      "type": "object"
    },
    "PlayerBehaviorSimpleMessageResponse": {
      "properties": "@{accountId=; command=; msgId=}",
      "type": "object"
    },
    "PlayerDTO": {
      "properties": "@{banned=; lft=; notifications=; primaryPos=; secondaryPos=; tmntLosses=; tmntWins=}",
      "type": "object"
    },
    "PlayerFinderDTO": {
      "properties": "@{friendId=; playerId=; primaryPos=; secondaryPos=; tier=; type=}",
      "type": "object"
    },
    "PlayerFinderEnum": {
      "enum": "FREEAGENT FRIEND",
      "type": "string"
    },
    "PlayerInfoDTO": {
      "properties": "@{playerId=; position=; role=; teamId=}",
      "type": "object"
    },
    "PlayerInventory": {
      "properties": "@{champions=; icons=; inventoryJwts=; skins=; wardSkins=}",
      "type": "object"
    },
    "PlayerLootDTO": {
      "properties": "@{count=; expiryTime=; lootName=; refId=}",
      "type": "object"
    },
    "PlayerLootDefinitionsDTO": {
      "properties": "@{lootItemList=; playerLoot=; queryResult=; recipeList=}",
      "type": "object"
    },
    "PlayerLootResultDTO": {
      "properties": "@{added=; details=; failed=; redeemed=; removed=; status=}",
      "type": "object"
    },
    "PlayerMissionDTO": {
      "properties": "@{backgroundImageUrl=; celebrationType=; clientNotifyLevel=; completedDate=; completionExpression=; cooldownTimeMillis=; description=; display=; displayType=; earnedDate=; endTime=; expiringWarnings=; helperText=; iconImageUrl=; id=; internalName=; isNew=; lastUpdatedTimestamp=; locale=; media=; metadata=; missionType=; objectives=; requirements=; rewardStrategy=; rewards=; sequence=; seriesName=; startTime=; status=; title=; viewed=}",
      "type": "object"
    },
    "PlayerMissionEligibilityData": {
      "properties": "@{level=; loyaltyEnabled=; playerInventory=; userInfoToken=}",
      "type": "object"
    },
    "PlayerMissionObjectiveDTO": {
      "properties": "@{description=; hasObjectiveBasedReward=; progress=; requirements=; rewardGroups=; sequence=; status=; type=}",
      "type": "object"
    },
    "PlayerMissionRewardDTO": {
      "properties": "@{description=; iconNeedsFrame=; iconUrl=; isObjectiveBasedReward=; itemId=; media=; quantity=; rewardFulfilled=; rewardGroup=; rewardGroupSelected=; rewardType=; sequence=; smallIconUrl=; uniqueName=}",
      "type": "object"
    },
    "PlayerNotificationsPlayerNotificationConfigResource": {
      "properties": "@{ExpirationCheckFrequency=}",
      "type": "object"
    },
    "PlayerNotificationsPlayerNotificationResource": {
      "properties": "@{backgroundUrl=; created=; critical=; data=; detailKey=; dismissible=; expires=; iconUrl=; id=; source=; state=; titleKey=; type=}",
      "type": "object"
    },
    "PlayerNotificationsRiotMessagingServiceMessage": {
      "properties": "@{payload=; resource=; service=; timestamp=; version=}",
      "type": "object"
    },
    "PlayerParticipant": {
      "properties": "@{summonerId=}",
      "type": "object"
    },
    "PlayerRosterHistoryDTO": {
      "properties": "@{rosters=}",
      "type": "object"
    },
    "PlayerTierDTO": {
      "properties": "@{playerId=; primaryPos=; secondPos=; tier=}",
      "type": "object"
    },
    "PluginDescriptionResource": {
      "properties": "@{name=; pluginDependencies=; riotMeta=; version=}",
      "type": "object"
    },
    "PluginLcdsEvent": {
      "properties": "@{body=; clientId=; subtopic=; typeName=}",
      "type": "object"
    },
    "PluginLcdsResponse": {
      "properties": "@{body=; typeName=}",
      "type": "object"
    },
    "PluginManagerResource": {
      "properties": "@{state=}",
      "type": "object"
    },
    "PluginManagerState": {
      "enum": "NotReady PluginsInitialized",
      "type": "string"
    },
    "PluginMetadataResource": {
      "properties": "@{app=; feature=; globalAssetBundles=; hasBundledAssets=; implements=; mock=; perLocaleAssetBundles=; subtype=; threading=; type=}",
      "type": "object"
    },
    "PluginRegionLocaleChangedEvent": {
      "properties": "@{locale=; region=}",
      "type": "object"
    },
    "PluginResource": {
      "properties": "@{app=; assetBundleNames=; dependencies=; feature=; fullName=; implementedContracts=; mountedAssetBundles=; orderWadFileMounted=; shortName=; subtype=; supertype=; threadingModel=; version=}",
      "type": "object"
    },
    "PluginResourceContract": {
      "properties": "@{fullName=; version=}",
      "type": "object"
    },
    "PluginResourceEvent": {
      "properties": "@{data=; eventType=; uri=}",
      "type": "object"
    },
    "PluginResourceEventType": {
      "enum": "Create Update Delete",
      "type": "string"
    },
    "PluginServiceProxyResponse": {
      "properties": "@{error=; methodName=; payload=; serviceName=; status=; uuid=}",
      "type": "object"
    },
    "PluginThreadingModel": {
      "enum": "dedicated sequential concurrent parallel",
      "type": "string"
    },
    "Position": {
      "enum": "TOP MIDDLE BOTTOM JUNGLE UTILITY FILL UNSELECTED",
      "type": "string"
    },
    "ProcessControlProcess": {
      "properties": "@{status=}",
      "type": "object"
    },
    "PublicRosterDTO": {
      "properties": "@{id=; logo=; logoColor=; memberIds=; name=; shortName=; tournamentId=}",
      "type": "object"
    },
    "Punishment": {
      "properties": "@{permaBan=; playerFacingMessage=; punishedForChatLogs=; punishedForGameIds=; punishedUntilDateMillis=; punishmentLengthGames=; punishmentLengthMillis=; punishmentReason=; punishmentType=}",
      "type": "object"
    },
    "QueryEvaluationRequestDTO": {
      "properties": "@{query=}",
      "type": "object"
    },
    "QueryEvaluationResultDTO": {
      "properties": "@{lootItemNames=}",
      "type": "object"
    },
    "QueryResultDTO": {
      "properties": "@{lastUpdate=; queryToLootNames=}",
      "type": "object"
    },
    "RankedScoutingDTO": {
      "properties": "@{playerId=; topMasteries=; topSeasonChampions=; totalMasteryScore=}",
      "type": "object"
    },
    "RankedScoutingMemberDTO": {
      "properties": "@{championScoutingData=; playerId=}",
      "type": "object"
    },
    "RankedScoutingTopChampionDTO": {
      "properties": "@{championId=; gameCount=; kda=; rank=; winCount=}",
      "type": "object"
    },
    "RedeemLootTransactionDTO": {
      "properties": "@{accountId=; clientId=; lootName=; playerId=; puuid=}",
      "type": "object"
    },
    "RegionLocale": {
      "properties": "@{locale=; region=; webLanguage=; webRegion=}",
      "type": "object"
    },
    "RemotingHelpFormat": {
      "description": "Help format for remoting functions and types.",
      "enum": "Full Epytext Brief Console",
      "type": "string"
    },
    "RemotingPrivilege": {
      "description": "Well-known privilege levels for bindable functions.",
      "enum": "None User Admin Local",
      "type": "string"
    },
    "RemotingSerializedFormat": {
      "description": "Serialization format for remoting requests and results.",
      "enum": "JSON YAML MsgPack",
      "type": "string"
    },
    "ReplayMetadataV2": {
      "properties": "@{fileSize=; gameVersion=}",
      "type": "object"
    },
    "ReplayResponseStatus": {
      "enum": "OK NOT_FOUND EXPIRED BAD_REQUEST INTERNAL_SERVER_ERROR",
      "type": "string"
    },
    "RewardDetails": {
      "properties": "@{rosterId=; teamMemberIds=; tournamentId=}",
      "type": "object"
    },
    "RewardLogo": {
      "properties": "@{logo=; memberOwnedCount=}",
      "type": "object"
    },
    "RewardStrategy": {
      "properties": "@{groupStrategy=; selectMaxGroupCount=; selectMinGroupCount=}",
      "type": "object"
    },
    "RiotMessagingServiceAcknowledgeBody": {
      "properties": "@{id=}",
      "type": "object"
    },
    "RiotMessagingServiceEntitlementsToken": {
      "properties": "@{accessToken=; entitlements=; issuer=; subject=; token=}",
      "type": "object"
    },
    "RiotMessagingServicePluginRegionLocaleChangedEvent": {
      "properties": "@{locale=; region=}",
      "type": "object"
    },
    "RiotMessagingServiceSession": {
      "properties": "@{state=; token=; tokenType=}",
      "type": "object"
    },
    "RiotMessagingServiceState": {
      "enum": "Disconnecting Disconnected Connecting Connected",
      "type": "string"
    },
    "RiotMessagingServiceTokenType": {
      "enum": "Unavailable Access Identity",
      "type": "string"
    },
    "RmsMessage": {
      "properties": "@{ackRequired=; id=; payload=; resource=; service=; timestamp=; version=}",
      "type": "object"
    },
    "Role": {
      "enum": "CAPTAIN MEMBER NONE",
      "type": "string"
    },
    "RosterAggregatedStatsDTO": {
      "properties": "@{periodStats=; playerStats=}",
      "type": "object"
    },
    "RosterDTO": {
      "properties": "@{banned=; captainId=; dynamicState=; eliminated=; id=; invitationId=; logo=; logoColor=; losses=; members=; mucJwtDto=; name=; phases=; points=; shortName=; tier=; tournamentId=; version=; wins=}",
      "type": "object"
    },
    "RosterDynamicStateDTO": {
      "properties": "@{members=; phaseCheckinStates=; rosterId=; ticketOffers=; tournamentId=; version=; withdraw=}",
      "type": "object"
    },
    "RosterMatchAggregatedStatsDTO": {
      "properties": "@{duration=; gameId=; kills=; loserBracket=; opponentKills=; opponentLogo=; opponentLogoColor=; opponentShortName=; playerChampionIds=; round=; win=}",
      "type": "object"
    },
    "RosterMemberDTO": {
      "properties": "@{bidType=; currentBid=; joinTime=; pendingPremiumSpend=; pendingSpend=; playerId=; position=; rosterId=; tier=; tournamentId=}",
      "type": "object"
    },
    "RosterPeriodAggregatedStatsDTO": {
      "properties": "@{bracketSize=; matchStats=; period=; playerBids=; time=}",
      "type": "object"
    },
    "RosterPlayerAggregatedStatsDTO": {
      "properties": "@{rawStatsMax=; rawStatsSum=}",
      "type": "object"
    },
    "RosterStatsDTO": {
      "properties": "@{rosterId=; rosterLogo=; rosterLogoColor=; rosterName=; rosterShortName=; scheduleEndTime=; scheduleTime=; stats=; tier=; tournamentNameLocKey=; tournamentNameLocKeySecondary=; tournamentPeriods=; tournamentThemeId=}",
      "type": "object"
    },
    "RosterWithdraw": {
      "properties": "@{declineWithdrawMembers=; gameStartBufferMs=; initVoteMember=; initVoteTime=; lockoutTimeMs=; voteTimeoutMs=; voteWithdrawMembers=}",
      "type": "object"
    },
    "SLIBoolDiagnostic": {
      "properties": "@{key=; value=}",
      "type": "object"
    },
    "SLICount": {
      "properties": "@{boolDiagnostics=; doubleDiagnostics=; endTimeEpochMs=; failures=; idempotencyKey=; intDiagnostics=; labels=; sliName=; startTimeEpochMs=; stringDiagnostics=; successes=}",
      "type": "object"
    },
    "SLIDoubleDiagnostic": {
      "properties": "@{key=; value=}",
      "type": "object"
    },
    "SLIIntDiagnostic": {
      "properties": "@{key=; value=}",
      "type": "object"
    },
    "SLILabel": {
      "properties": "@{key=; value=}",
      "type": "object"
    },
    "SLIStringDiagnostic": {
      "properties": "@{key=; value=}",
      "type": "object"
    },
    "SanitizerContainsSanitizedRequest": {
      "properties": "@{aggressiveScan=; level=; text=}",
      "type": "object"
    },
    "SanitizerContainsSanitizedResponse": {
      "properties": "@{contains=}",
      "type": "object"
    },
    "SanitizerSanitizeRequest": {
      "properties": "@{aggressiveScan=; level=; text=; texts=}",
      "type": "object"
    },
    "SanitizerSanitizeResponse": {
      "properties": "@{modified=; text=; texts=}",
      "type": "object"
    },
    "SanitizerSanitizerStatus": {
      "properties": "@{breakingCharsCount=; filteredWordCountsByLevel=; locale=; projectedCharsCount=; ready=; region=; whitelistedWordCountsByLevel=}",
      "type": "object"
    },
    "SeriesDTO": {
      "properties": "@{createdDate=; description=; displayType=; eligibilityType=; endDate=; id=; internalName=; lastUpdatedTimestamp=; media=; optInButtonText=; optOutButtonText=; parentInternalName=; startDate=; status=; tags=; title=; type=; viewed=; warnings=}",
      "type": "object"
    },
    "SeriesMediaDTO": {
      "properties": "@{accentColor=; backgroundImageLargeUrl=; backgroundImageSmallUrl=; backgroundUrl=; trackerIcon=; trackerIconUrl=}",
      "type": "object"
    },
    "ShutdownLcdsForcedClientShutdown": {
      "properties": "@{additionalInfo=; reason=}",
      "type": "object"
    },
    "SimpleDialogMessage": {
      "properties": "@{accountId=; msgId=; params=; type=}",
      "type": "object"
    },
    "SimpleDialogMessageResponse": {
      "properties": "@{accountId=; command=; msgId=}",
      "type": "object"
    },
    "SpectatorLcdsSpectateAvailabilityDto": {
      "properties": "@{teamOrSummonerIds=}",
      "type": "object"
    },
    "SpectatorLcdsSpectateAvailabilityResponseDto": {
      "properties": "@{availableForWatching=}",
      "type": "object"
    },
    "StoreLcdsChampionDTO": {
      "properties": "@{active=; botEnabled=; championId=; championSkins=; endDate=; f2pRewardSources=; freeToPlay=; freeToPlayReward=; owned=; purchaseDate=; rankedPlayEnabled=; sources=; winCountRemaining=}",
      "type": "object"
    },
    "StoreLcdsChampionSkinDTO": {
      "properties": "@{championId=; endDate=; f2pRewardSources=; freeToPlayReward=; lastSelected=; owned=; purchaseDate=; skinId=; sources=; stillObtainable=; winCountRemaining=}",
      "type": "object"
    },
    "StoreLcdsSimpleDialogMessage": {
      "properties": "@{accountId=; msgId=; params=; type=}",
      "type": "object"
    },
    "StoreLcdsSimpleDialogMessageResponse": {
      "properties": "@{accountId=; command=; msgId=}",
      "type": "object"
    },
    "StoreLcdsStoreAccountBalanceNotification": {
      "properties": "@{ip=; rp=}",
      "type": "object"
    },
    "StoreLcdsStoreFulfillmentNotification": {
      "properties": "@{data=; inventoryType=; ip=; rp=}",
      "type": "object"
    },
    "ThemeVp": {
      "properties": "@{themeId=; themeVp=}",
      "type": "object"
    },
    "TicketOfferDTO": {
      "properties": "@{count=; offerPlayerId=; receivePlayerId=; ticketOfferState=; type=}",
      "type": "object"
    },
    "TicketOfferState": {
      "enum": "ACTIVE ACCEPTED REJECTED REVOKED",
      "type": "string"
    },
    "TicketType": {
      "enum": "BASIC PREMIUM",
      "type": "string"
    },
    "TierConfig": {
      "properties": "@{delayTime=; estimateTime=; tier=}",
      "type": "object"
    },
    "TimeSeriesEventBeginV1": {
      "properties": "@{eventName=; when=}",
      "type": "object"
    },
    "TimeSeriesEventEndV1": {
      "properties": "@{eventName=; suffix=; when=}",
      "type": "object"
    },
    "TimeSeriesEventMarkerV1": {
      "properties": "@{eventName=; markerName=; when=}",
      "type": "object"
    },
    "TournamentDTO": {
      "properties": "@{bracketFormationInitDelayMs=; bracketFormationIntervalMs=; bracketSize=; buyInOptions=; buyInOptionsPremium=; entryFee=; honorRestriction=; id=; lastThemeOfSeason=; lft=; maxInvites=; maxSuggestionsPerPlayer=; minGames=; nameLocKey=; nameLocKeySecondary=; phases=; queueId=; rankRestriction=; resumeTime=; rewardConfig=; rosterCreateDeadline=; rosterSize=; scheduleEndTime=; scheduleTime=; scoutingTimeMs=; smsRestriction=; status=; themeId=; tierConfigs=; voiceEnabled=}",
      "type": "object"
    },
    "TournamentHistoryAndWinnersDTO": {
      "properties": "@{tournamentHistory=; tournamentWinnersCompressed=}",
      "type": "object"
    },
    "TournamentInfoDTO": {
      "properties": "@{inviteePendingRosters=; pendingRoster=; roster=; themeVp=; tournament=}",
      "type": "object"
    },
    "TournamentInfoMinimalDTO": {
      "properties": "@{time=; tournamentInfo=}",
      "type": "object"
    },
    "TournamentPhaseDTO": {
      "properties": "@{cancelled=; capacityStatus=; id=; limitTiers=; period=; registrationTime=; startTime=; tournamentId=}",
      "type": "object"
    },
    "TournamentPlayerInfoDTO": {
      "properties": "@{player=; rosterStats=; seasonVp=; themeVps=; tier=; time=; tournamentInfo=}",
      "type": "object"
    },
    "TournamentStatusEnum": {
      "enum": "DEFAULT CANCELLED PAUSED PRERESUME",
      "type": "string"
    },
    "TracingCriticalFlowEventV1": {
      "properties": "@{eventId=; payloadString=; succeeded=; when=}",
      "type": "object"
    },
    "TracingEventV1": {
      "properties": "@{dest=; details=; name=; src=; tags=; when=}",
      "type": "object"
    },
    "TracingModuleThreadingModelV1": {
      "enum": "kNone kMainThread kDedicated kSequential kConcurrent kParallel",
      "type": "string"
    },
    "TracingModuleTypeV1": {
      "enum": "kUnknown kRemoteAppModule kBackEndPlugin kBackendOther kFrontEndPlugin kRemotingSource",
      "type": "string"
    },
    "TracingModuleV1": {
      "properties": "@{moduleId=; name=; threadingModel=; type=}",
      "type": "object"
    },
    "TracingPhaseBeginV1": {
      "properties": "@{importance=; name=; when=}",
      "type": "object"
    },
    "TracingPhaseEndV1": {
      "properties": "@{name=; when=}",
      "type": "object"
    },
    "TracingPhaseImportanceV1": {
      "enum": "trivial minor major",
      "type": "string"
    },
    "TutorialMetadata": {
      "properties": "@{displayRewards=; queueId=; stepNumber=; useChosenChampion=; useQuickSearchMatchmaking=}",
      "type": "object"
    },
    "VerboseLootOddsDTO": {
      "properties": "@{chanceToContain=; checksOwnership=; guaranteedToContain=; hasPityRules=; lastUpdated=; recipeName=}",
      "type": "object"
    },
    "YourshopLcdsChampionDTO": {
      "properties": "@{championId=; owned=}",
      "type": "object"
    },
    "YourshopLcdsChampionSkinDTO": {
      "properties": "@{championId=; owned=; skinId=}",
      "type": "object"
    },
    "YourshopLcdsClientDynamicConfigurationNotification": {
      "properties": "@{configs=; delta=}",
      "type": "object"
    },
    "YourshopStoreFulfillmentNotification": {
      "properties": "@{data=; inventoryType=}",
      "type": "object"
    },
    "basicOperatingSystemInfo": {
      "description": "User Experience Settings Operating System Information",
      "properties": "@{edition=; platform=; versionMajor=; versionMinor=}",
      "type": "object"
    },
    "basicSystemInfo": {
      "description": "User Experience Settings System Information",
      "properties": "@{operatingSystem=; physicalMemory=; physicalProcessorCores=}",
      "type": "object"
    },
    "cookie": {
      "properties": "@{domain=; expires=; httponly=; name=; path=; secure=; url=; value=}",
      "type": "object"
    }
  },
  "info": {
    "title": "",
    "version": "1.0.0"
  },
  "paths": {
    "/AsyncDelete": {
      "post": "@{operationId=AsyncDelete; parameters=System.Object[]; responses=; summary=Cancels the asynchronous operation or removes its completion status.; tags=System.Object[]}"
    },
    "/AsyncResult": {
      "post": "@{operationId=AsyncResult; parameters=System.Object[]; responses=; summary=Retrieves the result of a completed asynchronous operation.; tags=System.Object[]}"
    },
    "/AsyncStatus": {
      "post": "@{operationId=AsyncStatus; parameters=System.Object[]; responses=; summary=Retrieves details on the current state of an asynchronous operation.; tags=System.Object[]}"
    },
    "/Cancel": {
      "post": "@{operationId=Cancel; parameters=System.Object[]; responses=; summary=Attempts to cancel an asynchronous operation; tags=System.Object[]}"
    },
    "/Exit": {
      "post": "@{operationId=Exit; parameters=System.Object[]; responses=; summary=Closes the connection.; tags=System.Object[]}"
    },
    "/Help": {
      "post": "@{description=With no arguments, returns a list of all available functions and types along with a short description. If a function or type is specified, returns detailed information about it.; operationId=Help; parameters=System.Object[]; responses=; summary=Returns information on available functions and types; tags=System.Object[]}"
    },
    "/LoggingGetEntries": {
      "post": "@{operationId=LoggingGetEntries; parameters=System.Object[]; responses=; summary=Gets all buffered log entries since the last call.; tags=System.Object[]}"
    },
    "/LoggingMetrics": {
      "post": "@{operationId=LoggingMetrics; parameters=System.Object[]; responses=; summary=Returns all metrics; tags=System.Object[]}"
    },
    "/LoggingMetricsMetadata": {
      "post": "@{operationId=LoggingMetricsMetadata; parameters=System.Object[]; responses=; summary=Returns metadata for all metrics; tags=System.Object[]}"
    },
    "/LoggingStart": {
      "post": "@{operationId=LoggingStart; parameters=System.Object[]; responses=; summary=Initializes the logging system.; tags=System.Object[]}"
    },
    "/LoggingStop": {
      "post": "@{operationId=LoggingStop; parameters=System.Object[]; responses=; summary=Finalizes the logging system.; tags=System.Object[]}"
    },
    "/MemoryPools": {
      "post": "@{operationId=MemoryPools; parameters=System.Object[]; responses=; summary=Returns current pool usage; tags=System.Object[]}"
    },
    "/Subscribe": {
      "post": "@{operationId=Subscribe; parameters=System.Object[]; responses=; summary=Subscribes to a given event; tags=System.Object[]}"
    },
    "/Unsubscribe": {
      "post": "@{operationId=Unsubscribe; parameters=System.Object[]; responses=; summary=Unsubscribes from a given event; tags=System.Object[]}"
    },
    "/WebSocketFormat": {
      "post": "@{description=With no arguments, returns the current output format being used. If a format is specified, switches the console output to that format.; operationId=WebSocketFormat; parameters=System.Object[]; responses=; summary=Controls the console output format; tags=System.Object[]}"
    },
    "/anti-addiction/v1/policies/{policyType}/anti-addiction-state": {
      "get": "@{operationId=GetAntiAddictionV1PoliciesByPolicyTypeAntiAddictionState; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/async/v1/result/{asyncToken}": {
      "get": "@{operationId=HttpAsyncResult; parameters=System.Object[]; responses=; summary=Retrieves the result of a completed asynchronous operation.; tags=System.Object[]}"
    },
    "/async/v1/status/{asyncToken}": {
      "delete": "@{operationId=HttpAsyncDelete; parameters=System.Object[]; responses=; summary=Cancels the asynchronous operation or removes its completion status.; tags=System.Object[]}",
      "get": "@{operationId=HttpAsyncStatus; parameters=System.Object[]; responses=; summary=Retrieves details on the current state of an asynchronous operation.; tags=System.Object[]}"
    },
    "/client-config/v1/config": {
      "get": "@{operationId=GetClientConfigV1Config; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/client-config/v1/config/{name}": {
      "get": "@{operationId=GetClientConfigV1ConfigByName; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/client-config/v1/entitlements-token": {
      "put": "@{operationId=PutClientConfigV1EntitlementsToken; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/client-config/v1/refresh-config-status": {
      "put": "@{operationId=PutClientConfigV1RefreshConfigStatus; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/client-config/v1/status/{type}": {
      "get": "@{operationId=GetClientConfigV1StatusByType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/client-config/v2/config/{name}": {
      "get": "@{operationId=GetClientConfigV2ConfigByName; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/client-config/v2/namespace-changes": {
      "put": "@{operationId=PutClientConfigV2NamespaceChanges; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/client-config/v2/namespace/{namespace}": {
      "get": "@{operationId=GetClientConfigV2NamespaceByNamespace; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/client-config/v2/namespace/{namespace}/player": {
      "get": "@{operationId=GetClientConfigV2NamespaceByNamespacePlayer; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/client-config/v2/namespace/{namespace}/public": {
      "get": "@{operationId=GetClientConfigV2NamespaceByNamespacePublic; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/config/v1/config": {
      "get": "@{operationId=GetConfigV1Config; parameters=System.Object[]; responses=; summary=Returns a merged object of both public and player configs; tags=System.Object[]}"
    },
    "/cookie-jar/v1/cookies": {
      "get": "@{operationId=GetCookieJarV1Cookies; parameters=System.Object[]; responses=; summary=Get all cookies.; tags=System.Object[]}",
      "post": "@{operationId=PostCookieJarV1Cookies; parameters=System.Object[]; responses=; summary=Set a cookie.; tags=System.Object[]}"
    },
    "/crash-reporting/v1/crash-status": {
      "get": "@{operationId=GetCrashReportingV1CrashStatus; parameters=System.Object[]; responses=; summary=Returns whether or not the game or client have crashed; tags=System.Object[]}"
    },
    "/data-store/v1/install-dir": {
      "get": "@{operationId=GetDataStoreV1InstallDir; parameters=System.Object[]; responses=; summary=Gets the current install directory (used internally.); tags=System.Object[]}"
    },
    "/data-store/v1/install-settings/{path}": {
      "get": "@{operationId=GetDataStoreV1InstallSettingsByPath; parameters=System.Object[]; responses=; summary=Get the data for the specified key from the install settings.; tags=System.Object[]}",
      "post": "@{operationId=PostDataStoreV1InstallSettingsByPath; parameters=System.Object[]; responses=; summary=Set the data for the specified key from the install settings.; tags=System.Object[]}"
    },
    "/data-store/v1/system-settings/{path}": {
      "get": "@{operationId=GetDataStoreV1SystemSettingsByPath; parameters=System.Object[]; responses=; summary=Get the setting for the specified key.; tags=System.Object[]}"
    },
    "/entitlements/v1/token": {
      "get": "@{operationId=GetEntitlementsV1Token; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-account-verification/v1/confirmActivationPin": {
      "post": "@{operationId=PostLolAccountVerificationV1ConfirmActivationPin; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-account-verification/v1/confirmDeactivationPin": {
      "post": "@{operationId=PostLolAccountVerificationV1ConfirmDeactivationPin; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-account-verification/v1/is-verified": {
      "get": "@{operationId=GetLolAccountVerificationV1IsVerified; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-account-verification/v1/phone-number": {
      "get": "@{operationId=GetLolAccountVerificationV1PhoneNumber; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-account-verification/v1/sendActivationPin": {
      "post": "@{operationId=PostLolAccountVerificationV1SendActivationPin; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-account-verification/v1/sendDeactivationPin": {
      "post": "@{operationId=PostLolAccountVerificationV1SendDeactivationPin; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-active-boosts/v1/active-boosts": {
      "get": "@{operationId=GetLolActiveBoostsV1ActiveBoosts; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-anti-addiction/v1/anti-addiction-token": {
      "get": "@{operationId=GetLolAntiAddictionV1AntiAddictionToken; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-banners/v1/current-summoner/flags": {
      "get": "@{operationId=GetLolBannersV1CurrentSummonerFlags; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-banners/v1/current-summoner/flags/equipped": {
      "get": "@{operationId=GetLolBannersV1CurrentSummonerFlagsEquipped; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolBannersV1CurrentSummonerFlagsEquipped; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-banners/v1/current-summoner/frames/equipped": {
      "get": "@{operationId=GetLolBannersV1CurrentSummonerFramesEquipped; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-banners/v1/players/{puuid}/flags/equipped": {
      "get": "@{operationId=GetLolBannersV1PlayersByPuuidFlagsEquipped; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-career-stats/v1/champion-averages/season/{season}/{championId}/{position}/{tier}/{queue}": {
      "get": "@{operationId=GetLolCareerStatsV1ChampionAveragesSeasonBySeasonByChampionIdByPositionByTierByQueue; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-career-stats/v1/champion-averages/{championId}/{position}/{tier}/{queue}": {
      "get": "@{operationId=GetLolCareerStatsV1ChampionAveragesByChampionIdByPositionByTierByQueue; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-career-stats/v1/champion-experts/season/{season}/{championId}/{position}": {
      "get": "@{operationId=GetLolCareerStatsV1ChampionExpertsSeasonBySeasonByChampionIdByPosition; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-career-stats/v1/champion-experts/{championId}/{position}": {
      "get": "@{operationId=GetLolCareerStatsV1ChampionExpertsByChampionIdByPosition; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-career-stats/v1/champion-stats-percentiles": {
      "post": "@{operationId=PostLolCareerStatsV1ChampionStatsPercentiles; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-career-stats/v1/position-averages/season/{season}/{position}/{tier}/{queue}": {
      "get": "@{operationId=GetLolCareerStatsV1PositionAveragesSeasonBySeasonByPositionByTierByQueue; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-career-stats/v1/position-averages/{position}/{tier}/{queue}": {
      "get": "@{operationId=GetLolCareerStatsV1PositionAveragesByPositionByTierByQueue; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-career-stats/v1/position-experts/season/{season}/{position}": {
      "get": "@{operationId=GetLolCareerStatsV1PositionExpertsSeasonBySeasonByPosition; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-career-stats/v1/position-experts/{position}": {
      "get": "@{operationId=GetLolCareerStatsV1PositionExpertsByPosition; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-career-stats/v1/position-stats-percentiles": {
      "post": "@{operationId=PostLolCareerStatsV1PositionStatsPercentiles; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-career-stats/v1/summoner-games/{puuid}": {
      "get": "@{operationId=GetLolCareerStatsV1SummonerGamesByPuuid; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-career-stats/v1/summoner-games/{puuid}/season/{season}": {
      "get": "@{operationId=GetLolCareerStatsV1SummonerGamesByPuuidSeasonBySeason; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-career-stats/v1/summoner-stats/{puuid}/{season}/{queue}/{position}": {
      "get": "@{operationId=GetLolCareerStatsV1SummonerStatsByPuuidBySeasonByQueueByPosition; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-catalog/v1/item-details": {
      "get": "@{operationId=GetLolCatalogV1ItemDetails; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-catalog/v1/items": {
      "get": "@{operationId=GetLolCatalogV1Items; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-catalog/v1/items-list-details/skip-cache": {
      "get": "@{operationId=GetLolCatalogV1ItemsListDetailsSkipCache; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-catalog/v1/items/{inventoryType}": {
      "get": "@{operationId=GetLolCatalogV1ItemsByInventoryType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-challenges/v1/ack-challenge-update/{id}": {
      "post": "@{operationId=PostLolChallengesV1AckChallengeUpdateById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-challenges/v1/available-queue-ids": {
      "get": "@{operationId=GetLolChallengesV1AvailableQueueIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-challenges/v1/challenges/category-data": {
      "get": "@{operationId=GetLolChallengesV1ChallengesCategoryData; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-challenges/v1/challenges/local-player": {
      "get": "@{operationId=GetLolChallengesV1ChallengesLocalPlayer; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-challenges/v1/client-state": {
      "get": "@{operationId=GetLolChallengesV1ClientState; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-challenges/v1/level-points": {
      "get": "@{operationId=GetLolChallengesV1LevelPoints; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-challenges/v1/my-updated-challenges/{gameId}": {
      "get": "@{operationId=GetLolChallengesV1MyUpdatedChallengesByGameId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-challenges/v1/penalty": {
      "get": "@{operationId=GetLolChallengesV1Penalty; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-challenges/v1/seasons": {
      "get": "@{operationId=GetLolChallengesV1Seasons; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-challenges/v1/summary-player-data/local-player": {
      "get": "@{operationId=GetLolChallengesV1SummaryPlayerDataLocalPlayer; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-challenges/v1/summary-player-data/player/{puuid}": {
      "get": "@{operationId=GetLolChallengesV1SummaryPlayerDataPlayerByPuuid; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-challenges/v1/summary-players-data/players": {
      "get": "@{operationId=GetLolChallengesV1SummaryPlayersDataPlayers; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-challenges/v1/titles/all": {
      "get": "@{operationId=GetLolChallengesV1TitlesAll; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-challenges/v1/titles/local-player": {
      "get": "@{operationId=GetLolChallengesV1TitlesLocalPlayer; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-challenges/v1/update-player-preferences": {
      "post": "@{operationId=PostLolChallengesV1UpdatePlayerPreferences; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-challenges/v1/updated-challenges/{gameId}/{puuid}": {
      "get": "@{operationId=GetLolChallengesV1UpdatedChallengesByGameIdByPuuid; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/bannable-champion-ids": {
      "get": "@{operationId=GetLolChampSelectLegacyV1BannableChampionIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/battle-training/launch": {
      "post": "@{operationId=PostLolChampSelectLegacyV1BattleTrainingLaunch; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/current-champion": {
      "get": "@{operationId=GetLolChampSelectLegacyV1CurrentChampion; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/disabled-champion-ids": {
      "get": "@{operationId=GetLolChampSelectLegacyV1DisabledChampionIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/implementation-active": {
      "get": "@{operationId=GetLolChampSelectLegacyV1ImplementationActive; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/pickable-champion-ids": {
      "get": "@{operationId=GetLolChampSelectLegacyV1PickableChampionIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/pickable-skin-ids": {
      "get": "@{operationId=GetLolChampSelectLegacyV1PickableSkinIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/session": {
      "get": "@{operationId=GetLolChampSelectLegacyV1Session; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/session/actions/{id}": {
      "patch": "@{operationId=PatchLolChampSelectLegacyV1SessionActionsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/session/actions/{id}/complete": {
      "post": "@{operationId=PostLolChampSelectLegacyV1SessionActionsByIdComplete; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/session/my-selection": {
      "get": "@{operationId=GetLolChampSelectLegacyV1SessionMySelection; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "patch": "@{operationId=PatchLolChampSelectLegacyV1SessionMySelection; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/session/my-selection/reroll": {
      "post": "@{operationId=PostLolChampSelectLegacyV1SessionMySelectionReroll; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/session/timer": {
      "get": "@{operationId=GetLolChampSelectLegacyV1SessionTimer; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/session/trades": {
      "get": "@{operationId=GetLolChampSelectLegacyV1SessionTrades; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/session/trades/{id}": {
      "get": "@{operationId=GetLolChampSelectLegacyV1SessionTradesById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/session/trades/{id}/accept": {
      "post": "@{operationId=PostLolChampSelectLegacyV1SessionTradesByIdAccept; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/session/trades/{id}/cancel": {
      "post": "@{operationId=PostLolChampSelectLegacyV1SessionTradesByIdCancel; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/session/trades/{id}/decline": {
      "post": "@{operationId=PostLolChampSelectLegacyV1SessionTradesByIdDecline; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/session/trades/{id}/request": {
      "post": "@{operationId=PostLolChampSelectLegacyV1SessionTradesByIdRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select-legacy/v1/team-boost": {
      "get": "@{operationId=GetLolChampSelectLegacyV1TeamBoost; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/all-grid-champions": {
      "get": "@{operationId=GetLolChampSelectV1AllGridChampions; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/bannable-champion-ids": {
      "get": "@{operationId=GetLolChampSelectV1BannableChampionIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/battle-training/launch": {
      "post": "@{operationId=PostLolChampSelectV1BattleTrainingLaunch; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/current-champion": {
      "get": "@{operationId=GetLolChampSelectV1CurrentChampion; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/disabled-champion-ids": {
      "get": "@{operationId=GetLolChampSelectV1DisabledChampionIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/grid-champions/{championId}": {
      "get": "@{operationId=GetLolChampSelectV1GridChampionsByChampionId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/muted-players": {
      "get": "@{operationId=GetLolChampSelectV1MutedPlayers; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/ongoing-swap": {
      "get": "@{operationId=GetLolChampSelectV1OngoingSwap; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/ongoing-swap/{id}/clear": {
      "post": "@{operationId=PostLolChampSelectV1OngoingSwapByIdClear; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/ongoing-trade": {
      "get": "@{operationId=GetLolChampSelectV1OngoingTrade; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/ongoing-trade/{id}/clear": {
      "post": "@{operationId=PostLolChampSelectV1OngoingTradeByIdClear; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/pickable-champion-ids": {
      "get": "@{operationId=GetLolChampSelectV1PickableChampionIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/pickable-skin-ids": {
      "get": "@{operationId=GetLolChampSelectV1PickableSkinIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/pin-drop-notification": {
      "get": "@{operationId=GetLolChampSelectV1PinDropNotification; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/retrieve-latest-game-dto": {
      "post": "@{operationId=PostLolChampSelectV1RetrieveLatestGameDto; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session": {
      "get": "@{operationId=GetLolChampSelectV1Session; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/actions/{id}": {
      "patch": "@{operationId=PatchLolChampSelectV1SessionActionsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/actions/{id}/complete": {
      "post": "@{operationId=PostLolChampSelectV1SessionActionsByIdComplete; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/bench/swap/{championId}": {
      "post": "@{operationId=PostLolChampSelectV1SessionBenchSwapByChampionId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/my-selection": {
      "get": "@{operationId=GetLolChampSelectV1SessionMySelection; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "patch": "@{operationId=PatchLolChampSelectV1SessionMySelection; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/my-selection/reroll": {
      "post": "@{operationId=PostLolChampSelectV1SessionMySelectionReroll; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/simple-inventory": {
      "post": "@{operationId=PostLolChampSelectV1SessionSimpleInventory; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/swaps": {
      "get": "@{operationId=GetLolChampSelectV1SessionSwaps; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/swaps/{id}": {
      "get": "@{operationId=GetLolChampSelectV1SessionSwapsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/swaps/{id}/accept": {
      "post": "@{operationId=PostLolChampSelectV1SessionSwapsByIdAccept; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/swaps/{id}/cancel": {
      "post": "@{operationId=PostLolChampSelectV1SessionSwapsByIdCancel; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/swaps/{id}/decline": {
      "post": "@{operationId=PostLolChampSelectV1SessionSwapsByIdDecline; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/swaps/{id}/request": {
      "post": "@{operationId=PostLolChampSelectV1SessionSwapsByIdRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/timer": {
      "get": "@{operationId=GetLolChampSelectV1SessionTimer; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/trades": {
      "get": "@{operationId=GetLolChampSelectV1SessionTrades; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/trades/{id}": {
      "get": "@{operationId=GetLolChampSelectV1SessionTradesById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/trades/{id}/accept": {
      "post": "@{operationId=PostLolChampSelectV1SessionTradesByIdAccept; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/trades/{id}/cancel": {
      "post": "@{operationId=PostLolChampSelectV1SessionTradesByIdCancel; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/trades/{id}/decline": {
      "post": "@{operationId=PostLolChampSelectV1SessionTradesByIdDecline; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/session/trades/{id}/request": {
      "post": "@{operationId=PostLolChampSelectV1SessionTradesByIdRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/sfx-notifications": {
      "get": "@{operationId=GetLolChampSelectV1SfxNotifications; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/skin-carousel-skins": {
      "get": "@{operationId=GetLolChampSelectV1SkinCarouselSkins; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/skin-selector-info": {
      "get": "@{operationId=GetLolChampSelectV1SkinSelectorInfo; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/summoners/{slotId}": {
      "get": "@{operationId=GetLolChampSelectV1SummonersBySlotId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/team-boost": {
      "get": "@{operationId=GetLolChampSelectV1TeamBoost; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/team-boost/purchase": {
      "post": "@{operationId=PostLolChampSelectV1TeamBoostPurchase; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/toggle-favorite/{championId}/{position}": {
      "post": "@{operationId=PostLolChampSelectV1ToggleFavoriteByChampionIdByPosition; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champ-select/v1/toggle-player-muted": {
      "post": "@{operationId=PostLolChampSelectV1TogglePlayerMuted; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champions/v1/inventories/{summonerId}/champions": {
      "get": "@{operationId=GetLolChampionsV1InventoriesBySummonerIdChampions; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champions/v1/inventories/{summonerId}/champions-minimal": {
      "get": "@{operationId=GetLolChampionsV1InventoriesBySummonerIdChampionsMinimal; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champions/v1/inventories/{summonerId}/champions-playable-count": {
      "get": "@{operationId=GetLolChampionsV1InventoriesBySummonerIdChampionsPlayableCount; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champions/v1/inventories/{summonerId}/champions/{championId}": {
      "get": "@{operationId=GetLolChampionsV1InventoriesBySummonerIdChampionsByChampionId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champions/v1/inventories/{summonerId}/champions/{championId}/skins": {
      "get": "@{operationId=GetLolChampionsV1InventoriesBySummonerIdChampionsByChampionIdSkins; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champions/v1/inventories/{summonerId}/champions/{championId}/skins/{championSkinId}": {
      "get": "@{operationId=GetLolChampionsV1InventoriesBySummonerIdChampionsByChampionIdSkinsByChampionSkinId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champions/v1/inventories/{summonerId}/champions/{championId}/skins/{skinId}/chromas": {
      "get": "@{operationId=GetLolChampionsV1InventoriesBySummonerIdChampionsByChampionIdSkinsBySkinIdChromas; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champions/v1/inventories/{summonerId}/skins-minimal": {
      "get": "@{operationId=GetLolChampionsV1InventoriesBySummonerIdSkinsMinimal; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-champions/v1/owned-champions-minimal": {
      "get": "@{operationId=GetLolChampionsV1OwnedChampionsMinimal; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/blocked-players": {
      "get": "@{operationId=GetLolChatV1BlockedPlayers; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolChatV1BlockedPlayers; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/blocked-players/{id}": {
      "delete": "@{operationId=DeleteLolChatV1BlockedPlayersById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolChatV1BlockedPlayersById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/config": {
      "get": "@{operationId=GetLolChatV1Config; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/conversations": {
      "get": "@{operationId=GetLolChatV1Conversations; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolChatV1Conversations; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/conversations/active": {
      "delete": "@{operationId=DeleteLolChatV1ConversationsActive; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolChatV1ConversationsActive; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolChatV1ConversationsActive; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/conversations/eog-chat-toggle": {
      "post": "@{operationId=PostLolChatV1ConversationsEogChatToggle; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/conversations/notify": {
      "get": "@{operationId=GetLolChatV1ConversationsNotify; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/conversations/{id}": {
      "delete": "@{operationId=DeleteLolChatV1ConversationsById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolChatV1ConversationsById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolChatV1ConversationsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/conversations/{id}/closed": {
      "post": "@{operationId=PostLolChatV1ConversationsByIdClosed; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolChatV1ConversationsByIdClosed; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/conversations/{id}/messages": {
      "delete": "@{operationId=DeleteLolChatV1ConversationsByIdMessages; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolChatV1ConversationsByIdMessages; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolChatV1ConversationsByIdMessages; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/conversations/{id}/participants": {
      "get": "@{operationId=GetLolChatV1ConversationsByIdParticipants; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolChatV1ConversationsByIdParticipants; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/conversations/{id}/participants/{pid}": {
      "get": "@{operationId=GetLolChatV1ConversationsByIdParticipantsByPid; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/errors": {
      "get": "@{operationId=GetLolChatV1Errors; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/errors/{id}": {
      "delete": "@{operationId=DeleteLolChatV1ErrorsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/friend-counts": {
      "get": "@{operationId=GetLolChatV1FriendCounts; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/friend-exists/{summonerId}": {
      "get": "@{operationId=GetLolChatV1FriendExistsBySummonerId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/friend-groups": {
      "get": "@{operationId=GetLolChatV1FriendGroups; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolChatV1FriendGroups; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/friend-groups/order": {
      "put": "@{operationId=PutLolChatV1FriendGroupsOrder; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/friend-groups/{id}": {
      "delete": "@{operationId=DeleteLolChatV1FriendGroupsById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolChatV1FriendGroupsById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolChatV1FriendGroupsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/friend-groups/{id}/friends": {
      "get": "@{operationId=GetLolChatV1FriendGroupsByIdFriends; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/friend-requests": {
      "get": "@{operationId=GetLolChatV1FriendRequests; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolChatV1FriendRequests; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/friend-requests/{id}": {
      "delete": "@{operationId=DeleteLolChatV1FriendRequestsById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolChatV1FriendRequestsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/friends": {
      "get": "@{operationId=GetLolChatV1Friends; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/friends/{id}": {
      "delete": "@{operationId=DeleteLolChatV1FriendsById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolChatV1FriendsById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolChatV1FriendsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/me": {
      "get": "@{operationId=GetLolChatV1Me; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolChatV1Me; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/player-mutes": {
      "delete": "@{operationId=DeleteLolChatV1PlayerMutes; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolChatV1PlayerMutes; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolChatV1PlayerMutes; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/resources": {
      "get": "@{operationId=GetLolChatV1Resources; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/session": {
      "delete": "@{operationId=DeleteLolChatV1Session; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolChatV1Session; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/session/rso": {
      "post": "@{operationId=PostLolChatV1SessionRso; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/settings": {
      "get": "@{operationId=GetLolChatV1Settings; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolChatV1Settings; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/settings/{key}": {
      "delete": "@{operationId=DeleteLolChatV1SettingsByKey; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolChatV1SettingsByKey; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolChatV1SettingsByKey; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-chat/v1/system-mutes": {
      "post": "@{operationId=PostLolChatV1SystemMutes; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/all-tournaments": {
      "get": "@{operationId=GetLolClashV1AllTournaments; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/awaiting-resent-eog": {
      "get": "@{operationId=GetLolClashV1AwaitingResentEog; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/bracket/{bracketId}": {
      "get": "@{operationId=GetLolClashV1BracketByBracketId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/checkin-allowed": {
      "get": "@{operationId=GetLolClashV1CheckinAllowed; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/currentTournamentIds": {
      "get": "@{operationId=GetLolClashV1CurrentTournamentIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/disabled-config": {
      "get": "@{operationId=GetLolClashV1DisabledConfig; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/enabled": {
      "get": "@{operationId=GetLolClashV1Enabled; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/eog-player-update": {
      "get": "@{operationId=GetLolClashV1EogPlayerUpdate; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/eog-player-update/acknowledge": {
      "post": "@{operationId=PostLolClashV1EogPlayerUpdateAcknowledge; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/event/{uuid}": {
      "get": "@{operationId=GetLolClashV1EventByUuid; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/events": {
      "post": "@{operationId=PostLolClashV1Events; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/game-end": {
      "get": "@{operationId=GetLolClashV1GameEnd; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/game-end/acknowledge": {
      "post": "@{operationId=PostLolClashV1GameEndAcknowledge; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/historyandwinners": {
      "get": "@{operationId=GetLolClashV1Historyandwinners; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/iconconfig": {
      "get": "@{operationId=GetLolClashV1Iconconfig; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/invited-roster-ids": {
      "get": "@{operationId=GetLolClashV1InvitedRosterIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/lft/player": {
      "post": "@{operationId=PostLolClashV1LftPlayer; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/lft/player/find": {
      "post": "@{operationId=PostLolClashV1LftPlayerFind; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/lft/team": {
      "post": "@{operationId=PostLolClashV1LftTeam; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/lft/team/fetch-requests": {
      "post": "@{operationId=PostLolClashV1LftTeamFetchRequests; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/lft/team/find": {
      "post": "@{operationId=PostLolClashV1LftTeamFind; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/lft/team/requests": {
      "get": "@{operationId=GetLolClashV1LftTeamRequests; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/lft/team/{rosterId}/request": {
      "post": "@{operationId=PostLolClashV1LftTeamByRosterIdRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/notifications": {
      "get": "@{operationId=GetLolClashV1Notifications; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/notifications/acknowledge": {
      "post": "@{operationId=PostLolClashV1NotificationsAcknowledge; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/ping": {
      "get": "@{operationId=GetLolClashV1Ping; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/player": {
      "get": "@{operationId=GetLolClashV1Player; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/player/chat-rosters": {
      "get": "@{operationId=GetLolClashV1PlayerChatRosters; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/player/history": {
      "get": "@{operationId=GetLolClashV1PlayerHistory; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/playmode-restricted": {
      "get": "@{operationId=GetLolClashV1PlaymodeRestricted; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/ready": {
      "get": "@{operationId=GetLolClashV1Ready; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/refresh": {
      "post": "@{operationId=PostLolClashV1Refresh; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/rewards": {
      "get": "@{operationId=GetLolClashV1Rewards; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}": {
      "get": "@{operationId=GetLolClashV1RosterByRosterId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/accept": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdAccept; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/cancel-withdraw": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdCancelWithdraw; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/change-all-details": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdChangeAllDetails; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/change-icon": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdChangeIcon; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/change-name": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdChangeName; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/change-short-name": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdChangeShortName; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/decline": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdDecline; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/disband": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdDisband; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/invite": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdInvite; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/kick": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdKick; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/leave": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdLeave; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/lockin": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdLockin; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/set-position": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdSetPosition; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/set-ticket": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdSetTicket; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/stats": {
      "get": "@{operationId=GetLolClashV1RosterByRosterIdStats; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/suggest": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdSuggest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/suggest/{summonerId}/accept": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdSuggestBySummonerIdAccept; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/suggest/{summonerId}/decline": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdSuggestBySummonerIdDecline; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/suggest/{summonerId}/revoke": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdSuggestBySummonerIdRevoke; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/ticket-offer/{summonerId}/accept": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdTicketOfferBySummonerIdAccept; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/ticket-offer/{summonerId}/decline": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdTicketOfferBySummonerIdDecline; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/ticket-offer/{summonerId}/offer": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdTicketOfferBySummonerIdOffer; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/ticket-offer/{summonerId}/revoke": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdTicketOfferBySummonerIdRevoke; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/transfer-captain": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdTransferCaptain; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/unlockin": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdUnlockin; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/unwithdraw": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdUnwithdraw; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/update-logos": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdUpdateLogos; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/roster/{rosterId}/withdraw": {
      "post": "@{operationId=PostLolClashV1RosterByRosterIdWithdraw; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/scouting/champions": {
      "get": "@{operationId=GetLolClashV1ScoutingChampions; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/scouting/matchhistory": {
      "get": "@{operationId=GetLolClashV1ScoutingMatchhistory; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/season-rewards/{seasonId}": {
      "get": "@{operationId=GetLolClashV1SeasonRewardsBySeasonId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/simple-state-flags": {
      "get": "@{operationId=GetLolClashV1SimpleStateFlags; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/simple-state-flags/{id}/acknowledge": {
      "post": "@{operationId=PostLolClashV1SimpleStateFlagsByIdAcknowledge; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/thirdparty/team-data": {
      "get": "@{operationId=GetLolClashV1ThirdpartyTeamData; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/time": {
      "get": "@{operationId=GetLolClashV1Time; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/tournament-state-info": {
      "get": "@{operationId=GetLolClashV1TournamentStateInfo; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/tournament-summary": {
      "get": "@{operationId=GetLolClashV1TournamentSummary; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/tournament/cancelled": {
      "get": "@{operationId=GetLolClashV1TournamentCancelled; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/tournament/get-all-player-tiers": {
      "get": "@{operationId=GetLolClashV1TournamentGetAllPlayerTiers; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/tournament/{tournamentId}": {
      "get": "@{operationId=GetLolClashV1TournamentByTournamentId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/tournament/{tournamentId}/create-roster": {
      "post": "@{operationId=PostLolClashV1TournamentByTournamentIdCreateRoster; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/tournament/{tournamentId}/get-player-tiers": {
      "get": "@{operationId=GetLolClashV1TournamentByTournamentIdGetPlayerTiers; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/tournament/{tournamentId}/player": {
      "get": "@{operationId=GetLolClashV1TournamentByTournamentIdPlayer; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/tournament/{tournamentId}/player-honor-restricted": {
      "get": "@{operationId=GetLolClashV1TournamentByTournamentIdPlayerHonorRestricted; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/tournament/{tournamentId}/stateInfo": {
      "get": "@{operationId=GetLolClashV1TournamentByTournamentIdStateInfo; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/tournament/{tournamentId}/winners": {
      "get": "@{operationId=GetLolClashV1TournamentByTournamentIdWinners; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/update-logos": {
      "post": "@{operationId=PostLolClashV1UpdateLogos; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/visible": {
      "get": "@{operationId=GetLolClashV1Visible; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/voice": {
      "delete": "@{operationId=DeleteLolClashV1Voice; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolClashV1Voice; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/voice-delay/{delaySeconds}": {
      "delete": "@{operationId=DeleteLolClashV1VoiceDelayByDelaySeconds; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolClashV1VoiceDelayByDelaySeconds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v1/voice-enabled": {
      "get": "@{operationId=GetLolClashV1VoiceEnabled; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-clash/v2/playmode-restricted": {
      "get": "@{operationId=GetLolClashV2PlaymodeRestricted; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-client-config/v3/client-config/{name}": {
      "get": "@{operationId=GetLolClientConfigV3ClientConfigByName; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-collections/v1/inventories/chest-eligibility": {
      "get": "@{operationId=GetLolCollectionsV1InventoriesChestEligibility; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-collections/v1/inventories/local-player/champion-mastery-score": {
      "get": "@{operationId=GetLolCollectionsV1InventoriesLocalPlayerChampionMasteryScore; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-collections/v1/inventories/scouting": {
      "get": "@{operationId=GetLolCollectionsV1InventoriesScouting; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-collections/v1/inventories/{summonerId}/backdrop": {
      "get": "@{operationId=GetLolCollectionsV1InventoriesBySummonerIdBackdrop; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-collections/v1/inventories/{summonerId}/champion-mastery": {
      "get": "@{operationId=GetLolCollectionsV1InventoriesBySummonerIdChampionMastery; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-collections/v1/inventories/{summonerId}/champion-mastery/top": {
      "get": "@{operationId=GetLolCollectionsV1InventoriesBySummonerIdChampionMasteryTop; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-collections/v1/inventories/{summonerId}/spells": {
      "get": "@{operationId=GetLolCollectionsV1InventoriesBySummonerIdSpells; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-collections/v1/inventories/{summonerId}/ward-skins": {
      "get": "@{operationId=GetLolCollectionsV1InventoriesBySummonerIdWardSkins; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-collections/v1/inventories/{summonerId}/ward-skins/{wardSkinId}": {
      "get": "@{operationId=GetLolCollectionsV1InventoriesBySummonerIdWardSkinsByWardSkinId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-content-targeting/v1/filters": {
      "get": "@{operationId=GetLolContentTargetingV1Filters; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-content-targeting/v1/locale": {
      "get": "@{operationId=GetLolContentTargetingV1Locale; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-content-targeting/v1/protected_filters": {
      "get": "@{operationId=GetLolContentTargetingV1ProtectedFilters; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-cosmetics/v1/inventories/{setName}/companions": {
      "get": "@{operationId=GetLolCosmeticsV1InventoriesBySetNameCompanions; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-cosmetics/v1/inventories/{setName}/damage-skins": {
      "get": "@{operationId=GetLolCosmeticsV1InventoriesBySetNameDamageSkins; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-cosmetics/v1/inventories/{setName}/map-skins": {
      "get": "@{operationId=GetLolCosmeticsV1InventoriesBySetNameMapSkins; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-cosmetics/v1/inventories/{setName}/playbooks": {
      "get": "@{operationId=GetLolCosmeticsV1InventoriesBySetNamePlaybooks; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-cosmetics/v1/recent/{type}": {
      "patch": "@{operationId=PatchLolCosmeticsV1RecentByType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-cosmetics/v1/selection/companion": {
      "delete": "@{operationId=DeleteLolCosmeticsV1SelectionCompanion; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolCosmeticsV1SelectionCompanion; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-cosmetics/v1/selection/playbook": {
      "delete": "@{operationId=DeleteLolCosmeticsV1SelectionPlaybook; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolCosmeticsV1SelectionPlaybook; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-cosmetics/v1/selection/tft-damage-skin": {
      "delete": "@{operationId=DeleteLolCosmeticsV1SelectionTftDamageSkin; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolCosmeticsV1SelectionTftDamageSkin; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-cosmetics/v1/selection/tft-map-skin": {
      "delete": "@{operationId=DeleteLolCosmeticsV1SelectionTftMapSkin; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolCosmeticsV1SelectionTftMapSkin; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-drops/v1/drop-tables": {
      "get": "@{operationId=GetLolDropsV1DropTables; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-drops/v1/drop-tables/{dropTableId}": {
      "get": "@{operationId=GetLolDropsV1DropTablesByDropTableId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-drops/v1/drop-tables/{dropTableId}/odds-list": {
      "get": "@{operationId=GetLolDropsV1DropTablesByDropTableIdOddsList; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-drops/v1/drop-tables/{dropTableId}/odds-tree": {
      "get": "@{operationId=GetLolDropsV1DropTablesByDropTableIdOddsTree; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-drops/v1/drop-tables/{dropTableId}/players/{playerId}/pity-count": {
      "get": "@{operationId=GetLolDropsV1DropTablesByDropTableIdPlayersByPlayerIdPityCount; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-drops/v1/players/{playerId}/pity-counts": {
      "get": "@{operationId=GetLolDropsV1PlayersByPlayerIdPityCounts; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-drops/v1/ready": {
      "get": "@{operationId=GetLolDropsV1Ready; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-email-verification/v1/confirm-email": {
      "post": "@{operationId=PostLolEmailVerificationV1ConfirmEmail; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-email-verification/v1/email": {
      "get": "@{operationId=GetLolEmailVerificationV1Email; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolEmailVerificationV1Email; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-end-of-game/v1/champion-mastery-updates": {
      "get": "@{operationId=GetLolEndOfGameV1ChampionMasteryUpdates; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-end-of-game/v1/eog-stats-block": {
      "get": "@{operationId=GetLolEndOfGameV1EogStatsBlock; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-end-of-game/v1/gameclient-eog-stats-block": {
      "get": "@{operationId=GetLolEndOfGameV1GameclientEogStatsBlock; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolEndOfGameV1GameclientEogStatsBlock; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-end-of-game/v1/state/dismiss-stats": {
      "post": "@{operationId=PostLolEndOfGameV1StateDismissStats; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-end-of-game/v1/tft-eog-stats": {
      "get": "@{operationId=GetLolEndOfGameV1TftEogStats; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-end-of-game/v2/player-reports": {
      "post": "@{operationId=PostLolEndOfGameV2PlayerReports; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-esport-stream-notifications/v1/live-streams": {
      "get": "@{operationId=GetLolEsportStreamNotificationsV1LiveStreams; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-esport-stream-notifications/v1/send-stats": {
      "post": "@{operationId=PostLolEsportStreamNotificationsV1SendStats; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-esport-stream-notifications/v1/stream-url": {
      "get": "@{operationId=GetLolEsportStreamNotificationsV1StreamUrl; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/categories-offers": {
      "get": "@{operationId=GetLolEventShopV1CategoriesOffers; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/claim-select-all": {
      "post": "@{operationId=PostLolEventShopV1ClaimSelectAll; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/claim-select-bonus-iteration": {
      "post": "@{operationId=PostLolEventShopV1ClaimSelectBonusIteration; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/event-details-data": {
      "get": "@{operationId=GetLolEventShopV1EventDetailsData; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/failure-loading-reward-track": {
      "get": "@{operationId=GetLolEventShopV1FailureLoadingRewardTrack; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/failure-loading-token-shop": {
      "get": "@{operationId=GetLolEventShopV1FailureLoadingTokenShop; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/info": {
      "get": "@{operationId=GetLolEventShopV1Info; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/is-grace-period": {
      "get": "@{operationId=GetLolEventShopV1IsGracePeriod; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/is-multi-purchase-enabled": {
      "get": "@{operationId=GetLolEventShopV1IsMultiPurchaseEnabled; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/is-pass-purchase-enabled": {
      "get": "@{operationId=GetLolEventShopV1IsPassPurchaseEnabled; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/navigation-button-data": {
      "get": "@{operationId=GetLolEventShopV1NavigationButtonData; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/pass-background-data": {
      "get": "@{operationId=GetLolEventShopV1PassBackgroundData; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/pass-bundles": {
      "get": "@{operationId=GetLolEventShopV1PassBundles; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/progress-info-data": {
      "get": "@{operationId=GetLolEventShopV1ProgressInfoData; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/purchase-item": {
      "post": "@{operationId=PostLolEventShopV1PurchaseItem; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/purchase-offer": {
      "post": "@{operationId=PostLolEventShopV1PurchaseOffer; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/reward-track-bonus-items": {
      "get": "@{operationId=GetLolEventShopV1RewardTrackBonusItems; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/reward-track-bonus-progress": {
      "get": "@{operationId=GetLolEventShopV1RewardTrackBonusProgress; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/reward-track-items": {
      "get": "@{operationId=GetLolEventShopV1RewardTrackItems; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/reward-track-progress": {
      "get": "@{operationId=GetLolEventShopV1RewardTrackProgress; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/reward-track-xp": {
      "get": "@{operationId=GetLolEventShopV1RewardTrackXp; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/token-balance": {
      "get": "@{operationId=GetLolEventShopV1TokenBalance; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/token-shop-data": {
      "get": "@{operationId=GetLolEventShopV1TokenShopData; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/token-upsell": {
      "get": "@{operationId=GetLolEventShopV1TokenUpsell; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-event-shop/v1/unclaimed-rewards": {
      "get": "@{operationId=GetLolEventShopV1UnclaimedRewards; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-client-chat/v1/buddies": {
      "get": "@{operationId=GetLolGameClientChatV1Buddies; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-client-chat/v1/ignored-summoners": {
      "get": "@{operationId=GetLolGameClientChatV1IgnoredSummoners; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-client-chat/v1/instant-messages": {
      "post": "@{operationId=PostLolGameClientChatV1InstantMessages; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-client-chat/v1/muted-summoners": {
      "get": "@{operationId=GetLolGameClientChatV1MutedSummoners; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-client-chat/v1/party-messages": {
      "post": "@{operationId=PostLolGameClientChatV1PartyMessages; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-queues/v1/custom": {
      "get": "@{operationId=GetLolGameQueuesV1Custom; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-queues/v1/custom-non-default": {
      "get": "@{operationId=GetLolGameQueuesV1CustomNonDefault; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-queues/v1/game-type-config/{gameTypeConfigId}": {
      "get": "@{operationId=GetLolGameQueuesV1GameTypeConfigByGameTypeConfigId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-queues/v1/game-type-config/{gameTypeConfigId}/map/{mapId}": {
      "get": "@{operationId=GetLolGameQueuesV1GameTypeConfigByGameTypeConfigIdMapByMapId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-queues/v1/queues": {
      "get": "@{operationId=GetLolGameQueuesV1Queues; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-queues/v1/queues/type/{queueType}": {
      "get": "@{operationId=GetLolGameQueuesV1QueuesTypeByQueueType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-queues/v1/queues/{id}": {
      "get": "@{operationId=GetLolGameQueuesV1QueuesById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-settings/v1/didreset": {
      "get": "@{operationId=GetLolGameSettingsV1Didreset; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-settings/v1/game-settings": {
      "get": "@{operationId=GetLolGameSettingsV1GameSettings; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "patch": "@{operationId=PatchLolGameSettingsV1GameSettings; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-settings/v1/game-settings-schema": {
      "get": "@{operationId=GetLolGameSettingsV1GameSettingsSchema; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-settings/v1/input-settings": {
      "get": "@{operationId=GetLolGameSettingsV1InputSettings; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "patch": "@{operationId=PatchLolGameSettingsV1InputSettings; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-settings/v1/input-settings-schema": {
      "get": "@{operationId=GetLolGameSettingsV1InputSettingsSchema; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-settings/v1/ready": {
      "get": "@{operationId=GetLolGameSettingsV1Ready; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-settings/v1/reload-post-game": {
      "post": "@{operationId=PostLolGameSettingsV1ReloadPostGame; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-game-settings/v1/save": {
      "post": "@{operationId=PostLolGameSettingsV1Save; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/ack-failed-to-launch": {
      "post": "@{operationId=PostLolGameflowV1AckFailedToLaunch; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/active-patcher-lock": {
      "get": "@{operationId=GetLolGameflowV1ActivePatcherLock; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/availability": {
      "get": "@{operationId=GetLolGameflowV1Availability; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/basic-tutorial": {
      "get": "@{operationId=GetLolGameflowV1BasicTutorial; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/basic-tutorial/start": {
      "post": "@{operationId=PostLolGameflowV1BasicTutorialStart; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/battle-training": {
      "get": "@{operationId=GetLolGameflowV1BattleTraining; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/battle-training/start": {
      "post": "@{operationId=PostLolGameflowV1BattleTrainingStart; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/battle-training/stop": {
      "post": "@{operationId=PostLolGameflowV1BattleTrainingStop; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/client-received-message": {
      "post": "@{operationId=PostLolGameflowV1ClientReceivedMessage; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/early-exit": {
      "post": "@{operationId=PostLolGameflowV1EarlyExit; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/early-exit-notifications/eog": {
      "delete": "@{operationId=DeleteLolGameflowV1EarlyExitNotificationsEog; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolGameflowV1EarlyExitNotificationsEog; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/early-exit-notifications/eog/{key}": {
      "delete": "@{operationId=DeleteLolGameflowV1EarlyExitNotificationsEogByKey; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/early-exit-notifications/missions": {
      "delete": "@{operationId=DeleteLolGameflowV1EarlyExitNotificationsMissions; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolGameflowV1EarlyExitNotificationsMissions; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/early-exit-notifications/missions/{key}": {
      "delete": "@{operationId=DeleteLolGameflowV1EarlyExitNotificationsMissionsByKey; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/extra-game-client-args": {
      "get": "@{operationId=GetLolGameflowV1ExtraGameClientArgs; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolGameflowV1ExtraGameClientArgs; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/gameflow-metadata/player-status": {
      "get": "@{operationId=GetLolGameflowV1GameflowMetadataPlayerStatus; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolGameflowV1GameflowMetadataPlayerStatus; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/gameflow-metadata/registration-status": {
      "get": "@{operationId=GetLolGameflowV1GameflowMetadataRegistrationStatus; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolGameflowV1GameflowMetadataRegistrationStatus; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/gameflow-phase": {
      "get": "@{operationId=GetLolGameflowV1GameflowPhase; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/pre-end-game-transition": {
      "post": "@{operationId=PostLolGameflowV1PreEndGameTransition; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/reconnect": {
      "post": "@{operationId=PostLolGameflowV1Reconnect; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/session": {
      "get": "@{operationId=GetLolGameflowV1Session; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/session/champ-select/phase-time-remaining": {
      "post": "@{operationId=PostLolGameflowV1SessionChampSelectPhaseTimeRemaining; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/session/dodge": {
      "post": "@{operationId=PostLolGameflowV1SessionDodge; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/session/event": {
      "post": "@{operationId=PostLolGameflowV1SessionEvent; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/session/game-configuration": {
      "post": "@{operationId=PostLolGameflowV1SessionGameConfiguration; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/session/per-position-summoner-spells/disallowed": {
      "get": "@{operationId=GetLolGameflowV1SessionPerPositionSummonerSpellsDisallowed; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/session/per-position-summoner-spells/disallowed/as-string": {
      "get": "@{operationId=GetLolGameflowV1SessionPerPositionSummonerSpellsDisallowedAsString; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/session/per-position-summoner-spells/required": {
      "get": "@{operationId=GetLolGameflowV1SessionPerPositionSummonerSpellsRequired; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/session/per-position-summoner-spells/required/as-string": {
      "get": "@{operationId=GetLolGameflowV1SessionPerPositionSummonerSpellsRequiredAsString; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/session/request-enter-gameflow": {
      "post": "@{operationId=PostLolGameflowV1SessionRequestEnterGameflow; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/session/request-lobby": {
      "post": "@{operationId=PostLolGameflowV1SessionRequestLobby; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/session/request-tournament-checkin": {
      "post": "@{operationId=PostLolGameflowV1SessionRequestTournamentCheckin; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/session/tournament-ended": {
      "post": "@{operationId=PostLolGameflowV1SessionTournamentEnded; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/spectate": {
      "get": "@{operationId=GetLolGameflowV1Spectate; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/spectate/delayed-launch": {
      "get": "@{operationId=GetLolGameflowV1SpectateDelayedLaunch; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/spectate/launch": {
      "post": "@{operationId=PostLolGameflowV1SpectateLaunch; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/spectate/quit": {
      "post": "@{operationId=PostLolGameflowV1SpectateQuit; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/tick": {
      "post": "@{operationId=PostLolGameflowV1Tick; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/watch": {
      "get": "@{operationId=GetLolGameflowV1Watch; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v1/watch/launch": {
      "post": "@{operationId=PostLolGameflowV1WatchLaunch; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-gameflow/v2/spectate/launch": {
      "post": "@{operationId=PostLolGameflowV2SpectateLaunch; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-geoinfo/v1/getlocation": {
      "get": "@{operationId=GetLolGeoinfoV1Getlocation; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-geoinfo/v1/whereami": {
      "get": "@{operationId=GetLolGeoinfoV1Whereami; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-highlights/v1/config": {
      "get": "@{operationId=GetLolHighlightsV1Config; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-highlights/v1/file-browser/{highlightId}": {
      "post": "@{operationId=PostLolHighlightsV1FileBrowserByHighlightId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-highlights/v1/highlights": {
      "get": "@{operationId=GetLolHighlightsV1Highlights; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolHighlightsV1Highlights; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-highlights/v1/highlights-folder-path": {
      "get": "@{operationId=GetLolHighlightsV1HighlightsFolderPath; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-highlights/v1/highlights-folder-path/default": {
      "get": "@{operationId=GetLolHighlightsV1HighlightsFolderPathDefault; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-highlights/v1/highlights/{id}": {
      "delete": "@{operationId=DeleteLolHighlightsV1HighlightsById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolHighlightsV1HighlightsById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolHighlightsV1HighlightsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honeyfruit/v1/account-claim/account-status/{puuid}": {
      "get": "@{operationId=GetLolHoneyfruitV1AccountClaimAccountStatusByPuuid; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honeyfruit/v1/account-claim/auto-dismiss": {
      "get": "@{operationId=GetLolHoneyfruitV1AccountClaimAutoDismiss; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolHoneyfruitV1AccountClaimAutoDismiss; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honeyfruit/v1/account-claim/linking-redirect": {
      "post": "@{operationId=PostLolHoneyfruitV1AccountClaimLinkingRedirect; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honeyfruit/v1/account-claim/migration": {
      "delete": "@{operationId=DeleteLolHoneyfruitV1AccountClaimMigration; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolHoneyfruitV1AccountClaimMigration; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolHoneyfruitV1AccountClaimMigration; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honeyfruit/v1/linking-settings-button-available": {
      "get": "@{operationId=GetLolHoneyfruitV1LinkingSettingsButtonAvailable; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honeyfruit/v1/vng-publisher-settings": {
      "get": "@{operationId=GetLolHoneyfruitV1VngPublisherSettings; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolHoneyfruitV1VngPublisherSettings; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honor-v2/v1/ballot": {
      "get": "@{operationId=GetLolHonorV2V1Ballot; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honor-v2/v1/config": {
      "get": "@{operationId=GetLolHonorV2V1Config; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honor-v2/v1/honor-player": {
      "post": "@{operationId=PostLolHonorV2V1HonorPlayer; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honor-v2/v1/late-recognition": {
      "get": "@{operationId=GetLolHonorV2V1LateRecognition; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honor-v2/v1/late-recognition/ack": {
      "post": "@{operationId=PostLolHonorV2V1LateRecognitionAck; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honor-v2/v1/latest-eligible-game": {
      "get": "@{operationId=GetLolHonorV2V1LatestEligibleGame; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honor-v2/v1/level-change": {
      "get": "@{operationId=GetLolHonorV2V1LevelChange; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honor-v2/v1/level-change/ack": {
      "post": "@{operationId=PostLolHonorV2V1LevelChangeAck; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honor-v2/v1/mutual-honor": {
      "get": "@{operationId=GetLolHonorV2V1MutualHonor; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honor-v2/v1/mutual-honor/ack": {
      "post": "@{operationId=PostLolHonorV2V1MutualHonorAck; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honor-v2/v1/profile": {
      "get": "@{operationId=GetLolHonorV2V1Profile; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honor-v2/v1/recognition": {
      "get": "@{operationId=GetLolHonorV2V1Recognition; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honor-v2/v1/recognition-history": {
      "get": "@{operationId=GetLolHonorV2V1RecognitionHistory; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honor-v2/v1/reward-granted": {
      "get": "@{operationId=GetLolHonorV2V1RewardGranted; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honor-v2/v1/reward-granted/ack": {
      "post": "@{operationId=PostLolHonorV2V1RewardGrantedAck; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honor-v2/v1/team-choices": {
      "get": "@{operationId=GetLolHonorV2V1TeamChoices; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-honor-v2/v1/vote-completion": {
      "get": "@{operationId=GetLolHonorV2V1VoteCompletion; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-hovercard/v1/friend-info-by-summoner/{summonerId}": {
      "get": "@{operationId=GetLolHovercardV1FriendInfoBySummonerBySummonerId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-hovercard/v1/friend-info/{puuid}": {
      "get": "@{operationId=GetLolHovercardV1FriendInfoByPuuid; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v1/champSelectInventory": {
      "get": "@{operationId=GetLolInventoryV1ChampSelectInventory; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v1/initial-configuration-complete": {
      "get": "@{operationId=GetLolInventoryV1InitialConfigurationComplete; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v1/inventory": {
      "get": "@{operationId=GetLolInventoryV1Inventory; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v1/inventory/emotes": {
      "get": "@{operationId=GetLolInventoryV1InventoryEmotes; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v1/inventoryWithF2P": {
      "get": "@{operationId=GetLolInventoryV1InventoryWithF2P; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v1/notification/acknowledge": {
      "post": "@{operationId=PostLolInventoryV1NotificationAcknowledge; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v1/notifications/{inventoryType}": {
      "get": "@{operationId=GetLolInventoryV1NotificationsByInventoryType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v1/players/{puuid}/inventory": {
      "get": "@{operationId=GetLolInventoryV1PlayersByPuuidInventory; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v1/signedInventory": {
      "get": "@{operationId=GetLolInventoryV1SignedInventory; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v1/signedInventory/simple": {
      "get": "@{operationId=GetLolInventoryV1SignedInventorySimple; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v1/signedInventory/tournamentlogos": {
      "get": "@{operationId=GetLolInventoryV1SignedInventoryTournamentlogos; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v1/signedInventoryCache": {
      "get": "@{operationId=GetLolInventoryV1SignedInventoryCache; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v1/signedWallet": {
      "get": "@{operationId=GetLolInventoryV1SignedWallet; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v1/signedWallet/{currencyType}": {
      "get": "@{operationId=GetLolInventoryV1SignedWalletByCurrencyType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v1/wallet": {
      "get": "@{operationId=GetLolInventoryV1Wallet; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v1/wallet/{currencyType}": {
      "get": "@{operationId=GetLolInventoryV1WalletByCurrencyType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v1/xbox-subscription-status": {
      "get": "@{operationId=GetLolInventoryV1XboxSubscriptionStatus; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-inventory/v2/inventory/{inventoryType}": {
      "get": "@{operationId=GetLolInventoryV2InventoryByInventoryType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-item-sets/v1/item-sets/validate": {
      "post": "@{operationId=PostLolItemSetsV1ItemSetsValidate; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-item-sets/v1/item-sets/{summonerId}/sets": {
      "get": "@{operationId=GetLolItemSetsV1ItemSetsBySummonerIdSets; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolItemSetsV1ItemSetsBySummonerIdSets; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolItemSetsV1ItemSetsBySummonerIdSets; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-kickout/v1/notification": {
      "get": "@{operationId=GetLolKickoutV1Notification; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-kr-playtime-reminder/v1/message": {
      "get": "@{operationId=GetLolKrPlaytimeReminderV1Message; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-kr-playtime-reminder/v1/playtime": {
      "get": "@{operationId=GetLolKrPlaytimeReminderV1Playtime; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-kr-shutdown-law/v1/custom-status": {
      "get": "@{operationId=GetLolKrShutdownLawV1CustomStatus; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-kr-shutdown-law/v1/disabled-queues": {
      "get": "@{operationId=GetLolKrShutdownLawV1DisabledQueues; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-kr-shutdown-law/v1/notification": {
      "get": "@{operationId=GetLolKrShutdownLawV1Notification; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-kr-shutdown-law/v1/queue-status/{queue_id}": {
      "get": "@{operationId=GetLolKrShutdownLawV1QueueStatusByQueueId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-kr-shutdown-law/v1/rating-screen": {
      "get": "@{operationId=GetLolKrShutdownLawV1RatingScreen; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-kr-shutdown-law/v1/rating-screen/acknowledge": {
      "post": "@{operationId=PostLolKrShutdownLawV1RatingScreenAcknowledge; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-kr-shutdown-law/v1/status": {
      "get": "@{operationId=GetLolKrShutdownLawV1Status; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-league-session/v1/league-session-token": {
      "get": "@{operationId=GetLolLeagueSessionV1LeagueSessionToken; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-leaver-buster/v1/notifications": {
      "get": "@{operationId=GetLolLeaverBusterV1Notifications; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-leaver-buster/v1/notifications/{id}": {
      "delete": "@{operationId=DeleteLolLeaverBusterV1NotificationsById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolLeaverBusterV1NotificationsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-license-agreement/v1/agreement": {
      "get": "@{operationId=GetLolLicenseAgreementV1Agreement; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-license-agreement/v1/agreements": {
      "get": "@{operationId=GetLolLicenseAgreementV1Agreements; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-license-agreement/v1/agreements/{id}/accept": {
      "post": "@{operationId=PostLolLicenseAgreementV1AgreementsByIdAccept; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-license-agreement/v1/agreements/{id}/decline": {
      "post": "@{operationId=PostLolLicenseAgreementV1AgreementsByIdDecline; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-license-agreement/v1/all-agreements": {
      "get": "@{operationId=GetLolLicenseAgreementV1AllAgreements; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-license-agreement/v1/privacy-policy": {
      "get": "@{operationId=GetLolLicenseAgreementV1PrivacyPolicy; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-license-agreement/v1/serve-location": {
      "get": "@{operationId=GetLolLicenseAgreementV1ServeLocation; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loadouts/v1/loadouts-ready": {
      "get": "@{operationId=GetLolLoadoutsV1LoadoutsReady; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loadouts/v4/loadouts": {
      "post": "@{operationId=PostLolLoadoutsV4Loadouts; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loadouts/v4/loadouts/scope/account": {
      "get": "@{operationId=GetLolLoadoutsV4LoadoutsScopeAccount; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loadouts/v4/loadouts/scope/{scope}/{scopeItemId}": {
      "get": "@{operationId=GetLolLoadoutsV4LoadoutsScopeByScopeByScopeItemId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loadouts/v4/loadouts/{id}": {
      "delete": "@{operationId=DeleteLolLoadoutsV4LoadoutsById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "patch": "@{operationId=PatchLolLoadoutsV4LoadoutsById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolLoadoutsV4LoadoutsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loadouts/v4/loadouts/{loadoutId}": {
      "get": "@{operationId=GetLolLoadoutsV4LoadoutsByLoadoutId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/bannable-champion-ids": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1BannableChampionIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/current-champion": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1CurrentChampion; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/disabled-champion-ids": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1DisabledChampionIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/has-auto-assigned-smite": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1HasAutoAssignedSmite; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/implementation-active": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1ImplementationActive; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/pickable-champion-ids": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1PickableChampionIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/pickable-skin-ids": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1PickableSkinIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/preferences": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1Preferences; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/retrieve-latest-game-dto": {
      "post": "@{operationId=PostLolLobbyTeamBuilderChampSelectV1RetrieveLatestGameDto; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/sending-loadouts-gcos-enabled": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1SendingLoadoutsGcosEnabled; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1Session; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/actions/{id}": {
      "patch": "@{operationId=PatchLolLobbyTeamBuilderChampSelectV1SessionActionsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/actions/{id}/complete": {
      "post": "@{operationId=PostLolLobbyTeamBuilderChampSelectV1SessionActionsByIdComplete; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/bench/swap/{championId}": {
      "post": "@{operationId=PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/my-selection": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1SessionMySelection; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "patch": "@{operationId=PatchLolLobbyTeamBuilderChampSelectV1SessionMySelection; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/my-selection/reroll": {
      "post": "@{operationId=PostLolLobbyTeamBuilderChampSelectV1SessionMySelectionReroll; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/obfuscated-summoner-ids": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1SessionObfuscatedSummonerIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/swaps": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1SessionSwaps; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/swaps/{id}": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1SessionSwapsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/swaps/{id}/accept": {
      "post": "@{operationId=PostLolLobbyTeamBuilderChampSelectV1SessionSwapsByIdAccept; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/swaps/{id}/cancel": {
      "post": "@{operationId=PostLolLobbyTeamBuilderChampSelectV1SessionSwapsByIdCancel; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/swaps/{id}/decline": {
      "post": "@{operationId=PostLolLobbyTeamBuilderChampSelectV1SessionSwapsByIdDecline; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/swaps/{id}/request": {
      "post": "@{operationId=PostLolLobbyTeamBuilderChampSelectV1SessionSwapsByIdRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/timer": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1SessionTimer; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/trades": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1SessionTrades; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/trades/{id}": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1SessionTradesById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/trades/{id}/accept": {
      "post": "@{operationId=PostLolLobbyTeamBuilderChampSelectV1SessionTradesByIdAccept; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/trades/{id}/cancel": {
      "post": "@{operationId=PostLolLobbyTeamBuilderChampSelectV1SessionTradesByIdCancel; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/trades/{id}/decline": {
      "post": "@{operationId=PostLolLobbyTeamBuilderChampSelectV1SessionTradesByIdDecline; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/session/trades/{id}/request": {
      "post": "@{operationId=PostLolLobbyTeamBuilderChampSelectV1SessionTradesByIdRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/simple-inventory": {
      "post": "@{operationId=PostLolLobbyTeamBuilderChampSelectV1SimpleInventory; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/team-boost": {
      "get": "@{operationId=GetLolLobbyTeamBuilderChampSelectV1TeamBoost; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/champ-select/v1/team-boost/purchase": {
      "post": "@{operationId=PostLolLobbyTeamBuilderChampSelectV1TeamBoostPurchase; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/v1/matchmaking": {
      "get": "@{operationId=GetLolLobbyTeamBuilderV1Matchmaking; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/v1/ready-check/accept": {
      "post": "@{operationId=PostLolLobbyTeamBuilderV1ReadyCheckAccept; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby-team-builder/v1/ready-check/decline": {
      "post": "@{operationId=PostLolLobbyTeamBuilderV1ReadyCheckDecline; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/autofill-displayed": {
      "get": "@{operationId=GetLolLobbyV1AutofillDisplayed; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolLobbyV1AutofillDisplayed; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/clash": {
      "delete": "@{operationId=DeleteLolLobbyV1Clash; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolLobbyV1Clash; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/custom-games": {
      "get": "@{operationId=GetLolLobbyV1CustomGames; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/custom-games/refresh": {
      "post": "@{operationId=PostLolLobbyV1CustomGamesRefresh; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/custom-games/{id}": {
      "get": "@{operationId=GetLolLobbyV1CustomGamesById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/custom-games/{id}/join": {
      "post": "@{operationId=PostLolLobbyV1CustomGamesByIdJoin; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/lobby/availability": {
      "get": "@{operationId=GetLolLobbyV1LobbyAvailability; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/lobby/countdown": {
      "get": "@{operationId=GetLolLobbyV1LobbyCountdown; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/lobby/custom/bots": {
      "post": "@{operationId=PostLolLobbyV1LobbyCustomBots; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/lobby/custom/bots/{summonerInternalName}": {
      "delete": "@{operationId=DeleteLolLobbyV1LobbyCustomBotsBySummonerInternalName; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolLobbyV1LobbyCustomBotsBySummonerInternalName; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/lobby/custom/cancel-champ-select": {
      "post": "@{operationId=PostLolLobbyV1LobbyCustomCancelChampSelect; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/lobby/custom/start-champ-select": {
      "post": "@{operationId=PostLolLobbyV1LobbyCustomStartChampSelect; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/lobby/custom/switch-teams": {
      "post": "@{operationId=PostLolLobbyV1LobbyCustomSwitchTeams; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/lobby/invitations": {
      "get": "@{operationId=GetLolLobbyV1LobbyInvitations; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolLobbyV1LobbyInvitations; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/lobby/invitations/{id}": {
      "get": "@{operationId=GetLolLobbyV1LobbyInvitationsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/lobby/members/localMember/player-slots": {
      "put": "@{operationId=PutLolLobbyV1LobbyMembersLocalMemberPlayerSlots; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/lobby/members/localMember/position-preferences": {
      "put": "@{operationId=PutLolLobbyV1LobbyMembersLocalMemberPositionPreferences; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/parties/active": {
      "put": "@{operationId=PutLolLobbyV1PartiesActive; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/parties/gamemode": {
      "get": "@{operationId=GetLolLobbyV1PartiesGamemode; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/parties/metadata": {
      "put": "@{operationId=PutLolLobbyV1PartiesMetadata; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/parties/player": {
      "get": "@{operationId=GetLolLobbyV1PartiesPlayer; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/parties/queue": {
      "put": "@{operationId=PutLolLobbyV1PartiesQueue; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/parties/ready": {
      "put": "@{operationId=PutLolLobbyV1PartiesReady; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/parties/{partyId}/members/{puuid}/role": {
      "put": "@{operationId=PutLolLobbyV1PartiesByPartyIdMembersByPuuidRole; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/party-rewards": {
      "get": "@{operationId=GetLolLobbyV1PartyRewards; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v1/tournaments/{id}/join": {
      "post": "@{operationId=PostLolLobbyV1TournamentsByIdJoin; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/comms/members": {
      "get": "@{operationId=GetLolLobbyV2CommsMembers; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/comms/token": {
      "get": "@{operationId=GetLolLobbyV2CommsToken; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/eligibility/game-select-eligibility-hash": {
      "get": "@{operationId=GetLolLobbyV2EligibilityGameSelectEligibilityHash; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/eligibility/initial-configuration-complete": {
      "get": "@{operationId=GetLolLobbyV2EligibilityInitialConfigurationComplete; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/eligibility/party": {
      "post": "@{operationId=PostLolLobbyV2EligibilityParty; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/eligibility/self": {
      "post": "@{operationId=PostLolLobbyV2EligibilitySelf; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/eog-invitations": {
      "post": "@{operationId=PostLolLobbyV2EogInvitations; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/lobby": {
      "delete": "@{operationId=DeleteLolLobbyV2Lobby; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolLobbyV2Lobby; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolLobbyV2Lobby; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/lobby/custom/available-bots": {
      "get": "@{operationId=GetLolLobbyV2LobbyCustomAvailableBots; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/lobby/custom/bots-enabled": {
      "get": "@{operationId=GetLolLobbyV2LobbyCustomBotsEnabled; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/lobby/invitations": {
      "get": "@{operationId=GetLolLobbyV2LobbyInvitations; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolLobbyV2LobbyInvitations; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/lobby/matchmaking/search": {
      "delete": "@{operationId=DeleteLolLobbyV2LobbyMatchmakingSearch; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolLobbyV2LobbyMatchmakingSearch; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/lobby/matchmaking/search-state": {
      "get": "@{operationId=GetLolLobbyV2LobbyMatchmakingSearchState; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/lobby/members": {
      "get": "@{operationId=GetLolLobbyV2LobbyMembers; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/lobby/members/localMember/position-preferences": {
      "put": "@{operationId=PutLolLobbyV2LobbyMembersLocalMemberPositionPreferences; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/lobby/members/{summonerId}/grant-invite": {
      "post": "@{operationId=PostLolLobbyV2LobbyMembersBySummonerIdGrantInvite; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/lobby/members/{summonerId}/kick": {
      "post": "@{operationId=PostLolLobbyV2LobbyMembersBySummonerIdKick; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/lobby/members/{summonerId}/promote": {
      "post": "@{operationId=PostLolLobbyV2LobbyMembersBySummonerIdPromote; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/lobby/members/{summonerId}/revoke-invite": {
      "post": "@{operationId=PostLolLobbyV2LobbyMembersBySummonerIdRevokeInvite; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/lobby/partyType": {
      "put": "@{operationId=PutLolLobbyV2LobbyPartyType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/lobby/team/{team}": {
      "post": "@{operationId=PostLolLobbyV2LobbyTeamByTeam; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/matchmaking/quick-search": {
      "post": "@{operationId=PostLolLobbyV2MatchmakingQuickSearch; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/notifications": {
      "get": "@{operationId=GetLolLobbyV2Notifications; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolLobbyV2Notifications; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/notifications/{notificationId}": {
      "delete": "@{operationId=DeleteLolLobbyV2NotificationsByNotificationId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/parties/overrides/EnabledForTeamBuilderQueues": {
      "post": "@{operationId=PostLolLobbyV2PartiesOverridesEnabledForTeamBuilderQueues; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/party-active": {
      "get": "@{operationId=GetLolLobbyV2PartyActive; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/party/eog-status": {
      "get": "@{operationId=GetLolLobbyV2PartyEogStatus; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/party/{partyId}/join": {
      "post": "@{operationId=PostLolLobbyV2PartyByPartyIdJoin; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/play-again": {
      "post": "@{operationId=PostLolLobbyV2PlayAgain; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/play-again-decline": {
      "post": "@{operationId=PostLolLobbyV2PlayAgainDecline; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/received-invitations": {
      "get": "@{operationId=GetLolLobbyV2ReceivedInvitations; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/received-invitations/{invitationId}/accept": {
      "post": "@{operationId=PostLolLobbyV2ReceivedInvitationsByInvitationIdAccept; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/received-invitations/{invitationId}/decline": {
      "post": "@{operationId=PostLolLobbyV2ReceivedInvitationsByInvitationIdDecline; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-lobby/v2/registration-status": {
      "get": "@{operationId=GetLolLobbyV2RegistrationStatus; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v1/account-state": {
      "get": "@{operationId=GetLolLoginV1AccountState; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolLoginV1AccountState; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v1/change-summoner-name": {
      "post": "@{operationId=PostLolLoginV1ChangeSummonerName; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v1/delete-rso-on-close": {
      "post": "@{operationId=PostLolLoginV1DeleteRsoOnClose; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v1/leagueSessionStatus": {
      "post": "@{operationId=PostLolLoginV1LeagueSessionStatus; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v1/login-connection-state": {
      "get": "@{operationId=GetLolLoginV1LoginConnectionState; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v1/login-data-packet": {
      "get": "@{operationId=GetLolLoginV1LoginDataPacket; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v1/login-in-game-creds": {
      "get": "@{operationId=GetLolLoginV1LoginInGameCreds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v1/login-platform-credentials": {
      "get": "@{operationId=GetLolLoginV1LoginPlatformCredentials; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v1/login-queue-state": {
      "get": "@{operationId=GetLolLoginV1LoginQueueState; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v1/service-proxy-async-requests/{serviceName}/{methodName}": {
      "delete": "@{operationId=DeleteLolLoginV1ServiceProxyAsyncRequestsByServiceNameByMethodName; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolLoginV1ServiceProxyAsyncRequestsByServiceNameByMethodName; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v1/service-proxy-uuid-requests": {
      "post": "@{operationId=PostLolLoginV1ServiceProxyUuidRequests; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v1/session": {
      "delete": "@{operationId=DeleteLolLoginV1Session; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolLoginV1Session; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolLoginV1Session; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v1/session/invoke": {
      "post": "@{operationId=PostLolLoginV1SessionInvoke; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v1/shutdown-locks/{lockName}": {
      "delete": "@{operationId=DeleteLolLoginV1ShutdownLocksByLockName; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolLoginV1ShutdownLocksByLockName; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v1/summoner-session": {
      "post": "@{operationId=PostLolLoginV1SummonerSession; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v1/summoner-session-failed": {
      "post": "@{operationId=PostLolLoginV1SummonerSessionFailed; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v1/wallet": {
      "get": "@{operationId=GetLolLoginV1Wallet; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-login/v2/league-session-init-token": {
      "get": "@{operationId=GetLolLoginV2LeagueSessionInitToken; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/craft/mass": {
      "post": "@{operationId=PostLolLootV1CraftMass; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/currency-configuration": {
      "get": "@{operationId=GetLolLootV1CurrencyConfiguration; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/disenchant-recipes": {
      "get": "@{operationId=GetLolLootV1DisenchantRecipes; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/enabled": {
      "get": "@{operationId=GetLolLootV1Enabled; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/loot-grants": {
      "get": "@{operationId=GetLolLootV1LootGrants; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/loot-grants/{id}": {
      "delete": "@{operationId=DeleteLolLootV1LootGrantsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/loot-items": {
      "get": "@{operationId=GetLolLootV1LootItems; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/loot-odds/evaluateQuery": {
      "put": "@{operationId=PutLolLootV1LootOddsEvaluateQuery; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/loot-odds/{recipeName}": {
      "get": "@{operationId=GetLolLootV1LootOddsByRecipeName; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/mass-disenchant/configuration": {
      "get": "@{operationId=GetLolLootV1MassDisenchantConfiguration; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/milestones": {
      "get": "@{operationId=GetLolLootV1Milestones; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/milestones/counters": {
      "get": "@{operationId=GetLolLootV1MilestonesCounters; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/milestones/items": {
      "get": "@{operationId=GetLolLootV1MilestonesItems; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/milestones/{lootMilestonesId}": {
      "get": "@{operationId=GetLolLootV1MilestonesByLootMilestonesId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/milestones/{lootMilestonesId}/claim": {
      "post": "@{operationId=PostLolLootV1MilestonesByLootMilestonesIdClaim; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/milestones/{lootMilestonesId}/claimProgress": {
      "get": "@{operationId=GetLolLootV1MilestonesByLootMilestonesIdClaimProgress; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/milestones/{lootMilestonesId}/counter": {
      "get": "@{operationId=GetLolLootV1MilestonesByLootMilestonesIdCounter; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/new-player-check-done": {
      "get": "@{operationId=GetLolLootV1NewPlayerCheckDone; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/new-player-check-done/{newValue}": {
      "post": "@{operationId=PostLolLootV1NewPlayerCheckDoneByNewValue; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/player-display-categories": {
      "get": "@{operationId=GetLolLootV1PlayerDisplayCategories; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/player-loot": {
      "get": "@{operationId=GetLolLootV1PlayerLoot; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/player-loot-map": {
      "get": "@{operationId=GetLolLootV1PlayerLootMap; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/player-loot-notifications": {
      "get": "@{operationId=GetLolLootV1PlayerLootNotifications; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/player-loot-notifications/{id}/acknowledge": {
      "post": "@{operationId=PostLolLootV1PlayerLootNotificationsByIdAcknowledge; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/player-loot/{lootId}": {
      "get": "@{operationId=GetLolLootV1PlayerLootByLootId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/player-loot/{lootId}/context-menu": {
      "get": "@{operationId=GetLolLootV1PlayerLootByLootIdContextMenu; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolLootV1PlayerLootByLootIdContextMenu; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/player-loot/{lootId}/new-notification": {
      "delete": "@{operationId=DeleteLolLootV1PlayerLootByLootIdNewNotification; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/player-loot/{lootName}/redeem": {
      "post": "@{operationId=PostLolLootV1PlayerLootByLootNameRedeem; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/ready": {
      "get": "@{operationId=GetLolLootV1Ready; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/recipes/configuration": {
      "get": "@{operationId=GetLolLootV1RecipesConfiguration; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/recipes/initial-item/{lootId}": {
      "get": "@{operationId=GetLolLootV1RecipesInitialItemByLootId; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolLootV1RecipesInitialItemByLootId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/recipes/{recipeName}/craft": {
      "post": "@{operationId=PostLolLootV1RecipesByRecipeNameCraft; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v1/refresh": {
      "post": "@{operationId=PostLolLootV1Refresh; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loot/v2/player-loot-map": {
      "get": "@{operationId=GetLolLootV2PlayerLootMap; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loyalty/v1/status-notification": {
      "get": "@{operationId=GetLolLoyaltyV1StatusNotification; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-loyalty/v1/updateLoyaltyInventory": {
      "post": "@{operationId=PostLolLoyaltyV1UpdateLoyaltyInventory; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-maps/v1/map": {
      "post": "@{operationId=PostLolMapsV1Map; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-maps/v1/map/{id}": {
      "get": "@{operationId=GetLolMapsV1MapById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-maps/v1/maps": {
      "get": "@{operationId=GetLolMapsV1Maps; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-maps/v2/map/{id}/{gameMode}": {
      "get": "@{operationId=GetLolMapsV2MapByIdByGameMode; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-maps/v2/map/{id}/{gameMode}/{gameMutator}": {
      "get": "@{operationId=GetLolMapsV2MapByIdByGameModeByGameMutator; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-maps/v2/maps": {
      "get": "@{operationId=GetLolMapsV2Maps; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-marketing-preferences/v1/partition/{partitionKey}": {
      "get": "@{operationId=GetLolMarketingPreferencesV1PartitionByPartitionKey; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolMarketingPreferencesV1PartitionByPartitionKey; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-marketing-preferences/v1/ready": {
      "get": "@{operationId=GetLolMarketingPreferencesV1Ready; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-match-history/v1/acs-endpoint-override": {
      "post": "@{operationId=PostLolMatchHistoryV1AcsEndpointOverride; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-match-history/v1/delta": {
      "get": "@{operationId=GetLolMatchHistoryV1Delta; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-match-history/v1/game-timelines/{gameId}": {
      "get": "@{operationId=GetLolMatchHistoryV1GameTimelinesByGameId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-match-history/v1/games/{gameId}": {
      "get": "@{operationId=GetLolMatchHistoryV1GamesByGameId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-match-history/v1/products/lol/current-summoner/matches": {
      "get": "@{operationId=GetLolMatchHistoryV1ProductsLolCurrentSummonerMatches; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-match-history/v1/products/lol/{puuid}/matches": {
      "get": "@{operationId=GetLolMatchHistoryV1ProductsLolByPuuidMatches; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-match-history/v1/products/tft/{puuid}/matches": {
      "get": "@{operationId=GetLolMatchHistoryV1ProductsTftByPuuidMatches; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-match-history/v1/recently-played-summoners": {
      "get": "@{operationId=GetLolMatchHistoryV1RecentlyPlayedSummoners; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-match-history/v1/web-url": {
      "get": "@{operationId=GetLolMatchHistoryV1WebUrl; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-match-history/v3/matchlist/account/{accountId}": {
      "get": "@{operationId=GetLolMatchHistoryV3MatchlistAccountByAccountId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-matchmaking/v1/ready-check": {
      "get": "@{operationId=GetLolMatchmakingV1ReadyCheck; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-matchmaking/v1/ready-check/accept": {
      "post": "@{operationId=PostLolMatchmakingV1ReadyCheckAccept; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-matchmaking/v1/ready-check/decline": {
      "post": "@{operationId=PostLolMatchmakingV1ReadyCheckDecline; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-matchmaking/v1/search": {
      "delete": "@{operationId=DeleteLolMatchmakingV1Search; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolMatchmakingV1Search; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolMatchmakingV1Search; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolMatchmakingV1Search; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-matchmaking/v1/search/errors": {
      "get": "@{operationId=GetLolMatchmakingV1SearchErrors; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-matchmaking/v1/search/errors/{id}": {
      "get": "@{operationId=GetLolMatchmakingV1SearchErrorsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-missions/v1/data": {
      "get": "@{operationId=GetLolMissionsV1Data; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-missions/v1/force": {
      "post": "@{operationId=PostLolMissionsV1Force; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-missions/v1/missions": {
      "get": "@{operationId=GetLolMissionsV1Missions; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-missions/v1/player": {
      "put": "@{operationId=PutLolMissionsV1Player; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-missions/v1/player/{missionId}": {
      "put": "@{operationId=PutLolMissionsV1PlayerByMissionId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-missions/v1/series": {
      "get": "@{operationId=GetLolMissionsV1Series; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-missions/v2/player/opt": {
      "put": "@{operationId=PutLolMissionsV2PlayerOpt; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-npe-rewards/v1/challenges/opt": {
      "post": "@{operationId=PostLolNpeRewardsV1ChallengesOpt; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-npe-rewards/v1/challenges/progress": {
      "get": "@{operationId=GetLolNpeRewardsV1ChallengesProgress; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-npe-rewards/v1/level-rewards": {
      "get": "@{operationId=GetLolNpeRewardsV1LevelRewards; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-npe-rewards/v1/level-rewards/state": {
      "get": "@{operationId=GetLolNpeRewardsV1LevelRewardsState; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-npe-rewards/v1/login-rewards": {
      "get": "@{operationId=GetLolNpeRewardsV1LoginRewards; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-npe-rewards/v1/login-rewards/state": {
      "get": "@{operationId=GetLolNpeRewardsV1LoginRewardsState; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-npe-tutorial-path/v1/rewards/champ": {
      "get": "@{operationId=GetLolNpeTutorialPathV1RewardsChamp; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-npe-tutorial-path/v1/settings": {
      "get": "@{operationId=GetLolNpeTutorialPathV1Settings; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolNpeTutorialPathV1Settings; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-npe-tutorial-path/v1/tutorials": {
      "get": "@{operationId=GetLolNpeTutorialPathV1Tutorials; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-npe-tutorial-path/v1/tutorials/init": {
      "patch": "@{operationId=PatchLolNpeTutorialPathV1TutorialsInit; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-npe-tutorial-path/v1/tutorials/{tutorialId}/view": {
      "put": "@{operationId=PutLolNpeTutorialPathV1TutorialsByTutorialIdView; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-patch/v1/checking-enabled": {
      "get": "@{operationId=GetLolPatchV1CheckingEnabled; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-patch/v1/environment": {
      "get": "@{operationId=GetLolPatchV1Environment; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-patch/v1/game-patch-url": {
      "put": "@{operationId=PutLolPatchV1GamePatchUrl; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-patch/v1/game-version": {
      "get": "@{operationId=GetLolPatchV1GameVersion; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-patch/v1/notifications": {
      "get": "@{operationId=GetLolPatchV1Notifications; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-patch/v1/notifications/{id}": {
      "delete": "@{operationId=DeleteLolPatchV1NotificationsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-patch/v1/products/league_of_legends/detect-corruption-request": {
      "post": "@{operationId=PostLolPatchV1ProductsLeagueOfLegendsDetectCorruptionRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-patch/v1/products/league_of_legends/install-location": {
      "get": "@{operationId=GetLolPatchV1ProductsLeagueOfLegendsInstallLocation; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-patch/v1/products/league_of_legends/partial-repair-request": {
      "post": "@{operationId=PostLolPatchV1ProductsLeagueOfLegendsPartialRepairRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-patch/v1/products/league_of_legends/start-checking-request": {
      "post": "@{operationId=PostLolPatchV1ProductsLeagueOfLegendsStartCheckingRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-patch/v1/products/league_of_legends/start-patching-request": {
      "post": "@{operationId=PostLolPatchV1ProductsLeagueOfLegendsStartPatchingRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-patch/v1/products/league_of_legends/state": {
      "get": "@{operationId=GetLolPatchV1ProductsLeagueOfLegendsState; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-patch/v1/products/league_of_legends/stop-checking-request": {
      "post": "@{operationId=PostLolPatchV1ProductsLeagueOfLegendsStopCheckingRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-patch/v1/products/league_of_legends/stop-patching-request": {
      "post": "@{operationId=PostLolPatchV1ProductsLeagueOfLegendsStopPatchingRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-patch/v1/products/league_of_legends/supported-game-releases": {
      "get": "@{operationId=GetLolPatchV1ProductsLeagueOfLegendsSupportedGameReleases; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-patch/v1/status": {
      "get": "@{operationId=GetLolPatchV1Status; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-patch/v1/ux": {
      "put": "@{operationId=PutLolPatchV1Ux; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/currentpage": {
      "get": "@{operationId=GetLolPerksV1Currentpage; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolPerksV1Currentpage; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/inventory": {
      "get": "@{operationId=GetLolPerksV1Inventory; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/pages": {
      "delete": "@{operationId=DeleteLolPerksV1Pages; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolPerksV1Pages; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolPerksV1Pages; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/pages/validate": {
      "put": "@{operationId=PutLolPerksV1PagesValidate; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/pages/{id}": {
      "delete": "@{operationId=DeleteLolPerksV1PagesById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolPerksV1PagesById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolPerksV1PagesById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/pages/{id}/auto-modified-selections": {
      "delete": "@{operationId=DeleteLolPerksV1PagesByIdAutoModifiedSelections; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/perks": {
      "get": "@{operationId=GetLolPerksV1Perks; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/perks/ack-gameplay-updated": {
      "put": "@{operationId=PutLolPerksV1PerksAckGameplayUpdated; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/perks/disabled": {
      "get": "@{operationId=GetLolPerksV1PerksDisabled; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/perks/gameplay-updated": {
      "get": "@{operationId=GetLolPerksV1PerksGameplayUpdated; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/recommended-pages-position/champion/{championId}": {
      "get": "@{operationId=GetLolPerksV1RecommendedPagesPositionChampionByChampionId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/recommended-pages-position/champion/{championId}/position/{position}": {
      "post": "@{operationId=PostLolPerksV1RecommendedPagesPositionChampionByChampionIdPositionByPosition; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/recommended-pages/champion/{championId}/position/{position}/map/{mapId}": {
      "get": "@{operationId=GetLolPerksV1RecommendedPagesChampionByChampionIdPositionByPositionMapByMapId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/rune-recommender-auto-select": {
      "get": "@{operationId=GetLolPerksV1RuneRecommenderAutoSelect; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolPerksV1RuneRecommenderAutoSelect; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/settings": {
      "get": "@{operationId=GetLolPerksV1Settings; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolPerksV1Settings; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/show-auto-modified-pages-notification": {
      "get": "@{operationId=GetLolPerksV1ShowAutoModifiedPagesNotification; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolPerksV1ShowAutoModifiedPagesNotification; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/styles": {
      "get": "@{operationId=GetLolPerksV1Styles; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-perks/v1/update-page-order": {
      "post": "@{operationId=PostLolPerksV1UpdatePageOrder; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-pft/v2/events": {
      "post": "@{operationId=PostLolPftV2Events; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-pft/v2/survey": {
      "get": "@{operationId=GetLolPftV2Survey; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolPftV2Survey; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-platform-config/v1/initial-configuration-complete": {
      "get": "@{operationId=GetLolPlatformConfigV1InitialConfigurationComplete; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-platform-config/v1/namespaces": {
      "get": "@{operationId=GetLolPlatformConfigV1Namespaces; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-platform-config/v1/namespaces/{ns}": {
      "get": "@{operationId=GetLolPlatformConfigV1NamespacesByNs; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-platform-config/v1/namespaces/{ns}/{key}": {
      "get": "@{operationId=GetLolPlatformConfigV1NamespacesByNsByKey; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-behavior/v1/ban": {
      "get": "@{operationId=GetLolPlayerBehaviorV1Ban; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-behavior/v1/chat-restriction": {
      "get": "@{operationId=GetLolPlayerBehaviorV1ChatRestriction; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-behavior/v1/code-of-conduct-notification": {
      "delete": "@{operationId=DeleteLolPlayerBehaviorV1CodeOfConductNotification; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolPlayerBehaviorV1CodeOfConductNotification; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-behavior/v1/config": {
      "get": "@{operationId=GetLolPlayerBehaviorV1Config; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-behavior/v1/ranked-restriction": {
      "get": "@{operationId=GetLolPlayerBehaviorV1RankedRestriction; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-behavior/v1/reform-card": {
      "get": "@{operationId=GetLolPlayerBehaviorV1ReformCard; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-behavior/v1/reporter-feedback": {
      "get": "@{operationId=GetLolPlayerBehaviorV1ReporterFeedback; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-behavior/v1/reporter-feedback/{id}": {
      "delete": "@{operationId=DeleteLolPlayerBehaviorV1ReporterFeedbackById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolPlayerBehaviorV1ReporterFeedbackById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-behavior/v2/reform-card": {
      "get": "@{operationId=GetLolPlayerBehaviorV2ReformCard; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-behavior/v2/reporter-feedback": {
      "get": "@{operationId=GetLolPlayerBehaviorV2ReporterFeedback; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-behavior/v2/reporter-feedback/{key}": {
      "post": "@{operationId=PostLolPlayerBehaviorV2ReporterFeedbackByKey; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-behavior/v3/reform-card/{id}": {
      "put": "@{operationId=PutLolPlayerBehaviorV3ReformCardById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-behavior/v3/reform-cards": {
      "get": "@{operationId=GetLolPlayerBehaviorV3ReformCards; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-level-up/v1/level-up": {
      "get": "@{operationId=GetLolPlayerLevelUpV1LevelUp; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-level-up/v1/level-up-notifications/{pluginName}": {
      "get": "@{operationId=GetLolPlayerLevelUpV1LevelUpNotificationsByPluginName; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolPlayerLevelUpV1LevelUpNotificationsByPluginName; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-messaging/v1/celebration/notification": {
      "get": "@{operationId=GetLolPlayerMessagingV1CelebrationNotification; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-messaging/v1/celebration/notification/{id}/acknowledge": {
      "delete": "@{operationId=DeleteLolPlayerMessagingV1CelebrationNotificationByIdAcknowledge; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-messaging/v1/notification": {
      "get": "@{operationId=GetLolPlayerMessagingV1Notification; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-messaging/v1/notification/{id}/acknowledge": {
      "delete": "@{operationId=DeleteLolPlayerMessagingV1NotificationByIdAcknowledge; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-preferences/v1/player-preferences-endpoint-override": {
      "post": "@{operationId=PostLolPlayerPreferencesV1PlayerPreferencesEndpointOverride; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-preferences/v1/player-preferences-ready": {
      "get": "@{operationId=GetLolPlayerPreferencesV1PlayerPreferencesReady; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-preferences/v1/preference": {
      "put": "@{operationId=PutLolPlayerPreferencesV1Preference; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-preferences/v1/preference/{type}": {
      "get": "@{operationId=GetLolPlayerPreferencesV1PreferenceByType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-report-sender/v1/champ-select-reports": {
      "post": "@{operationId=PostLolPlayerReportSenderV1ChampSelectReports; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-report-sender/v1/end-of-game-reports": {
      "post": "@{operationId=PostLolPlayerReportSenderV1EndOfGameReports; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-report-sender/v1/in-game-reports": {
      "get": "@{operationId=GetLolPlayerReportSenderV1InGameReports; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolPlayerReportSenderV1InGameReports; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-report-sender/v1/match-history-reports": {
      "post": "@{operationId=PostLolPlayerReportSenderV1MatchHistoryReports; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-player-report-sender/v1/reported-players/gameId/{gameId}": {
      "delete": "@{operationId=DeleteLolPlayerReportSenderV1ReportedPlayersGameIdByGameId; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolPlayerReportSenderV1ReportedPlayersGameIdByGameId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-pre-end-of-game/v1/complete/{sequenceEventName}": {
      "post": "@{operationId=PostLolPreEndOfGameV1CompleteBySequenceEventName; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-pre-end-of-game/v1/currentSequenceEvent": {
      "get": "@{operationId=GetLolPreEndOfGameV1CurrentSequenceEvent; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-pre-end-of-game/v1/registration/{sequenceEventName}": {
      "delete": "@{operationId=DeleteLolPreEndOfGameV1RegistrationBySequenceEventName; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-pre-end-of-game/v1/registration/{sequenceEventName}/{priority}": {
      "post": "@{operationId=PostLolPreEndOfGameV1RegistrationBySequenceEventNameByPriority; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/availability": {
      "get": "@{operationId=GetLolPremadeVoiceV1Availability; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/capturedevices": {
      "get": "@{operationId=GetLolPremadeVoiceV1Capturedevices; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolPremadeVoiceV1Capturedevices; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/first-experience": {
      "get": "@{operationId=GetLolPremadeVoiceV1FirstExperience; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/first-experience/game": {
      "post": "@{operationId=PostLolPremadeVoiceV1FirstExperienceGame; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/first-experience/lcu": {
      "post": "@{operationId=PostLolPremadeVoiceV1FirstExperienceLcu; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/first-experience/reset": {
      "post": "@{operationId=PostLolPremadeVoiceV1FirstExperienceReset; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/gameClientUpdatedPTTKey": {
      "post": "@{operationId=PostLolPremadeVoiceV1GameClientUpdatedPTTKey; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/mic-test": {
      "delete": "@{operationId=DeleteLolPremadeVoiceV1MicTest; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolPremadeVoiceV1MicTest; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolPremadeVoiceV1MicTest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/participant-records": {
      "get": "@{operationId=GetLolPremadeVoiceV1ParticipantRecords; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/participants": {
      "get": "@{operationId=GetLolPremadeVoiceV1Participants; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/participants/{puuid}/mute": {
      "put": "@{operationId=PutLolPremadeVoiceV1ParticipantsByPuuidMute; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/participants/{puuid}/volume": {
      "put": "@{operationId=PutLolPremadeVoiceV1ParticipantsByPuuidVolume; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/push-to-talk/check-available": {
      "post": "@{operationId=PostLolPremadeVoiceV1PushToTalkCheckAvailable; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/self/activationSensitivity": {
      "put": "@{operationId=PutLolPremadeVoiceV1SelfActivationSensitivity; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/self/inputMode": {
      "put": "@{operationId=PutLolPremadeVoiceV1SelfInputMode; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/self/micLevel": {
      "put": "@{operationId=PutLolPremadeVoiceV1SelfMicLevel; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/self/mute": {
      "put": "@{operationId=PutLolPremadeVoiceV1SelfMute; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/session": {
      "delete": "@{operationId=DeleteLolPremadeVoiceV1Session; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolPremadeVoiceV1Session; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/settings": {
      "get": "@{operationId=GetLolPremadeVoiceV1Settings; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-premade-voice/v1/settings/reset": {
      "post": "@{operationId=PostLolPremadeVoiceV1SettingsReset; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-progression/v1/groups/configuration": {
      "get": "@{operationId=GetLolProgressionV1GroupsConfiguration; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-progression/v1/groups/{groupId}/configuration": {
      "get": "@{operationId=GetLolProgressionV1GroupsByGroupIdConfiguration; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-progression/v1/groups/{groupId}/instanceData": {
      "get": "@{operationId=GetLolProgressionV1GroupsByGroupIdInstanceData; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-progression/v1/ready": {
      "get": "@{operationId=GetLolProgressionV1Ready; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-publishing-content/v1/listeners/allow-list/{region}": {
      "get": "@{operationId=GetLolPublishingContentV1ListenersAllowListByRegion; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-publishing-content/v1/listeners/client-data": {
      "get": "@{operationId=GetLolPublishingContentV1ListenersClientData; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-publishing-content/v1/listeners/pubhub-config": {
      "get": "@{operationId=GetLolPublishingContentV1ListenersPubhubConfig; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-publishing-content/v1/ready": {
      "get": "@{operationId=GetLolPublishingContentV1Ready; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-publishing-content/v1/settings": {
      "get": "@{operationId=GetLolPublishingContentV1Settings; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-publishing-content/v1/tft-hub-cards": {
      "get": "@{operationId=GetLolPublishingContentV1TftHubCards; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-purchase-widget/v1/configuration": {
      "get": "@{operationId=GetLolPurchaseWidgetV1Configuration; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-purchase-widget/v1/order-notifications": {
      "get": "@{operationId=GetLolPurchaseWidgetV1OrderNotifications; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-purchase-widget/v1/purchasable-item": {
      "get": "@{operationId=GetLolPurchaseWidgetV1PurchasableItem; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-purchase-widget/v1/purchasable-items/{inventoryType}": {
      "post": "@{operationId=PostLolPurchaseWidgetV1PurchasableItemsByInventoryType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-purchase-widget/v2/purchaseItems": {
      "post": "@{operationId=PostLolPurchaseWidgetV2PurchaseItems; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-purchase-widget/v3/base-skin-line-data/{offerId}": {
      "get": "@{operationId=GetLolPurchaseWidgetV3BaseSkinLineDataByOfferId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-purchase-widget/v3/purchase-offer-order-statuses": {
      "get": "@{operationId=GetLolPurchaseWidgetV3PurchaseOfferOrderStatuses; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-purchase-widget/v3/purchaseOffer": {
      "post": "@{operationId=PostLolPurchaseWidgetV3PurchaseOffer; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-purchase-widget/v3/validateOffer": {
      "post": "@{operationId=PostLolPurchaseWidgetV3ValidateOffer; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v1/apex-leagues/{queueType}/{tier}": {
      "get": "@{operationId=GetLolRankedV1ApexLeaguesByQueueTypeByTier; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v1/challenger-ladders-enabled": {
      "get": "@{operationId=GetLolRankedV1ChallengerLaddersEnabled; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v1/current-lp-change-notification": {
      "get": "@{operationId=GetLolRankedV1CurrentLpChangeNotification; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v1/current-ranked-stats": {
      "get": "@{operationId=GetLolRankedV1CurrentRankedStats; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v1/eligibleTiers/queueType/{queueType}": {
      "get": "@{operationId=GetLolRankedV1EligibleTiersQueueTypeByQueueType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v1/eos-notifications": {
      "get": "@{operationId=GetLolRankedV1EosNotifications; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v1/eos-notifications/{id}/acknowledge": {
      "post": "@{operationId=PostLolRankedV1EosNotificationsByIdAcknowledge; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v1/eos-rewards": {
      "get": "@{operationId=GetLolRankedV1EosRewards; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v1/league-ladders/{puuid}": {
      "get": "@{operationId=GetLolRankedV1LeagueLaddersByPuuid; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v1/notifications": {
      "get": "@{operationId=GetLolRankedV1Notifications; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v1/notifications/{id}/acknowledge": {
      "post": "@{operationId=PostLolRankedV1NotificationsByIdAcknowledge; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v1/ranked-stats/{puuid}": {
      "get": "@{operationId=GetLolRankedV1RankedStatsByPuuid; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v1/rated-ladder/{queueType}": {
      "get": "@{operationId=GetLolRankedV1RatedLadderByQueueType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v1/signed-ranked-stats": {
      "get": "@{operationId=GetLolRankedV1SignedRankedStats; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v1/social-leaderboard-ranked-queue-stats-for-puuids": {
      "get": "@{operationId=GetLolRankedV1SocialLeaderboardRankedQueueStatsForPuuids; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v1/splits-config": {
      "get": "@{operationId=GetLolRankedV1SplitsConfig; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v1/top-rated-ladders-enabled": {
      "get": "@{operationId=GetLolRankedV1TopRatedLaddersEnabled; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-ranked/v2/tiers": {
      "get": "@{operationId=GetLolRankedV2Tiers; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-regalia/v2/config": {
      "get": "@{operationId=GetLolRegaliaV2Config; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-regalia/v2/current-summoner/regalia": {
      "get": "@{operationId=GetLolRegaliaV2CurrentSummonerRegalia; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolRegaliaV2CurrentSummonerRegalia; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-regalia/v2/summoners/{summonerId}/queues/{queue}/positions/{position}/regalia": {
      "get": "@{operationId=GetLolRegaliaV2SummonersBySummonerIdQueuesByQueuePositionsByPositionRegalia; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-regalia/v2/summoners/{summonerId}/queues/{queue}/regalia": {
      "get": "@{operationId=GetLolRegaliaV2SummonersBySummonerIdQueuesByQueueRegalia; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-regalia/v2/summoners/{summonerId}/regalia": {
      "get": "@{operationId=GetLolRegaliaV2SummonersBySummonerIdRegalia; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-regalia/v2/summoners/{summonerId}/regalia/async": {
      "get": "@{operationId=GetLolRegaliaV2SummonersBySummonerIdRegaliaAsync; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-regalia/v3/inventory/{inventoryType}": {
      "get": "@{operationId=GetLolRegaliaV3InventoryByInventoryType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-regalia/v3/summoners/{summonerId}/regalia": {
      "get": "@{operationId=GetLolRegaliaV3SummonersBySummonerIdRegalia; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-replays/v1/configuration": {
      "get": "@{operationId=GetLolReplaysV1Configuration; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-replays/v1/metadata/{gameId}": {
      "get": "@{operationId=GetLolReplaysV1MetadataByGameId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-replays/v1/metadata/{gameId}/create/gameVersion/{gameVersion}/gameType/{gameType}/queueId/{queueId}": {
      "post": "@{operationId=PostLolReplaysV1MetadataByGameIdCreateGameVersionByGameVersionGameTypeByGameTypeQueueIdByQueueId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-replays/v1/rofls/path": {
      "get": "@{operationId=GetLolReplaysV1RoflsPath; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-replays/v1/rofls/path/default": {
      "get": "@{operationId=GetLolReplaysV1RoflsPathDefault; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-replays/v1/rofls/scan": {
      "post": "@{operationId=PostLolReplaysV1RoflsScan; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-replays/v1/rofls/{gameId}/download": {
      "post": "@{operationId=PostLolReplaysV1RoflsByGameIdDownload; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-replays/v1/rofls/{gameId}/download/graceful": {
      "post": "@{operationId=PostLolReplaysV1RoflsByGameIdDownloadGraceful; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-replays/v1/rofls/{gameId}/watch": {
      "post": "@{operationId=PostLolReplaysV1RoflsByGameIdWatch; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-replays/v2/metadata/{gameId}/create": {
      "post": "@{operationId=PostLolReplaysV2MetadataByGameIdCreate; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rewards/v1/grants": {
      "get": "@{operationId=GetLolRewardsV1Grants; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rewards/v1/grants/{grantId}/select": {
      "post": "@{operationId=PostLolRewardsV1GrantsByGrantIdSelect; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rewards/v1/grants/{grantId}/view": {
      "patch": "@{operationId=PatchLolRewardsV1GrantsByGrantIdView; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rewards/v1/groups": {
      "get": "@{operationId=GetLolRewardsV1Groups; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rewards/v1/select-bulk": {
      "post": "@{operationId=PostLolRewardsV1SelectBulk; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rms/v1/champion-mastery-leaveup-update": {
      "get": "@{operationId=GetLolRmsV1ChampionMasteryLeaveupUpdate; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rms/v1/champion-mastery-leaveup-update/{id}": {
      "delete": "@{operationId=DeleteLolRmsV1ChampionMasteryLeaveupUpdateById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rso-auth/configuration/v3/ready-state": {
      "get": "@{operationId=GetLolRsoAuthConfigurationV3ReadyState; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rso-auth/v1/auth-hints/hint": {
      "delete": "@{operationId=DeleteLolRsoAuthV1AuthHintsHint; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolRsoAuthV1AuthHintsHint; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rso-auth/v1/authorization": {
      "delete": "@{operationId=DeleteLolRsoAuthV1Authorization; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolRsoAuthV1Authorization; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rso-auth/v1/authorization/access-token": {
      "get": "@{operationId=GetLolRsoAuthV1AuthorizationAccessToken; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rso-auth/v1/authorization/error": {
      "get": "@{operationId=GetLolRsoAuthV1AuthorizationError; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rso-auth/v1/authorization/gas": {
      "post": "@{operationId=PostLolRsoAuthV1AuthorizationGas; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rso-auth/v1/authorization/id-token": {
      "get": "@{operationId=GetLolRsoAuthV1AuthorizationIdToken; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rso-auth/v1/authorization/refresh": {
      "post": "@{operationId=PostLolRsoAuthV1AuthorizationRefresh; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rso-auth/v1/authorization/userinfo": {
      "get": "@{operationId=GetLolRsoAuthV1AuthorizationUserinfo; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolRsoAuthV1AuthorizationUserinfo; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rso-auth/v1/device-id": {
      "post": "@{operationId=PostLolRsoAuthV1DeviceId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rso-auth/v1/session": {
      "delete": "@{operationId=DeleteLolRsoAuthV1Session; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rso-auth/v1/status/{platformId}": {
      "get": "@{operationId=GetLolRsoAuthV1StatusByPlatformId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-rso-auth/v2/config": {
      "delete": "@{operationId=DeleteLolRsoAuthV2Config; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolRsoAuthV2Config; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-seasons/v1/allSeasons/product/{product}": {
      "get": "@{operationId=GetLolSeasonsV1AllSeasonsProductByProduct; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-seasons/v1/season/product/{product}": {
      "get": "@{operationId=GetLolSeasonsV1SeasonProductByProduct; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-service-status/v1/lcu-status": {
      "get": "@{operationId=GetLolServiceStatusV1LcuStatus; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-service-status/v1/ticker-messages": {
      "get": "@{operationId=GetLolServiceStatusV1TickerMessages; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-settings/v1/account/didreset": {
      "get": "@{operationId=GetLolSettingsV1AccountDidreset; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-settings/v1/account/save": {
      "post": "@{operationId=PostLolSettingsV1AccountSave; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-settings/v1/account/{category}": {
      "get": "@{operationId=GetLolSettingsV1AccountByCategory; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "patch": "@{operationId=PatchLolSettingsV1AccountByCategory; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolSettingsV1AccountByCategory; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-settings/v1/local/{category}": {
      "get": "@{operationId=GetLolSettingsV1LocalByCategory; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "patch": "@{operationId=PatchLolSettingsV1LocalByCategory; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-settings/v2/account/{ppType}/{category}": {
      "get": "@{operationId=GetLolSettingsV2AccountByPpTypeByCategory; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "patch": "@{operationId=PatchLolSettingsV2AccountByPpTypeByCategory; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolSettingsV2AccountByPpTypeByCategory; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-settings/v2/config": {
      "get": "@{operationId=GetLolSettingsV2Config; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-settings/v2/didreset/{ppType}": {
      "get": "@{operationId=GetLolSettingsV2DidresetByPpType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-settings/v2/local/{category}": {
      "get": "@{operationId=GetLolSettingsV2LocalByCategory; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "patch": "@{operationId=PatchLolSettingsV2LocalByCategory; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-settings/v2/ready": {
      "get": "@{operationId=GetLolSettingsV2Ready; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-settings/v2/reload/{ppType}": {
      "post": "@{operationId=PostLolSettingsV2ReloadByPpType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-shutdown/v1/notification": {
      "get": "@{operationId=GetLolShutdownV1Notification; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-simple-dialog-messages/v1/messages": {
      "get": "@{operationId=GetLolSimpleDialogMessagesV1Messages; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolSimpleDialogMessagesV1Messages; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-simple-dialog-messages/v1/messages/{messageId}": {
      "delete": "@{operationId=DeleteLolSimpleDialogMessagesV1MessagesByMessageId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-social-leaderboard/v1/leaderboard-next-update-time": {
      "get": "@{operationId=GetLolSocialLeaderboardV1LeaderboardNextUpdateTime; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-social-leaderboard/v1/social-leaderboard-data": {
      "get": "@{operationId=GetLolSocialLeaderboardV1SocialLeaderboardData; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-spectator/v1/buddy/spectate": {
      "post": "@{operationId=PostLolSpectatorV1BuddySpectate; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-spectator/v1/spectate": {
      "get": "@{operationId=GetLolSpectatorV1Spectate; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-spectator/v1/spectate/launch": {
      "post": "@{operationId=PostLolSpectatorV1SpectateLaunch; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-statstones/v1/eog-notifications/{gameId}": {
      "get": "@{operationId=GetLolStatstonesV1EogNotificationsByGameId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-statstones/v1/featured-champion-statstones/{championItemId}": {
      "get": "@{operationId=GetLolStatstonesV1FeaturedChampionStatstonesByChampionItemId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-statstones/v1/featured-champion-statstones/{championItemId}/{statstoneId}": {
      "post": "@{operationId=PostLolStatstonesV1FeaturedChampionStatstonesByChampionItemIdByStatstoneId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-statstones/v1/profile-summary/{puuid}": {
      "get": "@{operationId=GetLolStatstonesV1ProfileSummaryByPuuid; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-statstones/v1/statstone/{contentId}/owned": {
      "get": "@{operationId=GetLolStatstonesV1StatstoneByContentIdOwned; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-statstones/v1/statstones-enabled-queue-ids": {
      "get": "@{operationId=GetLolStatstonesV1StatstonesEnabledQueueIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-statstones/v1/vignette-notifications": {
      "delete": "@{operationId=DeleteLolStatstonesV1VignetteNotifications; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolStatstonesV1VignetteNotifications; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-statstones/v1/vignette-notifications/{key}": {
      "delete": "@{operationId=DeleteLolStatstonesV1VignetteNotificationsByKey; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-statstones/v2/player-statstones-self/{championItemId}": {
      "get": "@{operationId=GetLolStatstonesV2PlayerStatstonesSelfByChampionItemId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-statstones/v2/player-summary-self": {
      "get": "@{operationId=GetLolStatstonesV2PlayerSummarySelf; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/catalog": {
      "get": "@{operationId=GetLolStoreV1Catalog; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/catalog/items/skip-cache": {
      "get": "@{operationId=GetLolStoreV1CatalogItemsSkipCache; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/catalog/sales": {
      "get": "@{operationId=GetLolStoreV1CatalogSales; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/catalog/{inventoryType}": {
      "get": "@{operationId=GetLolStoreV1CatalogByInventoryType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/catalogByInstanceIds": {
      "get": "@{operationId=GetLolStoreV1CatalogByInstanceIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/getStoreUrl": {
      "get": "@{operationId=GetLolStoreV1GetStoreUrl; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/giftablefriends": {
      "get": "@{operationId=GetLolStoreV1Giftablefriends; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/itemKeysFromInstanceIds": {
      "get": "@{operationId=GetLolStoreV1ItemKeysFromInstanceIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/itemKeysFromOfferIds": {
      "get": "@{operationId=GetLolStoreV1ItemKeysFromOfferIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/lastPage": {
      "get": "@{operationId=GetLolStoreV1LastPage; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolStoreV1LastPage; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/notifications/acknowledge": {
      "post": "@{operationId=PostLolStoreV1NotificationsAcknowledge; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/offers": {
      "get": "@{operationId=GetLolStoreV1Offers; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/offers/{offerId}": {
      "get": "@{operationId=GetLolStoreV1OffersByOfferId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/order-notifications": {
      "get": "@{operationId=GetLolStoreV1OrderNotifications; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/order-notifications/{id}": {
      "get": "@{operationId=GetLolStoreV1OrderNotificationsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/paymentDetails": {
      "get": "@{operationId=GetLolStoreV1PaymentDetails; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/skins/{skinId}": {
      "get": "@{operationId=GetLolStoreV1SkinsBySkinId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/status": {
      "get": "@{operationId=GetLolStoreV1Status; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/store-ready": {
      "get": "@{operationId=GetLolStoreV1StoreReady; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v1/{pageType}": {
      "get": "@{operationId=GetLolStoreV1ByPageType; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v2/offers": {
      "get": "@{operationId=GetLolStoreV2Offers; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-store/v3/purchase": {
      "post": "@{operationId=PostLolStoreV3Purchase; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-suggested-players/v1/reported-player": {
      "post": "@{operationId=PostLolSuggestedPlayersV1ReportedPlayer; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-suggested-players/v1/suggested-players": {
      "get": "@{operationId=GetLolSuggestedPlayersV1SuggestedPlayers; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-suggested-players/v1/suggested-players/{summonerId}": {
      "delete": "@{operationId=DeleteLolSuggestedPlayersV1SuggestedPlayersBySummonerId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-suggested-players/v1/victorious-comrade": {
      "post": "@{operationId=PostLolSuggestedPlayersV1VictoriousComrade; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/check-name-availability-new-summoners/{name}": {
      "get": "@{operationId=GetLolSummonerV1CheckNameAvailabilityNewSummonersByName; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/check-name-availability/{name}": {
      "get": "@{operationId=GetLolSummonerV1CheckNameAvailabilityByName; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/current-alias-state": {
      "get": "@{operationId=GetLolSummonerV1CurrentAliasState; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/current-summoner": {
      "get": "@{operationId=GetLolSummonerV1CurrentSummoner; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/current-summoner/account-and-summoner-ids": {
      "get": "@{operationId=GetLolSummonerV1CurrentSummonerAccountAndSummonerIds; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/current-summoner/autofill": {
      "get": "@{operationId=GetLolSummonerV1CurrentSummonerAutofill; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/current-summoner/icon": {
      "put": "@{operationId=PutLolSummonerV1CurrentSummonerIcon; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/current-summoner/jwt": {
      "get": "@{operationId=GetLolSummonerV1CurrentSummonerJwt; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/current-summoner/name": {
      "post": "@{operationId=PostLolSummonerV1CurrentSummonerName; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/current-summoner/profile-privacy": {
      "get": "@{operationId=GetLolSummonerV1CurrentSummonerProfilePrivacy; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutLolSummonerV1CurrentSummonerProfilePrivacy; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/current-summoner/rerollPoints": {
      "get": "@{operationId=GetLolSummonerV1CurrentSummonerRerollPoints; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/current-summoner/summoner-profile": {
      "get": "@{operationId=GetLolSummonerV1CurrentSummonerSummonerProfile; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolSummonerV1CurrentSummonerSummonerProfile; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/player-name-mode": {
      "get": "@{operationId=GetLolSummonerV1PlayerNameMode; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/profile-privacy-enabled": {
      "get": "@{operationId=GetLolSummonerV1ProfilePrivacyEnabled; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/save-alias": {
      "post": "@{operationId=PostLolSummonerV1SaveAlias; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/status": {
      "get": "@{operationId=GetLolSummonerV1Status; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/summoner-profile": {
      "get": "@{operationId=GetLolSummonerV1SummonerProfile; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/summoner-requests-ready": {
      "get": "@{operationId=GetLolSummonerV1SummonerRequestsReady; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/summoners": {
      "get": "@{operationId=GetLolSummonerV1Summoners; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolSummonerV1Summoners; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/summoners-by-puuid-cached/{puuid}": {
      "get": "@{operationId=GetLolSummonerV1SummonersByPuuidCachedByPuuid; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/summoners/{id}": {
      "get": "@{operationId=GetLolSummonerV1SummonersById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v1/validate-alias": {
      "post": "@{operationId=PostLolSummonerV1ValidateAlias; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v2/summoner-icons": {
      "get": "@{operationId=GetLolSummonerV2SummonerIcons; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v2/summoner-names": {
      "get": "@{operationId=GetLolSummonerV2SummonerNames; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v2/summoners": {
      "get": "@{operationId=GetLolSummonerV2Summoners; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v2/summoners/names": {
      "post": "@{operationId=PostLolSummonerV2SummonersNames; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v2/summoners/puuid": {
      "post": "@{operationId=PostLolSummonerV2SummonersPuuid; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-summoner/v2/summoners/puuid/{puuid}": {
      "get": "@{operationId=GetLolSummonerV2SummonersPuuidByPuuid; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tastes/v1/ready": {
      "get": "@{operationId=GetLolTastesV1Ready; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tastes/v1/skins-model": {
      "get": "@{operationId=GetLolTastesV1SkinsModel; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tastes/v1/tft-overview-model": {
      "get": "@{operationId=GetLolTastesV1TftOverviewModel; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-pass/v1/battle-pass": {
      "get": "@{operationId=GetLolTftPassV1BattlePass; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-pass/v1/enabled": {
      "get": "@{operationId=GetLolTftPassV1Enabled; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-pass/v1/event-pass": {
      "get": "@{operationId=GetLolTftPassV1EventPass; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-pass/v1/pass/{id}": {
      "post": "@{operationId=PostLolTftPassV1PassById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-pass/v1/passes": {
      "post": "@{operationId=PostLolTftPassV1Passes; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-pass/v1/reward-notification": {
      "get": "@{operationId=GetLolTftPassV1RewardNotification; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-team-planner/v1/config": {
      "get": "@{operationId=GetLolTftTeamPlannerV1Config; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-team-planner/v1/team": {
      "put": "@{operationId=PutLolTftTeamPlannerV1Team; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-team-planner/v1/team/champions": {
      "delete": "@{operationId=DeleteLolTftTeamPlannerV1TeamChampions; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "patch": "@{operationId=PatchLolTftTeamPlannerV1TeamChampions; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-team-planner/v1/team/champions/{index}": {
      "delete": "@{operationId=DeleteLolTftTeamPlannerV1TeamChampionsByIndex; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolTftTeamPlannerV1TeamChampionsByIndex; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-team-planner/v1/team/championsById/{championName}": {
      "delete": "@{operationId=DeleteLolTftTeamPlannerV1TeamChampionsByIdByChampionName; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostLolTftTeamPlannerV1TeamChampionsByIdByChampionName; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-team-planner/v1/team/dirty": {
      "delete": "@{operationId=DeleteLolTftTeamPlannerV1TeamDirty; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolTftTeamPlannerV1TeamDirty; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-team-planner/v1/team/local": {
      "get": "@{operationId=GetLolTftTeamPlannerV1TeamLocal; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-troves/v1/banners": {
      "get": "@{operationId=GetLolTftTrovesV1Banners; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-troves/v1/config": {
      "get": "@{operationId=GetLolTftTrovesV1Config; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-troves/v1/loot-odds/{dropTableId}": {
      "get": "@{operationId=GetLolTftTrovesV1LootOddsByDropTableId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-troves/v1/purchase": {
      "post": "@{operationId=PostLolTftTrovesV1Purchase; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-troves/v1/roll": {
      "post": "@{operationId=PostLolTftTrovesV1Roll; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-troves/v1/roll-rewards": {
      "delete": "@{operationId=DeleteLolTftTrovesV1RollRewards; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetLolTftTrovesV1RollRewards; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft-troves/v1/status-notifications": {
      "get": "@{operationId=GetLolTftTrovesV1StatusNotifications; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft/v1/tft/battlePassHub": {
      "get": "@{operationId=GetLolTftV1TftBattlePassHub; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft/v1/tft/directToHub": {
      "get": "@{operationId=GetLolTftV1TftDirectToHub; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft/v1/tft/events": {
      "get": "@{operationId=GetLolTftV1TftEvents; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft/v1/tft/homeHub": {
      "get": "@{operationId=GetLolTftV1TftHomeHub; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft/v1/tft/homeHub/redirect": {
      "post": "@{operationId=PostLolTftV1TftHomeHubRedirect; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft/v1/tft/newsHub": {
      "get": "@{operationId=GetLolTftV1TftNewsHub; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft/v1/tft/promoButtons": {
      "get": "@{operationId=GetLolTftV1TftPromoButtons; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft/v1/tft_experiment_bucket": {
      "put": "@{operationId=PutLolTftV1TftExperimentBucket; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-tft/v2/tft/battlepass": {
      "get": "@{operationId=GetLolTftV2TftBattlepass; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-trophies/v1/current-summoner/trophies/profile": {
      "get": "@{operationId=GetLolTrophiesV1CurrentSummonerTrophiesProfile; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-trophies/v1/players/{puuid}/trophies/profile": {
      "get": "@{operationId=GetLolTrophiesV1PlayersByPuuidTrophiesProfile; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-yourshop/v1/has-permissions": {
      "get": "@{operationId=GetLolYourshopV1HasPermissions; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-yourshop/v1/modal": {
      "get": "@{operationId=GetLolYourshopV1Modal; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-yourshop/v1/offers": {
      "get": "@{operationId=GetLolYourshopV1Offers; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-yourshop/v1/offers/{id}/purchase": {
      "post": "@{operationId=PostLolYourshopV1OffersByIdPurchase; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-yourshop/v1/offers/{id}/reveal": {
      "post": "@{operationId=PostLolYourshopV1OffersByIdReveal; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-yourshop/v1/permissions": {
      "post": "@{operationId=PostLolYourshopV1Permissions; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-yourshop/v1/ready": {
      "get": "@{operationId=GetLolYourshopV1Ready; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-yourshop/v1/status": {
      "get": "@{operationId=GetLolYourshopV1Status; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/lol-yourshop/v1/themed": {
      "get": "@{operationId=GetLolYourshopV1Themed; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/memory/v1/fe-processes-ready": {
      "get": "@{operationId=GetMemoryV1FeProcessesReady; parameters=System.Object[]; responses=; summary=Returns whether or not the frontend processes are ready; tags=System.Object[]}"
    },
    "/memory/v1/notify-fe-processes-ready": {
      "post": "@{operationId=PostMemoryV1NotifyFeProcessesReady; parameters=System.Object[]; responses=; summary=Sends an event that the frontend processes are ready; tags=System.Object[]}"
    },
    "/memory/v1/snapshot": {
      "post": "@{operationId=PostMemoryV1Snapshot; parameters=System.Object[]; responses=; summary=Sends current memory usage info to telemetry.; tags=System.Object[]}"
    },
    "/patcher/v1/notifications": {
      "get": "@{operationId=GetPatcherV1Notifications; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostPatcherV1Notifications; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/patcher/v1/notifications/{id}": {
      "delete": "@{operationId=DeletePatcherV1NotificationsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/patcher/v1/p2p/status": {
      "get": "@{operationId=GetPatcherV1P2pStatus; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "patch": "@{operationId=PatchPatcherV1P2pStatus; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/patcher/v1/products": {
      "get": "@{operationId=GetPatcherV1Products; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/patcher/v1/products/{product-id}": {
      "delete": "@{operationId=DeletePatcherV1ProductsByProductId; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/patcher/v1/products/{product-id}/detect-corruption-request": {
      "post": "@{operationId=PostPatcherV1ProductsByProductIdDetectCorruptionRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/patcher/v1/products/{product-id}/partial-repair-request": {
      "post": "@{operationId=PostPatcherV1ProductsByProductIdPartialRepairRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/patcher/v1/products/{product-id}/paths": {
      "get": "@{operationId=GetPatcherV1ProductsByProductIdPaths; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/patcher/v1/products/{product-id}/signal-start-patching-delayed": {
      "post": "@{operationId=PostPatcherV1ProductsByProductIdSignalStartPatchingDelayed; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/patcher/v1/products/{product-id}/start-checking-request": {
      "post": "@{operationId=PostPatcherV1ProductsByProductIdStartCheckingRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/patcher/v1/products/{product-id}/start-patching-request": {
      "post": "@{operationId=PostPatcherV1ProductsByProductIdStartPatchingRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/patcher/v1/products/{product-id}/state": {
      "get": "@{operationId=GetPatcherV1ProductsByProductIdState; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/patcher/v1/products/{product-id}/stop-checking-request": {
      "post": "@{operationId=PostPatcherV1ProductsByProductIdStopCheckingRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/patcher/v1/products/{product-id}/stop-patching-request": {
      "post": "@{operationId=PostPatcherV1ProductsByProductIdStopPatchingRequest; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/patcher/v1/products/{product-id}/tags": {
      "get": "@{operationId=GetPatcherV1ProductsByProductIdTags; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/patcher/v1/status": {
      "get": "@{operationId=GetPatcherV1Status; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/patcher/v1/ux": {
      "put": "@{operationId=PutPatcherV1Ux; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/payments/v1/pmc-start-url": {
      "post": "@{operationId=PostPaymentsV1PmcStartUrl; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/performance/v1/memory": {
      "get": "@{operationId=GetPerformanceV1Memory; parameters=System.Object[]; responses=; summary=Returns process memory status; tags=System.Object[]}"
    },
    "/performance/v1/process/{processId}": {
      "post": "@{operationId=PostPerformanceV1ProcessByProcessId; parameters=System.Object[]; responses=; summary=Registers the process and includes it with the performance information.; tags=System.Object[]}"
    },
    "/performance/v1/report": {
      "get": "@{operationId=GetPerformanceV1Report; parameters=System.Object[]; responses=; summary=Returns the various performance information for the cef processes; tags=System.Object[]}"
    },
    "/performance/v1/report/restart": {
      "post": "@{operationId=PostPerformanceV1ReportRestart; parameters=System.Object[]; responses=; summary=Restarts the CPU timing information and returns the results from PerfReportProcesses; tags=System.Object[]}"
    },
    "/performance/v1/system-info": {
      "get": "@{operationId=GetPerformanceV1SystemInfo; parameters=System.Object[]; responses=; summary=Returns hardware and software specs for the machine the client is running on.; tags=System.Object[]}"
    },
    "/player-notifications/v1/config": {
      "get": "@{operationId=GetPlayerNotificationsV1Config; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutPlayerNotificationsV1Config; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/player-notifications/v1/notifications": {
      "get": "@{operationId=GetPlayerNotificationsV1Notifications; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostPlayerNotificationsV1Notifications; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/player-notifications/v1/notifications/{id}": {
      "delete": "@{operationId=DeletePlayerNotificationsV1NotificationsById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetPlayerNotificationsV1NotificationsById; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "put": "@{operationId=PutPlayerNotificationsV1NotificationsById; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/plugin-manager/v1/external-plugins/availability": {
      "get": "@{operationId=GetPluginManagerV1ExternalPluginsAvailability; parameters=System.Object[]; responses=; summary=Get the status of the external plugin connection.; tags=System.Object[]}"
    },
    "/plugin-manager/v1/status": {
      "get": "@{operationId=GetPluginManagerV1Status; parameters=System.Object[]; responses=; summary=Get the status of the plugin manager.; tags=System.Object[]}"
    },
    "/plugin-manager/v2/descriptions": {
      "get": "@{operationId=GetPluginManagerV2Descriptions; parameters=System.Object[]; responses=; summary=Get all plugin descriptions.; tags=System.Object[]}"
    },
    "/plugin-manager/v2/descriptions/{plugin}": {
      "get": "@{operationId=GetPluginManagerV2DescriptionsByPlugin; parameters=System.Object[]; responses=; summary=Get a plugin description.; tags=System.Object[]}"
    },
    "/plugin-manager/v2/plugins": {
      "get": "@{operationId=GetPluginManagerV2Plugins; parameters=System.Object[]; responses=; summary=Get diagnostic information for all plugins.; tags=System.Object[]}"
    },
    "/plugin-manager/v2/plugins/{plugin}": {
      "get": "@{operationId=GetPluginManagerV2PluginsByPlugin; parameters=System.Object[]; responses=; summary=Get diagnostic information for a single plugin.; tags=System.Object[]}"
    },
    "/plugin-manager/v3/plugins-manifest": {
      "get": "@{operationId=GetPluginManagerV3PluginsManifest; parameters=System.Object[]; responses=; summary=Get the plugin manifest.; tags=System.Object[]}"
    },
    "/process-control/v1/process": {
      "get": "@{operationId=GetProcessControlV1Process; parameters=System.Object[]; responses=; summary=Returns information about the process-control.; tags=System.Object[]}"
    },
    "/process-control/v1/process/quit": {
      "post": "@{operationId=PostProcessControlV1ProcessQuit; parameters=System.Object[]; responses=; summary=Quits the application.; tags=System.Object[]}"
    },
    "/riot-messaging-service/v1/connect": {
      "delete": "@{operationId=DeleteRiotMessagingServiceV1Connect; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostRiotMessagingServiceV1Connect; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/riot-messaging-service/v1/entitlements": {
      "delete": "@{operationId=DeleteRiotMessagingServiceV1Entitlements; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "post": "@{operationId=PostRiotMessagingServiceV1Entitlements; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/riot-messaging-service/v1/message/{a}": {
      "get": "@{operationId=GetRiotMessagingServiceV1MessageByA; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/riot-messaging-service/v1/message/{a}/{b}": {
      "get": "@{operationId=GetRiotMessagingServiceV1MessageByAByB; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/riot-messaging-service/v1/message/{a}/{b}/{c}": {
      "get": "@{operationId=GetRiotMessagingServiceV1MessageByAByBByC; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/riot-messaging-service/v1/message/{a}/{b}/{c}/{d}": {
      "get": "@{operationId=GetRiotMessagingServiceV1MessageByAByBByCByD; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/riot-messaging-service/v1/message/{a}/{b}/{c}/{d}/{e}": {
      "get": "@{operationId=GetRiotMessagingServiceV1MessageByAByBByCByDByE; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/riot-messaging-service/v1/message/{a}/{b}/{c}/{d}/{e}/{f}": {
      "get": "@{operationId=GetRiotMessagingServiceV1MessageByAByBByCByDByEByF; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/riot-messaging-service/v1/session": {
      "delete": "@{operationId=DeleteRiotMessagingServiceV1Session; parameters=System.Object[]; responses=; tags=System.Object[]}",
      "get": "@{operationId=GetRiotMessagingServiceV1Session; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/riot-messaging-service/v1/state": {
      "get": "@{operationId=GetRiotMessagingServiceV1State; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/riotclient/addorupdatemetric": {
      "post": "@{operationId=PostRiotclientAddorupdatemetric; parameters=System.Object[]; responses=; summary=Adds or Updates a Metric; tags=System.Object[]}"
    },
    "/riotclient/affinity": {
      "delete": "@{operationId=DeleteRiotclientAffinity; parameters=System.Object[]; responses=; summary=Deletes the current runtime affinity of the application.; tags=System.Object[]}",
      "get": "@{operationId=GetRiotclientAffinity; parameters=System.Object[]; responses=; summary=Get the current runtime affinity of the application.; tags=System.Object[]}",
      "post": "@{operationId=PostRiotclientAffinity; parameters=System.Object[]; responses=; summary=Sets the current runtime affinity of the application.; tags=System.Object[]}"
    },
    "/riotclient/app-name": {
      "get": "@{operationId=GetRiotclientAppName; parameters=System.Object[]; responses=; summary=Application name without file extension; tags=System.Object[]}"
    },
    "/riotclient/app-port": {
      "get": "@{operationId=GetRiotclientAppPort; parameters=System.Object[]; responses=; summary=Get the TCP port number that the remoting server is listening on.; tags=System.Object[]}"
    },
    "/riotclient/auth-token": {
      "get": "@{operationId=GetRiotclientAuthToken; parameters=System.Object[]; responses=; summary=Return the auth token used by the remoting server; tags=System.Object[]}"
    },
    "/riotclient/command-line-args": {
      "get": "@{operationId=GetRiotclientCommandLineArgs; parameters=System.Object[]; responses=; summary=Get the command line parameters for the application; tags=System.Object[]}"
    },
    "/riotclient/get_region_locale": {
      "get": "@{operationId=GetRiotclientGetRegionLocale; parameters=System.Object[]; responses=; summary=Get the current region and locale.; tags=System.Object[]}"
    },
    "/riotclient/kill-and-restart-ux": {
      "post": "@{operationId=PostRiotclientKillAndRestartUx; parameters=System.Object[]; responses=; summary=Kills the ux process and restarts it. Used only when the ux process crashes.; tags=System.Object[]}"
    },
    "/riotclient/kill-ux": {
      "post": "@{operationId=PostRiotclientKillUx; parameters=System.Object[]; responses=; summary=Kills the ux process.; tags=System.Object[]}"
    },
    "/riotclient/launch-ux": {
      "post": "@{operationId=PostRiotclientLaunchUx; parameters=System.Object[]; responses=; summary=Launches the ux process.; tags=System.Object[]}"
    },
    "/riotclient/machine-id": {
      "get": "@{operationId=GetRiotclientMachineId; parameters=System.Object[]; responses=; summary=Base64 encoded uuid identifying the user's machine; tags=System.Object[]}"
    },
    "/riotclient/new-args": {
      "post": "@{operationId=PostRiotclientNewArgs; parameters=System.Object[]; responses=; summary=Endpoint for passing in new data.; tags=System.Object[]}"
    },
    "/riotclient/open-url-in-browser": {
      "post": "@{description=Open a URL in a browser.; operationId=PostRiotclientOpenUrlInBrowser; parameters=System.Object[]; responses=; summary=Opens a URL in the player's system browser. The browser will use its existing cookies to determine if the player is logged in, meaning that using this API can result in three differenet cases:\n\n* The player is signed in with the current account\n* The player is signed in with a different account\n* The player is not signed in at all.\n\nIn order to ensure the player is signed in with the same account as the client, leverage Player Platform's [authentication redirect](https://platform.riotgames.com/docs/authenticate-players/how-rso-works/sign-in-on-mobile/authentication-redirect) feature.; tags=System.Object[]}"
    },
    "/riotclient/region-locale": {
      "get": "@{operationId=GetRiotclientRegionLocale; parameters=System.Object[]; responses=; summary=Get the current region and locale.; tags=System.Object[]}"
    },
    "/riotclient/show-openapi": {
      "post": "@{operationId=PostRiotclientShowOpenapi; parameters=System.Object[]; responses=; summary=Opens the client's API documentation in a system browser.; tags=System.Object[]}"
    },
    "/riotclient/show-swagger": {
      "post": "@{operationId=PostRiotclientShowSwagger; parameters=System.Object[]; responses=; summary=Open swagger in the default browser.; tags=System.Object[]}"
    },
    "/riotclient/splash": {
      "delete": "@{operationId=DeleteRiotclientSplash; parameters=System.Object[]; responses=; summary=Hide the splash screen.; tags=System.Object[]}",
      "put": "@{operationId=PutRiotclientSplash; parameters=System.Object[]; responses=; summary=Show the splash screen.; tags=System.Object[]}"
    },
    "/riotclient/system-info/v1/basic-info": {
      "get": "@{operationId=GetRiotclientSystemInfoV1BasicInfo; parameters=System.Object[]; responses=; summary=Get basic system information: OS, memory, processor speed, and number of physical cores; tags=System.Object[]}"
    },
    "/riotclient/trace": {
      "get": "@{operationId=GetRiotclientTrace; parameters=System.Object[]; responses=; summary=Retrieves a completed scheduler trace.; tags=System.Object[]}"
    },
    "/riotclient/unload": {
      "post": "@{operationId=PostRiotclientUnload; parameters=System.Object[]; responses=; summary=Unloads the UX process; tags=System.Object[]}"
    },
    "/riotclient/ux-allow-foreground": {
      "post": "@{operationId=PostRiotclientUxAllowForeground; parameters=System.Object[]; responses=; summary=Allows the background process to launch the game into the foregound.; tags=System.Object[]}"
    },
    "/riotclient/ux-crash-count": {
      "get": "@{operationId=GetRiotclientUxCrashCount; parameters=System.Object[]; responses=; summary=Returns whether the ux has crashed or not; tags=System.Object[]}"
    },
    "/riotclient/ux-flash": {
      "post": "@{operationId=PostRiotclientUxFlash; parameters=System.Object[]; responses=; summary=Flash the ux process' main window and the taskbar/dock icon, if they exist.; tags=System.Object[]}"
    },
    "/riotclient/ux-load-complete": {
      "put": "@{operationId=PutRiotclientUxLoadComplete; parameters=System.Object[]; responses=; summary=Ux notification that it has completed loading the main window.; tags=System.Object[]}"
    },
    "/riotclient/ux-minimize": {
      "post": "@{operationId=PostRiotclientUxMinimize; parameters=System.Object[]; responses=; summary=Minimize the ux process and all its windows if it exists. This does not kill the ux.; tags=System.Object[]}"
    },
    "/riotclient/ux-show": {
      "post": "@{operationId=PostRiotclientUxShow; parameters=System.Object[]; responses=; summary=Shows the ux process if it exists; create and show if it does not.; tags=System.Object[]}"
    },
    "/riotclient/ux-state": {
      "get": "@{operationId=GetRiotclientUxState; parameters=System.Object[]; responses=; summary=Get the current Ux state.; tags=System.Object[]}"
    },
    "/riotclient/ux-state/ack": {
      "put": "@{operationId=PutRiotclientUxStateAck; parameters=System.Object[]; responses=; summary=Ux acknowledges the update to the Ux state.; tags=System.Object[]}"
    },
    "/riotclient/v1/auth-tokens/{authToken}": {
      "delete": "@{operationId=DeleteRiotclientV1AuthTokensByAuthToken; parameters=System.Object[]; responses=; summary=Unregister an existing auth token.; tags=System.Object[]}",
      "put": "@{operationId=PutRiotclientV1AuthTokensByAuthToken; parameters=System.Object[]; responses=; summary=Register an auth token.  This is any alpha-numeric string that will be used as a password with the `riot` user when making requests.; tags=System.Object[]}"
    },
    "/riotclient/v1/crash-reporting/environment": {
      "get": "@{operationId=GetRiotclientV1CrashReportingEnvironment; parameters=System.Object[]; responses=; summary=Get the crash reporting environment identifier.; tags=System.Object[]}",
      "put": "@{operationId=PutRiotclientV1CrashReportingEnvironment; parameters=System.Object[]; responses=; summary=Tags the crash with an environment so it can be filtered more easily.; tags=System.Object[]}"
    },
    "/riotclient/v1/crash-reporting/logs": {
      "post": "@{operationId=PostRiotclientV1CrashReportingLogs; parameters=System.Object[]; responses=; summary=Adds the enclosed log to the app's crash report.; tags=System.Object[]}"
    },
    "/riotclient/v1/elevation-requests": {
      "post": "@{operationId=PostRiotclientV1ElevationRequests; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/riotclient/zoom-scale": {
      "get": "@{operationId=GetRiotclientZoomScale; parameters=System.Object[]; responses=; summary=Gets the last known posted zoom-scale value.; tags=System.Object[]}",
      "post": "@{operationId=PostRiotclientZoomScale; parameters=System.Object[]; responses=; summary=Handles changing the zoom scale value.; tags=System.Object[]}"
    },
    "/sanitizer/v1/containsSanitized": {
      "post": "@{operationId=PostSanitizerV1ContainsSanitized; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/sanitizer/v1/sanitize": {
      "post": "@{operationId=PostSanitizerV1Sanitize; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/sanitizer/v1/status": {
      "get": "@{operationId=GetSanitizerV1Status; parameters=System.Object[]; responses=; tags=System.Object[]}"
    },
    "/swagger/v1/api-docs": {
      "get": "@{operationId=Http2ApiDocsV1; parameters=System.Object[]; responses=; summary=Retrieves the API documentation resource listing; tags=System.Object[]}"
    },
    "/swagger/v1/api-docs/{api}": {
      "get": "@{operationId=HttpApiDeclarationV1; parameters=System.Object[]; responses=; summary=Retrieves the API declaration for a supported API; tags=System.Object[]}"
    },
    "/swagger/v2/swagger.json": {
      "get": "@{operationId=Http2ApiDocsV2; parameters=System.Object[]; responses=; summary=Retrieves the API documentation; tags=System.Object[]}"
    },
    "/swagger/v3/openapi.json": {
      "get": "@{operationId=HttpApiDocsV3; parameters=System.Object[]; responses=; summary=Retrieves the API documentation; tags=System.Object[]}"
    },
    "/system/v1/builds": {
      "get": "@{operationId=GetSystemV1Builds; parameters=System.Object[]; responses=; summary=Information about the current artifacts that make up this build; tags=System.Object[]}"
    },
    "/telemetry/v1/application-start-time": {
      "get": "@{operationId=GetTelemetryV1ApplicationStartTime; parameters=System.Object[]; responses=; summary=Gets the millisecond UNIX timestamp of when the application was started.; tags=System.Object[]}"
    },
    "/telemetry/v1/common-data/{key}": {
      "post": "@{operationId=PostTelemetryV1CommonDataByKey; parameters=System.Object[]; responses=; summary=Adds/updates a common data key and value to be sent with every subsequent event.; tags=System.Object[]}"
    },
    "/telemetry/v1/events-with-perf-info/{eventType}": {
      "post": "@{operationId=PostTelemetryV1EventsWithPerfInfoByEventType; parameters=System.Object[]; responses=; summary=Adds a new event to be sent to Dradis and/or other analytics/monitoring data sinks. This will include current performance information along with the passed in data. Each call will record the performance counters then reset them for use in the next call. All events will have their eventType prefixed with \"riot__rclient__\"; tags=System.Object[]}"
    },
    "/telemetry/v1/events/{eventType}": {
      "post": "@{operationId=PostTelemetryV1EventsByEventType; parameters=System.Object[]; responses=; summary=Adds a new event to be sent to Dradis and/or other analytics/monitoring data sinks. All events will have their eventType prefixed with \"riot__rclient__\"; tags=System.Object[]}"
    },
    "/telemetry/v3/events-once/{eventType}/{onceTag}": {
      "post": "@{operationId=PostTelemetryV3EventsOnceByEventTypeByOnceTag; parameters=System.Object[]; responses=; summary=Adds a new event to be sent to Dradis and/or other analytics/monitoring data sinks using the Riot Data API that will be sent only once during this client executable run regardless of any javascript frontend restarts. All events will have their eventType prefixed with \"riot__rclient__\"; tags=System.Object[]}"
    },
    "/telemetry/v3/events/{eventType}": {
      "post": "@{operationId=PostTelemetryV3EventsByEventType; parameters=System.Object[]; responses=; summary=Adds a new event to be sent to Dradis and/or other analytics/monitoring data sinks using the Riot Data API. All events will have their eventType prefixed with \"riot__rclient__\"; tags=System.Object[]}"
    },
    "/telemetry/v3/slis/add-bool-diagnostic": {
      "patch": "@{operationId=PatchTelemetryV3SlisAddBoolDiagnostic; parameters=System.Object[]; responses=; summary=Add bool diagnostic to be sent with SLIs.; tags=System.Object[]}"
    },
    "/telemetry/v3/slis/add-double-diagnostic": {
      "patch": "@{operationId=PatchTelemetryV3SlisAddDoubleDiagnostic; parameters=System.Object[]; responses=; summary=Add double diagnostic to be sent with SLIs.; tags=System.Object[]}"
    },
    "/telemetry/v3/slis/add-int-diagnostic": {
      "patch": "@{operationId=PatchTelemetryV3SlisAddIntDiagnostic; parameters=System.Object[]; responses=; summary=Add int diagnostic to be sent with SLIs.; tags=System.Object[]}"
    },
    "/telemetry/v3/slis/add-label": {
      "patch": "@{operationId=PatchTelemetryV3SlisAddLabel; parameters=System.Object[]; responses=; summary=Add label to be sent with SLIs.; tags=System.Object[]}"
    },
    "/telemetry/v3/slis/add-string-diagnostic": {
      "patch": "@{operationId=PatchTelemetryV3SlisAddStringDiagnostic; parameters=System.Object[]; responses=; summary=Add string diagnostic to be sent with SLIs.; tags=System.Object[]}"
    },
    "/telemetry/v3/slis/counts": {
      "post": "@{operationId=PostTelemetryV3SlisCounts; parameters=System.Object[]; responses=; summary=Report an SLI to the collector; tags=System.Object[]}"
    },
    "/telemetry/v3/uptime-tracking/notify-failure": {
      "post": "@{operationId=PostTelemetryV3UptimeTrackingNotifyFailure; parameters=System.Object[]; responses=; summary=Mark an availability item's operation as failure on uptime tracking mechanism.; tags=System.Object[]}"
    },
    "/telemetry/v3/uptime-tracking/notify-success": {
      "post": "@{operationId=PostTelemetryV3UptimeTrackingNotifySuccess; parameters=System.Object[]; responses=; summary=Mark an availability item's operation as success on uptime tracking mechanism.; tags=System.Object[]}"
    },
    "/tracing/v1/performance/{name}": {
      "delete": "@{operationId=DeleteTracingV1PerformanceByName; parameters=System.Object[]; responses=; summary=Ends recording of a performance metric.; tags=System.Object[]}",
      "post": "@{operationId=PostTracingV1PerformanceByName; parameters=System.Object[]; responses=; summary=Starts recording of a performance metric.; tags=System.Object[]}"
    },
    "/tracing/v1/trace/critical-flow": {
      "post": "@{operationId=PostTracingV1TraceCriticalFlow; parameters=System.Object[]; responses=; summary=Record a crtical flow event.; tags=System.Object[]}"
    },
    "/tracing/v1/trace/event": {
      "post": "@{operationId=PostTracingV1TraceEvent; parameters=System.Object[]; responses=; summary=Record a tracing event.; tags=System.Object[]}"
    },
    "/tracing/v1/trace/module": {
      "post": "@{operationId=PostTracingV1TraceModule; parameters=System.Object[]; responses=; summary=Record a module description.; tags=System.Object[]}"
    },
    "/tracing/v1/trace/non-timing-event/{eventName}": {
      "post": "@{operationId=PostTracingV1TraceNonTimingEventByEventName; parameters=System.Object[]; responses=; summary=Record a non timing telemetry event.; tags=System.Object[]}"
    },
    "/tracing/v1/trace/payloads/enabled": {
      "get": "@{operationId=GetTracingV1TracePayloadsEnabled; parameters=System.Object[]; responses=; summary=Returns whether payloads are included in the tracing log.; tags=System.Object[]}"
    },
    "/tracing/v1/trace/phase/begin": {
      "post": "@{operationId=PostTracingV1TracePhaseBegin; parameters=System.Object[]; responses=; summary=Record a tracing phase beginning.; tags=System.Object[]}"
    },
    "/tracing/v1/trace/phase/end": {
      "post": "@{operationId=PostTracingV1TracePhaseEnd; parameters=System.Object[]; responses=; summary=Record a tracing phase ending.; tags=System.Object[]}"
    },
    "/tracing/v1/trace/step-event": {
      "post": "@{operationId=PostTracingV1TraceStepEvent; parameters=System.Object[]; responses=; summary=Record a tracing step event.; tags=System.Object[]}"
    },
    "/tracing/v1/trace/time-series-event/{eventName}": {
      "delete": "@{operationId=DeleteTracingV1TraceTimeSeriesEventByEventName; parameters=System.Object[]; responses=; summary=Record the ending of a time series event.; tags=System.Object[]}",
      "post": "@{operationId=PostTracingV1TraceTimeSeriesEventByEventName; parameters=System.Object[]; responses=; summary=Record the beginning of a time series event.; tags=System.Object[]}"
    },
    "/tracing/v1/trace/time-series-event/{eventName}/marker/{markerName}": {
      "post": "@{operationId=PostTracingV1TraceTimeSeriesEventByEventNameMarkerByMarkerName; parameters=System.Object[]; responses=; summary=Record a marker within a time series event.; tags=System.Object[]}"
    },
    "/{plugin}/assets/{path}": {
      "get": "@{operationId=GetByPluginAssetsByPath; parameters=System.Object[]; responses=; summary=Download a backend asset; tags=System.Object[]}",
      "head": "@{operationId=HeadByPluginAssetsByPath; parameters=System.Object[]; responses=; summary=Download the header for a backend asset; tags=System.Object[]}"
    }
  },
  "produces": [
    "application/json",
    "application/x-yaml",
    "application/x-msgpack"
  ],
  "swagger": "2.0"
}
